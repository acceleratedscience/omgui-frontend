{
	"version": 3,
	"file": "miew.module.js",
	"sources": [
		"../../../node_modules/@babel/runtime/helpers/esm/typeof.js",
		"../../../node_modules/@babel/runtime/helpers/esm/classCallCheck.js",
		"../../../node_modules/@babel/runtime/helpers/esm/createClass.js",
		"../../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js",
		"../../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js",
		"../../../node_modules/@babel/runtime/helpers/esm/inherits.js",
		"../../../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js",
		"../../../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js",
		"../../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js",
		"../../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js",
		"../../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js",
		"../../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js",
		"../../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js",
		"../../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js",
		"../../../node_modules/spin.js/spin.js",
		"../src/Timer.js",
		"../src/gfx/Stats.js",
		"../../../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js",
		"../../../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js",
		"../../../node_modules/@babel/runtime/helpers/esm/construct.js",
		"../../../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js",
		"../src/utils/EventDispatcher.js",
		"../src/utils/logger.js",
		"../src/utils.js",
		"../src/utils/JobHandle.js",
		"../src/settings.js",
		"../src/options.js",
		"../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js",
		"../src/chem/Atom.js",
		"../src/chem/Element.js",
		"../src/chem/Bond.js",
		"../src/chem/Residue.js",
		"../src/chem/ResidueType.js",
		"../src/chem/Chain.js",
		"../src/chem/StructuralElement.js",
		"../src/chem/Helix.js",
		"../../../node_modules/@babel/runtime/helpers/esm/superPropBase.js",
		"../../../node_modules/@babel/runtime/helpers/esm/get.js",
		"../src/chem/Strand.js",
		"../src/chem/Sheet.js",
		"../src/chem/SGroup.js",
		"../src/utils/SelectionParser.js",
		"../src/chem/selectors/selectArgs.js",
		"../src/chem/selectors/selectorsBase.js",
		"../src/chem/selectors/selectOps.js",
		"../src/chem/selectors.js",
		"../src/chem/BiologicalUnit.js",
		"../src/chem/Assembly.js",
		"../src/chem/Component.js",
		"../src/chem/AtomPairs.js",
		"../src/chem/AutoBond.js",
		"../src/chem/AromaticLoopsMarker.js",
		"../src/chem/VoxelWorld.js",
		"../src/chem/HBondInfo.js",
		"../src/chem/SecondaryStructureMap.js",
		"../src/chem/Complex.js",
		"../src/chem/Volume.js",
		"../src/chem/Molecule.js",
		"../src/chem.js",
		"../src/gfx/CSS2DObject.js",
		"../src/gfx/RCGroup.js",
		"../src/gfx/gfxutils.js",
		"../src/Visual.js",
		"../../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js",
		"../../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js",
		"../../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js",
		"../../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js",
		"../src/utils/EntityList.js",
		"../src/utils/makeContextDependent.js",
		"../src/gfx/geometries/SphereCollisionGeo.js",
		"../src/gfx/geometries/InstancedSpheresGeometry.js",
		"../src/gfx/geometries/ChunkedObjectsGeometry.js",
		"../src/gfx/geometries/SimpleSpheresGeometry.js",
		"../src/gfx/geometries/Simple2CCylindersGeometry.js",
		"../src/gfx/geometries/CylinderBufferGeometry.js",
		"../src/gfx/geometries/Instanced2CCylindersGeometry.js",
		"../src/gfx/geometries/ExtrudedObjectsGeometry.js",
		"../src/gfx/geometries/ThickLinesGeometry.js",
		"../src/gfx/geometries/LinesGeometry.js",
		"../src/gfx/geometries/CylinderCollisionGeo.js",
		"../src/gfx/geometries/ChunkedLinesGeometry.js",
		"../src/gfx/geometries/TwoColorLinesGeometry.js",
		"../src/gfx/geometries/CrossGeometry.js",
		"../src/gfx/geometries/IsoSurfaceGeometry.js",
		"../src/gfx/geometries/IsoSurfaceMarchCube.js",
		"../src/gfx/geometries/IsoSurface.js",
		"../src/gfx/geometries/VolumeSurfaceGeometry.js",
		"../src/gfx/geometries/QuickSurfGeometry.js",
		"../src/gfx/geometries/ContactSurface.js",
		"../src/gfx/geometries/ContactSurfaceGeometry.js",
		"../src/gfx/geometries/IsoSurfaceAtomColored.js",
		"../src/gfx/geometries/IsosurfaceBuildNormals.js",
		"../src/gfx/geometries/IsoSurfaceGeo.js",
		"../src/gfx/geometries/SSIsosurfaceGeometry.js",
		"../src/gfx/geometries/LabelsGeometry.js",
		"../src/gfx/geometries/geometries.js",
		"../src/gfx/capabilities.js",
		"../src/gfx/noiseTexture.js",
		"../src/gfx/shaders/UberMaterial.js",
		"../src/gfx/meshes/UberObject.js",
		"../src/gfx/meshes/ZSpriteMesh.js",
		"../src/gfx/meshes/ZClippedMesh.js",
		"../src/gfx/meshes/TextMesh.js",
		"../src/gfx/meshes/SimpleMesh.js",
		"../src/gfx/meshes/ThickLineMesh.js",
		"../src/gfx/meshes/InstancedMesh.js",
		"../src/gfx/meshes/meshes.js",
		"../src/gfx/meshes/MeshCreator.js",
		"../src/gfx/meshes/TransformGroup.js",
		"../src/gfx/modes/groups/ChemGroup.js",
		"../src/gfx/modes/groups/AtomsGroup.js",
		"../src/gfx/modes/groups/AtomsSphereGroup.js",
		"../src/gfx/modes/groups/AtomsSurfaceGroup.js",
		"../src/gfx/modes/groups/AtomsSASSESGroupStub.js",
		"../src/gfx/modes/groups/AtomsTextGroup.js",
		"../src/gfx/modes/groups/AromaticGroup.js",
		"../src/gfx/modes/groups/AromaticTorusGroup.js",
		"../src/gfx/modes/groups/AromaticLinesGroup.js",
		"../src/gfx/modes/groups/ResiduesGroup.js",
		"../src/gfx/modes/groups/NucleicItemGroup.js",
		"../src/gfx/modes/groups/NucleicCylindersGroup.js",
		"../src/gfx/modes/groups/NucleicSpheresGroup.js",
		"../src/vendors/Smooth.js",
		"../src/gfx/modes/groups/CartoonHelper.js",
		"../src/gfx/modes/groups/ResiduesSubseqGroup.js",
		"../src/gfx/modes/groups/ResiduesTraceGroup.js",
		"../src/gfx/modes/groups/BondsGroup.js",
		"../src/gfx/modes/groups/BondsCylinderGroup.js",
		"../src/gfx/modes/groups/BondsLinesGroup.js",
		"../src/gfx/modes/groups/groups.js",
		"../src/gfx/modes/processors/AtomsProcessor.js",
		"../src/gfx/modes/processors/OrphanAtomsProcessor.js",
		"../src/gfx/modes/processors/ResiduesProcessor.js",
		"../src/gfx/modes/processors/NucleicProcessor.js",
		"../src/gfx/modes/processors/SubseqsProcessor.js",
		"../src/gfx/modes/processors/BondsProcessor.js",
		"../src/gfx/modes/processors/AromaticProcessor.js",
		"../src/gfx/modes/processors/processors.js",
		"../src/gfx/modes/groups/GroupsFactory.js",
		"../src/gfx/modes/Mode.js",
		"../src/gfx/modes/LinesMode.js",
		"../src/gfx/modes/LicoriceMode.js",
		"../src/gfx/modes/BallsAndSticksMode.js",
		"../src/gfx/modes/VanDerWaalsMode.js",
		"../src/gfx/modes/TraceMode.js",
		"../src/gfx/modes/TubeMode.js",
		"../src/gfx/modes/CartoonMode.js",
		"../src/gfx/modes/SurfaceMode.js",
		"../src/gfx/modes/QuickSurfaceMode.js",
		"../src/gfx/modes/IsoSurfaceMode.js",
		"../src/gfx/modes/IsoSurfaceSASMode.js",
		"../src/gfx/modes/IsoSurfaceSESMode.js",
		"../src/gfx/modes/ContactSurfaceMode.js",
		"../src/gfx/modes/TextMode.js",
		"../src/gfx/modes.js",
		"../src/gfx/palettes/Palette.js",
		"../src/gfx/palettes/cpkPalette.js",
		"../src/gfx/palettes/jmolPalette.js",
		"../src/gfx/palettes/vmdPalette.js",
		"../src/gfx/palettes.js",
		"../src/gfx/colorers/Colorer.js",
		"../src/gfx/colorers/ElementColorer.js",
		"../src/gfx/colorers/ResidueTypeColorer.js",
		"../src/gfx/colorers/SequenceColorer.js",
		"../src/gfx/colorers/ChainColorer.js",
		"../src/gfx/colorers/SecondaryStructureColorer.js",
		"../src/gfx/colorers/UniformColorer.js",
		"../src/gfx/colorers/ConditionalColorer.js",
		"../src/gfx/colorers/ConformationColorer.js",
		"../src/gfx/colorers/TemperatureColorer.js",
		"../src/gfx/colorers/OccupancyColorer.js",
		"../src/gfx/colorers/HydrophobicityColorer.js",
		"../src/gfx/colorers/MoleculeColorer.js",
		"../src/gfx/colorers/CarbonColorer.js",
		"../src/gfx/colorers.js",
		"../src/gfx/materials.js",
		"../src/gfx/meshutils.js",
		"../src/gfx/Representation.js",
		"../src/ComplexVisualEdit.js",
		"../src/ComplexVisual.js",
		"../src/gfx/shaders/VolumeMaterial.js",
		"../src/gfx/VolumeMesh.js",
		"../src/gfx/VolumeBounds.js",
		"../src/gfx/VolumeFarPlane.js",
		"../src/VolumeVisual.js",
		"../src/io/loaders/LoaderList.js",
		"../src/io/loaders/Loader.js",
		"../src/io/loaders/FileLoader.js",
		"../src/io/loaders/XHRLoader.js",
		"../src/io/loaders/ImmediateLoader.js",
		"../src/io/loaders.js",
		"../src/io/parsers/ParserList.js",
		"../src/io/parsers/Parser.js",
		"../src/io/parsers/pdb/Remark290.js",
		"../src/io/parsers/pdb/Remark350.js",
		"../src/io/parsers/PDBStream.js",
		"../src/io/parsers/PDBParser.js",
		"../src/io/parsers/CMLParser.js",
		"../src/vendors/mmtf.js",
		"../src/io/parsers/MMTFParser.js",
		"../src/io/parsers/ParsingError.js",
		"../src/io/parsers/readCIF.js",
		"../src/io/parsers/CIFParser.js",
		"../src/io/parsers/VolumeModel.js",
		"../src/io/parsers/CCP4Parser.js",
		"../src/io/parsers/XYZParser.js",
		"../src/io/parsers/PubChemParser.js",
		"../src/io/parsers/SDFStream.js",
		"../src/io/parsers/SDFParser.js",
		"../src/io/parsers/DSN6Parser.js",
		"../src/io/parsers/GROReader.js",
		"../src/io/parsers/GROParser.js",
		"../src/io/parsers/MOL2Parser.js",
		"../src/io/parsers.js",
		"../src/io/exporters/ExporterList.js",
		"../src/io/exporters/Exporter.js",
		"../src/io/exporters/PDBResult.js",
		"../src/io/exporters/PDBExporter.js",
		"../src/io/exporters/fbx/FBXModel.js",
		"../src/io/exporters/fbx/FBXGeometry.js",
		"../src/io/exporters/fbx/FBX1CGeometry.js",
		"../src/io/exporters/fbx/FBX2CCylinder.js",
		"../src/io/exporters/fbx/FBXInfoExtractor.js",
		"../src/io/exporters/fbx/FBXResult.js",
		"../src/io/exporters/FBXExporter.js",
		"../src/io/exporters.js",
		"../src/io/io.js",
		"../src/gfx/CSS2DRenderer.js",
		"../src/ui/ObjectControls.js",
		"../src/ui/Picker.js",
		"../src/gfx/Axes.js",
		"../src/gfx/FrameInfo.js",
		"../src/gfx/objects/SceneObject.js",
		"../src/gfx/objects/LinesObj.js",
		"../src/gfx/shaders/OutlineMaterial.js",
		"../src/gfx/shaders/FXAAMaterial.js",
		"../src/gfx/shaders/AOMaterial.js",
		"../src/gfx/shaders/AOHorBlurMaterial.js",
		"../src/gfx/shaders/AOVertBlurWithBlendMaterial.js",
		"../src/gfx/shaders/AnaglyphMaterial.js",
		"../src/gfx/ViewInterpolator.js",
		"../src/utils/Cookies.js",
		"../src/gfx/vr/createWebVRButton.js",
		"../src/gfx/vr/WebVRPoC.js",
		"../src/Miew.ts",
		"../src/utils/MiewCLIParser.js",
		"../src/utils/MiewCLIHelp.js",
		"../src/Miew-cli.js"
	],
	"sourcesContent": [
		"export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}",
		"export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}",
		"function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}",
		"export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}",
		"export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}",
		"import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  Object.defineProperty(subClass, \"prototype\", {\n    value: Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    }),\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}",
		"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}",
		"export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}",
		"export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}",
		"export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}",
		"export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}",
		"import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}",
		"export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}",
		"import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}",
		"var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar defaults = {\r\n    lines: 12,\r\n    length: 7,\r\n    width: 5,\r\n    radius: 10,\r\n    scale: 1.0,\r\n    corners: 1,\r\n    color: '#000',\r\n    fadeColor: 'transparent',\r\n    animation: 'spinner-line-fade-default',\r\n    rotate: 0,\r\n    direction: 1,\r\n    speed: 1,\r\n    zIndex: 2e9,\r\n    className: 'spinner',\r\n    top: '50%',\r\n    left: '50%',\r\n    shadow: '0 0 1px transparent',\r\n    position: 'absolute',\r\n};\r\nvar Spinner = /** @class */ (function () {\r\n    function Spinner(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        this.opts = __assign(__assign({}, defaults), opts);\r\n    }\r\n    /**\r\n     * Adds the spinner to the given target element. If this instance is already\r\n     * spinning, it is automatically removed from its previous target by calling\r\n     * stop() internally.\r\n     */\r\n    Spinner.prototype.spin = function (target) {\r\n        this.stop();\r\n        this.el = document.createElement('div');\r\n        this.el.className = this.opts.className;\r\n        this.el.setAttribute('role', 'progressbar');\r\n        css(this.el, {\r\n            position: this.opts.position,\r\n            width: 0,\r\n            zIndex: this.opts.zIndex,\r\n            left: this.opts.left,\r\n            top: this.opts.top,\r\n            transform: \"scale(\" + this.opts.scale + \")\",\r\n        });\r\n        if (target) {\r\n            target.insertBefore(this.el, target.firstChild || null);\r\n        }\r\n        drawLines(this.el, this.opts);\r\n        return this;\r\n    };\r\n    /**\r\n     * Stops and removes the Spinner.\r\n     * Stopped spinners may be reused by calling spin() again.\r\n     */\r\n    Spinner.prototype.stop = function () {\r\n        if (this.el) {\r\n            if (typeof requestAnimationFrame !== 'undefined') {\r\n                cancelAnimationFrame(this.animateId);\r\n            }\r\n            else {\r\n                clearTimeout(this.animateId);\r\n            }\r\n            if (this.el.parentNode) {\r\n                this.el.parentNode.removeChild(this.el);\r\n            }\r\n            this.el = undefined;\r\n        }\r\n        return this;\r\n    };\r\n    return Spinner;\r\n}());\r\nexport { Spinner };\r\n/**\r\n * Sets multiple style properties at once.\r\n */\r\nfunction css(el, props) {\r\n    for (var prop in props) {\r\n        el.style[prop] = props[prop];\r\n    }\r\n    return el;\r\n}\r\n/**\r\n * Returns the line color from the given string or array.\r\n */\r\nfunction getColor(color, idx) {\r\n    return typeof color == 'string' ? color : color[idx % color.length];\r\n}\r\n/**\r\n * Internal method that draws the individual lines.\r\n */\r\nfunction drawLines(el, opts) {\r\n    var borderRadius = (Math.round(opts.corners * opts.width * 500) / 1000) + 'px';\r\n    var shadow = 'none';\r\n    if (opts.shadow === true) {\r\n        shadow = '0 2px 4px #000'; // default shadow\r\n    }\r\n    else if (typeof opts.shadow === 'string') {\r\n        shadow = opts.shadow;\r\n    }\r\n    var shadows = parseBoxShadow(shadow);\r\n    for (var i = 0; i < opts.lines; i++) {\r\n        var degrees = ~~(360 / opts.lines * i + opts.rotate);\r\n        var backgroundLine = css(document.createElement('div'), {\r\n            position: 'absolute',\r\n            top: -opts.width / 2 + \"px\",\r\n            width: (opts.length + opts.width) + 'px',\r\n            height: opts.width + 'px',\r\n            background: getColor(opts.fadeColor, i),\r\n            borderRadius: borderRadius,\r\n            transformOrigin: 'left',\r\n            transform: \"rotate(\" + degrees + \"deg) translateX(\" + opts.radius + \"px)\",\r\n        });\r\n        var delay = i * opts.direction / opts.lines / opts.speed;\r\n        delay -= 1 / opts.speed; // so initial animation state will include trail\r\n        var line = css(document.createElement('div'), {\r\n            width: '100%',\r\n            height: '100%',\r\n            background: getColor(opts.color, i),\r\n            borderRadius: borderRadius,\r\n            boxShadow: normalizeShadow(shadows, degrees),\r\n            animation: 1 / opts.speed + \"s linear \" + delay + \"s infinite \" + opts.animation,\r\n        });\r\n        backgroundLine.appendChild(line);\r\n        el.appendChild(backgroundLine);\r\n    }\r\n}\r\nfunction parseBoxShadow(boxShadow) {\r\n    var regex = /^\\s*([a-zA-Z]+\\s+)?(-?\\d+(\\.\\d+)?)([a-zA-Z]*)\\s+(-?\\d+(\\.\\d+)?)([a-zA-Z]*)(.*)$/;\r\n    var shadows = [];\r\n    for (var _i = 0, _a = boxShadow.split(','); _i < _a.length; _i++) {\r\n        var shadow = _a[_i];\r\n        var matches = shadow.match(regex);\r\n        if (matches === null) {\r\n            continue; // invalid syntax\r\n        }\r\n        var x = +matches[2];\r\n        var y = +matches[5];\r\n        var xUnits = matches[4];\r\n        var yUnits = matches[7];\r\n        if (x === 0 && !xUnits) {\r\n            xUnits = yUnits;\r\n        }\r\n        if (y === 0 && !yUnits) {\r\n            yUnits = xUnits;\r\n        }\r\n        if (xUnits !== yUnits) {\r\n            continue; // units must match to use as coordinates\r\n        }\r\n        shadows.push({\r\n            prefix: matches[1] || '',\r\n            x: x,\r\n            y: y,\r\n            xUnits: xUnits,\r\n            yUnits: yUnits,\r\n            end: matches[8],\r\n        });\r\n    }\r\n    return shadows;\r\n}\r\n/**\r\n * Modify box-shadow x/y offsets to counteract rotation\r\n */\r\nfunction normalizeShadow(shadows, degrees) {\r\n    var normalized = [];\r\n    for (var _i = 0, shadows_1 = shadows; _i < shadows_1.length; _i++) {\r\n        var shadow = shadows_1[_i];\r\n        var xy = convertOffset(shadow.x, shadow.y, degrees);\r\n        normalized.push(shadow.prefix + xy[0] + shadow.xUnits + ' ' + xy[1] + shadow.yUnits + shadow.end);\r\n    }\r\n    return normalized.join(', ');\r\n}\r\nfunction convertOffset(x, y, degrees) {\r\n    var radians = degrees * Math.PI / 180;\r\n    var sin = Math.sin(radians);\r\n    var cos = Math.cos(radians);\r\n    return [\r\n        Math.round((x * cos + y * sin) * 1000) / 1000,\r\n        Math.round((-x * sin + y * cos) * 1000) / 1000,\r\n    ];\r\n}\r\n",
		"// ----------------------------------------------------------------------------\r\n// Timer\r\n\r\nexport default class Timer {\r\n  constructor() {\r\n    this.startTime = 0\r\n    this.oldTime = 0\r\n    this.elapsedTime = 0\r\n    this.running = false\r\n  }\r\n\r\n  start() {\r\n    this.startTime = Timer.now()\r\n    this.oldTime = this.startTime\r\n    this.running = true\r\n  }\r\n\r\n  stop() {\r\n    this.getElapsedTime()\r\n    this.running = false\r\n  }\r\n\r\n  getElapsedTime() {\r\n    this.update()\r\n    return this.elapsedTime\r\n  }\r\n\r\n  update() {\r\n    let delta = 0\r\n    if (this.running) {\r\n      const newTime = Timer.now()\r\n      delta = 0.001 * (newTime - this.oldTime)\r\n      this.oldTime = newTime\r\n      this.elapsedTime += delta\r\n    }\r\n\r\n    return delta\r\n  }\r\n}\r\n\r\nTimer.now = (function () {\r\n  const p = typeof window !== 'undefined' && window.performance\r\n  return p && p.now ? p.now.bind(p) : Date.now\r\n})()\r\n",
		"import Timer from '../Timer'\r\n\r\nconst { now } = Timer\r\n\r\nfunction createElement(tag, id, css) {\r\n  const element = document.createElement(tag)\r\n  element.id = id\r\n  element.style.cssText = css\r\n  return element\r\n}\r\n\r\nclass Stats {\r\n  constructor() {\r\n    this.domElement = createElement('div', 'stats', 'padding:8px')\r\n    this._text = createElement(\r\n      'p',\r\n      'fps',\r\n      'margin:0;color:silver;font-size:large'\r\n    )\r\n    this.domElement.appendChild(this._text)\r\n\r\n    this._startTime = now()\r\n    this._prevTime = this._startTime\r\n\r\n    this._deltas = new Array(20)\r\n    this._index = 0\r\n    this._total = 0.0\r\n    this._count = 0\r\n  }\r\n\r\n  end() {\r\n    const time = now()\r\n    const delta = time - this._startTime\r\n\r\n    if (this._count < this._deltas.length) {\r\n      this._count++\r\n    } else {\r\n      this._total -= this._deltas[this._index]\r\n    }\r\n    this._total += delta\r\n    this._deltas[this._index] = delta\r\n    this._index = (this._index + 1) % this._deltas.length\r\n\r\n    this.ms = this._total / this._count\r\n    this.fps = 1000 / this.ms\r\n\r\n    if (time > this._prevTime + 1000) {\r\n      this._text.textContent = this.fps.toPrecision(2)\r\n      this._prevTime = time\r\n    }\r\n\r\n    return time\r\n  }\r\n\r\n  update() {\r\n    this._startTime = this.end()\r\n  }\r\n\r\n  show(on) {\r\n    if (on === undefined) {\r\n      on = true\r\n    }\r\n    this.domElement.style.display = on ? 'block' : 'none'\r\n  }\r\n}\r\n\r\nexport default Stats\r\n",
		"export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}",
		"export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}",
		"import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}",
		"import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}",
		"/**\r\n * This class introduces the simplest event system.\r\n */\r\n\r\nimport { remove, find, forEach, omitBy } from 'lodash'\r\n\r\nfunction isUndefOrEqual(param, value) {\r\n  return !param || param === value\r\n}\r\n\r\n/**\r\n * Creates empty dispatcher.\r\n *\r\n * @exports EventDispatcher\r\n * @constructor\r\n */\r\nfunction EventDispatcher() {\r\n  this._handlers = {}\r\n}\r\n\r\n/**\r\n * Binds callback on specific event type. Optional `context` parameter\r\n * could be used as 'this' for the `callback`.\r\n * @param {string}   type       Event name.\r\n * @param {function} callback   Callback function.\r\n * @param {Object}   [context] 'This' object for the callback.\r\n */\r\nEventDispatcher.prototype.addEventListener = function (\r\n  type,\r\n  callback,\r\n  context\r\n) {\r\n  let handlers = this._handlers[type]\r\n\r\n  if (!handlers) {\r\n    this._handlers[type] = []\r\n    handlers = this._handlers[type]\r\n  }\r\n\r\n  const params = [callback, context]\r\n  function _checkPar(par) {\r\n    return par[0] === params[0] && par[1] === params[1]\r\n  }\r\n\r\n  if (find(handlers, _checkPar) === undefined) {\r\n    handlers.push(params)\r\n  }\r\n}\r\n\r\n/**\r\n * Removes a previously-bound callback function from an object.\r\n * If no `context` is specified, all versions of the `callback` with different\r\n * contexts will be removed.\r\n * If no `callback` is specified, all callbacks of the `type` will be removed.\r\n * If no `type` is specified, callbacks for all events will be removed.\r\n * @param {?string}  [type]      Event type.\r\n * @param {function} [callback]  Callback function.\r\n * @param {Object}   [context]  'This' object for the callback.\r\n */\r\nEventDispatcher.prototype.removeEventListener = function (\r\n  type,\r\n  callback,\r\n  context\r\n) {\r\n  const self = this\r\n  forEach(self._handlers, (handler, ev) => {\r\n    remove(\r\n      handler,\r\n      (values) =>\r\n        isUndefOrEqual(type, ev) &&\r\n        isUndefOrEqual(callback, values[0]) &&\r\n        isUndefOrEqual(context, values[1] || self)\r\n    )\r\n  })\r\n\r\n  this._handlers = omitBy(self._handlers, (handler) => handler.length === 0)\r\n}\r\n\r\n/**\r\n * Makes all the callbacks for the specific `event` to trigger.\r\n * @param {Object} event      Event.\r\n * @param {string} event.type Type of the event.\r\n */\r\nEventDispatcher.prototype.dispatchEvent = function (event) {\r\n  const self = this\r\n\r\n  forEach(this._handlers[event.type], (callback) => {\r\n    const context = callback[1] || self\r\n    callback[0].apply(context, [event])\r\n  })\r\n}\r\n\r\nexport default EventDispatcher\r\n",
		"/**\r\n * This module contains class for logging.\r\n * Returns an instance of a logger that have already been created.\r\n * Allows users to log messages for five different levels,\r\n * enable console output and catch signal on each message.\r\n */\r\nimport { findKey, isNumber } from 'lodash'\r\nimport EventDispatcher from './EventDispatcher'\r\n\r\nconst priorities = {\r\n  debug: 0,\r\n  info: 1,\r\n  report: 2,\r\n  warn: 3,\r\n  error: 4\r\n}\r\n\r\n/**\r\n * Create new Logger.\r\n *\r\n * @exports Logger\r\n * @extends EventDispatcher\r\n * @constructor\r\n */\r\nfunction Logger() {\r\n  EventDispatcher.call(this)\r\n  /** Boolean flag that toggles output to browser console.\r\n   * @type {boolean}\r\n   */\r\n  this.console = false\r\n  this._priority = priorities.warn\r\n}\r\n\r\nLogger.prototype = Object.create(EventDispatcher.prototype)\r\nLogger.prototype.constructor = Logger\r\n\r\n/**\r\n * Create new clean instance of the logger.\r\n * @returns {Logger}\r\n */\r\nLogger.prototype.instantiate = function () {\r\n  return new Logger()\r\n}\r\n\r\nfunction verify(number) {\r\n  if (!isNumber(number)) {\r\n    throw new Error('Wrong log level specified!')\r\n  }\r\n  return number\r\n}\r\n\r\n/**\r\n * @property {string} current threshold for signals and console output.\r\n * @name Logger#level\r\n */\r\nObject.defineProperty(Logger.prototype, 'level', {\r\n  get() {\r\n    return findKey(priorities, (value) => value === this._priority)\r\n  },\r\n  set(level) {\r\n    this._priority = verify(priorities[level])\r\n  }\r\n})\r\n\r\n/**\r\n * Returns the list of all possible level values.\r\n * @returns {Array}\r\n */\r\nLogger.prototype.levels = function () {\r\n  return Object.keys(priorities)\r\n}\r\n\r\n/**\r\n * Add new message with specified level.\r\n * @param {string} level - level of the message, must be one of the\r\n * {'debug' | 'info' | 'report' | 'warn' | 'error'}\r\n * @param {string} message\r\n */\r\nLogger.prototype.message = function (level, message) {\r\n  const priority = verify(priorities[level])\r\n  this._message(priority, message)\r\n}\r\n\r\n/**\r\n * Shortcut for message('debug', ...);\r\n * @param message\r\n */\r\nLogger.prototype.debug = function (message) {\r\n  this._message(priorities.debug, message)\r\n}\r\n\r\n/**\r\n * Shortcut for message('info', ...);\r\n * @param message\r\n */\r\nLogger.prototype.info = function (message) {\r\n  this._message(priorities.info, message)\r\n}\r\n\r\n/**\r\n * Shortcut for message('report', ...);\r\n * @param message\r\n */\r\nLogger.prototype.report = function (message) {\r\n  this._message(priorities.report, message)\r\n}\r\n\r\n/**\r\n * Shortcut for message('warn', ...);\r\n * @param message\r\n */\r\nLogger.prototype.warn = function (message) {\r\n  this._message(priorities.warn, message)\r\n}\r\n\r\n/**\r\n * Shortcut for message('error', ...);\r\n * @param message\r\n */\r\nLogger.prototype.error = function (message) {\r\n  this._message(priorities.error, message)\r\n}\r\n\r\n/**\r\n * Add new message with specified priority.\r\n * @param {number} priority - priority of the message\r\n * @param {string} message\r\n * @private\r\n */\r\nLogger.prototype._message = function (priority, message) {\r\n  if (priority < this._priority) {\r\n    return\r\n  }\r\n  const level = findKey(priorities, (value) => value === priority)\r\n  message = String(message)\r\n  if (this.console) {\r\n    const output = `miew:${level}: ${message}`\r\n    if (level === 'error') {\r\n      console.error(output) // NOSONAR\r\n    } else if (level === 'warn') {\r\n      console.warn(output) // NOSONAR\r\n    } else {\r\n      console.log(output) // NOSONAR\r\n    }\r\n  }\r\n  this.dispatchEvent({ type: 'message', level, message })\r\n}\r\n\r\nexport default new Logger()\r\n",
		"import logger from './utils/logger'\r\nimport {\r\n  assign,\r\n  isPlainObject,\r\n  forIn,\r\n  isEqual,\r\n  isEmpty,\r\n  isString\r\n} from 'lodash'\r\n\r\nconst browserType = {\r\n  DEFAULT: 0,\r\n  SAFARI: 1\r\n}\r\n// ----------------------------------------------------------------------------\r\n// Query string\r\n\r\n/**\r\n * Escape only dangerous chars in a query string component, use a plus instead of a space.\r\n *\r\n * [RFC 3986](https://tools.ietf.org/html/rfc3986) allows the following chars in the query (see 3.4):\r\n *\r\n *       A-Z a-z 0-9 - _ . ~ ! $ & ' ( ) * + , ; = : @ / ?\r\n *\r\n * For query string elements we need to escape ampersand, equal sign, and plus,\r\n * but encodeURIComponent() function encodes anything except for the following:\r\n *\r\n *       A-Z a-z 0-9 - _ . ~ ! ' ( ) *\r\n *\r\n * @param {string} text - key or value to encode\r\n * @param {string} excludeExp - regexp for symbols to exclude from encoding\r\n * @returns {string} encoded string\r\n */\r\nfunction encodeQueryComponent(text, excludeExp) {\r\n  const encode = (code) => String.fromCharCode(parseInt(code.substr(1), 16))\r\n  return encodeURIComponent(text)\r\n    .replace(excludeExp, encode)\r\n    .replace(/%20/g, '+')\r\n}\r\n\r\n/**\r\n * Unescape dangerous chars in a query string component.\r\n *\r\n * @param {string} text - encoded key or value\r\n * @returns {string} decoded string\r\n * @see {@link encodeQueryComponent}\r\n */\r\nfunction decodeQueryComponent(text) {\r\n  return decodeURIComponent(text.replace(/\\+/g, ' '))\r\n}\r\n\r\n/**\r\n * Parse URL and extract an array of parameters.\r\n * @param {string?} url - URL or query string to parse\r\n * @returns {Array} array of (key, value) pairs.\r\n */\r\nfunction getUrlParameters(url) {\r\n  url = url || window.location.search\r\n\r\n  const query = url.substring(url.indexOf('?') + 1)\r\n  const search = /([^&=]+)=?([^&]*)/g\r\n  const result = []\r\n  let match\r\n\r\n  while ((match = search.exec(query)) !== null) {\r\n    // eslint-disable-line no-cond-assign\r\n    result.push([\r\n      decodeQueryComponent(match[1]),\r\n      decodeQueryComponent(match[2])\r\n    ])\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Parse URL and extract an array of parameters as a hash.\r\n * @param {string?} url - URL or query string to parse\r\n * @returns {Object}\r\n */\r\nfunction getUrlParametersAsDict(url) {\r\n  const result = {}\r\n  const a = getUrlParameters(url)\r\n  for (let i = 0; i < a.length; ++i) {\r\n    const [key, value] = a[i]\r\n    result[key] = value\r\n  }\r\n  return result\r\n}\r\n\r\nfunction resolveURL(str) {\r\n  if (typeof URL !== 'undefined') {\r\n    try {\r\n      if (typeof window !== 'undefined') {\r\n        return new URL(str, window.location).href\r\n      }\r\n      return new URL(str).href\r\n    } catch (error) {\r\n      // IE 11 has a URL object with no constructor available so just try a different approach instead\r\n    }\r\n  }\r\n  if (typeof document !== 'undefined') {\r\n    const anchor = document.createElement('a')\r\n    anchor.href = str\r\n    return anchor.href\r\n  }\r\n  return str\r\n}\r\n\r\n/**\r\n * Generates regular expression object that includes all symbols\r\n * listed in the argument\r\n * @param symbolStr {string} - String containing characters list.\r\n * @returns {RegExp} - Regular expression.\r\n */\r\nfunction generateRegExp(symbolStr) {\r\n  const symbolList = []\r\n\r\n  for (let i = 0, n = symbolStr.length; i < n; ++i) {\r\n    symbolList[symbolList.length] = symbolStr[i].charCodeAt(0).toString(16)\r\n  }\r\n\r\n  const listStr = symbolList.join('|')\r\n\r\n  return new RegExp(`%(?:${listStr})`, 'gi')\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Create HTML element\r\n\r\nfunction createElement(tag, attrs, content) {\r\n  const element = document.createElement(tag)\r\n  let i\r\n  let n\r\n  if (attrs) {\r\n    const keys = Object.keys(attrs)\r\n    for (i = 0, n = keys.length; i < n; ++i) {\r\n      const key = keys[i]\r\n      element.setAttribute(key, attrs[key])\r\n    }\r\n  }\r\n  if (content) {\r\n    if (!(content instanceof Array)) {\r\n      content = [content]\r\n    }\r\n    for (i = 0, n = content.length; i < n; ++i) {\r\n      const child = content[i]\r\n      if (typeof child === 'string') {\r\n        element.appendChild(document.createTextNode(child))\r\n      } else if (child instanceof HTMLElement) {\r\n        element.appendChild(child)\r\n      }\r\n    }\r\n  }\r\n  return element\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Easy inheritance\r\n\r\n/**\r\n * Derive the class from the base.\r\n * @param cls {function} - Class (constructor) to derive.\r\n * @param base {function} - Class (constructor) to derive from.\r\n * @param members {object=} - Optional instance members to add.\r\n * @param statics {object=} - Optional static class members to add.\r\n * @returns {function} Original class.\r\n */\r\nfunction deriveClass(cls, base, members, statics) {\r\n  cls.prototype = assign(\r\n    Object.create(base.prototype),\r\n    { constructor: cls },\r\n    members\r\n  )\r\n  if (statics) {\r\n    assign(cls, statics)\r\n  }\r\n  return cls\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Deep prototyping\r\n\r\nfunction deriveDeep(obj, needZeroOwnProperties) {\r\n  let res = obj\r\n  let i\r\n  let n\r\n  if (obj instanceof Array) {\r\n    res = new Array(obj.length)\r\n    for (i = 0, n = obj.length; i < n; ++i) {\r\n      res[i] = deriveDeep(obj[i])\r\n    }\r\n  } else if (obj instanceof Object) {\r\n    res = Object.create(obj)\r\n    const keys = Object.keys(obj)\r\n    for (i = 0, n = keys.length; i < n; ++i) {\r\n      const key = keys[i]\r\n      const value = obj[key]\r\n      const copy = deriveDeep(value)\r\n      if (copy !== value) {\r\n        res[key] = copy\r\n      }\r\n    }\r\n    if (needZeroOwnProperties && Object.keys(res).length > 0) {\r\n      res = Object.create(res)\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Colors\r\n\r\nfunction hexColor(color) {\r\n  const hex = `0000000${color.toString(16)}`.substr(-6)\r\n  return `#${hex}`\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Debug tracing\r\n\r\nfunction DebugTracer(namespace) {\r\n  let enabled = false\r\n\r\n  this.enable = function (on) {\r\n    enabled = on\r\n  }\r\n\r\n  let indent = 0\r\n  const methods = Object.keys(namespace)\r\n\r\n  function wrap(method_, name_) {\r\n    return function (...args) {\r\n      const spaces = DebugTracer.spaces.substr(0, indent * 2)\r\n      if (enabled) {\r\n        logger.debug(`${spaces + name_} {`)\r\n      }\r\n      indent++\r\n      const result = method_.apply(this, args) // eslint-disable-line no-invalid-this\r\n      indent--\r\n      if (enabled) {\r\n        logger.debug(`${spaces}} // ${name_}`)\r\n      }\r\n      return result\r\n    }\r\n  }\r\n\r\n  for (let i = 0, n = methods.length; i < n; ++i) {\r\n    const name = methods[i]\r\n    const method = namespace[name]\r\n    if (method instanceof Function && name !== 'constructor') {\r\n      namespace[name] = wrap(method, name)\r\n    }\r\n  }\r\n}\r\n\r\nDebugTracer.spaces =\r\n  '                                                                                          '\r\n\r\nclass OutOfMemoryError extends Error {\r\n  constructor(message) {\r\n    super()\r\n    this.name = 'OutOfMemoryError'\r\n    this.message = message\r\n  }\r\n}\r\n\r\nfunction allocateTyped(TypedArrayName, size) {\r\n  let result = null\r\n  try {\r\n    result = new TypedArrayName(size)\r\n  } catch (e) {\r\n    if (e instanceof RangeError) {\r\n      throw new OutOfMemoryError(e.message)\r\n    } else {\r\n      throw e\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Float array conversion\r\n\r\nfunction bytesToBase64(/** ArrayBuffer */ buffer) {\r\n  const bytes = new Uint8Array(buffer)\r\n  let binary = ''\r\n  for (let i = 0; i < bytes.byteLength; i++) {\r\n    binary += String.fromCharCode(bytes[i])\r\n  }\r\n  return window.btoa(binary)\r\n}\r\n\r\nfunction bytesFromBase64(/** string */ str) {\r\n  const binary = window.atob(str)\r\n  const bytes = new Uint8Array(binary.length)\r\n  for (let i = 0; i < bytes.length; ++i) {\r\n    bytes[i] = binary[i].charCodeAt(0)\r\n  }\r\n  return bytes.buffer\r\n}\r\n\r\nfunction arrayToBase64(/** number[] */ array, /** function */ TypedArrayClass) {\r\n  return bytesToBase64(new TypedArrayClass(array).buffer)\r\n}\r\n\r\nfunction arrayFromBase64(/** string */ str, /** function */ TypedArrayClass) {\r\n  return Array.prototype.slice.call(new TypedArrayClass(bytesFromBase64(str)))\r\n}\r\n\r\n// NOTE: this is 1-level comparison\r\nfunction compareOptionsWithDefaults(opts, defOpts) {\r\n  const optsStr = []\r\n  if (defOpts && opts) {\r\n    const keys = Object.keys(opts)\r\n    for (let p = 0; p < keys.length; ++p) {\r\n      const key = keys[p]\r\n      const value = opts[key]\r\n      // TODO add processing for tree structure\r\n      if (\r\n        !(value instanceof Object) &&\r\n        typeof defOpts[key] !== 'undefined' &&\r\n        defOpts[key] !== value\r\n      ) {\r\n        optsStr.push(`${key}:${value}`)\r\n      }\r\n    }\r\n    if (optsStr.length > 0) {\r\n      return `!${optsStr.join()}`\r\n    }\r\n  }\r\n  return ''\r\n}\r\n\r\nfunction isAlmostPlainObject(o) {\r\n  if (isPlainObject(o)) {\r\n    return true\r\n  }\r\n  const proto = o && Object.getPrototypeOf(o)\r\n  return (\r\n    !!proto &&\r\n    !proto.hasOwnProperty('constructor') &&\r\n    isAlmostPlainObject(proto)\r\n  )\r\n}\r\n\r\n/**\r\n * Build an object that contains properties (and subproperties) of `src` different from those\r\n * in `dst`. Objects are parsed recursively, other values (including arrays) are compared for\r\n * equality using `isEqual()`.\r\n * @param {!object} src - a new object to compare, may contain changed or new properties\r\n * @param {!object} dst - an old reference object\r\n */\r\nfunction objectsDiff(src, dst) {\r\n  const diff = {}\r\n  forIn(src, (srcValue, key) => {\r\n    const dstValue = dst[key]\r\n    if (isAlmostPlainObject(srcValue) && isAlmostPlainObject(dstValue)) {\r\n      const deepDiff = objectsDiff(srcValue, dstValue)\r\n      if (!isEmpty(deepDiff)) {\r\n        diff[key] = deepDiff\r\n      }\r\n    } else if (!isEqual(srcValue, dstValue)) {\r\n      diff[key] = srcValue\r\n    }\r\n  })\r\n  return diff\r\n}\r\n\r\nfunction forInRecursive(object, callback) {\r\n  function iterateThrough(obj, prefix) {\r\n    forIn(obj, (value, key) => {\r\n      const newPref = prefix + (prefix.length > 0 ? '.' : '')\r\n      if (value instanceof Object) {\r\n        iterateThrough(value, newPref + key)\r\n      } else if (value !== undefined) {\r\n        callback(value, newPref + key)\r\n      }\r\n    })\r\n  }\r\n  iterateThrough(object, '')\r\n}\r\n\r\nfunction enquoteString(value) {\r\n  if (isString(value)) {\r\n    return `\"${value.replace(/\"/g, '\\\\\"')}\"`\r\n  }\r\n  return value\r\n}\r\n\r\nfunction unquoteString(value) {\r\n  if (!isString(value)) {\r\n    return value\r\n  }\r\n  if (value[0] === '\"' && value[value.length - 1] === '\"') {\r\n    value = value.slice(1, value.length - 1)\r\n    return value.replace(/\\\\\"/g, '\"')\r\n  }\r\n  if (value[0] === \"'\" && value[value.length - 1] === \"'\") {\r\n    value = value.slice(1, value.length - 1)\r\n    return value.replace(/\\\\'/g, \"'\")\r\n  }\r\n  throw new SyntaxError(\"Incorrect string format, can't unqute it\")\r\n}\r\n\r\nfunction getFileExtension(fileName) {\r\n  return fileName.slice(Math.max(0, fileName.lastIndexOf('.')) || Infinity)\r\n}\r\n\r\nfunction splitFileName(fileName) {\r\n  const ext = getFileExtension(fileName)\r\n  const name = fileName.slice(0, fileName.length - ext.length)\r\n  return [name, ext]\r\n}\r\n\r\nfunction dataUrlToBlob(url) {\r\n  const parts = url.split(/[:;,]/)\r\n  const partsCount = parts.length\r\n  if (partsCount >= 3 && parts[partsCount - 2] === 'base64') {\r\n    return new Blob([bytesFromBase64(parts[partsCount - 1])])\r\n  }\r\n  return null\r\n}\r\n\r\nfunction getBrowser() {\r\n  if (\r\n    navigator.vendor &&\r\n    navigator.vendor.indexOf('Apple') > -1 &&\r\n    navigator.userAgent &&\r\n    navigator.userAgent.indexOf('CriOS') === -1 &&\r\n    navigator.userAgent.indexOf('FxiOS') === -1\r\n  ) {\r\n    return browserType.SAFARI\r\n  }\r\n  return browserType.DEFAULT\r\n}\r\n\r\nfunction shotOpen(url) {\r\n  if (typeof window !== 'undefined') {\r\n    window\r\n      .open()\r\n      .document.write(`<body style=\"margin:0\"><img src=\"${url}\" /></body>`)\r\n  }\r\n}\r\n\r\nfunction shotDownload(dataUrl, filename) {\r\n  if (!dataUrl || dataUrl.substr(0, 5) !== 'data:') {\r\n    return\r\n  }\r\n  if (!filename) {\r\n    filename = ['screenshot-', +new Date(), '.png'].join('')\r\n  }\r\n  if (\r\n    typeof window !== 'undefined' &&\r\n    window.navigator &&\r\n    window.navigator.msSaveBlob\r\n  ) {\r\n    window.navigator.msSaveBlob(dataUrlToBlob(dataUrl), filename)\r\n  } else if (typeof document !== 'undefined') {\r\n    const link = document.createElement('a')\r\n    link.download = filename\r\n    link.innerHTML = 'download'\r\n    link.href = window.URL.createObjectURL(dataUrlToBlob(dataUrl))\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    document.body.removeChild(link)\r\n  }\r\n}\r\n\r\nfunction download(data, filename, type) {\r\n  const blobData = new Blob([data])\r\n\r\n  if (!filename) {\r\n    filename = ['data', +new Date()].join('')\r\n  }\r\n\r\n  if (!type) {\r\n    filename += blobData.type || '.bin'\r\n  } else {\r\n    filename += `.${type}`\r\n  }\r\n\r\n  if (\r\n    typeof window !== 'undefined' &&\r\n    window.navigator &&\r\n    window.navigator.msSaveBlob\r\n  ) {\r\n    window.navigator.msSaveBlob(blobData, filename)\r\n  } else if (typeof document !== 'undefined') {\r\n    const link = document.createElement('a')\r\n    link.download = filename\r\n    link.innerHTML = 'download'\r\n    link.href = window.URL.createObjectURL(blobData)\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    document.body.removeChild(link)\r\n  }\r\n}\r\n\r\nfunction copySubArrays(src, dst, indices, itemSize) {\r\n  for (let i = 0, n = indices.length; i < n; ++i) {\r\n    for (let j = 0; j < itemSize; ++j) {\r\n      dst[i * itemSize + j] = src[indices[i] * itemSize + j]\r\n    }\r\n  }\r\n}\r\n\r\nfunction shallowCloneNode(node) {\r\n  const newNode = node.cloneNode(true)\r\n  newNode.worldPos = node.worldPos\r\n  // .style property is readonly, so \"newNode.style = node.style;\" won't work (and we don't need it, right?)\r\n  return newNode\r\n}\r\n\r\nconst unquotedStringRE = /^[a-zA-Z0-9_]*$/\r\nconst enquoteHelper = ['\"', '', '\"']\r\n\r\n// verify and correct if needed selctor identifier\r\nfunction correctSelectorIdentifier(value) {\r\n  if (unquotedStringRE.test(value)) {\r\n    return value\r\n  }\r\n  // quote incorrect identifier\r\n  enquoteHelper[1] = value\r\n  return enquoteHelper.join('')\r\n}\r\n\r\n/**\r\n * Concatenates two TypedArray. Doesn't check null refs o type equality\r\n * Attention! It must be use very rarely because requires memory reallocation every time. Use MergeTypedArraysUnsafe to\r\n * unite array of subarrays.\r\n * @param{TypedArray} first  - destination array\r\n * @param{TypedArray} second - source array\r\n * @returns{TypedArray} resulting concatenated array\r\n */\r\nfunction concatTypedArraysUnsafe(first, second) {\r\n  const result = new first.constructor(first.length + second.length)\r\n  result.set(first)\r\n  result.set(second, first.length)\r\n  return result\r\n}\r\n\r\n/**\r\n * Merges array of TypedArray into TypedArray. Doesn't check null refs o type equality\r\n * @param{array} array  - source array of subarrays\r\n * @returns{TypedArray} resulting merged array\r\n */\r\nfunction mergeTypedArraysUnsafe(array) {\r\n  if (array.length <= 0) {\r\n    return null\r\n  }\r\n  // count the size\r\n  const size = array.reduce((acc, cur) => acc + cur.length, 0)\r\n  // create combined array\r\n  const result = new array[0].constructor(size)\r\n  for (let i = 0, start = 0; i < array.length; i++) {\r\n    const count = array[i].length\r\n    result.set(array[i], start)\r\n    start += count\r\n  }\r\n  return result\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Exports\r\n\r\nexport default {\r\n  browserType,\r\n  encodeQueryComponent,\r\n  decodeQueryComponent,\r\n  getUrlParameters,\r\n  getUrlParametersAsDict,\r\n  resolveURL,\r\n  generateRegExp,\r\n  createElement,\r\n  deriveClass,\r\n  deriveDeep,\r\n  hexColor,\r\n  DebugTracer,\r\n  OutOfMemoryError,\r\n  allocateTyped,\r\n  bytesFromBase64,\r\n  bytesToBase64,\r\n  arrayFromBase64,\r\n  arrayToBase64,\r\n  compareOptionsWithDefaults,\r\n  objectsDiff,\r\n  forInRecursive,\r\n  enquoteString,\r\n  unquoteString,\r\n  getBrowser,\r\n  shotOpen,\r\n  shotDownload,\r\n  copySubArrays,\r\n  shallowCloneNode,\r\n  correctSelectorIdentifier,\r\n  getFileExtension,\r\n  splitFileName,\r\n  download,\r\n  concatTypedArraysUnsafe,\r\n  mergeTypedArraysUnsafe\r\n}\r\n",
		"import EventDispatcher from './EventDispatcher'\r\n\r\nexport default class JobHandle extends EventDispatcher {\r\n  constructor() {\r\n    super()\r\n    this._shouldCancel = false\r\n  }\r\n\r\n  cancel() {\r\n    this._shouldCancel = true\r\n    this.dispatchEvent({ type: 'cancel' })\r\n  }\r\n\r\n  shouldCancel() {\r\n    return this._shouldCancel\r\n  }\r\n\r\n  // slaves use this to notify master about their events\r\n  // master routes these notifications to a single event slot\r\n  notify(event) {\r\n    this.dispatchEvent({ type: 'notification', slaveEvent: event })\r\n  }\r\n}\r\n",
		"import utils from './utils'\r\nimport EventDispatcher from './utils/EventDispatcher'\r\nimport { isEmpty, isString, get, set, merge, cloneDeep, filter } from 'lodash'\r\n\r\nconst VERSION = 0\r\n\r\n// ----------------------------------------------------------------------------\r\n// DEFAULT SETTINGS\r\n// ----------------------------------------------------------------------------\r\n\r\n/**\r\n * Polygonal complexity settings.\r\n *\r\n * @typedef PolyComplexity\r\n * @property {number} poor\r\n * @property {number} low\r\n * @property {number} medium\r\n * @property {number} high\r\n * @property {number} ultra\r\n */\r\n\r\n/**\r\n * @alias SettingsObject\r\n * @namespace\r\n */\r\nconst defaults = {\r\n  /**\r\n   * Default options for all available modes.\r\n   * Use {@link Mode.id} as a dictionary key to access mode options.\r\n   *\r\n   * Usually you don't need to override these settings. You may specify mode options as a parameter during\r\n   * {@link Mode} construction.\r\n   *\r\n   * @memberof SettingsObject#\r\n   * @type {Object.<string, object>}\r\n   *\r\n   * @property {LinesModeOptions} LN - Lines mode options.\r\n   * @property {LicoriceModeOptions} LC - Licorice mode options.\r\n   * @property {BallsAndSticksModeOptions} BS - Balls and Sticks mode options.\r\n   * @property {VanDerWaalsModeOptions} VW - Van der Waals mode options.\r\n   * @property {TraceModeOptions} TR - Trace mode options.\r\n   * @property {TubeModeOptions} TU - Tube mode options.\r\n   * @property {CartoonModeOptions} CA - Cartoon mode options.\r\n   * @property {QuickSurfaceModeOptions} QS - Contact Surface mode options.\r\n   * @property {IsoSurfaceSASModeOptions} SA - Solvent Accessible Surface mode options.\r\n   * @property {IsoSurfaceSESModeOptions} SE - Solvent Excluded Surface mode options.\r\n   * @property {ContactSurfaceModeOptions} CS - Contact Surface mode options.\r\n   * @property {TextModeOptions} TX - Text mode options.\r\n   * @property {VolumeDensityModeOptions} VD - Volume Density mode options.\r\n   */\r\n  modes: {\r\n    // ----------------------------------------------------------------------------\r\n    // BALLS AND STICKS\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Balls and Sticks mode options.\r\n     *\r\n     * @typedef BallsAndSticksModeOptions\r\n     *\r\n     * @property {number} atom - Sphere radius as a fraction of Van der Waals atom radius.\r\n     * @property {number} bond - Cylinder radius in angstroms.\r\n     * @property {number} space - Fraction of the space around one cylinder. Zero means that cylinder fills all\r\n     *   available space.\r\n     * @property {boolean} multibond - Toggles rendering of multiple ordered bonds.\r\n     * @property {number} aromrad - Minor radius of a torus for aromatic loops.\r\n     * @property {boolean} showarom - Toggles rendering of aromatic loops.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    BS: {\r\n      atom: 0.23,\r\n      bond: 0.15,\r\n      space: 0.5,\r\n      multibond: true,\r\n      aromrad: 0.1,\r\n      showarom: true,\r\n      polyComplexity: {\r\n        poor: 3,\r\n        low: 4,\r\n        medium: 6,\r\n        high: 12,\r\n        ultra: 32\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // VAN DER WAALS\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Van der Waals mode options.\r\n     *\r\n     * @typedef VanDerWaalsModeOptions\r\n     *\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    VW: {\r\n      polyComplexity: {\r\n        poor: 4,\r\n        low: 6,\r\n        medium: 8,\r\n        high: 16,\r\n        ultra: 32\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // LINES\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Lines mode options.\r\n     *\r\n     * @typedef LinesModeOptions\r\n     *\r\n     * @property {boolean} multibond - Flag, that toggles rendering of multiple ordered bonds.\r\n     * @property {boolean} showarom - Flag, that toggles rendering of aromatic loops.\r\n     * @property {number} offsarom - Offset between bonds and aromatic cycle.\r\n     * @property {number} chunkarom - Number of pieces in a-loop arc, corresponding to atom.\r\n     * @property {number} atom - Collision radius for atoms picking.\r\n     * @property {number} lineWidth - Line width in pixels (not used in thin lines).\r\n     */\r\n    LN: {\r\n      multibond: true,\r\n      showarom: true,\r\n      offsarom: 0.2,\r\n      chunkarom: 10,\r\n      atom: 0.23,\r\n      lineWidth: 2\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // LICORICE\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Licorice mode options.\r\n     *\r\n     * @typedef LicoriceModeOptions\r\n     *\r\n     * @property {number} bond - Bond cylinder radius.\r\n     * @property {number} space - Fraction of the space around one cylinder. Zero means that cylinder fills all\r\n     *   available space.\r\n     * @property {boolean} multibond - Flag, that toggles rendering of multiple ordered bonds.\r\n     * @property {number} aromrad - Minor radius of a torus for aromatic loops.\r\n     * @property {boolean} showarom - Flag, that toggles rendering of aromatic loops.\r\n     * @property {PolyComplexity} polyComplexity - Poly complexity values for render modes.\r\n     */\r\n    LC: {\r\n      bond: 0.2,\r\n      space: 0.0,\r\n      multibond: true,\r\n      aromrad: 0.1,\r\n      showarom: true,\r\n      polyComplexity: {\r\n        poor: 3,\r\n        low: 4,\r\n        medium: 6,\r\n        high: 12,\r\n        ultra: 32\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // SURFACE SAS\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Solvent Accessible Surface mode options.\r\n     *\r\n     * @typedef IsoSurfaceSASModeOptions\r\n     *\r\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\r\n     * @property {number} probeRadius - Radius of the probe.\r\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\r\n     *   Empty string means whole surface is visible.\r\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    SA: {\r\n      zClip: false,\r\n      probeRadius: 1.5,\r\n      subset: '',\r\n      wireframe: false,\r\n      polyComplexity: {\r\n        poor: 6,\r\n        low: 8,\r\n        medium: 16,\r\n        high: 30,\r\n        ultra: 60\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // SURFACE SES\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Solvent Excluded Surface mode options.\r\n     *\r\n     * @typedef IsoSurfaceSESModeOptions\r\n     *\r\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\r\n     * @property {number} probeRadius - Radius of the probe.\r\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\r\n     *   Empty string means whole surface is visible.\r\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    SE: {\r\n      zClip: false,\r\n      probeRadius: 1.5,\r\n      subset: '',\r\n      wireframe: false,\r\n      polyComplexity: {\r\n        poor: 6,\r\n        low: 8,\r\n        medium: 16,\r\n        high: 30,\r\n        ultra: 60\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // QUICK SURFACE\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Quick Surface mode options.\r\n     *\r\n     * @typedef QuickSurfaceModeOptions\r\n     *\r\n     * @property {number} isoValue - Isovalue of the surface to extract.\r\n     * @property {number} scale - Radius scale for the surface being built.\r\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\r\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\r\n     *   Empty string means whole surface is visible.\r\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\r\n     * @property {PolyComplexity} gaussLim - Gauss lim for coloring the bigger the value, the smoother our colors are.\r\n     * @property {PolyComplexity} gridSpacing - Poly complexity values for render modes. In this case the value\r\n     *   corresponds to the grid density.\r\n     */\r\n    QS: {\r\n      isoValue: 0.5,\r\n      gaussLim: {\r\n        poor: 1.5,\r\n        low: 2.0,\r\n        medium: 2.5,\r\n        high: 3.0,\r\n        ultra: 4.0\r\n      },\r\n      scale: 1.0,\r\n      wireframe: false,\r\n      gridSpacing: {\r\n        poor: 2,\r\n        low: 1.5,\r\n        medium: 1,\r\n        high: 0.5,\r\n        ultra: 0.25\r\n      },\r\n      subset: '',\r\n      zClip: false\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // CONTACT SURFACE\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Contact Surface mode options.\r\n     *\r\n     * @typedef ContactSurfaceModeOptions\r\n     *\r\n     * @property {number} isoValue - Isovalue of the surface to extract.\r\n     * @property {number} probeRadius - Probe radius.\r\n     * @property {number} probePositions\r\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\r\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\r\n     *   Empty string means whole surface is visible.\r\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\r\n     * @property {PolyComplexity} polyComplexity - Radius scale for the surface being built.\r\n     *   Poly complexity values for render modes. In this case the value corresponds to the grid density.\r\n     */\r\n    CS: {\r\n      probeRadius: 1.4,\r\n      isoValue: 1.5,\r\n      wireframe: false,\r\n      probePositions: 30,\r\n      polyComplexity: {\r\n        poor: 0.5,\r\n        low: 1.0,\r\n        medium: 1.5,\r\n        high: 1.75,\r\n        ultra: 2.0\r\n      },\r\n      subset: '',\r\n      zClip: false\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // TRACE\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Trace mode options.\r\n     *\r\n     * @typedef TraceModeOptions\r\n     *\r\n     * @property {number} radius - Cylinder radius.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    TR: {\r\n      radius: 0.3,\r\n      polyComplexity: {\r\n        poor: 12,\r\n        low: 16,\r\n        medium: 32,\r\n        high: 64,\r\n        ultra: 64\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // TUBE\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Tube mode options.\r\n     *\r\n     * @typedef TubeModeOptions\r\n     *\r\n     * @property {number} radius - Cylinder radius.\r\n     * @property {number} tension - Tension for interpolation.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     * @property {number} heightSegmentsRatio - Poly complexity multiplier for height segments.\r\n     */\r\n    TU: {\r\n      radius: 0.3,\r\n      heightSegmentsRatio: 1.5,\r\n      tension: -0.7,\r\n      polyComplexity: {\r\n        poor: 4,\r\n        low: 6,\r\n        medium: 10,\r\n        high: 18,\r\n        ultra: 34\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // CARTOON\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Cartoon mode options.\r\n     *\r\n     * @typedef CartoonModeOptions\r\n     *\r\n     * @property {number} radius - Standard tube radius.\r\n     * @property {number} depth - Height of the secondary structure ribbon.\r\n     * @property {number} tension - Tension for interpolation.\r\n     * @proprety {object} ss - Secondary structure parameters.\r\n     * @proprety {object} ss.helix - Options for helices render.\r\n     * @proprety {number} ss.helix.width - Width of the secondary structure ribbon.\r\n     * @proprety {number} ss.helix.arrow - Secondary structure's arrow width.\r\n     * @proprety {object} ss.strand - Options for strands render.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     * polyComplexity must be even for producing symmetric arrows.\r\n     * @property {number} heightSegmentsRatio - Poly complexity multiplier for height segments.\r\n     */\r\n    CA: {\r\n      radius: 0.3,\r\n      depth: 0.25,\r\n      ss: {\r\n        helix: {\r\n          width: 1.0,\r\n          arrow: 2.0\r\n        },\r\n        strand: {\r\n          width: 1.0,\r\n          arrow: 2.0\r\n        }\r\n      },\r\n      heightSegmentsRatio: 1.5,\r\n      tension: -0.7,\r\n      polyComplexity: {\r\n        poor: 4,\r\n        low: 6,\r\n        medium: 10,\r\n        high: 18,\r\n        ultra: 34\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // TEXT\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Text mode options.\r\n     *\r\n     * @typedef TextModeOptions\r\n     *\r\n     * @property {string} template - Format string for building output text.\r\n     * @property {string} horizontalAlign - Text alignment ('left', 'right', 'center').\r\n     * @property {string} verticalAlign - Vertical text box alignment ('top', 'bottom', 'middle').\r\n     * @property {number} dx - Text offset x in angstroms.\r\n     * @property {number} dy - Text offset y in angstroms.\r\n     * @property {number} dz - Text offset z in angstroms.\r\n     * @property {string} fg - Color rule for foreground.\r\n     * @property {string} bg - Color rule for background.\r\n     * @property {boolean} showBg - Flag, that toggles background rendering.\r\n     *\r\n     */\r\n    TX: {\r\n      template: '{{Chain}}.{{Residue}}{{Sequence}}.{{Name}}',\r\n      horizontalAlign: 'center',\r\n      verticalAlign: 'middle',\r\n      dx: 0,\r\n      dy: 0,\r\n      dz: 1,\r\n      fg: 'none',\r\n      bg: '0x202020',\r\n      showBg: true\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // VOLUME DENSITY\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Volume density mode options.\r\n     *\r\n     * @typedef VolumeDensityModeOptions\r\n     *\r\n     * @property {number} kSigma - Noise threshold coefficient.\r\n     * @property {boolean} frame - flag, that turns on box frame painting.\r\n     * @property {boolean} isoMode - flag, that turns on IsoSurface mode instead of Volume Rendering.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    VD: {\r\n      kSigma: 1.0,\r\n      kSigmaMed: 2.0,\r\n      kSigmaMax: 4.0,\r\n      frame: true,\r\n      isoMode: false,\r\n      polyComplexity: {\r\n        poor: 2,\r\n        low: 3,\r\n        medium: 4,\r\n        high: 8,\r\n        ultra: 10\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Default options for all available colorers.\r\n   * Use {@link Colorer.id} as a dictionary key to access colorer options.\r\n   *\r\n   * Usually you don't need to override these settings. You may specify colorer options as a parameter during\r\n   * {@link Colorer} construction.\r\n   *\r\n   * Not all colorers have options.\r\n   *\r\n   * @memberof SettingsObject#\r\n   * @type {Object.<string, object>}\r\n   *\r\n   * @property {ElementColorerOptions} EL - Element colorer options.\r\n   * @property {SequenceColorerOptions} SQ - Sequence colorer options.\r\n   * @property {MoleculeColorerOptions} MO - Molecule colorer options.\r\n   * @property {UniformColorerOptions} UN - Uniform colorer options.\r\n   * @property {ConditionalColorerOptions} CO - Conditional colorer options.\r\n   * @property {TemperatureColorerOptions} TM - Temperature colorer options.\r\n   * @property {OccupancyColorerOptions} OC - Occupancy colorer options.\r\n   * @property {HydrophobicityColorerOptions} HY - Hydrophobicity colorer options.\r\n   */\r\n  colorers: {\r\n    /**\r\n     * Element colorer options.\r\n     *\r\n     * @typedef ElementColorerOptions\r\n     *\r\n     * @property {number} carbon - Carbon color or -1 to use default.\r\n     */\r\n    EL: {\r\n      carbon: -1\r\n    },\r\n\r\n    /**\r\n     * Uniform colorer options.\r\n     *\r\n     * @typedef UniformColorerOptions\r\n     *\r\n     * @property {number} color - Single color to paint with.\r\n     */\r\n    UN: {\r\n      color: 0xffffff\r\n    },\r\n\r\n    /**\r\n     * Conditional colorer options.\r\n     *\r\n     * @typedef ConditionalColorerOptions\r\n     *\r\n     * @property {string} subset - Selector string.\r\n     * @property {number} color - Color of selected atoms.\r\n     * @property {number} baseColor - Color of other atoms.\r\n     */\r\n    CO: {\r\n      subset: 'charged',\r\n      color: 0xff0000,\r\n      baseColor: 0xffffff\r\n    },\r\n\r\n    /**\r\n     * Carbon colorer options.\r\n     *\r\n     * @typedef CarbonColorerOptions\r\n     *\r\n     * @property {number} color - Single color to paint carbons\r\n     * @property {number} factor - Color factor for not carbon atoms.\r\n     */\r\n    CB: {\r\n      color: 0x909090,\r\n      factor: 0.6\r\n    },\r\n\r\n    /**\r\n     * Sequence colorer options.\r\n     *\r\n     * @typedef SequenceColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     */\r\n    SQ: {\r\n      gradient: 'rainbow'\r\n    },\r\n\r\n    /**\r\n     * Temperature colorer options.\r\n     *\r\n     * @typedef TemperatureColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     * @property {number} min - Minimal temperature.\r\n     * @property {number} max - Maximal temperature.\r\n     */\r\n    TM: {\r\n      gradient: 'temp',\r\n      min: 5,\r\n      max: 40\r\n    },\r\n\r\n    /**\r\n     * Occupancy colorer options.\r\n     *\r\n     * @typedef OccupancyColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     */\r\n    OC: {\r\n      gradient: 'reds'\r\n    },\r\n\r\n    /**\r\n     * Hydrophobicity colorer options.\r\n     *\r\n     * @typedef HydrophobicityColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     */\r\n    HY: {\r\n      gradient: 'blue-red'\r\n    },\r\n\r\n    /**\r\n     * Molecule colorer options.\r\n     *\r\n     * @typedef MoleculeColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     */\r\n    MO: {\r\n      gradient: 'rainbow'\r\n    }\r\n  },\r\n\r\n  /*\r\n   * Use antialiasing in WebGL.\r\n   * @type {boolean}\r\n   */\r\n  antialias: true,\r\n\r\n  /*\r\n   * Camera field of view in degrees.\r\n   * @type {number}\r\n   */\r\n  camFov: 45.0,\r\n\r\n  /*\r\n   * Camera near plane distance.\r\n   * @type {number}\r\n   */\r\n  camNear: 0.5,\r\n\r\n  /*\r\n   * Camera far plane distance.\r\n   * @type {number}\r\n   */\r\n  camFar: 100.0,\r\n\r\n  camDistance: 2.5,\r\n\r\n  radiusToFit: 1.0,\r\n\r\n  /**\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  fogNearFactor: 0.5, // [0, 1]\r\n\r\n  /**\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  fogFarFactor: 1, // [0, 1]\r\n  fogAlpha: 1.0,\r\n  fogColor: 0x000000,\r\n  fogColorEnable: false,\r\n\r\n  /**\r\n   * Palette used for molecule coloring.\r\n   * @type {string}\r\n   */\r\n  palette: 'JM',\r\n\r\n  /*\r\n   * Geometry resolution.\r\n   * @type {string}\r\n   */\r\n  resolution: 'medium',\r\n\r\n  autoResolution: false /* true */,\r\n\r\n  autoPreset: true,\r\n\r\n  preset: 'default', // TODO: remove 'preset' from settings, implement autodetection\r\n\r\n  presets: {\r\n    // Default\r\n    default: [\r\n      {\r\n        mode: 'BS',\r\n        colorer: 'EL',\r\n        selector: 'all',\r\n        material: 'SF'\r\n      }\r\n    ],\r\n\r\n    empty: [],\r\n\r\n    // Wireframe\r\n    wire: [\r\n      {\r\n        mode: 'LN',\r\n        colorer: 'EL',\r\n        selector: 'all',\r\n        material: 'SF'\r\n      }\r\n    ],\r\n\r\n    // Small molecules\r\n    small: [\r\n      {\r\n        mode: 'BS',\r\n        colorer: 'EL',\r\n        selector: 'all',\r\n        material: 'SF'\r\n      }\r\n    ],\r\n\r\n    // Proteins, nucleic acids etc.\r\n    macro: [\r\n      {\r\n        mode: 'CA',\r\n        colorer: 'SS',\r\n        selector: 'not hetatm',\r\n        material: 'SF'\r\n      },\r\n      {\r\n        mode: 'BS',\r\n        colorer: 'EL',\r\n        selector: 'hetatm and not water',\r\n        material: 'SF'\r\n      }\r\n    ]\r\n  },\r\n\r\n  objects: {\r\n    line: {\r\n      color: 0xffffffff,\r\n      dashSize: 0.3,\r\n      gapSize: 0.05\r\n    }\r\n  },\r\n\r\n  // ----------------------------------------------------------------------------\r\n\r\n  bg: {\r\n    color: 0x202020,\r\n    transparent: false\r\n  },\r\n\r\n  draft: {\r\n    clipPlane: false,\r\n    clipPlaneFactor: 0.5,\r\n    clipPlaneSpeed: 0.00003\r\n  },\r\n\r\n  /*\r\n   * Separate group for plugins.\r\n   * Each plugin handles its field by itself.\r\n   */\r\n  plugins: {},\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  axes: true,\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  fog: true,\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  fps: true,\r\n\r\n  /**\r\n   * Switch using of z-sprites for sphere and cylinder geometry\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  zSprites: true,\r\n\r\n  isoSurfaceFakeOpacity: true,\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  suspendRender: true,\r\n\r\n  nowater: false,\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  autobuild: true,\r\n\r\n  /**\r\n   * Anti-aliasing.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  fxaa: true,\r\n  /**\r\n   * Outline depths\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  outline: {\r\n    on: false,\r\n    color: 0x000000,\r\n    threshold: 0.1,\r\n    thickness: 1\r\n  },\r\n\r\n  /**\r\n   * Ambient Occlusion special effect.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  ao: false,\r\n\r\n  /**\r\n   * Shadows options.\r\n   *\r\n   * @property {boolean} shadowMap - enable/disable.\r\n   * @property {string} basic/percentage-closer filtering/non-uniform randomizing pcf.\r\n   * @property {number} radius for percentage-closer filtering.\r\n   */\r\n  shadow: {\r\n    on: false,\r\n    type: 'random' /* basic, pcf, random */,\r\n    radius: 1.0\r\n  },\r\n\r\n  /**\r\n   * Auto-rotation with constant speed.\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  autoRotation: 0.0,\r\n\r\n  /**\r\n   * Set maximum fps for animation.\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  maxfps: 30,\r\n\r\n  /**\r\n   * Set fbx output precision.\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  fbxprec: 4,\r\n\r\n  /**\r\n   * Auto-rotation axis.\r\n   *\r\n   * - true:  complex auto-rotation is about vertical axis\r\n   * - false: rotation axis is defined by last user rotation\r\n   *\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  autoRotationAxisFixed: true,\r\n\r\n  /**\r\n   * Enable zooming with mouse wheel or pinch gesture.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  zooming: true,\r\n\r\n  /**\r\n   * Enable picking atoms & residues with left mouse button or touch.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  picking: true,\r\n\r\n  /**\r\n   * Set picking mode ('atom', 'residue', 'chain', 'molecule').\r\n   * @type {string}\r\n   * @instance\r\n   */\r\n  pick: 'atom',\r\n\r\n  /**\r\n   * Make \"component\" and \"fragment\" editing modes available.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  editing: false,\r\n\r\n  /**\r\n   * Detect aromatic loops.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  aromatic: false,\r\n\r\n  /**\r\n   * Load only one biological unit from all those described in PDB file.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  singleUnit: true,\r\n\r\n  /**\r\n   * Set stereo mode ('NONE', 'SIMPLE', 'DISTORTED', 'ANAGLYPH', 'WEBVR').\r\n   * @type {string}\r\n   * @instance\r\n   */\r\n  stereo: 'NONE',\r\n\r\n  /**\r\n   * Enable smooth transition between views\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  interpolateViews: true,\r\n\r\n  /**\r\n   * Set transparency mode ('standard', 'prepass').\r\n   * @type {string}\r\n   * @instance\r\n   */\r\n  transparency: 'prepass',\r\n\r\n  /**\r\n   * Mouse translation speed.\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  translationSpeed: 2,\r\n\r\n  debug: {\r\n    example: 3.5,\r\n    text: 'hello!',\r\n    good: true,\r\n    ssaoKernelRadius: 0.7,\r\n    ssaoFactor: 0.7,\r\n    stereoBarrel: 0.25\r\n  },\r\n  use: {\r\n    multiFile: false\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// SETTINGS CLASS\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction Settings() {\r\n  EventDispatcher.call(this)\r\n\r\n  this.old = null\r\n  this.now = {}\r\n  this._changed = {}\r\n\r\n  this.reset()\r\n}\r\n\r\nutils.deriveClass(Settings, EventDispatcher, {\r\n  defaults,\r\n\r\n  set(path, value) {\r\n    if (isString(path)) {\r\n      const oldValue = get(this.now, path)\r\n      if (oldValue !== value) {\r\n        set(this.now, path, value)\r\n        this._notifyChange(path, value)\r\n      }\r\n    } else {\r\n      const diff = utils.objectsDiff(path, this.now)\r\n      if (!isEmpty(diff)) {\r\n        merge(this.now, diff)\r\n        this._notifyChanges(diff)\r\n      }\r\n    }\r\n  },\r\n\r\n  get(path, defaultValue) {\r\n    return get(this.now, path, defaultValue)\r\n  },\r\n\r\n  reset() {\r\n    const diff = utils.objectsDiff(defaults, this.now)\r\n    this.now = cloneDeep(defaults)\r\n    this.old = null\r\n    this._notifyChanges(diff)\r\n    this._changed = {}\r\n  },\r\n\r\n  checkpoint() {\r\n    this.old = cloneDeep(this.now)\r\n    this._changed = {}\r\n  },\r\n\r\n  _notifyChange(path, value) {\r\n    this._changed[path] = true\r\n    this.dispatchEvent({ type: `change:${path}`, value })\r\n  },\r\n\r\n  _notifyChanges(diff) {\r\n    utils.forInRecursive(diff, (deepValue, deepPath) => {\r\n      this._notifyChange(deepPath, deepValue)\r\n    })\r\n  },\r\n\r\n  changed() {\r\n    if (!this.old) {\r\n      return []\r\n    }\r\n    const { old, now } = this\r\n    const keys = filter(\r\n      Object.keys(this._changed),\r\n      (key) => get(old, key) !== get(now, key)\r\n    )\r\n    return keys\r\n  },\r\n\r\n  applyDiffs(diffs) {\r\n    if (diffs.hasOwnProperty('VERSION') && diffs.VERSION !== VERSION) {\r\n      throw new Error('Settings version does not match!')\r\n    }\r\n    // VERSION shouldn't be presented inside settings structure\r\n    delete diffs.VERSION\r\n    this.reset()\r\n    this.set(diffs)\r\n  },\r\n\r\n  getDiffs(versioned) {\r\n    const diffs = utils.objectsDiff(this.now, defaults)\r\n    if (versioned) {\r\n      diffs.VERSION = VERSION\r\n    }\r\n    return diffs\r\n  },\r\n\r\n  setPluginOpts(plugin, opts) {\r\n    defaults.plugins[plugin] = cloneDeep(opts)\r\n    this.now.plugins[plugin] = cloneDeep(opts)\r\n  }\r\n})\r\n\r\nexport default new Settings()\r\n",
		"import settings from './settings'\r\nimport utils from './utils'\r\nimport logger from './utils/logger'\r\nimport { isString, set, get, isArray, isEmpty } from 'lodash'\r\n\r\nlet repIndex = 0\r\n\r\nfunction asBoolean(value) {\r\n  return !(\r\n    !value ||\r\n    value === '0' ||\r\n    (isString(value) && value.toLowerCase() === 'false')\r\n  )\r\n}\r\n\r\nconst adapters = {\r\n  string: String,\r\n  number: Number,\r\n  boolean: asBoolean\r\n}\r\n\r\n// Level 1 assignment symbol\r\nconst cL1Ass = '='\r\n\r\nconst cOptsSep = '!'\r\n// Level 2 (options) assignment symbol\r\nconst cL2Ass = ':'\r\n// Level 2 (options) separator symbol\r\nconst cLSep = ','\r\n\r\nconst cCommonIgnoreSymbols = '$;@/?'\r\n/**\r\n * We may (and should) leave as is for better readability:\r\n *\r\n *        $ , ; : @ / ?\r\n */\r\n/**\r\n * Generate regular expression for symbols excluded for first level encryption\r\n */\r\nfunction getLevel1ExcludedExpr() {\r\n  const cLevel1Ignores = ':,'\r\n  return utils.generateRegExp(cCommonIgnoreSymbols + cLevel1Ignores)\r\n}\r\n\r\n/**\r\n * Generate regular expression for symbols excluded for first level encryption\r\n * (options, etc, ..)\r\n */\r\nfunction getLevel2ExcludedExpr() {\r\n  const cLevel2Ignores = ' '\r\n  return utils.generateRegExp(cCommonIgnoreSymbols + cLevel2Ignores)\r\n}\r\n\r\nconst cL1ExclExpr = getLevel1ExcludedExpr()\r\nfunction encodeQueryComponentL1(value) {\r\n  return utils.encodeQueryComponent(value, cL1ExclExpr)\r\n}\r\n\r\nconst cL2ExclExpr = getLevel2ExcludedExpr()\r\nfunction encodeQueryComponentL2(value) {\r\n  return utils.encodeQueryComponent(value, cL2ExclExpr)\r\n}\r\n\r\nfunction ensureRepList(opts) {\r\n  let { reps } = opts\r\n  if (!reps) {\r\n    const { presets } = settings.now\r\n    let preset = opts.preset || settings.now.preset\r\n    reps = presets[preset]\r\n    if (!reps) {\r\n      logger.warn(`Unknown preset \"${preset}\"`)\r\n      ;[preset] = Object.keys(presets)\r\n      reps = presets[preset] // fall back to any preset\r\n    }\r\n    opts.preset = preset\r\n    opts.reps = utils.deriveDeep(reps, true)\r\n  }\r\n}\r\n\r\nfunction ensureRepAssign(opts, prop, value) {\r\n  ensureRepList(opts)\r\n  const rep = opts.reps[repIndex]\r\n  // prop specified twice therefore start new rep by cloning the current\r\n  if (rep.hasOwnProperty(prop)) {\r\n    repIndex = opts.reps.length\r\n    opts.reps[repIndex] = utils.deriveDeep(rep, true)\r\n  }\r\n  if (value !== undefined) {\r\n    opts.reps[repIndex][prop] = value\r\n  }\r\n}\r\n\r\nfunction addObject(opts, params, options) {\r\n  if (opts._objects === undefined) {\r\n    opts._objects = []\r\n  }\r\n\r\n  const [type, newOpts] = options\r\n  const newObj = {\r\n    type,\r\n    params\r\n  }\r\n\r\n  if (newOpts !== undefined) {\r\n    newObj.opts = newOpts\r\n  }\r\n\r\n  opts._objects[opts._objects.length] = newObj\r\n}\r\n\r\nfunction parseParams(str, params) {\r\n  const sep = str.indexOf(',')\r\n  if (sep >= 0) {\r\n    params.push(str.substr(sep + 1).split(','))\r\n    return str.substr(0, sep)\r\n  }\r\n  // keep this untouched if no params were extracted\r\n  return str\r\n}\r\n\r\nfunction extractArgs(input, defaultsDict, params) {\r\n  if (input) {\r\n    const bang = input.indexOf(cOptsSep)\r\n    const inputVal = parseParams(\r\n      input.substr(0, bang >= 0 ? bang : undefined),\r\n      params\r\n    )\r\n    if (bang >= 0) {\r\n      const args = input.substr(bang + 1).split(cLSep)\r\n      input = inputVal\r\n      if (defaultsDict) {\r\n        const defaults = defaultsDict[input]\r\n        const opts = utils.deriveDeep(defaults, true)\r\n        args.forEach((arg) => {\r\n          const pair = arg.split(cL2Ass, 2)\r\n          const key = decodeURIComponent(pair[0])\r\n          const value = decodeURIComponent(pair[1])\r\n          const adapter = adapters[typeof get(defaults, key)]\r\n          if (adapter) {\r\n            set(opts, key, adapter(value))\r\n          } else {\r\n            logger.warn(`Unknown argument \"${key}\" for option \"${input}\"`)\r\n          }\r\n        })\r\n        if (Object.keys(opts).length > 0) {\r\n          input = [input, opts]\r\n        }\r\n      }\r\n    } else {\r\n      input = inputVal\r\n    }\r\n  }\r\n  return input\r\n}\r\n\r\nconst actions = {\r\n  l: 'load',\r\n  load: String,\r\n  t: 'type',\r\n  type: String,\r\n  v: 'view',\r\n  view: String,\r\n  u: 'unit',\r\n  unit: Number,\r\n  menu: asBoolean,\r\n\r\n  // Commands\r\n\r\n  o: 'object',\r\n  object(value, opts) {\r\n    const params = []\r\n    let options = extractArgs(value, settings.defaults.objects, params)\r\n    if (!Array.isArray(options)) {\r\n      options = [options]\r\n    }\r\n    addObject(opts, params[0], options)\r\n  },\r\n\r\n  p: 'preset',\r\n  preset(value, opts) {\r\n    opts.preset = value\r\n    opts.reps = null\r\n    ensureRepList(opts)\r\n  },\r\n\r\n  r: 'rep',\r\n  rep(value, opts) {\r\n    ensureRepList(opts)\r\n    repIndex = Number(value)\r\n    // clamp the index to one greater than the last\r\n    repIndex =\r\n      repIndex <= opts.reps.length\r\n        ? repIndex < 0\r\n          ? 0\r\n          : repIndex\r\n        : opts.reps.length\r\n    // create a new rep if it is adjacent to the existing ones\r\n    if (repIndex === opts.reps.length) {\r\n      // if there is no rep to derive from, derive from the first rep of the default\r\n      opts.reps[repIndex] =\r\n        repIndex > 0\r\n          ? utils.deriveDeep(opts.reps[repIndex - 1], true)\r\n          : utils.deriveDeep(settings.defaults.presets.default[0], true)\r\n    }\r\n  },\r\n\r\n  s: 'select',\r\n  select(value, opts) {\r\n    ensureRepAssign(opts, 'selector', value)\r\n  },\r\n\r\n  m: 'mode',\r\n  mode(value, opts) {\r\n    ensureRepAssign(opts, 'mode', extractArgs(value, settings.defaults.modes))\r\n  },\r\n\r\n  c: 'color',\r\n  color(value, opts) {\r\n    ensureRepAssign(\r\n      opts,\r\n      'colorer',\r\n      extractArgs(value, settings.defaults.colorers)\r\n    )\r\n  },\r\n\r\n  mt: 'material',\r\n  material(value, opts) {\r\n    ensureRepAssign(\r\n      opts,\r\n      'material',\r\n      extractArgs(value, settings.defaults.materials)\r\n    )\r\n  },\r\n\r\n  dup(value, opts) {\r\n    ensureRepList(opts)\r\n    const { reps } = opts\r\n    const rep = reps[repIndex]\r\n    repIndex = reps.length\r\n    reps[repIndex] = utils.deriveDeep(rep, true)\r\n  },\r\n\r\n  // Settings shortcuts\r\n\r\n  ar: 'autoResolution'\r\n}\r\n\r\nfunction _fromArray(entries) {\r\n  repIndex = 0\r\n  const opts = {}\r\n  for (let i = 0, n = entries.length; i < n; ++i) {\r\n    const /** string[] */ entry = entries[i]\r\n    let /** string? */ key = entry[0]\r\n    const /** string? */ value = entry[1]\r\n    if (actions.hasOwnProperty(key)) {\r\n      let /** function|string? */ action = actions[key]\r\n      while (isString(action)) {\r\n        key = action\r\n        action = actions[key]\r\n      }\r\n      if (typeof action === 'function') {\r\n        const result = action(value, opts)\r\n        if (result !== undefined) opts[key] = result\r\n      }\r\n    } else {\r\n      const adapter = adapters[typeof get(settings.defaults, key)]\r\n      if (adapter) {\r\n        set(opts, `settings.${key}`, adapter(value))\r\n      } else {\r\n        logger.warn(`Unknown option \"${key}\"`)\r\n      }\r\n    }\r\n  }\r\n  return opts\r\n}\r\n\r\nfunction fromAttr(attr) {\r\n  return _fromArray(utils.getUrlParameters(`?${attr || ''}`))\r\n}\r\n\r\nfunction fromURL(url) {\r\n  return _fromArray(utils.getUrlParameters(url))\r\n}\r\n\r\nfunction _processOptsForURL(opts) {\r\n  const str = []\r\n  let i = 0\r\n  utils.forInRecursive(opts, (value, key) => {\r\n    str[i++] =\r\n      encodeQueryComponentL2(key) + cL2Ass + encodeQueryComponentL2(value)\r\n  })\r\n  return str.join(cLSep)\r\n}\r\n\r\nfunction _processArgsForURL(args) {\r\n  if (!isArray(args)) {\r\n    return args\r\n  }\r\n  if (args.length < 2) {\r\n    return args[0]\r\n  }\r\n  return `${args[0]}${cOptsSep}${_processOptsForURL(args[1])}`\r\n}\r\n\r\nfunction _processObjForURL(objOpts) {\r\n  if (!objOpts || !objOpts.type) {\r\n    return undefined\r\n  }\r\n  let res = objOpts.type\r\n  if (isArray(objOpts.params) && objOpts.params.length > 0) {\r\n    res += `,${objOpts.params.join(',')}`\r\n  }\r\n  if (objOpts.opts) {\r\n    res += cOptsSep + _processOptsForURL(objOpts.opts)\r\n  }\r\n  return res\r\n}\r\n\r\nfunction toURL(opts) {\r\n  const stringList = []\r\n  let idx = 0\r\n\r\n  function checkAndAdd(prefix, value) {\r\n    if (value !== null && value !== undefined) {\r\n      stringList[idx++] =\r\n        encodeQueryComponentL1(prefix) + cL1Ass + encodeQueryComponentL1(value)\r\n    }\r\n  }\r\n\r\n  function addReps(repList) {\r\n    if (!repList) {\r\n      return\r\n    }\r\n    for (let i = 0, n = repList.length; i < n; ++i) {\r\n      if (isEmpty(repList[i])) {\r\n        continue\r\n      }\r\n      checkAndAdd('r', i)\r\n      checkAndAdd('s', repList[i].selector)\r\n      checkAndAdd('m', _processArgsForURL(repList[i].mode))\r\n      checkAndAdd('c', _processArgsForURL(repList[i].colorer))\r\n      checkAndAdd('mt', _processArgsForURL(repList[i].material))\r\n    }\r\n  }\r\n\r\n  function addObjects(objList) {\r\n    if (!objList) {\r\n      return\r\n    }\r\n    for (let i = 0, n = objList.length; i < n; ++i) {\r\n      checkAndAdd('o', _processObjForURL(objList[i]))\r\n    }\r\n  }\r\n\r\n  checkAndAdd('l', opts.load)\r\n  checkAndAdd('u', opts.unit)\r\n  checkAndAdd('p', opts.preset)\r\n  addReps(opts.reps)\r\n  addObjects(opts._objects)\r\n\r\n  checkAndAdd('v', opts.view)\r\n\r\n  utils.forInRecursive(opts.settings, (value, key) => {\r\n    // I heard these lines in the whispers of the Gods\r\n    // Handle preset setting in reps\r\n    if (key === 'preset') {\r\n      return\r\n    }\r\n    checkAndAdd(key, value)\r\n  })\r\n\r\n  let url = ''\r\n  if (typeof window !== 'undefined') {\r\n    const { location } = window\r\n    url = `${location.protocol}//${location.host}${location.pathname}`\r\n  }\r\n  if (stringList.length > 0) {\r\n    url += `?${stringList.join('&')}`\r\n  }\r\n\r\n  return url\r\n}\r\n\r\nfunction _processOptsForScript(opts) {\r\n  const str = []\r\n  let i = 0\r\n  utils.forInRecursive(opts, (value, key) => {\r\n    str[i++] = `${key}=${utils.enquoteString(value)}`\r\n  })\r\n  return str.join(' ')\r\n}\r\n\r\nfunction _processArgsForScript(args) {\r\n  if (!isArray(args)) {\r\n    return args\r\n  }\r\n  if (args.length < 2) {\r\n    return args[0]\r\n  }\r\n  return `${args[0]} ${_processOptsForScript(args[1])}`\r\n}\r\n\r\nfunction _processObjForScript(objOpts) {\r\n  if (!objOpts || !objOpts.type) {\r\n    return undefined\r\n  }\r\n  let res = objOpts.type\r\n  if (isArray(objOpts.params) && objOpts.params.length > 0) {\r\n    res += ` ${objOpts.params.map(utils.enquoteString).join(' ')}`\r\n  }\r\n  if (objOpts.opts) {\r\n    res += ` ${_processOptsForScript(objOpts.opts)}`\r\n  }\r\n  return res\r\n}\r\n\r\nfunction _processRepsForScript(rep, index) {\r\n  const repString = []\r\n  let strIdx = 0\r\n  function localAdd(prefix, value) {\r\n    if (value !== null && value !== undefined) {\r\n      repString[strIdx++] = prefix + value\r\n    }\r\n  }\r\n  if (isEmpty(rep)) {\r\n    return null\r\n  }\r\n  localAdd('', index)\r\n  localAdd('s=', utils.enquoteString(rep.selector))\r\n  localAdd('m=', _processArgsForScript(rep.mode))\r\n  localAdd('c=', _processArgsForScript(rep.colorer))\r\n  localAdd('mt=', _processArgsForScript(rep.material))\r\n  return repString.join(' ')\r\n}\r\n\r\nfunction toScript(opts) {\r\n  const commandsList = []\r\n  let idx = 0\r\n  function checkAndAdd(command, value, saveQuotes) {\r\n    if (value !== null && value !== undefined) {\r\n      const quote = typeof value === 'string' && saveQuotes ? '\"' : ''\r\n      commandsList[idx++] = `${command} ${quote}${value}${quote}`.trim()\r\n    }\r\n  }\r\n\r\n  function addReps(repList) {\r\n    if (!repList) {\r\n      return\r\n    }\r\n\r\n    for (let i = 0, n = repList.length; i < n; ++i) {\r\n      checkAndAdd('rep', _processRepsForScript(repList[i], i))\r\n    }\r\n  }\r\n\r\n  function addObjects(objList) {\r\n    if (!objList) {\r\n      return\r\n    }\r\n    for (let i = 0, n = objList.length; i < n; ++i) {\r\n      checkAndAdd('', _processObjForScript(objList[i]))\r\n    }\r\n  }\r\n\r\n  checkAndAdd('set', 'autobuild false')\r\n  checkAndAdd('load', opts.load, true)\r\n  checkAndAdd('unit', opts.unit)\r\n  checkAndAdd('preset', opts.preset)\r\n  addReps(opts.reps)\r\n  addObjects(opts._objects)\r\n\r\n  utils.forInRecursive(opts.settings, (value, key) => {\r\n    // I heard these lines in the whispers of the Gods\r\n    // Handle preset setting in reps\r\n    if (key === 'preset') {\r\n      return\r\n    }\r\n    checkAndAdd(`set ${key}`, value, true)\r\n  })\r\n  checkAndAdd('view', opts.view)\r\n  checkAndAdd('set', 'autobuild true')\r\n  return commandsList.join('\\n')\r\n}\r\n\r\nexport default {\r\n  fromURL,\r\n  fromAttr,\r\n  adapters,\r\n  toURL,\r\n  toScript\r\n}\r\n",
		"export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}",
		"/**\r\n * Atom measurements.\r\n *\r\n * @param {Residue} residue    - (required) Residue containing the atom\r\n * @param {string} name        - (required) Name, unique in the residue\r\n * @param {Element} type       - (required) Chemical element reference\r\n * @param {Vector3} position - Registered coordinates\r\n *\r\n * @param {number} role        - Role of atom inside monomer: Lead and wing are particularity interesting\r\n * @param {boolean} het        - Non-standard residue indicator\r\n *\r\n * @param {number} serial      - Serial number, unique in the model\r\n * @param {string} location    - Alternative location indicator (usually space or A-Z)\r\n * @param {number} occupancy   - Occupancy percentage, from 0 to 1\r\n * @param {number} temperature - Temperature\r\n * @param {number} charge      - Charge\r\n *\r\n * @exports Atom\r\n * @constructor\r\n */\r\n\r\nclass Atom {\r\n  constructor(\r\n    residue,\r\n    name,\r\n    type,\r\n    position,\r\n    role,\r\n    het,\r\n    serial,\r\n    location,\r\n    occupancy,\r\n    temperature,\r\n    charge\r\n  ) {\r\n    this.index = -1\r\n    this.residue = residue\r\n    this.name = name\r\n    this.element = type\r\n    this.position = position\r\n    this.role = role\r\n    this.mask = 1 | 0\r\n\r\n    this.het = het\r\n\r\n    this.serial = serial\r\n    this.location = (location || ' ').charCodeAt(0)\r\n    this.occupancy = occupancy || 1\r\n    this.temperature = temperature\r\n    this.charge = charge\r\n    this.hydrogenCount = -1 // explicitly invalid\r\n    this.radicalCount = 0\r\n    this.valence = -1 // explicitly invalid\r\n\r\n    this.bonds = []\r\n\r\n    this.flags = 0x0000\r\n    if (type.name === 'H') {\r\n      this.flags |= Atom.Flags.HYDROGEN\r\n    } else if (type.name === 'C') {\r\n      this.flags |= Atom.Flags.CARBON\r\n    }\r\n  }\r\n\r\n  isHet() {\r\n    return this.het\r\n  }\r\n\r\n  isHydrogen() {\r\n    return this.element.number === 1\r\n  }\r\n\r\n  getVisualName() {\r\n    const { name } = this\r\n    if (name.length > 0) {\r\n      return name\r\n    }\r\n    return this.element.name.trim()\r\n  }\r\n\r\n  forEachBond(process) {\r\n    const { bonds } = this\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      process(bonds[i])\r\n    }\r\n  }\r\n\r\n  getFullName() {\r\n    let name = ''\r\n    if (this.residue !== null) {\r\n      if (this.residue._chain !== null) {\r\n        name += `${this.residue._chain.getName()}.`\r\n      }\r\n      name += `${this.residue._sequence}.`\r\n    }\r\n    name += this.name\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Enumeration of atom flag values.\r\n   *\r\n   * @enum {number}\r\n   * @readonly\r\n   */\r\n  static Flags = {\r\n    CARBON: 0x0001,\r\n    // OXYGEN: 0x0002,\r\n    // NITROGEN: 0x0004,\r\n    HYDROGEN: 0x0008,\r\n    /** Non-polar hydrogen (it is also a HYDROGEN) */\r\n    NONPOLARH: 0x1008\r\n  }\r\n}\r\n\r\nexport default Atom\r\n",
		"class Element {\r\n  constructor(number, name, fullName, weight, radius, radiusBonding, hValency) {\r\n    this.number = number\r\n    this.name = name\r\n    this.fullName = fullName\r\n    this.weight = weight\r\n    this.radius = radius\r\n    this.radiusBonding = radiusBonding\r\n    this.hydrogenValency = hValency\r\n  }\r\n\r\n  static Constants = {\r\n    /* eslint-disable no-magic-numbers */\r\n    U1: 1,\r\n    Lead: 2,\r\n    U2: 3,\r\n    Wing: 4,\r\n    U18: 18\r\n    /* eslint-enable no-magic-numbers */\r\n  }\r\n\r\n  static Role = {\r\n    /* eslint-disable no-magic-numbers */\r\n    N: Element.Constants.U1,\r\n    CA: Element.Constants.Lead,\r\n    C: Element.Constants.U2,\r\n    O: Element.Constants.Wing,\r\n    SG: Element.Constants.U18\r\n    /* eslint-enable no-magic-numbers */\r\n  }\r\n\r\n  // DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\n  static ByAtomicNumber = [\r\n    /* eslint-disable no-magic-numbers */\r\n    null,\r\n    new Element(1, 'H', 'Hydrogen', 1.008, 1.2, 0.23, [1]),\r\n    new Element(2, 'HE', 'Helium', 4.003, 1.4, 0.93, [0]),\r\n    new Element(3, 'LI', 'Lithium', 6.941, 1.82, 0.68, [1]),\r\n    new Element(4, 'BE', 'Beryllium', 9.012, 1.7, 0.35, [2]),\r\n    new Element(5, 'B', 'Boron', 10.81, 2.08, 0.83, [3]),\r\n    new Element(6, 'C', 'Carbon', 12.011, 1.95, 0.68, [4]),\r\n    new Element(7, 'N', 'Nitrogen', 14.007, 1.85, 0.68, [3, 5]),\r\n    new Element(8, 'O', 'Oxygen', 15.999, 1.7, 0.68, [2, 4]),\r\n    new Element(9, 'F', 'Fluorine', 18.998, 1.73, 0.64, [1]),\r\n    new Element(10, 'NE', 'Neon', 20.18, 1.54, 1.12, [0]),\r\n    new Element(11, 'NA', 'Sodium', 22.99, 2.27, 0.97, [1]),\r\n    new Element(12, 'MG', 'Magnesium', 24.305, 1.73, 1.1, [2]),\r\n    new Element(13, 'AL', 'Aluminum', 26.981, 2.05, 1.35, [3]),\r\n    new Element(14, 'SI', 'Silicon', 28.086, 2.1, 1.2, [4]),\r\n    new Element(15, 'P', 'Phosphorus', 30.974, 2.08, 0.75, [3, 5]),\r\n    new Element(16, 'S', 'Sulfur', 32.07, 2, 1.02, [2, 4, 6]),\r\n    new Element(17, 'CL', 'Chlorine', 35.453, 1.97, 0.99, [1, 3, 5, 7]),\r\n    new Element(18, 'AR', 'Argon', 39.948, 1.88, 1.57, [0]),\r\n    new Element(19, 'K', 'Potassium', 39.1, 2.75, 1.33, [1]),\r\n    new Element(20, 'CA', 'Calcium', 40.08, 1.973, 0.99, [2]),\r\n    new Element(21, 'SC', 'Scandium', 44.956, 1.7, 1.44, [0]),\r\n    new Element(22, 'TI', 'Titanium', 47.88, 1.7, 1.47, [0]),\r\n    new Element(23, 'V', 'Vanadium', 50.941, 1.7, 1.33, [0]),\r\n    new Element(24, 'CR', 'Chromium', 52, 1.7, 1.35, [0]),\r\n    new Element(25, 'MN', 'Manganese', 54.938, 1.7, 1.35, [0]),\r\n    new Element(26, 'FE', 'Iron', 55.847, 1.7, 1.34, [0]),\r\n    new Element(27, 'CO', 'Cobalt', 58.93, 1.7, 1.33, [0]),\r\n    new Element(28, 'NI', 'Nickel', 58.69, 1.63, 1.5, [0]),\r\n    new Element(29, 'CU', 'Copper', 63.55, 1.4, 1.52, [0]),\r\n    new Element(30, 'ZN', 'Zinc', 65.39, 1.39, 1.45, [0]),\r\n    new Element(31, 'GA', 'Gallium', 69.72, 1.87, 1.22, [3]),\r\n    new Element(32, 'GE', 'Germanium', 72.61, 1.7, 1.17, [4]),\r\n    new Element(33, 'AS', 'Arsenic', 74.92, 1.85, 1.21, [3, 5]),\r\n    new Element(34, 'SE', 'Selenium', 78.96, 1.9, 1.22, [2, 4, 6]),\r\n    new Element(35, 'BR', 'Bromine', 79.9, 2.1, 1.21, [1, 3, 5, 7]),\r\n    new Element(36, 'KR', 'Krypton', 83.8, 2.02, 1.91, [0]),\r\n    new Element(37, 'RB', 'Rubidium', 85.47, 1.7, 1.47, [1]),\r\n    new Element(38, 'SR', 'Strontium', 87.62, 1.7, 1.12, [2]),\r\n    new Element(39, 'Y', 'Yttrium', 88.91, 1.7, 1.78, [0]),\r\n    new Element(40, 'ZR', 'Zirconium', 91.22, 1.7, 1.56, [0]),\r\n    new Element(41, 'NB', 'Niobium', 92.91, 1.7, 1.48, [0]),\r\n    new Element(42, 'MO', 'Molybdenum', 95.94, 1.7, 1.47, [0]),\r\n    new Element(43, 'TC', 'Technetium', 98.91, 1.7, 1.35, [0]),\r\n    new Element(44, 'RU', 'Ruthenium', 101.07, 1.7, 1.4, [0]),\r\n    new Element(45, 'RH', 'Rhodium', 102.91, 1.7, 1.45, [0]),\r\n    new Element(46, 'PD', 'Palladium', 106.42, 1.63, 1.5, [0]),\r\n    new Element(47, 'AG', 'Silver', 107.87, 1.72, 1.59, [0]),\r\n    new Element(48, 'CD', 'Cadmium', 112.41, 1.58, 1.69, [0]),\r\n    new Element(49, 'IN', 'Indium', 114.82, 1.93, 1.63, [3]),\r\n    new Element(50, 'SN', 'Tin', 118.71, 2.17, 1.46, [2, 4]),\r\n    new Element(51, 'SB', 'Antimony', 121.75, 2.2, 1.46, [3, 5]),\r\n    new Element(52, 'TE', 'Tellurium', 127.6, 2.06, 1.47, [2, 4, 6]),\r\n    new Element(53, 'I', 'Iodine', 126.91, 2.15, 1.4, [1, 3, 5, 7]),\r\n    new Element(54, 'XE', 'Xenon', 131.29, 2.16, 1.98, [0]),\r\n    new Element(55, 'CS', 'Cesium', 132.91, 1.7, 1.67, [1]),\r\n    new Element(56, 'BA', 'Barium', 137.33, 1.7, 1.34, [2]),\r\n    new Element(57, 'LA', 'Lanthanum', 138.91, 1.7, 1.87, [0]),\r\n    new Element(58, 'CE', 'Cerium', 140.12, 1.7, 1.83, [0]),\r\n    new Element(59, 'PR', 'Praseodymium', 140.91, 1.7, 1.82, [0]),\r\n    new Element(60, 'ND', 'Neodymium', 144.24, 1.7, 1.81, [0]),\r\n    new Element(61, 'PM', 'Promethium', 144.9, 1.7, 1.8, [0]),\r\n    new Element(62, 'SM', 'Samarium', 150.36, 1.7, 1.8, [0]),\r\n    new Element(63, 'EU', 'Europium', 151.96, 1.7, 1.99, [0]),\r\n    new Element(64, 'GD', 'Gadolinium', 157.25, 1.7, 1.79, [0]),\r\n    new Element(65, 'TB', 'Terbium', 158.93, 1.7, 1.76, [0]),\r\n    new Element(66, 'DY', 'Dysprosium', 162.5, 1.7, 1.75, [0]),\r\n    new Element(67, 'HO', 'Holmium', 164.93, 1.7, 1.74, [0]),\r\n    new Element(68, 'ER', 'Erbium', 167.26, 1.7, 1.73, [0]),\r\n    new Element(69, 'TM', 'Thulium', 168.93, 1.7, 1.72, [0]),\r\n    new Element(70, 'YB', 'Ytterbium', 173.04, 1.7, 1.94, [0]),\r\n    new Element(71, 'LU', 'Lutetium', 174.97, 1.7, 1.72, [0]),\r\n    new Element(72, 'HF', 'Hafnium', 178.49, 1.7, 1.57, [0]),\r\n    new Element(73, 'TA', 'Tantalum', 180.95, 1.7, 1.43, [0]),\r\n    new Element(74, 'W', 'Tungsten', 183.85, 1.7, 1.37, [0]),\r\n    new Element(75, 'RE', 'Rhenium', 186.21, 1.7, 1.35, [0]),\r\n    new Element(76, 'OS', 'Osmium', 190.2, 1.7, 1.37, [0]),\r\n    new Element(77, 'IR', 'Iridium', 192.22, 1.7, 1.32, [0]),\r\n    new Element(78, 'PT', 'Platinum', 195.08, 1.72, 1.5, [0]),\r\n    new Element(79, 'AU', 'Gold', 196.97, 1.66, 1.5, [0]),\r\n    new Element(80, 'HG', 'Mercury', 200.59, 1.55, 1.7, [0]),\r\n    new Element(81, 'TL', 'Thallium', 204.38, 1.96, 1.55, [1, 3]),\r\n    new Element(82, 'PB', 'Lead', 207.2, 2.02, 1.54, [2, 4]),\r\n    new Element(83, 'BI', 'Bismuth', 208.98, 1.7, 1.54, [3, 5]),\r\n    new Element(84, 'PO', 'Polonium', 210, 1.7, 1.68, [2, 4, 6]),\r\n    new Element(85, 'AT', 'Astatine', 210, 1.7, 1.7, [1, 3, 5, 7]),\r\n    new Element(86, 'RN', 'Radon', 222, 1.7, 2.4, [0]),\r\n    new Element(87, 'FR', 'Francium', 223, 1.7, 2, [1]),\r\n    new Element(88, 'RA', 'Radium', 226.03, 1.7, 1.9, [2]),\r\n    new Element(89, 'AC', 'Actinium', 227.03, 1.7, 1.88, [0]),\r\n    new Element(90, 'TH', 'Thorium', 232.04, 1.7, 1.79, [0]),\r\n    new Element(91, 'PA', 'Protactinium', 231.04, 1.7, 1.61, [0]),\r\n    new Element(92, 'U', 'Uranium', 238.03, 1.86, 1.58, [0]),\r\n    new Element(93, 'NP', 'Neptunium', 237.05, 1.7, 1.55, [0]),\r\n    new Element(94, 'PU', 'Plutonium', 239.1, 1.7, 1.53, [0]),\r\n    new Element(95, 'AM', 'Americium', 243.1, 1.7, 1.51, [0]),\r\n    new Element(96, 'CM', 'Curium', 247.1, 1.7, 1.5, [0]),\r\n    new Element(97, 'BK', 'Berkelium', 247.1, 1.7, 1.5, [0]),\r\n    new Element(98, 'CF', 'Californium', 252.1, 1.7, 1.5, [0]),\r\n    new Element(99, 'ES', 'Einsteinium', 252.1, 1.7, 1.5, [0]),\r\n    new Element(100, 'FM', 'Fermium', 257.1, 1.7, 1.5, [0]),\r\n    new Element(101, 'MD', 'Mendelevium', 256.1, 1.7, 1.5, [0]),\r\n    new Element(102, 'NO', 'Nobelium', 259.1, 1.7, 1.5, [0]),\r\n    new Element(103, 'LR', 'Lawrencium', 260.1, 1.7, 1.5, [0]),\r\n    new Element(104, 'RF', 'Rutherfordium', 261, 1.7, 1.6, [0]),\r\n    new Element(105, 'DB', 'Dubnium', 262, 1.7, 1.6, [0]),\r\n    new Element(106, 'SG', 'Seaborgium', 263, 1.7, 1.6, [0]),\r\n    new Element(107, 'BH', 'Bohrium', 262, 1.7, 1.6, [0]),\r\n    new Element(108, 'HS', 'Hassium', 265, 1.7, 1.6, [0]),\r\n    new Element(109, 'MT', 'Meitnerium', 268, 1.7, 1.6, [0])\r\n    /* eslint-enable no-magic-numbers */\r\n  ]\r\n\r\n  // DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\n  static ByName = {\r\n    // Duplicate atomic numbers (isotopes)\r\n    /* eslint-disable no-magic-numbers */\r\n    D: new Element(1, 'D', 'Deuterium', 2.014, 1.2, 0.23, [1]),\r\n    T: new Element(1, 'T', 'Tritium', 3.016, 1.2, 0.23, [1])\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    // All regular elements will be added later, automatically\r\n  }\r\n}\r\n\r\n;(function () {\r\n  const byAtomicNumber = Element.ByAtomicNumber\r\n  const byName = Element.ByName\r\n  for (let i = 0, n = byAtomicNumber.length; i < n; ++i) {\r\n    const element = byAtomicNumber[i]\r\n    if (element) {\r\n      byName[element.name] = element\r\n    }\r\n  }\r\n})()\r\n\r\n// find atom type by chemical element (or create if missing)\r\nElement.getByName = function (element) {\r\n  let type = Element.ByName[element]\r\n  if (!type) {\r\n    type = Element.ByName[element] = new Element(\r\n      0,\r\n      element,\r\n      'Unknown',\r\n      0,\r\n      1.0,\r\n      0.01,\r\n      [0]\r\n    )\r\n  }\r\n  return type\r\n}\r\n\r\nexport default Element\r\n",
		"const cBondTypes = {\r\n  /** Was generated manually */\r\n  UNKNOWN: 0,\r\n  /** Simple covalent bond */\r\n  COVALENT: 1,\r\n  /** Aromatic bond */\r\n  AROMATIC: 2\r\n}\r\n\r\nfunction getAtomPos(atom) {\r\n  return atom.position\r\n}\r\n\r\n/**\r\n * Bond between atoms.\r\n *\r\n * @param {Atom} left     - The first atom.\r\n * @param {Atom} right    - The second atom.\r\n * @param {number} order - Order of current bond.\r\n * @param {number} type - Bond type.\r\n * @param {boolean} fixed - Indicator of a pre-specified connection (in contrast with guessed one).\r\n *\r\n * @exports Bond\r\n * @constructor\r\n */\r\nclass Bond {\r\n  constructor(left, right, order, type, fixed) {\r\n    this._left = left\r\n    this._right = right\r\n    this._fixed = fixed\r\n    this._index = -1\r\n    if (left > right) {\r\n      throw new Error('In a bond atom indices must be in increasing order')\r\n    }\r\n    this._order = order\r\n    this._type = type\r\n  }\r\n\r\n  getLeft() {\r\n    return this._left\r\n  }\r\n\r\n  getRight() {\r\n    return this._right\r\n  }\r\n\r\n  getOrder() {\r\n    return this._order\r\n  }\r\n\r\n  calcLength() {\r\n    return this._left.position.distanceTo(this._right.position)\r\n  }\r\n\r\n  _forEachNeighbour(currAtom, process) {\r\n    const { bonds } = currAtom\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      process(bonds[i]._left !== currAtom ? bonds[i]._left : bonds[i]._right)\r\n    }\r\n  }\r\n\r\n  forEachLevelOne(process) {\r\n    const left = this._left\r\n    const right = this._right\r\n    this._forEachNeighbour(left, (atom) => {\r\n      if (atom === right) {\r\n        return\r\n      }\r\n      process(atom)\r\n    })\r\n    this._forEachNeighbour(right, (atom) => {\r\n      if (atom === left) {\r\n        return\r\n      }\r\n      process(atom)\r\n    })\r\n  }\r\n\r\n  forEachLevelTwo(process) {\r\n    // TODO refactor this piece of an art?\r\n    const left = this._left\r\n    const right = this._right\r\n    const self = this\r\n    self._forEachNeighbour(left, (atom) => {\r\n      if (atom === right) {\r\n        return\r\n      }\r\n      self._forEachNeighbour(atom, (l2Atom) => {\r\n        if (l2Atom === left) {\r\n          return\r\n        }\r\n        process(l2Atom)\r\n      })\r\n    })\r\n    self._forEachNeighbour(right, (atom) => {\r\n      if (atom === left) {\r\n        return\r\n      }\r\n      self._forEachNeighbour(atom, (l2Atom) => {\r\n        if (l2Atom === right) {\r\n          return\r\n        }\r\n        process(l2Atom)\r\n      })\r\n    })\r\n  }\r\n\r\n  _fixDir(refPoint, currDir, posGetter) {\r\n    // count atoms to the right and to the left of the current plane\r\n    let rightCount = 0\r\n    let leftCount = 0\r\n    const tmpVec = refPoint.clone()\r\n    function checkDir(atom) {\r\n      tmpVec.copy(posGetter(atom))\r\n      tmpVec.sub(refPoint)\r\n      const dotProd = currDir.dot(tmpVec)\r\n      if (dotProd > 0) {\r\n        ++rightCount\r\n      } else {\r\n        ++leftCount\r\n      }\r\n    }\r\n    function checkCarbon(atom) {\r\n      if (atom.element.name === 'C') {\r\n        checkDir(atom)\r\n      }\r\n    }\r\n    // count all atoms to the left and right of our plane, start from level 1 and carbons\r\n    const stages = [\r\n      [this.forEachLevelOne, checkCarbon],\r\n      [this.forEachLevelOne, checkDir],\r\n      [this.forEachLevelTwo, checkCarbon],\r\n      [this.forEachLevelTwo, checkDir]\r\n    ]\r\n\r\n    for (let stageId = 0; stageId < stages.length; ++stageId) {\r\n      stages[stageId][0].call(this, stages[stageId][1])\r\n      if (leftCount > rightCount) {\r\n        return currDir.multiplyScalar(-1)\r\n      }\r\n      if (leftCount < rightCount) {\r\n        return currDir\r\n      }\r\n    }\r\n    return currDir\r\n  }\r\n\r\n  calcNormalDir(posGetter) {\r\n    const left = this._left\r\n    const right = this._right\r\n    let first = left\r\n    let second = right\r\n    posGetter = posGetter === undefined ? getAtomPos : posGetter\r\n    if (left.bonds.length > right.bonds.length) {\r\n      first = right\r\n      second = left\r\n    }\r\n    let third = first\r\n    let maxNeibs = 0\r\n    const { bonds } = second\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      let another = bonds[i]._left\r\n      if (bonds[i]._left === second) {\r\n        another = bonds[i]._right\r\n      }\r\n      if (another.bonds.length > maxNeibs && another !== first) {\r\n        third = another\r\n        maxNeibs = another.bonds.length\r\n      }\r\n    }\r\n    const secondPos = posGetter(second)\r\n    const firstV = posGetter(first).clone().sub(secondPos)\r\n    const secondV = posGetter(third).clone().sub(secondPos)\r\n    secondV.crossVectors(firstV, secondV)\r\n    if (secondV.lengthSq() < 0.0001) {\r\n      secondV.set(0, 1, 0)\r\n    }\r\n    firstV.normalize()\r\n    secondV.normalize()\r\n    firstV.crossVectors(secondV, firstV)\r\n    if (firstV.lengthSq() < 0.0001) {\r\n      firstV.set(0, 1, 0)\r\n    }\r\n    firstV.normalize()\r\n    return this._fixDir(secondPos, firstV, posGetter)\r\n  }\r\n\r\n  static BondType = cBondTypes\r\n}\r\n\r\nBond.prototype.BondType = cBondTypes\r\n\r\nexport default Bond\r\n",
		"import Atom from './Atom'\r\nimport Element from './Element'\r\nimport { Vector3 } from 'three'\r\n\r\nconst cNucleicControlNames = [\"C3'\", 'C3*', 'P', 'H5T', 'H3T']\r\nconst cNucleicWing1Names = ['OP1', 'O1P']\r\nconst cNucleicWing2Names = ['OP2', 'O2P']\r\n\r\nconst cCylinderSource = [\"C3'\", 'C3*', 'C1', \"C1'\", 'C1*', 'P']\r\nconst cCylinderTarget = [\r\n  {\r\n    types: ['A', 'DA', 'G', 'DG'],\r\n    atoms: ['N1']\r\n  },\r\n  {\r\n    types: ['C', 'DC'],\r\n    atoms: ['N3']\r\n  },\r\n  {\r\n    types: ['T', 'DT', 'U', 'DU'],\r\n    atoms: ['O4']\r\n  }\r\n]\r\n\r\n/**\r\n * Residue instance.\r\n *\r\n * @param {Chain} chain      - Chain this residue belongs to.\r\n * @param {ResidueType} type - Generic residue instance type.\r\n * @param {number} sequence  - Sequence ID.\r\n * @param {string} icode     - One character insertion code (usually space or A-Z).\r\n *\r\n * @exports Residue\r\n * @constructor\r\n */\r\nclass Residue {\r\n  constructor(chain, type, sequence, icode) {\r\n    this._chain = chain\r\n    this._component = null\r\n    this._type = type\r\n    this._sequence = sequence\r\n    this._icode = icode\r\n    this._mask = 1 | 0\r\n    this._index = -1\r\n\r\n    this._atoms = []\r\n    this._secondary = null\r\n    this._firstAtom = null\r\n    this._leadAtom = null\r\n    this._wingAtom = null\r\n    this._lastAtom = null\r\n    this._controlPoint = null\r\n    this._midPoint = null\r\n    this._wingVector = null\r\n    this._cylinders = null\r\n    this._isValid = true\r\n    this._het = false\r\n    this._molecule = null\r\n    this.temperature = null\r\n    this.occupancy = null\r\n  }\r\n\r\n  // Getters and setters\r\n  getChain() {\r\n    return this._chain\r\n  }\r\n\r\n  getMolecule() {\r\n    return this._molecule\r\n  }\r\n\r\n  getType() {\r\n    return this._type\r\n  }\r\n\r\n  getSequence() {\r\n    return this._sequence\r\n  }\r\n\r\n  getSecondary() {\r\n    return this._secondary\r\n  }\r\n\r\n  getICode() {\r\n    return this._icode\r\n  }\r\n\r\n  // Other methods\r\n\r\n  addAtom(\r\n    name,\r\n    type,\r\n    xyz,\r\n    role,\r\n    het,\r\n    serial,\r\n    altLoc,\r\n    occupancy,\r\n    tempFactor,\r\n    charge\r\n  ) {\r\n    const atom = new Atom(\r\n      this,\r\n      name,\r\n      type,\r\n      xyz,\r\n      role,\r\n      het,\r\n      serial,\r\n      altLoc,\r\n      occupancy,\r\n      tempFactor,\r\n      charge\r\n    )\r\n    const complex = this._chain.getComplex()\r\n    complex.addAtom(atom)\r\n    this._atoms.push(atom)\r\n    this._het = this._het || het\r\n    return atom\r\n  }\r\n\r\n  getAtomCount() {\r\n    return this._atoms.length\r\n  }\r\n\r\n  forEachAtom(process) {\r\n    const atoms = this._atoms\r\n    for (let i = 0, n = atoms.length; i < n; ++i) {\r\n      if (process(atoms[i])) {\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  _findAtomByName(name) {\r\n    let res = null\r\n    this.forEachAtom((atom) => {\r\n      if (atom.name === name) {\r\n        res = atom\r\n        return true\r\n      }\r\n      return false\r\n    })\r\n    return res\r\n  }\r\n\r\n  _findFirstAtomInList(names) {\r\n    let res = null\r\n    for (let i = 0; i < names.length; ++i) {\r\n      res = this._findAtomByName(names[i])\r\n      if (res !== null) {\r\n        return res\r\n      }\r\n    }\r\n    return res\r\n  }\r\n\r\n  collectMask() {\r\n    let mask = 0xffffffff\r\n    const atoms = this._atoms\r\n    for (let i = 0, n = atoms.length; i < n; ++i) {\r\n      mask &= atoms[i].mask\r\n    }\r\n    this._mask = mask\r\n  }\r\n\r\n  getCylinderTargetList() {\r\n    const type = this._type._name\r\n    for (let i = 0, n = cCylinderTarget.length; i < n; ++i) {\r\n      for (let j = 0, m = cCylinderTarget[i].types.length; j < m; ++j) {\r\n        if (type === cCylinderTarget[i].types[j]) {\r\n          return cCylinderTarget[i].atoms\r\n        }\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  _detectLeadWing(dst, next, getAtomPosition) {\r\n    const leadAtom = this._findFirstAtomInList(cNucleicControlNames)\r\n    let wingStart = this._findFirstAtomInList(cNucleicWing1Names)\r\n    let wingEnd = this._findFirstAtomInList(cNucleicWing2Names)\r\n\r\n    if (wingStart === null && next !== null) {\r\n      wingStart = next._findFirstAtomInList(cNucleicWing1Names)\r\n    }\r\n\r\n    if (wingEnd === null && next !== null) {\r\n      wingEnd = next._findFirstAtomInList(cNucleicWing2Names)\r\n    }\r\n\r\n    if (leadAtom === null || wingStart === null || wingEnd === null) {\r\n      return\r\n    }\r\n\r\n    dst._leadAtom = leadAtom\r\n    dst._controlPoint = getAtomPosition(leadAtom)\r\n    dst._wingVector = getAtomPosition(wingEnd)\r\n      .clone()\r\n      .sub(getAtomPosition(wingStart))\r\n    dst._isValid = true\r\n\r\n    const cylSource = this._findFirstAtomInList(cCylinderSource)\r\n    const targetList = this.getCylinderTargetList()\r\n    const cylTarget =\r\n      targetList !== null ? this._findFirstAtomInList(targetList) : null\r\n    if (cylSource === null || cylTarget === null) {\r\n      return\r\n    }\r\n    dst._cylinders = [getAtomPosition(cylSource), getAtomPosition(cylTarget)]\r\n  }\r\n\r\n  calcWing(prevLeadPos, currLeadPos, prevWingPos, prevWing) {\r\n    const vectorA = currLeadPos.clone().sub(prevLeadPos)\r\n    const vectorB = prevLeadPos.clone().sub(prevWingPos)\r\n    vectorB.crossVectors(vectorA, vectorB)\r\n    vectorB.crossVectors(vectorA, vectorB).normalize()\r\n    if (prevWing !== null && prevWing.length() > 0.0001) {\r\n      const needToNegate =\r\n        vectorB.length() > 0.0001 &&\r\n        Math.abs(prevWing.angleTo(vectorB)) > Math.PI / 2\r\n      if (needToNegate) {\r\n        vectorB.negate()\r\n      }\r\n    }\r\n    return vectorB\r\n  }\r\n\r\n  _innerFinalize(prevRes, prev, nextRes, dst, chainAsNucleic, getAtomPosition) {\r\n    const bFirstInChain = prev === null\r\n\r\n    const lp = getAtomPosition(this._leadAtom)\r\n    const currLeadPos = new Vector3(lp.x, lp.y, lp.z)\r\n    if (chainAsNucleic) {\r\n      this._detectLeadWing(dst, nextRes, getAtomPosition)\r\n      return\r\n    }\r\n\r\n    if (bFirstInChain) {\r\n      // for first one in chain\r\n      dst._midPoint = getAtomPosition(this._firstAtom).clone()\r\n    } else {\r\n      const prevLeadPos = prev._controlPoint // lead point of previous monomer\r\n      dst._midPoint = prevLeadPos.clone().lerp(currLeadPos, 0.5)\r\n      dst._wingVector = this.calcWing(\r\n        prevLeadPos,\r\n        currLeadPos,\r\n        getAtomPosition(prevRes._wingAtom),\r\n        prev._wingVector\r\n      )\r\n    }\r\n    dst._controlPoint = currLeadPos\r\n  }\r\n\r\n  _finalize2(prev, next, asNucleic) {\r\n    // Should be called AFTER first finalize\r\n    this._innerFinalize(\r\n      prev,\r\n      prev,\r\n      next,\r\n      this,\r\n      asNucleic,\r\n      (atom) => atom.position\r\n    )\r\n  }\r\n\r\n  isConnected(anotherResidue) {\r\n    if (this._chain !== anotherResidue._chain) {\r\n      return false\r\n    }\r\n    if (this === anotherResidue) {\r\n      return true\r\n    }\r\n    let res = false\r\n    this.forEachAtom((atom) => {\r\n      const { bonds } = atom\r\n      for (let i = 0, n = bonds.length; i < n; ++i) {\r\n        const bond = bonds[i]\r\n        if (\r\n          bond._left.residue === anotherResidue ||\r\n          bond._right.residue === anotherResidue\r\n        ) {\r\n          res = true\r\n          return true\r\n        }\r\n      }\r\n      return false\r\n    })\r\n    return res\r\n  }\r\n\r\n  _finalize() {\r\n    const self = this\r\n    ;[this._firstAtom] = this._atoms\r\n    this._lastAtom = this._atoms[this._atoms.length - 1]\r\n\r\n    this._leadAtom = null\r\n    this._wingAtom = null\r\n\r\n    let tempCount = 0\r\n    let temperature = 0 // average temperature\r\n    let occupCount = 0\r\n    let occupancy = 0 // average occupancy\r\n    this.forEachAtom((a) => {\r\n      if (self._leadAtom === null) {\r\n        if (a.role === Element.Constants.Lead) {\r\n          self._leadAtom = a\r\n        }\r\n      }\r\n      if (self._wingAtom === null) {\r\n        if (a.role === Element.Constants.Wing) {\r\n          self._wingAtom = a\r\n        }\r\n      }\r\n      if (a.temperature) {\r\n        temperature += a.temperature\r\n        tempCount++\r\n      }\r\n      if (a.occupancy) {\r\n        occupancy += a.occupancy\r\n        occupCount++\r\n      }\r\n      return self._leadAtom !== null && self._wingAtom !== null\r\n    })\r\n\r\n    if (tempCount > 0) {\r\n      this.temperature = temperature / tempCount\r\n    }\r\n    if (occupCount > 0) {\r\n      this.occupancy = occupancy / occupCount\r\n    }\r\n\r\n    // Still try to make monomer look valid\r\n    if (this._leadAtom === null || this._wingAtom === null) {\r\n      this._isValid = false\r\n    }\r\n    if (this._leadAtom === null) {\r\n      this._leadAtom = this._firstAtom\r\n    }\r\n    if (this._wingAtom === null) {\r\n      this._wingAtom = this._lastAtom\r\n    }\r\n  }\r\n}\r\n\r\nexport default Residue\r\n",
		"/**\r\n * Residue type.\r\n *\r\n * Predefined acid or created with HET, HETNAM, etc.\r\n *\r\n * @param {string} name            - Short name, either standard (ALA, MET, etc.) or non-standard one.\r\n * @param {string} fullName        - Full residue name.\r\n * @param {string} letterCode      - 1-letter symbol.\r\n *\r\n * @exports ResidueType\r\n * @constructor\r\n */\r\nclass ResidueType {\r\n  constructor(name, fullName, letterCode) {\r\n    this._name = name\r\n    this._fullName = fullName\r\n    this.letterCode = letterCode\r\n    this.flags = 0x0000\r\n  }\r\n\r\n  getName() {\r\n    return this._name\r\n  }\r\n\r\n  // DO NOT EDIT MANUALLY! Autogenerated from residue_types.csv by residue_types.py.\r\n  static StandardTypes = {\r\n    /* eslint-disable no-magic-numbers */\r\n    ALA: new ResidueType('ALA', 'Alanine', 'A'),\r\n    ARG: new ResidueType('ARG', 'Arginine', 'R'),\r\n    ASN: new ResidueType('ASN', 'Asparagine', 'N'),\r\n    ASP: new ResidueType('ASP', 'Aspartic Acid', 'D'),\r\n    CYS: new ResidueType('CYS', 'Cysteine', 'C'),\r\n    GLN: new ResidueType('GLN', 'Glutamine', 'Q'),\r\n    GLU: new ResidueType('GLU', 'Glutamic Acid', 'E'),\r\n    GLY: new ResidueType('GLY', 'Glycine', 'G'),\r\n    HIS: new ResidueType('HIS', 'Histidine', 'H'),\r\n    ILE: new ResidueType('ILE', 'Isoleucine', 'I'),\r\n    LEU: new ResidueType('LEU', 'Leucine', 'L'),\r\n    LYS: new ResidueType('LYS', 'Lysine', 'K'),\r\n    MET: new ResidueType('MET', 'Methionine', 'M'),\r\n    PHE: new ResidueType('PHE', 'Phenylalanine', 'F'),\r\n    PRO: new ResidueType('PRO', 'Proline', 'P'),\r\n    PYL: new ResidueType('PYL', 'Pyrrolysine', 'O'),\r\n    SEC: new ResidueType('SEC', 'Selenocysteine', 'U'),\r\n    SER: new ResidueType('SER', 'Serine', 'S'),\r\n    THR: new ResidueType('THR', 'Threonine', 'T'),\r\n    TRP: new ResidueType('TRP', 'Tryptophan', 'W'),\r\n    TYR: new ResidueType('TYR', 'Tyrosine', 'Y'),\r\n    VAL: new ResidueType('VAL', 'Valine', 'V'),\r\n    A: new ResidueType('A', 'Adenine', 'A'),\r\n    C: new ResidueType('C', 'Cytosine', 'C'),\r\n    G: new ResidueType('G', 'Guanine', 'G'),\r\n    I: new ResidueType('I', 'Inosine', 'I'),\r\n    T: new ResidueType('T', 'Thymine', 'T'),\r\n    U: new ResidueType('U', 'Uracil', 'U'),\r\n    DA: new ResidueType('DA', 'Adenine', 'A'),\r\n    DC: new ResidueType('DC', 'Cytosine', 'C'),\r\n    DG: new ResidueType('DG', 'Guanine', 'G'),\r\n    DI: new ResidueType('DI', 'Inosine', 'I'),\r\n    DT: new ResidueType('DT', 'Thymine', 'T'),\r\n    DU: new ResidueType('DU', 'Uracil', 'U'),\r\n    '+A': new ResidueType('+A', 'Adenine', 'A'),\r\n    '+C': new ResidueType('+C', 'Cytosine', 'C'),\r\n    '+G': new ResidueType('+G', 'Guanine', 'G'),\r\n    '+I': new ResidueType('+I', 'Inosine', 'I'),\r\n    '+T': new ResidueType('+T', 'Thymine', 'T'),\r\n    '+U': new ResidueType('+U', 'Uracil', 'U'),\r\n    WAT: new ResidueType('WAT', 'Water', ''),\r\n    H2O: new ResidueType('H2O', 'Water', ''),\r\n    HOH: new ResidueType('HOH', 'Water', ''),\r\n    DOD: new ResidueType('DOD', 'Water', ''),\r\n    UNK: new ResidueType('UNK', 'Unknown', ''),\r\n    UNL: new ResidueType('UNL', 'Unknown Ligand', '')\r\n    /* eslint-enable no-magic-numbers */\r\n  }\r\n\r\n  /**\r\n   * Enumeration of residue flag values.\r\n   *\r\n   * @enum {number}\r\n   * @readonly\r\n   */\r\n  static Flags = {\r\n    // Amino acids\r\n    /** Amino acid residue */\r\n    PROTEIN: 0x0001,\r\n    /** Basic amino acid residue */\r\n    BASIC: 0x0002,\r\n    /** Acidic amino acid residue */\r\n    ACIDIC: 0x0004,\r\n    /** Polar uncharged side chain amino acid residue */\r\n    POLAR: 0x0008,\r\n    /** Non-polar hydrophobic side chain amino acid residue */\r\n    NONPOLAR: 0x0010,\r\n    /** Aromatic amino acid residue */\r\n    AROMATIC: 0x0020,\r\n\r\n    // Nucleic acids\r\n\r\n    /** Nucleic residue */\r\n    NUCLEIC: 0x0100,\r\n    /** Purine nucleic residue */\r\n    PURINE: 0x0200,\r\n    /** Pyrimidine nucleic residue */\r\n    PYRIMIDINE: 0x0400,\r\n    /** DNA */\r\n    DNA: 0x0800,\r\n    /** RNA */\r\n    RNA: 0x1000,\r\n\r\n    /** Water */\r\n    WATER: 0x10000\r\n  }\r\n}\r\n\r\n// Flag combinations\r\nfunction _addFlag(flag, list) {\r\n  for (let i = 0, n = list.length; i < n; ++i) {\r\n    const res = ResidueType.StandardTypes[list[i]]\r\n    if (res) {\r\n      res.flags |= flag\r\n    }\r\n  }\r\n}\r\n\r\nconst { Flags } = ResidueType\r\n_addFlag(Flags.WATER, ['WAT', 'H2O', 'HOH', 'DOD'])\r\n\r\n_addFlag(Flags.PROTEIN, [\r\n  'ALA',\r\n  'ARG',\r\n  'ASN',\r\n  'ASP',\r\n  'CYS',\r\n  'GLY',\r\n  'GLU',\r\n  'GLN',\r\n  'HIS',\r\n  'ILE',\r\n  'LEU',\r\n  'LYS',\r\n  'MET',\r\n  'PHE',\r\n  'PRO',\r\n  'PYL',\r\n  'SEC',\r\n  'SER',\r\n  'THR',\r\n  'TRP',\r\n  'TYR',\r\n  'VAL'\r\n])\r\n_addFlag(Flags.BASIC, ['ARG', 'HIS', 'LYS'])\r\n_addFlag(Flags.ACIDIC, ['ASP', 'GLU'])\r\n_addFlag(Flags.POLAR, ['ASN', 'CYS', 'GLN', 'SER', 'THR', 'TYR'])\r\n_addFlag(Flags.NONPOLAR, [\r\n  'ALA',\r\n  'ILE',\r\n  'LEU',\r\n  'MET',\r\n  'PHE',\r\n  'PRO',\r\n  'TRP',\r\n  'VAL',\r\n  'GLY'\r\n])\r\n_addFlag(Flags.AROMATIC, ['PHE', 'TRP', 'TYR'])\r\n\r\n_addFlag(Flags.NUCLEIC, [\r\n  'A',\r\n  'G',\r\n  'I',\r\n  'DA',\r\n  'DG',\r\n  'DI',\r\n  '+A',\r\n  '+G',\r\n  '+I',\r\n  'C',\r\n  'T',\r\n  'U',\r\n  'DC',\r\n  'DT',\r\n  'DU',\r\n  '+C',\r\n  '+T',\r\n  '+U'\r\n])\r\n_addFlag(Flags.PURINE, ['A', 'G', 'I', 'DA', 'DG', 'DI', '+A', '+G', '+I'])\r\n_addFlag(Flags.PYRIMIDINE, ['C', 'T', 'U', 'DC', 'DT', 'DU', '+C', '+T', '+U'])\r\n_addFlag(Flags.DNA, ['DA', 'DG', 'DI', 'DC', 'DT', 'DU'])\r\n_addFlag(Flags.RNA, ['A', 'G', 'I', 'C', 'T', 'U'])\r\n// Table of kdHydrophobicity\r\nconst hydro = {\r\n  ILE: 4.5,\r\n  VAL: 4.2,\r\n  LEU: 3.8,\r\n  PHE: 2.8,\r\n  CYS: 2.5,\r\n  MET: 1.9,\r\n  ALA: 1.8,\r\n  GLY: -0.4,\r\n  THR: -0.7,\r\n  SER: -0.8,\r\n  TRP: -0.9,\r\n  TYR: -1.3,\r\n  PRO: -1.6,\r\n  HIS: -3.2,\r\n  GLU: -3.5,\r\n  GLN: -3.5,\r\n  ASP: -3.5,\r\n  ASN: -3.5,\r\n  LYS: -3.9,\r\n  ARG: -4.5\r\n}\r\n\r\nfunction _addParam(param, list) {\r\n  const keys = Object.keys(list)\r\n  for (let i = 0, n = keys.length; i < n; ++i) {\r\n    const key = keys[i]\r\n    const value = list[key]\r\n    ResidueType.StandardTypes[key][param] = value\r\n  }\r\n}\r\n\r\n_addParam('hydrophobicity', hydro)\r\n\r\nexport default ResidueType\r\n",
		"import Residue from './Residue'\r\nimport ResidueType from './ResidueType'\r\nimport { Vector3 } from 'three'\r\n\r\n/**\r\n * Residues in chain are either amino acid either nucleic acid (and water)\r\n * There might be some modified/mutated residues, which type could not be determined by their name (nucleic or amino); In this\r\n * case firstly program definites the chain type (by well-known residues) and then definites modified/mutated residues\r\n */\r\nconst ChainType = {\r\n  UNKNOWN: 0,\r\n  PROTEIN: 1,\r\n  NUCLEIC: 2\r\n}\r\n\r\n/**\r\n * Residue chain.\r\n *\r\n * @param {Complex} complex - Molecular complex this chain belongs to.\r\n * @param {string} name - One character identifier (usually space, A-Z, 0-9, or a-z).\r\n *\r\n * @exports Chain\r\n * @constructor\r\n */\r\nclass Chain {\r\n  constructor(complex, name) {\r\n    this._complex = complex\r\n    this._name = name\r\n    this._mask = 1 | 0\r\n    this._index = -1\r\n    this._residues = []\r\n\r\n    this.minSequence = Number.POSITIVE_INFINITY\r\n    this.maxSequence = Number.NEGATIVE_INFINITY\r\n  }\r\n\r\n  getComplex() {\r\n    return this._complex\r\n  }\r\n\r\n  getName() {\r\n    return this._name\r\n  }\r\n\r\n  getResidues() {\r\n    return this._residues\r\n  }\r\n\r\n  _determineType() {\r\n    const residues = this._residues\r\n\r\n    const { PROTEIN, NUCLEIC } = ResidueType.Flags\r\n\r\n    this.type = ChainType.UNKNOWN\r\n\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      const { flags } = residues[i]._type\r\n\r\n      if ((flags & NUCLEIC) !== 0) {\r\n        this.type = ChainType.NUCLEIC\r\n        break\r\n      } else if ((flags & PROTEIN) !== 0) {\r\n        this.type = ChainType.PROTEIN\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds thre residue with specified sequence number and inserion code\r\n   * @param {Number} seqNum sequence number\r\n   * @param {string} iCode insertion code\r\n   * @returns {*} Residue or null if not found\r\n   */\r\n  findResidue(seqNum, iCode) {\r\n    const residues = this._residues\r\n\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      const res = residues[i]\r\n      if (res._sequence === seqNum && res._icode === iCode) {\r\n        return [res, i]\r\n      }\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  _finalize() {\r\n    this._determineType()\r\n\r\n    const residues = this._residues\r\n\r\n    let prev = null\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      const next = i + 1 < n ? residues[i + 1] : null\r\n      const curr = residues[i]\r\n      // TODO: skip invalid residues\r\n      // eslint-disable-next-line no-constant-condition\r\n      if (1 /* curr._isValid */) {\r\n        curr._finalize2(prev, next, this.type === ChainType.NUCLEIC)\r\n        prev = curr\r\n      }\r\n    }\r\n\r\n    // fix very first wing\r\n    if (residues.length > 1 && residues[1]._wingVector) {\r\n      const p = residues[1]._wingVector\r\n      residues[0]._wingVector = new Vector3(p.x, p.y, p.z)\r\n    } else if (residues.length > 0) {\r\n      residues[0]._wingVector = new Vector3(1, 0, 0)\r\n    }\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    const residues = this._residues\r\n    let prev = null\r\n    let prevData = null\r\n    const frameRes = frameData._residues\r\n    const n = residues.length\r\n    function getAtomPos(atom) {\r\n      return frameData.getAtomPos(atom.index)\r\n    }\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const curr = residues[i]\r\n      const currData = frameRes[curr._index]\r\n      const nextRes = i + 1 < n ? residues[i + 1] : null\r\n      curr._innerFinalize(\r\n        prev,\r\n        prevData,\r\n        nextRes,\r\n        currData,\r\n        this.type === ChainType.NUCLEIC,\r\n        getAtomPos\r\n      )\r\n      prev = curr\r\n      prevData = currData\r\n    }\r\n\r\n    frameRes[residues[0]._index]._wingVector =\r\n      n > 1 ? frameRes[residues[1]._index]._wingVector : new Vector3(1, 0, 0)\r\n  }\r\n\r\n  /**\r\n   * Create a new residue.\r\n   *\r\n   * @param {string} name - Residue name.\r\n   * @param {number} sequence - Residue sequence number.\r\n   * @param {string} iCode - Insertion code.\r\n   * @returns {Residue} - Newly created residue instance.\r\n   */\r\n  addResidue(name, sequence, iCode) {\r\n    let type = this._complex.getResidueType(name)\r\n    if (type === null) {\r\n      type = this._complex.addResidueType(name)\r\n    }\r\n    const residue = new Residue(this, type, sequence, iCode)\r\n    this._complex.addResidue(residue)\r\n    this._residues.push(residue)\r\n\r\n    if (type.flags & (ResidueType.Flags.NUCLEIC | ResidueType.Flags.PROTEIN)) {\r\n      if (this.maxSequence < sequence) {\r\n        this.maxSequence = sequence\r\n      }\r\n      if (this.minSequence > sequence) {\r\n        this.minSequence = sequence\r\n      }\r\n    }\r\n\r\n    return residue\r\n  }\r\n\r\n  getResidueCount() {\r\n    return this._residues.length\r\n  }\r\n\r\n  forEachResidue(process) {\r\n    const residues = this._residues\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      process(residues[i])\r\n    }\r\n  }\r\n\r\n  collectMask() {\r\n    let mask = 0xffffffff\r\n    const residues = this._residues\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      mask &= residues[i]._mask\r\n    }\r\n    this._mask = mask\r\n  }\r\n}\r\n\r\nexport default Chain\r\n",
		"import Residue from './Residue'\r\n\r\n/** An element of protein secondary structure. */\r\nclass StructuralElement {\r\n  /**\r\n   * Create a secondary structural element of the specified type.\r\n   *\r\n   * @param {StructuralElement.Type} type Secondary structure type.\r\n   * @param {Residue} init Initial residue.\r\n   * @param {Residue} term Terminal residue.\r\n   */\r\n  constructor(type, init, term) {\r\n    /**\r\n     * Secondary structure type.\r\n     * @type {StructuralElement.Type}\r\n     */\r\n    this.type = type\r\n    /**\r\n     * Generic secondary structure type.\r\n     * @type {StructuralElement.Generic}\r\n     */\r\n    this.generic = StructuralElement.genericByType[this.type] || 'loop'\r\n    /**\r\n     * Initial residue.\r\n     * @type Residue\r\n     */\r\n    this.init = init\r\n    /**\r\n     * Terminal residue.\r\n     * @type Residue\r\n     */\r\n    this.term = term\r\n  }\r\n\r\n  /**\r\n   * An internal method for making a final pass over the complex to set all required references.\r\n   *\r\n   * **NOTE:** I'm sorry. It's a legacy code waiting for refactoring.\r\n   * Just copying it as-is right now and hoping for the best.\r\n   *\r\n   * @param {object} serialAtomMap A dictionary of atoms\r\n   * @param {object} residueHash A dictionary of hashed residues to check.\r\n   * @param {Complex} complex The molecular complex this element belongs to.\r\n   */\r\n  _finalize(serialAtomMap, residueHash, complex) {\r\n    if (this.init instanceof Residue && this.term instanceof Residue) {\r\n      return\r\n    }\r\n\r\n    // Link all intermediate residues to this structural element\r\n    const start = complex.splitUnifiedSerial(this.init)\r\n    const end = complex.splitUnifiedSerial(this.term)\r\n    for (let chainId = start.chain; chainId <= end.chain; chainId++) {\r\n      for (let serialId = start.serial; serialId <= end.serial; serialId++) {\r\n        for (let { iCode } = start; iCode <= end.iCode; iCode++) {\r\n          const hashCode = complex.getUnifiedSerial(chainId, serialId, iCode)\r\n          if (residueHash[hashCode]) {\r\n            residueHash[hashCode]._secondary = this\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Replace unfined serials by objects\r\n    this.init = residueHash[this.init]\r\n    this.term = residueHash[this.term]\r\n  }\r\n}\r\n\r\n/**\r\n * Specific type of a secondary structural element.\r\n * @enum {string}\r\n * @see StructuralElement.Generic\r\n */\r\nStructuralElement.Type = {\r\n  /** A strand of a [beta-sheet](https://en.wikipedia.org/wiki/Beta_sheet). */\r\n  STRAND: 'E',\r\n  /** An isolated beta-bridge (too small for a beta-sheet). */\r\n  BRIDGE: 'B',\r\n\r\n  /** A [3/10 helix](https://en.wikipedia.org/wiki/310_helix) (hydrogen bonding is 3 residues apart). */\r\n  HELIX_310: 'G',\r\n  /** An [alpha-helix](https://en.wikipedia.org/wiki/Alpha_helix) (hydrogen bonding is 4 residues apart). */\r\n  HELIX_ALPHA: 'H',\r\n  /** A [pi-helix](https://en.wikipedia.org/wiki/Pi_helix) (hydrogen bonding is 5 residues apart). */\r\n  HELIX_PI: 'I',\r\n  /** A generic helix of unspecified bonding distance. */\r\n  HELIX: 'X',\r\n\r\n  /** An isolated 3/10-like helical turn. */\r\n  TURN_310: '3',\r\n  /** An isolated alpha-like helical turn. */\r\n  TURN_ALPHA: '4',\r\n  /** An isolated pi-like helical turn. */\r\n  TURN_PI: '5',\r\n  /** An isolated helical [turn](https://en.wikipedia.org/wiki/Turn_(biochemistry)) of unspecified bonding distance. */\r\n  TURN: 'T',\r\n\r\n  /** A bend (a region of high curvature). */\r\n  BEND: 'S',\r\n  /** Just a protein section with no particular conformation. */\r\n  COIL: 'C'\r\n}\r\n\r\n/**\r\n * Generic type of a secondary structural element.\r\n * @enum {string}\r\n * @see StructuralElement.Type\r\n */\r\nStructuralElement.Generic = {\r\n  /** A strand of a sheet. */\r\n  STRAND: 'strand',\r\n  /** A helix. */\r\n  HELIX: 'helix',\r\n  /** Just a protein section with no particular conformation. */\r\n  LOOP: 'loop'\r\n}\r\n\r\nconst StructuralElementType = StructuralElement.Type\r\nconst StructuralElementGeneric = StructuralElement.Generic\r\n\r\n/**\r\n * A mapping from specific types to generic ones.\r\n * @type {Object<StructuralElement.Type, StructuralElement.Generic>}\r\n */\r\nStructuralElement.genericByType = {\r\n  [StructuralElementType.STRAND]: StructuralElementGeneric.STRAND,\r\n  [StructuralElementType.HELIX_310]: StructuralElementGeneric.HELIX,\r\n  [StructuralElementType.HELIX_ALPHA]: StructuralElementGeneric.HELIX,\r\n  [StructuralElementType.HELIX_PI]: StructuralElementGeneric.HELIX,\r\n  [StructuralElementType.HELIX]: StructuralElementGeneric.HELIX\r\n}\r\n\r\nexport default StructuralElement\r\n",
		"import StructuralElement from './StructuralElement'\r\n\r\nconst StructuralElementType = StructuralElement.Type\r\n\r\nexport const typeByPDBHelixClass = {\r\n  1: StructuralElementType.HELIX_ALPHA,\r\n  3: StructuralElementType.HELIX_PI,\r\n  5: StructuralElementType.HELIX_310\r\n}\r\n\r\n/**\r\n * Helical secondary structure of a protein.\r\n * @extends StructuralElement\r\n */\r\nclass Helix extends StructuralElement {\r\n  /**\r\n   * Create a helix.\r\n   *\r\n   * @param {number} helixClass A helix class according to the\r\n   *   [PDB Format](http://www.wwpdb.org/documentation/file-format-content/format33/sect5.html#HELIX).\r\n   * @param {Residue} init Initial residue.\r\n   * @param {Residue} term Terminal residue.\r\n   * @param {number} serial Serial number of the helix (see PDB Format).\r\n   * @param {string} name Helix identifier (see PDB Format).\r\n   * @param {string} comment Comment about this helix (see PDB Format).\r\n   * @param {number} length Length of this helix, in residues (see PDB Format).\r\n   */\r\n  constructor(helixClass, init, term, serial, name, comment, length) {\r\n    super(\r\n      typeByPDBHelixClass[helixClass] || StructuralElement.Type.HELIX,\r\n      init,\r\n      term\r\n    )\r\n\r\n    /**\r\n     * Serial number of the helix (see PDB Format).\r\n     * @type {number}\r\n     */\r\n    this.serial = serial\r\n    /**\r\n     * Helix identifier (see PDB Format).\r\n     * @type {string}\r\n     */\r\n    this.name = name\r\n    /**\r\n     * Comment about this helix (see PDB Format).\r\n     * @type {string}\r\n     */\r\n    this.comment = comment\r\n    /**\r\n     * Length of this helix, in residues (see PDB Format).\r\n     * @type {number}\r\n     */\r\n    this.length = length\r\n  }\r\n}\r\n\r\nexport default Helix\r\n",
		"import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}",
		"import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}",
		"import StructuralElement from './StructuralElement'\r\n\r\n/**\r\n * A single strand of a sheet in a protein secondary structure.\r\n * @extends StructuralElement\r\n */\r\nclass Strand extends StructuralElement {\r\n  /**\r\n   * Create a strand.\r\n   *\r\n   * @param {Sheet} sheet Parent sheet this strand belongs to.\r\n   * @param {Residue} init Initial residue.\r\n   * @param {Residue} term Terminal residue.\r\n   * @param {number} sense Sense of strand with respect to previous strand in the sheet.\r\n   *   - 0 if the first strand,\r\n   *   - 1 if parallel, and\r\n   *   - -1 if anti-parallel.\r\n   * @param {Atom} atomCur Atom in current strand (see PDB Format).\r\n   * @param {Atom} atomPrev Atom in previous strand (see PDB Format).\r\n   */\r\n  constructor(sheet, init, term, sense, atomCur, atomPrev) {\r\n    super(StructuralElement.Type.STRAND, init, term)\r\n\r\n    /**\r\n     * Parent sheet this strand belongs to.\r\n     * @type {Sheet}\r\n     */\r\n    this.sheet = sheet\r\n    /**\r\n     * Sense of strand with respect to previous strand in the sheet.\r\n     * - 0 if the first strand,\r\n     * - 1 if parallel, and\r\n     * - -1 if anti-parallel.\r\n     * @type {number}\r\n     */\r\n    this.sense = sense\r\n    /**\r\n     * Atom in current strand (see PDB Format).\r\n     * @type {Atom}\r\n     */\r\n    this.atomCur = atomCur\r\n    /**\r\n     * Atom in previous strand (see PDB Format).\r\n     * @type {Atom}\r\n     */\r\n    this.atomPrev = atomPrev\r\n  }\r\n\r\n  /**\r\n   * An internal method for making a final pass over the complex to set all required references.\r\n   *\r\n   * **NOTE:** I'm sorry. It's a legacy code waiting for refactoring.\r\n   * Just copying it as-is right now and hoping for the best.\r\n   *\r\n   * @param {object} serialAtomMap A dictionary of atoms\r\n   * @param {object} residueHash A dictionary of hashed residues to check.\r\n   * @param {Complex} complex The molecular complex this element belongs to.\r\n   *\r\n   * @override\r\n   */\r\n  _finalize(serialAtomMap, residueHash, complex) {\r\n    super._finalize(serialAtomMap, residueHash, complex)\r\n\r\n    let as = this.atomCur\r\n    if (as !== null && !Number.isNaN(as)) {\r\n      this.atomCur = serialAtomMap[as]\r\n    }\r\n    as = this.atomPrev\r\n    if (as !== null && !Number.isNaN(as)) {\r\n      this.atomPrev = serialAtomMap[as]\r\n    }\r\n  }\r\n}\r\n\r\nexport default Strand\r\n",
		"import Strand from './Strand'\r\n\r\n/**\r\n * Sheet secondary structure of a protein.\r\n *\r\n * @param {string} name -\r\n * @param {number} width -\r\n *\r\n * @exports Sheet\r\n * @constructor\r\n */\r\nclass Sheet {\r\n  constructor(name, width) {\r\n    this._name = name\r\n    this._width = width\r\n\r\n    this._strands = []\r\n  }\r\n\r\n  // Getters and setters\r\n  getName() {\r\n    return this._name\r\n  }\r\n\r\n  getWidth() {\r\n    return this._width\r\n  }\r\n\r\n  addStrand(strand) {\r\n    this._strands.push(strand)\r\n    this._width = this._strands.length\r\n  }\r\n\r\n  addEmptyStrand() {\r\n    this._strands.push(new Strand(null, null, null, null, null, null))\r\n  }\r\n\r\n  _finalize(serialAtomMap, residueHash, complex) {\r\n    const s = this._strands\r\n    for (let i = 0, n = s.length; i < n; ++i) {\r\n      s[i]._finalize(serialAtomMap, residueHash, complex)\r\n    }\r\n    if (!this._width) {\r\n      this._width = s.length\r\n    }\r\n    if (s.length !== this._width) {\r\n      throw new Error(`Sheet ${this._name} is inconsistent.`)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Sheet\r\n",
		"import { Vector3 } from 'three'\r\n\r\n/**\r\n * Atom measurements.\r\n *\r\n * @param {string} id              - SGroup id\r\n * @param {string} name            - Name of the group\r\n * @param {Vector3} position - Registered coordinates\r\n * @param {array} atoms            - Atoms group consists of\r\n * @param {object} saveNode        - XML node from file for saving\r\n *\r\n * @exports SGroup\r\n * @constructor\r\n */\r\nclass SGroup {\r\n  constructor(id, name, position, atoms, saveNode) {\r\n    this._id = id\r\n    this._name = name\r\n    this._position = position || new Vector3()\r\n    this._atoms = atoms || []\r\n    this._charge = 0 // default group charge\r\n    this._repeat = 1 // how many times group repeated: always > 0\r\n    this._center = null\r\n    this.xmlNodeRef = saveNode || null\r\n  }\r\n\r\n  /**\r\n   * Get atom full name.\r\n   * @returns {string} Atom full name.\r\n   */\r\n  getName() {\r\n    return this._name\r\n  }\r\n\r\n  getPosition() {\r\n    return this._position\r\n  }\r\n\r\n  getCentralPoint() {\r\n    return this._center\r\n  }\r\n\r\n  _rebuildSGroupOnAtomChange() {\r\n    const nLimon = 100000000\r\n    if (this._center === null) {\r\n      return // nothing to do if we are not relative\r\n    }\r\n\r\n    const bLow = new Vector3(nLimon, nLimon, nLimon)\r\n    const bHight = new Vector3(-nLimon, -nLimon, -nLimon)\r\n    for (let j = 0, n = this._atoms.length; j < n; j++) {\r\n      const aPos = this._atoms[j].position\r\n      bLow.set(\r\n        Math.min(bLow.x, aPos.x),\r\n        Math.min(bLow.y, aPos.y),\r\n        Math.min(bLow.z, aPos.z)\r\n      )\r\n      bHight.set(\r\n        Math.max(bHight.x, aPos.x),\r\n        Math.max(bHight.y, aPos.y),\r\n        Math.max(bHight.z, aPos.z)\r\n      )\r\n    }\r\n    this._center.addVectors(bLow, bHight)\r\n    this._center.multiplyScalar(0.5)\r\n  }\r\n}\r\n\r\nexport default SGroup\r\n",
		"/* eslint-disable */\r\n// DO NOT EDIT! Automatically generated from .jison\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar parser = (function () {\r\n  var o = function (k, v, o, l) {\r\n      for (o = o || {}, l = k.length; l--; o[k[l]] = v);\r\n      return o\r\n    },\r\n    $V0 = [1, 4],\r\n    $V1 = [1, 5],\r\n    $V2 = [1, 6],\r\n    $V3 = [1, 7],\r\n    $V4 = [1, 8],\r\n    $V5 = [1, 9],\r\n    $V6 = [1, 11],\r\n    $V7 = [1, 12],\r\n    $V8 = [5, 7, 8, 11],\r\n    $V9 = [1, 17],\r\n    $Va = [1, 22],\r\n    $Vb = [1, 20],\r\n    $Vc = [1, 21],\r\n    $Vd = [5, 7, 8, 11, 19]\r\n  var parser = {\r\n    trace: function trace() {},\r\n    yy: {},\r\n    symbols_: {\r\n      error: 2,\r\n      Program: 3,\r\n      Expression: 4,\r\n      EOF: 5,\r\n      Selector: 6,\r\n      OR: 7,\r\n      AND: 8,\r\n      NOT: 9,\r\n      '(': 10,\r\n      ')': 11,\r\n      SELECTOR: 12,\r\n      NAMED_SELECTOR: 13,\r\n      SELECTOR_RANGED: 14,\r\n      RangeList: 15,\r\n      SELECTOR_NAMED: 16,\r\n      NameList: 17,\r\n      Range: 18,\r\n      ',': 19,\r\n      NUMBER: 20,\r\n      ':': 21,\r\n      Name: 22,\r\n      IDENTIFIER: 23,\r\n      STRING: 24,\r\n      $accept: 0,\r\n      $end: 1\r\n    },\r\n    terminals_: {\r\n      2: 'error',\r\n      5: 'EOF',\r\n      7: 'OR',\r\n      8: 'AND',\r\n      9: 'NOT',\r\n      10: '(',\r\n      11: ')',\r\n      12: 'SELECTOR',\r\n      13: 'NAMED_SELECTOR',\r\n      14: 'SELECTOR_RANGED',\r\n      16: 'SELECTOR_NAMED',\r\n      19: ',',\r\n      20: 'NUMBER',\r\n      21: ':',\r\n      23: 'IDENTIFIER',\r\n      24: 'STRING'\r\n    },\r\n    productions_: [\r\n      0,\r\n      [3, 2],\r\n      [4, 1],\r\n      [4, 3],\r\n      [4, 3],\r\n      [4, 2],\r\n      [4, 3],\r\n      [6, 1],\r\n      [6, 1],\r\n      [6, 2],\r\n      [6, 2],\r\n      [15, 1],\r\n      [15, 3],\r\n      [18, 1],\r\n      [18, 3],\r\n      [17, 1],\r\n      [17, 3],\r\n      [22, 1],\r\n      [22, 1],\r\n      [22, 1]\r\n    ],\r\n    performAction: function anonymous(\r\n      yytext,\r\n      yyleng,\r\n      yylineno,\r\n      yy,\r\n      yystate /* action[1] */,\r\n      $$ /* vstack */,\r\n      _$ /* lstack */\r\n    ) {\r\n      /* this == yyval */\r\n\r\n      var $0 = $$.length - 1\r\n      switch (yystate) {\r\n        case 1:\r\n          return $$[$0 - 1]\r\n          break\r\n        case 3:\r\n          this.$ = yy.keyword('or')($$[$0 - 2], $$[$0])\r\n          break\r\n        case 4:\r\n          this.$ = yy.keyword('and')($$[$0 - 2], $$[$0])\r\n          break\r\n        case 5:\r\n          this.$ = yy.keyword('not')($$[$0])\r\n          break\r\n        case 6:\r\n          this.$ = $$[$0 - 1]\r\n          break\r\n        case 7:\r\n          this.$ = yy.keyword($$[$0])()\r\n          break\r\n        case 8:\r\n          this.$ = yy.GetSelector($$[$0].toLowerCase().slice(1, $$[$0].length))\r\n          break\r\n        case 9:\r\n        case 10:\r\n          this.$ = yy.keyword($$[$0 - 1])($$[$0])\r\n          break\r\n        case 11:\r\n          this.$ = new yy.RangeList($$[$0])\r\n          break\r\n        case 12:\r\n        case 16:\r\n          this.$ = $$[$0 - 2].append($$[$0])\r\n          break\r\n        case 13:\r\n          this.$ = new yy.Range(Number($$[$0]))\r\n          break\r\n        case 14:\r\n          this.$ = new yy.Range(Number($$[$0 - 2]), Number($$[$0]))\r\n          break\r\n        case 15:\r\n          this.$ = new yy.ValueList($$[$0])\r\n          break\r\n      }\r\n    },\r\n    table: [\r\n      { 3: 1, 4: 2, 6: 3, 9: $V0, 10: $V1, 12: $V2, 13: $V3, 14: $V4, 16: $V5 },\r\n      { 1: [3] },\r\n      { 5: [1, 10], 7: $V6, 8: $V7 },\r\n      o($V8, [2, 2]),\r\n      { 4: 13, 6: 3, 9: $V0, 10: $V1, 12: $V2, 13: $V3, 14: $V4, 16: $V5 },\r\n      { 4: 14, 6: 3, 9: $V0, 10: $V1, 12: $V2, 13: $V3, 14: $V4, 16: $V5 },\r\n      o($V8, [2, 7]),\r\n      o($V8, [2, 8]),\r\n      { 15: 15, 18: 16, 20: $V9 },\r\n      { 17: 18, 20: $Va, 22: 19, 23: $Vb, 24: $Vc },\r\n      { 1: [2, 1] },\r\n      { 4: 23, 6: 3, 9: $V0, 10: $V1, 12: $V2, 13: $V3, 14: $V4, 16: $V5 },\r\n      { 4: 24, 6: 3, 9: $V0, 10: $V1, 12: $V2, 13: $V3, 14: $V4, 16: $V5 },\r\n      o($V8, [2, 5]),\r\n      { 7: $V6, 8: $V7, 11: [1, 25] },\r\n      o($V8, [2, 9], { 19: [1, 26] }),\r\n      o($Vd, [2, 11]),\r\n      o($Vd, [2, 13], { 21: [1, 27] }),\r\n      o($V8, [2, 10], { 19: [1, 28] }),\r\n      o($Vd, [2, 15]),\r\n      o($Vd, [2, 17]),\r\n      o($Vd, [2, 18]),\r\n      o($Vd, [2, 19]),\r\n      o([5, 7, 11], [2, 3], { 8: $V7 }),\r\n      o($V8, [2, 4]),\r\n      o($V8, [2, 6]),\r\n      { 18: 29, 20: $V9 },\r\n      { 20: [1, 30] },\r\n      { 20: $Va, 22: 31, 23: $Vb, 24: $Vc },\r\n      o($Vd, [2, 12]),\r\n      o($Vd, [2, 14]),\r\n      o($Vd, [2, 16])\r\n    ],\r\n    defaultActions: { 10: [2, 1] },\r\n    parseError: function parseError(str, hash) {\r\n      if (hash.recoverable) {\r\n        this.trace(str)\r\n      } else {\r\n        var error = new Error(str)\r\n        error.hash = hash\r\n        throw error\r\n      }\r\n    },\r\n    parse: function parse(input) {\r\n      var self = this,\r\n        stack = [0],\r\n        tstack = [],\r\n        vstack = [null],\r\n        lstack = [],\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1\r\n      var args = lstack.slice.call(arguments, 1)\r\n      var lexer = Object.create(this.lexer)\r\n      var sharedState = { yy: {} }\r\n      for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n          sharedState.yy[k] = this.yy[k]\r\n        }\r\n      }\r\n      lexer.setInput(input, sharedState.yy)\r\n      sharedState.yy.lexer = lexer\r\n      sharedState.yy.parser = this\r\n      if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {}\r\n      }\r\n      var yyloc = lexer.yylloc\r\n      lstack.push(yyloc)\r\n      var ranges = lexer.options && lexer.options.ranges\r\n      if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError\r\n      } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError\r\n      }\r\n      function popStack(n) {\r\n        stack.length = stack.length - 2 * n\r\n        vstack.length = vstack.length - n\r\n        lstack.length = lstack.length - n\r\n      }\r\n      function lex() {\r\n        var token\r\n        token = tstack.pop() || lexer.lex() || EOF\r\n        if (typeof token !== 'number') {\r\n          if (token instanceof Array) {\r\n            tstack = token\r\n            token = tstack.pop()\r\n          }\r\n          token = self.symbols_[token] || token\r\n        }\r\n        return token\r\n      }\r\n      var symbol,\r\n        preErrorSymbol,\r\n        state,\r\n        action,\r\n        a,\r\n        r,\r\n        yyval = {},\r\n        p,\r\n        len,\r\n        newState,\r\n        expected\r\n      while (true) {\r\n        state = stack[stack.length - 1]\r\n        if (this.defaultActions[state]) {\r\n          action = this.defaultActions[state]\r\n        } else {\r\n          if (symbol === null || typeof symbol == 'undefined') {\r\n            symbol = lex()\r\n          }\r\n          action = table[state] && table[state][symbol]\r\n        }\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n          var errStr = ''\r\n          expected = []\r\n          for (p in table[state]) {\r\n            if (this.terminals_[p] && p > TERROR) {\r\n              expected.push(\"'\" + this.terminals_[p] + \"'\")\r\n            }\r\n          }\r\n          if (lexer.showPosition) {\r\n            errStr =\r\n              'Parse error on line ' +\r\n              (yylineno + 1) +\r\n              ':\\n' +\r\n              lexer.showPosition() +\r\n              '\\nExpecting ' +\r\n              expected.join(', ') +\r\n              \", got '\" +\r\n              (this.terminals_[symbol] || symbol) +\r\n              \"'\"\r\n          } else {\r\n            errStr =\r\n              'Parse error on line ' +\r\n              (yylineno + 1) +\r\n              ': Unexpected ' +\r\n              (symbol == EOF\r\n                ? 'end of input'\r\n                : \"'\" + (this.terminals_[symbol] || symbol) + \"'\")\r\n          }\r\n          this.parseError(errStr, {\r\n            text: lexer.match,\r\n            token: this.terminals_[symbol] || symbol,\r\n            line: lexer.yylineno,\r\n            loc: yyloc,\r\n            expected: expected\r\n          })\r\n        }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n          throw new Error(\r\n            'Parse Error: multiple actions possible at state: ' +\r\n              state +\r\n              ', token: ' +\r\n              symbol\r\n          )\r\n        }\r\n        switch (action[0]) {\r\n          case 1:\r\n            stack.push(symbol)\r\n            vstack.push(lexer.yytext)\r\n            lstack.push(lexer.yylloc)\r\n            stack.push(action[1])\r\n            symbol = null\r\n            if (!preErrorSymbol) {\r\n              yyleng = lexer.yyleng\r\n              yytext = lexer.yytext\r\n              yylineno = lexer.yylineno\r\n              yyloc = lexer.yylloc\r\n              if (recovering > 0) {\r\n                recovering--\r\n              }\r\n            } else {\r\n              symbol = preErrorSymbol\r\n              preErrorSymbol = null\r\n            }\r\n            break\r\n          case 2:\r\n            len = this.productions_[action[1]][1]\r\n            yyval.$ = vstack[vstack.length - len]\r\n            yyval._$ = {\r\n              first_line: lstack[lstack.length - (len || 1)].first_line,\r\n              last_line: lstack[lstack.length - 1].last_line,\r\n              first_column: lstack[lstack.length - (len || 1)].first_column,\r\n              last_column: lstack[lstack.length - 1].last_column\r\n            }\r\n            if (ranges) {\r\n              yyval._$.range = [\r\n                lstack[lstack.length - (len || 1)].range[0],\r\n                lstack[lstack.length - 1].range[1]\r\n              ]\r\n            }\r\n            r = this.performAction.apply(\r\n              yyval,\r\n              [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n              ].concat(args)\r\n            )\r\n            if (typeof r !== 'undefined') {\r\n              return r\r\n            }\r\n            if (len) {\r\n              stack = stack.slice(0, -1 * len * 2)\r\n              vstack = vstack.slice(0, -1 * len)\r\n              lstack = lstack.slice(0, -1 * len)\r\n            }\r\n            stack.push(this.productions_[action[1]][0])\r\n            vstack.push(yyval.$)\r\n            lstack.push(yyval._$)\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]]\r\n            stack.push(newState)\r\n            break\r\n          case 3:\r\n            return true\r\n        }\r\n      }\r\n      return true\r\n    }\r\n  }\r\n\r\n  /* generated by jison-lex 0.3.4 */\r\n  var lexer = (function () {\r\n    var lexer = {\r\n      EOF: 1,\r\n\r\n      parseError: function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n          this.yy.parser.parseError(str, hash)\r\n        } else {\r\n          throw new Error(str)\r\n        }\r\n      },\r\n\r\n      // resets the lexer, sets new input\r\n      setInput: function (input, yy) {\r\n        this.yy = yy || this.yy || {}\r\n        this._input = input\r\n        this._more = this._backtrack = this.done = false\r\n        this.yylineno = this.yyleng = 0\r\n        this.yytext = this.matched = this.match = ''\r\n        this.conditionStack = ['INITIAL']\r\n        this.yylloc = {\r\n          first_line: 1,\r\n          first_column: 0,\r\n          last_line: 1,\r\n          last_column: 0\r\n        }\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [0, 0]\r\n        }\r\n        this.offset = 0\r\n        return this\r\n      },\r\n\r\n      // consumes and returns one char from the input\r\n      input: function () {\r\n        var ch = this._input[0]\r\n        this.yytext += ch\r\n        this.yyleng++\r\n        this.offset++\r\n        this.match += ch\r\n        this.matched += ch\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g)\r\n        if (lines) {\r\n          this.yylineno++\r\n          this.yylloc.last_line++\r\n        } else {\r\n          this.yylloc.last_column++\r\n        }\r\n        if (this.options.ranges) {\r\n          this.yylloc.range[1]++\r\n        }\r\n\r\n        this._input = this._input.slice(1)\r\n        return ch\r\n      },\r\n\r\n      // unshifts one char (or a string) into the input\r\n      unput: function (ch) {\r\n        var len = ch.length\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g)\r\n\r\n        this._input = ch + this._input\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len)\r\n        //this.yyleng -= len;\r\n        this.offset -= len\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g)\r\n        this.match = this.match.substr(0, this.match.length - 1)\r\n        this.matched = this.matched.substr(0, this.matched.length - 1)\r\n\r\n        if (lines.length - 1) {\r\n          this.yylineno -= lines.length - 1\r\n        }\r\n        var r = this.yylloc.range\r\n\r\n        this.yylloc = {\r\n          first_line: this.yylloc.first_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.first_column,\r\n          last_column: lines\r\n            ? (lines.length === oldLines.length\r\n                ? this.yylloc.first_column\r\n                : 0) +\r\n              oldLines[oldLines.length - lines.length].length -\r\n              lines[0].length\r\n            : this.yylloc.first_column - len\r\n        }\r\n\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len]\r\n        }\r\n        this.yyleng = this.yytext.length\r\n        return this\r\n      },\r\n\r\n      // When called from action, caches matched text and appends it on next action\r\n      more: function () {\r\n        this._more = true\r\n        return this\r\n      },\r\n\r\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n      reject: function () {\r\n        if (this.options.backtrack_lexer) {\r\n          this._backtrack = true\r\n        } else {\r\n          return this.parseError(\r\n            'Lexical error on line ' +\r\n              (this.yylineno + 1) +\r\n              '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' +\r\n              this.showPosition(),\r\n            {\r\n              text: '',\r\n              token: null,\r\n              line: this.yylineno\r\n            }\r\n          )\r\n        }\r\n        return this\r\n      },\r\n\r\n      // retain first n characters of the match\r\n      less: function (n) {\r\n        this.unput(this.match.slice(n))\r\n      },\r\n\r\n      // displays already matched input, i.e. for error messages\r\n      pastInput: function () {\r\n        var past = this.matched.substr(\r\n          0,\r\n          this.matched.length - this.match.length\r\n        )\r\n        return (\r\n          (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, '')\r\n        )\r\n      },\r\n\r\n      // displays upcoming input, i.e. for error messages\r\n      upcomingInput: function () {\r\n        var next = this.match\r\n        if (next.length < 20) {\r\n          next += this._input.substr(0, 20 - next.length)\r\n        }\r\n        return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(\r\n          /\\n/g,\r\n          ''\r\n        )\r\n      },\r\n\r\n      // displays the character position where the lexing error occurred, i.e. for error messages\r\n      showPosition: function () {\r\n        var pre = this.pastInput()\r\n        var c = new Array(pre.length + 1).join('-')\r\n        return pre + this.upcomingInput() + '\\n' + c + '^'\r\n      },\r\n\r\n      // test the lexed token: return FALSE when not a match, otherwise return token\r\n      test_match: function (match, indexed_rule) {\r\n        var token, lines, backup\r\n\r\n        if (this.options.backtrack_lexer) {\r\n          // save context\r\n          backup = {\r\n            yylineno: this.yylineno,\r\n            yylloc: {\r\n              first_line: this.yylloc.first_line,\r\n              last_line: this.last_line,\r\n              first_column: this.yylloc.first_column,\r\n              last_column: this.yylloc.last_column\r\n            },\r\n            yytext: this.yytext,\r\n            match: this.match,\r\n            matches: this.matches,\r\n            matched: this.matched,\r\n            yyleng: this.yyleng,\r\n            offset: this.offset,\r\n            _more: this._more,\r\n            _input: this._input,\r\n            yy: this.yy,\r\n            conditionStack: this.conditionStack.slice(0),\r\n            done: this.done\r\n          }\r\n          if (this.options.ranges) {\r\n            backup.yylloc.range = this.yylloc.range.slice(0)\r\n          }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g)\r\n        if (lines) {\r\n          this.yylineno += lines.length\r\n        }\r\n        this.yylloc = {\r\n          first_line: this.yylloc.last_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.last_column,\r\n          last_column: lines\r\n            ? lines[lines.length - 1].length -\r\n              lines[lines.length - 1].match(/\\r?\\n?/)[0].length\r\n            : this.yylloc.last_column + match[0].length\r\n        }\r\n        this.yytext += match[0]\r\n        this.match += match[0]\r\n        this.matches = match\r\n        this.yyleng = this.yytext.length\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [this.offset, (this.offset += this.yyleng)]\r\n        }\r\n        this._more = false\r\n        this._backtrack = false\r\n        this._input = this._input.slice(match[0].length)\r\n        this.matched += match[0]\r\n        token = this.performAction.call(\r\n          this,\r\n          this.yy,\r\n          this,\r\n          indexed_rule,\r\n          this.conditionStack[this.conditionStack.length - 1]\r\n        )\r\n        if (this.done && this._input) {\r\n          this.done = false\r\n        }\r\n        if (token) {\r\n          return token\r\n        } else if (this._backtrack) {\r\n          // recover context\r\n          for (var k in backup) {\r\n            this[k] = backup[k]\r\n          }\r\n          return false // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false\r\n      },\r\n\r\n      // return next match in input\r\n      next: function () {\r\n        if (this.done) {\r\n          return this.EOF\r\n        }\r\n        if (!this._input) {\r\n          this.done = true\r\n        }\r\n\r\n        var token, match, tempMatch, index\r\n        if (!this._more) {\r\n          this.yytext = ''\r\n          this.match = ''\r\n        }\r\n        var rules = this._currentRules()\r\n        for (var i = 0; i < rules.length; i++) {\r\n          tempMatch = this._input.match(this.rules[rules[i]])\r\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n            match = tempMatch\r\n            index = i\r\n            if (this.options.backtrack_lexer) {\r\n              token = this.test_match(tempMatch, rules[i])\r\n              if (token !== false) {\r\n                return token\r\n              } else if (this._backtrack) {\r\n                match = false\r\n                continue // rule action called reject() implying a rule MISmatch.\r\n              } else {\r\n                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                return false\r\n              }\r\n            } else if (!this.options.flex) {\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (match) {\r\n          token = this.test_match(match, rules[index])\r\n          if (token !== false) {\r\n            return token\r\n          }\r\n          // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n          return false\r\n        }\r\n        if (this._input === '') {\r\n          return this.EOF\r\n        } else {\r\n          return this.parseError(\r\n            'Lexical error on line ' +\r\n              (this.yylineno + 1) +\r\n              '. Unrecognized text.\\n' +\r\n              this.showPosition(),\r\n            {\r\n              text: '',\r\n              token: null,\r\n              line: this.yylineno\r\n            }\r\n          )\r\n        }\r\n      },\r\n\r\n      // return next match that has a token\r\n      lex: function lex() {\r\n        var r = this.next()\r\n        if (r) {\r\n          return r\r\n        } else {\r\n          return this.lex()\r\n        }\r\n      },\r\n\r\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n      begin: function begin(condition) {\r\n        this.conditionStack.push(condition)\r\n      },\r\n\r\n      // pop the previously active lexer condition state off the condition stack\r\n      popState: function popState() {\r\n        var n = this.conditionStack.length - 1\r\n        if (n > 0) {\r\n          return this.conditionStack.pop()\r\n        } else {\r\n          return this.conditionStack[0]\r\n        }\r\n      },\r\n\r\n      // produce the lexer rule set which is active for the currently active lexer condition state\r\n      _currentRules: function _currentRules() {\r\n        if (\r\n          this.conditionStack.length &&\r\n          this.conditionStack[this.conditionStack.length - 1]\r\n        ) {\r\n          return this.conditions[\r\n            this.conditionStack[this.conditionStack.length - 1]\r\n          ].rules\r\n        } else {\r\n          return this.conditions['INITIAL'].rules\r\n        }\r\n      },\r\n\r\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n      topState: function topState(n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0)\r\n        if (n >= 0) {\r\n          return this.conditionStack[n]\r\n        } else {\r\n          return 'INITIAL'\r\n        }\r\n      },\r\n\r\n      // alias for begin(condition)\r\n      pushState: function pushState(condition) {\r\n        this.begin(condition)\r\n      },\r\n\r\n      // return the number of states currently on the stack\r\n      stateStackSize: function stateStackSize() {\r\n        return this.conditionStack.length\r\n      },\r\n      options: { 'case-insensitive': true },\r\n      performAction: function anonymous(\r\n        yy,\r\n        yy_,\r\n        $avoiding_name_collisions,\r\n        YY_START\r\n      ) {\r\n        var YYSTATE = YY_START\r\n        switch ($avoiding_name_collisions) {\r\n          case 0 /* skip whitespace */:\r\n            break\r\n          case 1:\r\n            return 20\r\n            break\r\n          case 2:\r\n            return 7\r\n            break\r\n          case 3:\r\n            return 8\r\n            break\r\n          case 4:\r\n            return 9\r\n            break\r\n          case 5:\r\n            return 12\r\n            break\r\n          case 6:\r\n            return 16\r\n            break\r\n          case 7:\r\n            return 14\r\n            break\r\n          case 8:\r\n            return 10\r\n            break\r\n          case 9:\r\n            return 11\r\n            break\r\n          case 10:\r\n            return 19\r\n            break\r\n          case 11:\r\n            return 21\r\n            break\r\n          case 12:\r\n            return '<='\r\n            break\r\n          case 13:\r\n            return '>='\r\n            break\r\n          case 14:\r\n            return '<'\r\n            break\r\n          case 15:\r\n            return '>'\r\n            break\r\n          case 16:\r\n            yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2)\r\n            return 24\r\n            break\r\n          case 17:\r\n            return 13\r\n            break\r\n          case 18:\r\n            return 23\r\n            break\r\n          case 19:\r\n            return 5\r\n            break\r\n          case 20:\r\n            return 'INVALID'\r\n            break\r\n        }\r\n      },\r\n      rules: [\r\n        /^(?:\\s+)/i,\r\n        /^(?:(-?(?:[1-9][0-9]+|[0-9]))\\b)/i,\r\n        /^(?:OR\\b)/i,\r\n        /^(?:AND\\b)/i,\r\n        /^(?:NOT\\b)/i,\r\n        /^(?:((ALL|NONE|HETATM|PROTEIN|BASIC|ACIDIC|CHARGED|POLAR|NONPOLAR|AROMATIC|NUCLEIC|PURINE|PYRIMIDINE|WATER|POLARH|NONPOLARH))\\b)/i,\r\n        /^(?:((NAME|ELEM|TYPE|RESIDUE|ICODE|CHAIN|ALTLOC))\\b)/i,\r\n        /^(?:((SERIAL|SEQUENCE|RESIDX))\\b)/i,\r\n        /^(?:\\()/i,\r\n        /^(?:\\))/i,\r\n        /^(?:,)/i,\r\n        /^(?::)/i,\r\n        /^(?:<=)/i,\r\n        /^(?:>=)/i,\r\n        /^(?:<)/i,\r\n        /^(?:>)/i,\r\n        /^(?:((?:\"(?:\\\\.|[^\\\\\"])*\"|'(?:\\\\.|[^\\\\'])*')))/i,\r\n        /^(?:(@[_A-Z0-9]+))/i,\r\n        /^(?:([_A-Z0-9]+))/i,\r\n        /^(?:$)/i,\r\n        /^(?:.)/i\r\n      ],\r\n      conditions: {\r\n        INITIAL: {\r\n          rules: [\r\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\r\n            19, 20\r\n          ],\r\n          inclusive: true\r\n        }\r\n      }\r\n    }\r\n    return lexer\r\n  })()\r\n  parser.lexer = lexer\r\n  function Parser() {\r\n    this.yy = {}\r\n  }\r\n  Parser.prototype = parser\r\n  parser.Parser = Parser\r\n  return new Parser()\r\n})()\r\n\r\nmodule.exports = { parser: parser }\r\n",
		"import utils from '../../utils'\r\n\r\n// ----------------------------------------------------------------------------\r\nclass Range {\r\n  constructor(min, max) {\r\n    this.min = min\r\n    this.max = typeof max === 'undefined' ? min : max\r\n  }\r\n\r\n  includes(value) {\r\n    return this.min <= value && value <= this.max\r\n  }\r\n\r\n  toString() {\r\n    const { min, max } = this\r\n    return min === max ? String(min) : [min, max].join(':')\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.min, this.max]\r\n  }\r\n}\r\n\r\n// ////////////////////////////////////////////////////////////////////////////\r\n\r\nclass List {\r\n  constructor(arg) {\r\n    if (arg instanceof this.constructor) {\r\n      return arg\r\n    }\r\n    if (arg instanceof Array) {\r\n      this._values = arg.slice(0)\r\n    } else if (arg) {\r\n      this._values = [arg]\r\n    } else {\r\n      this._values = []\r\n    }\r\n  }\r\n\r\n  append(value) {\r\n    const values = this._values\r\n    values[values.length] = value\r\n    return this\r\n  }\r\n\r\n  remove(value) {\r\n    const values = this._values\r\n    const index = values.indexOf(value)\r\n    if (index >= 0) {\r\n      values.splice(index, 1)\r\n    }\r\n    return this\r\n  }\r\n\r\n  toString() {\r\n    return this._values.join(',')\r\n  }\r\n\r\n  toJSON() {\r\n    const values = this._values\r\n    const result = []\r\n    for (let i = 0, n = values.length; i < n; ++i) {\r\n      const value = values[i]\r\n      result[i] = value.toJSON ? value.toJSON() : value\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nclass RangeList extends List {\r\n  includes(value) {\r\n    const list = this._values\r\n    for (let i = 0, n = list.length; i < n; ++i) {\r\n      if (list[i].includes(value)) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst valuesArray = []\r\n\r\nclass ValueList extends List {\r\n  constructor(arg, upperOnly) {\r\n    const list = super(arg)\r\n    if (upperOnly) {\r\n      this.upperOnly = true\r\n      const values = list._values\r\n      for (let i = 0, n = values.length; i < n; ++i) {\r\n        const value = values[i]\r\n        if (typeof value === 'string') {\r\n          values[i] = value.toUpperCase()\r\n        }\r\n      }\r\n    } else {\r\n      this.upperOnly = false\r\n    }\r\n    return list\r\n  }\r\n\r\n  includes(value) {\r\n    // we do not convert to upper case here for perfomance reasons\r\n    // if list is upper case only, value must be converted before it is sent up to  here\r\n    return this._values.indexOf(value) !== -1\r\n  }\r\n\r\n  toString() {\r\n    // Quote values that are not correct identifiers\r\n    const values = this._values\r\n    valuesArray.length = 0\r\n    for (let i = 0, n = values.length; i < n; ++i) {\r\n      valuesArray[i] = utils.correctSelectorIdentifier(String(values[i]))\r\n    }\r\n    return valuesArray.join(',')\r\n  }\r\n\r\n  _validate(value) {\r\n    return this.upperOnly && typeof value === 'string'\r\n      ? value.toUpperCase()\r\n      : value\r\n  }\r\n\r\n  append(value) {\r\n    super.append(this._validate(value))\r\n    return this\r\n  }\r\n\r\n  remove(value) {\r\n    super.remove(this._validate(value))\r\n    return this\r\n  }\r\n}\r\n\r\nexport { Range, List, RangeList, ValueList }\r\n",
		"import { RangeList, ValueList } from './selectArgs'\r\n\r\n/** Base class for atom selectors. */\r\nclass Selector {\r\n  toString() {\r\n    return this.keyword\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.name]\r\n  }\r\n}\r\n\r\nSelector.prototype.name = 'Error'\r\nSelector.prototype.keyword = 'error'\r\n\r\n/** Base class for list-based atom selectors. */\r\nclass ListSelector extends Selector {\r\n  constructor(list) {\r\n    super()\r\n    this.list = list\r\n  }\r\n\r\n  toString() {\r\n    return `${this.keyword} ${this.list}`\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.name, this.list.toJSON()]\r\n  }\r\n}\r\n\r\nclass RangeListSelector extends ListSelector {\r\n  constructor(arg) {\r\n    super(new RangeList(arg))\r\n  }\r\n}\r\n\r\nclass ValueListSelector extends ListSelector {\r\n  constructor(arg, caseSensitive) {\r\n    super(new ValueList(arg, !caseSensitive))\r\n  }\r\n}\r\n\r\nclass NoneSelector extends Selector {\r\n  includesAtom(_atom) {\r\n    return false\r\n  }\r\n}\r\n\r\nNoneSelector.prototype.name = 'None'\r\nNoneSelector.prototype.keyword = 'none'\r\n\r\nclass AllSelector extends Selector {\r\n  includesAtom(_atom) {\r\n    return true\r\n  }\r\n}\r\n\r\nAllSelector.prototype.name = 'All'\r\nAllSelector.prototype.keyword = 'all'\r\n\r\nexport {\r\n  Selector,\r\n  ListSelector,\r\n  RangeListSelector,\r\n  ValueListSelector,\r\n  NoneSelector,\r\n  AllSelector\r\n}\r\n",
		"import { Selector, NoneSelector } from './selectorsBase'\r\n\r\n// ----------------------------------------------------------------------------\r\n// Operators\r\n// ----------------------------------------------------------------------------\r\nconst none = new NoneSelector()\r\n\r\nclass PrefixOperator extends Selector {\r\n  constructor(rhs) {\r\n    super()\r\n    this.rhs = rhs || none\r\n  }\r\n\r\n  toString() {\r\n    const rhs =\r\n      this.rhs.priority && this.rhs.priority > this.priority\r\n        ? `(${this.rhs})`\r\n        : this.rhs\r\n    return `${this.keyword} ${rhs}`\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.name, this.rhs.toJSON()]\r\n  }\r\n}\r\n\r\nPrefixOperator.prototype.priority = 1\r\n\r\nclass InfixOperator extends Selector {\r\n  constructor(lhs, rhs) {\r\n    super()\r\n    this.lhs = lhs || none\r\n    this.rhs = rhs || none\r\n  }\r\n\r\n  toString() {\r\n    const lhs =\r\n      this.lhs.priority && this.lhs.priority > this.priority\r\n        ? `(${this.lhs})`\r\n        : this.lhs\r\n    const rhs =\r\n      this.rhs.priority && this.rhs.priority > this.priority\r\n        ? `(${this.rhs})`\r\n        : this.rhs\r\n    return `${lhs} ${this.keyword} ${rhs}`\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.name, this.lhs.toJSON(), this.rhs.toJSON()]\r\n  }\r\n}\r\n\r\nInfixOperator.prototype.priority = 1000\r\n\r\nexport { PrefixOperator, InfixOperator }\r\n",
		"import Atom from './Atom'\r\nimport ResidueType from './ResidueType'\r\nimport { parser } from '../utils/SelectionParser'\r\nimport { Range, RangeList, ValueList } from './selectors/selectArgs'\r\nimport { PrefixOperator, InfixOperator } from './selectors/selectOps'\r\nimport {\r\n  Selector,\r\n  RangeListSelector,\r\n  ValueListSelector,\r\n  NoneSelector,\r\n  AllSelector\r\n} from './selectors/selectorsBase'\r\n\r\nconst keywords = {}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Named selectors\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction defineSelector(name, SelectorClass) {\r\n  const keyword = name.toLowerCase()\r\n  SelectorClass.prototype.keyword = keyword\r\n  SelectorClass.prototype.name = name\r\n\r\n  const factory = (...args) => new SelectorClass(...args)\r\n  factory.SelectorClass = SelectorClass\r\n  keywords[keyword] = factory\r\n\r\n  return SelectorClass\r\n}\r\n\r\ndefineSelector(\r\n  'Serial',\r\n  class SerialSelector extends RangeListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.serial)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'Name',\r\n  class NameSelector extends ValueListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.name)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'AltLoc',\r\n  class AltLocSelector extends ValueListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(String.fromCharCode(atom.location))\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'Elem',\r\n  class ElemSelector extends ValueListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.element.name)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'Residue',\r\n  class ResidueSelector extends ValueListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.residue._type._name)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'Sequence',\r\n  class SequenceSelector extends RangeListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.residue._sequence)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'ICode',\r\n  class ICodeSelector extends ValueListSelector {\r\n    constructor(arg) {\r\n      super(arg, true)\r\n    }\r\n\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.residue._icode)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'ResIdx',\r\n  class ResIdxSelector extends RangeListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.residue._index)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'Chain',\r\n  class ChainSelector extends ValueListSelector {\r\n    constructor(arg) {\r\n      super(arg, true)\r\n    }\r\n\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.residue._chain._name)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'Hetatm',\r\n  class HetatmSelector extends Selector {\r\n    includesAtom(atom) {\r\n      return atom.het\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'PolarH',\r\n  class PolarHSelector extends Selector {\r\n    includesAtom(atom) {\r\n      return (atom.flags & Atom.Flags.NONPOLARH) === Atom.Flags.HYDROGEN\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'NonPolarH',\r\n  class NonPolarHSelector extends Selector {\r\n    includesAtom(atom) {\r\n      return (atom.flags & Atom.Flags.NONPOLARH) === Atom.Flags.NONPOLARH\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector('All', AllSelector)\r\n\r\ndefineSelector('None', NoneSelector)\r\n\r\nconst NULL_SELECTOR = keywords.none()\r\n\r\n// ----------------------------------------------------------------------------\r\n// Named operators\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction defineOperator(name, priority, OperatorClass) {\r\n  OperatorClass.prototype.priority = priority\r\n  return defineSelector(name, OperatorClass)\r\n}\r\ndefineOperator(\r\n  'Not',\r\n  1,\r\n  class NotOperator extends PrefixOperator {\r\n    includesAtom(atom) {\r\n      return !this.rhs.includesAtom(atom)\r\n    }\r\n  }\r\n)\r\n\r\ndefineOperator(\r\n  'And',\r\n  2,\r\n  class AndOperator extends InfixOperator {\r\n    includesAtom(atom) {\r\n      return this.lhs.includesAtom(atom) && this.rhs.includesAtom(atom)\r\n    }\r\n  }\r\n)\r\n\r\ndefineOperator(\r\n  'Or',\r\n  3,\r\n  class OrOperator extends InfixOperator {\r\n    includesAtom(atom) {\r\n      return this.lhs.includesAtom(atom) || this.rhs.includesAtom(atom)\r\n    }\r\n  }\r\n)\r\n\r\n// ----------------------------------------------------------------------------\r\n// Flag selectors\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction byResidueTypeFlag(flag, name) {\r\n  return defineSelector(\r\n    name,\r\n    class extends Selector {\r\n      includesAtom(atom) {\r\n        return (atom.residue._type.flags & flag) !== 0\r\n      }\r\n    }\r\n  )\r\n}\r\n\r\nbyResidueTypeFlag(ResidueType.Flags.PROTEIN, 'Protein')\r\nbyResidueTypeFlag(ResidueType.Flags.BASIC, 'Basic')\r\nbyResidueTypeFlag(ResidueType.Flags.ACIDIC, 'Acidic')\r\nbyResidueTypeFlag(ResidueType.Flags.BASIC | ResidueType.Flags.ACIDIC, 'Charged')\r\nbyResidueTypeFlag(ResidueType.Flags.POLAR, 'Polar')\r\nbyResidueTypeFlag(ResidueType.Flags.NONPOLAR, 'NonPolar')\r\nbyResidueTypeFlag(ResidueType.Flags.AROMATIC, 'Aromatic')\r\nbyResidueTypeFlag(ResidueType.Flags.NUCLEIC, 'Nucleic')\r\nbyResidueTypeFlag(ResidueType.Flags.PURINE, 'Purine')\r\nbyResidueTypeFlag(ResidueType.Flags.PYRIMIDINE, 'Pyrimidine')\r\nbyResidueTypeFlag(ResidueType.Flags.WATER, 'Water')\r\n\r\n// ----------------------------------------------------------------------------\r\nconst selectors = Object.create(keywords)\r\n\r\nselectors.Selector = Selector\r\nselectors.RangeListSelector = RangeListSelector\r\nselectors.ValueListSelector = ValueListSelector\r\nselectors.Range = Range\r\nselectors.RangeList = RangeList\r\nselectors.ValueList = ValueList\r\nselectors.PrefixOperator = PrefixOperator\r\nselectors.InfixOperator = InfixOperator\r\nselectors.Context = Object.create({})\r\n\r\nselectors.GetSelector = function (key) {\r\n  if (!selectors.Context.hasOwnProperty(key)) {\r\n    const exc = { message: `selector ${key} is not registered` }\r\n    throw exc\r\n  }\r\n  return selectors.Context[key] || NULL_SELECTOR\r\n}\r\n\r\nselectors.ClearContext = function () {\r\n  Object.keys(selectors.Context).forEach((k) => {\r\n    delete selectors.Context[k]\r\n  })\r\n}\r\n\r\nselectors.keyword = function (key) {\r\n  return keywords[key.toLowerCase()] || keywords.none\r\n}\r\n\r\nselectors.parse = function (str) {\r\n  const res = {}\r\n  try {\r\n    res.selector = parser.parse(str)\r\n  } catch (e) {\r\n    res.selector = NULL_SELECTOR\r\n    res.error = e.message\r\n  }\r\n  return res\r\n}\r\n\r\nparser.yy = selectors\r\nparser.yy.parseError = parser.parseError // workaround for incorrect JISON parser generator for AMD module\r\n\r\nexport default selectors\r\n",
		"import selectors from './selectors'\r\nimport { Box3, Sphere, Vector3 } from 'three'\r\n\r\n/**\r\n * Basic biological unit class.\r\n *\r\n * @exports BiologicalUnit\r\n * @constructor\r\n */\r\nclass BiologicalUnit {\r\n  constructor(complex) {\r\n    this._complex = complex\r\n    this._selector = selectors.keyword('All')()\r\n    this._boundaries = {\r\n      boundingBox: new Box3(),\r\n      boundingSphere: new Sphere()\r\n    }\r\n  }\r\n\r\n  computeBoundaries() {\r\n    const atoms = this._complex._atoms\r\n    const n = atoms.length\r\n    const selector = this._selector\r\n\r\n    const { boundingBox } = this._boundaries\r\n    boundingBox.makeEmpty()\r\n    if (n === 1) {\r\n      boundingBox.expandByPoint(atoms[0].position)\r\n      const bbc = new Vector3()\r\n      boundingBox.getCenter(bbc)\r\n      const s = 2 * atoms[0].element.radius\r\n      boundingBox.setFromCenterAndSize(bbc, new Vector3(s, s, s))\r\n    } else {\r\n      for (let i = 0; i < n; ++i) {\r\n        if (selector.includesAtom(atoms[i])) {\r\n          boundingBox.expandByPoint(atoms[i].position)\r\n        }\r\n      }\r\n    }\r\n\r\n    // Build bounding sphere\r\n    let radiusSquared = 0.0\r\n    const center = new Vector3()\r\n    boundingBox.getCenter(center)\r\n    if (n === 1) {\r\n      this._boundaries.boundingSphere.set(center, atoms[0].element.radius)\r\n    } else {\r\n      for (let i = 0; i < n; ++i) {\r\n        if (!selector.includesAtom(atoms[i])) {\r\n          continue\r\n        }\r\n        const pos = atoms[i].position\r\n        const lengthSquared = center.distanceToSquared(pos)\r\n        if (radiusSquared < lengthSquared) {\r\n          radiusSquared = lengthSquared\r\n        }\r\n      }\r\n      this._boundaries.boundingSphere.set(center, Math.sqrt(radiusSquared))\r\n    }\r\n  }\r\n\r\n  getTransforms() {\r\n    return []\r\n  }\r\n\r\n  getSelector() {\r\n    return this._selector\r\n  }\r\n\r\n  getBoundaries() {\r\n    return this._boundaries\r\n  }\r\n\r\n  finalize() {}\r\n}\r\n\r\nexport default BiologicalUnit\r\n",
		"import selectors from './selectors'\r\nimport BiologicalUnit from './BiologicalUnit'\r\nimport { Box3, Sphere, Vector3 } from 'three'\r\n\r\n/**\r\n * Biological assembly.\r\n *\r\n * @exports Assembly\r\n * @constructor\r\n */\r\n\r\nclass Assembly extends BiologicalUnit {\r\n  constructor(complex) {\r\n    super(complex)\r\n    this.chains = []\r\n    this.matrices = []\r\n  }\r\n\r\n  computeBoundaries() {\r\n    super.computeBoundaries()\r\n    // fix up the boundaries\r\n    const { matrices } = this\r\n    const oldCenter = this._boundaries.boundingSphere.center\r\n    const oldRad = this._boundaries.boundingSphere.radius\r\n    const boundingBox = (this._boundaries.boundingBox = new Box3())\r\n    boundingBox.makeEmpty()\r\n    for (let i = 0, n = matrices.length; i < n; ++i) {\r\n      boundingBox.expandByPoint(oldCenter.clone().applyMatrix4(matrices[i]))\r\n    }\r\n\r\n    const newRad = boundingBox.max.distanceTo(boundingBox.min) / 2 + oldRad\r\n    const center = new Vector3()\r\n    boundingBox.getCenter(center)\r\n    this._boundaries.boundingSphere = new Sphere().set(center, newRad)\r\n    boundingBox.max.addScalar(oldRad)\r\n    boundingBox.min.subScalar(oldRad)\r\n  }\r\n\r\n  /**\r\n   * Mark a chain as belonging to this biological assembly.\r\n   * @param {string} chain - chain identifier, usually a single letter\r\n   */\r\n  addChain(chain) {\r\n    this.chains[this.chains.length] = chain\r\n  }\r\n\r\n  /**\r\n   * Add a transformation matrix.\r\n   * @param {Matrix4} matrix - transformation matrix\r\n   */\r\n  addMatrix(matrix) {\r\n    this.matrices[this.matrices.length] = matrix\r\n  }\r\n\r\n  getTransforms() {\r\n    return this.matrices\r\n  }\r\n\r\n  finalize() {\r\n    if (this.chains.length > 0) {\r\n      this._selector = selectors.keyword('Chain')(this.chains)\r\n    } else {\r\n      this._selector = selectors.keyword('None')()\r\n    }\r\n  }\r\n}\r\n\r\nexport default Assembly\r\n",
		"/**\r\n * This class represents connected component as a part of a complex.\r\n * WARNING! The whole component entity is build under the assumption that residues\r\n * are placed in the chains and complex in ascending order of indices\r\n *\r\n * @param {Complex} complex - Molecular complex this chain belongs to.\r\n *\r\n * @exports Component\r\n * @constructor\r\n */\r\nclass Component {\r\n  constructor(complex) {\r\n    this._complex = complex\r\n    this._index = -1\r\n    this._residueIndices = []\r\n    this._cycles = []\r\n    this._subDivs = []\r\n    this._residueCount = 0\r\n  }\r\n\r\n  getResidues() {\r\n    return this._complex._residues\r\n  }\r\n\r\n  getResidueCount() {\r\n    return this._residueCount\r\n  }\r\n\r\n  forEachResidue(process) {\r\n    const residues = this._complex._residues\r\n    const resIdc = this._residueIndices\r\n    for (let idIdc = 0, idCount = resIdc.length; idIdc < idCount; ++idIdc) {\r\n      for (\r\n        let idx = resIdc[idIdc].start, last = resIdc[idIdc].end;\r\n        idx <= last;\r\n        ++idx\r\n      ) {\r\n        process(residues[idx])\r\n      }\r\n    }\r\n  }\r\n\r\n  setSubDivs(subDivs) {\r\n    this._subDivs = subDivs\r\n    let curr = 0\r\n    const resIdc = []\r\n    let resCnt = 0\r\n    for (let i = 0, n = subDivs.length; i < n; ++i) {\r\n      if (i === n - 1 || subDivs[i].end + 1 !== subDivs[i + 1].start) {\r\n        const { start } = subDivs[curr]\r\n        const { end } = subDivs[i]\r\n        resIdc[resIdc.length] = {\r\n          start,\r\n          end\r\n        }\r\n        resCnt += end - start + 1\r\n        curr = i + 1\r\n      }\r\n    }\r\n\r\n    this._residueIndices = resIdc\r\n    this._residueCount = resCnt\r\n  }\r\n\r\n  getComplex() {\r\n    return this._complex\r\n  }\r\n\r\n  forEachBond(process) {\r\n    const bonds = this._complex._bonds\r\n\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      const bond = bonds[i]\r\n      if (bond._left.residue._component === this) {\r\n        process(bond)\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.forEachCycle((cycle) => {\r\n      cycle.update()\r\n    })\r\n  }\r\n\r\n  forEachAtom(process) {\r\n    this.forEachResidue((residue) => {\r\n      residue.forEachAtom(process)\r\n    })\r\n  }\r\n\r\n  addCycle(cycle) {\r\n    this._cycles.push(cycle)\r\n  }\r\n\r\n  forEachCycle(process) {\r\n    const cycles = this._cycles\r\n    for (let i = 0, n = cycles.length; i < n; ++i) {\r\n      process(cycles[i])\r\n    }\r\n  }\r\n\r\n  markResidues() {\r\n    const self = this\r\n    self.forEachResidue((residue) => {\r\n      residue._component = self\r\n    })\r\n  }\r\n\r\n  _forEachSubChain(mask, process) {\r\n    const residues = this._complex._residues\r\n    const subs = this._subDivs\r\n    for (let i = 0, n = subs.length; i < n; ++i) {\r\n      for (let idx = subs[i].start, last = subs[i].end; idx <= last; ++idx) {\r\n        const currRes = residues[idx]\r\n        if (mask & currRes._mask && currRes._isValid) {\r\n          let end = idx + 1\r\n          for (; end <= last; ++end) {\r\n            const endRes = residues[end]\r\n            if (!(mask & endRes._mask && endRes._isValid)) {\r\n              break\r\n            }\r\n          }\r\n          process(i, idx, end - 1)\r\n          idx = end\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getMaskedSequences(mask) {\r\n    const subs = []\r\n    let idx = 0\r\n    this._forEachSubChain(mask, (_subIdx, start, end) => {\r\n      subs[idx++] = { start, end }\r\n    })\r\n\r\n    return subs\r\n  }\r\n\r\n  getMaskedSubdivSequences(mask) {\r\n    const subs = []\r\n    let currIdx = -1\r\n    let lastSubIdx = -1\r\n    const subDivs = this._subDivs\r\n\r\n    this._forEachSubChain(mask, (subIdx, start, end) => {\r\n      if (lastSubIdx !== subIdx) {\r\n        ++currIdx\r\n        subs[currIdx] = {\r\n          arr: [],\r\n          boundaries: subDivs[subIdx]\r\n        }\r\n        lastSubIdx = subIdx\r\n      }\r\n      subs[currIdx].arr[subs[currIdx].arr.length] = { start, end }\r\n    })\r\n\r\n    return subs\r\n  }\r\n}\r\n\r\nexport default Component\r\n",
		"import utils from '../utils'\r\n\r\nconst cMaxPairsForHashCode = 32\r\nconst cHashTableSize = 1024 * 1024\r\nconst cNumbersPerPair = 4\r\nconst cMaxNeighbours = 14\r\nconst cInvalidVal = -1\r\n// 89237 is a large simple number, can be used for pseudo random hash code create\r\nconst cBigPrime = 89237\r\n\r\nclass AtomPairs {\r\n  constructor(maxPairsEstimate) {\r\n    this.numPairs = 0\r\n    this.numMaxPairs = maxPairsEstimate\r\n    this.intBuffer = utils.allocateTyped(\r\n      Int32Array,\r\n      maxPairsEstimate * cNumbersPerPair\r\n    )\r\n    for (let i = 0; i < maxPairsEstimate * cNumbersPerPair; i++) {\r\n      this.intBuffer[i] = cInvalidVal\r\n    }\r\n    this.hashBuffer = utils.allocateTyped(\r\n      Int32Array,\r\n      cHashTableSize * cMaxPairsForHashCode\r\n    )\r\n    for (let i = 0; i < cHashTableSize * cMaxPairsForHashCode; i++) {\r\n      this.hashBuffer[i] = cInvalidVal\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy all pairs memory\r\n   */\r\n  destroy() {\r\n    this.intBuffer = null\r\n    this.hashBuffer = null\r\n  }\r\n\r\n  /**\r\n   * Add pair of atoms to collection\r\n   * @param {number} indexA - Index of the 1st vertex.\r\n   * @param {number} indexB - Index of the 2nd vertex.\r\n   */\r\n  addPair(indexA, indexB) {\r\n    const ia = indexA < indexB ? indexA : indexB\r\n    const ib = indexA > indexB ? indexA : indexB\r\n    const codeToAdd = ia + (ib << cMaxNeighbours)\r\n\r\n    const hashCode = (ia + ib * cBigPrime) & (cHashTableSize - 1)\r\n    let j = hashCode * cMaxPairsForHashCode\r\n    let apI = 0\r\n    for (; apI < cMaxPairsForHashCode; apI++) {\r\n      const code = this.hashBuffer[j + apI]\r\n      if (code === cInvalidVal) {\r\n        break\r\n      }\r\n      if (code === codeToAdd) {\r\n        return false\r\n      }\r\n    }\r\n    // add this new hash code\r\n    if (apI >= cMaxPairsForHashCode) {\r\n      throw new Error('addPair: increase cMaxPairsForHashCode')\r\n    }\r\n    this.hashBuffer[j + apI] = codeToAdd\r\n\r\n    // actually add\r\n    if (this.numPairs >= this.numMaxPairs) {\r\n      throw new Error('addPair: increase num pairs')\r\n    }\r\n    j = this.numPairs * cNumbersPerPair\r\n    this.intBuffer[j] = ia\r\n    this.intBuffer[j + 1] = ib\r\n    this.intBuffer[j + 2] = codeToAdd\r\n    this.numPairs++\r\n    return true\r\n  }\r\n}\r\n\r\nexport default AtomPairs\r\n",
		"import AtomPairs from './AtomPairs'\r\nimport Bond from './Bond'\r\n\r\nconst cProfileBondBuilder = false\r\nconst cEstBondsMultiplier = 4\r\nconst cSpaceCode = 32\r\nconst cBondTolerance = 0.45\r\nconst cVMDTolerance = 0.6\r\nconst cBondRadInJMOL = true\r\nconst cEpsilon = 0.001\r\n\r\n/**\r\n * Get radius used for building bonds.\r\n *\r\n * @param {Atom} atom - Atom object.\r\n * @returns {number} special value for bonding radius for this atom\r\n */\r\nfunction _getBondingRadius(atom) {\r\n  const { element } = atom\r\n  if (element) {\r\n    return element.radiusBonding\r\n  }\r\n  throw new Error('_getBondingRadius: Logic error.')\r\n}\r\n\r\nfunction _isAtomEligible(atom) {\r\n  // build for all non-hetatm and for hetatm without bonds\r\n  return !atom.isHet() || (atom.bonds && atom.bonds.length === 0)\r\n}\r\n\r\n/**\r\n * Bond between atoms.\r\n *\r\n * @param {Complex} complex molecular complex\r\n\r\n * @exports AutoBond\r\n * @constructor\r\n */\r\nclass AutoBond {\r\n  constructor(complex) {\r\n    this._complex = complex\r\n    this._maxRad = 1.8\r\n    const bBox = this._complex.getDefaultBoundaries().boundingBox\r\n    this._vBoxMin = bBox.min.clone()\r\n    this._vBoxMax = bBox.max.clone()\r\n\r\n    this._pairCollection = null\r\n  }\r\n\r\n  /**\r\n   * Add existing pairs of connectors (from pdb file after its reading)\r\n   * @returns {number} 0\r\n   */\r\n  _addExistingPairs() {\r\n    const atoms = this._complex.getAtoms()\r\n    const numAtoms = atoms.length\r\n    let aInd = 0\r\n    const collection = this._pairCollection\r\n\r\n    for (; aInd < numAtoms; aInd++) {\r\n      const { bonds } = atoms[aInd]\r\n      const numBondsForAtom = bonds.length\r\n      for (let bInd = 0; bInd < numBondsForAtom; bInd++) {\r\n        const bond = bonds[bInd]\r\n        const indTo = bond._left.index\r\n        if (indTo === aInd) {\r\n          collection.addPair(aInd, bond._right.index)\r\n        }\r\n      } // for (b) all bonds in atom\r\n    } // for (a)\r\n    return 0\r\n  }\r\n\r\n  _findPairs() {\r\n    const vw = this._complex.getVoxelWorld()\r\n    if (vw === null) {\r\n      return\r\n    }\r\n\r\n    const atoms = this._complex._atoms\r\n    const atomsNum = atoms.length\r\n    const self = this\r\n\r\n    let rA\r\n    let isHydrogenA\r\n    let posA\r\n    let locationA\r\n    let atomA\r\n\r\n    const processAtom = function (atomB) {\r\n      if (isHydrogenA && atomB.isHydrogen()) {\r\n        return\r\n      }\r\n\r\n      const locationB = atomB.location\r\n      if (\r\n        locationA !== cSpaceCode &&\r\n        locationB !== cSpaceCode &&\r\n        locationA !== locationB\r\n      ) {\r\n        return\r\n      }\r\n\r\n      const dist2 = posA.distanceToSquared(atomB.position)\r\n      const rB = atomB.element.radiusBonding\r\n      const maxAcceptable = cBondRadInJMOL\r\n        ? rA + rB + cBondTolerance\r\n        : cVMDTolerance * (rA + rB)\r\n\r\n      if (dist2 > maxAcceptable * maxAcceptable) {\r\n        return\r\n      }\r\n\r\n      if (dist2 < cEpsilon) {\r\n        return\r\n      }\r\n\r\n      self._pairCollection.addPair(atomA.index, atomB.index)\r\n    }\r\n\r\n    for (let i = 0; i < atomsNum; ++i) {\r\n      atomA = atoms[i]\r\n      if (!_isAtomEligible(atomA)) {\r\n        continue\r\n      }\r\n\r\n      rA = atomA.element.radiusBonding\r\n      isHydrogenA = atomA.isHydrogen()\r\n      posA = atomA.position\r\n      locationA = atomA.location\r\n\r\n      vw.forEachAtomWithinRadius(\r\n        posA,\r\n        2 * this._maxRad + cBondTolerance,\r\n        processAtom\r\n      )\r\n    }\r\n  }\r\n\r\n  _addPairs() {\r\n    const atoms = this._complex._atoms\r\n\r\n    for (let i = 0, k = 0; i < this._pairCollection.numPairs; i++, k += 4) {\r\n      const iA = this._pairCollection.intBuffer[k]\r\n      const iB = this._pairCollection.intBuffer[k + 1]\r\n      this._addPair(atoms[iA], atoms[iB])\r\n    }\r\n  }\r\n\r\n  _addPair(atomA, atomB) {\r\n    const bondsA = atomA.bonds\r\n    const indexA = atomA.index\r\n    const indexB = atomB.index\r\n    for (let j = 0, numBonds = bondsA.length; j < numBonds; ++j) {\r\n      const bond = bondsA[j]\r\n      if (bond._left.index === indexB || bond._right.index === indexB) {\r\n        return\r\n      }\r\n    }\r\n    const left = indexA < indexB ? atomA : atomB\r\n    const right = indexA < indexB ? atomB : atomA\r\n    const newBond = this._complex.addBond(\r\n      left,\r\n      right,\r\n      0,\r\n      Bond.BondType.UNKNOWN,\r\n      false\r\n    )\r\n    bondsA.push(newBond)\r\n    atomB.bonds.push(newBond)\r\n  }\r\n\r\n  build() {\r\n    if (cProfileBondBuilder) {\r\n      console.time('Bonds Builder')\r\n    }\r\n    this._buildInner()\r\n\r\n    if (cProfileBondBuilder) {\r\n      console.timeEnd('Bonds Builder')\r\n    }\r\n  }\r\n\r\n  _buildInner() {\r\n    const atoms = this._complex._atoms\r\n    if (atoms.length < 2) {\r\n      return\r\n    }\r\n    if (atoms[0].index < 0) {\r\n      throw new Error('AutoBond: Atoms in complex were not indexed.')\r\n    }\r\n\r\n    this._calcBoundingBox()\r\n    this._pairCollection = new AtomPairs(atoms.length * cEstBondsMultiplier)\r\n    this._addExistingPairs()\r\n    this._findPairs()\r\n    this._addPairs()\r\n  }\r\n\r\n  _calcBoundingBox() {\r\n    const atoms = this._complex._atoms\r\n    const nAtoms = atoms.length\r\n    let maxRad = _getBondingRadius(atoms[0])\r\n    for (let i = 1; i < nAtoms; ++i) {\r\n      maxRad = Math.max(maxRad, _getBondingRadius(atoms[i]))\r\n    }\r\n    this._vBoxMax.addScalar(maxRad)\r\n    this._vBoxMin.addScalar(-maxRad)\r\n    this._maxRad = maxRad * 1.2\r\n  }\r\n\r\n  destroy() {\r\n    if (this._pairCollection) {\r\n      this._pairCollection.destroy()\r\n    }\r\n  }\r\n}\r\n\r\nexport default AutoBond\r\n",
		"import Bond from './Bond'\r\nimport Element from './Element'\r\nimport { MathUtils, Vector3 } from 'three'\r\n\r\nconst cCrossThresh = 0.1\r\nconst cAromaticType = Bond.BondType.AROMATIC\r\nconst cAromaticAtoms = [\r\n  Element.ByName.C.number,\r\n  Element.ByName.N.number\r\n  // Element.ByName.O.number,\r\n  // Element.ByName.S.number,\r\n]\r\n\r\n/** Conditions for bonds:\r\n *   - Cross product with each subsequent bond to add is collinear and point to the same direction\r\n *   - Each pair of a adjacent bonds belong to not more than one cycle\r\n *   - If there is more than one candidates we try them in ascending order of angle values\r\n */\r\n\r\nconst _coDirVectors = (function () {\r\n  const v1Tmp = new Vector3()\r\n  const v2Tmp = new Vector3()\r\n  const cp = new Vector3()\r\n  return function (v1, v2) {\r\n    v1Tmp.copy(v1).normalize()\r\n    v2Tmp.copy(v2).normalize()\r\n    cp.crossVectors(v1Tmp, v2Tmp)\r\n    if (cp.length() > cCrossThresh) {\r\n      return false\r\n    }\r\n    // zero vector in out terms must be collinear to any\r\n    return v1Tmp.dot(v2Tmp) >= 0\r\n  }\r\n})()\r\n\r\nfunction _insertAscending(arr, val) {\r\n  let idx = 0\r\n  while (idx < arr.length && arr[idx] < val) {\r\n    ++idx\r\n  }\r\n  arr.splice(idx, 0, val)\r\n}\r\n\r\nfunction _anotherAtom(bond, currAtom) {\r\n  return bond._left === currAtom ? bond._right : bond._left\r\n}\r\n\r\nfunction _cosBetween(v1, v2) {\r\n  const theta = v1.dot(v2) / Math.sqrt(v1.lengthSq() * v2.lengthSq())\r\n  return MathUtils.clamp(theta, -1, 1)\r\n}\r\n\r\nfunction _markAromatic(bond) {\r\n  bond._type = cAromaticType\r\n}\r\n\r\nclass Cycle {\r\n  constructor(atomsList) {\r\n    this.atoms = atomsList\r\n    this.update()\r\n  }\r\n\r\n  update() {\r\n    const { atoms } = this\r\n    const center = new Vector3()\r\n    const nA = atoms.length\r\n    for (let j = 0; j < nA; ++j) {\r\n      center.add(atoms[j].position)\r\n    }\r\n    center.multiplyScalar(1.0 / nA)\r\n    this.center = center\r\n    this.radius = center.distanceTo(\r\n      atoms[0].position.clone().lerp(atoms[1].position, 0.5)\r\n    )\r\n  }\r\n\r\n  forEachBond(process) {\r\n    const { atoms } = this\r\n    const nA = atoms.length\r\n    let currAtom = atoms[0]\r\n    let nextAtom\r\n\r\n    function checkBond(bond) {\r\n      if (bond._left === nextAtom || bond._right === nextAtom) {\r\n        process(bond)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < nA; ++i) {\r\n      nextAtom = atoms[(i + 1) % nA]\r\n      currAtom.forEachBond(checkBond)\r\n      currAtom = nextAtom\r\n    }\r\n  }\r\n}\r\n\r\nfunction _isAromatic(bond) {\r\n  return bond._type === cAromaticType\r\n}\r\n\r\nfunction _isPossibleAromatic(bond) {\r\n  if (bond.type === cAromaticType) {\r\n    return true\r\n  }\r\n  const rightIdx = cAromaticAtoms.indexOf(bond._right.element.number)\r\n  const leftIdx = cAromaticAtoms.indexOf(bond._left.element.number)\r\n  return rightIdx !== -1 && leftIdx !== -1\r\n}\r\n\r\nfunction _checkCycleSimple(cycle) {\r\n  return cycle.length > 3\r\n}\r\n\r\nfunction _checkCycleComplex(cycle) {\r\n  console.assert(cycle.length > 2)\r\n  return true\r\n}\r\n\r\nclass AromaticLoopsMarker {\r\n  constructor(complex) {\r\n    this._complex = complex\r\n    const bondsData = new Array(complex._bonds.length)\r\n    const bondMarks = new Array(complex._bonds.length)\r\n    for (let i = 0, n = bondsData.length; i < n; ++i) {\r\n      bondsData[i] = []\r\n      bondMarks[i] = false\r\n    }\r\n    this._bondsData = bondsData\r\n    this._bondMarks = bondMarks\r\n    this._resetCycles()\r\n  }\r\n\r\n  _resetCycles() {\r\n    this._cycles = []\r\n    this._currIdx = -1\r\n  }\r\n\r\n  _haveSameCycle(bondsData, bond1, bond2) {\r\n    const arr1 = bondsData[bond1._index]\r\n    const arr2 = bondsData[bond2._index]\r\n    const n1 = arr1.length\r\n    const n2 = arr2.length\r\n    let i1 = 0\r\n    let i2 = 0\r\n    while (i1 < n1 && i2 < n2) {\r\n      if (arr1[i1] === arr2[i2]) {\r\n        return true\r\n      }\r\n      if (arr1[i1] > arr2[i2]) {\r\n        ++i2\r\n      } else {\r\n        ++i1\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  _tryBond(prevBond, currRight, currDir) {\r\n    const bondsOrder = []\r\n    const bondsData = this._bondsData\r\n    const currLeft = _anotherAtom(prevBond, currRight)\r\n    const currVec = currRight.position.clone().sub(currLeft.position)\r\n    const startAtomRef = this._currStart\r\n    const self = this\r\n    const bondMarks = this._bondMarks\r\n    let checkAromatic = this._checkBond\r\n    bondMarks[prevBond._index] = true\r\n    checkAromatic = checkAromatic === undefined ? _isAromatic : checkAromatic\r\n    currRight.forEachBond((newBond) => {\r\n      if (\r\n        !checkAromatic(newBond) ||\r\n        newBond === prevBond ||\r\n        bondMarks[newBond._index] ||\r\n        self._haveSameCycle(bondsData, prevBond, newBond)\r\n      ) {\r\n        return\r\n      }\r\n      const anotherAtom = _anotherAtom(newBond, currRight)\r\n      const anotherVec = anotherAtom.position.clone().sub(currRight.position)\r\n      const val =\r\n        anotherAtom === startAtomRef\r\n          ? -2.0\r\n          : 1 - _cosBetween(currVec, anotherVec)\r\n      const newDir = anotherVec.cross(currVec)\r\n      if (!_coDirVectors(newDir, currDir)) {\r\n        return\r\n      }\r\n      let idx = 0\r\n      while (idx < bondsOrder.length && bondsOrder[idx].val < val) {\r\n        ++idx\r\n      }\r\n      bondsOrder.splice(idx, 0, { bond: newBond, val, dir: newDir })\r\n    })\r\n\r\n    for (let i = 0, n = bondsOrder.length; i < n; ++i) {\r\n      const { bond } = bondsOrder[i]\r\n      const newRight = bond._left === currRight ? bond._right : bond._left\r\n      if (newRight === startAtomRef) {\r\n        ++this._currIdx\r\n        this._cycles.push([currRight])\r\n        bondMarks[prevBond._index] = false\r\n        return true\r\n      }\r\n      if (this._tryBond(bond, newRight, bondsOrder[i].dir)) {\r\n        _insertAscending(bondsData[bond._index], this._currIdx)\r\n        this._cycles[this._currIdx].push(currRight)\r\n        bondMarks[prevBond._index] = false\r\n        return true\r\n      }\r\n    }\r\n    bondMarks[prevBond._index] = false\r\n    return false\r\n  }\r\n\r\n  _startCycle(bond) {\r\n    // start from left to right\r\n    this._currStart = bond._left\r\n    if (this._tryBond(bond, bond._right, new Vector3())) {\r\n      _insertAscending(this._bondsData[bond._index], this._currIdx)\r\n      this._cycles[this._currIdx].push(bond._left)\r\n    }\r\n  }\r\n\r\n  _findLoops(checkBond, checkCycle) {\r\n    this._checkBond = checkBond\r\n    const complex = this._complex\r\n    const self = this\r\n\r\n    complex.forEachComponent((component) => {\r\n      self._resetCycles()\r\n      component.forEachBond((bond) => {\r\n        if (checkBond(bond)) {\r\n          self._startCycle(bond)\r\n        }\r\n      })\r\n      const cycles = self._cycles\r\n      for (let i = 0, n = cycles.length; i < n; ++i) {\r\n        const cycle = cycles[i]\r\n        if (!checkCycle(cycle)) {\r\n          continue\r\n        }\r\n        const newCycle = new Cycle(cycle)\r\n        newCycle.forEachBond(_markAromatic)\r\n        component.addCycle(newCycle)\r\n      }\r\n    })\r\n  }\r\n\r\n  markCycles() {\r\n    this._findLoops(_isAromatic, _checkCycleSimple)\r\n  }\r\n\r\n  detectCycles() {\r\n    this._findLoops(_isPossibleAromatic, _checkCycleComplex)\r\n  }\r\n}\r\n\r\nexport default AromaticLoopsMarker\r\n",
		"import utils from '../utils'\r\nimport { Vector2, Vector3 } from 'three'\r\n\r\n/**\r\n * Calculate min & max radius of a sphere slice between zMin & zMax\r\n *\r\n * @param {Vector3} center - center of the sphere\r\n * @param {number} radius  - sphere radius\r\n * @param {number} zMin - lower bound of the slice\r\n * @param {number} zMax - upper bound of the slice\r\n */\r\nfunction _getSphereSliceRadiusRange(center, radius, zMin, zMax) {\r\n  const dzMin = zMin - center.z\r\n  const dzMax = zMax - center.z\r\n  const rzMin = Math.sqrt(Math.max(radius * radius - dzMin * dzMin, 0.0))\r\n  const rzMax = Math.sqrt(Math.max(radius * radius - dzMax * dzMax, 0.0))\r\n\r\n  const rMin = Math.min(rzMin, rzMax)\r\n  let rMax\r\n\r\n  if (zMin <= center.z && zMax >= center.z) {\r\n    // sphere's main diameter is inside slice\r\n    rMax = radius\r\n  } else {\r\n    rMax = Math.max(rzMin, rzMax)\r\n  }\r\n\r\n  return [rMin, rMax]\r\n}\r\n\r\n/**\r\n * Calculate min & max radius of a circle slice between yMin & yMax.\r\n *\r\n * To maintain analogy with _getSphereSliceRadiusRange we call radius what in fact is\r\n * half-width (along X axis) of the slice, i.e. 1D-sphere radius.\r\n *\r\n * @param {Vector3} center - center of the circle (z can be ignored)\r\n * @param {number} radius  - circle radius\r\n * @param {number} yMin - lower bound of the slice\r\n * @param {number} yMax - upper bound of the slice\r\n * @returns {Array} - array of two numbers (min & max radius, or half-width)\r\n */\r\nfunction _getCircleSliceRadiusRange(center, radius, yMin, yMax) {\r\n  const dyMin = yMin - center.y\r\n  const dyMax = yMax - center.y\r\n  const ryMin = Math.sqrt(Math.max(radius * radius - dyMin * dyMin, 0.0))\r\n  const ryMax = Math.sqrt(Math.max(radius * radius - dyMax * dyMax, 0.0))\r\n\r\n  const rMin = Math.min(ryMin, ryMax)\r\n  let rMax\r\n\r\n  if (yMin <= center.y && yMax >= center.y) {\r\n    // slice's main diameter is inside slice\r\n    rMax = radius\r\n  } else {\r\n    rMax = Math.max(ryMin, ryMax)\r\n  }\r\n\r\n  return [rMin, rMax]\r\n}\r\n\r\n/**\r\n * VoxelWorld constructor\r\n *\r\n * @param {Box3} box - bounding box of the volume to be partitioned\r\n * @param {Vector3} vCellSizeHint - target voxel size (actual voxel size may differ from this)\r\n */\r\nclass VoxelWorld {\r\n  constructor(box, vCellSizeHint) {\r\n    this._box = box.clone()\r\n    const size = new Vector3()\r\n    box.getSize(size)\r\n    this._count = size\r\n      .clone()\r\n      .divide(vCellSizeHint)\r\n      .floor()\r\n      .max(new Vector3(1, 1, 1))\r\n    this._last = this._count.clone().subScalar(1)\r\n    this._cellSize = size.clone().divide(this._count)\r\n    this._cellInnerR =\r\n      0.5 *\r\n      Math.min(Math.min(this._cellSize.x, this._cellSize.y), this._cellSize.z)\r\n    this._cellOuterR = 0.5 * Math.sqrt(this._cellSize.dot(this._cellSize))\r\n\r\n    // array of voxels, each element contains index of first atom in voxel\r\n    const numVoxels = this._count.x * this._count.y * this._count.z\r\n    this._voxels = utils.allocateTyped(Int32Array, numVoxels)\r\n    for (let i = 0; i < numVoxels; ++i) {\r\n      this._voxels[i] = -1\r\n    }\r\n\r\n    // array of atoms that stores multiple single-linked lists\r\n    // two elements for each atom: Atom ref, index of next atom (in this array\r\n    this._atoms = []\r\n  }\r\n\r\n  /**\r\n   * Add all atoms from a complex to voxel world\r\n   *\r\n   * @param {Complex} complex - complex\r\n   */\r\n  addAtoms(complex) {\r\n    const self = this\r\n\r\n    let idx = this._atoms.length\r\n\r\n    // resize array of atoms\r\n    this._atoms.length += 2 * complex.getAtomCount()\r\n\r\n    complex.forEachAtom((atom) => {\r\n      // find which voxel contains this atom\r\n      const voxelIdx = self._findVoxel(atom.position)\r\n\r\n      // push current atom to the head of voxel's atom list\r\n      self._atoms[idx] = atom\r\n      self._atoms[idx + 1] = self._voxels[voxelIdx]\r\n      self._voxels[voxelIdx] = idx\r\n\r\n      idx += 2\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Get voxel that contains specified 3D point (we use clamp at the edges)\r\n   *\r\n   * @param {Vector3} point - a point in 3D\r\n   * @returns {number} - index of voxel\r\n   */\r\n  static _zero = new Vector3(0, 0, 0)\r\n\r\n  static _voxel = new Vector3()\r\n\r\n  _findVoxel(point) {\r\n    const zero = VoxelWorld._zero\r\n    const voxel = VoxelWorld._voxel\r\n    voxel\r\n      .copy(point)\r\n      .sub(this._box.min)\r\n      .divide(this._cellSize)\r\n      .floor()\r\n      .clamp(zero, this._last)\r\n    return voxel.x + this._count.x * (voxel.y + this._count.y * voxel.z)\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom in voxel\r\n   *\r\n   * @param {number} voxel - index of voxel\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  _forEachAtomInVoxel(voxel, process) {\r\n    for (let i = this._voxels[voxel]; i >= 0; i = this._atoms[i + 1]) {\r\n      process(this._atoms[i])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call a function for each voxel that is touched by given sphere. Callback also takes flag\r\n   * isInside specifying whether voxel lies inside the sphere entirely.\r\n   *\r\n   * @param {Vector3} center - center of the sphere\r\n   * @param {number} radius  - sphere radius\r\n   * @param {function(number,bool)} process - function to call that takes voxel index and boolean isInside\r\n   */\r\n\r\n  static _xRange = new Vector2()\r\n\r\n  static _yRange = new Vector2()\r\n\r\n  static _zRange = new Vector2()\r\n\r\n  _forEachVoxelWithinRadius(center, radius, process) {\r\n    const xRange = VoxelWorld._xRange\r\n    const yRange = VoxelWorld._yRange\r\n    const zRange = VoxelWorld._zRange\r\n\r\n    // switch to a faster method unless cell size is much smaller than sphere radius\r\n    if (radius / this._cellInnerR < 10) {\r\n      this._forEachVoxelWithinRadiusSimple(center, radius, process)\r\n      return\r\n    }\r\n\r\n    let rRangeXY\r\n    let rRangeX\r\n    let xVal\r\n    let yVal\r\n    let zVal\r\n    let isInsideX\r\n    let isInsideY\r\n    let isInsideZ\r\n\r\n    zRange.set(center.z - radius, center.z + radius)\r\n    zRange\r\n      .subScalar(this._box.min.z)\r\n      .divideScalar(this._cellSize.z)\r\n      .floor()\r\n      .clampScalar(0, this._count.z - 1)\r\n\r\n    for (let z = zRange.x; z <= zRange.y; ++z) {\r\n      zVal = [\r\n        this._box.min.z + z * this._cellSize.z,\r\n        this._box.min.z + (z + 1) * this._cellSize.z\r\n      ]\r\n\r\n      isInsideZ = center.z - radius <= zVal[0] && zVal[1] <= center.z + radius\r\n\r\n      rRangeXY = _getSphereSliceRadiusRange(center, radius, zVal[0], zVal[1])\r\n\r\n      yRange.set(center.y - rRangeXY[1], center.y + rRangeXY[1])\r\n      yRange\r\n        .subScalar(this._box.min.y)\r\n        .divideScalar(this._cellSize.y)\r\n        .floor()\r\n        .clampScalar(0, this._count.y - 1)\r\n\r\n      for (let y = yRange.x; y <= yRange.y; ++y) {\r\n        yVal = [\r\n          this._box.min.y + y * this._cellSize.y,\r\n          this._box.min.y + (y + 1) * this._cellSize.y\r\n        ]\r\n\r\n        isInsideY =\r\n          center.y - rRangeXY[0] <= yVal[0] && yVal[1] <= center.y + rRangeXY[0]\r\n\r\n        rRangeX = _getCircleSliceRadiusRange(\r\n          center,\r\n          rRangeXY[1],\r\n          yVal[0],\r\n          yVal[1]\r\n        )\r\n\r\n        xRange.set(center.x - rRangeX[1], center.x + rRangeX[1])\r\n        xRange\r\n          .subScalar(this._box.min.x)\r\n          .divideScalar(this._cellSize.x)\r\n          .floor()\r\n          .clampScalar(0, this._count.x - 1)\r\n\r\n        for (let { x } = xRange; x <= xRange.y; ++x) {\r\n          xVal = [\r\n            this._box.min.x + x * this._cellSize.x,\r\n            this._box.min.x + (x + 1) * this._cellSize.x\r\n          ]\r\n          isInsideX =\r\n            center.x - rRangeX[0] <= xVal[0] && xVal[1] <= center.x + rRangeX[0]\r\n\r\n          process(\r\n            x + this._count.x * (y + this._count.y * z),\r\n            isInsideX && isInsideY && isInsideZ\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call a function for each voxel that is touched by given sphere. Callback also takes flag\r\n   * isInside specifying whether voxel lies inside the sphere entirely.\r\n   * This is a version of method that doesn't try to \"calculate\" what voxels fall inside radius\r\n   * but instead just checks all voxels inside sphere's bounding box. This should be faster\r\n   * unless cell size is much smaller than sphere radius.\r\n   *\r\n   * @param {Vector3} center - center of the sphere\r\n   * @param {number} radius  - sphere radius\r\n   * @param {function(number,bool)} process - function to call that takes voxel index and boolean isInside\r\n   */\r\n\r\n  static _vCenter = new Vector3()\r\n\r\n  _forEachVoxelWithinRadiusSimple(center, radius, process) {\r\n    const xRange = VoxelWorld._xRange\r\n    const yRange = VoxelWorld._yRange\r\n    const zRange = VoxelWorld._zRange\r\n    const vCenter = VoxelWorld._vCenter\r\n\r\n    const distTouch2 = (radius + this._cellOuterR) * (radius + this._cellOuterR)\r\n    let distInside2 = -1.0\r\n    if (radius > this._cellOuterR) {\r\n      distInside2 = (radius - this._cellOuterR) * (radius - this._cellOuterR)\r\n    }\r\n\r\n    // calculate bounding box for the sphere\r\n    xRange.set(center.x - radius, center.x + radius)\r\n    xRange.subScalar(this._box.min.x).divideScalar(this._cellSize.x).floor()\r\n    xRange.x = Math.min(Math.max(xRange.x, 0), this._count.x - 1)\r\n    xRange.y = Math.min(Math.max(xRange.y, 0), this._count.x - 1)\r\n\r\n    yRange.set(center.y - radius, center.y + radius)\r\n    yRange.subScalar(this._box.min.y).divideScalar(this._cellSize.y).floor()\r\n    yRange.x = Math.min(Math.max(yRange.x, 0), this._count.y - 1)\r\n    yRange.y = Math.min(Math.max(yRange.y, 0), this._count.y - 1)\r\n\r\n    zRange.set(center.z - radius, center.z + radius)\r\n    zRange.subScalar(this._box.min.z).divideScalar(this._cellSize.z).floor()\r\n    zRange.x = Math.min(Math.max(zRange.x, 0), this._count.z - 1)\r\n    zRange.y = Math.min(Math.max(zRange.y, 0), this._count.z - 1)\r\n\r\n    for (let z = zRange.x; z <= zRange.y; ++z) {\r\n      const zVal = [\r\n        this._box.min.z + z * this._cellSize.z,\r\n        this._box.min.z + (z + 1) * this._cellSize.z\r\n      ]\r\n      vCenter.z = 0.5 * (zVal[0] + zVal[1])\r\n\r\n      for (let y = yRange.x; y <= yRange.y; ++y) {\r\n        const yVal = [\r\n          this._box.min.y + y * this._cellSize.y,\r\n          this._box.min.y + (y + 1) * this._cellSize.y\r\n        ]\r\n        vCenter.y = 0.5 * (yVal[0] + yVal[1])\r\n\r\n        for (let { x } = xRange; x <= xRange.y; ++x) {\r\n          const xVal = [\r\n            this._box.min.x + x * this._cellSize.x,\r\n            this._box.min.x + (x + 1) * this._cellSize.x\r\n          ]\r\n          vCenter.x = 0.5 * (xVal[0] + xVal[1])\r\n\r\n          const d2 = center.distanceToSquared(vCenter)\r\n          if (d2 <= distTouch2) {\r\n            process(\r\n              x + this._count.x * (y + this._count.y * z),\r\n              d2 <= distInside2\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom within given sphere\r\n   *\r\n   * @param {Vector3} center - center of the sphere\r\n   * @param {number} radius  - sphere radius\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  forEachAtomWithinRadius(center, radius, process) {\r\n    const self = this\r\n    const r2 = radius * radius\r\n\r\n    self._forEachVoxelWithinRadius(center, radius, (voxel, isInside) => {\r\n      if (isInside) {\r\n        self._forEachAtomInVoxel(voxel, process)\r\n      } else {\r\n        self._forEachAtomInVoxel(voxel, (atom) => {\r\n          if (center.distanceToSquared(atom.position) <= r2) {\r\n            process(atom)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom of given complex within given distance from group of atoms defined by mask\r\n   *\r\n   * @param {Complex} complex - complex\r\n   * @param {number} mask - bit mask\r\n   * @param {number} dist - distance\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  forEachAtomWithinDistFromMasked(complex, mask, dist, process) {\r\n    this._forEachAtomWithinDistFromGroup(\r\n      (atomProc) => {\r\n        complex.forEachAtom((atom) => {\r\n          if ((atom.mask & mask) !== 0) {\r\n            atomProc(atom)\r\n          }\r\n        })\r\n      },\r\n      dist,\r\n      process\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom of given complex within given distance from group of atoms defined by selector\r\n   *\r\n   * @param {Complex} complex - complex\r\n   * @param {number} selector - selector\r\n   * @param {number} dist - distance\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  forEachAtomWithinDistFromSelected(complex, selector, dist, process) {\r\n    this._forEachAtomWithinDistFromGroup(\r\n      (atomProc) => {\r\n        complex.forEachAtom((atom) => {\r\n          if (selector.includesAtom(atom)) {\r\n            atomProc(atom)\r\n          }\r\n        })\r\n      },\r\n      dist,\r\n      process\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom of given complex within given distance from group of atoms\r\n   *\r\n   * @param {function} forEachAtom - enumerator of atoms in the group\r\n   * @param {number} dist - distance\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  _forEachAtomWithinDistFromGroup(forEachAtom, dist, process) {\r\n    const self = this\r\n    const r2 = dist * dist\r\n\r\n    const voxels = []\r\n    const atoms = []\r\n    let idx = 0\r\n\r\n    // build \"within radius\" atom list for each voxel\r\n    forEachAtom((atom) => {\r\n      self._forEachVoxelWithinRadius(atom.position, dist, (voxel, isInside) => {\r\n        if (isInside) {\r\n          // this voxel is inside circle -- no check will be required\r\n          voxels[voxel] = -1\r\n        } else if (typeof voxels[voxel] === 'undefined') {\r\n          // this voxel isn't covered yet -- start building list of atoms\r\n          atoms.push(atom)\r\n          atoms.push(-1)\r\n          voxels[voxel] = idx\r\n          idx += 2\r\n        } else if (voxels[voxel] !== -1) {\r\n          // this voxel has a list of atoms required for distance check -- add atom to the list\r\n          atoms.push(atom)\r\n          atoms.push(voxels[voxel])\r\n          voxels[voxel] = idx\r\n          idx += 2\r\n        }\r\n      })\r\n    })\r\n\r\n    let voxel\r\n\r\n    const processIfWithin = function (atom) {\r\n      if (typeof voxels[voxel] === 'undefined') {\r\n        return\r\n      }\r\n\r\n      idx = voxels[voxel]\r\n      if (idx === -1) {\r\n        // this voxel is fully covered\r\n        process(atom)\r\n        return\r\n      }\r\n\r\n      // check distance to each atom within radius from this voxel\r\n      for (; idx >= 0; idx = atoms[idx + 1]) {\r\n        if (atom.position.distanceToSquared(atoms[idx].position) < r2) {\r\n          process(atom)\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    // for each marked voxel\r\n    for (voxel in voxels) {\r\n      if (voxels.hasOwnProperty(voxel)) {\r\n        self._forEachAtomInVoxel(voxel, processIfWithin)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default VoxelWorld\r\n",
		"import ResidueType from './ResidueType'\r\nimport PairCollection from './AtomPairs'\r\n\r\nconst MINIMAL_DISTANCE = 0.5\r\nconst MIN_HBOND_ENERGY = -9.9\r\nconst MAX_HBOND_ENERGY = -0.5\r\nconst COUPLING_CONSTANT = -27.888 // = -332 * 0.42 * 0.2\r\nconst MAX_COUPLING_DISTANCE = 5.0 // how far is the closest atom of a potential partner residue from CA atom\r\nconst MAX_RESIDUES_THRESHOLD = 1000\r\n\r\nexport default class HBondInfo {\r\n  constructor(complex) {\r\n    this._complex = complex\r\n    this._hbonds = [] // array of bond info for each residue\r\n    if (this._complex._residues.length > MAX_RESIDUES_THRESHOLD) {\r\n      this._buildVW() // optimized version using voxel grid\r\n    } else {\r\n      this._build() // test all pairs of residues\r\n    }\r\n  }\r\n\r\n  isBond(from, to) {\r\n    if (this._hbonds[from]) {\r\n      const [acc0, acc1] = this._hbonds[from].acceptor\r\n      if (acc0 && acc0.residue === to && acc0.energy < MAX_HBOND_ENERGY) {\r\n        return true\r\n      }\r\n      if (acc1 && acc1.residue === to && acc1.energy < MAX_HBOND_ENERGY) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  _build() {\r\n    const self = this\r\n\r\n    for (let i = 0; i < this._complex._residues.length - 1; ++i) {\r\n      const ri = this._complex._residues[i]\r\n      if ((ri.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n        continue\r\n      }\r\n\r\n      // get predecessor in chain\r\n      let preri = null\r\n      if (\r\n        i > 0 &&\r\n        this._complex._residues[i - 1].getType().flags &\r\n          ResidueType.Flags.PROTEIN &&\r\n        ri._sequence === this._complex._residues[i - 1]._sequence + 1\r\n      ) {\r\n        preri = this._complex._residues[i - 1]\r\n      }\r\n\r\n      for (let j = i + 1; j < this._complex._residues.length; ++j) {\r\n        const rj = this._complex._residues[j]\r\n        if ((rj.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n          continue\r\n        }\r\n\r\n        // get predecessor in chain\r\n        let prerj = null\r\n        if (\r\n          this._complex._residues[j - 1].getType().flags &\r\n            ResidueType.Flags.PROTEIN &&\r\n          rj._sequence === this._complex._residues[j - 1]._sequence + 1\r\n        ) {\r\n          prerj = this._complex._residues[j - 1]\r\n        }\r\n\r\n        self._calcHBondEnergy(preri, ri, rj)\r\n        if (j !== i + 1) {\r\n          self._calcHBondEnergy(prerj, rj, ri)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _buildVW() {\r\n    const self = this\r\n    const residues = this._complex._residues\r\n    let ri\r\n    let preri\r\n\r\n    const vw = this._complex.getVoxelWorld()\r\n    if (vw === null) {\r\n      return\r\n    }\r\n\r\n    const pairs = new PairCollection(\r\n      (this._complex._residues.length * this._complex._residues.length) / 2\r\n    )\r\n\r\n    function processAtom(atom) {\r\n      const rj = atom.residue\r\n\r\n      if (rj._index === ri._index) {\r\n        return\r\n      }\r\n\r\n      if ((rj.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n        return\r\n      }\r\n\r\n      if (!pairs.addPair(ri._index, rj._index)) {\r\n        // we've seen this pair\r\n        return\r\n      }\r\n\r\n      // get predecessor in chain\r\n      let prerj = rj._index > 0 ? residues[rj._index - 1] : null\r\n      if (\r\n        prerj &&\r\n        ((prerj.getType().flags & ResidueType.Flags.PROTEIN) === 0 ||\r\n          rj._sequence !== prerj._sequence + 1)\r\n      ) {\r\n        prerj = null\r\n      }\r\n\r\n      self._calcHBondEnergy(preri, ri, rj)\r\n      if (rj._index !== ri._index + 1) {\r\n        self._calcHBondEnergy(prerj, rj, ri)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < residues.length - 1; ++i) {\r\n      ri = residues[i]\r\n      if ((ri.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n        continue\r\n      }\r\n\r\n      // get predecessor in chain\r\n      preri = i > 0 ? residues[i - 1] : null\r\n      if (\r\n        preri &&\r\n        ((preri.getType().flags & ResidueType.Flags.PROTEIN) === 0 ||\r\n          ri._sequence !== preri._sequence + 1)\r\n      ) {\r\n        preri = null\r\n      }\r\n\r\n      vw.forEachAtomWithinRadius(\r\n        this._residueGetCAlpha(ri),\r\n        MAX_COUPLING_DISTANCE,\r\n        processAtom\r\n      )\r\n    }\r\n  }\r\n\r\n  _residueGetCAlpha(res) {\r\n    for (let i = 0; i < res._atoms.length; ++i) {\r\n      const { name } = res._atoms[i]\r\n      if (name === 'CA' || name === 'C1') {\r\n        return res._atoms[i].position\r\n      }\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  _residueGetCO(res) {\r\n    let c = null\r\n    let o = null\r\n\r\n    res.forEachAtom((a) => {\r\n      if (a.name === 'C') {\r\n        c = a.position\r\n      } else if (a.name === 'O') {\r\n        o = a.position\r\n      }\r\n    })\r\n\r\n    return [c, o]\r\n  }\r\n\r\n  // TODO Support hydrogen defined in complex\r\n  _residueGetNH(prev, res) {\r\n    const [c, o] = this._residueGetCO(prev)\r\n\r\n    let n\r\n    res.forEachAtom((a) => {\r\n      if (a.name === 'N') {\r\n        n = a.position\r\n      }\r\n    })\r\n\r\n    if (c && o && n) {\r\n      // calculate hydrogen position\r\n      const h = c.clone()\r\n      h.sub(o)\r\n      h.multiplyScalar(1.0 / h.length())\r\n      h.add(n)\r\n\r\n      return [n, h]\r\n    }\r\n\r\n    return [null, null]\r\n  }\r\n\r\n  _calcHBondEnergy(predonor, donor, acceptor) {\r\n    let result = 0\r\n\r\n    if (predonor === null) {\r\n      return result\r\n    }\r\n\r\n    if (donor.getType().getName() !== 'PRO') {\r\n      const [n, h] = this._residueGetNH(predonor, donor)\r\n      const [c, o] = this._residueGetCO(acceptor)\r\n\r\n      if (n === null || h === null || c === null || o === null) {\r\n        return result\r\n      }\r\n\r\n      const distanceHO = h.distanceTo(o)\r\n      const distanceHC = h.distanceTo(c)\r\n      const distanceNC = n.distanceTo(c)\r\n      const distanceNO = n.distanceTo(o)\r\n\r\n      if (\r\n        distanceHO < MINIMAL_DISTANCE ||\r\n        distanceHC < MINIMAL_DISTANCE ||\r\n        distanceNC < MINIMAL_DISTANCE ||\r\n        distanceNO < MINIMAL_DISTANCE\r\n      ) {\r\n        result = MIN_HBOND_ENERGY\r\n      } else {\r\n        result =\r\n          COUPLING_CONSTANT / distanceHO -\r\n          COUPLING_CONSTANT / distanceHC +\r\n          COUPLING_CONSTANT / distanceNC -\r\n          COUPLING_CONSTANT / distanceNO\r\n      }\r\n\r\n      // DSSP compatibility mode:\r\n      result = Math.round(result * 1000) / 1000\r\n\r\n      if (result < MIN_HBOND_ENERGY) {\r\n        result = MIN_HBOND_ENERGY\r\n      }\r\n    }\r\n\r\n    // update donor\r\n    if (typeof this._hbonds[donor._index] === 'undefined') {\r\n      this._hbonds[donor._index] = {\r\n        donor: [],\r\n        acceptor: []\r\n      }\r\n    }\r\n    const donorInfo = this._hbonds[donor._index]\r\n\r\n    if (donorInfo.acceptor.length < 2) {\r\n      donorInfo.acceptor.push({\r\n        residue: acceptor._index,\r\n        energy: result\r\n      })\r\n    }\r\n\r\n    if (donorInfo.acceptor.length > 1) {\r\n      if (result < donorInfo.acceptor[0].energy) {\r\n        donorInfo.acceptor[1].residue = donorInfo.acceptor[0].residue\r\n        donorInfo.acceptor[1].energy = donorInfo.acceptor[0].energy\r\n        donorInfo.acceptor[0].residue = acceptor._index\r\n        donorInfo.acceptor[0].energy = result\r\n      } else if (result < donorInfo.acceptor[1].energy) {\r\n        donorInfo.acceptor[1].residue = acceptor._index\r\n        donorInfo.acceptor[1].energy = result\r\n      }\r\n    }\r\n\r\n    // update acceptor\r\n    if (typeof this._hbonds[acceptor._index] === 'undefined') {\r\n      this._hbonds[acceptor._index] = {\r\n        donor: [],\r\n        acceptor: []\r\n      }\r\n    }\r\n    const accInfo = this._hbonds[acceptor._index]\r\n\r\n    if (accInfo.donor.length < 2) {\r\n      accInfo.donor.push({\r\n        residue: donor._index,\r\n        energy: result\r\n      })\r\n    }\r\n\r\n    if (accInfo.donor.length > 1) {\r\n      if (result < accInfo.donor[0].energy) {\r\n        accInfo.donor[1].residue = accInfo.donor[0].residue\r\n        accInfo.donor[1].energy = accInfo.donor[0].energy\r\n        accInfo.donor[0].residue = donor._index\r\n        accInfo.donor[0].energy = result\r\n      } else if (result < accInfo.donor[1].energy) {\r\n        accInfo.donor[1].residue = donor._index\r\n        accInfo.donor[1].energy = result\r\n      }\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n",
		"import HBondInfo from './HBondInfo'\r\nimport ResidueType from './ResidueType'\r\n\r\nconst BridgeType = Object.freeze({\r\n  NO_BRIDGE: 0,\r\n  PARALLEL: 1,\r\n  ANTI_PARALLEL: 2\r\n})\r\n\r\nconst HelixFlag = Object.freeze({\r\n  START: 1,\r\n  MIDDLE: 2,\r\n  END: 3,\r\n  START_AND_END: 4\r\n})\r\n\r\nconst StructureType = Object.freeze({\r\n  STRAND: 'E',\r\n  BRIDGE: 'B',\r\n  HELIX_310: 'G',\r\n  HELIX_ALPHA: 'H',\r\n  HELIX_PI: 'I',\r\n  TURN: 'T',\r\n  BEND: 'S',\r\n  LOOP: ' '\r\n})\r\n\r\nexport default class SecondaryStructureMap {\r\n  constructor(complex) {\r\n    this._complex = complex\r\n    this._build()\r\n  }\r\n\r\n  _build() {\r\n    const self = this\r\n    this._hbonds = new HBondInfo(this._complex)\r\n    this._ss = [] // DSSP map by residue\r\n\r\n    // auxilliary data\r\n    this._sheet = []\r\n    this._betaPartners = []\r\n    this._bend = []\r\n    for (let i = 0; i < this._complex.getResidues().length; ++i) {\r\n      this._betaPartners[i] = []\r\n    }\r\n    this._helixFlags = []\r\n    this._helixFlags[3] = []\r\n    this._helixFlags[4] = []\r\n    this._helixFlags[5] = []\r\n\r\n    // calculate peptide chain lengths\r\n    this._chainLengths = []\r\n    for (let i = 0; i < this._complex._chains.length; ++i) {\r\n      const chain = this._complex._chains[i].getResidues()\r\n      let len = 0\r\n      for (; len < chain.length; ++len) {\r\n        if ((chain[len].getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n          break\r\n        }\r\n      }\r\n      this._chainLengths[i] = len\r\n    }\r\n\r\n    this._buildBetaSheets()\r\n\r\n    for (let i = 0; i < this._complex._chains.length; ++i) {\r\n      self._buildAlphaHelices(\r\n        this._complex._chains[i].getResidues(),\r\n        this._chainLengths[i],\r\n        false\r\n      )\r\n    }\r\n  }\r\n\r\n  _buildAlphaHelices(inResidues, chainLength, inPreferPiHelices) {\r\n    // Helix and Turn\r\n    for (let stride = 3; stride <= 5; ++stride) {\r\n      if (inResidues.length < stride) {\r\n        break\r\n      }\r\n\r\n      for (let i = 0; i + stride < chainLength; ++i) {\r\n        if (\r\n          this._hbonds.isBond(\r\n            inResidues[i + stride]._index,\r\n            inResidues[i]._index\r\n          )\r\n          /* && NoChainBreak(res[i], res[i + stride]) */\r\n        ) {\r\n          this._helixFlags[stride][inResidues[i + stride]._index] =\r\n            HelixFlag.END\r\n          for (let j = i + 1; j < i + stride; ++j) {\r\n            if (\r\n              typeof this._helixFlags[stride][inResidues[j]._index] ===\r\n              'undefined'\r\n            ) {\r\n              this._helixFlags[stride][inResidues[j]._index] = HelixFlag.MIDDLE\r\n            }\r\n          }\r\n\r\n          if (\r\n            this._helixFlags[stride][inResidues[i]._index] === HelixFlag.END\r\n          ) {\r\n            this._helixFlags[stride][inResidues[i]._index] =\r\n              HelixFlag.START_AND_END\r\n          } else {\r\n            this._helixFlags[stride][inResidues[i]._index] = HelixFlag.START\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 2; i < chainLength - 2; ++i) {\r\n      const kappa = this._kappa(\r\n        inResidues[i - 2],\r\n        inResidues[i],\r\n        inResidues[i + 2]\r\n      )\r\n      this._bend[inResidues[i]._index] = kappa !== 360 && kappa > 70\r\n    }\r\n\r\n    for (let i = 1; i + 4 < chainLength; ++i) {\r\n      if (\r\n        this._isHelixStart(inResidues[i]._index, 4) &&\r\n        this._isHelixStart(inResidues[i - 1]._index, 4)\r\n      ) {\r\n        for (let j = i; j <= i + 3; ++j) {\r\n          this._ss[inResidues[j]._index] = StructureType.HELIX_ALPHA\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 1; i + 3 < chainLength; ++i) {\r\n      if (\r\n        this._isHelixStart(inResidues[i]._index, 3) &&\r\n        this._isHelixStart(inResidues[i - 1]._index, 3)\r\n      ) {\r\n        let empty = true\r\n        for (let j = i; empty && j <= i + 2; ++j) {\r\n          empty =\r\n            typeof this._ss[inResidues[j]._index] === 'undefined' ||\r\n            this._ss[inResidues[j]._index] === StructureType.HELIX_310\r\n        }\r\n        if (empty) {\r\n          for (let j = i; j <= i + 2; ++j) {\r\n            this._ss[inResidues[j]._index] = StructureType.HELIX_310\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 1; i + 5 < chainLength; ++i) {\r\n      if (\r\n        this._isHelixStart(inResidues[i]._index, 5) &&\r\n        this._isHelixStart(inResidues[i - 1]._index, 5)\r\n      ) {\r\n        let empty = true\r\n        for (let j = i; empty && j <= i + 4; ++j) {\r\n          empty =\r\n            typeof this._ss[inResidues[j]._index] === 'undefined' ||\r\n            this._ss[inResidues[j]._index] === StructureType.HELIX_PI ||\r\n            (inPreferPiHelices &&\r\n              this._ss[inResidues[j]._index] === StructureType.HELIX_ALPHA)\r\n        }\r\n        if (empty) {\r\n          for (let j = i; j <= i + 4; ++j) {\r\n            this._ss[inResidues[j]._index] = StructureType.HELIX_PI\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 1; i + 1 < chainLength; ++i) {\r\n      if (typeof this._ss[inResidues[i]._index] === 'undefined') {\r\n        let isTurn = false\r\n        for (let stride = 3; stride <= 5 && !isTurn; ++stride) {\r\n          for (let k = 1; k < stride && !isTurn; ++k) {\r\n            isTurn =\r\n              i >= k && this._isHelixStart(inResidues[i - k]._index, stride)\r\n          }\r\n        }\r\n\r\n        if (isTurn) {\r\n          this._ss[inResidues[i]._index] = StructureType.TURN\r\n        } else if (this._bend[inResidues[i]._index]) {\r\n          this._ss[inResidues[i]._index] = StructureType.BEND\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _residueGetCAlpha(res) {\r\n    for (let i = 0; i < res._atoms.length; ++i) {\r\n      const { name } = res._atoms[i]\r\n      if (name === 'CA' || name === 'C1') {\r\n        return res._atoms[i].position\r\n      }\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  _cosinusAngle(p1, p2, p3, p4) {\r\n    const v12 = p1.clone().sub(p2)\r\n    const v34 = p3.clone().sub(p4)\r\n\r\n    let result = 0\r\n\r\n    const x = v12.dot(v12) * v34.dot(v34)\r\n    if (x > 0) {\r\n      result = v12.dot(v34) / Math.sqrt(x)\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  _kappa(prevPrev, res, nextNext) {\r\n    const curCA = this._residueGetCAlpha(res)\r\n    const ppCA = this._residueGetCAlpha(prevPrev)\r\n    const nnCA = this._residueGetCAlpha(nextNext)\r\n    if (curCA === null || ppCA === null || nnCA === null) {\r\n      return 180\r\n    }\r\n\r\n    const ckap = this._cosinusAngle(curCA, ppCA, nnCA, curCA)\r\n    const skap = Math.sqrt(1 - ckap * ckap)\r\n    return (Math.atan2(skap, ckap) * 180) / Math.PI\r\n  }\r\n\r\n  _isHelixStart(res, stride) {\r\n    return (\r\n      this._helixFlags[stride][res] === HelixFlag.START ||\r\n      this._helixFlags[stride][res] === HelixFlag.START_AND_END\r\n    )\r\n  }\r\n\r\n  _buildBetaSheets() {\r\n    // find bridges\r\n    // check each chain against each other chain, and against itself\r\n    const bridges = []\r\n    for (let a = 0; a < this._complex._chains.length; ++a) {\r\n      const lenA = this._chainLengths[a]\r\n      if (lenA <= 4) {\r\n        continue\r\n      }\r\n\r\n      const chainA = this._complex._chains[a].getResidues()\r\n\r\n      for (let b = a; b < this._complex._chains.length; ++b) {\r\n        const lenB = this._chainLengths[b]\r\n        if (lenB <= 4) {\r\n          continue\r\n        }\r\n\r\n        const chainB = this._complex._chains[b].getResidues()\r\n\r\n        for (let i = 1; i + 1 < lenA; ++i) {\r\n          const ri = chainA[i]\r\n\r\n          let j = 1\r\n          if (b === a) {\r\n            j = i + 3 // check for self-bridges forward down the chain\r\n          }\r\n\r\n          for (; j + 1 < lenB; ++j) {\r\n            const rj = chainB[j]\r\n\r\n            const type = this._testBridge(chainA, i, chainB, j)\r\n            if (type === BridgeType.NO_BRIDGE) {\r\n              continue\r\n            }\r\n\r\n            // there is a bridge, try to attach it to previously found sequence\r\n            let found = false\r\n            for (const bridge of bridges) {\r\n              if (\r\n                type !== bridge.type ||\r\n                ri._index !== bridge.i[bridge.i.length - 1] + 1\r\n              ) {\r\n                continue\r\n              }\r\n\r\n              if (\r\n                type === BridgeType.PARALLEL &&\r\n                bridge.j[bridge.j.length - 1] + 1 === rj._index\r\n              ) {\r\n                bridge.i.push(ri._index)\r\n                bridge.j.push(rj._index)\r\n                found = true\r\n                break\r\n              }\r\n\r\n              if (\r\n                type === BridgeType.ANTI_PARALLEL &&\r\n                bridge.j[0] - 1 === rj._index\r\n              ) {\r\n                bridge.i.push(ri._index)\r\n                bridge.j.unshift(rj._index)\r\n                found = true\r\n                break\r\n              }\r\n            }\r\n\r\n            // this bridge cannot be attached anywhere, start a new sequence\r\n            if (!found) {\r\n              bridges.push({\r\n                type,\r\n                i: [ri._index],\r\n                chainI: ri.getChain()._index,\r\n                j: [rj._index],\r\n                chainJ: rj.getChain()._index\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // extend ladders\r\n    bridges.sort((a, b) => {\r\n      if (a.chainI < b.chainI || (a.chainI === b.chainI && a.i[0] < b.i[0])) {\r\n        return -1\r\n      }\r\n      return 1\r\n    })\r\n\r\n    for (let i = 0; i < bridges.length; ++i) {\r\n      for (let j = i + 1; j < bridges.length; ++j) {\r\n        const ibi = bridges[i].i[0]\r\n        const iei = bridges[i].i[bridges[i].i.length - 1]\r\n        const jbi = bridges[i].j[0]\r\n        const jei = bridges[i].j[bridges[i].j.length - 1]\r\n        const ibj = bridges[j].i[0]\r\n        const iej = bridges[j].i[bridges[j].i.length - 1]\r\n        const jbj = bridges[j].j[0]\r\n        const jej = bridges[j].j[bridges[j].j.length - 1]\r\n\r\n        if (\r\n          bridges[i].type !== bridges[j].type ||\r\n          this._hasChainBreak(Math.min(ibi, ibj), Math.max(iei, iej)) ||\r\n          this._hasChainBreak(Math.min(jbi, jbj), Math.max(jei, jej)) ||\r\n          ibj - iei >= 6 ||\r\n          (iei >= ibj && ibi <= iej)\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        let bulge = false\r\n        if (bridges[i].type === BridgeType.PARALLEL) {\r\n          bulge = (jbj - jei < 6 && ibj - iei < 3) || jbj - jei < 3\r\n        } else {\r\n          bulge = (jbi - jej < 6 && ibj - iei < 3) || jbi - jej < 3\r\n        }\r\n\r\n        if (bulge) {\r\n          bridges[i].i = bridges[i].i.concat(bridges[j].i)\r\n          if (bridges[i].type === BridgeType.PARALLEL) {\r\n            bridges[i].j = bridges[i].j.concat(bridges[j].j)\r\n          } else {\r\n            bridges[i].j = bridges[j].j.concat(bridges[i].j)\r\n          }\r\n          bridges.splice(j--, 1)\r\n        }\r\n      }\r\n    }\r\n\r\n    // Sheet\r\n    const ladderset = new Set()\r\n    for (let i = 0; i < bridges.length; ++i) {\r\n      ladderset.add(bridges[i])\r\n    }\r\n\r\n    let sheet = 1\r\n    let ladder = 0\r\n    while (ladderset.size > 0) {\r\n      let bridge = ladderset.values().next().value\r\n      ladderset.delete(bridge)\r\n\r\n      const sheetset = new Set()\r\n      sheetset.add(bridge)\r\n\r\n      let toMove\r\n      do {\r\n        toMove = new Set()\r\n        for (const a of sheetset.values()) {\r\n          for (const b of ladderset.values()) {\r\n            if (this._areBridgesLinked(a, b)) {\r\n              toMove.add(b)\r\n            }\r\n          }\r\n        }\r\n        for (bridge of toMove.values()) {\r\n          sheetset.add(bridge)\r\n          ladderset.delete(bridge)\r\n        }\r\n      } while (toMove.size > 0)\r\n\r\n      for (bridge of sheetset.values()) {\r\n        bridge.ladder = ladder\r\n        bridge.sheet = sheet\r\n        bridge.link = sheetset\r\n        ++ladder\r\n      }\r\n\r\n      ++sheet\r\n    }\r\n\r\n    for (let i = 0; i < bridges.length; ++i) {\r\n      const bridge = bridges[i]\r\n\r\n      // find out if any of the i and j set members already have\r\n      // a bridge assigned, if so, we're assigning bridge 2\r\n\r\n      let betai = 0\r\n      let betaj = 0\r\n\r\n      for (let l = 0; l < bridge.i.length; ++l) {\r\n        if (this._betaPartners[bridge.i[l]][0]) {\r\n          betai = 1\r\n          break\r\n        }\r\n      }\r\n\r\n      for (let l = 0; l < bridge.j.length; ++l) {\r\n        if (this._betaPartners[bridge.j[l]][0]) {\r\n          betaj = 1\r\n          break\r\n        }\r\n      }\r\n\r\n      let ss = StructureType.BRIDGE\r\n      if (bridge.i.length > 1) {\r\n        ss = StructureType.STRAND\r\n      }\r\n\r\n      if (bridge.type === BridgeType.PARALLEL) {\r\n        let j = 0\r\n        for (let k = 0; k < bridge.i.length; ++k) {\r\n          this._betaPartners[bridge.i[k]][betai] = {\r\n            residue: bridge.j[j++],\r\n            ladder: bridge.ladder,\r\n            parallel: true\r\n          }\r\n        }\r\n\r\n        j = 0\r\n        for (let k = 0; k < bridge.j.length; ++k) {\r\n          this._betaPartners[bridge.j[k]][betaj] = {\r\n            residue: bridge.i[j++],\r\n            ladder: bridge.ladder,\r\n            parallel: true\r\n          }\r\n        }\r\n      } else {\r\n        let j = bridge.j.length - 1\r\n        for (let k = 0; k < bridge.i.length; ++k) {\r\n          this._betaPartners[bridge.i[k]][betai] = {\r\n            residue: bridge.j[j--],\r\n            ladder: bridge.ladder,\r\n            parallel: false\r\n          }\r\n        }\r\n\r\n        j = bridge.i.length - 1\r\n        for (let k = 0; k < bridge.j.length; ++k) {\r\n          this._betaPartners[bridge.j[k]][betaj] = {\r\n            residue: bridge.i[j--],\r\n            ladder: bridge.ladder,\r\n            parallel: false\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let k = bridge.i[0]; k <= bridge.i[bridge.i.length - 1]; ++k) {\r\n        if (this._ss[k] !== StructureType.STRAND) {\r\n          this._ss[k] = ss\r\n          this._sheet[k] = bridge.sheet\r\n        }\r\n      }\r\n\r\n      for (let k = bridge.j[0]; k <= bridge.j[bridge.j.length - 1]; ++k) {\r\n        if (this._ss[k] !== StructureType.STRAND) {\r\n          this._ss[k] = ss\r\n          this._sheet[k] = bridge.sheet\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _testBridge(chainA, from, chainB, to) {\r\n    let result = BridgeType.NO_BRIDGE\r\n\r\n    const a = chainA[from - 1]._index\r\n    const b = chainA[from]._index\r\n    const c = chainA[from + 1]._index\r\n    const d = chainB[to - 1]._index\r\n    const e = chainB[to]._index\r\n    const f = chainB[to + 1]._index\r\n\r\n    const isBond = this._hbonds.isBond.bind(this._hbonds)\r\n    if ((isBond(c, e) && isBond(e, a)) || (isBond(f, b) && isBond(b, d))) {\r\n      result = BridgeType.PARALLEL\r\n    } else if (\r\n      (isBond(c, d) && isBond(f, a)) ||\r\n      (isBond(e, b) && isBond(b, e))\r\n    ) {\r\n      result = BridgeType.ANTI_PARALLEL\r\n    }\r\n    return result\r\n  }\r\n\r\n  // return true if any of the residues in bridge a is identical to any of the residues in bridge b\r\n  _areBridgesLinked(a, b) {\r\n    const ai = new Set(a.i)\r\n    const aj = new Set(a.j)\r\n\r\n    for (const i of b.i) {\r\n      if (ai.has(i) || aj.has(i)) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    for (const i of b.j) {\r\n      if (ai.has(i) || aj.has(i)) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  _hasChainBreak(from, to) {\r\n    for (let i = from + 1; i <= to; ++i) {\r\n      if (\r\n        this._complex._residues[i]._sequence !==\r\n        this._complex._residues[i - 1]._sequence + 1\r\n      ) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\nSecondaryStructureMap.StructureType = StructureType\r\n",
		"import logger from '../utils/logger'\r\nimport Atom from './Atom'\r\nimport Chain from './Chain'\r\nimport Helix from './Helix'\r\nimport Strand from './Strand'\r\nimport Sheet from './Sheet'\r\nimport Component from './Component'\r\nimport ResidueType from './ResidueType'\r\nimport Bond from './Bond'\r\nimport AutoBond from './AutoBond'\r\nimport AromaticLoopsMarker from './AromaticLoopsMarker'\r\nimport BiologicalUnit from './BiologicalUnit'\r\nimport selectors from './selectors'\r\nimport VoxelWorld from './VoxelWorld'\r\nimport SecondaryStructureMap from './SecondaryStructureMap'\r\nimport StructuralElement from './StructuralElement'\r\nimport { Vector3 } from 'three'\r\n\r\nconst VOXEL_SIZE = 5.0\r\n\r\nconst { StructureType } = SecondaryStructureMap\r\nconst StructuralElementType = StructuralElement.Type\r\n\r\n// see http://www.wwpdb.org/documentation/file-format-content/format33/sect5.html#HELIX\r\nconst helixClassMap = {\r\n  [StructureType.HELIX_ALPHA]: 1,\r\n  [StructureType.HELIX_PI]: 3,\r\n  [StructureType.HELIX_310]: 5\r\n}\r\n\r\nconst loopMap = {\r\n  [StructureType.BRIDGE]: StructuralElementType.BRIDGE,\r\n  [StructureType.TURN]: StructuralElementType.TURN,\r\n  [StructureType.BEND]: StructuralElementType.BEND,\r\n  [StructureType.LOOP]: StructuralElementType.COIL\r\n}\r\n\r\n/**\r\n * The entire complex of the molecules under study.\r\n *\r\n * @exports Complex\r\n * @constructor\r\n */\r\nclass Complex {\r\n  constructor() {\r\n    this._chains = []\r\n    this._components = []\r\n    this._helices = []\r\n    this._sheets = []\r\n    this.structures = []\r\n\r\n    this._residueTypes = Object.create(ResidueType.StandardTypes)\r\n    this._atoms = []\r\n    this._residues = []\r\n    this._bonds = []\r\n    this._sgroups = []\r\n    this._molecules = []\r\n    this._maskNeedsUpdate = false\r\n\r\n    this.metadata = {}\r\n\r\n    this.symmetry = []\r\n    this.units = [new BiologicalUnit(this)]\r\n    this._currentUnit = 0 // default biological unit is the asymmetric unit\r\n  }\r\n\r\n  addAtom(atom) {\r\n    const index = this._atoms.length\r\n    this._atoms.push(atom)\r\n    return index\r\n  }\r\n\r\n  addSheet(sheet) {\r\n    const index = this._sheets.length\r\n    this._sheets.push(sheet)\r\n    return index\r\n  }\r\n\r\n  addHelix(helix) {\r\n    const index = this._helices.length\r\n    this._helices.push(helix)\r\n    return index\r\n  }\r\n\r\n  getAtoms() {\r\n    return this._atoms\r\n  }\r\n\r\n  getBonds() {\r\n    return this._bonds\r\n  }\r\n\r\n  getAtomCount() {\r\n    return this._atoms.length\r\n  }\r\n\r\n  addResidue(residue) {\r\n    const index = this._residues.length\r\n    this._residues.push(residue)\r\n    return index\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    this.forEachChain((chain) => {\r\n      chain.updateToFrame(frameData)\r\n    })\r\n  }\r\n\r\n  addResidueType(resName) {\r\n    const rt = (this._residueTypes[resName] = new ResidueType(\r\n      resName,\r\n      'Unknown',\r\n      ''\r\n    ))\r\n    return rt\r\n  }\r\n\r\n  getResidueCount() {\r\n    return this._residues.length\r\n  }\r\n\r\n  getResidues() {\r\n    return this._residues\r\n  }\r\n\r\n  getSGroupCount() {\r\n    return this._sgroups.length\r\n  }\r\n\r\n  getSGroups() {\r\n    return this._sgroups\r\n  }\r\n\r\n  /*\r\n     Extract atom by its fullname: #chainName#.#residueId#.#atomName#\r\n     */\r\n  getAtomByFullname(fullName) {\r\n    const parts = fullName.split('.')\r\n    if (parts.length !== 3) {\r\n      return null\r\n    }\r\n\r\n    const chainName = parts[0]\r\n    const resId = parseInt(parts[1], 10)\r\n    if (Number.isNaN(resId)) {\r\n      return null\r\n    }\r\n    const atomName = parts[2].toUpperCase()\r\n\r\n    let currAtom = null\r\n    this.forEachChain((chain) => {\r\n      if (currAtom) {\r\n        return\r\n      }\r\n      if (chain._name.localeCompare(chainName) === 0) {\r\n        chain.forEachResidue((residue) => {\r\n          if (currAtom) {\r\n            return\r\n          }\r\n          if (residue._sequence === resId) {\r\n            residue.forEachAtom((atom) => {\r\n              if (currAtom) {\r\n                return\r\n              }\r\n              if (atomName.localeCompare(atom.name) === 0) {\r\n                currAtom = atom\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    return currAtom\r\n  }\r\n\r\n  /**\r\n   * Create a new chain.\r\n   *\r\n   * @param {string} name - Chain name.\r\n   * @returns {Chain} - Newly created chain.\r\n   */\r\n  addChain(name) {\r\n    const result = new Chain(this, name)\r\n    this._chains.push(result)\r\n    return result\r\n  }\r\n\r\n  getChain(name) {\r\n    for (let i = 0, n = this._chains.length; i < n; ++i) {\r\n      const chain = this._chains[i]\r\n      if (chain.getName() === name) {\r\n        return chain\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  getChainCount() {\r\n    return this._chains.length\r\n  }\r\n\r\n  getMolecules() {\r\n    return this._molecules\r\n  }\r\n\r\n  getMoleculeCount() {\r\n    return this._molecules.length\r\n  }\r\n\r\n  forEachAtom(process) {\r\n    const atoms = this._atoms\r\n    for (let i = 0, n = atoms.length; i < n; ++i) {\r\n      process(atoms[i])\r\n    }\r\n  }\r\n\r\n  forEachBond(process) {\r\n    const bonds = this._bonds\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      process(bonds[i])\r\n    }\r\n  }\r\n\r\n  forEachResidue(process) {\r\n    const residues = this._residues\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      process(residues[i])\r\n    }\r\n  }\r\n\r\n  forEachChain(process) {\r\n    const chains = this._chains\r\n    for (let i = 0, n = chains.length; i < n; ++i) {\r\n      process(chains[i])\r\n    }\r\n  }\r\n\r\n  forEachMolecule(process) {\r\n    const molecules = this._molecules\r\n    const n = molecules.length\r\n    for (let i = 0; i < n; ++i) {\r\n      process(molecules[i])\r\n    }\r\n  }\r\n\r\n  forEachSGroup(process) {\r\n    const groups = this._sgroups\r\n    for (let i = 0, n = groups.length; i < n; ++i) {\r\n      process(groups[i])\r\n    }\r\n  }\r\n\r\n  forEachComponent(process) {\r\n    const components = this._components\r\n    for (let i = 0, n = components.length; i < n; ++i) {\r\n      process(components[i])\r\n    }\r\n  }\r\n\r\n  forEachVisibleComponent(process) {\r\n    const components = this._components\r\n    for (let i = 0, n = components.length; i < n; ++i) {\r\n      process(components[i])\r\n    }\r\n  }\r\n\r\n  addBond(left, right, order, type, fixed) {\r\n    const bond = new Bond(left, right, order, type, fixed)\r\n    this._bonds.push(bond)\r\n    return bond\r\n  }\r\n\r\n  getBondCount() {\r\n    return this._bonds.length\r\n  }\r\n\r\n  getResidueType(name) {\r\n    return this._residueTypes[name] || null\r\n  }\r\n\r\n  getUnifiedSerial(chain, serial, iCode) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const maxSerial = 65536\r\n    const chainShift = maxSerial * 256\r\n    /* eslint-enable no-magic-numbers */\r\n    return serial + iCode * maxSerial + chain * chainShift\r\n  }\r\n\r\n  splitUnifiedSerial(uniSerial) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const maxSerial = 65536\r\n    const chainShift = maxSerial * 256\r\n    /* eslint-enable no-magic-numbers */\r\n    const chainId = Math.floor(uniSerial / chainShift)\r\n    const remnant = uniSerial - chainId * chainShift\r\n    const insCode = Math.floor(remnant / maxSerial)\r\n    const ser = remnant - insCode * maxSerial\r\n    return { chain: chainId, serial: ser, iCode: insCode }\r\n  }\r\n\r\n  _fillCmpEdit() {\r\n    const self = this\r\n    const components = this._components\r\n\r\n    function addComp() {\r\n      const comp = new Component(self)\r\n      comp._index = components.length\r\n      components[comp._index] = comp\r\n      return comp\r\n    }\r\n\r\n    this.forEachChain((chain) => {\r\n      const residues = chain._residues\r\n      const resCount = residues.length\r\n      if (resCount < 1) {\r\n        return\r\n      }\r\n      let comp = addComp()\r\n      let currStart = residues[0]._index\r\n\r\n      for (let i = 0; i < resCount; ++i) {\r\n        const currRes = residues[i]\r\n        currRes._component = comp\r\n\r\n        const nextRes = i === resCount - 1 ? null : residues[i + 1]\r\n        if (\r\n          !nextRes ||\r\n          !currRes.isConnected(nextRes) ||\r\n          currRes._index !== nextRes._index - 1\r\n        ) {\r\n          // the last condition is broken and incorrect\r\n          // the refactoring of the Component is required in order to fix this issue\r\n          comp.setSubDivs([\r\n            {\r\n              start: currStart,\r\n              end: currRes._index\r\n            }\r\n          ])\r\n          if (nextRes) {\r\n            currStart = nextRes._index\r\n            comp = addComp()\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  // This function was added in the moment of despair\r\n  // It was the dark times for miew\r\n  _fillCmpNoedit() {\r\n    const comp = new Component(this)\r\n    comp._index = 0\r\n\r\n    const residues = this._residues\r\n    const resCount = residues.length\r\n    if (resCount === 0) {\r\n      return\r\n    }\r\n\r\n    const currSubDivs = []\r\n    let currStart = 0\r\n    for (let i = 0; i < resCount; ++i) {\r\n      const currRes = residues[i]\r\n      currRes._component = comp\r\n\r\n      const nextRes = i === resCount - 1 ? null : residues[i + 1]\r\n      if (!nextRes || !currRes.isConnected(nextRes)) {\r\n        // wrap up this interval\r\n        currSubDivs[currSubDivs.length] = {\r\n          start: currStart,\r\n          end: i\r\n        }\r\n        if (nextRes) {\r\n          currStart = i + 1\r\n        }\r\n      }\r\n    }\r\n\r\n    comp.setSubDivs(currSubDivs)\r\n    this._components[comp._index] = comp\r\n  }\r\n\r\n  /**\r\n   * Fill components information.\r\n   * @param {boolean} enableEditing - Restructure Complex to enable per-component editing.\r\n   */\r\n  _fillComponents(enableEditing) {\r\n    if (enableEditing) {\r\n      this._fillCmpEdit()\r\n    } else {\r\n      this._fillCmpNoedit()\r\n    }\r\n  }\r\n\r\n  getCurrentUnit() {\r\n    return this._currentUnit\r\n  }\r\n\r\n  getDefaultBoundaries() {\r\n    return this.units[0].getBoundaries()\r\n  }\r\n\r\n  getBoundaries() {\r\n    return this.units[this._currentUnit].getBoundaries()\r\n  }\r\n\r\n  getTransforms() {\r\n    return this.units[this._currentUnit].getTransforms()\r\n  }\r\n\r\n  getSelector() {\r\n    return this.units[this._currentUnit].getSelector()\r\n  }\r\n\r\n  resetCurrentUnit() {\r\n    this._currentUnit = 0\r\n    this.setCurrentUnit(1)\r\n  }\r\n\r\n  setCurrentUnit(newUnit) {\r\n    if (\r\n      newUnit !== null &&\r\n      newUnit !== undefined &&\r\n      newUnit !== this._currentUnit &&\r\n      newUnit >= 0 &&\r\n      newUnit < this.units.length\r\n    ) {\r\n      this._currentUnit = newUnit\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  _computeBounds() {\r\n    const { units } = this\r\n    for (let i = 0, n = units.length; i < n; ++i) {\r\n      units[i].computeBoundaries()\r\n    }\r\n  }\r\n\r\n  onAtomPositionChanged() {\r\n    this.forEachChain((a) => {\r\n      a._finalize()\r\n    })\r\n    this.forEachComponent((c) => {\r\n      c.update()\r\n    })\r\n    // Update bounding sphere and box\r\n    this._computeBounds()\r\n    this._finalizeBonds()\r\n    this.forEachSGroup((s) => {\r\n      s._rebuildSGroupOnAtomChange()\r\n    })\r\n  }\r\n\r\n  update() {\r\n    if (this._maskNeedsUpdate) {\r\n      this.updateStructuresMask()\r\n      this._maskNeedsUpdate = false\r\n    }\r\n  }\r\n\r\n  _finalizeBonds() {\r\n    const bonds = this.getBonds()\r\n    const n = bonds.length\r\n    for (let i = 0; i < n; ++i) {\r\n      bonds[i]._index = i\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finalizes complex's inner data(i.e. after parsing).\r\n   * @param {objects} opts - Build bonds automatically.\r\n   * @param {boolean} opts.needAutoBonding     - Build bonds automatically.\r\n   * @param {boolean} opts.detectAromaticLoops - Find/mark aromatic loops.\r\n   * @param {boolean} opts.enableEditing       - Restructure Complex to enable per-component editing.\r\n   * @param {Array<Atom>} [opts.serialAtomMap] - Array of atoms ordered by their serials.\r\n   */\r\n  finalize(opts) {\r\n    opts = opts || {}\r\n    // Put bonds into atoms\r\n    const bonds = this._bonds\r\n    let i\r\n    let n\r\n    // remove invalid bonds\r\n    for (i = bonds.length - 1; i >= 0; i--) {\r\n      const bond = bonds[i]\r\n      if (bond._left === null || bond._right === null) {\r\n        bonds.splice(i, 1)\r\n      } else {\r\n        bond._left.bonds.push(bond)\r\n        bond._right.bonds.push(bond)\r\n      }\r\n    }\r\n\r\n    const residues = this._residues\r\n    for (i = 0, n = residues.length; i < n; ++i) {\r\n      residues[i]._finalize()\r\n    }\r\n\r\n    this.forEachChain((a) => {\r\n      a._finalize()\r\n    })\r\n\r\n    // WARNING! this MUST be done BEFORE computeBounds is called\r\n    const { units } = this\r\n    for (i = 0, n = units.length; i < n; ++i) {\r\n      units[i].finalize()\r\n    }\r\n    // try setting first biomolecule by defaults\r\n    this.setCurrentUnit(1)\r\n\r\n    const residueHash = {}\r\n    for (i = 0, n = residues.length; i < n; ++i) {\r\n      const res = residues[i]\r\n      // This code is extremely dangerous for non-PDB formats\r\n      residueHash[\r\n        this.getUnifiedSerial(\r\n          res.getChain().getName().charCodeAt(0),\r\n          res.getSequence(),\r\n          res.getICode().charCodeAt(0)\r\n        )\r\n      ] = res\r\n    }\r\n\r\n    const { structures } = this\r\n    for (i = 0, n = structures.length; i < n; ++i) {\r\n      structures[i]._finalize(opts.serialAtomMap, residueHash, this)\r\n    }\r\n\r\n    const helices = this._helices\r\n    for (i = 0, n = helices.length; i < n; ++i) {\r\n      helices[i]._finalize(opts.serialAtomMap, residueHash, this)\r\n    }\r\n\r\n    const sheets = this._sheets\r\n    for (i = 0, n = sheets.length; i < n; ++i) {\r\n      sheets[i]._finalize(opts.serialAtomMap, residueHash, this)\r\n    }\r\n\r\n    // Update bounding sphere and box\r\n    this._computeBounds()\r\n\r\n    const atoms = this._atoms\r\n    for (i = 0, n = atoms.length; i < n; ++i) {\r\n      const currAtom = atoms[i]\r\n      currAtom.index = i\r\n    }\r\n\r\n    if (opts.needAutoBonding) {\r\n      const autoConnector = new AutoBond(this)\r\n      autoConnector.build()\r\n      autoConnector.destroy()\r\n    }\r\n\r\n    const chains = this._chains\r\n    for (i = 0, n = chains.length; i < n; ++i) {\r\n      chains[i]._index = i\r\n    }\r\n\r\n    for (i = 0, n = residues.length; i < n; ++i) {\r\n      residues[i]._index = i\r\n    }\r\n\r\n    // mark non-polar hydrogens\r\n    for (i = 0, n = atoms.length; i < n; ++i) {\r\n      const atom = atoms[i]\r\n      if (atom.flags & Atom.Flags.HYDROGEN && atom.bonds.length === 1) {\r\n        const bond = atom.bonds[0]\r\n        const other = (bond._left !== atom && bond._left) || bond._right\r\n        if (other.flags & Atom.Flags.CARBON) {\r\n          atom.flags |= Atom.Flags.NONPOLARH\r\n        }\r\n      }\r\n    }\r\n\r\n    this._finalizeBonds()\r\n    this._fillComponents(opts.enableEditing)\r\n\r\n    const marker = new AromaticLoopsMarker(this)\r\n    marker.markCycles()\r\n    if (opts.detectAromaticLoops) {\r\n      // TODO remove this condition clause, it is for debug purposes only!\r\n      marker.detectCycles() // TODO add conditional detection\r\n    }\r\n\r\n    this._finalizeMolecules()\r\n  }\r\n\r\n  _finalizeMolecules() {\r\n    // add reference to molecule into residue\r\n    for (let i = 0; i < this._molecules.length; i++) {\r\n      const molecule = this._molecules[i]\r\n      const count = molecule.residues.length\r\n      for (let j = 0; j < count; j++) {\r\n        const residue = molecule.residues[j]\r\n        residue._molecule = molecule\r\n      }\r\n    }\r\n  }\r\n\r\n  updateStructuresMask() {\r\n    const updater = (structure) => structure.collectMask()\r\n    this.forEachResidue(updater)\r\n    this.forEachChain(updater)\r\n    this.forEachMolecule(updater)\r\n  }\r\n\r\n  countAtomsByMask(mask) {\r\n    let count = 0\r\n\r\n    this.forEachAtom((atom) => {\r\n      if ((atom.mask & mask) !== 0) {\r\n        count++\r\n      }\r\n    })\r\n\r\n    return count\r\n  }\r\n\r\n  getNumAtomsBySelector(selector) {\r\n    let count = 0\r\n\r\n    this.forEachAtom((atom) => {\r\n      if (selector.includesAtom(atom)) {\r\n        count++\r\n      }\r\n    })\r\n\r\n    return count\r\n  }\r\n\r\n  resetAtomMask(mask) {\r\n    this.forEachAtom((atom) => {\r\n      atom.mask = mask\r\n    })\r\n  }\r\n\r\n  markAtoms(selector, mask) {\r\n    const setMask = mask\r\n    const clearMask = ~setMask\r\n    let count = 0\r\n    const totalSelector = selectors.keyword('And')(selector, this.getSelector())\r\n\r\n    this.forEachAtom((atom) => {\r\n      if (totalSelector.includesAtom(atom)) {\r\n        atom.mask |= setMask\r\n        count++\r\n      } else {\r\n        atom.mask &= clearMask\r\n      }\r\n    })\r\n    this._maskNeedsUpdate = true\r\n\r\n    return count\r\n  }\r\n\r\n  markAtomsAdditionally(selector, mask) {\r\n    const setMask = mask\r\n    let count = 0\r\n\r\n    this.forEachAtom((atom) => {\r\n      if (selector.includesAtom(atom) && (atom.mask & mask) !== mask) {\r\n        atom.mask |= setMask\r\n        count++\r\n      }\r\n    })\r\n\r\n    return count\r\n  }\r\n\r\n  clearAtomBits(mask) {\r\n    const clearMask = ~mask\r\n    this.forEachAtom((atom) => {\r\n      atom.mask &= clearMask\r\n    })\r\n    const reseter = (a) => {\r\n      a._mask &= clearMask\r\n    }\r\n    this.forEachAtom(reseter)\r\n    this.forEachResidue(reseter)\r\n    this.forEachChain(reseter)\r\n    this.forEachMolecule(reseter)\r\n  }\r\n\r\n  getAtomNames() {\r\n    if (this.hasOwnProperty('_atomNames')) {\r\n      return this._atomNames\r\n    }\r\n\r\n    const dict = {}\r\n    this.forEachAtom((atom) => {\r\n      dict[atom.name] = 1\r\n    })\r\n    this._atomNames = Object.keys(dict)\r\n\r\n    return this._atomNames\r\n  }\r\n\r\n  getElements() {\r\n    if (this.hasOwnProperty('_elements')) {\r\n      return this._elements\r\n    }\r\n\r\n    const dict = {}\r\n    this.forEachAtom((atom) => {\r\n      dict[atom.element.name] = 1\r\n    })\r\n    this._elements = Object.keys(dict)\r\n\r\n    return this._elements\r\n  }\r\n\r\n  getResidueNames() {\r\n    if (this.hasOwnProperty('_residueNames')) {\r\n      return this._residueNames\r\n    }\r\n\r\n    const dict = {}\r\n    this.forEachResidue((res) => {\r\n      dict[res._type._name] = 1\r\n    })\r\n    this._residueNames = Object.keys(dict)\r\n\r\n    return this._residueNames\r\n  }\r\n\r\n  getChainNames() {\r\n    if (this.hasOwnProperty('_chainNames')) {\r\n      return this._chainNames\r\n    }\r\n\r\n    const dict = {}\r\n    this.forEachChain((chain) => {\r\n      dict[chain._name] = 1\r\n    })\r\n    this._chainNames = Object.keys(dict)\r\n\r\n    return this._chainNames\r\n  }\r\n\r\n  getAltLocNames() {\r\n    if (this.hasOwnProperty('_altlocNames')) {\r\n      return this._altlocNames\r\n    }\r\n\r\n    const dict = {}\r\n    this.forEachAtom((atom) => {\r\n      dict[String.fromCharCode(atom.location)] = 1\r\n    })\r\n    this._altlocNames = Object.keys(dict)\r\n\r\n    return this._altlocNames\r\n  }\r\n\r\n  getVoxelWorld() {\r\n    if (!this.hasOwnProperty('_voxelWorld')) {\r\n      try {\r\n        this._voxelWorld = new VoxelWorld(\r\n          this.getDefaultBoundaries().boundingBox,\r\n          new Vector3(VOXEL_SIZE, VOXEL_SIZE, VOXEL_SIZE)\r\n        )\r\n        this._voxelWorld.addAtoms(this)\r\n      } catch (e) {\r\n        logger.warn('Unable to create voxel world')\r\n        this._voxelWorld = null\r\n      }\r\n    }\r\n\r\n    return this._voxelWorld\r\n  }\r\n\r\n  /**\r\n   * Simple function to make unified routine procedure without code duplication.\r\n   * @param {Array} srcArray   - Source chemical structure array (will be part of resulting chemical structure array).\r\n   * @param {Array} dstArray   - Resulting chemical structure array.\r\n   * @param {number} param     - Parameter for processor.\r\n   * @param {function} functor - Processor for every element in array.\r\n   */\r\n  addElement(srcArray, dstArray, param, functor) {\r\n    const { length } = srcArray\r\n    for (let i = 0; i < length; ++i) {\r\n      const elem = srcArray[i]\r\n      functor(elem, param)\r\n      dstArray.push(elem)\r\n    }\r\n  }\r\n\r\n  // this function joins multiple complexes into one (this)\r\n  // atom, bond, ... objects are reused -- so input complexes are no longer valid\r\n  joinComplexes(complexes) {\r\n    // clear target complex\r\n    this._chains = []\r\n    this._components = []\r\n    this._helices = []\r\n    this._sheets = []\r\n    this.structures = []\r\n    this._atoms = []\r\n    this._residues = []\r\n    this._bonds = []\r\n    this._sgroups = []\r\n\r\n    const self = this\r\n    let atomBias = 0\r\n    let bondBias = 0\r\n    let residueBias = 0\r\n    let chainBias = 0\r\n    let componentBias = 0\r\n\r\n    function processAtom(atom, bias) {\r\n      atom.serial += bias\r\n      atom.index += bias\r\n    }\r\n\r\n    function processBond(bond, bias) {\r\n      bond._index += bias\r\n    }\r\n\r\n    function processResidue(residue, bias) {\r\n      residue._index += bias\r\n    }\r\n\r\n    function processChain(chain, bias) {\r\n      chain._complex = self\r\n      chain._index += bias\r\n    }\r\n\r\n    function processComponent(component, bias) {\r\n      component._complex = self\r\n      component._index += bias\r\n    }\r\n\r\n    /**\r\n     * Simple function to do nothing.\r\n     */\r\n    function doNothing() {}\r\n\r\n    for (let i = 0; i < complexes.length; ++i) {\r\n      const c = complexes[i]\r\n      this.addElement(c._atoms, this._atoms, atomBias, processAtom)\r\n      this.addElement(c._bonds, this._bonds, bondBias, processBond)\r\n      this.addElement(c._residues, this._residues, residueBias, processResidue)\r\n      this.addElement(c._chains, this._chains, chainBias, processChain)\r\n      this.addElement(c._sheets, this._sheets, 0, doNothing)\r\n      this.addElement(c._helices, this._helices, 0, doNothing)\r\n      this.addElement(c._sgroups, this._sgroups, 0, doNothing)\r\n      this.addElement(\r\n        c._components,\r\n        this._components,\r\n        componentBias,\r\n        processComponent\r\n      )\r\n      this.addElement(c.structures, this.structures, 0, doNothing)\r\n      // merge residue types\r\n      for (const rt in c._residueTypes) {\r\n        if (c._residueTypes.hasOwnProperty(rt)) {\r\n          this._residueTypes[rt] = c._residueTypes[rt]\r\n        }\r\n      }\r\n\r\n      atomBias += c._atoms.length\r\n      bondBias += c._bonds.length\r\n      residueBias += c._residues.length\r\n      chainBias += c._chains.length\r\n      componentBias += c._components.length\r\n    }\r\n\r\n    this._computeBounds()\r\n  }\r\n\r\n  /**\r\n   * Replace secondary structure with calculated one.\r\n   *\r\n   * DSSP algorithm implementation is used.\r\n   *\r\n   * Kabsch W, Sander C. 1983. Dictionary of protein secondary structure: pattern recognition of hydrogen-bonded and\r\n   * geometrical features. Biopolymers. 22(12):2577-2637. doi:10.1002/bip.360221211.\r\n   */\r\n  dssp() {\r\n    const ssMap = new SecondaryStructureMap(this)\r\n\r\n    const structures = (this.structures = [])\r\n    const helices = (this._helices = [])\r\n    const sheets = (this._sheets = [])\r\n\r\n    const getSheet = (index) => {\r\n      let item = sheets[index]\r\n      if (!item) {\r\n        item = sheets[index] = new Sheet(String(index), 0)\r\n      }\r\n      return item\r\n    }\r\n\r\n    let lastCode\r\n    let lastSheetIndex\r\n    let lastHelixIndex = 0\r\n    let curStructure = null\r\n    for (let i = 0, n = this._residues.length; i < n; ++i) {\r\n      const curCode = ssMap._ss[i]\r\n      const curResidue = this._residues[i]\r\n      const curSheetIndex = ssMap._sheet[i]\r\n\r\n      // expand the last structure\r\n      if (curCode === lastCode && curSheetIndex === lastSheetIndex) {\r\n        curResidue._secondary = curStructure\r\n        if (curStructure) {\r\n          curStructure.term = curResidue\r\n        }\r\n        if (curStructure instanceof Helix) {\r\n          curStructure.length++\r\n        }\r\n        continue\r\n      }\r\n\r\n      // create a new structure\r\n      const helixClass = helixClassMap[curCode]\r\n      const loopType = loopMap[curCode]\r\n      if (curCode === StructureType.STRAND) {\r\n        const curSheet = getSheet(curSheetIndex)\r\n        curStructure = new Strand(\r\n          curSheet,\r\n          curResidue,\r\n          curResidue,\r\n          0,\r\n          null,\r\n          null\r\n        )\r\n        curSheet.addStrand(curStructure)\r\n      } else if (helixClass !== undefined) {\r\n        lastHelixIndex++\r\n        curStructure = new Helix(\r\n          helixClass,\r\n          curResidue,\r\n          curResidue,\r\n          lastHelixIndex,\r\n          String(lastHelixIndex),\r\n          '',\r\n          1\r\n        )\r\n        helices.push(curStructure)\r\n      } else if (loopType !== undefined) {\r\n        curStructure = new StructuralElement(loopType, curResidue, curResidue)\r\n      } else {\r\n        curStructure = null\r\n      }\r\n\r\n      if (curStructure) {\r\n        structures.push(curStructure)\r\n      }\r\n\r\n      curResidue._secondary = curStructure\r\n\r\n      lastCode = curCode\r\n      lastSheetIndex = curSheetIndex\r\n    }\r\n\r\n    this._sheets = sheets.filter((_sheet) => true) // squeeze sheets array\r\n  }\r\n}\r\n\r\nComplex.prototype.id = 'Complex'\r\nComplex.prototype.name = ''\r\n\r\nexport default Complex\r\n",
		"import utils from '../utils'\r\nimport {\r\n  ClampToEdgeWrapping,\r\n  DataTexture,\r\n  LinearFilter,\r\n  LuminanceFormat,\r\n  UnsignedByteType,\r\n  UVMapping,\r\n  Vector3\r\n} from 'three'\r\n\r\nfunction pow2ceil(v) {\r\n  let p = 2\r\n  v = (v - 1) >> 1\r\n  while (v) {\r\n    p <<= 1\r\n    v >>= 1\r\n  }\r\n  return p\r\n}\r\n\r\n/**\r\n * Volume constructor\r\n *\r\n * @param {Object} type - Float32Array, Int8Array, etc...\r\n * @param {Object|Array} dimensions - number of data points on each axis (x, y, z)\r\n * @param {Box3} box - bounding box defining data place in metric space,\r\n *                     it's corners correspond to extreme data points\r\n * @param {Number} vecSize - dimension of the field data point (1 = scalar, 3 = 3D vector)\r\n * @param {Object} data - typed array of the same type as specified by the 1st parameter,\r\n *                        layout: point by point along X,\r\n *                                row by row along Y,\r\n *                                plane by plane along Z\r\n * @param {Number} volumeInfo - volume info values to define threshold to filter the noise\r\n */\r\n\r\nclass Volume {\r\n  constructor(type, dimensions, box, vecSize, data, volumeInfo) {\r\n    this._box = box.clone()\r\n    this._dimVec = Math.max(Math.floor(vecSize || 1), 1)\r\n    this._volumeInfo = volumeInfo\r\n\r\n    if (dimensions instanceof Array) {\r\n      ;[this._dimX, this._dimY, this._dimZ] = dimensions\r\n    } else {\r\n      this._dimX = dimensions.x\r\n      this._dimY = dimensions.y\r\n      this._dimZ = dimensions.z\r\n    }\r\n    this._dimX = Math.max(Math.floor(this._dimX), 1)\r\n    this._dimY = Math.max(Math.floor(this._dimY), 1)\r\n    this._dimZ = Math.max(Math.floor(this._dimZ), 1)\r\n\r\n    this._rowElements = this._dimVec * this._dimX\r\n    this._planeElements = this._rowElements * this._dimY\r\n    this._totalElements = this._planeElements * this._dimZ\r\n\r\n    this._data = data || utils.allocateTyped(type, this._totalElements)\r\n\r\n    // override getter/setter for vector fields\r\n    switch (this._dimVec) {\r\n      case 1:\r\n        break\r\n\r\n      case 2:\r\n        this.getValue = function (x, y, z) {\r\n          const idx =\r\n            x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n          return [this._data[idx], this._data[idx + 1]]\r\n        }\r\n\r\n        this.setValue = function (x, y, z, a, b) {\r\n          const idx =\r\n            x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n          this._data[idx] = a\r\n          this._data[idx + 1] = b\r\n        }\r\n\r\n        this.addValue = function (x, y, z, a, b) {\r\n          const idx =\r\n            x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n          this._data[idx] += a\r\n          this._data[idx + 1] += b\r\n        }\r\n        break\r\n\r\n      case 3:\r\n        this.getValue = function (x, y, z) {\r\n          const idx =\r\n            x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n          return [this._data[idx], this._data[idx + 1], this._data[idx + 2]]\r\n        }\r\n\r\n        this.setValue = function (x, y, z, a, b, c) {\r\n          const idx =\r\n            x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n          this._data[idx] = a\r\n          this._data[idx + 1] = b\r\n          this._data[idx + 2] = c\r\n        }\r\n\r\n        this.addValue = function (x, y, z, a, b, c) {\r\n          const idx =\r\n            x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n          this._data[idx] += a\r\n          this._data[idx + 1] += b\r\n          this._data[idx + 2] += c\r\n        }\r\n        break\r\n\r\n      default:\r\n        throw new Error('Volume: invalid vector dimension')\r\n    }\r\n  }\r\n\r\n  // default getter assumes it's a scalar field\r\n  getValue(x, y, z) {\r\n    return this._data[x + y * this._rowElements + z * this._planeElements]\r\n  }\r\n\r\n  // default setter assumes it's a scalar field\r\n  setValue(x, y, z, val) {\r\n    this._data[x + y * this._rowElements + z * this._planeElements] = val\r\n  }\r\n\r\n  // default adder assumes it's a scalar field\r\n  addValue(x, y, z, val) {\r\n    this._data[x + y * this._rowElements + z * this._planeElements] += val\r\n  }\r\n\r\n  getDimensions() {\r\n    return [this._dimX, this._dimY, this._dimZ]\r\n  }\r\n\r\n  getBox() {\r\n    return this._box\r\n  }\r\n\r\n  getVolumeInfo() {\r\n    return this._volumeInfo\r\n  }\r\n\r\n  getCellSize() {\r\n    const boxSize = new Vector3()\r\n    this._box.getSize(boxSize)\r\n    const res = new Vector3()\r\n    res.x = this._dimX > 1 ? boxSize.x / (this._dimX - 1) : 0\r\n    res.y = this._dimY > 1 ? boxSize.y / (this._dimY - 1) : 0\r\n    res.z = this._dimZ > 1 ? boxSize.z / (this._dimZ - 1) : 0\r\n    return res\r\n  }\r\n\r\n  computeGradient() {\r\n    if (this._dimVec !== 1) {\r\n      // gradient can only be computed for scalar fields\r\n      return null\r\n    }\r\n\r\n    // create a 3D vector field of gradients\r\n    const gradient = new Volume(\r\n      Float32Array,\r\n      [this._dimX, this._dimY, this._dimZ],\r\n      this._box,\r\n      3\r\n    )\r\n\r\n    // calculate cell side lengths\r\n    const vl = this.getCellSize()\r\n\r\n    // gradient axis scaling values and averaging factors, to correctly\r\n    // calculate the gradient for volumes with irregular cell spacing\r\n    const vs = new Vector3(-0.5 / vl.x, -0.5 / vl.y, -0.5 / vl.z)\r\n\r\n    // TODO Check for intended bug in VMD (min is zero)\r\n    function clamp(val, min, max) {\r\n      return Math.min(max, Math.max(min, val))\r\n    }\r\n\r\n    const xSize = this._dimX\r\n    const ySize = this._dimY\r\n    const zSize = this._dimZ\r\n    const volMap = this._data\r\n\r\n    function _voxelValue(x, y, z) {\r\n      return volMap[z * xSize * ySize + y * xSize + x]\r\n    }\r\n\r\n    for (let zi = 0; zi < zSize; ++zi) {\r\n      const zm = clamp(zi - 1, 0, zSize - 1)\r\n      const zp = clamp(zi + 1, 0, zSize - 1)\r\n\r\n      for (let yi = 0; yi < ySize; ++yi) {\r\n        const ym = clamp(yi - 1, 0, ySize - 1)\r\n        const yp = clamp(yi + 1, 0, ySize - 1)\r\n\r\n        for (let xi = 0; xi < xSize; ++xi) {\r\n          const xm = clamp(xi - 1, 0, xSize - 1)\r\n          const xp = clamp(xi + 1, 0, xSize - 1)\r\n\r\n          // Calculate the volume gradient at each grid cell.\r\n          // Gradients are now stored unnormalized, since we need them in pure\r\n          // form in order to draw field lines etc.  Shading code will now have\r\n          // to do renormalization for itself on-the-fly.\r\n\r\n          // XXX this gradient is only correct for orthogonal grids, since\r\n          // we're using the array index offsets rather to calculate the gradient\r\n          // rather than voxel coordinate offsets.  This will have to be\r\n          // re-worked for non-orthogonal datasets.\r\n\r\n          gradient.setValue(\r\n            xi,\r\n            yi,\r\n            zi,\r\n            (_voxelValue(xp, yi, zi) - _voxelValue(xm, yi, zi)) * vs.x,\r\n            (_voxelValue(xi, yp, zi) - _voxelValue(xi, ym, zi)) * vs.y,\r\n            (_voxelValue(xi, yi, zp) - _voxelValue(xi, yi, zm)) * vs.z\r\n          )\r\n        }\r\n      }\r\n    }\r\n\r\n    return gradient\r\n  }\r\n\r\n  normalize() {\r\n    const data = this._data\r\n\r\n    // get min/max\r\n    let min = data[0]\r\n    let max = data[0]\r\n    for (let i = 1; i < data.length; ++i) {\r\n      min = Math.min(min, data[i])\r\n      max = Math.max(max, data[i])\r\n    }\r\n\r\n    const d = 1.0 / (max - min)\r\n    if (d === 0) {\r\n      return\r\n    }\r\n\r\n    // normalize\r\n    for (let i = 0; i < data.length; ++i) {\r\n      data[i] = d * (data[i] - min)\r\n    }\r\n  }\r\n\r\n  getTiledTextureStride() {\r\n    return [this._dimX + 2, this._dimY + 2]\r\n  }\r\n\r\n  buildTiledTexture() {\r\n    let tilesX = Math.ceil(Math.sqrt((this._dimZ * this._dimY) / this._dimX))\r\n\r\n    let width = tilesX * (this._dimX + 2) - 1\r\n    width = pow2ceil(width)\r\n    tilesX = Math.floor(width / (this._dimX + 2))\r\n\r\n    const tilesY = Math.ceil(this._dimZ / tilesX)\r\n    let height = tilesY * (this._dimY + 2) - 1\r\n    height = pow2ceil(height)\r\n\r\n    const data = new Uint8Array(width * height)\r\n\r\n    let src\r\n    let dst\r\n    for (let tileRow = 0; tileRow < tilesY; ++tileRow) {\r\n      // process each pixel row of this tile row\r\n      for (let row = 0; row < this._dimY; ++row) {\r\n        src = tileRow * tilesX * this._planeElements + row * this._rowElements\r\n        dst = width * (tileRow * (this._dimY + 2) + row)\r\n        // copy a series of rows through several XY planes\r\n        for (let t = 0; t < tilesX; ++t) {\r\n          // copy one row of one XY plane\r\n          for (let x = 0; x < this._dimX; ++x) {\r\n            data[dst++] = 255.0 * this._data[src++]\r\n          }\r\n\r\n          // repeat last pixel of previous tile\r\n          data[dst++] = 255.0 * this._data[src - 1]\r\n\r\n          if (t < tilesX - 1) {\r\n            // skip to the same row of next XY plane\r\n            src += this._planeElements - this._rowElements\r\n            // repeat first pixel of next tile\r\n            data[dst++] = 255.0 * this._data[src]\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // fill pixels between tile rows with copy of edge pixels\r\n    for (let tileRow = 0; tileRow < tilesY; ++tileRow) {\r\n      // copy last pixel row of this tile row to the following pixel row of the texture\r\n      src = width * (tileRow * (this._dimY + 2) + this._dimY - 1)\r\n      dst = src + width\r\n      for (let x = 0; x < width; ++x) {\r\n        data[dst++] = data[src++]\r\n      }\r\n      if (tileRow < tilesY - 1) {\r\n        // copy first pixel row of next tile row to the preceding pixel row of the texture\r\n        src = width * (tileRow + 1) * (this._dimY + 2)\r\n        dst = src - width\r\n        for (let x = 0; x < width; ++x) {\r\n          data[dst++] = data[src++]\r\n        }\r\n      }\r\n    }\r\n\r\n    const texture = new DataTexture(\r\n      data,\r\n      width,\r\n      height,\r\n      LuminanceFormat,\r\n      UnsignedByteType,\r\n      UVMapping,\r\n      ClampToEdgeWrapping,\r\n      ClampToEdgeWrapping,\r\n      LinearFilter,\r\n      LinearFilter\r\n    )\r\n    texture.needsUpdate = true\r\n    return texture\r\n  }\r\n\r\n  /* ********************************************************************************\r\n   *\r\n   * Methods that provide direct access to internal array (for better performance)\r\n   *\r\n   ******************************************************************************** */\r\n\r\n  getData() {\r\n    return this._data\r\n  }\r\n\r\n  getDirectIdx(x, y, z) {\r\n    return x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n  }\r\n\r\n  getStrideX() {\r\n    return this._dimVec\r\n  }\r\n\r\n  getStrideY() {\r\n    return this._rowElements\r\n  }\r\n\r\n  getStrideZ() {\r\n    return this._planeElements\r\n  }\r\n}\r\n\r\nVolume.prototype.id = 'Volume'\r\n\r\nexport default Volume\r\n",
		"/**\r\n * Residue Molecule.\r\n *\r\n * @param {Complex} complex - Molecular complex this Molecule belongs to.\r\n * @param {String} name - Molecule's name.\r\n * @param {Integer} index - Molecule's index in file.\r\n *\r\n * @exports Molecule\r\n * @constructor\r\n */\r\nclass Molecule {\r\n  constructor(complex, name, index) {\r\n    this.complex = complex\r\n    this.name = name || ''\r\n    this.residues = []\r\n    this.mask = 1 | 0\r\n    this.index = index || -1 // start with 1\r\n  }\r\n\r\n  forEachResidue(process) {\r\n    const { residues } = this\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      process(residues[i])\r\n    }\r\n  }\r\n\r\n  collectMask() {\r\n    let mask = 0xffffffff\r\n    const { residues } = this\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      mask &= residues[i]._mask\r\n    }\r\n    this.mask = mask\r\n  }\r\n}\r\n\r\nexport default Molecule\r\n",
		"import Atom from './chem/Atom'\r\nimport Element from './chem/Element'\r\nimport Bond from './chem/Bond'\r\nimport Residue from './chem/Residue'\r\nimport ResidueType from './chem/ResidueType'\r\nimport Chain from './chem/Chain'\r\nimport Helix from './chem/Helix'\r\nimport Strand from './chem/Strand'\r\nimport Sheet from './chem/Sheet'\r\nimport SGroup from './chem/SGroup'\r\nimport Assembly from './chem/Assembly'\r\nimport Complex from './chem/Complex'\r\nimport Volume from './chem/Volume'\r\nimport VoxelWorld from './chem/VoxelWorld'\r\nimport selectors from './chem/selectors'\r\nimport Molecule from './chem/Molecule'\r\n\r\nexport default {\r\n  Atom,\r\n  Element,\r\n  Bond,\r\n  Residue,\r\n  ResidueType,\r\n  Chain,\r\n  Helix,\r\n  Strand,\r\n  Sheet,\r\n  SGroup,\r\n  Assembly,\r\n  Complex,\r\n  Volume,\r\n  VoxelWorld,\r\n  selectors,\r\n  Molecule\r\n}\r\n",
		"/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nimport { Object3D } from 'three'\r\n\r\nclass CSS2DObject extends Object3D {\r\n  constructor(element) {\r\n    super()\r\n    const self = this\r\n    this._element = element\r\n    this._element.style.position = 'absolute'\r\n    this.addEventListener('removed', () => {\r\n      if (self._element.parentNode !== null) {\r\n        self._element.parentNode.removeChild(self._element)\r\n      }\r\n    })\r\n  }\r\n\r\n  getElement() {\r\n    return this._element\r\n  }\r\n\r\n  /**\r\n   * Sets label transparency.\r\n   *\r\n   * @param {number} transp    - in [0; 1] 1 means fully transparent\r\n   */\r\n  setTransparency(transp) {\r\n    const el = this.getElement()\r\n    if (el === null) {\r\n      return\r\n    }\r\n    if (transp === 1.0) {\r\n      el.style.display = 'none'\r\n      return\r\n    }\r\n    el.style.display = 'inline'\r\n    const op = 1.0 - transp\r\n    const top = op.toString()\r\n    const op100 = op * 100\r\n    el.style.opacity = top\r\n    el.style.filter = `alpha(opacity=${op100})` // IE fallback\r\n  }\r\n\r\n  clone() {\r\n    const obj = new CSS2DObject(this._element)\r\n    obj.copy(this)\r\n    return obj\r\n  }\r\n}\r\n\r\nexport default CSS2DObject\r\n",
		"import { Group } from 'three'\r\n\r\nclass RCGroup extends Group {\r\n  raycast(raycaster, intersects) {\r\n    if (!this.visible) {\r\n      return\r\n    }\r\n\r\n    const { children } = this\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      children[i].raycast(raycaster, intersects)\r\n    }\r\n  }\r\n\r\n  enableSubset(mask, innerOnly) {\r\n    const { children } = this\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].enableSubset) {\r\n        children[i].enableSubset(mask, innerOnly)\r\n      }\r\n    }\r\n  }\r\n\r\n  disableSubset(mask, innerOnly) {\r\n    const { children } = this\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].disableSubset) {\r\n        children[i].disableSubset(mask, innerOnly)\r\n      }\r\n    }\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.children.length === 0\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    const { children } = this\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].updateToFrame) {\r\n        children[i].updateToFrame(frameData)\r\n      }\r\n    }\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = []\r\n    const { children } = this\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        Array.prototype.push.apply(\r\n          totalSubset,\r\n          children[i].getSubset(mask, innerOnly)\r\n        )\r\n      }\r\n    }\r\n    return totalSubset\r\n  }\r\n}\r\n\r\nexport default RCGroup\r\n",
		"/* eslint-disable no-magic-numbers */\r\n\r\nimport logger from '../utils/logger'\r\nimport CSS2DObject from './CSS2DObject'\r\nimport RCGroup from './RCGroup'\r\nimport vertexScreenQuadShader from './shaders/ScreenQuad.vert'\r\nimport fragmentScreenQuadFromTex from './shaders/ScreenQuadFromTex.frag'\r\nimport fragmentScreenQuadFromTexWithDistortion from './shaders/ScreenQuadFromTexWithDistortion.frag'\r\nimport {\r\n  BufferAttribute,\r\n  InstancedBufferGeometry,\r\n  LessEqualDepth,\r\n  Line,\r\n  LineSegments,\r\n  MathUtils,\r\n  Matrix4,\r\n  Mesh,\r\n  MeshBasicMaterial,\r\n  Object3D,\r\n  OrthographicCamera,\r\n  PerspectiveCamera,\r\n  PlaneBufferGeometry,\r\n  RawShaderMaterial,\r\n  Raycaster,\r\n  Scene,\r\n  StereoCamera,\r\n  Vector3,\r\n  WebGLRenderer,\r\n  Color\r\n} from 'three'\r\n\r\nconst LAYERS = {\r\n  DEFAULT: 0,\r\n  VOLUME: 1,\r\n  TRANSPARENT: 2,\r\n  PREPASS_TRANSPARENT: 3,\r\n  VOLUME_BFPLANE: 4,\r\n  COLOR_FROM_POSITION: 5,\r\n  SHADOWMAP: 6\r\n}\r\n\r\nconst SELECTION_LAYERS = [\r\n  // These layers, that are used in the selection by ray casting\r\n  LAYERS.DEFAULT,\r\n  LAYERS.TRANSPARENT\r\n]\r\n\r\nObject3D.prototype.resetTransform = function () {\r\n  this.position.set(0, 0, 0)\r\n  this.quaternion.set(0, 0, 0, 1)\r\n  this.scale.set(1, 1, 1)\r\n}\r\n\r\n// update world matrix of this object and all its ancestors\r\nObject3D.prototype.updateMatrixWorldRecursive = function () {\r\n  if (this.parent != null) {\r\n    this.parent.updateMatrixWorldRecursive()\r\n  }\r\n  this.updateMatrixWorld()\r\n}\r\n// add object to parent, saving objects' world transform\r\nObject3D.prototype.addSavingWorldTransform = (function () {\r\n  const _worldMatrixInverse = new Matrix4()\r\n\r\n  return function (object) {\r\n    if (object instanceof Object3D) {\r\n      _worldMatrixInverse.copy(this.matrixWorld).invert()\r\n      _worldMatrixInverse.multiply(object.matrixWorld)\r\n      object.matrix.copy(_worldMatrixInverse)\r\n      object.matrix.decompose(object.position, object.quaternion, object.scale)\r\n      this.add(object)\r\n    }\r\n  }\r\n})()\r\n\r\n// render a tiny transparent quad in the center of the screen\r\nWebGLRenderer.prototype.renderDummyQuad = (function () {\r\n  const _material = new MeshBasicMaterial({\r\n    transparent: true,\r\n    opacity: 0.0,\r\n    depthWrite: false\r\n  })\r\n\r\n  const _scene = new Scene()\r\n  const _quad = new Mesh(new PlaneBufferGeometry(0.01, 0.01), _material)\r\n  _scene.add(_quad)\r\n\r\n  const _camera = new OrthographicCamera(-0.5, 0.5, 0.5, -0.5, -10000, 10000)\r\n  _camera.position.z = 100\r\n\r\n  return function () {\r\n    this.render(_scene, _camera)\r\n  }\r\n})()\r\n\r\nWebGLRenderer.prototype.renderScreenQuad = (function () {\r\n  const _scene = new Scene()\r\n  const _quad = new Mesh(new PlaneBufferGeometry(1.0, 1.0))\r\n  _scene.add(_quad)\r\n\r\n  const _camera = new OrthographicCamera(-0.5, 0.5, 0.5, -0.5, -10000, 10000)\r\n  _camera.position.z = 100\r\n\r\n  return function (material) {\r\n    _quad.material = material\r\n    this.render(_scene, _camera)\r\n  }\r\n})()\r\n\r\nMatrix4.prototype.isIdentity = (function () {\r\n  const identity = new Matrix4()\r\n  return function () {\r\n    return identity.equals(this)\r\n  }\r\n})()\r\n\r\nMatrix4.prototype.applyToPointsArray = function (array, stride, w) {\r\n  if (!array || !stride || stride < 3) {\r\n    return array\r\n  }\r\n  w = w || 0 // use point as normal by default\r\n  const e = this.elements\r\n  for (let i = 0; i < array.length; i += stride) {\r\n    const x = array[i]\r\n    const y = array[i + 1]\r\n    const z = array[i + 2]\r\n\r\n    const persp = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15])\r\n\r\n    array[i] = (e[0] * x + e[4] * y + e[8] * z + e[12] * w) * persp\r\n    array[i + 1] = (e[1] * x + e[5] * y + e[9] * z + e[13] * w) * persp\r\n    array[i + 2] = (e[2] * x + e[6] * y + e[10] * z + e[14] * w) * persp\r\n  }\r\n  return array\r\n}\r\n\r\nclass ScreenQuadMaterial extends RawShaderMaterial {\r\n  constructor(params) {\r\n    if (params.uniforms === undefined) {\r\n      params.uniforms = {}\r\n    }\r\n    params.uniforms.srcTex = { type: 't', value: null }\r\n    params.vertexShader = vertexScreenQuadShader\r\n    params.transparent = false\r\n    params.depthTest = false\r\n    params.depthWrite = false\r\n    super(params)\r\n  }\r\n}\r\n\r\nWebGLRenderer.prototype.renderScreenQuadFromTex = (function () {\r\n  const _material = new ScreenQuadMaterial({\r\n    uniforms: { opacity: { type: 'f', value: 1.0 } },\r\n    fragmentShader: fragmentScreenQuadFromTex,\r\n    transparent: true\r\n  })\r\n\r\n  return function (srcTex, opacity) {\r\n    _material.uniforms.srcTex.value = srcTex\r\n    _material.transparent = opacity < 1.0\r\n    _material.uniforms.opacity.value = opacity\r\n    this.renderScreenQuad(_material)\r\n  }\r\n})()\r\n\r\nWebGLRenderer.prototype.renderScreenQuadFromTexWithDistortion = (function () {\r\n  const _material = new ScreenQuadMaterial({\r\n    uniforms: { coef: { type: 'f', value: 1.0 } },\r\n    fragmentShader: fragmentScreenQuadFromTexWithDistortion\r\n  })\r\n\r\n  return function (srcTex, coef) {\r\n    _material.uniforms.srcTex.value = srcTex\r\n    _material.uniforms.coef.value = coef\r\n    this.renderScreenQuad(_material)\r\n  }\r\n})()\r\n\r\n/**\r\n * @param {number} angle - Field of view in degrees.\r\n */\r\nPerspectiveCamera.prototype.setMinimalFov = function (angle) {\r\n  if (this.aspect >= 1.0) {\r\n    this.fov = angle\r\n  } else {\r\n    this.fov = MathUtils.radToDeg(\r\n      2 * Math.atan(Math.tan(MathUtils.degToRad(angle) * 0.5) / this.aspect)\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * @param {PerspectiveCamera} camera - Base camera for this stereo camera.\r\n * @param {number} angle - Field of view in degrees.\r\n */\r\nStereoCamera.prototype.updateHalfSized = function (camera, angle) {\r\n  const originalAspect = camera.aspect\r\n  const originalFov = camera.fov\r\n\r\n  camera.aspect = originalAspect / 2.0\r\n  camera.setMinimalFov(angle)\r\n  camera.updateProjectionMatrix()\r\n\r\n  this.update(camera)\r\n\r\n  camera.aspect = originalAspect\r\n  camera.fov = originalFov\r\n  camera.updateProjectionMatrix()\r\n}\r\n\r\n/**\r\n * @param {number} radius - Radius of bounding sphere in angstroms to fit on screen.\r\n * @param {number} angle - Field of view in degrees.\r\n */\r\nPerspectiveCamera.prototype.setDistanceToFit = function (radius, angle) {\r\n  this.position.z = radius / Math.sin(0.5 * MathUtils.degToRad(angle))\r\n}\r\n\r\n/**\r\n * @param {RCGroup} gfxObj - All objects on scene.\r\n * @param {PerspectiveCamera} camera - Camera used for rendering.\r\n * @param {number} clipPlane - Distance to clip plane.\r\n * @param {number} fogFarPlane - Distance to fog far plane.\r\n */\r\nRaycaster.prototype.intersectVisibleObject = function (\r\n  gfxObj,\r\n  camera,\r\n  clipPlane,\r\n  fogFarPlane\r\n) {\r\n  const intersects = this.intersectObject(gfxObj, false)\r\n  if (intersects.length === 0) {\r\n    return null\r\n  }\r\n\r\n  // find point closest to camera that doesn't get clipped by camera near plane or clipPlane (if it exists)\r\n  const nearPlane = Math.min(camera.near, clipPlane)\r\n  let i\r\n  let p = intersects[0]\r\n  const v = new Vector3()\r\n  for (i = 0; i < intersects.length; ++i) {\r\n    p = intersects[i]\r\n    v.copy(p.point)\r\n    v.applyMatrix4(camera.matrixWorldInverse)\r\n    if (v.z <= -nearPlane) {\r\n      break\r\n    }\r\n  }\r\n  if (i === intersects.length) {\r\n    return null\r\n  }\r\n\r\n  // check that selected intersection point is not clipped by camera far plane or occluded by fog (if it exists)\r\n  const farPlane = Math.min(camera.far, fogFarPlane)\r\n  v.copy(p.point)\r\n  v.applyMatrix4(camera.matrixWorldInverse)\r\n  if (v.z <= -farPlane) {\r\n    return null\r\n  }\r\n  return p\r\n}\r\n\r\nMatrix4.prototype.extractScale = (function () {\r\n  const _v = new Vector3()\r\n\r\n  return function (scale) {\r\n    if (scale === undefined) {\r\n      logger.debug(\r\n        'extractScale(): new is too expensive operation to do it on-the-fly'\r\n      )\r\n      scale = _v.clone()\r\n    }\r\n\r\n    const te = this.elements\r\n    scale.x = _v.set(te[0], te[1], te[2]).length()\r\n    scale.y = _v.set(te[4], te[5], te[6]).length()\r\n    scale.z = _v.set(te[8], te[9], te[10]).length()\r\n\r\n    // if determine is negative, we need to invert one scale\r\n    const det = this.determinant()\r\n    if (det < 0) {\r\n      scale.x = -scale.x\r\n    }\r\n    return scale\r\n  }\r\n})()\r\n\r\nfunction _calcCylinderMatrix(posBegin, posEnd, radius) {\r\n  const posCenter = posBegin.clone().lerp(posEnd, 0.5)\r\n  const matScale = new Matrix4()\r\n  matScale.makeScale(radius, posBegin.distanceTo(posEnd), radius)\r\n\r\n  const matRotHalf = new Matrix4()\r\n  matRotHalf.makeRotationX(Math.PI / 2)\r\n\r\n  const matRotLook = new Matrix4()\r\n  const vUp = new Vector3(0, 1, 0)\r\n  matRotLook.lookAt(posCenter, posEnd, vUp)\r\n\r\n  matRotLook.multiply(matRotHalf)\r\n  matRotLook.multiply(matScale)\r\n  matRotLook.setPosition(posCenter)\r\n  return matRotLook\r\n}\r\n\r\nfunction _calcChunkMatrix(eye, target, up, rad) {\r\n  const matScale = new Matrix4()\r\n  matScale.makeScale(rad.x, rad.y, 0)\r\n\r\n  const matRotLook = new Matrix4()\r\n  matRotLook.lookAt(eye, target, up)\r\n  matRotLook.multiply(matScale)\r\n  matRotLook.setPosition(eye)\r\n\r\n  return matRotLook\r\n}\r\n\r\nfunction _groupHasGeometryToRender(group) {\r\n  let hasGeoms = false\r\n  group.traverse((node) => {\r\n    if (node.hasOwnProperty('geometry') || node instanceof CSS2DObject) {\r\n      hasGeoms = true\r\n    }\r\n  })\r\n  return hasGeoms\r\n}\r\n\r\nfunction _buildDistorionMesh(widthSegments, heightSegements, coef) {\r\n  // solve equation r_u = r_d * (1 + k * r_d^2)\r\n  // for r_d using iterations\r\n  // takes: r_u^2\r\n  // returns: r_d / r_u  factor that can be used to distort point coords\r\n  function calcInverseBarrel(r2) {\r\n    const epsilon = 1e-5\r\n    let prevR2 = 0.0\r\n    let curR2 = r2\r\n    let dr = 1.0\r\n    while (Math.abs(curR2 - prevR2) > epsilon) {\r\n      dr = 1.0 + coef * curR2\r\n      prevR2 = curR2\r\n      curR2 = r2 / (dr * dr)\r\n    }\r\n\r\n    return 1.0 / dr\r\n  }\r\n\r\n  const geo = new PlaneBufferGeometry(2.0, 2.0, widthSegments, heightSegements)\r\n\r\n  const pos = geo.getAttribute('position')\r\n  for (let i = 0; i < pos.count; ++i) {\r\n    const x = pos.array[3 * i]\r\n    const y = pos.array[3 * i + 1]\r\n    const c = calcInverseBarrel(x * x + y * y)\r\n    pos.setXY(i, c * x, c * y)\r\n  }\r\n\r\n  return geo\r\n}\r\n\r\nBufferAttribute.prototype.copyAtList = function (attribute, indexList) {\r\n  console.assert(\r\n    this.itemSize === attribute.itemSize,\r\n    'DEBUG: BufferAttribute.copyAtList buffers have different item size.'\r\n  )\r\n  const { itemSize } = this\r\n  for (let i = 0, n = indexList.length; i < n; ++i) {\r\n    for (let j = 0; j < itemSize; ++j) {\r\n      this.array[i * itemSize + j] =\r\n        attribute.array[indexList[i] * itemSize + j]\r\n    }\r\n  }\r\n  return this\r\n}\r\n\r\nfunction fillArray(array, value, startIndex, endIndex) {\r\n  startIndex = typeof startIndex !== 'undefined' ? startIndex : 0\r\n  endIndex = typeof endIndex !== 'undefined' ? endIndex : array.length\r\n  for (let i = startIndex; i < endIndex; ++i) {\r\n    array[i] = value\r\n  }\r\n}\r\n\r\n/** @param {Object3D} object - Parent object. */\r\nfunction removeChildren(object) {\r\n  const { children } = object\r\n  for (let i = 0, n = children.length; i < n; ++i) {\r\n    const child = children[i]\r\n    child.parent = null\r\n    child.dispatchEvent({ type: 'removed' })\r\n  }\r\n  object.children = []\r\n}\r\n\r\nfunction clearTree(object) {\r\n  object.traverse((obj) => {\r\n    if (\r\n      obj instanceof Mesh ||\r\n      obj instanceof LineSegments ||\r\n      obj instanceof Line\r\n    ) {\r\n      obj.geometry.dispose()\r\n    }\r\n  })\r\n  removeChildren(object)\r\n}\r\n\r\nfunction destroyObject(object) {\r\n  clearTree(object)\r\n  if (object.parent) {\r\n    object.parent.remove(object)\r\n  } else {\r\n    object.dispatchEvent({ type: 'removed' })\r\n  }\r\n}\r\n\r\nfunction belongToSelectLayers(object) {\r\n  for (let i = 0; i < SELECTION_LAYERS.length; i++) {\r\n    if (((object.layers.mask >> SELECTION_LAYERS[i]) & 1) === 1) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction processObjRenderOrder(root, idMaterial) {\r\n  // set renderOrder to 0 for Backdrop and to 1 in other cases to render Backdrop earlier all other materials\r\n  const renderOrder = +(idMaterial !== 'BA')\r\n  root.traverse((object) => {\r\n    if (object.isGroup) {\r\n      object.renderOrder = renderOrder\r\n    }\r\n  })\r\n}\r\n\r\nfunction applySelectionMaterial(geo) {\r\n  geo.traverse((node) => {\r\n    if ('material' in node) {\r\n      node.material = node.material.clone(true)\r\n      // using z-offset to magically fix selection rendering artifact (on z-sprites)\r\n      node.material.setValues({\r\n        depthFunc: LessEqualDepth,\r\n        overrideColor: true,\r\n        fog: false,\r\n        lights: false,\r\n        shadowmap: false\r\n      })\r\n      node.material.setUberOptions({\r\n        fixedColor: new Color(0xffff00),\r\n        zOffset: -1e-6\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nfunction getMiddlePoint(point1, point2, optionalTarget) {\r\n  const result = optionalTarget || new Vector3()\r\n\r\n  result.set(0, 0, 0)\r\n  result.addScaledVector(point1, 0.5)\r\n  result.addScaledVector(point2, 0.5)\r\n\r\n  return result\r\n}\r\n\r\n// Monkey-patch for \"InstancedBufferGeometry.instanceCount becomes undefined after copy()\"\r\n// https://github.com/mrdoob/three.js/issues/22151\r\nconst _oldInstancedBufferGeometryCopy = InstancedBufferGeometry.prototype.copy\r\n\r\nInstancedBufferGeometry.prototype.copy = function (source) {\r\n  _oldInstancedBufferGeometryCopy.call(this, source)\r\n  if (this.instanceCount === undefined) {\r\n    this.instanceCount = Infinity\r\n  }\r\n}\r\n\r\nexport default {\r\n  calcCylinderMatrix: _calcCylinderMatrix,\r\n  calcChunkMatrix: _calcChunkMatrix,\r\n  groupHasGeometryToRender: _groupHasGeometryToRender,\r\n  buildDistorionMesh: _buildDistorionMesh,\r\n  RCGroup,\r\n  fillArray,\r\n  clearTree,\r\n  destroyObject,\r\n  belongToSelectLayers,\r\n  processObjRenderOrder,\r\n  applySelectionMaterial,\r\n  getMiddlePoint,\r\n  LAYERS\r\n}\r\n",
		"import gfxutils from './gfx/gfxutils'\r\nimport { Box3, Sphere, Vector3 } from 'three'\r\n\r\nconst _defaultBoundaries = {\r\n  boundingBox: new Box3(new Vector3(-1, -1, -1), new Vector3(1, 1, 1)),\r\n  boundingSphere: new Sphere(new Vector3(0, 0, 0), 1)\r\n}\r\n\r\nclass Visual extends gfxutils.RCGroup {\r\n  constructor(name, dataSource) {\r\n    super(name, dataSource)\r\n    this.name = name\r\n    this._dataSource = dataSource\r\n  }\r\n\r\n  release() {\r\n    if (this.parent) {\r\n      this.parent.remove(this)\r\n    }\r\n  }\r\n\r\n  getDataSource() {\r\n    return this._dataSource\r\n  }\r\n\r\n  getBoundaries() {\r\n    return _defaultBoundaries\r\n  }\r\n}\r\n\r\nexport default Visual\r\n",
		"import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}",
		"export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}",
		"export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}",
		"import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}",
		"function _ensureArray(x) {\r\n  if (x === null || x === undefined || Array.isArray(x)) {\r\n    return x\r\n  }\r\n  return [x]\r\n}\r\n\r\n/** An indexed list of objects or classes. */\r\nclass EntityList {\r\n  /**\r\n   * Create a list of objects.\r\n   * The objects can be indexed by one or more properties for the later retrieval.\r\n   *\r\n   * @param {!Array<Object>=} entities A list of objects to automatically register at creation time.\r\n   * @param {!Array<string>=} indices A list of property names to use for case-insensitive indexing.\r\n   *   By default, a single `.id` property is used.\r\n   * @see EntityList#register\r\n   */\r\n  constructor(entities = [], indices = ['id']) {\r\n    this._list = []\r\n    this._dict = {}\r\n    this._indices = [...indices]\r\n    this._indices.forEach((index) => {\r\n      this._dict[index] = {}\r\n    })\r\n\r\n    entities.forEach((entity) => this.register(entity))\r\n  }\r\n\r\n  /**\r\n   * Add a value to the end of a list.\r\n   * The list will contain only one copy of the value.\r\n   *\r\n   * @param {!Array} list An array.\r\n   * @param {*} value A value to add.\r\n   * @see EntityList.unregisterFromList\r\n   * @see EntityList.registerInDict\r\n   */\r\n  static registerInList(list, value) {\r\n    if (!list.includes(value)) {\r\n      list.push(value)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a value from a list if it is there.\r\n   *\r\n   * @param {!Array} list An array.\r\n   * @param {*} value A value to remove.\r\n   * @see EntityList.registerInList\r\n   */\r\n  static unregisterFromList(list, value) {\r\n    const pos = list.indexOf(value)\r\n    if (pos !== -1) {\r\n      list.splice(pos, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a value to a dictionary.\r\n   * The value may be stored under multiple different keys (aliases).\r\n   * There might be multiples values stored under the same key.\r\n   *\r\n   * @param {!Object<string,*>} dict A dictionary.\r\n   * @param {!Array<string>} keys An array of keys.\r\n   * @param {*} value A value to add.\r\n   * @see EntityList.unregisterFromDict\r\n   * @see EntityList.registerInList\r\n   */\r\n  static registerInDict(dict, keys, value) {\r\n    keys.forEach((key) => {\r\n      key = key.toLowerCase()\r\n      const list = (dict[key] = dict[key] || [])\r\n      if (!list.includes(value)) {\r\n        list.push(value)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Remove a value from a dictionary.\r\n   * The value may be stored under multiple different keys (aliases).\r\n   * There might be multiples values stored under the same key.\r\n   *\r\n   * @param {!Object<string,*>} dict A dictionary.\r\n   * @param {!Array<string>} keys An array of keys.\r\n   * @param {*} value A value to add.\r\n   * @see EntityList.registerInDict\r\n   */\r\n  static unregisterFromDict(dict, keys, value) {\r\n    keys.forEach((key) => {\r\n      key = key.toLowerCase()\r\n      const list = dict[key]\r\n      if (list) {\r\n        const pos = list.indexOf(value)\r\n        if (pos !== -1) {\r\n          list.splice(pos, 1)\r\n        }\r\n        if (list.length === 0) {\r\n          delete dict[key]\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Add an entity to this list.\r\n   *\r\n   * @param {!Object} entity An object or a class to register. The object must include all\r\n   *   properties specified as indices on construction.\r\n   * @see EntityList#unregister\r\n   */\r\n  register(entity) {\r\n    EntityList.registerInList(this._list, entity)\r\n    this._indices.forEach((index) => {\r\n      EntityList.registerInDict(\r\n        this._dict[index],\r\n        _ensureArray(entity[index]),\r\n        entity\r\n      )\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Remove an entity from this list.\r\n   *\r\n   * @param {!Object} entity An object or a class to unregister. The object may be\r\n   *   missing from the list but it must include all properties specified as indices\r\n   *   on construction.\r\n   * @see EntityList#register\r\n   */\r\n  unregister(entity) {\r\n    EntityList.unregisterFromList(this._list, entity)\r\n    this._indices.forEach((index) => {\r\n      EntityList.unregisterFromDict(\r\n        this._dict[index],\r\n        _ensureArray(entity[index]),\r\n        entity\r\n      )\r\n    })\r\n  }\r\n\r\n  /**\r\n   * An ordered list of all registered entities.\r\n   * It is a read-only copy, use {@link EntityList#register} and {@link EntityList#unregister}\r\n   * to modify it.\r\n   *\r\n   * @type {!Array<Object>}\r\n   */\r\n  get all() {\r\n    return [...this._list]\r\n  }\r\n\r\n  /**\r\n   * The first registered entity.\r\n   * Use it if you do not care which entity you are referring to.\r\n   *\r\n   * @type {Object=}\r\n   */\r\n  get first() {\r\n    return this._list[0]\r\n  }\r\n\r\n  /**\r\n   * Retrieve a list of keys for the index.\r\n   *\r\n   * @param {string=} index One of the indices specified during the list construction. If omitted,\r\n   *   the first of the indices is used.\r\n   * @returns {!Array<string>} An unordered list of keys in the index, i.e. particular property\r\n   *   values for all registered entities.\r\n   */\r\n  keys(index) {\r\n    return Object.keys(this._dict[index || this._indices[0]])\r\n  }\r\n\r\n  /**\r\n   * Retrieve an entity by its key.\r\n   *\r\n   * @param {string} key A case-insensitive property value to look-up.\r\n   * @param {string=} index One of the indices specified during the list construction. If omitted,\r\n   *   the first of the indices is used.\r\n   * @returns {Object=} An object registered in the index under the key. If there are multiple\r\n   *   objects under the same key, the first one is returned.\r\n   */\r\n  get(key, index) {\r\n    const dict = this._dict[index || this._indices[0]]\r\n    if (dict) {\r\n      const values = dict[key && key.toLowerCase()]\r\n      return values && values.length > 0 ? values[0] : undefined\r\n    }\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport default EntityList\r\n",
		"import settings from '../settings'\r\nimport logger from './logger'\r\n\r\nfunction makeContextDependent(prototype) {\r\n  Object.defineProperties(prototype, {\r\n    logger: {\r\n      get() {\r\n        return this.context && this.context.logger\r\n          ? this.context.logger\r\n          : logger\r\n      }\r\n    },\r\n    settings: {\r\n      get() {\r\n        return this.context && this.context.settings\r\n          ? this.context.settings\r\n          : settings\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport default makeContextDependent\r\n",
		"import { Box3, Sphere, Vector3 } from 'three'\r\n\r\nclass CollisionSphere {\r\n  constructor(position, radius) {\r\n    this._position = position\r\n    this._radius = radius\r\n  }\r\n\r\n  static _sphere = new Sphere()\r\n\r\n  raycast(raycaster) {\r\n    const sphere = CollisionSphere._sphere\r\n    sphere.set(this._position, this._radius)\r\n\r\n    const p = new Vector3()\r\n    if (raycaster.ray.intersectSphere(sphere, p)) {\r\n      return {\r\n        distance: raycaster.ray.origin.distanceTo(p),\r\n        point: p\r\n      }\r\n    }\r\n    return null\r\n  }\r\n}\r\n\r\nconst SphereCollisionGeo = (base) =>\r\n  class extends base {\r\n    constructor(count, ...args) {\r\n      super(...args)\r\n      this._objects = new Array(count)\r\n      this.boundingSphere = null\r\n      this.boundingBox = null\r\n    }\r\n\r\n    setSphere(idx, position, radius) {\r\n      this._objects[idx] = new CollisionSphere(position, radius)\r\n    }\r\n\r\n    raycast(raycaster, intersects) {\r\n      // TODO raycast with bounding sphere? How to deal with updates?\r\n      for (let i = 0, n = this._objects.length; i < n; ++i) {\r\n        const inters = this._objects[i].raycast(raycaster)\r\n        if (inters) {\r\n          inters.chunkIdx = i\r\n          intersects.push(inters)\r\n        }\r\n      }\r\n    }\r\n\r\n    computeBoundingBox() {\r\n      const objects = this._objects\r\n      let { boundingBox } = this\r\n      if (boundingBox === null) {\r\n        this.boundingBox = boundingBox = new Box3()\r\n      }\r\n      boundingBox.makeEmpty()\r\n      for (let i = 0, n = objects.length; i < n; ++i) {\r\n        boundingBox.expandByPoint(objects[i]._position)\r\n      }\r\n    }\r\n\r\n    computeBoundingSphere() {\r\n      this.computeBoundingBox()\r\n      const objects = this._objects\r\n      const { boundingBox } = this\r\n      // Build bounding sphere\r\n      let radiusSquared = 0.0\r\n      const center = new Vector3()\r\n      boundingBox.getCenter(center)\r\n      for (let i = 0, n = objects.length; i < n; ++i) {\r\n        const pos = objects[i]._position\r\n        const lengthSquared = center.distanceToSquared(pos)\r\n        if (radiusSquared < lengthSquared) {\r\n          radiusSquared = lengthSquared\r\n        }\r\n      }\r\n      if (this.boundingSphere === null) {\r\n        this.boundingSphere = new Sphere()\r\n      }\r\n      this.boundingSphere.set(center, Math.sqrt(radiusSquared))\r\n    }\r\n  }\r\nexport default SphereCollisionGeo\r\n",
		"import {\r\n  Color,\r\n  InstancedBufferAttribute,\r\n  InstancedBufferGeometry,\r\n  PlaneBufferGeometry,\r\n  SphereBufferGeometry\r\n} from 'three'\r\nimport utils from '../../utils'\r\nimport SphereCollisionGeo from './SphereCollisionGeo'\r\nimport { fill } from 'lodash'\r\n\r\nconst tmpColor = new Color()\r\n\r\nconst OFFSET_SIZE = 4\r\nconst COLOR_SIZE = 3\r\nconst { copySubArrays } = utils\r\n\r\nfunction setArrayXYZ(arr, idx, x, y, z) {\r\n  arr[idx] = x\r\n  arr[idx + 1] = y\r\n  arr[idx + 2] = z\r\n}\r\n\r\nfunction setArrayXYZW(arr, idx, x, y, z, w) {\r\n  arr[idx] = x\r\n  arr[idx + 1] = y\r\n  arr[idx + 2] = z\r\n  arr[idx + 3] = w\r\n}\r\nclass InstancedSpheresGeometry extends SphereCollisionGeo(\r\n  InstancedBufferGeometry\r\n) {\r\n  constructor(spheresCount, sphereComplexity, useZSprites) {\r\n    super(spheresCount)\r\n    this._sphGeometry = useZSprites\r\n      ? new PlaneBufferGeometry(2, 2, 1, 1)\r\n      : new SphereBufferGeometry(\r\n          1,\r\n          sphereComplexity * 2,\r\n          sphereComplexity,\r\n          0,\r\n          Math.PI * 2,\r\n          0,\r\n          Math.PI\r\n        )\r\n    this._init(spheresCount, this._sphGeometry)\r\n  }\r\n\r\n  setItem(itemIdx, itemPos, itemRad) {\r\n    setArrayXYZW(\r\n      this._offsets,\r\n      itemIdx * OFFSET_SIZE,\r\n      itemPos.x,\r\n      itemPos.y,\r\n      itemPos.z,\r\n      itemRad\r\n    )\r\n    this.setSphere(itemIdx, itemPos, itemRad)\r\n  }\r\n\r\n  setColor(itemIdx, colorVal) {\r\n    tmpColor.set(colorVal)\r\n    setArrayXYZ(\r\n      this._colors,\r\n      itemIdx * COLOR_SIZE,\r\n      tmpColor.r,\r\n      tmpColor.g,\r\n      tmpColor.b\r\n    )\r\n  }\r\n\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.getAttribute('offset').needsUpdate = true\r\n    this.getAttribute('color').needsUpdate = true\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n    this.computeBoundingSphere()\r\n  }\r\n\r\n  setOpacity(chunkIndices, value) {\r\n    const alphaArr = this._alpha\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      alphaArr[chunkIndices[i]] = value\r\n    }\r\n    this.getAttribute('alphaColor').needsUpdate = true\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const instanceCount = chunkIndices.length\r\n    const geom = new InstancedBufferGeometry()\r\n    this._init.call(geom, instanceCount, this._sphGeometry)\r\n\r\n    copySubArrays(this._offsets, geom._offsets, chunkIndices, OFFSET_SIZE)\r\n    copySubArrays(this._colors, geom._colors, chunkIndices, COLOR_SIZE)\r\n    geom.boundingSphere = this.boundingSphere\r\n    geom.boundingBox = this.boundingBox\r\n    return [geom]\r\n  }\r\n\r\n  _init(spheresCount, sphereGeo) {\r\n    this.copy(sphereGeo)\r\n\r\n    this._offsets = utils.allocateTyped(\r\n      Float32Array,\r\n      spheresCount * OFFSET_SIZE\r\n    )\r\n    this._colors = utils.allocateTyped(Float32Array, spheresCount * COLOR_SIZE)\r\n    const alpha = (this._alpha = utils.allocateTyped(\r\n      Float32Array,\r\n      spheresCount\r\n    ))\r\n    fill(alpha, 1.0)\r\n\r\n    this.setAttribute(\r\n      'offset',\r\n      new InstancedBufferAttribute(this._offsets, OFFSET_SIZE, false, 1)\r\n    )\r\n    this.setAttribute(\r\n      'color',\r\n      new InstancedBufferAttribute(this._colors, COLOR_SIZE, false, 1)\r\n    )\r\n    this.setAttribute(\r\n      'alphaColor',\r\n      new InstancedBufferAttribute(alpha, 1, false, 1)\r\n    )\r\n  }\r\n}\r\nexport default InstancedSpheresGeometry\r\n",
		"import utils from '../../utils'\r\nimport { BufferAttribute, BufferGeometry, Color, Mesh } from 'three'\r\nimport { fill } from 'lodash'\r\n\r\nconst MAX_IDC_16BIT = 65535\r\nconst VEC_SIZE = 3\r\nconst tmpColor = new Color()\r\n\r\n/**\r\n * This class represents geometry which consists of separate chunks.\r\n * Each chunk has same index and similar geometry with equal points and faces count.\r\n * Each chunk has by default only one color.\r\n * @constructor\r\n */\r\n\r\nclass ChunkedObjectsGeometry extends BufferGeometry {\r\n  constructor(chunkGeo, chunksCount) {\r\n    super()\r\n\r\n    if (this.constructor === ChunkedObjectsGeometry) {\r\n      throw new Error('Can not instantiate abstract class!')\r\n    }\r\n\r\n    this._chunkGeo = chunkGeo\r\n\r\n    this._init(chunkGeo, chunksCount)\r\n  }\r\n\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.getAttribute('position').needsUpdate = true\r\n    this.getAttribute('normal').needsUpdate = true\r\n    this.getAttribute('color').needsUpdate = true\r\n  }\r\n\r\n  setColor(chunkIdx, colorVal) {\r\n    tmpColor.set(colorVal)\r\n    const colors = this._colors\r\n    const chunkSize = this._chunkSize\r\n    for (let i = chunkIdx * chunkSize, end = i + chunkSize; i < end; ++i) {\r\n      const idx = i * VEC_SIZE\r\n      colors[idx] = tmpColor.r\r\n      colors[idx + 1] = tmpColor.g\r\n      colors[idx + 2] = tmpColor.b\r\n    }\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n    this.computeBoundingSphere()\r\n  }\r\n\r\n  setOpacity(chunkIndices, value) {\r\n    const alphaArr = this._alpha\r\n    const chunkSize = this._chunkSize\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      const left = chunkIndices[i] * chunkSize\r\n      fill(alphaArr, value, left, left + chunkSize)\r\n    }\r\n    this.getAttribute('alphaColor').needsUpdate = true\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const inters = []\r\n    const mesh = new Mesh()\r\n    mesh.geometry = this\r\n    mesh.raycast(raycaster, inters)\r\n    const facesPerChunk = this._chunkGeo.index.count / 3\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('faceIndex')) {\r\n        continue\r\n      }\r\n      inters[i].chunkIdx = Math.floor(inters[i].faceIndex / facesPerChunk)\r\n      intersects.push(inters[i])\r\n    }\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const instanceCount = chunkIndices.length\r\n    const geom = new BufferGeometry()\r\n    this._init.call(geom, this._chunkGeo, instanceCount)\r\n\r\n    const srcPos = this._positions\r\n    const srcNorm = this._normals\r\n    const srcColor = this._colors\r\n\r\n    const dstPos = geom._positions\r\n    const dstNorm = geom._normals\r\n    const dstColor = geom._colors\r\n\r\n    const chunkSize = this._chunkSize * VEC_SIZE\r\n\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      const dstPtOffset = i * chunkSize\r\n      const ptIdxBegin = chunkIndices[i] * chunkSize\r\n      const ptIdxEnd = ptIdxBegin + chunkSize\r\n      dstPos.set(srcPos.subarray(ptIdxBegin, ptIdxEnd), dstPtOffset)\r\n      dstNorm.set(srcNorm.subarray(ptIdxBegin, ptIdxEnd), dstPtOffset)\r\n      dstColor.set(srcColor.subarray(ptIdxBegin, ptIdxEnd), dstPtOffset)\r\n    }\r\n\r\n    geom.boundingSphere = this.boundingSphere\r\n    geom.boundingBox = this.boundingBox\r\n    return [geom]\r\n  }\r\n\r\n  _init(chunkGeo, chunksCount) {\r\n    const chunkSize = (this._chunkSize = chunkGeo.attributes.position.count)\r\n    const chunkIndex = chunkGeo.index.array\r\n    const chunkIndexSize = chunkIndex.length\r\n    const pointsCount = this._chunkSize * chunksCount\r\n    const use32bitIndex = pointsCount > MAX_IDC_16BIT\r\n    const indexSize = chunkIndexSize * chunksCount\r\n    const index = (this._index = utils.allocateTyped(\r\n      use32bitIndex ? Uint32Array : Uint16Array,\r\n      indexSize\r\n    ))\r\n    this._positions = utils.allocateTyped(Float32Array, pointsCount * VEC_SIZE)\r\n    this._normals = utils.allocateTyped(Float32Array, pointsCount * VEC_SIZE)\r\n    this._colors = utils.allocateTyped(Float32Array, pointsCount * VEC_SIZE)\r\n    const alpha = (this._alpha = utils.allocateTyped(Float32Array, pointsCount))\r\n    fill(alpha, 1.0)\r\n\r\n    for (let i = 0; i < chunksCount; ++i) {\r\n      const offset = i * chunkIndexSize\r\n      const posOffset = i * chunkSize\r\n      index.set(chunkIndex, offset)\r\n      for (let j = 0; j < chunkIndexSize; ++j) {\r\n        index[offset + j] += posOffset\r\n      }\r\n    }\r\n\r\n    this.setIndex(new BufferAttribute(this._index, 1))\r\n    this.setAttribute(\r\n      'position',\r\n      new BufferAttribute(this._positions, VEC_SIZE)\r\n    )\r\n    this.setAttribute('normal', new BufferAttribute(this._normals, VEC_SIZE))\r\n    this.setAttribute('color', new BufferAttribute(this._colors, VEC_SIZE))\r\n    this.setAttribute('alphaColor', new BufferAttribute(alpha, 1))\r\n  }\r\n}\r\nexport default ChunkedObjectsGeometry\r\n",
		"import utils from '../../utils'\r\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry'\r\nimport SphereCollisionGeo from './SphereCollisionGeo'\r\nimport { SphereBufferGeometry } from 'three'\r\n\r\nconst VEC_SIZE = 3\r\n\r\nclass SimpleSpheresGeometry extends SphereCollisionGeo(ChunkedObjectsGeometry) {\r\n  constructor(spheresCount, sphereComplexity) {\r\n    const sphGeometry = new SphereBufferGeometry(\r\n      1,\r\n      sphereComplexity * 2,\r\n      sphereComplexity,\r\n      0,\r\n      Math.PI * 2,\r\n      0,\r\n      Math.PI\r\n    )\r\n    super(spheresCount, sphGeometry, spheresCount)\r\n\r\n    const normals = this._normals\r\n    const geoNormals = sphGeometry.attributes.normal.array\r\n    const chunkSize = this._chunkSize\r\n    this._chunkPos = this._chunkGeo.attributes.position.array\r\n    this._tmpPositions = utils.allocateTyped(Float32Array, chunkSize * VEC_SIZE)\r\n    for (let i = 0; i < spheresCount; ++i) {\r\n      normals.set(geoNormals, chunkSize * VEC_SIZE * i)\r\n    }\r\n  }\r\n\r\n  setItem(itemIdx, itemPos, itemRad) {\r\n    const tmpPos = this._tmpPositions\r\n    const chunkSize = this._chunkSize\r\n    const geoPos = this._chunkPos\r\n\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      const idx = i * 3\r\n      tmpPos[idx] = itemPos.x + geoPos[idx] * itemRad\r\n      tmpPos[idx + 1] = itemPos.y + geoPos[idx + 1] * itemRad\r\n      tmpPos[idx + 2] = itemPos.z + geoPos[idx + 2] * itemRad\r\n    }\r\n\r\n    this._positions.set(tmpPos, chunkSize * itemIdx * VEC_SIZE)\r\n    this.setSphere(itemIdx, itemPos, itemRad)\r\n  }\r\n}\r\nexport default SimpleSpheresGeometry\r\n",
		"import utils from '../../utils'\r\nimport gfxutils from '../gfxutils'\r\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry'\r\nimport { CylinderBufferGeometry, Matrix3, Vector3 } from 'three'\r\n\r\nconst VEC_SIZE = 3\r\nconst centerPos = new Vector3()\r\nconst tmpVector = new Vector3()\r\nconst normMtx = new Matrix3()\r\n\r\nclass Simple2CCylindersGeometry extends ChunkedObjectsGeometry {\r\n  constructor(instanceCount, polyComplexity) {\r\n    const cylGeometry = new CylinderBufferGeometry(\r\n      1,\r\n      1,\r\n      1.0,\r\n      Math.max(3, polyComplexity),\r\n      2,\r\n      true\r\n    )\r\n    super(cylGeometry, 2 * instanceCount)\r\n\r\n    const chunkSize = this._chunkSize\r\n    this._chunkPos = this._chunkGeo.attributes.position.array\r\n    this._chunkNorms = this._chunkGeo.attributes.normal.array\r\n    this._tmpVector = utils.allocateTyped(Float32Array, chunkSize * VEC_SIZE)\r\n  }\r\n\r\n  setItem(itemIdx, botPos, topPos, itemRad) {\r\n    const chunkSize = this._chunkSize\r\n    const firstOffset = chunkSize * 2 * itemIdx * VEC_SIZE\r\n    const secondOffset = firstOffset + chunkSize * VEC_SIZE\r\n\r\n    const tmpArray = this._tmpVector\r\n    const geoPos = this._chunkPos\r\n    const geoNorm = this._chunkNorms\r\n\r\n    centerPos.lerpVectors(botPos, topPos, 0.5)\r\n    const mtx1 = gfxutils.calcCylinderMatrix(botPos, centerPos, itemRad)\r\n    normMtx.getNormalMatrix(mtx1)\r\n\r\n    let idx\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE\r\n      tmpVector.fromArray(geoPos, idx)\r\n      tmpVector.applyMatrix4(mtx1)\r\n      tmpVector.toArray(tmpArray, idx)\r\n    }\r\n    this._positions.set(tmpArray, firstOffset)\r\n\r\n    // now shift center to get another part of the cylinder\r\n    centerPos.sub(botPos)\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE\r\n      tmpArray[idx] += centerPos.x\r\n      tmpArray[idx + 1] += centerPos.y\r\n      tmpArray[idx + 2] += centerPos.z\r\n    }\r\n    this._positions.set(tmpArray, secondOffset)\r\n\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE\r\n      tmpVector.fromArray(geoNorm, idx)\r\n      tmpVector.applyMatrix3(normMtx)\r\n      tmpVector.toArray(tmpArray, idx)\r\n    }\r\n    this._normals.set(tmpArray, firstOffset)\r\n    this._normals.set(tmpArray, secondOffset)\r\n  }\r\n\r\n  setColor(itemIdx, colorVal1, colorVal2) {\r\n    const first = 2 * itemIdx\r\n    super.setColor(first, colorVal1)\r\n\r\n    const second = first + 1\r\n    super.setColor(second, colorVal2)\r\n  }\r\n}\r\n\r\nexport default Simple2CCylindersGeometry\r\n",
		"import utils from '../../utils'\r\nimport {\r\n  BufferAttribute,\r\n  BufferGeometry,\r\n  Uint16BufferAttribute,\r\n  Vector3\r\n} from 'three'\r\n\r\nconst MAX_POINTS_COUNT_16BIT = 65536\r\nconst PTS_PER_TRIANGLE = 3\r\n\r\nclass CylinderBufferGeometry extends BufferGeometry {\r\n  constructor(\r\n    radiusTop,\r\n    radiusBottom,\r\n    height,\r\n    radialSegments,\r\n    heightSegments,\r\n    openEnded\r\n  ) {\r\n    super()\r\n\r\n    const thetaStart = 0\r\n    const thetaLength = 2 * Math.PI\r\n\r\n    this.type = 'CylinderBufferGeometry'\r\n\r\n    this.parameters = {\r\n      radiusTop,\r\n      radiusBottom,\r\n      height,\r\n      radialSegments,\r\n      heightSegments,\r\n      openEnded\r\n    }\r\n\r\n    const hasTop = openEnded === false && radiusTop > 0\r\n    const hasBottom = openEnded === false && radiusBottom > 0\r\n    const vertexCount =\r\n      (heightSegments + 1) * radialSegments +\r\n      hasTop * (radialSegments + 1) +\r\n      hasBottom * (radialSegments + 1)\r\n    const facesCount =\r\n      (2 * heightSegments + hasTop + hasBottom) * radialSegments\r\n\r\n    const heightHalf = height / 2\r\n\r\n    /* eslint-disable no-magic-numbers */\r\n    const positions = new BufferAttribute(\r\n      utils.allocateTyped(Float32Array, vertexCount * 3),\r\n      3\r\n    )\r\n    const normals = new BufferAttribute(\r\n      utils.allocateTyped(Float32Array, vertexCount * 3),\r\n      3\r\n    )\r\n    const indices = new Uint16BufferAttribute(\r\n      utils.allocateTyped(Uint16Array, facesCount * PTS_PER_TRIANGLE),\r\n      1\r\n    )\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    const uvs = new BufferAttribute(\r\n      utils.allocateTyped(Float32Array, vertexCount * 2),\r\n      2\r\n    )\r\n    console.assert(\r\n      vertexCount < MAX_POINTS_COUNT_16BIT,\r\n      'DEBUG: Cylinder Geometry has too many vertices (65536 max).'\r\n    )\r\n\r\n    let currVtxIdx = 0\r\n    let currFaceIdx = 0\r\n    const tanTheta = -(radiusBottom - radiusTop) / height\r\n\r\n    // setup cylinder data\r\n    for (let y = 0; y <= heightSegments; y++) {\r\n      // faces\r\n      if (y !== heightSegments) {\r\n        for (let i = 0; i < radialSegments; i++) {\r\n          const v1 = currVtxIdx + i\r\n          const v2 = currVtxIdx + radialSegments + i\r\n          const v3 = currVtxIdx + radialSegments + ((i + 1) % radialSegments)\r\n          const v4 = currVtxIdx + ((i + 1) % radialSegments)\r\n\r\n          indices.setXYZ(currFaceIdx * PTS_PER_TRIANGLE, v1, v4, v2)\r\n          currFaceIdx++\r\n          indices.setXYZ(currFaceIdx * PTS_PER_TRIANGLE, v2, v4, v3)\r\n          currFaceIdx++\r\n        }\r\n      }\r\n\r\n      // vertices\r\n      const v = y / heightSegments\r\n      const radius = v * (radiusBottom - radiusTop) + radiusTop\r\n\r\n      for (let x = 0; x < radialSegments; x++) {\r\n        const u = x / radialSegments\r\n\r\n        const vx = radius * Math.sin(u * thetaLength + thetaStart)\r\n        const vy = v * height - heightHalf\r\n        const vz = radius * Math.cos(u * thetaLength + thetaStart)\r\n\r\n        const normal = new Vector3(\r\n          vx,\r\n          Math.sqrt(vx * vx + vz * vz) * tanTheta,\r\n          vz\r\n        ).normalize()\r\n\r\n        positions.setXYZ(currVtxIdx, vx, vy, vz)\r\n        normals.setXYZ(currVtxIdx, normal.x, normal.y, normal.z)\r\n        uvs.setXY(currVtxIdx, u, v)\r\n        ++currVtxIdx\r\n      }\r\n    }\r\n\r\n    // top cap\r\n    if (hasTop) {\r\n      const startTIdx = currVtxIdx\r\n      const lastIdx = currVtxIdx + radialSegments\r\n      for (let fTIdx = 0; fTIdx < radialSegments; ++fTIdx) {\r\n        const currSrcIdx = currVtxIdx - radialSegments\r\n        positions.setXYZ(\r\n          currVtxIdx,\r\n          positions.getX(currSrcIdx),\r\n          positions.getY(currSrcIdx),\r\n          positions.getZ(currSrcIdx)\r\n        )\r\n        normals.setXYZ(currVtxIdx, 0, 1, 0)\r\n        uvs.setXY(currVtxIdx, 1, 1)\r\n\r\n        const nextTVtx = startTIdx + ((fTIdx + 1) % radialSegments)\r\n        indices.setXYZ(\r\n          currFaceIdx * PTS_PER_TRIANGLE,\r\n          currVtxIdx,\r\n          nextTVtx,\r\n          lastIdx\r\n        )\r\n        currFaceIdx++\r\n        currVtxIdx++\r\n      }\r\n\r\n      positions.setXYZ(currVtxIdx, 0, heightHalf, 0)\r\n      normals.setXYZ(currVtxIdx, 0, 1, 0)\r\n      uvs.setXY(currVtxIdx, 1, 1)\r\n      ++currVtxIdx\r\n    }\r\n\r\n    // bottom cap\r\n    if (hasBottom) {\r\n      const startBIdx = currVtxIdx\r\n      const lastBIdx = currVtxIdx + radialSegments\r\n      for (let fBIdx = 0; fBIdx < radialSegments; ++fBIdx) {\r\n        const currSrcBIdx = fBIdx\r\n        positions.setXYZ(\r\n          currVtxIdx,\r\n          positions.getX(currSrcBIdx),\r\n          positions.getY(currSrcBIdx),\r\n          positions.getZ(currSrcBIdx)\r\n        )\r\n        normals.setXYZ(currVtxIdx, 0, -1, 0)\r\n        uvs.setXY(currVtxIdx, 0, 0)\r\n\r\n        const nextBVtx = startBIdx + ((fBIdx + 1) % radialSegments)\r\n        indices.setXYZ(\r\n          currFaceIdx * PTS_PER_TRIANGLE,\r\n          nextBVtx,\r\n          currVtxIdx,\r\n          lastBIdx\r\n        )\r\n        currFaceIdx++\r\n        currVtxIdx++\r\n      }\r\n\r\n      positions.setXYZ(currVtxIdx, 0, -heightHalf, 0)\r\n      normals.setXYZ(currVtxIdx, 0, -1, 0)\r\n      uvs.setXY(currVtxIdx, 0, 0)\r\n    }\r\n\r\n    this.setIndex(indices)\r\n    this.setAttribute('position', positions)\r\n    this.setAttribute('normal', normals)\r\n    this.setAttribute('uv', uvs)\r\n  }\r\n\r\n  clone() {\r\n    const { parameters } = this\r\n\r\n    return new CylinderBufferGeometry(\r\n      parameters.radiusTop,\r\n      parameters.radiusBottom,\r\n      parameters.height,\r\n      parameters.radialSegments,\r\n      parameters.heightSegments,\r\n      parameters.openEnded\r\n    )\r\n  }\r\n}\r\n\r\nexport default CylinderBufferGeometry\r\n",
		"import {\r\n  Color,\r\n  InstancedBufferAttribute,\r\n  InstancedBufferGeometry,\r\n  Matrix4,\r\n  PlaneBufferGeometry\r\n} from 'three'\r\nimport utils from '../../utils'\r\nimport gfxutils from '../gfxutils'\r\nimport Simple2CCylindersGeometry from './Simple2CCylindersGeometry'\r\nimport CylinderBufferGeometry from './CylinderBufferGeometry'\r\nimport { fill } from 'lodash'\r\n\r\nconst tmpColor = new Color()\r\nconst invMatrix = new Matrix4()\r\n\r\nconst OFFSET_SIZE = 4\r\nconst COLOR_SIZE = 3\r\nconst { copySubArrays } = utils\r\n\r\nfunction setArrayXYZ(arr, idx, x, y, z) {\r\n  arr[idx] = x\r\n  arr[idx + 1] = y\r\n  arr[idx + 2] = z\r\n}\r\n\r\nfunction setArrayXYZW(arr, idx, x, y, z, w) {\r\n  arr[idx] = x\r\n  arr[idx + 1] = y\r\n  arr[idx + 2] = z\r\n  arr[idx + 3] = w\r\n}\r\n\r\nfunction sortNumber(a, b) {\r\n  return a - b\r\n}\r\n\r\nfunction _prepareCylinderInfo(chunkIndices) {\r\n  chunkIndices.sort(sortNumber)\r\n  const chunksIdx = []\r\n  const cylinderInfo = []\r\n  for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n    const val = chunkIndices[i]\r\n    const even = (val | 0) % 2 === 0\r\n    const newPar = {\r\n      first: false,\r\n      second: false\r\n    }\r\n    if (even) {\r\n      newPar.first = true\r\n      newPar.second = i + 1 < n && chunkIndices[i + 1] === chunkIndices[i] + 1\r\n      if (newPar.second) {\r\n        ++i\r\n      }\r\n    } else {\r\n      newPar.second = true\r\n    }\r\n    chunksIdx.push(Math.floor(val / 2))\r\n    cylinderInfo.push(newPar)\r\n  }\r\n  return { indices: chunksIdx, cylinderInfo }\r\n}\r\n\r\nfunction _assignOpacity(cylinderInfo, color1, color2) {\r\n  for (let i = 0, n = cylinderInfo.length; i < n; ++i) {\r\n    const info = cylinderInfo[i]\r\n    if (!info.first) {\r\n      color1[COLOR_SIZE * i] = -0.5\r\n    }\r\n    if (!info.second) {\r\n      color2[COLOR_SIZE * i] = -0.5\r\n    }\r\n  }\r\n}\r\nclass Instanced2CCylindersGeometry extends InstancedBufferGeometry {\r\n  constructor(instanceCount, polyComplexity, useZSprites, openEnded) {\r\n    super()\r\n    this._useZSprites = useZSprites\r\n    this._cylGeometry = useZSprites\r\n      ? new PlaneBufferGeometry(2, 2, 1, 1)\r\n      : new CylinderBufferGeometry(\r\n          1,\r\n          1,\r\n          1.0,\r\n          Math.max(3, polyComplexity),\r\n          2,\r\n          openEnded\r\n        )\r\n    this._init(instanceCount, this._cylGeometry, this._useZSprites)\r\n\r\n    this._collisionGeo = new Simple2CCylindersGeometry(instanceCount, 3)\r\n  }\r\n\r\n  setItem(itemIdx, botPos, topPos, itemRad) {\r\n    const matrix = gfxutils.calcCylinderMatrix(botPos, topPos, itemRad)\r\n    let me = matrix.elements\r\n    const mtxOffset = itemIdx * OFFSET_SIZE\r\n\r\n    this._collisionGeo.setItem(itemIdx, botPos, topPos, itemRad)\r\n    setArrayXYZW(this._matVector1, mtxOffset, me[0], me[4], me[8], me[12])\r\n    setArrayXYZW(this._matVector2, mtxOffset, me[1], me[5], me[9], me[13])\r\n    setArrayXYZW(this._matVector3, mtxOffset, me[2], me[6], me[10], me[14])\r\n\r\n    if (this._useZSprites) {\r\n      invMatrix.copy(matrix).invert()\r\n      me = invMatrix.elements\r\n      setArrayXYZW(this._invmatVector1, mtxOffset, me[0], me[4], me[8], me[12])\r\n      setArrayXYZW(this._invmatVector2, mtxOffset, me[1], me[5], me[9], me[13])\r\n      setArrayXYZW(this._invmatVector3, mtxOffset, me[2], me[6], me[10], me[14])\r\n    }\r\n  }\r\n\r\n  setColor(itemIdx, colorVal1, colorVal2) {\r\n    const colorIdx = itemIdx * COLOR_SIZE\r\n    tmpColor.set(colorVal1)\r\n    setArrayXYZ(this._color1, colorIdx, tmpColor.r, tmpColor.g, tmpColor.b)\r\n    tmpColor.set(colorVal2)\r\n    setArrayXYZ(this._color2, colorIdx, tmpColor.r, tmpColor.g, tmpColor.b)\r\n  }\r\n\r\n  computeBoundingSphere() {\r\n    this._collisionGeo.computeBoundingSphere()\r\n    this.boundingSphere = this._collisionGeo.boundingSphere\r\n  }\r\n\r\n  computeBoundingBox() {\r\n    this._collisionGeo.computeBoundingBox()\r\n    this.boundingBox = this._collisionGeo.boundingBox\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    this._collisionGeo.raycast(raycaster, intersects)\r\n  }\r\n\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.getAttribute('matVector1').needsUpdate = true\r\n    this.getAttribute('matVector2').needsUpdate = true\r\n    this.getAttribute('matVector3').needsUpdate = true\r\n    this.getAttribute('color').needsUpdate = true\r\n    this.getAttribute('color2').needsUpdate = true\r\n    this.getAttribute('alphaColor').needsUpdate = true\r\n    if (this._useZSprites) {\r\n      this.getAttribute('invmatVector1').needsUpdate = true\r\n      this.getAttribute('invmatVector2').needsUpdate = true\r\n      this.getAttribute('invmatVector3').needsUpdate = true\r\n    }\r\n\r\n    this._collisionGeo.finishUpdate()\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n    this.computeBoundingSphere()\r\n  }\r\n\r\n  setOpacity(chunkIndices, value) {\r\n    const alphaArr = this._alpha\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      alphaArr[Math.floor(chunkIndices[i] / 2)] = value\r\n    }\r\n    this.getAttribute('alphaColor').needsUpdate = true\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const info = _prepareCylinderInfo(chunkIndices)\r\n    const cylinderIndices = info.indices\r\n    const instanceCount = cylinderIndices.length\r\n    const geom = new InstancedBufferGeometry()\r\n    this._init.call(geom, instanceCount, this._cylGeometry, this._useZSprites)\r\n\r\n    copySubArrays(\r\n      this._matVector1,\r\n      geom._matVector1,\r\n      cylinderIndices,\r\n      OFFSET_SIZE\r\n    )\r\n    copySubArrays(\r\n      this._matVector2,\r\n      geom._matVector2,\r\n      cylinderIndices,\r\n      OFFSET_SIZE\r\n    )\r\n    copySubArrays(\r\n      this._matVector3,\r\n      geom._matVector3,\r\n      cylinderIndices,\r\n      OFFSET_SIZE\r\n    )\r\n\r\n    if (this._useZSprites) {\r\n      copySubArrays(\r\n        this._invmatVector1,\r\n        geom._invmatVector1,\r\n        cylinderIndices,\r\n        OFFSET_SIZE\r\n      )\r\n      copySubArrays(\r\n        this._invmatVector2,\r\n        geom._invmatVector2,\r\n        cylinderIndices,\r\n        OFFSET_SIZE\r\n      )\r\n      copySubArrays(\r\n        this._invmatVector3,\r\n        geom._invmatVector3,\r\n        cylinderIndices,\r\n        OFFSET_SIZE\r\n      )\r\n    }\r\n\r\n    copySubArrays(this._color1, geom._color1, cylinderIndices, COLOR_SIZE)\r\n    copySubArrays(this._color2, geom._color2, cylinderIndices, COLOR_SIZE)\r\n    _assignOpacity(info.cylinderInfo, geom._color1, geom._color2)\r\n    geom.boundingSphere = this.boundingSphere\r\n    geom.boundingBox = this.boundingBox\r\n    return [geom]\r\n  }\r\n\r\n  getGeoParams() {\r\n    return this._cylGeometry.parameters\r\n  }\r\n\r\n  _init(instanceCount, cylinderGeo, useZSprites) {\r\n    this.copy(cylinderGeo)\r\n    this._matVector1 = utils.allocateTyped(\r\n      Float32Array,\r\n      instanceCount * OFFSET_SIZE\r\n    )\r\n    this._matVector2 = utils.allocateTyped(\r\n      Float32Array,\r\n      instanceCount * OFFSET_SIZE\r\n    )\r\n    this._matVector3 = utils.allocateTyped(\r\n      Float32Array,\r\n      instanceCount * OFFSET_SIZE\r\n    )\r\n    this._color1 = utils.allocateTyped(Float32Array, instanceCount * COLOR_SIZE)\r\n    this._color2 = utils.allocateTyped(Float32Array, instanceCount * COLOR_SIZE)\r\n    const alpha = (this._alpha = utils.allocateTyped(\r\n      Float32Array,\r\n      instanceCount\r\n    ))\r\n    fill(alpha, 1.0)\r\n\r\n    this.setAttribute(\r\n      'matVector1',\r\n      new InstancedBufferAttribute(this._matVector1, OFFSET_SIZE, false, 1)\r\n    )\r\n    this.setAttribute(\r\n      'matVector2',\r\n      new InstancedBufferAttribute(this._matVector2, OFFSET_SIZE, false, 1)\r\n    )\r\n    this.setAttribute(\r\n      'matVector3',\r\n      new InstancedBufferAttribute(this._matVector3, OFFSET_SIZE, false, 1)\r\n    )\r\n    this.setAttribute(\r\n      'color',\r\n      new InstancedBufferAttribute(this._color1, COLOR_SIZE, false, 1)\r\n    )\r\n    this.setAttribute(\r\n      'color2',\r\n      new InstancedBufferAttribute(this._color2, COLOR_SIZE, false, 1)\r\n    )\r\n\r\n    this.setAttribute(\r\n      'alphaColor',\r\n      new InstancedBufferAttribute(this._alpha, 1, false, 1)\r\n    )\r\n\r\n    if (useZSprites) {\r\n      this._invmatVector1 = utils.allocateTyped(\r\n        Float32Array,\r\n        instanceCount * OFFSET_SIZE\r\n      )\r\n      this._invmatVector2 = utils.allocateTyped(\r\n        Float32Array,\r\n        instanceCount * OFFSET_SIZE\r\n      )\r\n      this._invmatVector3 = utils.allocateTyped(\r\n        Float32Array,\r\n        instanceCount * OFFSET_SIZE\r\n      )\r\n\r\n      this.setAttribute(\r\n        'invmatVector1',\r\n        new InstancedBufferAttribute(this._invmatVector1, OFFSET_SIZE, false, 1)\r\n      )\r\n      this.setAttribute(\r\n        'invmatVector2',\r\n        new InstancedBufferAttribute(this._invmatVector2, OFFSET_SIZE, false, 1)\r\n      )\r\n      this.setAttribute(\r\n        'invmatVector3',\r\n        new InstancedBufferAttribute(this._invmatVector3, OFFSET_SIZE, false, 1)\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Instanced2CCylindersGeometry\r\n",
		"import utils from '../../utils'\r\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry'\r\nimport { BufferAttribute, BufferGeometry, Vector3 } from 'three'\r\n\r\nconst VEC_SIZE = 3\r\nconst TRI_SIZE = 3\r\nconst tmpPrev = new Vector3()\r\nconst tmpNext = new Vector3()\r\nconst tmpRes = new Vector3()\r\nconst simpleNormal = new Vector3(1.0, 0.0, 0.0)\r\nconst normalOnCut = new Vector3()\r\nconst nearRingPt = new Vector3()\r\n\r\nfunction _createExtrudedChunkGeometry(shape, ringsCount) {\r\n  const geo = new BufferGeometry()\r\n  const ptsCount = shape.length\r\n  const totalPts = ptsCount * ringsCount\r\n  const type = totalPts <= 65536 ? Uint16Array : Uint32Array\r\n  const facesPerChunk = (ringsCount - 1) * ptsCount * 2\r\n  const indices = new BufferAttribute(\r\n    utils.allocateTyped(type, facesPerChunk * TRI_SIZE),\r\n    1\r\n  )\r\n\r\n  let currVtxIdx = 0\r\n  let currFaceIdx = 0\r\n  for (let y = 0; y < ringsCount; y++) {\r\n    // faces\r\n    if (y !== ringsCount - 1) {\r\n      for (let i = 0; i < ptsCount; i++) {\r\n        const v1 = currVtxIdx + i\r\n        const v2 = currVtxIdx + ptsCount + i\r\n        const v3 = currVtxIdx + ptsCount + ((i + 1) % ptsCount)\r\n        const v4 = currVtxIdx + ((i + 1) % ptsCount)\r\n\r\n        indices.setXYZ(currFaceIdx * TRI_SIZE, v1, v4, v2)\r\n        currFaceIdx++\r\n        indices.setXYZ(currFaceIdx * TRI_SIZE, v2, v4, v3)\r\n        currFaceIdx++\r\n      }\r\n    }\r\n\r\n    currVtxIdx += ptsCount\r\n  }\r\n\r\n  geo.setIndex(indices)\r\n  const pos = utils.allocateTyped(Float32Array, totalPts * VEC_SIZE)\r\n  geo.setAttribute('position', new BufferAttribute(pos, VEC_SIZE))\r\n\r\n  geo._positions = shape\r\n\r\n  return geo\r\n}\r\n\r\nclass ExtrudedObjectsGeometry extends ChunkedObjectsGeometry {\r\n  constructor(shape, ringsCount, chunksCount) {\r\n    const chunkGeo = _createExtrudedChunkGeometry(shape, ringsCount)\r\n    super(chunkGeo, chunksCount)\r\n    this._ringsCount = ringsCount\r\n\r\n    const tmpShape = (this._tmpShape = [])\r\n    for (let i = 0; i < shape.length; ++i) {\r\n      tmpShape[i] = new Vector3()\r\n    }\r\n  }\r\n\r\n  setItem(itemIdx, matrices, hasSlope = false, hasCut = false) {\r\n    const ptsCount = this._chunkGeo._positions.length\r\n    const ringsCount = this._ringsCount\r\n    const chunkStartIdx = ptsCount * this._ringsCount * itemIdx * VEC_SIZE\r\n\r\n    this._setPoints(matrices, ptsCount, ringsCount, chunkStartIdx)\r\n\r\n    if (hasSlope) {\r\n      this._setSlopeNormals(ptsCount, ringsCount, chunkStartIdx)\r\n    } else {\r\n      this._setBaseNormals(ptsCount, ringsCount, chunkStartIdx)\r\n    }\r\n\r\n    if (hasCut) {\r\n      this._addCut(ptsCount, ringsCount, chunkStartIdx)\r\n    }\r\n  }\r\n\r\n  _setPoints(matrices, ptsCount, ringsCount, chunkStartIdx) {\r\n    const tmpShape = this._tmpShape\r\n    const positions = this._positions\r\n    const shape = this._chunkGeo._positions\r\n\r\n    for (let i = 0, vtxIdx = chunkStartIdx; i < ringsCount; ++i) {\r\n      const mtx = matrices[i]\r\n\r\n      for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n        tmpShape[j].copy(shape[j]).applyMatrix4(mtx).toArray(positions, vtxIdx)\r\n      }\r\n    }\r\n  }\r\n\r\n  _setBaseNormals(ptsCount, ringsCount, chunkStartIdx) {\r\n    const nPtsInRing = ptsCount * VEC_SIZE\r\n\r\n    for (\r\n      let i = 0, vtxIdx = chunkStartIdx;\r\n      i < ringsCount;\r\n      ++i, vtxIdx += nPtsInRing\r\n    ) {\r\n      this._countNormalsInRing(ptsCount, vtxIdx, false)\r\n    }\r\n  }\r\n\r\n  _setSlopeNormals(ptsCount, ringsCount, chunkStartIdx) {\r\n    const normals = this._normals\r\n    const nPtsInRing = ptsCount * VEC_SIZE\r\n\r\n    let vtxIdx = chunkStartIdx\r\n    // First ring\r\n    // In all cases, besides cut, second ring is coincident to first. So values of first ring's normals doesn't\r\n    // matter (In the cut case special handler will be applied later and will set them to correct values)\r\n    for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n      simpleNormal.toArray(normals, vtxIdx)\r\n    }\r\n    // second ring\r\n    // If it isn't first Item we take normals' values from the last ring of the previous item (these rings are coincident)\r\n    // else we count normals' values based on next ring information\r\n    if (vtxIdx - 2 * nPtsInRing > 0) {\r\n      for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n        tmpRes\r\n          .fromArray(normals, vtxIdx - 2 * nPtsInRing)\r\n          .toArray(normals, vtxIdx)\r\n      }\r\n    } else {\r\n      this._countNormalsInRing(ptsCount, vtxIdx, true, +nPtsInRing)\r\n      vtxIdx += nPtsInRing\r\n    }\r\n    // other rings\r\n    // we count normals' values based on previous ring information\r\n    for (let i = 2; i < ringsCount; ++i, vtxIdx += nPtsInRing) {\r\n      this._countNormalsInRing(ptsCount, vtxIdx, true, -nPtsInRing)\r\n    }\r\n  }\r\n\r\n  // Counting normals:\r\n  // - Slope\r\n  //   Radius changes throught part => normals aren't parallel with the plane contains section points\r\n  //   normal = vTangentInSectionPlane x vToSuchPointInPrevSection (all vectors are scaled for being 1 in length)\r\n  // - No slope\r\n  //   Radius doesn't change throught part => normals are parallel with the plane contains section points\r\n  //   normal = vToPrevPointInSection + vToNextPointInSection (all vectors are scaled for being 1 in length)\r\n  _countNormalsInRing(ptsCount, vtxIdx, isSlope, shiftToExtraPt) {\r\n    const tmpShape = this._tmpShape\r\n    const normals = this._normals\r\n\r\n    tmpShape[0].fromArray(this._positions, vtxIdx)\r\n    tmpShape[ptsCount - 1].fromArray(\r\n      this._positions,\r\n      vtxIdx + (ptsCount - 1) * VEC_SIZE\r\n    )\r\n\r\n    for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n      if (j < ptsCount - 1) {\r\n        tmpShape[j + 1].fromArray(this._positions, vtxIdx + VEC_SIZE)\r\n      }\r\n\r\n      if (isSlope) {\r\n        nearRingPt.fromArray(this._positions, vtxIdx + shiftToExtraPt)\r\n\r\n        tmpPrev\r\n          .subVectors(\r\n            tmpShape[(j + ptsCount - 1) % ptsCount],\r\n            tmpShape[(j + 1) % ptsCount]\r\n          )\r\n          .normalize()\r\n        tmpNext.subVectors(tmpShape[j], nearRingPt).normalize()\r\n        tmpRes\r\n          .crossVectors(tmpNext, tmpPrev)\r\n          .normalize()\r\n          .toArray(normals, vtxIdx)\r\n      } else {\r\n        tmpPrev\r\n          .subVectors(tmpShape[j], tmpShape[(j + ptsCount - 1) % ptsCount])\r\n          .normalize()\r\n        tmpNext\r\n          .subVectors(tmpShape[j], tmpShape[(j + 1) % ptsCount])\r\n          .normalize()\r\n        tmpRes.addVectors(tmpPrev, tmpNext).normalize().toArray(normals, vtxIdx)\r\n      }\r\n    }\r\n  }\r\n\r\n  _addCut(ptsCount, ringsCount, chunkStartIdx) {\r\n    // Nothing to do if item is flat or only line\r\n    if (ptsCount < 3 || ringsCount < 2) {\r\n      return\r\n    }\r\n    const positions = this._positions\r\n    const normals = this._normals\r\n    const tmpShape = this._tmpShape\r\n    const nPtsInRing = ptsCount * VEC_SIZE\r\n\r\n    // Normal to the cut plane is equal to cross product of two vectors which are lying in it\r\n    tmpShape[0].fromArray(positions, chunkStartIdx)\r\n    tmpShape[1].fromArray(positions, chunkStartIdx + VEC_SIZE)\r\n    tmpShape[2].fromArray(positions, chunkStartIdx + 2 * VEC_SIZE)\r\n\r\n    tmpPrev.subVectors(tmpShape[1], tmpShape[0]).normalize()\r\n    tmpNext.subVectors(tmpShape[1], tmpShape[2]).normalize()\r\n    normalOnCut.crossVectors(tmpPrev, tmpNext).normalize()\r\n\r\n    let vtxIdx = chunkStartIdx\r\n    // First and second rings normals' values are equal to value of normal to the cutting plane\r\n    for (let j = 0; j < ptsCount * 2; ++j, vtxIdx += VEC_SIZE) {\r\n      normalOnCut.toArray(normals, vtxIdx)\r\n    }\r\n    if (ringsCount > 2) {\r\n      // Third ring points are coincident to first ring points, but have different normals. It makes sharp angle near cut\r\n      for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n        tmpRes\r\n          .fromArray(positions, vtxIdx - nPtsInRing)\r\n          .toArray(positions, vtxIdx)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ExtrudedObjectsGeometry\r\n",
		"import utils from '../../utils'\r\nimport { Vector3, Color, BufferGeometry, BufferAttribute } from 'three'\r\nimport { fill } from 'lodash'\r\n\r\nconst MAX_IDC_16BIT = 65535\r\nconst VERTEX_PER_SEGMENT = 4\r\nconst POS_SIZE = 4\r\nconst DIR_SIZE = 3\r\nconst COL_SIZE = 3\r\nconst tmpColor = new Color()\r\nconst direction = new Vector3()\r\n\r\nfunction setArrayXYZ(arr, idx, x, y, z) {\r\n  arr[idx] = x\r\n  arr[idx + 1] = y\r\n  arr[idx + 2] = z\r\n}\r\n\r\nfunction setArrayXYZW(arr, idx, x, y, z, w) {\r\n  arr[idx] = x\r\n  arr[idx + 1] = y\r\n  arr[idx + 2] = z\r\n  arr[idx + 3] = w\r\n}\r\n\r\nfunction getSubset(arr, startSegmentIdx, segmentsCount, elemSize) {\r\n  const start = startSegmentIdx * VERTEX_PER_SEGMENT\r\n  const end = start + segmentsCount * VERTEX_PER_SEGMENT\r\n  return arr.subarray(start * elemSize, end * elemSize)\r\n}\r\n\r\n/**\r\n * This class represents lines geometry which consists of screen-aligned narrow quad of variable width.\r\n *\r\n * @constructor\r\n *\r\n * @param {number}  segmentsCount   Number of segments per chunk.\r\n * collision geometry.\r\n */\r\n\r\nclass ThickLinesGeometry extends BufferGeometry {\r\n  constructor(segmentsCount) {\r\n    super()\r\n    this._initVertices(segmentsCount)\r\n  }\r\n\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.getAttribute('position').needsUpdate = true\r\n    this.getAttribute('color').needsUpdate = true\r\n    this.getAttribute('alphaColor').needsUpdate = true\r\n    this.getAttribute('direction').needsUpdate = true\r\n  }\r\n\r\n  setColor(segmentIdx, colorVal) {\r\n    tmpColor.set(colorVal)\r\n    let idx = segmentIdx * VERTEX_PER_SEGMENT * COL_SIZE\r\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b)\r\n    idx += COL_SIZE\r\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b)\r\n    idx += COL_SIZE\r\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b)\r\n    idx += COL_SIZE\r\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b)\r\n  }\r\n\r\n  setSegment(segmentIdx, pos1, pos2) {\r\n    direction.subVectors(pos1, pos2)\r\n    direction.normalize()\r\n    const positions = this._positions\r\n    const directions = this._directions\r\n    let idx = segmentIdx * VERTEX_PER_SEGMENT * POS_SIZE\r\n    let dirIdx = segmentIdx * VERTEX_PER_SEGMENT * DIR_SIZE\r\n    setArrayXYZW(positions, idx, pos1.x, pos1.y, pos1.z, 0.5)\r\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z)\r\n    idx += POS_SIZE\r\n    dirIdx += DIR_SIZE\r\n    setArrayXYZW(positions, idx, pos1.x, pos1.y, pos1.z, -0.5)\r\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z)\r\n    idx += POS_SIZE\r\n    dirIdx += DIR_SIZE\r\n    setArrayXYZW(positions, idx, pos2.x, pos2.y, pos2.z, 0.5)\r\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z)\r\n    idx += POS_SIZE\r\n    dirIdx += DIR_SIZE\r\n    setArrayXYZW(positions, idx, pos2.x, pos2.y, pos2.z, -0.5)\r\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z)\r\n  }\r\n\r\n  setOpacity(startSegIdx, endSegIdx, value) {\r\n    const start = startSegIdx * VERTEX_PER_SEGMENT\r\n    const end = endSegIdx * VERTEX_PER_SEGMENT\r\n    fill(this.alpha, value, end, start)\r\n    this.getAttribute('alphaColor').needsUpdate = true\r\n  }\r\n\r\n  getSubsetSegments(startSegmentIdx, segmentsCount) {\r\n    return [\r\n      getSubset(this._positions, startSegmentIdx, segmentsCount, POS_SIZE),\r\n      getSubset(this._directions, startSegmentIdx, segmentsCount, DIR_SIZE)\r\n    ]\r\n  }\r\n\r\n  getSubsetColors(startSegmentIdx, segmentsCount) {\r\n    return getSubset(this._colors, startSegmentIdx, segmentsCount, COL_SIZE)\r\n  }\r\n\r\n  getSubsetOpacities(startSegmentIdx, segmentsCount) {\r\n    return getSubset(this._alpha, startSegmentIdx, segmentsCount, 1)\r\n  }\r\n\r\n  getNumVertexPerSegment() {\r\n    return VERTEX_PER_SEGMENT\r\n  }\r\n\r\n  getPositionSize() {\r\n    return POS_SIZE\r\n  }\r\n\r\n  setSegments(startSegmentIdx, positions) {\r\n    const startPos = startSegmentIdx * VERTEX_PER_SEGMENT * POS_SIZE\r\n    if (positions instanceof Array && positions.length === 2) {\r\n      this._positions.set(positions[0], startPos)\r\n      const startDir = startSegmentIdx * VERTEX_PER_SEGMENT * DIR_SIZE\r\n      this._directions.set(positions[1], startDir) // dirs are geo part of vertex\r\n    } else {\r\n      this._positions.set(positions, startPos)\r\n    }\r\n  }\r\n\r\n  setColors(startSegmentIdx, colors) {\r\n    const start = startSegmentIdx * VERTEX_PER_SEGMENT * COL_SIZE\r\n    this._colors.set(colors, start)\r\n  }\r\n\r\n  _initVertices(segmentsCount) {\r\n    this._buffersSize = segmentsCount * VERTEX_PER_SEGMENT\r\n    const pointsCount = this._buffersSize\r\n    const use32bitIndex = pointsCount > MAX_IDC_16BIT\r\n    this._index = utils.allocateTyped(\r\n      use32bitIndex ? Uint32Array : Uint16Array,\r\n      segmentsCount * 6\r\n    )\r\n    this._positions = utils.allocateTyped(Float32Array, pointsCount * POS_SIZE)\r\n    this._colors = utils.allocateTyped(Float32Array, pointsCount * COL_SIZE)\r\n    this._directions = utils.allocateTyped(Float32Array, pointsCount * DIR_SIZE)\r\n    const alpha = (this._alpha = utils.allocateTyped(Float32Array, pointsCount))\r\n    fill(alpha, 1.0)\r\n\r\n    const index = this._index\r\n    let indexOffset = 0\r\n    let pointOffset = 0\r\n    for (\r\n      let j = 0;\r\n      j < segmentsCount;\r\n      j++, indexOffset += 6, pointOffset += VERTEX_PER_SEGMENT\r\n    ) {\r\n      index[indexOffset] = pointOffset\r\n      index[indexOffset + 1] = pointOffset + 1\r\n      index[indexOffset + 2] = pointOffset + 3\r\n      index[indexOffset + 3] = pointOffset\r\n      index[indexOffset + 4] = pointOffset + 2\r\n      index[indexOffset + 5] = pointOffset + 3\r\n    }\r\n    this.setIndex(new BufferAttribute(this._index, 1))\r\n\r\n    this.setAttribute(\r\n      'position',\r\n      new BufferAttribute(this._positions, POS_SIZE)\r\n    )\r\n    this.setAttribute('color', new BufferAttribute(this._colors, COL_SIZE))\r\n    this.setAttribute('alphaColor', new BufferAttribute(alpha, 1))\r\n    this.setAttribute(\r\n      'direction',\r\n      new BufferAttribute(this._directions, DIR_SIZE)\r\n    )\r\n  }\r\n}\r\n\r\nexport default ThickLinesGeometry\r\n",
		"import BaseLinesGeometry from './ThickLinesGeometry'\r\nimport { Box3, Sphere, Vector3 } from 'three'\r\n\r\n/**\r\n * This class represents geometry which consists lines. This can build bounding volumes\r\n * @constructor\r\n *\r\n * @param {number}  segmentsCount   Number of segments per chunk.\r\n */\r\nclass LinesGeometry extends BaseLinesGeometry {\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  computeBoundingSphere() {\r\n    const { boundingBox } = this\r\n    // Build bounding sphere\r\n    let radiusSquared = 0.0\r\n    const center = new Vector3()\r\n    if (boundingBox) {\r\n      boundingBox.getCenter(center)\r\n    }\r\n    const positions = this._positions\r\n    const sphere = this.boundingSphere || new Sphere()\r\n    const size = this._positions.length\r\n    const pos = new Vector3()\r\n    const posSize = this.getPositionSize()\r\n    for (let i = 0; i < size; i += posSize) {\r\n      pos.set(positions[i], positions[i + 1], positions[i + 2])\r\n      const lengthSquared = center.distanceToSquared(pos)\r\n      if (radiusSquared < lengthSquared) {\r\n        radiusSquared = lengthSquared\r\n      }\r\n    }\r\n    sphere.set(center, Math.sqrt(radiusSquared))\r\n    this.boundingSphere = sphere\r\n  }\r\n\r\n  computeBoundingBox() {\r\n    const positions = this._positions\r\n    const box = new Box3()\r\n    const size = this._positions.length\r\n    const tmpVec = new Vector3()\r\n    const posSize = this.getPositionSize()\r\n    for (let i = 0; i < size; i += posSize) {\r\n      tmpVec.set(positions[i], positions[i + 1], positions[i + 2])\r\n      box.expandByPoint(tmpVec)\r\n    }\r\n    this.boundingBox = box\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n    this.computeBoundingSphere()\r\n  }\r\n}\r\n\r\nexport default LinesGeometry\r\n",
		"import utils from '../../utils'\r\nimport gfxutils from '../gfxutils'\r\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry'\r\nimport { CylinderBufferGeometry, Matrix3, Vector3 } from 'three'\r\n\r\nconst VEC_SIZE = 3\r\nconst tmpVector = new Vector3()\r\nconst normMtx = new Matrix3()\r\n\r\nclass CylinderCollisionGeo extends ChunkedObjectsGeometry {\r\n  constructor(instanceCount, polyComplexity) {\r\n    const cylGeometry = new CylinderBufferGeometry(\r\n      1,\r\n      1,\r\n      1.0,\r\n      Math.max(3, polyComplexity),\r\n      2,\r\n      true\r\n    )\r\n    super(cylGeometry, instanceCount)\r\n\r\n    const chunkSize = this._chunkSize\r\n    this._chunkPos = this._chunkGeo.attributes.position.array\r\n    this._chunkNorms = this._chunkGeo.attributes.normal.array\r\n    this._tmpVector = utils.allocateTyped(Float32Array, chunkSize * VEC_SIZE)\r\n  }\r\n\r\n  setItem(itemIdx, botPos, topPos, itemRad) {\r\n    const chunkSize = this._chunkSize\r\n    const itemOffset = chunkSize * itemIdx * VEC_SIZE\r\n\r\n    const tmpArray = this._tmpVector\r\n    const geoPos = this._chunkPos\r\n    const geoNorm = this._chunkNorms\r\n\r\n    const mtx1 = gfxutils.calcCylinderMatrix(botPos, topPos, itemRad)\r\n    normMtx.getNormalMatrix(mtx1)\r\n    let idx\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE\r\n      tmpVector.fromArray(geoPos, idx)\r\n      tmpVector.applyMatrix4(mtx1)\r\n      tmpVector.toArray(tmpArray, idx)\r\n    }\r\n    this._positions.set(tmpArray, itemOffset)\r\n\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE\r\n      tmpVector.fromArray(geoNorm, idx)\r\n      tmpVector.applyMatrix3(normMtx)\r\n      tmpVector.toArray(tmpArray, idx)\r\n    }\r\n    this._normals.set(tmpArray, itemOffset)\r\n  }\r\n}\r\nexport default CylinderCollisionGeo\r\n",
		"import LinesGeometry from './LinesGeometry'\r\nimport CylinderCollisionGeo from './CylinderCollisionGeo'\r\n\r\nconst COLLISION_RAD = 0.1\r\n\r\n/**\r\n * This class represents geometry which consists of separate chunks.\r\n * Each chunk has same index and similar geometry with equal points and faces count.\r\n * Each chunk has by default only one color.\r\n * @constructor\r\n *\r\n * @param {number}  chunksCount     Total chunks count.\r\n * @param {number}  segmentsCount   Number of segments per chunk.\r\n * @param {boolean} enableCollision Enable or disable collision where each segment is\r\n *                                  a collidable cylinder.\r\n * collision geometry.\r\n */\r\nclass ChunkedLinesGeometry extends LinesGeometry {\r\n  constructor(chunksCount, segmentsCount, enableCollision) {\r\n    super(chunksCount * segmentsCount)\r\n    this._init(segmentsCount)\r\n    this._collisionGeo = enableCollision\r\n      ? new CylinderCollisionGeo(chunksCount * segmentsCount, 3)\r\n      : null\r\n  }\r\n\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  computeBoundingSphere() {\r\n    const collisionGeo = this._collisionGeo\r\n    if (collisionGeo) {\r\n      collisionGeo.computeBoundingSphere()\r\n      this.boundingSphere = collisionGeo.boundingSphere\r\n      return\r\n    }\r\n    super.computeBoundingSphere()\r\n  }\r\n\r\n  computeBoundingBox() {\r\n    const collisionGeo = this._collisionGeo\r\n    if (collisionGeo) {\r\n      collisionGeo.computeBoundingBox()\r\n      this.boundingBox = collisionGeo.boundingBox\r\n      return\r\n    }\r\n    super.computeBoundingBox()\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const collisionGeo = this._collisionGeo\r\n    if (!collisionGeo) {\r\n      return\r\n    }\r\n    const segCount = this._chunkSize\r\n    this._collisionGeo.raycast(raycaster, intersects)\r\n    for (let i = 0, n = intersects.length; i < n; ++i) {\r\n      let { chunkIdx } = intersects[i]\r\n      if (chunkIdx === undefined) {\r\n        continue\r\n      }\r\n      chunkIdx = (chunkIdx / segCount) | 0\r\n      intersects[i].chunkIdx = chunkIdx\r\n    }\r\n  }\r\n\r\n  setColor(chunkIdx, colorVal) {\r\n    const chunkSize = this._chunkSize\r\n    for (let i = chunkIdx * chunkSize, end = i + chunkSize; i < end; ++i) {\r\n      super.setColor(i, colorVal)\r\n    }\r\n  }\r\n\r\n  setSegment(chunkIdx, segIdx, pos1, pos2) {\r\n    const chunkSize = this._chunkSize\r\n    const idx = chunkIdx * chunkSize + segIdx\r\n    super.setSegment(idx, pos1, pos2)\r\n    if (this._collisionGeo) {\r\n      this._collisionGeo.setItem(\r\n        chunkIdx * chunkSize + segIdx,\r\n        pos1,\r\n        pos2,\r\n        COLLISION_RAD\r\n      )\r\n    }\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n    this.computeBoundingSphere()\r\n  }\r\n\r\n  setOpacity(chunkIndices, value) {\r\n    const chunkSize = this._chunkSize\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      const left = chunkIndices[i] * chunkSize\r\n      super.setOpacity(left, left + chunkSize - 1, value)\r\n    }\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const instanceCount = chunkIndices.length\r\n    const chunkSize = this._chunkSize\r\n    const subset = new ChunkedLinesGeometry(instanceCount, chunkSize, false)\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      const dstPtOffset = i * chunkSize\r\n      const startSegIdx = chunkIndices[i] * chunkSize\r\n      subset.setSegments(\r\n        dstPtOffset,\r\n        this.getSubsetSegments(startSegIdx, chunkSize)\r\n      )\r\n      subset.setColors(\r\n        dstPtOffset,\r\n        this.getSubsetColors(startSegIdx, chunkSize)\r\n      )\r\n    }\r\n\r\n    subset.boundingSphere = this.boundingSphere\r\n    subset.boundingBox = this.boundingBox\r\n    return [subset]\r\n  }\r\n\r\n  _init(chunkSize) {\r\n    this._chunkSize = chunkSize\r\n  }\r\n}\r\n\r\nexport default ChunkedLinesGeometry\r\n",
		"import LinesGeometry from './LinesGeometry'\r\nimport Simple2CCylindersGeometry from './Simple2CCylindersGeometry'\r\nimport { Vector3 } from 'three'\r\n\r\nconst COLLISION_RAD = 0.3\r\nconst tmpVector = new Vector3()\r\n\r\nclass TwoColorLinesGeometry extends LinesGeometry {\r\n  constructor(segmentsCount) {\r\n    super(segmentsCount * 2)\r\n    this._init(segmentsCount)\r\n    this._collisionGeo = new Simple2CCylindersGeometry(segmentsCount, 3)\r\n  }\r\n\r\n  setItem(itemIdx, botPos, topPos) {\r\n    this._collisionGeo.setItem(itemIdx, botPos, topPos, COLLISION_RAD)\r\n    const offset = 2 * itemIdx // there are two points per segment\r\n    tmpVector.lerpVectors(botPos, topPos, 0.5)\r\n    super.setSegment(offset, botPos, tmpVector)\r\n    super.setSegment(offset + 1, tmpVector, topPos)\r\n  }\r\n\r\n  setColor(itemIdx, colorVal1, colorVal2) {\r\n    const offset = 2 * itemIdx // there are two points per segment\r\n    super.setColor(offset, colorVal1)\r\n    super.setColor(offset + 1, colorVal2)\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    if (this._collisionGeo) {\r\n      this._collisionGeo.raycast(raycaster, intersects)\r\n    }\r\n  }\r\n\r\n  getSubset(segmentIndices) {\r\n    const instanceCount = segmentIndices.length\r\n    const subset = new TwoColorLinesGeometry(instanceCount, false)\r\n    for (let i = 0, n = instanceCount; i < n; ++i) {\r\n      const startSegIdx = segmentIndices[i]\r\n      subset.setSegments(i, this.getSubsetSegments(startSegIdx, 1))\r\n      subset.setColors(i, this.getSubsetColors(startSegIdx, 1))\r\n    }\r\n\r\n    subset.boundingSphere = this.boundingSphere\r\n    subset.boundingBox = this.boundingBox\r\n    return [subset]\r\n  }\r\n\r\n  _init(segmentsCount) {\r\n    this._segCounts = segmentsCount * 2\r\n  }\r\n}\r\n// (???)parent = LinesGeometry.prototype;\r\n\r\nexport default TwoColorLinesGeometry\r\n",
		"import ChunkedLinesGeometry from './ChunkedLinesGeometry'\r\nimport SphereCollisionGeo from './SphereCollisionGeo'\r\nimport { Vector3 } from 'three'\r\n\r\nconst vectors = [\r\n  new Vector3(1, 0, 0),\r\n  new Vector3(-1, 0, 0),\r\n  new Vector3(0, 1, 0),\r\n  new Vector3(0, -1, 0),\r\n  new Vector3(0, 0, 1),\r\n  new Vector3(0, 0, -1)\r\n]\r\nconst vecCount = vectors.length\r\nconst tempPos1 = new Vector3()\r\nconst tempPos2 = new Vector3()\r\n\r\nclass CrossGeometry extends SphereCollisionGeo(ChunkedLinesGeometry) {\r\n  constructor(chunksCount) {\r\n    super(chunksCount, chunksCount, (vecCount / 2) | 0, false)\r\n  }\r\n\r\n  setItem(itemIdx, itemPos, itemRad) {\r\n    this.setSphere(itemIdx, itemPos, itemRad)\r\n\r\n    for (let i = 0; i < vecCount / 2; ++i) {\r\n      const first = i * 2\r\n      tempPos1.x = itemPos.x + vectors[first].x * itemRad\r\n      tempPos1.y = itemPos.y + vectors[first].y * itemRad\r\n      tempPos1.z = itemPos.z + vectors[first].z * itemRad\r\n      const second = first + 1\r\n      tempPos2.x = itemPos.x + vectors[second].x * itemRad\r\n      tempPos2.y = itemPos.y + vectors[second].y * itemRad\r\n      tempPos2.z = itemPos.z + vectors[second].z * itemRad\r\n      this.setSegment(itemIdx, i, tempPos1, tempPos2)\r\n    }\r\n  }\r\n}\r\nexport default CrossGeometry\r\n",
		"import { BufferGeometry, Color } from 'three'\r\nimport utils from '../../utils'\r\n\r\nconst POS_RAD_SIZE = 4\r\nconst COLOR_SIZE = 3\r\nconst tmpColor = new Color()\r\n\r\n/**\r\n * This is a base class for isosurface algorithms.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\nclass IsoSurfaceGeometry extends BufferGeometry {\r\n  constructor(spheresCount, opts) {\r\n    super()\r\n\r\n    this._opts = opts\r\n    this.zClip = this._opts.zClip\r\n    this._posRad = utils.allocateTyped(\r\n      Float32Array,\r\n      spheresCount * POS_RAD_SIZE\r\n    )\r\n    this._colors = utils.allocateTyped(Float32Array, spheresCount * COLOR_SIZE)\r\n  }\r\n\r\n  setItem(chunkIdx, pos, radius) {\r\n    const posRad = this._posRad\r\n    let idx = POS_RAD_SIZE * chunkIdx\r\n    posRad[idx++] = pos.x\r\n    posRad[idx++] = pos.y\r\n    posRad[idx++] = pos.z\r\n    posRad[idx] = radius\r\n  }\r\n\r\n  setColor(chunkIdx, colorVal) {\r\n    tmpColor.set(colorVal)\r\n    const colors = this._colors\r\n    let idx = COLOR_SIZE * chunkIdx\r\n    colors[idx++] = tmpColor.r\r\n    colors[idx++] = tmpColor.g\r\n    colors[idx] = tmpColor.b\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n    this.computeBoundingSphere()\r\n  }\r\n\r\n  finishUpdate() {\r\n    this._build()\r\n  }\r\n\r\n  setOpacity() {\r\n    // not implemented\r\n  }\r\n\r\n  raycast() {}\r\n\r\n  getSubset() {\r\n    return []\r\n  }\r\n}\r\nexport default IsoSurfaceGeometry\r\n",
		"import utils from '../../utils'\r\n\r\n/**\r\n * Class for marching cube\r\n * Stores 8 points and 8 float values are stored together in linear array\r\n * Int values for has intersection or not - in integer32 linear array\r\n * Int values for bits flags - in integer32 linear array\r\n *\r\n */\r\nclass IsoSurfaceMarchCube {\r\n  constructor() {\r\n    this.pointsValuesLinear = null\r\n    this.hasIntersection = null\r\n    this.bitsInside = null\r\n  }\r\n\r\n  create(numCellsPerSide) {\r\n    const vx7000000 = 0x7000000\r\n    const n3 = numCellsPerSide * numCellsPerSide * numCellsPerSide\r\n    if (n3 > vx7000000) {\r\n      throw new Error('Too large cube dimension: lead to memory huge uasge')\r\n    }\r\n    this.pointsValuesLinear = utils.allocateTyped(\r\n      Float32Array,\r\n      (2 << (2 + 2)) * n3\r\n    )\r\n    this.hasIntersection = utils.allocateTyped(Int32Array, n3)\r\n    this.bitsInside = utils.allocateTyped(Int32Array, n3)\r\n    return 0\r\n  }\r\n\r\n  destroy() {\r\n    this.bitsInside = null\r\n    this.hasIntersection = null\r\n    this.pointsValuesLinear = null\r\n  }\r\n}\r\n\r\n/* eslint-disable no-magic-numbers */\r\nIsoSurfaceMarchCube.prototype.striIndicesMarchCube = [\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, 1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,\r\n  8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 2, 10, 0, 2, 9, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1,\r\n  -1, -1, -1, -1, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 2, 3, 11,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1,\r\n  -1, -1, -1, -1, -1, 3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, 0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1, 3, 9, 0, 3, 11,\r\n  9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1, 9, 8, 10, 10, 8, 11, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, 4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 8,\r\n  4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 1, 9, 4, 7, 1, 7, 3, 1, -1,\r\n  -1, -1, -1, -1, -1, -1, 1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, 3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, 9, 2, 10, 9, 0, 2,\r\n  8, 4, 7, -1, -1, -1, -1, -1, -1, -1, 2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1,\r\n  -1, -1, -1, 8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 4,\r\n  7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1, 9, 0, 1, 8, 4, 7, 2, 3, 11,\r\n  -1, -1, -1, -1, -1, -1, -1, 4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1,\r\n  -1, 3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1, 1, 11, 10, 1, 4,\r\n  11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1, 4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3,\r\n  -1, -1, -1, -1, 4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1, 9,\r\n  5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, 0, 8, 3,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, 8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1, 1,\r\n  2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 1, 2, 10, 4,\r\n  9, 5, -1, -1, -1, -1, -1, -1, -1, 5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1,\r\n  -1, -1, -1, 2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1, 9, 5, 4, 2,\r\n  3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 11, 2, 0, 8, 11, 4, 9, 5,\r\n  -1, -1, -1, -1, -1, -1, -1, 0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1,\r\n  -1, -1, 2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1, 10, 3, 11, 10, 1,\r\n  3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, 4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10,\r\n  -1, -1, -1, -1, 5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1, 5, 4,\r\n  8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, 9, 7, 8, 5, 7, 9, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, 9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1,\r\n  -1, -1, 0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1, 1, 5, 3, 3, 5,\r\n  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1,\r\n  -1, -1, -1, -1, -1, 10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1, 8, 0,\r\n  2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1, 2, 10, 5, 2, 5, 3, 3, 5, 7, -1,\r\n  -1, -1, -1, -1, -1, -1, 7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1,\r\n  -1, 9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1, 2, 3, 11, 0, 1, 8, 1,\r\n  7, 8, 1, 5, 7, -1, -1, -1, -1, 11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1,\r\n  -1, -1, -1, 9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1, 5, 7, 0, 5,\r\n  0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1, 11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0,\r\n  7, 5, 7, 0, -1, 11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 5, 10,\r\n  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 0, 1, 5, 10, 6, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, 1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1,\r\n  -1, 1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 6, 5, 1, 2,\r\n  6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1, 9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1,\r\n  -1, -1, -1, -1, 5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1, 2, 3, 11,\r\n  10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 0, 8, 11, 2, 0, 10, 6,\r\n  5, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1,\r\n  -1, -1, -1, 5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1, 6, 3, 11,\r\n  6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1, 0, 8, 11, 0, 11, 5, 0, 5, 1, 5,\r\n  11, 6, -1, -1, -1, -1, 3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1, 6,\r\n  5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 4, 7, 8, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1,\r\n  -1, -1, -1, -1, 1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, 10, 6,\r\n  5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1, 6, 1, 2, 6, 5, 1, 4, 7, 8, -1,\r\n  -1, -1, -1, -1, -1, -1, 1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1, 8,\r\n  4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1, 7, 3, 9, 7, 9, 4, 3, 2, 9, 5,\r\n  9, 6, 2, 6, 9, -1, 3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, 5,\r\n  10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1, 0, 1, 9, 4, 7, 8, 2, 3, 11,\r\n  5, 10, 6, -1, -1, -1, -1, 9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1,\r\n  8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1, 5, 1, 11, 5, 11, 6, 1,\r\n  0, 11, 7, 11, 4, 0, 4, 11, -1, 0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7,\r\n  -1, 6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1, 10, 4, 9, 6, 4, 10,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1,\r\n  -1, -1, -1, -1, -1, 10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1,\r\n  8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1, 1, 4, 9, 1, 2, 4, 2, 6,\r\n  4, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1,\r\n  -1, 0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 3, 2, 8, 2,\r\n  4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, 10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1,\r\n  -1, -1, -1, -1, -1, 0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1, 3,\r\n  11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1, 6, 4, 1, 6, 1, 10, 4, 8, 1,\r\n  2, 1, 11, 8, 11, 1, -1, 9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1,\r\n  8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1, 3, 11, 6, 3, 6, 0, 0, 6, 4,\r\n  -1, -1, -1, -1, -1, -1, -1, 6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, 7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1, 0, 7, 3, 0,\r\n  10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1, 10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8,\r\n  0, -1, -1, -1, -1, 10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1, 1,\r\n  2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1, 2, 6, 9, 2, 9, 1, 6, 7, 9, 0,\r\n  9, 3, 7, 3, 9, -1, 7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1, 7,\r\n  3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 11, 10, 6, 8, 10,\r\n  8, 9, 8, 6, 7, -1, -1, -1, -1, 2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7,\r\n  -1, 1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1, 11, 2, 1, 11, 1, 7,\r\n  10, 6, 1, 6, 7, 1, -1, -1, -1, -1, 8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3,\r\n  6, -1, 0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 8, 0, 7,\r\n  0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1, 7, 11, 6, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, 3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1,\r\n  9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 1, 9, 8, 3, 1, 11, 7,\r\n  6, -1, -1, -1, -1, -1, -1, -1, 10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, 1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, 2, 9, 0,\r\n  2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, 6, 11, 7, 2, 10, 3, 10, 8, 3,\r\n  10, 9, 8, -1, -1, -1, -1, 7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, 7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1, 2, 7, 6, 2, 3,\r\n  7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1, 1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6,\r\n  -1, -1, -1, -1, 10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1, 10,\r\n  7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1, 0, 3, 7, 0, 7, 10, 0, 10, 9,\r\n  6, 10, 7, -1, -1, -1, -1, 7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1,\r\n  -1, -1, 6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 6, 11,\r\n  3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1, 8, 6, 11, 8, 4, 6, 9, 0, 1, -1,\r\n  -1, -1, -1, -1, -1, -1, 9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1,\r\n  6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 3, 0, 11,\r\n  0, 6, 11, 0, 4, 6, -1, -1, -1, -1, 4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1,\r\n  -1, -1, -1, 10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1, 8, 2, 3, 8, 4,\r\n  2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, 0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, 1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1, 1, 9,\r\n  4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1, 8, 1, 3, 8, 6, 1, 8, 4, 6, 6,\r\n  10, 1, -1, -1, -1, -1, 10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1,\r\n  -1, 4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1, 10, 9, 4, 6, 10, 4, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, 0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, 5, 0,\r\n  1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, 11, 7, 6, 8, 3, 4, 3, 5, 4,\r\n  3, 1, 5, -1, -1, -1, -1, 9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1,\r\n  -1, 6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1, 7, 6, 11, 5, 4, 10,\r\n  4, 2, 10, 4, 0, 2, -1, -1, -1, -1, 3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7,\r\n  6, -1, 7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, 0, 8,\r\n  6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1, 3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1,\r\n  -1, -1, -1, 6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1, 9, 5, 4, 10, 1,\r\n  6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1, 1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9,\r\n  5, 4, -1, 4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1, 7, 6, 10, 7,\r\n  10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1, 6, 9, 5, 6, 11, 9, 11, 8, 9, -1,\r\n  -1, -1, -1, -1, -1, -1, 3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1,\r\n  0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1, 6, 11, 3, 6, 3, 5, 5,\r\n  3, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1,\r\n  -1, -1, -1, 0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1, 11, 8, 5, 11,\r\n  5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1, 6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3,\r\n  -1, -1, -1, -1, 5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1, 9, 5, 6,\r\n  9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1, 1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8,\r\n  2, 6, 2, 8, -1, 1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1,\r\n  3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1, 10, 1, 0, 10, 0, 6, 9, 5, 0, 5,\r\n  6, 0, -1, -1, -1, -1, 0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, 10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 5, 10,\r\n  7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 5, 10, 11, 7, 5, 8, 3,\r\n  0, -1, -1, -1, -1, -1, -1, -1, 5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1,\r\n  -1, -1, -1, 10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1, 11, 1, 2,\r\n  11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 1, 2, 7, 1, 7, 5, 7,\r\n  2, 11, -1, -1, -1, -1, 9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1, 7,\r\n  5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1, 2, 5, 10, 2, 3, 5, 3, 7, 5, -1,\r\n  -1, -1, -1, -1, -1, -1, 8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1,\r\n  9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1, 9, 8, 2, 9, 2, 1, 8, 7,\r\n  2, 10, 2, 5, 7, 5, 2, -1, 1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, 0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1, 9, 0, 3, 9, 3,\r\n  5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1, 9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, 5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1,\r\n  5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1, 0, 1, 9, 8, 4, 10, 8,\r\n  10, 11, 10, 4, 5, -1, -1, -1, -1, 10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3,\r\n  1, 4, -1, 2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1, 0, 4, 11, 0,\r\n  11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1, 0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8,\r\n  11, 8, 5, -1, 9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 5,\r\n  10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1, 5, 10, 2, 5, 2, 4, 4, 2, 0, -1,\r\n  -1, -1, -1, -1, -1, -1, 3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1, 5,\r\n  10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1, 8, 4, 5, 8, 5, 3, 3, 5, 1,\r\n  -1, -1, -1, -1, -1, -1, -1, 0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, 8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1, 9, 4, 5, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 11, 7, 4, 9, 11, 9, 10, 11, -1,\r\n  -1, -1, -1, -1, -1, -1, 0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1,\r\n  1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1, 3, 1, 4, 3, 4, 8, 1,\r\n  10, 4, 7, 4, 11, 10, 11, 4, -1, 4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1,\r\n  -1, -1, 9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1, 11, 7, 4, 11, 4,\r\n  2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1, 11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4,\r\n  -1, -1, -1, -1, 2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1, 9, 10, 7,\r\n  9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1, 3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10,\r\n  0, 4, 0, 10, -1, 1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4,\r\n  9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1, 4, 9, 1, 4, 1, 7, 0, 8, 1,\r\n  8, 7, 1, -1, -1, -1, -1, 4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, 4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 10, 8, 10,\r\n  11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 9, 3, 9, 11, 11, 9, 10,\r\n  -1, -1, -1, -1, -1, -1, -1, 0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1,\r\n  -1, -1, 3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 11,\r\n  1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1, 3, 0, 9, 3, 9, 11, 1, 2, 9, 2,\r\n  11, 9, -1, -1, -1, -1, 0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, 3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 8, 2,\r\n  8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1, 9, 10, 2, 0, 9, 2, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, 2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1,\r\n  -1, 1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 3, 8, 9,\r\n  1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 9, 1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, 0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1\r\n]\r\n/* eslint-enable no-magic-numbers */\r\n\r\nexport default IsoSurfaceMarchCube\r\n",
		"import IsoSurfaceMarchCube from './IsoSurfaceMarchCube'\r\nimport utils from '../../utils'\r\nimport { BufferAttribute, BufferGeometry, Matrix3, Vector3 } from 'three'\r\n\r\nconst edgeTable = [\r\n  0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c, 0x80c, 0x905, 0xa0f,\r\n  0xb06, 0xc0a, 0xd03, 0xe09, 0xf00, 0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f,\r\n  0x795, 0x69c, 0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90, 0x230,\r\n  0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c, 0xa3c, 0xb35, 0x83f, 0x936,\r\n  0xe3a, 0xf33, 0xc39, 0xd30, 0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5,\r\n  0x4ac, 0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0, 0x460, 0x569,\r\n  0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c, 0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a,\r\n  0x963, 0xa69, 0xb60, 0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc,\r\n  0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0, 0x650, 0x759, 0x453,\r\n  0x55a, 0x256, 0x35f, 0x55, 0x15c, 0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53,\r\n  0x859, 0x950, 0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc, 0xfcc,\r\n  0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0, 0x8c0, 0x9c9, 0xac3, 0xbca,\r\n  0xcc6, 0xdcf, 0xec5, 0xfcc, 0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9,\r\n  0x7c0, 0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c, 0x15c, 0x55,\r\n  0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650, 0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6,\r\n  0xfff, 0xcf5, 0xdfc, 0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\r\n  0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c, 0x36c, 0x265, 0x16f,\r\n  0x66, 0x76a, 0x663, 0x569, 0x460, 0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af,\r\n  0xaa5, 0xbac, 0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0, 0xd30,\r\n  0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c, 0x53c, 0x435, 0x73f, 0x636,\r\n  0x13a, 0x33, 0x339, 0x230, 0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895,\r\n  0x99c, 0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190, 0xf00, 0xe09,\r\n  0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c, 0x70c, 0x605, 0x50f, 0x406, 0x30a,\r\n  0x203, 0x109, 0x0\r\n]\r\n\r\nfunction _voxelGradientFast(v, point, grad) {\r\n  const g = v.getValue(point.x, point.y, point.z)\r\n  grad.set(g[0], g[1], g[2])\r\n}\r\n\r\n// Helper class GridCell\r\nclass GridCell {\r\n  constructor() {\r\n    this._arrSize = 8\r\n    this.p = new Array(this._arrSize)\r\n    this.g = new Array(this._arrSize)\r\n    this.val = new Array(this._arrSize)\r\n    for (let i = 0; i < this._arrSize; ++i) {\r\n      this.p[i] = new Vector3()\r\n      this.g[i] = new Vector3()\r\n    }\r\n    this.cubeIndex = 0\r\n  }\r\n}\r\n\r\n// Helper class Triangle\r\nclass Triangle {\r\n  constructor() {\r\n    this.a = {\r\n      p: new Vector3(),\r\n      n: new Vector3()\r\n    }\r\n\r\n    this.b = {\r\n      p: new Vector3(),\r\n      n: new Vector3()\r\n    }\r\n\r\n    this.c = {\r\n      p: new Vector3(),\r\n      n: new Vector3()\r\n    }\r\n  }\r\n}\r\n\r\nfunction createArray(arrSize) {\r\n  const arr = new Array(arrSize)\r\n  for (let i = 0; i < arrSize; ++i) {\r\n    arr[i] = new Vector3()\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nclass IsoSurface {\r\n  constructor() {\r\n    this._numTriangles = 0\r\n    this._numVertices = 0\r\n    this._position = []\r\n    this._normals = []\r\n    this._colors = null\r\n    this._indices = []\r\n    this._volumetricData = null\r\n    this._xAxis = new Vector3()\r\n    this._yAxis = new Vector3()\r\n    this._zAxis = new Vector3()\r\n    this._xDir = new Vector3()\r\n    this._yDir = new Vector3()\r\n    this._zDir = new Vector3()\r\n  }\r\n\r\n  _prepareAxesAndDirs() {\r\n    const volData = this._volumetricData\r\n\r\n    const cellSize = volData.getCellSize()\r\n\r\n    // calculate cell axes\r\n    const xAxis = this._xAxis\r\n    const yAxis = this._yAxis\r\n    const zAxis = this._zAxis\r\n    const xDir = this._xDir\r\n    const yDir = this._yDir\r\n    const zDir = this._zDir\r\n\r\n    xAxis.set(cellSize.x, 0, 0)\r\n    yAxis.set(0, cellSize.y, 0)\r\n    zAxis.set(0, 0, cellSize.z)\r\n\r\n    xDir.set(1, 0, 0)\r\n    yDir.set(0, 1, 0)\r\n    zDir.set(0, 0, 1)\r\n\r\n    // flip normals if coordinate system is in the wrong handedness\r\n    const tmp = new Vector3()\r\n    tmp.crossVectors(xDir, yDir)\r\n    if (tmp.dot(zDir) < 0) {\r\n      xDir.negate()\r\n      yDir.negate()\r\n      zDir.negate()\r\n    }\r\n\r\n    // check that the grid is in the all-positive octant of the coordinate system\r\n    if (\r\n      xDir.x < 0 ||\r\n      xDir.y < 0 ||\r\n      xDir.z < 0 ||\r\n      yDir.x < 0 ||\r\n      yDir.y < 0 ||\r\n      yDir.z < 0 ||\r\n      zDir.x < 0 ||\r\n      zDir.y < 0 ||\r\n      zDir.z < 0\r\n    ) {\r\n      return false\r\n    }\r\n\r\n    // check that the grid is axis-aligned\r\n    const notZero = (axe) => Math.abs(axe) > Number.EPSILON\r\n    return !(\r\n      notZero(xAxis.y) ||\r\n      notZero(xAxis.z) ||\r\n      notZero(yAxis.x) ||\r\n      notZero(yAxis.z) ||\r\n      notZero(zAxis.x) ||\r\n      notZero(zAxis.y)\r\n    )\r\n  }\r\n\r\n  _vertexInterp(isoLevel, grid, ind1, ind2, vertex, normal) {\r\n    const p1 = grid.p[ind1]\r\n    const p2 = grid.p[ind2]\r\n    const n1 = grid.g[ind1]\r\n    const n2 = grid.g[ind2]\r\n    const valP1 = grid.val[ind1]\r\n    const valP2 = grid.val[ind2]\r\n    const isoDiffP1 = isoLevel - valP1\r\n    const diffValP2P1 = valP2 - valP1\r\n\r\n    let mu = 0.0\r\n\r\n    if (Math.abs(diffValP2P1) > 0.0) {\r\n      mu = isoDiffP1 / diffValP2P1\r\n    }\r\n    mu = mu > 1.0 ? 1.0 : mu\r\n    vertex.lerpVectors(p1, p2, mu)\r\n    normal.lerpVectors(n1, n2, mu)\r\n  }\r\n\r\n  static _triTable = IsoSurfaceMarchCube.prototype.striIndicesMarchCube\r\n\r\n  static _arrSize = 12\r\n\r\n  static _firstIndices = [0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3]\r\n\r\n  static _secondIndices = [1, 2, 3, 0, 5, 6, 7, 4, 4, 5, 6, 7]\r\n\r\n  static _vertexList = createArray(IsoSurface._arrSize)\r\n\r\n  static _normalList = createArray(IsoSurface._arrSize)\r\n\r\n  _polygonize(grid, isoLevel, triangles) {\r\n    const { cubeIndex } = grid\r\n    let i = 0\r\n    const arrSize = IsoSurface._arrSize\r\n    const firstIndices = IsoSurface._firstIndices\r\n    const secondIndices = IsoSurface._secondIndices\r\n    const vertexList = IsoSurface._vertexList\r\n    const normalList = IsoSurface._normalList\r\n\r\n    for (; i < arrSize; ++i) {\r\n      if (edgeTable[cubeIndex] & (1 << i)) {\r\n        this._vertexInterp(\r\n          isoLevel,\r\n          grid,\r\n          firstIndices[i],\r\n          secondIndices[i],\r\n          vertexList[i],\r\n          normalList[i]\r\n        )\r\n      }\r\n    }\r\n\r\n    let triCount = 0\r\n    const triTblIdx = cubeIndex * 16\r\n    const triTable = IsoSurface._triTable\r\n\r\n    for (i = 0; triTable[triTblIdx + i] !== -1; i += 3) {\r\n      triangles[triCount].a.p.copy(vertexList[triTable[triTblIdx + i]])\r\n      triangles[triCount].a.n.copy(normalList[triTable[triTblIdx + i]])\r\n\r\n      triangles[triCount].b.p.copy(vertexList[triTable[triTblIdx + i + 1]])\r\n      triangles[triCount].b.n.copy(normalList[triTable[triTblIdx + i + 1]])\r\n\r\n      triangles[triCount].c.p.copy(vertexList[triTable[triTblIdx + i + 2]])\r\n      triangles[triCount].c.n.copy(normalList[triTable[triTblIdx + i + 2]])\r\n      ++triCount\r\n    }\r\n\r\n    return triCount\r\n  }\r\n\r\n  _doGridPosNorms(isoValue, step, appendSimple) {\r\n    const vol = this._volumetricData\r\n    const volData = this._volumetricData.getData()\r\n    const dim = vol.getDimensions()\r\n    const xSize = dim[0]\r\n    const ySize = dim[1]\r\n    const zSize = dim[2]\r\n    const stepX = step * vol.getStrideX()\r\n    const stepY = step * vol.getStrideY()\r\n    const stepZ = step * vol.getStrideZ()\r\n\r\n    const gc = new GridCell()\r\n    const gcVal = gc.val\r\n    const gcValSize = gc.val.length\r\n    const additions = [\r\n      new Vector3(0, 0, 0), // 0\r\n      new Vector3(step, 0, 0), // 1\r\n      new Vector3(step, step, 0), // 2\r\n      new Vector3(0, step, 0), // 3\r\n      new Vector3(0, 0, step), // 4\r\n      new Vector3(step, 0, step), // 5\r\n      new Vector3(step, step, step), // 6\r\n      new Vector3(0, step, step) // 7\r\n    ]\r\n\r\n    const tmpTriCount = 5\r\n    const triangles = new Array(tmpTriCount)\r\n    for (let j = 0; j < tmpTriCount; ++j) {\r\n      triangles[j] = new Triangle()\r\n    }\r\n\r\n    let appendVertex\r\n    const self = this\r\n    const positions = this._position\r\n    const normals = this._normals\r\n    if (appendSimple) {\r\n      // Special case for axis-aligned grid with positive unit vector normals\r\n      appendVertex = (function () {\r\n        const axis = new Vector3(self._xAxis.x, self._yAxis.y, self._zAxis.z)\r\n        return function (triVertex) {\r\n          const vertex = triVertex.p.clone()\r\n          vertex.multiply(axis)\r\n          positions.push(vertex.add(self._origin))\r\n          normals.push(triVertex.n.clone())\r\n        }\r\n      })()\r\n    } else {\r\n      appendVertex = (function () {\r\n        const posMtx = new Matrix3()\r\n        posMtx.set(\r\n          self._xAxis.x,\r\n          self._yAxis.x,\r\n          self._zAxis.x,\r\n          self._xAxis.y,\r\n          self._yAxis.y,\r\n          self._zAxis.y,\r\n          self._xAxis.z,\r\n          self._yAxis.z,\r\n          self._zAxis.z\r\n        )\r\n        const normMtx = new Matrix3()\r\n        normMtx.set(\r\n          self._xDir.x,\r\n          self._yDir.x,\r\n          self._zDir.x,\r\n          self._xDir.y,\r\n          self._yDir.y,\r\n          self._zDir.y,\r\n          self._xDir.z,\r\n          self._yDir.z,\r\n          self._zDir.z\r\n        )\r\n\r\n        return function (triVertex) {\r\n          positions.push(\r\n            triVertex.p.clone().applyMatrix3(posMtx).add(self._origin)\r\n          )\r\n          normals.push(triVertex.n.clone().applyMatrix3(normMtx))\r\n        }\r\n      })()\r\n    }\r\n    const indices = this._indices\r\n\r\n    let globTriCount = 0\r\n\r\n    for (let z = 0; z < zSize - step; z += step) {\r\n      for (let y = 0; y < ySize - step; y += step) {\r\n        let idx = vol.getDirectIdx(0, y, z)\r\n        for (let x = 0; x < xSize - step; x += step, idx += stepX) {\r\n          /* eslint-disable no-multi-spaces */\r\n          /* eslint-disable computed-property-spacing */\r\n          gcVal[0] = volData[idx]\r\n          gcVal[1] = volData[idx + stepX]\r\n          gcVal[3] = volData[idx + stepY]\r\n          gcVal[2] = volData[idx + stepX + stepY]\r\n          gcVal[4] = volData[idx + stepZ]\r\n          gcVal[5] = volData[idx + stepX + stepZ]\r\n          gcVal[7] = volData[idx + stepY + stepZ]\r\n          gcVal[6] = volData[idx + stepX + stepY + stepZ]\r\n          /* eslint-enable no-multi-spaces */\r\n          /* eslint-enable computed-property-spacing */\r\n\r\n          // Determine the index into the edge table which\r\n          // tells us which vertices are inside of the surface\r\n          let cubeIndex = 0\r\n          let i = 0\r\n          for (; i < gcValSize; ++i) {\r\n            if (gcVal[i] < isoValue) {\r\n              cubeIndex |= 1 << i\r\n            }\r\n          }\r\n\r\n          if (edgeTable[cubeIndex] === 0) {\r\n            continue\r\n          }\r\n\r\n          gc.cubeIndex = cubeIndex\r\n          for (i = 0; i < gcValSize; ++i) {\r\n            gc.p[i].set(\r\n              x + additions[i].x,\r\n              y + additions[i].y,\r\n              z + additions[i].z\r\n            )\r\n            _voxelGradientFast(this._gradient, gc.p[i], gc.g[i])\r\n          }\r\n\r\n          // calculate vertices and facets for this cube,\r\n          // calculate normals by interpolating between the negated\r\n          // normalized volume gradients for the 8 reference voxels\r\n          const triCount = this._polygonize(gc, isoValue, triangles)\r\n          globTriCount += triCount\r\n\r\n          // append triangles using different techniques\r\n          for (i = 0; i < triCount; ++i) {\r\n            indices.push(this._numTriangles * 3)\r\n            indices.push(this._numTriangles * 3 + 1)\r\n            indices.push(this._numTriangles * 3 + 2)\r\n            ++this._numTriangles\r\n\r\n            appendVertex(triangles[i].a)\r\n            appendVertex(triangles[i].b)\r\n            appendVertex(triangles[i].c)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return globTriCount\r\n  }\r\n\r\n  compute(volData, origin, isoValue, step) {\r\n    this._volumetricData = volData\r\n    this._origin = origin\r\n\r\n    this._gradient = volData.computeGradient()\r\n\r\n    this._doGridPosNorms(isoValue, step, this._prepareAxesAndDirs())\r\n  }\r\n\r\n  _remapIndices(vertexMap, idcCount) {\r\n    const indices = this._indices\r\n    const newIndices = utils.allocateTyped(Uint32Array, idcCount)\r\n    for (let i = 0; i < idcCount; ++i) {\r\n      indices[i] = vertexMap[indices[i]]\r\n      newIndices[i] = indices[i]\r\n    }\r\n    this._indices = newIndices\r\n  }\r\n\r\n  _remapVertices(vertices, normals, count) {\r\n    const newPositions = utils.allocateTyped(Float32Array, count * 3)\r\n    const newNormals = utils.allocateTyped(Float32Array, count * 3)\r\n    for (let i = 0; i < count; ++i) {\r\n      const pos = vertices[i]\r\n      newPositions[i * 3] = pos.x\r\n      newPositions[i * 3 + 1] = pos.y\r\n      newPositions[i * 3 + 2] = pos.z\r\n      const norm = normals[i].normalize()\r\n      newNormals[i * 3] = norm.x\r\n      newNormals[i * 3 + 1] = norm.y\r\n      newNormals[i * 3 + 2] = norm.z\r\n    }\r\n    this._position = newPositions\r\n    this._normals = newNormals\r\n  }\r\n\r\n  vertexFusion(offset, len) {\r\n    const faceVer = this._indices.length\r\n    const vertices = this._position\r\n    const normals = this._normals\r\n    const oldVerCount = vertices.length | 0\r\n    if (faceVer === 0 || oldVerCount === 0) {\r\n      return\r\n    }\r\n    const vMap = utils.allocateTyped(Uint32Array, oldVerCount)\r\n    vMap[0] = 0\r\n    let newVer = 1\r\n\r\n    let i = 1\r\n    for (; i < oldVerCount; ++i) {\r\n      const start = newVer - offset < 0 ? 0 : newVer - offset\r\n      const end = start + len > newVer ? newVer : start + len\r\n      let matchedIndex = -1\r\n\r\n      for (let j = start; j < end; ++j) {\r\n        if (Math.abs(vertices[i] - vertices[j]) < Number.EPSILON) {\r\n          matchedIndex = j\r\n          break\r\n        }\r\n      }\r\n\r\n      if (matchedIndex !== -1) {\r\n        vMap[i] = matchedIndex\r\n      } else {\r\n        vertices[newVer].copy(vertices[i])\r\n        normals[newVer].copy(normals[i])\r\n        vMap[i] = newVer\r\n        ++newVer\r\n      }\r\n    }\r\n\r\n    this._remapIndices(vMap, faceVer)\r\n    this._remapVertices(vertices, normals, newVer)\r\n  }\r\n\r\n  // Assign per-vertex colors from a volumetric texture map (same dimensions as the original volumetric data).\r\n  // Along with color dominating atom is determined for each vertex\r\n  // and vertices with atom out of \"visible\" subset get filtered out.\r\n  // XXX only handles orthogonal volumes currently\r\n  setColorVolTex(colorMap, atomMap, atomWeightMap, visibilitySelector) {\r\n    let i\r\n    let idx\r\n    const numVerts = this._position.length / 3\r\n    const vertices = this._position\r\n    const origin = this._origin\r\n    const dim = this._volumetricData.getDimensions()\r\n    const xs = dim[0] - 1\r\n    const ys = dim[1] - 1\r\n    const zs = dim[2] - 1\r\n\r\n    const colorData = colorMap.getData()\r\n    const strideX = colorMap.getStrideX()\r\n    const strideY = colorMap.getStrideY()\r\n    const strideZ = colorMap.getStrideZ()\r\n\r\n    let atomWeightData\r\n    let atomStrideX\r\n    let atomStrideY\r\n    let atomStrideZ\r\n\r\n    if (visibilitySelector !== null) {\r\n      atomWeightData = atomWeightMap.getData()\r\n      atomStrideX = atomWeightMap.getStrideX()\r\n      atomStrideY = atomWeightMap.getStrideY()\r\n      atomStrideZ = atomWeightMap.getStrideZ()\r\n    }\r\n\r\n    const xInv = 1.0 / this._xAxis.x\r\n    const yInv = 1.0 / this._yAxis.y\r\n    const zInv = 1.0 / this._zAxis.z\r\n\r\n    let atomLookup = []\r\n    let atomWeights = []\r\n    const colors = utils.allocateTyped(Float32Array, numVerts * 3)\r\n\r\n    function interp(mu, idx1, idx2, c) {\r\n      c[0] = (1 - mu) * colorData[idx1] + mu * colorData[idx2]\r\n      c[1] = (1 - mu) * colorData[idx1 + 1] + mu * colorData[idx2 + 1]\r\n      c[2] = (1 - mu) * colorData[idx1 + 2] + mu * colorData[idx2 + 2]\r\n    }\r\n\r\n    function collectWeight(ai, coefX, coefY, coefZ) {\r\n      const a = atomMap[ai] // atomWeightMap is a scalar field, so index into atom map should be the same\r\n      if (a != null) {\r\n        atomLookup[a.index] = a\r\n        const w = coefX * coefY * coefZ * atomWeightData[ai]\r\n        if (typeof atomWeights[a.index] === 'undefined') {\r\n          atomWeights[a.index] = w\r\n        } else {\r\n          atomWeights[a.index] += w\r\n        }\r\n      }\r\n    }\r\n\r\n    const vMap = utils.allocateTyped(Int32Array, numVerts)\r\n    let newVerCount = 0\r\n\r\n    for (i = 0; i < numVerts; i++) {\r\n      const ind = i * 3\r\n      const vx = (vertices[ind] - origin.x) * xInv\r\n      const vy = (vertices[ind + 1] - origin.y) * yInv\r\n      const vz = (vertices[ind + 2] - origin.z) * zInv\r\n      const x = Math.min(Math.max(vx, 0), xs) | 0\r\n      const y = Math.min(Math.max(vy, 0), ys) | 0\r\n      const z = Math.min(Math.max(vz, 0), zs) | 0\r\n\r\n      const mux = vx - x\r\n      const muy = vy - y\r\n      const muz = vz - z\r\n\r\n      if (visibilitySelector != null) {\r\n        // collect atom weights\r\n        atomLookup = []\r\n        atomWeights = []\r\n        idx = atomWeightMap.getDirectIdx(x, y, z)\r\n        collectWeight(idx, 1 - mux, 1 - muy, 1 - muz)\r\n        collectWeight(idx + atomStrideX, mux, 1 - muy, 1 - muz)\r\n        collectWeight(idx + atomStrideY, 1 - mux, muy, 1 - muz)\r\n        collectWeight(idx + atomStrideX + atomStrideY, mux, muy, 1 - muz)\r\n        collectWeight(idx + atomStrideZ, 1 - mux, 1 - muy, muz)\r\n        collectWeight(idx + atomStrideX + atomStrideZ, mux, 1 - muy, muz)\r\n        collectWeight(idx + atomStrideY + atomStrideZ, 1 - mux, muy, muz)\r\n        collectWeight(\r\n          idx + atomStrideX + atomStrideY + atomStrideZ,\r\n          mux,\r\n          muy,\r\n          muz\r\n        )\r\n\r\n        // find dominant atom\r\n        let maxWeight = 0.0\r\n        let dominantIdx = -1\r\n        for (const atomIdx in atomWeights) {\r\n          if (atomWeights[atomIdx] > maxWeight) {\r\n            dominantIdx = atomIdx\r\n            maxWeight = atomWeights[atomIdx]\r\n          }\r\n        }\r\n\r\n        if (\r\n          dominantIdx < 0 ||\r\n          !visibilitySelector.includesAtom(atomLookup[dominantIdx])\r\n        ) {\r\n          // this vertex doesn't belong to visible subset and will be skipped\r\n          vMap[i] = -1\r\n          continue\r\n        }\r\n      }\r\n\r\n      vMap[i] = newVerCount++\r\n\r\n      // color tri-linear interpolation\r\n      const dx = x < xs ? strideX : 0\r\n      const dy = y < ys ? strideY : 0\r\n      const dz = z < zs ? strideZ : 0\r\n\r\n      const c0 = [0, 0, 0]\r\n      const c1 = [0, 0, 0]\r\n      const c2 = [0, 0, 0]\r\n      const c3 = [0, 0, 0]\r\n\r\n      idx = colorMap.getDirectIdx(x, y, z)\r\n      interp(mux, idx, idx + dx, c0)\r\n      interp(mux, idx + dy, idx + dx + dy, c1)\r\n      interp(mux, idx + dz, idx + dx + dz, c2)\r\n      interp(mux, idx + dy + dz, idx + dx + dy + dz, c3)\r\n\r\n      const cz0 = [0, 0, 0]\r\n      cz0[0] = (1 - muy) * c0[0] + muy * c1[0]\r\n      cz0[1] = (1 - muy) * c0[1] + muy * c1[1]\r\n      cz0[2] = (1 - muy) * c0[2] + muy * c1[2]\r\n\r\n      const cz1 = [0, 0, 0]\r\n      cz1[0] = (1 - muy) * c2[0] + muy * c3[0]\r\n      cz1[1] = (1 - muy) * c2[1] + muy * c3[1]\r\n      cz1[2] = (1 - muy) * c2[2] + muy * c3[2]\r\n\r\n      colors[ind] = (1 - muz) * cz0[0] + muz * cz1[0]\r\n      colors[ind + 1] = (1 - muz) * cz0[1] + muz * cz1[1]\r\n      colors[ind + 2] = (1 - muz) * cz0[2] + muz * cz1[2]\r\n    }\r\n    this._colors = colors\r\n\r\n    if (visibilitySelector != null) {\r\n      // shift visible vertices towards beginning of array\r\n      for (i = 0; i < numVerts; ++i) {\r\n        const j = vMap[i]\r\n        if (j < 0) {\r\n          continue\r\n        }\r\n\r\n        // assert: j <= i\r\n        this._position[j * 3] = this._position[i * 3]\r\n        this._position[j * 3 + 1] = this._position[i * 3 + 1]\r\n        this._position[j * 3 + 2] = this._position[i * 3 + 2]\r\n        this._normals[j * 3] = this._normals[i * 3]\r\n        this._normals[j * 3 + 1] = this._normals[i * 3 + 1]\r\n        this._normals[j * 3 + 2] = this._normals[i * 3 + 2]\r\n        this._colors[j * 3] = this._colors[i * 3]\r\n        this._colors[j * 3 + 1] = this._colors[i * 3 + 1]\r\n        this._colors[j * 3 + 2] = this._colors[i * 3 + 2]\r\n      }\r\n\r\n      // rebuild index list\r\n      const numTriangles = this._indices.length / 3\r\n      let newTriCount = 0\r\n      for (i = 0; i < numTriangles; ++i) {\r\n        const i0 = vMap[this._indices[3 * i]]\r\n        const i1 = vMap[this._indices[3 * i + 1]]\r\n        const i2 = vMap[this._indices[3 * i + 2]]\r\n        if (i0 >= 0 && i1 >= 0 && i2 >= 0) {\r\n          this._indices[3 * newTriCount] = i0\r\n          this._indices[3 * newTriCount + 1] = i1\r\n          this._indices[3 * newTriCount + 2] = i2\r\n          ++newTriCount\r\n        }\r\n      }\r\n\r\n      // shrink arrays to data size\r\n      this._position = new Float32Array(\r\n        this._position.buffer.slice(0, newVerCount * 3 * 4)\r\n      )\r\n      this._normals = new Float32Array(\r\n        this._normals.buffer.slice(0, newVerCount * 3 * 4)\r\n      )\r\n      this._colors = new Float32Array(\r\n        this._colors.buffer.slice(0, newVerCount * 3 * 4)\r\n      )\r\n      this._indices = new Uint32Array(\r\n        this._indices.buffer.slice(0, newTriCount * 3 * 4)\r\n      )\r\n    }\r\n  }\r\n\r\n  toMesh() {\r\n    const geo = new BufferGeometry()\r\n    geo.setIndex(new BufferAttribute(this._indices, 1))\r\n    geo.setAttribute('position', new BufferAttribute(this._position, 3))\r\n    geo.setAttribute('normal', new BufferAttribute(this._normals, 3))\r\n    geo.setAttribute('color', new BufferAttribute(this._colors, 3))\r\n    geo.computeBoundingSphere()\r\n    return geo\r\n  }\r\n}\r\nexport default IsoSurface\r\n",
		"import IsoSurfaceGeometry from './IsoSurfaceGeometry'\r\nimport IsoSurface from './IsoSurface'\r\nimport utils from '../../utils'\r\nimport { Box3, BufferAttribute, Vector3 } from 'three'\r\n\r\n/**\r\n * This is a base class for volumetric maps based isosurface algorithms.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\n\r\nclass VolumeSurfaceGeometry extends IsoSurfaceGeometry {\r\n  _build() {\r\n    const params = this._opts\r\n    this.numVoxels = [128, 128, 128]\r\n    this.xAxis = new Vector3(1.0, 0.0, 0.0)\r\n    this.yAxis = new Vector3(0.0, 1.0, 0.0)\r\n    this.zAxis = new Vector3(0.0, 0.0, 1.0)\r\n\r\n    this.origin = new Vector3(0.0, 0.0, 0.0)\r\n    this._visibilitySelector = params.visibilitySelector\r\n\r\n    this._calcSurface(params)\r\n  }\r\n\r\n  _findMinMax(posRadArray) {\r\n    const itemSize = 4\r\n    const itemsCount = posRadArray.length / itemSize\r\n    const maxPosRad = [\r\n      posRadArray[0],\r\n      posRadArray[1],\r\n      posRadArray[2],\r\n      posRadArray[3]\r\n    ]\r\n    const minPosRad = [\r\n      posRadArray[0],\r\n      posRadArray[1],\r\n      posRadArray[2],\r\n      posRadArray[3]\r\n    ]\r\n    for (let i = 1; i < itemsCount; ++i) {\r\n      const ind = i * itemSize\r\n\r\n      for (let itemIdx = 0; itemIdx < itemSize; ++itemIdx) {\r\n        const tmpVal = posRadArray[ind + itemIdx]\r\n        maxPosRad[itemIdx] = Math.max(tmpVal, maxPosRad[itemIdx])\r\n        minPosRad[itemIdx] = Math.min(tmpVal, minPosRad[itemIdx])\r\n      }\r\n    }\r\n    return { maxPosRad, minPosRad }\r\n  }\r\n\r\n  _findNumVoxels(posRadArray, params) {\r\n    const { numVoxels } = this\r\n    const minMaxValues = this._findMinMax(posRadArray)\r\n    const minCoordRad = minMaxValues.minPosRad\r\n    const maxCoordRad = minMaxValues.maxPosRad\r\n\r\n    // minrad\r\n    if (minCoordRad[3] > 4.0) {\r\n      params.gridSpacing *= minCoordRad[3]\r\n    }\r\n\r\n    let gridPadding = params.radScale * maxCoordRad[3] * 1.7\r\n    let padRad = gridPadding\r\n    padRad = 0.65 * Math.sqrt((4.0 / 3.0) * Math.PI * padRad * padRad * padRad)\r\n    gridPadding = Math.max(gridPadding, padRad)\r\n\r\n    let i = 0\r\n    for (; i < 3; ++i) {\r\n      minCoordRad[i] -= gridPadding\r\n      maxCoordRad[i] += gridPadding\r\n    }\r\n\r\n    for (i = 0; i < 3; ++i) {\r\n      numVoxels[i] = Math.ceil(\r\n        (maxCoordRad[i] - minCoordRad[i]) / params.gridSpacing\r\n      )\r\n    }\r\n    this.xAxis.x = (numVoxels[0] - 1) * params.gridSpacing\r\n    this.yAxis.y = (numVoxels[1] - 1) * params.gridSpacing\r\n    this.zAxis.z = (numVoxels[2] - 1) * params.gridSpacing\r\n    ;[this.origin.x, this.origin.y, this.origin.z] = minCoordRad\r\n\r\n    return { bbox: minMaxValues, dim: numVoxels }\r\n  }\r\n\r\n  _makeSurface(surface, params) {\r\n    const isoSurf = new IsoSurface()\r\n    isoSurf.compute(surface.volMap, this.origin, params.isoValue, 1)\r\n    isoSurf.vertexFusion(9, 9) // normalization is included\r\n\r\n    if (isoSurf._numTriangles > 0) {\r\n      isoSurf.setColorVolTex(\r\n        surface.volTexMap,\r\n        surface.atomMap,\r\n        surface.atomWeightMap,\r\n        this._visibilitySelector\r\n      )\r\n      this.setIndex(new BufferAttribute(isoSurf._indices, 1))\r\n      this.setAttribute('position', new BufferAttribute(isoSurf._position, 3))\r\n      this.setAttribute('normal', new BufferAttribute(isoSurf._normals, 3))\r\n      this.setAttribute('color', new BufferAttribute(isoSurf._colors, 3))\r\n    } else {\r\n      // geometry should have at least empty position attributes to be processed in wireframe mode by three.js\r\n      this.setAttribute(\r\n        'position',\r\n        new BufferAttribute(utils.allocateTyped(Float32Array, 0), 3)\r\n      )\r\n    }\r\n  }\r\n\r\n  _calcSurface(params) {\r\n    const packedArrays = {\r\n      posRad: this._posRad,\r\n      colors: this._colors,\r\n      atoms: this._opts.atoms\r\n    }\r\n\r\n    if (packedArrays.posRad.length === 0) {\r\n      return\r\n    }\r\n    const boundaries = this._findNumVoxels(packedArrays.posRad, params)\r\n\r\n    const box = new Box3(\r\n      this.origin,\r\n      new Vector3(this.xAxis.x, this.yAxis.y, this.zAxis.z).add(this.origin)\r\n    )\r\n    const surface = this._computeSurface(packedArrays, box, boundaries, params)\r\n\r\n    this._makeSurface(surface, params)\r\n  }\r\n}\r\n\r\nexport default VolumeSurfaceGeometry\r\n",
		"import VolumeSurfaceGeometry from './VolumeSurfaceGeometry'\r\nimport chem from '../../chem'\r\n\r\nconst { Volume } = chem\r\n\r\n/**\r\n * This class implements 'quick' isosurface geometry generation algorithm.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\n\r\nclass QuickSurfGeometry extends VolumeSurfaceGeometry {\r\n  _computeSurface(packedArrays, box, boundaries, params) {\r\n    // beware of shifting this multiple times!\r\n    this._shiftByOrigin(packedArrays.posRad)\r\n\r\n    const surface = {\r\n      volMap: new Volume(Float32Array, this.numVoxels, box),\r\n      volTexMap: new Volume(Float32Array, this.numVoxels, box, 3)\r\n    }\r\n\r\n    if (this._visibilitySelector != null) {\r\n      surface.atomMap = []\r\n      surface.atomWeightMap = new Volume(Float32Array, this.numVoxels, box)\r\n    }\r\n\r\n    this.gaussdensity(surface, packedArrays, null, params)\r\n    return surface\r\n  }\r\n\r\n  gaussdensity(surface, packedArrays, atomicNum, params) {\r\n    const numAtoms = packedArrays.posRad.length / 4\r\n    const { posRad, colors } = packedArrays\r\n    const { numVoxels } = this\r\n    const { radScale, gaussLim, gridSpacing } = params\r\n    const invIsoValue = 1.0 / params.isoValue\r\n    const invGridSpacing = 1.0 / gridSpacing\r\n    const maxVoxelX = numVoxels[0] - 1\r\n    const maxVoxelY = numVoxels[1] - 1\r\n    const maxVoxelZ = numVoxels[2] - 1\r\n    // TODO is densityMap and volTexMap initialized?\r\n\r\n    const { volMap, volTexMap } = surface\r\n    const volData = volMap.getData()\r\n    const strideX = volMap.getStrideX()\r\n\r\n    const volTexData = volTexMap.getData()\r\n    const texStrideX = volTexMap.getStrideX()\r\n\r\n    let atomWeightData\r\n    if (this._visibilitySelector != null) {\r\n      atomWeightData = surface.atomWeightMap.getData()\r\n    }\r\n\r\n    const { atomMap } = surface\r\n\r\n    for (let i = 0; i < numAtoms; ++i) {\r\n      const ind = i * 4\r\n      const scaledRad = posRad[ind + 3] * radScale\r\n      const atomicNumFactor = atomicNum === null ? 1.0 : atomicNum[i]\r\n      const radInv = 1 / (2 * scaledRad * scaledRad)\r\n      let radLim = gaussLim * scaledRad\r\n      const radLim2 = radLim * radLim\r\n      radLim *= invGridSpacing\r\n\r\n      let tmp = posRad[ind] * invGridSpacing\r\n      const xMin = Math.max((tmp - radLim) | 0, 0)\r\n      const xMax = Math.min((tmp + radLim) | 0, maxVoxelX)\r\n      tmp = posRad[ind + 1] * invGridSpacing\r\n      const yMin = Math.max((tmp - radLim) | 0, 0)\r\n      const yMax = Math.min((tmp + radLim) | 0, maxVoxelY)\r\n      tmp = posRad[ind + 2] * invGridSpacing\r\n      const zMin = Math.max((tmp - radLim) | 0, 0)\r\n      const zMax = Math.min((tmp + radLim) | 0, maxVoxelZ)\r\n\r\n      let dz = zMin * gridSpacing - posRad[ind + 2]\r\n      for (let z = zMin; z <= zMax; ++z, dz += gridSpacing) {\r\n        let dy = yMin * gridSpacing - posRad[ind + 1]\r\n        for (let y = yMin; y <= yMax; ++y, dy += gridSpacing) {\r\n          const dy2dz2 = dy * dy + dz * dz\r\n\r\n          if (dy2dz2 >= radLim2) {\r\n            continue\r\n          }\r\n\r\n          let addr = volMap.getDirectIdx(xMin, y, z)\r\n          let texAddr = volTexMap.getDirectIdx(xMin, y, z)\r\n          let dx = xMin * gridSpacing - posRad[ind]\r\n          for (\r\n            let x = xMin;\r\n            x <= xMax;\r\n            ++x, dx += gridSpacing, addr += strideX, texAddr += texStrideX\r\n          ) {\r\n            const r2 = dx * dx + dy2dz2\r\n            const expVal = -r2 * radInv\r\n\r\n            let density = Math.exp(expVal) * atomicNumFactor\r\n\r\n            // store most relevant atom (with highest density)\r\n            if (\r\n              this._visibilitySelector != null &&\r\n              density > atomWeightData[addr]\r\n            ) {\r\n              // NOSONAR\r\n              atomWeightData[addr] = density\r\n              // we use same index into atom map and atomWeightMap\r\n              atomMap[addr] = packedArrays.atoms[i]\r\n            }\r\n\r\n            volData[addr] += density\r\n\r\n            // TODO check for volTexMap routine?\r\n            density *= invIsoValue\r\n            const colInd = i * 3\r\n            volTexData[texAddr] += density * colors[colInd]\r\n            volTexData[texAddr + 1] += density * colors[colInd + 1]\r\n            volTexData[texAddr + 2] += density * colors[colInd + 2]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _shiftByOrigin(posRadArray) {\r\n    const originX = this.origin.x\r\n    const originY = this.origin.y\r\n    const originZ = this.origin.z\r\n\r\n    const itemSize = 4\r\n    const itemsCount = posRadArray.length / itemSize\r\n    for (let i = 0; i < itemsCount; ++i) {\r\n      const ind = i * itemSize\r\n\r\n      posRadArray[ind] -= originX\r\n      posRadArray[ind + 1] -= originY\r\n      posRadArray[ind + 2] -= originZ\r\n    }\r\n  }\r\n}\r\n\r\nexport default QuickSurfGeometry\r\n",
		"import utils from '../../utils'\r\nimport { Vector3 } from 'three'\r\n\r\n/**\r\n * Modifed from SpatialHash\r\n *\r\n * Main differences are:\r\n * - Optimized grid size to ensure we only ever need to look +/-1 cell\r\n * - Aware of atomic radii and will only output atoms within rAtom + rExtra\r\n *   (see withinRadii method)\r\n *\r\n * (Uses rounding rather than bitshifting as consequence of arbitrary grid size)\r\n * @class\r\n * @param {Float32Array} posRad - x, y, z coordinates and radiuses\r\n * @param {Float32Array} min - xyz min coordinates\r\n * @param {Float32Array} max - xyz max coordinates\r\n * @param {number} maxDistance - max distance\r\n */\r\nfunction AVHash(posRad, min, max, maxDistance) {\r\n  const itemSize = 4\r\n  const nAtoms = posRad.length / itemSize\r\n\r\n  const minX = min[0]\r\n  const minY = min[1]\r\n  const minZ = min[2]\r\n\r\n  const maxX = max[0]\r\n  const maxY = max[1]\r\n  const maxZ = max[2]\r\n\r\n  function hashFunc(w, minW) {\r\n    return Math.floor((w - minW) / maxDistance)\r\n  }\r\n\r\n  const iDim = hashFunc(maxX, minX) + 1\r\n  const jDim = hashFunc(maxY, minY) + 1\r\n  const kDim = hashFunc(maxZ, minZ) + 1\r\n\r\n  const nCells = iDim * jDim * kDim\r\n\r\n  const jkDim = jDim * kDim\r\n\r\n  /* Get cellID for cartesian x,y,z */\r\n  const cellID = function (x, y, z) {\r\n    return (\r\n      (hashFunc(x, minX) * jDim + hashFunc(y, minY)) * kDim + hashFunc(z, minZ)\r\n    )\r\n  }\r\n\r\n  /* Initial building, could probably be optimized further */\r\n  const preHash = []\r\n  let i\r\n  let cid\r\n  for (i = 0; i < nAtoms; i++) {\r\n    const iIdx = itemSize * i\r\n    cid = cellID(posRad[iIdx], posRad[iIdx + 1], posRad[iIdx + 2])\r\n\r\n    if (preHash[cid] === undefined) {\r\n      preHash[cid] = [i]\r\n    } else {\r\n      preHash[cid].push(i)\r\n    }\r\n  }\r\n\r\n  const cellOffsets = utils.allocateTyped(Uint32Array, nCells)\r\n  const cellLengths = utils.allocateTyped(Uint16Array, nCells)\r\n  const data = utils.allocateTyped(Uint32Array, nAtoms)\r\n\r\n  let offset = 0\r\n  let maxCellLength = 0\r\n  let j\r\n  for (i = 0; i < nCells; i++) {\r\n    const start = (cellOffsets[i] = offset)\r\n\r\n    const subArray = preHash[i]\r\n\r\n    if (subArray !== undefined) {\r\n      for (j = 0; j < subArray.length; j++) {\r\n        data[offset] = subArray[j]\r\n        offset++\r\n      }\r\n    }\r\n\r\n    const cellLength = offset - start\r\n    cellLengths[i] = cellLength\r\n\r\n    if (cellLength > maxCellLength) {\r\n      maxCellLength = cellLength\r\n    }\r\n  }\r\n\r\n  // Maximum number of neighbours we could ever produce (27 adjacent cells of equal population)\r\n  this.neighbourListLength = 27 * maxCellLength + 1\r\n\r\n  /**\r\n   * Populate the supplied out array with atom indices that are within rAtom + rExtra\r\n   * of x,y,z\r\n   *\r\n   * -1 in out array indicates the end of the list\r\n   *\r\n   * @param  {number} x - x coordinate\r\n   * @param  {number} y - y coordinate\r\n   * @param  {number} z - z coordinate\r\n   * @param  {number} rExtra - additional radius\r\n   * @param  {Float32Array} out - pre-allocated output array\r\n   * @return {undefined}\r\n   */\r\n  this.withinRadii = function (x, y, z, rExtra, out) {\r\n    let outIdx = 0\r\n\r\n    const nearI = hashFunc(x, minX)\r\n    const nearJ = hashFunc(y, minY)\r\n    const nearK = hashFunc(z, minZ)\r\n\r\n    const loI = Math.max(0, nearI - 1)\r\n    const loJ = Math.max(0, nearJ - 1)\r\n    const loK = Math.max(0, nearK - 1)\r\n\r\n    const hiI = Math.min(iDim - 1, nearI + 1)\r\n    const hiJ = Math.min(jDim - 1, nearJ + 1)\r\n    const hiK = Math.min(kDim - 1, nearK + 1)\r\n\r\n    for (i = loI; i <= hiI; ++i) {\r\n      const iOffset = i * jkDim\r\n\r\n      for (j = loJ; j <= hiJ; ++j) {\r\n        const jOffset = j * kDim\r\n\r\n        for (let k = loK; k <= hiK; ++k) {\r\n          cid = iOffset + jOffset + k\r\n\r\n          const cellStart = cellOffsets[cid]\r\n          const cellEnd = cellStart + cellLengths[cid]\r\n\r\n          for (let dataIndex = cellStart; dataIndex < cellEnd; dataIndex++) {\r\n            const atomIndex = data[dataIndex]\r\n            const baseIndex = itemSize * atomIndex\r\n            const dx = posRad[baseIndex] - x\r\n            const dy = posRad[baseIndex + 1] - y\r\n            const dz = posRad[baseIndex + 2] - z\r\n            const rSum = posRad[baseIndex + 3] + rExtra\r\n\r\n            if (dx * dx + dy * dy + dz * dz <= rSum * rSum) {\r\n              out[outIdx++] = data[dataIndex]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Add terminator\r\n    out[outIdx] = -1\r\n  }\r\n}\r\nfunction ContactSurface(packedArrays, boundaries, params, _indexList) {\r\n  // Field generation method adapted from AstexViewer (Mike Hartshorn)\r\n  // by Fred Ludlow.\r\n  // Other parts based heavily on NGL (Alexander Rose) EDT Surface class\r\n  //\r\n  // Should work as a drop-in alternative to EDTSurface (though some of\r\n  // the EDT paramters are not relevant in this method).\r\n\r\n  const itemSize = 4\r\n  const { posRad, colors, atoms } = packedArrays\r\n  const nAtoms = posRad.length / itemSize\r\n\r\n  const { bbox } = boundaries\r\n\r\n  const min = bbox.minPosRad\r\n  const max = bbox.maxPosRad\r\n\r\n  let r2 // Atom positions, expanded radii (squared)\r\n  let maxRadius\r\n\r\n  // Parameters\r\n  let probeRadius\r\n  let scaleFactor\r\n  let probePositions\r\n\r\n  // Cache last value for obscured test\r\n  let lastClip = -1\r\n\r\n  // Grid params\r\n  let dim\r\n  let grid\r\n  let volTex\r\n  let weights\r\n  let weightsMap = null\r\n  let atomMap = null\r\n  let visibilitySelector = null\r\n\r\n  // grid indices -> xyz coords\r\n  let gridx\r\n  let gridy\r\n  let gridz\r\n\r\n  // Lookup tables:\r\n  let sinTable\r\n  let cosTable\r\n\r\n  // Spatial Hash\r\n  let hash\r\n\r\n  // Neighbour array to be filled by hash\r\n  let neighbours\r\n\r\n  // Vectors for Torus Projection\r\n  const mid = new Vector3(0.0, 0.0, 0.0)\r\n  const n1 = new Vector3(0.0, 0.0, 0.0)\r\n  const n2 = new Vector3(0.0, 0.0, 0.0)\r\n\r\n  let ngTorus\r\n\r\n  function uniformArray(TypeName, n, a) {\r\n    const array = utils.allocateTyped(TypeName, n)\r\n    for (let innI = 0; innI < n; ++innI) {\r\n      array[innI] = a\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  function fillGridDim(a, start, step) {\r\n    for (let innI = 0; innI < a.length; innI++) {\r\n      a[innI] = start + step * innI\r\n    }\r\n  }\r\n\r\n  function initializeGrid() {\r\n    ;({ scaleFactor } = params)\r\n    ;({ dim } = boundaries)\r\n\r\n    ngTorus = Math.min(5, 2 + Math.floor(probeRadius * scaleFactor))\r\n\r\n    const gridSize = dim[0] * dim[1] * dim[2]\r\n    grid = uniformArray(Float32Array, gridSize, -1001.0)\r\n    volTex = utils.allocateTyped(Float32Array, gridSize * 3)\r\n    weights = utils.allocateTyped(Float32Array, gridSize)\r\n    if (visibilitySelector) {\r\n      weightsMap = utils.allocateTyped(Float32Array, gridSize)\r\n      atomMap = []\r\n    }\r\n\r\n    gridx = utils.allocateTyped(Float32Array, dim[0])\r\n    gridy = utils.allocateTyped(Float32Array, dim[1])\r\n    gridz = utils.allocateTyped(Float32Array, dim[2])\r\n\r\n    fillGridDim(gridx, min[0], 1 / scaleFactor)\r\n    fillGridDim(gridy, min[1], 1 / scaleFactor)\r\n    fillGridDim(gridz, min[2], 1 / scaleFactor)\r\n  }\r\n\r\n  function initializeAngleTables() {\r\n    let theta = 0.0\r\n    const step = (2 * Math.PI) / probePositions\r\n\r\n    cosTable = utils.allocateTyped(Float32Array, probePositions)\r\n    sinTable = utils.allocateTyped(Float32Array, probePositions)\r\n    for (let innI = 0; innI < probePositions; innI++) {\r\n      cosTable[innI] = Math.cos(theta)\r\n      sinTable[innI] = Math.sin(theta)\r\n      theta += step\r\n    }\r\n  }\r\n\r\n  function initializeHash() {\r\n    hash = new AVHash(posRad, min, max, 2.01 * maxRadius)\r\n    neighbours = new Int32Array(hash.neighbourListLength)\r\n  }\r\n\r\n  function init() {\r\n    ;({ probeRadius, scaleFactor, probePositions, visibilitySelector } = params)\r\n    r2 = utils.allocateTyped(Float32Array, nAtoms)\r\n    maxRadius = 0\r\n    for (let innI = 0; innI < nAtoms; ++innI) {\r\n      const rExt = (posRad[innI * itemSize + 3] += probeRadius)\r\n      if (rExt > maxRadius) {\r\n        maxRadius = rExt\r\n      }\r\n      r2[innI] = rExt * rExt\r\n    }\r\n\r\n    initializeGrid()\r\n    initializeAngleTables()\r\n    initializeHash()\r\n\r\n    lastClip = -1\r\n  }\r\n\r\n  function singleAtomObscures(ai, innX, innY, innZ) {\r\n    const innCI = itemSize * ai\r\n    const ra2 = r2[ai]\r\n    const dx = posRad[innCI] - innX\r\n    const dy = posRad[innCI + 1] - innY\r\n    const dz = posRad[innCI + 2] - innZ\r\n    const d2 = dx * dx + dy * dy + dz * dz\r\n\r\n    return d2 < ra2\r\n  }\r\n\r\n  function obscured(innX, innY, innZ, a, b) {\r\n    // Is the point at x,y,z obscured by any of the atoms\r\n    // specifeid by indices in neighbours. Ignore indices\r\n    // a and b (these are the relevant atoms in projectPoints/Torii)\r\n\r\n    // Cache the last clipped atom (as very often the same one in\r\n    // subsequent calls)\r\n    let ai\r\n\r\n    if (lastClip !== -1) {\r\n      ai = lastClip\r\n      if (ai !== a && ai !== b && singleAtomObscures(ai, innX, innY, innZ)) {\r\n        return ai\r\n      }\r\n      lastClip = -1\r\n    }\r\n\r\n    let ni = 0\r\n    ai = neighbours[ni]\r\n    while (ai >= 0) {\r\n      if (ai !== a && ai !== b && singleAtomObscures(ai, innX, innY, innZ)) {\r\n        lastClip = ai\r\n        return ai\r\n      }\r\n      ai = neighbours[++ni]\r\n    }\r\n\r\n    lastClip = -1\r\n\r\n    return -1\r\n  }\r\n\r\n  function projectPoints() {\r\n    // For each atom:\r\n    //     Iterate over a subsection of the grid, for each point:\r\n    //         If current value < 0.0, unvisited, set positive\r\n    //\r\n    //         In any case: Project this point onto surface of the atomic sphere\r\n    //         If this projected point is not obscured by any other atom\r\n    //             Calcualte delta distance and set grid value to minimum of\r\n    //             itself and delta\r\n\r\n    // Should we alias frequently accessed closure constiables??\r\n    // Assume JS engine capable of optimizing this\r\n    // anyway...\r\n    const maxRad = 4.0\r\n    const sigma = maxRad / 3\r\n    const sigma2Inv = 1 / (2 * sigma * sigma)\r\n\r\n    for (let innI = 0; innI < nAtoms; innI++) {\r\n      const innCI = itemSize * innI\r\n      const ax = posRad[innCI]\r\n      const ay = posRad[innCI + 1]\r\n      const az = posRad[innCI + 2]\r\n      const ar = posRad[innCI + 3]\r\n      const ar2 = r2[innI]\r\n\r\n      hash.withinRadii(ax, ay, az, ar, neighbours)\r\n\r\n      // Number of grid points, round this up...\r\n      const ng = Math.ceil(ar * scaleFactor)\r\n\r\n      // Center of the atom, mapped to grid points (take floor)\r\n      const iax = Math.floor(scaleFactor * (ax - min[0]))\r\n      const iay = Math.floor(scaleFactor * (ay - min[1]))\r\n      const iaz = Math.floor(scaleFactor * (az - min[2]))\r\n\r\n      // Extents of grid to consider for this atom\r\n      const minx = Math.max(0, iax - ng)\r\n      const miny = Math.max(0, iay - ng)\r\n      const minz = Math.max(0, iaz - ng)\r\n\r\n      // Add two to these points:\r\n      // - iax are floor'd values so this ensures coverage\r\n      // - these are loop limits (exclusive)\r\n      const maxx = Math.min(dim[0], iax + ng + 2)\r\n      const maxy = Math.min(dim[1], iay + ng + 2)\r\n      const maxz = Math.min(dim[2], iaz + ng + 2)\r\n\r\n      const colIdx = innI * 3\r\n      const cr = colors[colIdx]\r\n      const cg = colors[colIdx + 1]\r\n      const cb = colors[colIdx + 2]\r\n\r\n      for (let iz = minz; iz < maxz; iz++) {\r\n        const dz = gridz[iz] - az\r\n        const zOffset = dim[1] * dim[0] * iz\r\n\r\n        for (let iy = miny; iy < maxy; iy++) {\r\n          const dy = gridy[iy] - ay\r\n          const dzy2 = dz * dz + dy * dy\r\n          const zyOffset = zOffset + dim[0] * iy\r\n\r\n          for (let ix = minx; ix < maxx; ix++) {\r\n            const idx = ix + zyOffset\r\n            const dx = gridx[ix] - ax\r\n            const d2 = dzy2 + dx * dx\r\n\r\n            if (d2 < ar2) {\r\n              const w = Math.exp(-d2 * sigma2Inv)\r\n              const cIdx = idx * 3\r\n              volTex[cIdx] += cr * w\r\n              volTex[cIdx + 1] += cg * w\r\n              volTex[cIdx + 2] += cb * w\r\n              weights[idx] += w\r\n              if (visibilitySelector !== null && w > weightsMap[idx]) {\r\n                weightsMap[idx] = w\r\n                atomMap[idx] = atoms[innI]\r\n              }\r\n\r\n              if (grid[idx] < 0.0) {\r\n                // Unvisited, make positive\r\n                grid[idx] = -grid[idx]\r\n              }\r\n              // Project on to the surface of the sphere\r\n              // sp is the projected point ( dx, dy, dz ) * ( ra / d )\r\n              const d = Math.sqrt(d2)\r\n              const ap = ar / d\r\n              let spx = dx * ap\r\n              let spy = dy * ap\r\n              let spz = dz * ap\r\n\r\n              spx += ax\r\n              spy += ay\r\n              spz += az\r\n\r\n              if (obscured(spx, spy, spz, innI, -1) === -1) {\r\n                const dd = ar - d\r\n                if (dd < grid[idx]) {\r\n                  grid[idx] = dd\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function normalToLine(out, p) {\r\n    out.x = out.y = out.z = 1.0\r\n    if (p.x !== 0) {\r\n      out.x = (p.y + p.z) / -p.x\r\n    } else if (p.y !== 0) {\r\n      out.y = (p.x + p.z) / -p.y\r\n    } else if (p.z !== 0) {\r\n      out.z = (p.x + p.y) / -p.z\r\n    }\r\n    return out\r\n  }\r\n\r\n  function projectTorus(a, b) {\r\n    const aIdx = itemSize * a\r\n    const bIdx = itemSize * b\r\n    const xa = posRad[aIdx]\r\n    const ya = posRad[aIdx + 1]\r\n    const za = posRad[aIdx + 2]\r\n    const r1 = posRad[aIdx + 3]\r\n    let dx = (mid.x = posRad[bIdx] - xa)\r\n    let dy = (mid.y = posRad[bIdx + 1] - ya)\r\n    let dz = (mid.z = posRad[bIdx + 2] - za)\r\n    const innR2 = posRad[bIdx + 3]\r\n    let d2 = dx * dx + dy * dy + dz * dz\r\n\r\n    // This check now redundant as already done in AVHash.withinRadii\r\n    // if( d2 > (( r1 + r2 ) * ( r1 + r2 )) ){ return; }\r\n\r\n    const d = Math.sqrt(d2)\r\n\r\n    // Find angle between a->b vector and the circle\r\n    // of their intersection by cosine rule\r\n    const cosA = (r1 * r1 + d * d - innR2 * innR2) / (2.0 * r1 * d)\r\n\r\n    // distance along a->b at intersection\r\n    const dmp = r1 * cosA\r\n\r\n    mid.normalize()\r\n\r\n    // Create normal to line\r\n    normalToLine(n1, mid)\r\n    n1.normalize()\r\n\r\n    // Cross together for second normal vector\r\n    n2.crossVectors(mid, n1)\r\n    n2.normalize()\r\n\r\n    // r is radius of circle of intersection\r\n    const rInt = Math.sqrt(r1 * r1 - dmp * dmp)\r\n\r\n    n1.multiplyScalar(rInt)\r\n    n2.multiplyScalar(rInt)\r\n    mid.multiplyScalar(dmp)\r\n\r\n    mid.x += xa\r\n    mid.y += ya\r\n    mid.z += za\r\n\r\n    lastClip = -1\r\n\r\n    const ng = ngTorus\r\n\r\n    for (let innI = 0; innI < probePositions; innI++) {\r\n      const cost = cosTable[innI]\r\n      const sint = sinTable[innI]\r\n\r\n      const px = mid.x + cost * n1.x + sint * n2.x\r\n      const py = mid.y + cost * n1.y + sint * n2.y\r\n      const pz = mid.z + cost * n1.z + sint * n2.z\r\n\r\n      if (obscured(px, py, pz, a, b) === -1) {\r\n        // As above, iterate over our grid...\r\n        // px, py, pz in grid coords\r\n        const iax = Math.floor(scaleFactor * (px - min[0]))\r\n        const iay = Math.floor(scaleFactor * (py - min[1]))\r\n        const iaz = Math.floor(scaleFactor * (pz - min[2]))\r\n\r\n        const minx = Math.max(0, iax - ng)\r\n        const miny = Math.max(0, iay - ng)\r\n        const minz = Math.max(0, iaz - ng)\r\n\r\n        const maxx = Math.min(dim[0], iax + ng + 2)\r\n        const maxy = Math.min(dim[1], iay + ng + 2)\r\n        const maxz = Math.min(dim[2], iaz + ng + 2)\r\n\r\n        for (let iz = minz; iz < maxz; iz++) {\r\n          dz = pz - gridz[iz]\r\n          const zOffset = dim[1] * dim[0] * iz\r\n          for (let iy = miny; iy < maxy; iy++) {\r\n            dy = py - gridy[iy]\r\n            const dzy2 = dz * dz + dy * dy\r\n            const zyOffset = zOffset + dim[0] * iy\r\n            for (let ix = minx; ix < maxx; ix++) {\r\n              dx = px - gridx[ix]\r\n              d2 = dzy2 + dx * dx\r\n              const idx = ix + zyOffset\r\n              const current = grid[idx]\r\n\r\n              if (current > 0.0 && d2 < current * current) {\r\n                grid[idx] = Math.sqrt(d2)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function projectTorii() {\r\n    for (let innI = 0; innI < nAtoms; innI++) {\r\n      const innIdx = itemSize * innI\r\n      hash.withinRadii(\r\n        posRad[innIdx],\r\n        posRad[innIdx + 1],\r\n        posRad[innIdx + 2],\r\n        posRad[innIdx + 3],\r\n        neighbours\r\n      )\r\n      let ia = 0\r\n      let ni = neighbours[ia]\r\n      while (ni >= 0) {\r\n        if (innI < ni) {\r\n          projectTorus(innI, ni)\r\n        }\r\n        ni = neighbours[++ia]\r\n      }\r\n    }\r\n  }\r\n\r\n  function fixNegatives() {\r\n    for (let innI = 0, n = grid.length; innI < n; innI++) {\r\n      if (grid[innI] < 0) grid[innI] = 0\r\n      let w = weights[innI]\r\n      if (w > 0) {\r\n        w = 1 / w\r\n        const innInnI = innI * 3\r\n        volTex[innInnI] *= w\r\n        volTex[innInnI + 1] *= w\r\n        volTex[innInnI + 2] *= w\r\n      }\r\n    }\r\n  }\r\n\r\n  function getVolume() {\r\n    // Basic steps are:\r\n    // 1) Initialize\r\n    // 2) Project points\r\n    // 3) Project torii\r\n    console.time('ContactSurface.getVolume')\r\n\r\n    console.time('ContactSurface.init')\r\n    init()\r\n    console.timeEnd('ContactSurface.init')\r\n\r\n    console.time('ContactSurface.projectPoints')\r\n    projectPoints()\r\n    console.timeEnd('ContactSurface.projectPoints')\r\n\r\n    console.time('ContactSurface.projectTorii')\r\n    projectTorii()\r\n    console.timeEnd('ContactSurface.projectTorii')\r\n    fixNegatives()\r\n    console.timeEnd('ContactSurface.getVolume')\r\n  }\r\n\r\n  this.build = function () {\r\n    // type and cutoff left in for compatibility with EDTSurface.getSurface\r\n    // function signature\r\n    getVolume()\r\n    this.volTexMap = volTex\r\n    this.weightsMap = weightsMap\r\n    this.atomMap = atomMap\r\n    this.volMap = grid\r\n  }\r\n}\r\nexport default ContactSurface\r\n",
		"import VolumeSurfaceGeometry from './VolumeSurfaceGeometry'\r\nimport ContactSurface from './ContactSurface'\r\nimport chem from '../../chem'\r\n\r\nconst { Volume } = chem\r\n\r\n/**\r\n * This class implements 'contact' isosurface geometry generation algorithm.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\n\r\nclass ContactSurfaceGeometry extends VolumeSurfaceGeometry {\r\n  _computeSurface(packedArrays, box, boundaries, params) {\r\n    const contactSurface = new ContactSurface(packedArrays, boundaries, params)\r\n    contactSurface.build()\r\n\r\n    const surface = {\r\n      volMap: new Volume(\r\n        Float32Array,\r\n        this.numVoxels,\r\n        box,\r\n        1,\r\n        contactSurface.volMap\r\n      ),\r\n      volTexMap: new Volume(\r\n        Float32Array,\r\n        this.numVoxels,\r\n        box,\r\n        3,\r\n        contactSurface.volTexMap\r\n      ),\r\n      atomMap: contactSurface.atomMap,\r\n      atomWeightMap: new Volume(\r\n        Float32Array,\r\n        this.numVoxels,\r\n        box,\r\n        1,\r\n        contactSurface.weightsMap\r\n      )\r\n    }\r\n    return surface\r\n  }\r\n}\r\n\r\nexport default ContactSurfaceGeometry\r\n",
		"import { Vector3 } from 'three'\r\n\r\n/**\r\n * Class for colored atom. Need for atom structure clusterization\r\n *\r\n * @param {Vector3} vCenter   Center of atom\r\n * @param {number}  radiusAt  Radius of atom\r\n */\r\nclass IsoSurfaceAtomColored {\r\n  constructor(vCenter, radiusAt) {\r\n    this.coord = new Vector3()\r\n    this.coord.copy(vCenter)\r\n    this.radius = radiusAt\r\n    this.colorX = 0.99999\r\n    this.colorY = 0.0\r\n    this.colorZ = 0.0\r\n    this.atomType = 0\r\n    this.srcAtom = null\r\n  }\r\n}\r\nexport default IsoSurfaceAtomColored\r\n",
		"import utils from '../../utils'\r\nimport { Vector3 } from 'three'\r\n\r\n// suppress some JSHint warnings\r\n/* jshint bitwise: false */\r\n\r\n/**\r\n * Build normals for isosurface, using atoms information\r\n *\r\n * @param {number} numAtoms     - Number of atoms in molecule\r\n * @param {Element} atoms      - Array of atoms\r\n * @param {Vector3} vBoxMin     - Bounding box min\r\n * @param {Vector3} vBoxMax     - Bounding box max\r\n * @param {number} probeRadius     - Normals for output\r\n *\r\n */\r\nclass IsosurfaceBuildNormals {\r\n  constructor(numAtoms, atoms, vBoxMin, vBoxMax, probeRadius) {\r\n    this._numAtoms = numAtoms\r\n    this._atoms = atoms\r\n    this._vBoxMin = new Vector3()\r\n    this._vBoxMax = new Vector3()\r\n    this._vBoxMin.copy(vBoxMin)\r\n    this._vBoxMax.copy(vBoxMax)\r\n    this._probeRadius = probeRadius\r\n\r\n    this._atomsList = null\r\n    this._voxelList = null\r\n  }\r\n\r\n  createVoxels() {\r\n    let numAtomsRefs\r\n    let rad\r\n    const ATOM_VOXEL_REF_SCALE = 4.5\r\n\r\n    const numAtoms = this._numAtoms | 0\r\n    const atoms = this._atoms\r\n    const dx = this._vBoxMax.x - this._vBoxMin.x\r\n    const dy = this._vBoxMax.y - this._vBoxMin.y\r\n    const dz = this._vBoxMax.z - this._vBoxMin.z\r\n    let w = dx < dy ? dx : dy\r\n    w = dz < w ? dz : w\r\n    let maxRad = 0.0\r\n    let aveRad = 0.0\r\n\r\n    let i\r\n    for (i = 0; i < numAtoms; i++) {\r\n      rad = (atoms[i].radius + this._probeRadius) * 2.0\r\n      maxRad = rad > maxRad ? rad : maxRad\r\n      aveRad += rad\r\n    }\r\n    let numCells = Math.floor(w / maxRad)\r\n    if (numCells < 2) {\r\n      numCells = 2\r\n    }\r\n    aveRad /= numAtoms\r\n\r\n    this._numCells = numCells\r\n    this._aveRad = aveRad\r\n    this._maxRad = maxRad\r\n\r\n    const side = numCells\r\n    const side2 = numCells * numCells\r\n    const side3 = numCells * numCells * numCells\r\n\r\n    const xScale = (this._xScale = 1.0 / (this._vBoxMax.x - this._vBoxMin.x))\r\n    const yScale = (this._yScale = 1.0 / (this._vBoxMax.y - this._vBoxMin.y))\r\n    const zScale = (this._zScale = 1.0 / (this._vBoxMax.z - this._vBoxMin.z))\r\n\r\n    // estimate number of individual atom refs in each voxel list\r\n    let maxAtomsRefs = 0\r\n\r\n    const xNumVoxMult = xScale * numCells\r\n    const yNumVoxMult = yScale * numCells\r\n    const zNumVoxMult = zScale * numCells\r\n\r\n    for (i = 0; i < numAtoms; i++) {\r\n      const radAffect =\r\n        (atoms[i].radius + this._probeRadius) * ATOM_VOXEL_REF_SCALE\r\n      const diaAffect = radAffect * 2.0\r\n      let numVoxX = Math.floor(xNumVoxMult * diaAffect + 0.8)\r\n      let numVoxY = Math.floor(yNumVoxMult * diaAffect + 0.8)\r\n      let numVoxZ = Math.floor(zNumVoxMult * diaAffect + 0.8)\r\n      // avoid case numVox? == 0\r\n      // also use loop i <=\r\n      numVoxX++\r\n      numVoxY++\r\n      numVoxZ++\r\n      maxAtomsRefs += numVoxX * numVoxY * numVoxZ\r\n    } // for (i)\r\n    // maxAtomsRefs = numAtoms * MAX_ATOMS_IN_SINGLE_VOXEL;\r\n\r\n    this._voxelList = utils.allocateTyped(Int32Array, side3)\r\n    const atomsList = []\r\n    atomsList.length = maxAtomsRefs\r\n    if (this._voxelList === null || atomsList === null) {\r\n      return 0 - 1\r\n    }\r\n    // init voxel list\r\n    for (i = 0; i < side3; i++) {\r\n      this._voxelList[i] = -1\r\n    }\r\n    numAtomsRefs = 0\r\n\r\n    // create voxel lists\r\n    for (i = 0; i < numAtoms; i++) {\r\n      // use multiplier 4 to locate this atom in different voxels\r\n      rad = (atoms[i].radius + this._probeRadius) * ATOM_VOXEL_REF_SCALE\r\n      let xIndMin = Math.floor(\r\n        (atoms[i].coord.x - this._vBoxMin.x - rad) * numCells * xScale\r\n      )\r\n      let yIndMin = Math.floor(\r\n        (atoms[i].coord.y - this._vBoxMin.y - rad) * numCells * yScale\r\n      )\r\n      let zIndMin = Math.floor(\r\n        (atoms[i].coord.z - this._vBoxMin.z - rad) * numCells * zScale\r\n      )\r\n      let xIndMax = Math.floor(\r\n        (atoms[i].coord.x - this._vBoxMin.x + rad) * numCells * xScale\r\n      )\r\n      let yIndMax = Math.floor(\r\n        (atoms[i].coord.y - this._vBoxMin.y + rad) * numCells * yScale\r\n      )\r\n      let zIndMax = Math.floor(\r\n        (atoms[i].coord.z - this._vBoxMin.z + rad) * numCells * zScale\r\n      )\r\n\r\n      xIndMin = xIndMin >= 0 ? xIndMin : 0\r\n      yIndMin = yIndMin >= 0 ? yIndMin : 0\r\n      zIndMin = zIndMin >= 0 ? zIndMin : 0\r\n\r\n      xIndMax = xIndMax < numCells ? xIndMax : numCells - 1\r\n      yIndMax = yIndMax < numCells ? yIndMax : numCells - 1\r\n      zIndMax = zIndMax < numCells ? zIndMax : numCells - 1\r\n\r\n      for (let z = zIndMin; z <= zIndMax; z++) {\r\n        for (let y = yIndMin; y <= yIndMax; y++) {\r\n          for (let x = xIndMin; x <= xIndMax; x++) {\r\n            // add atom with index \"i\" to this voxel list\r\n            const indVoxel = x + y * side + z * side2\r\n            // assert indVoxel >= 0\r\n            // assert indVoxel < side3\r\n\r\n            // add first\r\n            if (this._voxelList[indVoxel] < 0) {\r\n              atomsList[numAtomsRefs * 2 + 0] = i\r\n              atomsList[numAtomsRefs * 2 + 1] = 0 - 1\r\n              this._voxelList[indVoxel] = numAtomsRefs\r\n              numAtomsRefs++\r\n              // assert numAtomsRefs < maxAtomsRefs - 1\r\n              continue\r\n            }\r\n            // insert into head of list\r\n            const indexNext = this._voxelList[indVoxel]\r\n            this._voxelList[indVoxel] = numAtomsRefs\r\n            atomsList[numAtomsRefs * 2 + 0] = i\r\n            atomsList[numAtomsRefs * 2 + 1] = indexNext\r\n            numAtomsRefs++\r\n          } // for (x)\r\n        } // for (y)\r\n      } // for (z)\r\n    } // for (i)\r\n\r\n    // convert Array to Int32Array\r\n    this._atomsList = Int32Array.from(atomsList)\r\n\r\n    return 0\r\n  }\r\n\r\n  destroyVoxels() {\r\n    this._atomsList = null\r\n    this._voxelList = null\r\n\r\n    this._atoms = null\r\n    this._vertices = null\r\n    this._vBoxMin = null\r\n    this._vBoxMax = null\r\n  }\r\n\r\n  /**\r\n   * Enumerate all atoms affecting specified point\r\n   *\r\n   * @param {Vector3}    point    - point in 3D\r\n   * @param {func(atom)} process  - function to call for each atom\r\n   */\r\n  forEachRelatedAtom(point, process) {\r\n    // find corresponding voxel\r\n    const xInd = Math.floor(\r\n      (point.x - this._vBoxMin.x) * this._numCells * this._xScale\r\n    )\r\n    const yInd = Math.floor(\r\n      (point.y - this._vBoxMin.y) * this._numCells * this._yScale\r\n    )\r\n    const zInd = Math.floor(\r\n      (point.z - this._vBoxMin.z) * this._numCells * this._zScale\r\n    )\r\n    const indVoxel =\r\n      xInd + yInd * this._numCells + zInd * this._numCells * this._numCells\r\n\r\n    // run through atoms affecting this voxel\r\n    const atoms = this._atoms\r\n    for (\r\n      let ref = this._voxelList[indVoxel];\r\n      ref >= 0;\r\n      ref = this._atomsList[ref * 2 + 1]\r\n    ) {\r\n      const indexAtom = this._atomsList[ref * 2]\r\n      process(atoms[indexAtom])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get atom closest to specified point\r\n   *\r\n   * @param {Vector3} point  - point in 3D\r\n   *\r\n   * @returns {IsoSurfaceAtomColored} atom, or null if not found\r\n   */\r\n  getClosestAtom(point) {\r\n    let closest = null\r\n    let minDist2 = Number.MAX_VALUE\r\n\r\n    this.forEachRelatedAtom(point, (atom) => {\r\n      const dist2 = point.distanceToSquared(atom.coord)\r\n      if (dist2 < minDist2) {\r\n        minDist2 = dist2\r\n        closest = atom\r\n      }\r\n    })\r\n\r\n    return closest\r\n  }\r\n\r\n  /**\r\n   * Build normals for isosurface, using atoms information\r\n   *\r\n   * @param {number} numVertices  - Number of vertices in final geometry (to render)\r\n   * @param {Vector3} vertices    - Geometry vertices (3d coordinates array)\r\n   * @param {Vector3} normals     - Normals for output\r\n   *\r\n   * @returns {number} 0, if success\r\n   */\r\n  buildNormals(numVertices, vertices, normals) {\r\n    const self = this\r\n    let numCloseAtoms = 0\r\n    let vx = 0\r\n    let vy = 0\r\n    let vz = 0\r\n    let dist2\r\n    let vNormalX = 0\r\n    let vNormalY = 0\r\n    let vNormalZ = 0\r\n    let koef = 0\r\n    let w = 0\r\n    const r25 = 2.5\r\n    const r01 = 0.1\r\n\r\n    const maxRadAffect = this._aveRad * r25\r\n    const maxRadAffect2 = maxRadAffect * maxRadAffect\r\n    const expScale = -this._aveRad * r01\r\n\r\n    // some stats\r\n    // numSlowAtoms = 0;\r\n\r\n    const gatherNormals = function (atom) {\r\n      const dx = vx - atom.coord.x\r\n      const dy = vy - atom.coord.y\r\n      const dz = vz - atom.coord.z\r\n      dist2 = dx * dx + dy * dy + dz * dz\r\n      if (dist2 > maxRadAffect2) {\r\n        return\r\n      }\r\n\r\n      // get weight for gaussian smoothing\r\n      const rad = atom.radius + self._probeRadius\r\n      koef = dist2 - rad * rad\r\n      if (koef < 0.0) {\r\n        koef = -koef\r\n      }\r\n      w = Math.exp(expScale * koef)\r\n\r\n      vNormalX += dx * w\r\n      vNormalY += dy * w\r\n      vNormalZ += dz * w\r\n      numCloseAtoms++\r\n    }\r\n\r\n    let maxClosedAtoms = 0\r\n    // process all vertices, one by one\r\n    for (let i = 0; i < numVertices; i++) {\r\n      vx = vertices[i].x\r\n      vy = vertices[i].y\r\n      vz = vertices[i].z\r\n\r\n      numCloseAtoms = 0\r\n      vNormalX = vNormalY = vNormalZ = 0.0\r\n\r\n      this.forEachRelatedAtom(vertices[i], gatherNormals)\r\n\r\n      maxClosedAtoms =\r\n        numCloseAtoms > maxClosedAtoms ? numCloseAtoms : maxClosedAtoms\r\n\r\n      // normalize vNormal\r\n      dist2 = vNormalX * vNormalX + vNormalY * vNormalY + vNormalZ * vNormalZ\r\n      if (numCloseAtoms > 0) {\r\n        koef = 1.0 / Math.sqrt(dist2)\r\n        vNormalX *= koef\r\n        vNormalY *= koef\r\n        vNormalZ *= koef\r\n      }\r\n      normals[i].x = vNormalX\r\n      normals[i].y = vNormalY\r\n      normals[i].z = vNormalZ\r\n    } // for (i) all vertices\r\n\r\n    return 0\r\n  }\r\n\r\n  /**\r\n   * Build vertex colors for isosurface, using atoms information\r\n   *\r\n   * @param {number} numVertices  - Number of vertices in final geometry (to render)\r\n   * @param {Vector3} vertices    - Geometry vertices (3d coordinates array)\r\n   * @param {Vector3} colors                - Colors for output\r\n   * @param {number} radiusColorSmoothness  - Radius of smoothness sphere\r\n   *\r\n   * @returns {number} 0, if success\r\n   */\r\n  buildColors(numVertices, vertices, colors, radiusColorSmoothness) {\r\n    const self = this\r\n    let vx = 0.0\r\n    let vy = 0.0\r\n    let vz = 0.0\r\n    let koef = 0.0\r\n    let w = 0.0\r\n    const KOEF_ADD = 0.8\r\n\r\n    const maxRadAffect = radiusColorSmoothness\r\n    const maxRadAffect2 = maxRadAffect * maxRadAffect\r\n\r\n    let colorsClose = []\r\n    let weights = []\r\n    let weightsSum = 0\r\n\r\n    const gatherColors = function (atom) {\r\n      const dx = vx - atom.coord.x\r\n      const dy = vy - atom.coord.y\r\n      const dz = vz - atom.coord.z\r\n      const dist2 = dx * dx + dy * dy + dz * dz\r\n      if (dist2 > maxRadAffect2) {\r\n        return\r\n      }\r\n\r\n      // get weight for gaussian smoothing\r\n      const rad = atom.radius + self._probeRadius\r\n      koef = dist2 - rad * rad\r\n      if (koef < 0.0) {\r\n        koef = -koef\r\n      }\r\n      w = 1.0 / (KOEF_ADD + koef)\r\n\r\n      colorsClose.push([atom.colorX, atom.colorY, atom.colorZ])\r\n      weights.push(w) // save weights for use\r\n      weightsSum += w // calc sum of weights fo further normalization\r\n    }\r\n\r\n    // process all vertices, one by one\r\n    for (let i = 0; i < numVertices; i++) {\r\n      vx = vertices[i].x\r\n      vy = vertices[i].y\r\n      vz = vertices[i].z\r\n\r\n      colorsClose = []\r\n      weights = []\r\n      weightsSum = 0\r\n\r\n      this.forEachRelatedAtom(vertices[i], gatherColors)\r\n\r\n      // normalized weighted sum of colors\r\n      for (let j = 0; j < colorsClose.length; ++j) {\r\n        const weightNormalized = weights[j] / weightsSum\r\n        colors[i].x += colorsClose[j][0] * weightNormalized\r\n        colors[i].y += colorsClose[j][1] * weightNormalized\r\n        colors[i].z += colorsClose[j][2] * weightNormalized\r\n      }\r\n    } // for (i) all vertices\r\n    return 0\r\n  }\r\n}\r\nexport default IsosurfaceBuildNormals\r\n",
		"import { Vector3 } from 'three'\r\n\r\n/**\r\n * Class for geometry (triangle mesh) representation\r\n *\r\n *\r\n * @param {number} maxNumVertices Maximum possible number of vertices in mesh\r\n * @param {number} maxNumTriangles Maximum possible number of triangles in mesh\r\n * @param {boolean} needVertexColors Obvious\r\n */\r\nclass IsoSurfaceGeo {\r\n  constructor(maxNumVertices, maxNumTriangles, needVertexColors) {\r\n    this._maxNumVertices = maxNumVertices\r\n    this._maxNumTriangles = maxNumTriangles\r\n    this._vertices = new Array(maxNumVertices)\r\n    this._normals = new Array(maxNumVertices)\r\n    this._colors = null\r\n    if (needVertexColors) {\r\n      this._colors = new Array(maxNumVertices)\r\n    }\r\n    this._indices = new Array(maxNumTriangles * (1 + 2))\r\n    this._numVertices = 0\r\n    this._numTriangles = 0\r\n\r\n    let i\r\n    for (i = 0; i < maxNumVertices; i++) {\r\n      this._vertices[i] = new Vector3()\r\n      this._normals[i] = new Vector3()\r\n    }\r\n    for (i = 0; i < maxNumTriangles * (1 + 2); i++) {\r\n      this._indices[i] = -1\r\n    }\r\n    if (needVertexColors) {\r\n      for (i = 0; i < maxNumVertices; i++) {\r\n        this._colors[i] = new Vector3()\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this._vertices = null\r\n    this._normals = null\r\n    this._indices = null\r\n  }\r\n}\r\nexport default IsoSurfaceGeo\r\n",
		"import IsoSurfaceGeometry from './IsoSurfaceGeometry'\r\nimport IsoSurfaceAtomColored from './IsoSurfaceAtomColored'\r\nimport IsosurfaceBuildNormals from './IsosurfaceBuildNormals'\r\nimport IsoSurfaceMarchCube from './IsoSurfaceMarchCube'\r\nimport IsoSurfaceGeo from './IsoSurfaceGeo'\r\nimport chem from '../../chem'\r\nimport utils from '../../utils'\r\nimport { BufferAttribute, Vector3 } from 'three'\r\n\r\nconst COLOR_SIZE = 3\r\nconst HASH_SIZE = 32768\r\nconst { Element } = chem\r\n\r\n/**\r\n * This class implements 'quick' isosurface geometry generation algorithm.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\n\r\nclass SSIsosurfaceGeometry extends IsoSurfaceGeometry {\r\n  _build() {\r\n    // convert geoOut into arrays of positions, indices, normals\r\n    this._innerBuild()\r\n    const geoOut = this.getGeo()\r\n    this.destroy()\r\n    this._fromGeo(geoOut)\r\n  }\r\n\r\n  _fromGeo(geoOut) {\r\n    let colors = null\r\n    const positions = utils.allocateTyped(\r\n      Float32Array,\r\n      (1 + 2) * geoOut._numVertices\r\n    )\r\n    const normals = utils.allocateTyped(\r\n      Float32Array,\r\n      (1 + 2) * geoOut._numVertices\r\n    )\r\n    if (geoOut._colors !== null) {\r\n      colors = utils.allocateTyped(Float32Array, (1 + 2) * geoOut._numVertices)\r\n    }\r\n    const indices = utils.allocateTyped(\r\n      Uint32Array,\r\n      (1 + 2) * geoOut._numTriangles\r\n    )\r\n\r\n    for (let i = 0, j = 0; i < geoOut._numVertices; i++) {\r\n      positions[j + 0] = geoOut._vertices[i].x\r\n      positions[j + 1] = geoOut._vertices[i].y\r\n      positions[j + 2] = geoOut._vertices[i].z\r\n      normals[j + 0] = geoOut._normals[i].x\r\n      normals[j + 1] = geoOut._normals[i].y\r\n      normals[j + 2] = geoOut._normals[i].z\r\n      j += 3\r\n    }\r\n    if (colors !== null) {\r\n      for (let i = 0, j = 0; i < geoOut._numVertices; i++, j += 3) {\r\n        colors[j + 0] = geoOut._colors[i].x\r\n        colors[j + 1] = geoOut._colors[i].y\r\n        colors[j + 2] = geoOut._colors[i].z\r\n      }\r\n    }\r\n\r\n    const numTri3 = geoOut._numTriangles * (1 + 2)\r\n    for (let i = 0; i < numTri3; i++) {\r\n      indices[i] = geoOut._indices[i]\r\n    }\r\n\r\n    this.setIndex(new BufferAttribute(indices, 1))\r\n    this.setAttribute('position', new BufferAttribute(positions, 3))\r\n    this.setAttribute('normal', new BufferAttribute(normals, 3))\r\n    this.setAttribute('color', new BufferAttribute(colors, 3))\r\n    this.computeBoundingBox()\r\n    this.computeBoundingSphere()\r\n\r\n    geoOut.destroy()\r\n  }\r\n\r\n  convertToAtomsColored(packedArrays, atomsColored) {\r\n    const { atoms, colors } = packedArrays\r\n    for (let i = 0, numAtoms = atoms.length; i < numAtoms; i++) {\r\n      const vCenter = atoms[i].position\r\n      const { radius } = atoms[i].element\r\n      atomsColored[i] = new IsoSurfaceAtomColored(vCenter, radius)\r\n      const nm = atoms[i].element.number\r\n      atomsColored[i].atomType = this.getType(nm)\r\n      let cIdx = COLOR_SIZE * i\r\n      atomsColored[i].colorX = colors[cIdx++]\r\n      atomsColored[i].colorY = colors[cIdx++]\r\n      atomsColored[i].colorZ = colors[cIdx]\r\n      atomsColored[i].srcAtom = atoms[i]\r\n    }\r\n  }\r\n\r\n  getGeo() {\r\n    return this.geoOut\r\n  }\r\n\r\n  destroy() {\r\n    this.atoms = null\r\n\r\n    this.hashLines = null\r\n    this.hashEntries = null\r\n  }\r\n\r\n  /**\r\n   * Calculates bounding box for array with spheres (atoms)\r\n   *\r\n   * @param {Object}  atoms      Atoms array\r\n   * @param {Vector3} vBoxMin    Bounding box min point\r\n   * @param {Vector3} vBoxMax    Bounding box max point\r\n   */\r\n  getBoundingBox(atoms, vBoxMin, vBoxMax) {\r\n    const bigNum = 10000000.0\r\n\r\n    vBoxMin.x = vBoxMin.y = vBoxMin.z = bigNum\r\n    vBoxMax.x = vBoxMax.y = vBoxMax.z = 0 - bigNum\r\n\r\n    const probeRadius2 = this.probeRadius * this.atomRadiusScale\r\n    let radMax = 0.0\r\n    for (let i = 0, num = atoms.length; i < num; i++) {\r\n      const vCenter = atoms[i].coord\r\n      const rad = atoms[i].radius + probeRadius2\r\n      radMax = rad > radMax ? rad : radMax\r\n      if (vCenter.x - rad < vBoxMin.x) {\r\n        vBoxMin.x = vCenter.x - rad\r\n      }\r\n      if (vCenter.y - rad < vBoxMin.y) {\r\n        vBoxMin.y = vCenter.y - rad\r\n      }\r\n      if (vCenter.z - rad < vBoxMin.z) {\r\n        vBoxMin.z = vCenter.z - rad\r\n      }\r\n      if (vCenter.x + rad > vBoxMax.x) {\r\n        vBoxMax.x = vCenter.x + rad\r\n      }\r\n      if (vCenter.y + rad > vBoxMax.y) {\r\n        vBoxMax.y = vCenter.y + rad\r\n      }\r\n      if (vCenter.z + rad > vBoxMax.z) {\r\n        vBoxMax.z = vCenter.z + rad\r\n      }\r\n    }\r\n    vBoxMin.x -= radMax\r\n    vBoxMin.y -= radMax\r\n    vBoxMin.z -= radMax\r\n    vBoxMax.x += radMax\r\n    vBoxMax.y += radMax\r\n    vBoxMax.z += radMax\r\n  }\r\n\r\n  /**\r\n   * Calculate (x,y,z) cordinate of the cell corner point\r\n   *\r\n   * @param {Vector3} vBoxMin Bounding box min point\r\n   * @param {Vector3} vBoxMax Bounding box max point\r\n   * @param {number} x Cell integer x coordinate\r\n   * @param {number} y Cell integer y coordinate\r\n   * @param {number} z Cell integer z coordinate\r\n   * @param {number} numPoints NUm points in cell on side\r\n   * @param {Vector3} vOut Output vector\r\n   */\r\n  getCornerCoord(vBoxMin, vBoxMax, x, y, z, numPoints, vOut) {\r\n    const invNP = 1.0 / (numPoints - 1.0)\r\n    const tx = x * invNP\r\n    const ty = y * invNP\r\n    const tz = z * invNP\r\n\r\n    vOut.x = vBoxMin.x * (1.0 - tx) + vBoxMax.x * tx\r\n    vOut.y = vBoxMin.y * (1.0 - ty) + vBoxMax.y * ty\r\n    vOut.z = vBoxMin.z * (1.0 - tz) + vBoxMax.z * tz\r\n  }\r\n\r\n  /**\r\n   * Calculate point of intersection of sphere surface\r\n   * and cell edge, given by [indexA, indexB] line\r\n   *\r\n   * @param {number} indexA Cell vertex index in [0..11]\r\n   * @param {number} indexB Cell vertex index in [0..11]\r\n   * @param {array}  sign   Sign array for all 8 vertices\r\n   * @param {object} cube   Cube\r\n   * @param {number} indexPointValue for value placement\r\n   * @param {Vector3} vOut  Point of intersection\r\n   */\r\n  buildEdgePoint(indexA, indexB, sign, cube, indexPointValue, vOut) {\r\n    if (sign[indexA] ^ sign[indexB]) {\r\n      const cTwentyFour = 24\r\n      const a =\r\n        0 - cube.pointsValuesLinear[indexPointValue + cTwentyFour + indexA]\r\n      const b = cube.pointsValuesLinear[indexPointValue + cTwentyFour + indexB]\r\n      const c = cube.pointsValuesLinear[indexPointValue + cTwentyFour + indexA]\r\n      const t = a / (b - c)\r\n      const xa = cube.pointsValuesLinear[indexPointValue + indexA * (2 + 1) + 0]\r\n      const ya = cube.pointsValuesLinear[indexPointValue + indexA * (2 + 1) + 1]\r\n      const za = cube.pointsValuesLinear[indexPointValue + indexA * (2 + 1) + 2]\r\n      const xb = cube.pointsValuesLinear[indexPointValue + indexB * (2 + 1) + 0]\r\n      const yb = cube.pointsValuesLinear[indexPointValue + indexB * (2 + 1) + 1]\r\n      const zb = cube.pointsValuesLinear[indexPointValue + indexB * (2 + 1) + 2]\r\n\r\n      vOut.x = xa * (1.0 - t) + xb * t\r\n      vOut.y = ya * (1.0 - t) + yb * t\r\n      vOut.z = za * (1.0 - t) + zb * t\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if triangle is visible (vertices are close to atoms included in visibility set)\r\n   *\r\n   * @param {Vector3} v0 Vertex #0\r\n   * @param {Vector3} v1 Vertex #1\r\n   * @param {Vector3} v2 Vertex #2\r\n   * @returns {boolean} true if triangle is visible\r\n   */\r\n  isTriangleVisible(v0, v1, v2) {\r\n    const a0 = this.voxelWorld.getClosestAtom(v0)\r\n    const a1 = this.voxelWorld.getClosestAtom(v1)\r\n    const a2 = this.voxelWorld.getClosestAtom(v2)\r\n    if (\r\n      a0 === null ||\r\n      a1 === null ||\r\n      a2 === null ||\r\n      a0.srcAtom === null ||\r\n      a1.srcAtom === null ||\r\n      a2.srcAtom === null\r\n    ) {\r\n      return false\r\n    }\r\n\r\n    return (\r\n      this.visibilitySelector.includesAtom(a0.srcAtom) &&\r\n      this.visibilitySelector.includesAtom(a1.srcAtom) &&\r\n      this.visibilitySelector.includesAtom(a2.srcAtom)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Add triangle to result geometry\r\n   *\r\n   * @param {Vector3} v0 Vertex #0\r\n   * @param {Vector3} v1 Vertex #1\r\n   * @param {Vector3} v2 Vertex #2\r\n   * @returns {boolean} false if no more triangles can be added\r\n   */\r\n  addTriangle(v0, v1, v2) {\r\n    if (this.visibilitySelector && !this.isTriangleVisible(v0, v1, v2)) {\r\n      return true\r\n    }\r\n\r\n    const geo = this.geoOut\r\n\r\n    if (geo._numTriangles >= this.maxNumTriangles) {\r\n      return false\r\n    }\r\n\r\n    // Add vertex with optimize\r\n    const indInGeo0 = this.addVertexToGeo(geo, v0)\r\n    const indInGeo1 = this.addVertexToGeo(geo, v1)\r\n    const indInGeo2 = this.addVertexToGeo(geo, v2)\r\n    if ((indInGeo0 | indInGeo1 | indInGeo2) < 0) {\r\n      return false\r\n    }\r\n\r\n    const itr = 3 * geo._numTriangles\r\n    geo._indices[itr + 0] = indInGeo0\r\n    geo._indices[itr + 1] = indInGeo1\r\n    geo._indices[itr + 2] = indInGeo2\r\n    geo._numTriangles++\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Build result geometry (triangle mesh) from marching cube cells\r\n   *\r\n   * @param {number} meshRes Marchnig cube vertex count on each side\r\n   * @param {Vector3} vBoxMin Bounding box point min\r\n   * @param {Vector3} vBoxMax Bounding box point max\r\n   * @param {number} corners float values array for each cube point\r\n   * @param {Vector3} vCellStep vector to next cube cell diagonal point\r\n   * @param {object} cube IsoSurfaceMarchCube object\r\n   * @returns {number} 0, if success (<0) is error\r\n   */\r\n  buildGeoFromCorners(meshRes, vBoxMin, vBoxMax, corners, vCellStep, cube) {\r\n    const arrSize = 12\r\n    const cNumVerts = 8\r\n    const numCells = meshRes - 1\r\n    const side = meshRes\r\n    const side2 = meshRes * meshRes\r\n\r\n    const vaEdges = new Array(arrSize)\r\n    for (let i = 0; i < arrSize; i++) {\r\n      vaEdges[i] = new Vector3()\r\n    }\r\n    const sign = []\r\n    for (let i = 0; i < cNumVerts; i++) {\r\n      sign[i] = 1.0\r\n    }\r\n    const vCorner = new Vector3()\r\n    let indCell = 0\r\n    let indY = 0\r\n    for (let y = 0; y < numCells; y++, indY += side2) {\r\n      let indZ = 0\r\n      for (let z = 0; z < numCells; z++, indZ += side) {\r\n        for (let x = 0; x < numCells; x++) {\r\n          if (!cube.hasIntersection[indCell]) {\r\n            // next cell\r\n            indCell++\r\n            continue\r\n          }\r\n          const bitsInside = cube.bitsInside[indCell]\r\n\r\n          this.getCornerCoord(vBoxMin, vBoxMax, x, y, z, meshRes, vCorner)\r\n\r\n          const indPointValues = indCell * (2 << (2 + 2))\r\n          for (let i = 0, j = 0; i < cNumVerts; i++) {\r\n            cube.pointsValuesLinear[indPointValues + j++] = vCorner.x\r\n            cube.pointsValuesLinear[indPointValues + j++] = vCorner.y\r\n            cube.pointsValuesLinear[indPointValues + j++] = vCorner.z\r\n          }\r\n\r\n          cube.pointsValuesLinear[indPointValues + 3] += vCellStep.x\r\n          cube.pointsValuesLinear[indPointValues + 2 * 3] += vCellStep.x\r\n          cube.pointsValuesLinear[indPointValues + 5 * 3] += vCellStep.x\r\n          cube.pointsValuesLinear[indPointValues + 6 * 3] += vCellStep.x\r\n\r\n          cube.pointsValuesLinear[indPointValues + 2 * 3 + 2] += vCellStep.z\r\n          cube.pointsValuesLinear[indPointValues + 3 * 3 + 2] += vCellStep.z\r\n          cube.pointsValuesLinear[indPointValues + 6 * 3 + 2] += vCellStep.z\r\n          cube.pointsValuesLinear[indPointValues + 7 * 3 + 2] += vCellStep.z\r\n\r\n          cube.pointsValuesLinear[indPointValues + 4 * 3 + 1] += vCellStep.y\r\n          cube.pointsValuesLinear[indPointValues + 5 * 3 + 1] += vCellStep.y\r\n          cube.pointsValuesLinear[indPointValues + 6 * 3 + 1] += vCellStep.y\r\n          cube.pointsValuesLinear[indPointValues + 7 * 3 + 1] += vCellStep.y\r\n\r\n          // now current cell has intersections (from -x to +x) on some cube edges\r\n          const indValues = indPointValues + 24\r\n          for (let i = 0; i < cNumVerts; ++i) {\r\n            sign[i] = cube.pointsValuesLinear[indValues + i] < 0.0 ? 1 : 0\r\n          }\r\n\r\n          this.buildEdgePoint(0, 1, sign, cube, indPointValues, vaEdges[0])\r\n          this.buildEdgePoint(1, 2, sign, cube, indPointValues, vaEdges[1])\r\n          this.buildEdgePoint(2, 3, sign, cube, indPointValues, vaEdges[2])\r\n          this.buildEdgePoint(3, 0, sign, cube, indPointValues, vaEdges[3])\r\n\r\n          this.buildEdgePoint(4, 5, sign, cube, indPointValues, vaEdges[4])\r\n          this.buildEdgePoint(5, 6, sign, cube, indPointValues, vaEdges[5])\r\n          this.buildEdgePoint(6, 7, sign, cube, indPointValues, vaEdges[6])\r\n          this.buildEdgePoint(7, 4, sign, cube, indPointValues, vaEdges[7])\r\n\r\n          this.buildEdgePoint(0, 4, sign, cube, indPointValues, vaEdges[8])\r\n          this.buildEdgePoint(1, 5, sign, cube, indPointValues, vaEdges[9])\r\n          this.buildEdgePoint(2, 6, sign, cube, indPointValues, vaEdges[10])\r\n          this.buildEdgePoint(3, 7, sign, cube, indPointValues, vaEdges[11])\r\n\r\n          const offs = bitsInside * (2 << (1 + 2))\r\n          for (\r\n            let numTri = 0, indTri = 0;\r\n            numTri < 2 + 2 + 2;\r\n            numTri++, indTri += 3\r\n          ) {\r\n            // s_triIndicesMarchCube is external array, defined in mold_ind.js\r\n            const i0 = cube.striIndicesMarchCube[offs + indTri]\r\n            if (i0 < 0) {\r\n              break\r\n            }\r\n            const i1 = cube.striIndicesMarchCube[offs + indTri + 1]\r\n            const i2 = cube.striIndicesMarchCube[offs + indTri + 2]\r\n\r\n            if (!this.addTriangle(vaEdges[i0], vaEdges[i1], vaEdges[i2])) {\r\n              return 0 - 2\r\n            }\r\n          } // for numTri\r\n\r\n          // next cell (cube)\r\n          indCell++\r\n        } // for (x)\r\n      } // for (z)\r\n    } // for (y)\r\n    return 0\r\n  }\r\n\r\n  /**\r\n   * Returns number of cell with intersection with at least one sphere.\r\n   * Using this number, we can estimate required number of vertices\r\n   * and triangles to build result mesh.\r\n   *\r\n   * @param {number} side Number of points in cube voxels\r\n   * @param {number} numCells Number of cells in cube voxels (per direction)\r\n   * @param {array} corners Array of float values for cube corner points\r\n   * @param {object} cube IsoSurfaceMarchCube object\r\n   * @returns {number} numIntersectedCells\r\n   */\r\n  getNumIntersectedCells(side, numCells, corners, cube) {\r\n    const side2 = side * side\r\n    const cNumVerts = 8\r\n    let numIntersectedCells = 0\r\n\r\n    let indCell = 0\r\n    let indY = 0\r\n    for (let y = 0; y < numCells; y++, indY += side2) {\r\n      let indZ = 0\r\n      for (let z = 0; z < numCells; z++, indZ += side) {\r\n        for (let x = 0; x < numCells; x++) {\r\n          const cubeValuesIndex = indCell * (2 << (2 + 2)) + 24\r\n          const indCorner = x + indZ + indY\r\n\r\n          cube.pointsValuesLinear[cubeValuesIndex] = corners[indCorner]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 1] = corners[indCorner + 1]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 2] =\r\n            corners[indCorner + side + 1]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 3] =\r\n            corners[indCorner + side]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 4] =\r\n            corners[side2 + indCorner]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 5] =\r\n            corners[side2 + indCorner + 1]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 6] =\r\n            corners[side2 + indCorner + side + 1]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 7] =\r\n            corners[side2 + indCorner + side]\r\n\r\n          // check read exception\r\n          // assert(side2 + indCorner + side + 1 < side3);\r\n\r\n          // get bit flags inside\r\n          let bitsInside = 0\r\n          for (let i = 0; i < cNumVerts; ++i) {\r\n            if (cube.pointsValuesLinear[cubeValuesIndex + i] < 0.0) {\r\n              bitsInside |= 1 << i\r\n            }\r\n          }\r\n\r\n          if (bitsInside === 0 || bitsInside === (1 << cNumVerts) - 1) {\r\n            cube.hasIntersection[indCell] = false\r\n          } else {\r\n            cube.hasIntersection[indCell] = true\r\n            numIntersectedCells++\r\n          }\r\n          cube.bitsInside[indCell] = bitsInside\r\n          // next cell\r\n          indCell++\r\n        } // for (x)\r\n      } // for (z)\r\n    } // for (y)\r\n    return numIntersectedCells\r\n  }\r\n\r\n  getType(letter) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const atomT = [\r\n      0, 0, 1, 1, 2, 6, 3, 6, 4, 6, 5, 6, 6, 0, 7, 3, 8, 2, 9, 6, 10, 6, 11, 6,\r\n      12, 6, 13, 6, 14, 6, 15, 4, 16, 5, 17, 6, 18, 6, 19, 6, 20, 6, 21, 6, 22,\r\n      6, 23, 6, 24, 6, 25, 6, 26, 6, 27, 6, 28, 6, 29, 6, 30, 6, 31, 6, 32, 6,\r\n      33, 6, 34, 6, 35, 6, 36, 6, 37, 6, 38, 6, 39, 6, 40, 6, 41, 6, 42, 6, 43,\r\n      6, 44, 6, 45, 6, 46, 6, 47, 6, 48, 6, 49, 6, 50, 6, 51, 6, 52, 6, 53, 6,\r\n      54, 6, 55, 6, 56, 6, 57, 6, 58, 6, 59, 6, 60, 6, 61, 6, 62, 6, 63, 6, 64,\r\n      6, 65, 6, 66, 6, 67, 6, 68, 6, 69, 6, 70, 6, 71, 6, 72, 6, 73, 6, 74, 6,\r\n      75, 6, 76, 6, 77, 6, 78, 6, 79, 6, 80, 6, 81, 6, 82, 6, 83, 6, 84, 6, 85,\r\n      6, 86, 6, 87, 6, 88, 6, 89, 6, 90, 6, 91, 6, 92, 6, 93, 6, 94, 6, 95, 6,\r\n      96, 6, 97, 6, 98, 6, 99, 6, 100, 6, 101, 6, 102, 6, 103, 6, 104, 6, 105,\r\n      6, 106, 6, 107, 6, 108, 6, 109, 6\r\n    ]\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    if (\r\n      letter < 1 ||\r\n      letter > atomT.length / 2 ||\r\n      Object.keys(Element.ByAtomicNumber).length * 2 !== atomT.length\r\n    ) {\r\n      throw new Error(\r\n        'atomT.length  should be equal Element.ByAtomicNumber.length * 2'\r\n      )\r\n    }\r\n    return atomT[letter * 2]\r\n  }\r\n\r\n  /**\r\n   * Calculate values for marching cube grid points\r\n   * positive values are outside sphere, negative - is inside\r\n   *\r\n   * @param {array} corners array of float values\r\n   * @param {number} side Number of point in cube in 1 dimennsion\r\n   * @param {Vector3} vBoxMin Bounding box min point\r\n   * @param {Vector3} vBoxMax Bounding box max point\r\n   * @param {array} atoms Array of input atoms\r\n   * @param {number} probeRad radius for atom probing\r\n   */\r\n  calculateGridCorners(corners, side, vBoxMin, vBoxMax, atoms, probeRad) {\r\n    const side2 = side * side\r\n    const side3 = side2 * side\r\n    const vCorner = new Vector3()\r\n    const vDif = new Vector3()\r\n    /* eslint-disable no-magic-numbers */\r\n    const aLot = +1.0e12\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    for (let i = 0; i < side3; i++) {\r\n      corners[i] = aLot // to large value\r\n    }\r\n\r\n    const xScale = (side - 1) / (vBoxMax.x - vBoxMin.x)\r\n    const yScale = (side - 1) / (vBoxMax.y - vBoxMin.y)\r\n    const zScale = (side - 1) / (vBoxMax.z - vBoxMin.z)\r\n\r\n    for (let s = 0, numAtoms = atoms.length; s < numAtoms; s++) {\r\n      const atom = atoms[s]\r\n      const radius = atom.radius + probeRad\r\n\r\n      const fx = (atom.coord.x - radius - vBoxMin.x) * xScale\r\n      const fy = (atom.coord.y - radius - vBoxMin.y) * yScale\r\n      const fz = (atom.coord.z - radius - vBoxMin.z) * zScale\r\n\r\n      const indXMin = Math.floor(fx)\r\n      const indYMin = Math.floor(fy)\r\n      const indZMin = Math.floor(fz)\r\n\r\n      let indXMax = Math.floor((atom.coord.x + radius - vBoxMin.x) * xScale)\r\n      let indYMax = Math.floor((atom.coord.y + radius - vBoxMin.y) * yScale)\r\n      let indZMax = Math.floor((atom.coord.z + radius - vBoxMin.z) * zScale)\r\n\r\n      indXMax++\r\n      indYMax++\r\n      indZMax++\r\n      indXMax = indXMax <= side - 1 ? indXMax : side - 1\r\n      indYMax = indYMax <= side - 1 ? indYMax : side - 1\r\n      indZMax = indZMax <= side - 1 ? indZMax : side - 1\r\n\r\n      for (let y = indYMin; y <= indYMax; y++) {\r\n        const indY = y * side2\r\n        for (let z = indZMin; z <= indZMax; z++) {\r\n          const indZ = z * side\r\n          for (let x = indXMin; x <= indXMax; x++) {\r\n            const ind = indY + indZ + x\r\n            this.getCornerCoord(vBoxMin, vBoxMax, x, y, z, side, vCorner)\r\n            vDif.x = vCorner.x - atom.coord.x\r\n            vDif.y = vCorner.y - atom.coord.y\r\n            vDif.z = vCorner.z - atom.coord.z\r\n            const distToSphere = Math.sqrt(\r\n              vDif.x * vDif.x + vDif.y * vDif.y + vDif.z * vDif.z\r\n            )\r\n            // val: < 0, if inside sphere\r\n            // val: > 0, if outside sphere\r\n            const val = distToSphere - radius\r\n            if (val < corners[ind]) {\r\n              corners[ind] = val\r\n            }\r\n          } // for (x)\r\n        } // for (z)\r\n      } // for (y)\r\n    } // for (s)\r\n  }\r\n\r\n  /**\r\n   * Create memory pool for vertex hash management\r\n   *\r\n   * @param {number} maxNumVertices Maximum possible number of vertices (that will be build)\r\n   * @param {number} maxNumTriangles Maximum possible number of triangles (that will be build)\r\n   * @returns {number} 0, if success. (<0) is non memory\r\n   */\r\n  createVertexHash(maxNumVertices, maxNumTriangles) {\r\n    this.hashLines = utils.allocateTyped(Int32Array, HASH_SIZE * 2)\r\n    if (this.hashLines === null) {\r\n      return 0 - 1\r\n    }\r\n    for (let i = 0, j = 0; i < HASH_SIZE; i++) {\r\n      this.hashLines[j++] = 0 // num vertices in this hash line\r\n      this.hashLines[j++] = 0 - 1 // index of the first entry\r\n    }\r\n\r\n    this.maxNumVertices = maxNumVertices\r\n    this.maxNumTriangles = maxNumTriangles\r\n\r\n    this.numHashEtriesAllocated = maxNumVertices\r\n    this.hashEntries = utils.allocateTyped(\r\n      Int32Array,\r\n      2 * this.numHashEtriesAllocated\r\n    )\r\n    if (this.hashEntries === null) {\r\n      return 0 - 1\r\n    }\r\n    for (let i = 0, j = 0; i < this.numHashEtriesAllocated; i++) {\r\n      this.hashEntries[j++] = 0 - 1 // index of vertex\r\n      this.hashEntries[j++] = 0 - 1 // next hash entry index\r\n    }\r\n    this.numHashEntryIndex = 0\r\n    return 0\r\n  }\r\n\r\n  /**\r\n   * Allocate and return new hash entry. Just check possible amount.\r\n   *\r\n   * @returns {number} index of hash entry, that can be used for geometry add vertex functionality\r\n   */\r\n  getNewHashEntry() {\r\n    if (this.numHashEntryIndex < this.numHashEtriesAllocated) {\r\n      const i = this.numHashEntryIndex\r\n      this.numHashEntryIndex++\r\n      return i\r\n    }\r\n    return 0 - 1\r\n  }\r\n\r\n  /**\r\n   * Add vertex to geometry structure\r\n   * using vertex hash table to quickly check, is this vertex already exist in geometry\r\n   *\r\n   * @param {object} geoOut Geometry to build\r\n   * @param {Vector3} vAdd Vertex to add\r\n   * @returns {number} index of added (or existing) vertex in geometry.\r\n   */\r\n  addVertexToGeo(geoOut, vAdd) {\r\n    let entry\r\n    const oneHynberes = 0.01\r\n    const n815851 = 815851\r\n    const n37633 = 37633\r\n    const n2453543 = 2453543\r\n    const r106 = 1.0e-6\r\n\r\n    const hashResolution = this.marCubeResoultion << 2\r\n    const v = new Vector3()\r\n    const ix = Math.floor(\r\n      (hashResolution * (vAdd.x - this.vBoxMin.x)) /\r\n        (this.vBoxMax.x + oneHynberes - this.vBoxMin.x)\r\n    )\r\n    const iy = Math.floor(\r\n      (hashResolution * (vAdd.y - this.vBoxMin.y)) /\r\n        (this.vBoxMax.y + oneHynberes - this.vBoxMin.y)\r\n    )\r\n    const iz = Math.floor(\r\n      (hashResolution * (vAdd.z - this.vBoxMin.z)) /\r\n        (this.vBoxMax.z + oneHynberes - this.vBoxMin.z)\r\n    )\r\n    let iHash = ix * n815851 + iz * n37633 + iy * n2453543\r\n    iHash &= HASH_SIZE - 1\r\n    const hLineIndex = iHash + iHash\r\n\r\n    // search vertex via hash\r\n    // search in hash list\r\n    if (this.vBoxMin !== null && this.vBoxMax !== null) {\r\n      for (\r\n        entry = this.hashLines[hLineIndex + 1];\r\n        entry >= 0;\r\n        entry = this.hashEntries[entry * 2 + 1]\r\n      ) {\r\n        const ind = this.hashEntries[entry * 2 + 0] // vertex index\r\n        v.copy(geoOut._vertices[ind])\r\n        v.x -= vAdd.x\r\n        v.y -= vAdd.y\r\n        v.z -= vAdd.z\r\n        const dot2 = v.x * v.x + v.y * v.y + v.z * v.z\r\n        if (dot2 < r106) {\r\n          return ind\r\n        } // if (found)\r\n      } // for (entry)\r\n    } // search\r\n\r\n    // add new vertex to geometry\r\n    if (geoOut._numVertices >= this.maxNumVertices) {\r\n      return 0 - 1\r\n    }\r\n\r\n    const iVertAdd = geoOut._numVertices\r\n    geoOut._vertices[iVertAdd].copy(vAdd)\r\n\r\n    // add to hash\r\n    if (this.vBoxMin !== null && this.vBoxMax !== null) {\r\n      entry = this.getNewHashEntry()\r\n      if (entry < 0) {\r\n        return 0 - 1\r\n      }\r\n      const entryFirst = this.hashLines[hLineIndex + 1]\r\n      this.hashLines[hLineIndex + 1] = entry\r\n      this.hashEntries[entry * 2 + 0] = iVertAdd\r\n      this.hashEntries[entry * 2 + 1] = entryFirst\r\n\r\n      this.hashLines[hLineIndex + 0]++ // num vertices in line ++\r\n    }\r\n    geoOut._numVertices++\r\n    return iVertAdd\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} side some placeholder description\r\n   * @param {number} probeSphereRadius some placeholder description\r\n   * @param {object} vBoxMin some placeholder description\r\n   * @param {object} vBoxMax some placeholder description\r\n   * @param {object} geoOut some placeholder description\r\n   * @param {object} corners some placeholder description\r\n   * @returns {number} always 0\r\n   */\r\n  modifyExcludedFromGeo(\r\n    side,\r\n    probeSphereRadius,\r\n    vBoxMin,\r\n    vBoxMax,\r\n    geoOut,\r\n    corners\r\n  ) {\r\n    let ind\r\n    let distToSphere\r\n    let distToBorder\r\n    const r11 = 1.1\r\n\r\n    function innerBlockWorkAround() {\r\n      if (distToBorder > 0.0) {\r\n        // point is inside probe sphere\r\n        if (corners[ind] < 0.0) {\r\n          corners[ind] = distToBorder // was inside surface, now is oustide ( > 0)\r\n        }\r\n        if (distToBorder > corners[ind]) {\r\n          corners[ind] = distToBorder // find positive maximum\r\n        }\r\n      } else if (distToBorder > corners[ind]) {\r\n        // point is outside sphere\r\n        corners[ind] = distToBorder // find negative maximum\r\n      }\r\n    }\r\n\r\n    const side2 = side * side\r\n    const xScale = (side - 1) / (vBoxMax.x - vBoxMin.x)\r\n    const yScale = (side - 1) / (vBoxMax.y - vBoxMin.y)\r\n    const zScale = (side - 1) / (vBoxMax.z - vBoxMin.z)\r\n\r\n    const probeSpRad2 = probeSphereRadius * 2 * (probeSphereRadius * 2)\r\n    const sideInv = 1.0 / (side - 1)\r\n\r\n    for (let i = 0; i < geoOut._numVertices; i++) {\r\n      const vCenter = geoOut._vertices[i]\r\n\r\n      const radEst = probeSphereRadius * r11\r\n\r\n      let indXMin = Math.floor((vCenter.x - radEst - vBoxMin.x) * xScale)\r\n      let indYMin = Math.floor((vCenter.y - radEst - vBoxMin.y) * yScale)\r\n      let indZMin = Math.floor((vCenter.z - radEst - vBoxMin.z) * zScale)\r\n\r\n      let indXMax = Math.floor((vCenter.x + radEst - vBoxMin.x) * xScale)\r\n      let indYMax = Math.floor((vCenter.y + radEst - vBoxMin.y) * yScale)\r\n      let indZMax = Math.floor((vCenter.z + radEst - vBoxMin.z) * zScale)\r\n\r\n      indXMin = indXMin >= 0 ? indXMin : 0\r\n      indYMin = indYMin >= 0 ? indYMin : 0\r\n      indZMin = indZMin >= 0 ? indZMin : 0\r\n      indXMax = indXMax <= side - 1 ? indXMax : side - 1\r\n      indYMax = indYMax <= side - 1 ? indYMax : side - 1\r\n      indZMax = indZMax <= side - 1 ? indZMax : side - 1\r\n\r\n      for (let iy = indYMin; iy <= indYMax; iy++) {\r\n        const indY = iy * side2\r\n        for (let iz = indZMin; iz <= indZMax; iz++) {\r\n          const indZ = iz * side\r\n          for (let ix = indXMin; ix <= indXMax; ix++) {\r\n            ind = indY + indZ + ix\r\n            // getCornerCoord(vBoxMin, vBoxMax, ix, iy, iz, side, &vCorner);\r\n            let t = ix * sideInv\r\n            const xCorner = vBoxMin.x * (1.0 - t) + vBoxMax.x * t\r\n            t = iy * sideInv\r\n            const yCorner = vBoxMin.y * (1.0 - t) + vBoxMax.y * t\r\n            t = iz * sideInv\r\n            const zCorner = vBoxMin.z * (1.0 - t) + vBoxMax.z * t\r\n\r\n            const dx = xCorner - vCenter.x\r\n            const dy = yCorner - vCenter.y\r\n            const dz = zCorner - vCenter.z\r\n            const dist2 = dx * dx + dy * dy + dz * dz\r\n            if (dist2 < probeSpRad2) {\r\n              distToSphere = Math.sqrt(dist2)\r\n              distToBorder = -(distToSphere - probeSphereRadius)\r\n              innerBlockWorkAround()\r\n            } // if (dist from corner point to sphere center more 2 radiuses)\r\n          } // for (ix)\r\n        } // for (iz)\r\n      } // for (iy)\r\n    } // for (i) all geo vertices\r\n    return 0\r\n  }\r\n\r\n  _innerBuild() {\r\n    let ok\r\n    const expandFactor = 1.2\r\n\r\n    // performance test\r\n    // this.performanceTest();\r\n\r\n    // Create temporary atoms (but colored)\r\n    const packedArrays = {\r\n      posRad: this._posRad,\r\n      colors: this._colors,\r\n      atoms: this._opts.atoms\r\n    }\r\n    this.complex = this._opts.parent\r\n    this.atoms = packedArrays.atoms\r\n    this.meshResolution = this._opts.gridSpacing\r\n    this.atomRadiusScale = this._opts.radScale\r\n    this.colorMode = this._opts.colorMode\r\n    this.probeRadius = this._opts.probeRadius\r\n    this.useVertexColors = true\r\n    this.excludeProbe = this._opts.excludeProbe\r\n    this.visibilitySelector = this._opts.visibilitySelector\r\n\r\n    this.geoOut = null\r\n\r\n    this.hashLines = null\r\n    this.hashEntries = null\r\n    this.numHashEtriesAllocated = 0\r\n    this.numHashEntryIndex = 0\r\n    this.maxNumVertices = 0\r\n    this.maxNumTriangles = 0\r\n\r\n    const atomsColored = new Array(this.atoms.length)\r\n    this.convertToAtomsColored(packedArrays, atomsColored)\r\n\r\n    // find bbox for spheres scene\r\n    const vBoxMin = (this.vBoxMin = new Vector3())\r\n    const vBoxMax = (this.vBoxMax = new Vector3())\r\n    this.getBoundingBox(atomsColored, vBoxMin, vBoxMax)\r\n\r\n    const marCubeResoultion = (this.marCubeResoultion =\r\n      this.meshResolution * (2 + 2))\r\n\r\n    // build grid corners for Marching cube algorithm\r\n    const side = marCubeResoultion\r\n    const side2 = side * side\r\n    const side3 = side2 * side\r\n    const corners = utils.allocateTyped(Float32Array, side3)\r\n    const rProbeRadius = this.probeRadius * this.atomRadiusScale\r\n\r\n    this.calculateGridCorners(\r\n      corners,\r\n      side,\r\n      vBoxMin,\r\n      vBoxMax,\r\n      atomsColored,\r\n      rProbeRadius\r\n    )\r\n\r\n    const numCells = marCubeResoultion - 1\r\n    const cube = new IsoSurfaceMarchCube()\r\n    ok = cube.create(numCells)\r\n    if (ok < 0) {\r\n      return ok\r\n    }\r\n    // copy corners to cells\r\n    const vCellStep = new Vector3()\r\n    vCellStep.x = (vBoxMax.x - vBoxMin.x) / numCells\r\n    vCellStep.y = (vBoxMax.y - vBoxMin.y) / numCells\r\n    vCellStep.z = (vBoxMax.z - vBoxMin.z) / numCells\r\n\r\n    let numIntersectedCellsEstim = this.getNumIntersectedCells(\r\n      side,\r\n      numCells,\r\n      corners,\r\n      cube\r\n    )\r\n    let maxNumVertices = Math.floor(numIntersectedCellsEstim * expandFactor)\r\n    let maxNumTriangles = Math.floor(\r\n      numIntersectedCellsEstim * expandFactor * 2\r\n    )\r\n\r\n    this.geoOut = new IsoSurfaceGeo(\r\n      maxNumVertices,\r\n      maxNumTriangles,\r\n      this.useVertexColors\r\n    )\r\n\r\n    ok = this.createVertexHash(maxNumVertices, maxNumTriangles)\r\n    if (ok < 0) {\r\n      return ok\r\n    }\r\n\r\n    // build voxel world (used to check triangle-to-atom tie and to calculate normals and colors)\r\n    let probeRadForNormalsColors = rProbeRadius\r\n    if (this.excludeProbe) {\r\n      probeRadForNormalsColors = 0.01\r\n    }\r\n    this.voxelWorld = new IsosurfaceBuildNormals(\r\n      atomsColored.length,\r\n      atomsColored,\r\n      vBoxMin,\r\n      vBoxMax,\r\n      probeRadForNormalsColors\r\n    )\r\n    this.voxelWorld.createVoxels()\r\n\r\n    ok = this.buildGeoFromCorners(\r\n      marCubeResoultion,\r\n      vBoxMin,\r\n      vBoxMax,\r\n      corners,\r\n      vCellStep,\r\n      cube\r\n    )\r\n    if (this.excludeProbe) {\r\n      // using 3d mesh (geoOut) as a surface points\r\n      // move probe sphere and try to minimuze corners values\r\n      this.modifyExcludedFromGeo(\r\n        side,\r\n        rProbeRadius,\r\n        vBoxMin,\r\n        vBoxMax,\r\n        this.geoOut,\r\n        corners\r\n      )\r\n\r\n      // delete old builded geo\r\n      this.geoOut._vertices = null\r\n      this.geoOut._colors = null\r\n      this.geoOut._indices = null\r\n      this.geoOut._normals = null\r\n      this.geoOut._numVertices = 0\r\n      this.geoOut._numTriangles = 0\r\n      this.geoOut = null\r\n\r\n      // estimage geo vertices budget again\r\n      numIntersectedCellsEstim = this.getNumIntersectedCells(\r\n        side,\r\n        numCells,\r\n        corners,\r\n        cube\r\n      )\r\n      maxNumVertices = Math.floor(numIntersectedCellsEstim * expandFactor)\r\n      maxNumTriangles = Math.floor(numIntersectedCellsEstim * expandFactor * 2)\r\n\r\n      // creates empty new geometry\r\n      this.geoOut = new IsoSurfaceGeo(\r\n        maxNumVertices,\r\n        maxNumTriangles,\r\n        this.useVertexColors\r\n      )\r\n      ok = this.createVertexHash(maxNumVertices, maxNumTriangles)\r\n      if (ok < 0) {\r\n        return ok\r\n      }\r\n      // build vertices and triangles from corners values\r\n      ok = this.buildGeoFromCorners(\r\n        side,\r\n        vBoxMin,\r\n        vBoxMax,\r\n        corners,\r\n        vCellStep,\r\n        cube\r\n      )\r\n    }\r\n\r\n    // build vertex normals\r\n    this.voxelWorld.buildNormals(\r\n      this.geoOut._vertices.length,\r\n      this.geoOut._vertices,\r\n      this.geoOut._normals\r\n    )\r\n    // More value : more smooth color mixing\r\n    // value about 0.7: very rough colors borders\r\n    let radiusColorSmoothness = 6.5\r\n    if (this.excludeProbe) {\r\n      radiusColorSmoothness -= 1.5\r\n    }\r\n    if (this.useVertexColors) {\r\n      this.voxelWorld.buildColors(\r\n        this.geoOut._vertices.length,\r\n        this.geoOut._vertices,\r\n        this.geoOut._colors,\r\n        radiusColorSmoothness\r\n      )\r\n    }\r\n    this.voxelWorld.destroyVoxels()\r\n    this.voxelWorld = null\r\n\r\n    // remove objects\r\n    cube.destroy()\r\n\r\n    return ok\r\n  }\r\n}\r\n\r\n// All code below must be erased from every device and each developer's memory\r\n\r\nexport default SSIsosurfaceGeometry\r\n",
		"import EventDispatcher from '../../utils/EventDispatcher'\r\nimport { Vector3 } from 'three'\r\n\r\nfunction createLabel(fieldTxt, className) {\r\n  const text = document.createElement('div')\r\n  text.className = className\r\n\r\n  if (typeof fieldTxt === 'string') {\r\n    const spanText = document.createElement('span')\r\n    spanText.style.fontSize = '150%'\r\n    const strings = fieldTxt.split('\\n')\r\n\r\n    for (let i = 0, n = strings.length; i < n; ++i) {\r\n      const spanNodeP = document.createElement('span')\r\n      const spanNodeText = document.createTextNode(strings[i])\r\n      spanNodeP.appendChild(spanNodeText)\r\n      spanText.appendChild(spanNodeP)\r\n      if (i < n - 1) {\r\n        spanText.appendChild(document.createElement('br'))\r\n      }\r\n    }\r\n\r\n    text.appendChild(spanText)\r\n  } else {\r\n    text.appendChild(fieldTxt)\r\n  }\r\n  text.worldPos = new Vector3()\r\n  return text\r\n}\r\nclass LabelsGeometry extends EventDispatcher {\r\n  constructor(instanceCount, opts) {\r\n    super()\r\n    this._opts = opts\r\n    this.items = []\r\n    this.needsUpdate = false\r\n\r\n    let xTranslation = -50\r\n    let yTranslation = -50\r\n    switch (opts.horizontalAlign) {\r\n      case 'left':\r\n        xTranslation = 0\r\n        break\r\n      case 'right':\r\n        xTranslation = -100\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    switch (opts.verticalAlign) {\r\n      case 'top':\r\n        yTranslation = -100\r\n        break\r\n      case 'bottom':\r\n        yTranslation = 0\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    const deltaPos = new Vector3(opts.dx || 0, opts.dy || 0, opts.dz || 0)\r\n    this.userData = {\r\n      translation: `translate(${xTranslation}%, ${yTranslation}%)`,\r\n      offset: deltaPos\r\n    }\r\n  }\r\n\r\n  setItem(itemIdx, itemPos, fieldTxt) {\r\n    const opts = this._opts\r\n    const text = this.items[itemIdx] || createLabel(fieldTxt, 'label')\r\n\r\n    text.worldPos.copy(itemPos)\r\n    text.style.textAlign = opts.horizontalAlign\r\n    text.style.verticalAlign = opts.verticalAlign\r\n    this.items[itemIdx] = text\r\n  }\r\n\r\n  setColor(itemIdx, fColor, bColor) {\r\n    const text = this.items[itemIdx]\r\n    text.opts = {\r\n      color: fColor,\r\n      background: bColor\r\n    }\r\n  }\r\n\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.needsUpdate = true\r\n    this.dispatchEvent({ type: 'update' })\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n  }\r\n\r\n  // unimplemented functions\r\n  raycast() {}\r\n\r\n  setOpacity() {}\r\n\r\n  getSubset() {\r\n    return []\r\n  }\r\n}\r\n\r\nexport default LabelsGeometry\r\n",
		"import InstancedSpheresGeometry from './InstancedSpheresGeometry'\r\nimport SimpleSpheresGeometry from './SimpleSpheresGeometry'\r\nimport Simple2CCylindersGeometry from './Simple2CCylindersGeometry'\r\nimport Instanced2CCylindersGeometry from './Instanced2CCylindersGeometry'\r\nimport ExtrudedObjectsGeometry from './ExtrudedObjectsGeometry'\r\nimport ChunkedLinesGeometry from './ChunkedLinesGeometry'\r\nimport TwoColorLinesGeometry from './TwoColorLinesGeometry'\r\nimport CrossGeometry from './CrossGeometry'\r\nimport QuickSurfGeometry from './QuickSurfGeometry'\r\nimport ContactSurfaceGeometry from './ContactSurfaceGeometry'\r\nimport SSIsosurfaceGeometry from './SSIsosurfaceGeometry'\r\nimport LabelsGeometry from './LabelsGeometry'\r\n\r\nexport default {\r\n  InstancedSpheresGeometry,\r\n  SimpleSpheresGeometry,\r\n  Simple2CCylindersGeometry,\r\n  Instanced2CCylindersGeometry,\r\n  ExtrudedObjectsGeometry,\r\n  ChunkedLinesGeometry,\r\n  TwoColorLinesGeometry,\r\n  CrossGeometry,\r\n  QuickSurfGeometry,\r\n  ContactSurfaceGeometry,\r\n  SSIsosurfaceGeometry,\r\n  LabelsGeometry\r\n}\r\n",
		"export default {\r\n  precision: 'mediump',\r\n\r\n  /**\r\n   *\r\n   * @param {WebGLRenderer} renderer\r\n   */\r\n  init(renderer) {\r\n    this.precision = renderer.capabilities.getMaxPrecision('highp')\r\n  }\r\n}\r\n",
		"import {\r\n  DataTexture,\r\n  NearestFilter,\r\n  RepeatWrapping,\r\n  RGBFormat,\r\n  UnsignedByteType,\r\n  UVMapping\r\n} from 'three'\r\n\r\nconst noiseWidth = 4\r\nconst noiseHeight = 4\r\nconst _noiseData = new Uint8Array([\r\n  24, 52, 0, 254, 145, 0, 122, 0, 0, 7, 170, 0, 34, 214, 0, 173, 8, 0, 86, 249,\r\n  0, 160, 4, 0, 226, 46, 0, 224, 211, 0, 3, 157, 0, 174, 247, 0, 12, 182, 0,\r\n  220, 216, 0, 1, 109, 0, 253, 154, 0\r\n])\r\nconst _noiseWrapS = RepeatWrapping\r\nconst _noiseWrapT = RepeatWrapping\r\nconst _noiseMinFilter = NearestFilter\r\nconst _noiseMagFilter = NearestFilter\r\nconst _noiseMapping = UVMapping\r\nconst noiseTexture = new DataTexture(\r\n  _noiseData,\r\n  noiseWidth,\r\n  noiseHeight,\r\n  RGBFormat,\r\n  UnsignedByteType,\r\n  _noiseMapping,\r\n  _noiseWrapS,\r\n  _noiseWrapT,\r\n  _noiseMagFilter,\r\n  _noiseMinFilter,\r\n  1\r\n)\r\nnoiseTexture.needsUpdate = true\r\n\r\nexport default {\r\n  noiseWidth,\r\n  noiseHeight,\r\n  noiseTexture\r\n}\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './Uber.vert'\r\nimport fragmentShader from './Uber.frag'\r\nimport capabilities from '../capabilities'\r\nimport noise from '../noiseTexture'\r\nimport {\r\n  UniformsLib,\r\n  UniformsUtils,\r\n  Vector2,\r\n  Color,\r\n  Matrix4,\r\n  RawShaderMaterial,\r\n  DoubleSide,\r\n  Material\r\n} from 'three'\r\n\r\n// Length of _samplesKernel is used in Uber.frag\r\n// If you want to change length of _samplesKernel, please, remember change it in Uber.frag too.\r\n// You can easy find places for replace using word:_samplesKernel\r\nconst _samplesKernel = [\r\n  new Vector2(-0.541978, 0.840393),\r\n  new Vector2(0.125533, -0.992089),\r\n  new Vector2(0.374329, 0.927296),\r\n  new Vector2(-0.105475, 0.994422)\r\n]\r\n\r\nconst defaultUniforms = UniformsUtils.merge([\r\n  UniformsLib.fog,\r\n  UniformsLib.lights,\r\n\r\n  {\r\n    // are updated automatically by three.js (see ShaderLib.common)\r\n    diffuse: { value: new Color(0xeeeeee) },\r\n    opacity: { value: 1.0 },\r\n\r\n    specular: { type: 'c', value: new Color(0x111111) },\r\n    shininess: { type: 'f', value: 30 },\r\n    fixedColor: { type: 'c', value: new Color(0xffffff) },\r\n    zOffset: { type: 'f', value: 0.0 },\r\n    zClipValue: { type: 'f', value: 0.0 },\r\n    clipPlaneValue: { type: 'f', value: 0.0 },\r\n    nearPlaneValue: { type: 'f', value: -0.5 },\r\n    invModelViewMatrix: { type: '4fv', value: new Matrix4() },\r\n    world2colorMatrix: { type: '4fv', value: new Matrix4() },\r\n    dashedLineSize: { type: 'f', value: 0.1 },\r\n    dashedLinePeriod: { type: 'f', value: 0.2 },\r\n    projMatrixInv: { type: '4fv', value: new Matrix4() },\r\n    viewport: { type: 'v2', value: new Vector2() },\r\n    lineWidth: { type: 'f', value: 2.0 },\r\n    // default value must be the same as settings\r\n    fogAlpha: { type: 'f', value: 1.0 },\r\n    samplesKernel: { type: 'v2v', value: null },\r\n    noiseTex: { type: 't', value: null },\r\n    noiseTexelSize: { type: 'v2', value: null },\r\n    srcTexelSize: { type: 'v2', value: null }\r\n  }\r\n])\r\n\r\nconst uberOptionNames = [\r\n  'shininess',\r\n  'opacity',\r\n  'zOffset',\r\n  'diffuse',\r\n  'specular',\r\n  'fixedColor',\r\n  'zClipCoef',\r\n  'zClipValue',\r\n  'clipPlaneValue',\r\n  'world2colorMatrix',\r\n  'dashedLineSize',\r\n  'dashedLinePeriod',\r\n  'projMatrixInv',\r\n  'viewport',\r\n  'lineWidth',\r\n  'fogAlpha',\r\n  'samplesKernel',\r\n  'noiseTex',\r\n  'noiseTexelSize',\r\n  'srcTexelSize'\r\n]\r\n\r\n// properties that convert to uniforms\r\nconst uberOptions = {\r\n  diffuse: new Color(0xffffff), // used in phong lighting\r\n  specular: new Color(0x111111), // used in phong lighting\r\n  shininess: 30, // used in phong lighting\r\n  opacity: 1, // set mesh opacity\r\n  fixedColor: new Color(0xffffff), // color to override (see OVERRIDE_COLOR)\r\n  zOffset: 0.0, // used fo zsprites (see SPHERE_SPRITE CYLINDER_SPRITE)\r\n  zClipCoef: 2.0, // use for Surfs clipping (mesh param, isn't used in shader)  FIXME move to representation param\r\n  zClipValue: 0.0, //  value to clip Surfs in shader  (see ZCLIP)\r\n  clipPlaneValue: 0.0, // value to clip scene globally (see CLIPPLANE)\r\n  world2colorMatrix: new Matrix4(),\r\n  dashedLineSize: 0.1,\r\n  dashedLinePeriod: 0.3,\r\n  projMatrixInv: new Matrix4(),\r\n  viewport: new Vector2(800, 600),\r\n  lineWidth: 2.0,\r\n  fogAlpha: 1.0,\r\n  samplesKernel: _samplesKernel,\r\n  noiseTex: noise.noiseTexture,\r\n  noiseTexelSize: new Vector2(1.0 / noise.noiseWidth, 1.0 / noise.noiseHeight),\r\n  srcTexelSize: new Vector2(1.0 / 800.0, 1.0 / 600.0),\r\n\r\n  copy(source) {\r\n    this.diffuse.copy(source.diffuse)\r\n    this.specular.copy(source.specular)\r\n    this.shininess = source.shininess\r\n    this.opacity = source.opacity\r\n    this.fixedColor.copy(source.fixedColor)\r\n    this.zOffset = source.zOffset\r\n    this.zClipCoef = source.zClipCoef\r\n    this.zClipValue = source.zClipValue\r\n    this.clipPlaneValue = source.clipPlaneValue\r\n    this.world2colorMatrix.copy(source.world2colorMatrix)\r\n    this.dashedLineSize = source.dashedLineSize\r\n    this.dashedLinePeriod = source.dashedLinePeriod\r\n    this.projMatrixInv = source.projMatrixInv\r\n    this.viewport = source.viewport\r\n    this.lineWidth = source.lineWidth // used for thick lines only\r\n    this.toonShading = source.toonShading\r\n    this.fogAlpha = source.fogAlpha\r\n    this.samplesKernel = source.samplesKernel\r\n    this.noiseTex = source.noiseTex\r\n    this.noiseTexelSize = source.noiseTexelSize\r\n    this.srcTexelSize = source.srcTexelSize\r\n  }\r\n}\r\n\r\nclass UberMaterial extends RawShaderMaterial {\r\n  constructor(params) {\r\n    super(params)\r\n    // add fog\r\n    this.fog = true\r\n    // used for instanced geometry\r\n    this.instancedPos = false\r\n    this.instancedMatrix = false\r\n    // atoms and links color\r\n    this.attrColor = false\r\n    // second link color for cylinders\r\n    this.attrColor2 = false\r\n    //\r\n    this.attrAlphaColor = false\r\n    // overrides color for all vertices (used in selection)\r\n    this.overrideColor = false\r\n    // zsrpites\r\n    this.sphereSprite = false\r\n    this.cylinderSprite = false\r\n    // clip Surfs individually\r\n    this.zClip = false\r\n    // clip scene with global clip plane\r\n    this.clipPlane = false\r\n    // enable fake (chess-like) opacity\r\n    this.fakeOpacity = false\r\n    // render only depth, don't take care about the pixel color (used for transparency depth prepass)\r\n    this.prepassTransparancy = false\r\n    // used to render pixel positions\r\n    this.colorFromPos = false\r\n    // used to render shadowmap\r\n    this.shadowmap = false\r\n    // used to describe shadowmap type\r\n    this.shadowmapType = 'random'\r\n    // used to render pixel view deph\r\n    this.colorFromDepth = false\r\n    // mark that rendering is for orthographic camera\r\n    this.orthoCam = false\r\n    // used to render dashed line\r\n    this.dashedLine = false\r\n    // mark as transparent\r\n    this.transparent = true\r\n    // mark as thick lines\r\n    this.thickLine = false\r\n    // makes fog begin transparency (required for transparent background)\r\n    this.fogTransparent = false\r\n    // used to render surface normals to G buffer for ssao effect\r\n    this.normalsToGBuffer = false\r\n    // used for toon material\r\n    this.toonShading = false\r\n    this.uberOptions = uberOptions\r\n    // set default values\r\n    this.setValues({\r\n      uniforms: UniformsUtils.clone(defaultUniforms),\r\n      vertexShader: this.precisionString() + vertexShader,\r\n      fragmentShader: this.precisionString() + fragmentShader,\r\n      lights: true,\r\n      fog: true,\r\n      side: DoubleSide,\r\n      ...params\r\n    })\r\n  }\r\n\r\n  precisionString() {\r\n    const { precision } = capabilities\r\n    const str =\r\n      `precision ${precision} float;\\n` + `precision ${precision} int;\\n\\n`\r\n    return str\r\n  }\r\n\r\n  // create copy of this material\r\n  copy(source) {\r\n    super.copy(source)\r\n\r\n    this.fragmentShader = source.fragmentShader\r\n    this.vertexShader = source.vertexShader\r\n\r\n    this.uniforms = UniformsUtils.clone(source.uniforms)\r\n    this.defines = { ...source.defines }\r\n    this.extensions = source.extensions\r\n\r\n    this.fog = source.fog\r\n    this.instancedPos = source.instancedPos\r\n    this.instancedMatrix = source.instancedMatrix\r\n    this.attrColor = source.attrColor\r\n    this.attrColor2 = source.attrColor2\r\n    this.attrAlphaColor = source.attrAlphaColor\r\n    this.overrideColor = source.overrideColor\r\n    this.sphereSprite = source.sphereSprite\r\n    this.cylinderSprite = source.cylinderSprite\r\n    this.zClip = source.zClip\r\n    this.clipPlane = source.clipPlane\r\n    this.fakeOpacity = source.fakeOpacity\r\n    this.colorFromPos = source.colorFromPos\r\n    this.shadowmap = source.shadowmap\r\n    this.shadowmapType = source.shadowmapType\r\n    this.colorFromDepth = source.colorFromDepth\r\n    this.orthoCam = source.orthoCam\r\n    this.prepassTransparancy = source.prepassTransparancy\r\n    this.dashedLine = source.dashedLine\r\n    this.thickLine = source.thickLine\r\n    this.fogTransparent = source.fogTransparent\r\n    this.normalsToGBuffer = source.normalsToGBuffer\r\n    this.toonShading = source.toonShading\r\n\r\n    this.uberOptions.copy(source.uberOptions)\r\n\r\n    return this\r\n  }\r\n\r\n  // its options are prototyped after this material's options\r\n  createInstance() {\r\n    const inst = new UberMaterial()\r\n    inst.copy(this)\r\n    inst.uberOptions = Object.create(this.uberOptions)\r\n    return inst\r\n  }\r\n\r\n  setValues(values) {\r\n    if (typeof values === 'undefined') {\r\n      return\r\n    }\r\n\r\n    // set direct values\r\n    super.setValues(values)\r\n\r\n    const defines = {}\r\n    const extensions = {}\r\n\r\n    if (this.fog) {\r\n      defines.USE_FOG = 1\r\n    }\r\n    if (this.instancedPos) {\r\n      defines.INSTANCED_POS = 1\r\n    }\r\n    if (this.instancedMatrix) {\r\n      defines.INSTANCED_MATRIX = 1\r\n    }\r\n    if (this.attrColor) {\r\n      defines.ATTR_COLOR = 1\r\n    }\r\n    if (this.attrColor2) {\r\n      defines.ATTR_COLOR2 = 1\r\n    }\r\n    if (this.attrAlphaColor) {\r\n      defines.ATTR_ALPHA_COLOR = 1\r\n    }\r\n    if (this.overrideColor) {\r\n      defines.OVERRIDE_COLOR = 1\r\n    }\r\n    if (this.sphereSprite) {\r\n      defines.SPHERE_SPRITE = 1\r\n      extensions.fragDepth = 1\r\n    }\r\n    if (this.cylinderSprite) {\r\n      defines.CYLINDER_SPRITE = 1\r\n      extensions.fragDepth = 1\r\n    }\r\n    if (this.zClip) {\r\n      defines.ZCLIP = 1\r\n    }\r\n    if (this.clipPlane) {\r\n      defines.CLIP_PLANE = 1\r\n    }\r\n    if (this.fakeOpacity) {\r\n      defines.FAKE_OPACITY = 1\r\n    }\r\n    if (this.lights) {\r\n      defines.USE_LIGHTS = 1\r\n    }\r\n    if (this.colorFromPos) {\r\n      defines.COLOR_FROM_POS = 1\r\n    }\r\n    if (this.shadowmap) {\r\n      defines.SHADOWMAP = 1\r\n      if (this.shadowmapType === 'pcf') {\r\n        defines.SHADOWMAP_PCF_SHARP = 1\r\n      } else if (this.shadowmapType === 'random') {\r\n        defines.SHADOWMAP_PCF_RAND = 1\r\n      } else {\r\n        defines.SHADOWMAP_BASIC = 1\r\n      }\r\n    }\r\n    if (this.colorFromDepth) {\r\n      defines.COLOR_FROM_DEPTH = 1\r\n    }\r\n    if (this.orthoCam) {\r\n      defines.ORTHOGRAPHIC_CAMERA = 1\r\n    }\r\n    if (this.prepassTransparancy) {\r\n      defines.PREPASS_TRANSP = 1\r\n    }\r\n    if (this.dashedLine) {\r\n      defines.DASHED_LINE = 1\r\n    }\r\n    if (this.thickLine) {\r\n      defines.THICK_LINE = 1\r\n    }\r\n    if (this.fogTransparent) {\r\n      defines.FOG_TRANSPARENT = 1\r\n    }\r\n    if (this.normalsToGBuffer) {\r\n      extensions.drawBuffers = 1\r\n      defines.NORMALS_TO_G_BUFFER = 1\r\n    }\r\n    if (this.toonShading) {\r\n      defines.TOON_SHADING = 1\r\n    }\r\n    // set dependent values\r\n    this.defines = defines\r\n    this.extensions = extensions\r\n  }\r\n\r\n  setUberOptions(values) {\r\n    if (typeof values === 'undefined') {\r\n      return\r\n    }\r\n\r\n    for (const key in values) {\r\n      if (!values.hasOwnProperty(key)) {\r\n        continue\r\n      }\r\n\r\n      if (this.uberOptions[key] instanceof Color) {\r\n        this.uberOptions[key] = values[key].clone()\r\n      } else {\r\n        this.uberOptions[key] = values[key]\r\n      }\r\n    }\r\n  }\r\n\r\n  clone(shallow) {\r\n    if (!shallow) {\r\n      return Material.prototype.clone.call(this)\r\n    }\r\n    return this.createInstance()\r\n  }\r\n\r\n  updateUniforms() {\r\n    const self = this\r\n\r\n    uberOptionNames.forEach((p) => {\r\n      if (self.uniforms.hasOwnProperty(p)) {\r\n        if (\r\n          self.uberOptions[p] instanceof Color ||\r\n          self.uberOptions[p] instanceof Matrix4\r\n        ) {\r\n          self.uniforms[p].value = self.uberOptions[p].clone()\r\n        } else {\r\n          self.uniforms[p].value = self.uberOptions[p]\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default UberMaterial\r\n",
		"import UberMaterial from '../shaders/UberMaterial'\r\n\r\nexport default function (SuperClass) {\r\n  class NewObjectType extends SuperClass {\r\n    constructor(...rest) {\r\n      super(...rest)\r\n      this.onBeforeRender = NewObjectType.prototype.onBeforeRender\r\n    }\r\n\r\n    onBeforeRender(renderer, scene, camera, geometry, material, group) {\r\n      this._onBeforeRender(renderer, scene, camera, geometry, material, group)\r\n      this._update()\r\n    }\r\n\r\n    _onBeforeRender() {}\r\n\r\n    _update() {\r\n      const { material } = this\r\n      if (!material) {\r\n        return\r\n      }\r\n\r\n      if (material instanceof UberMaterial) {\r\n        material.updateUniforms()\r\n      }\r\n    }\r\n  }\r\n\r\n  return NewObjectType\r\n}\r\n",
		"import UberObject from './UberObject'\r\nimport { Mesh } from 'three'\r\n\r\nconst OurMesh = UberObject(Mesh)\r\n\r\nclass ZSpriteMesh extends OurMesh {\r\n  constructor(...rest) {\r\n    super(...rest)\r\n    this.castShadow = true\r\n    this.receiveShadow = true\r\n  }\r\n\r\n  _onBeforeRender(renderer, scene, camera, _geometry, _material, _group) {\r\n    OurMesh.prototype._onBeforeRender.call(this, renderer, scene, camera)\r\n    const { material } = this\r\n    if (!material) {\r\n      return\r\n    }\r\n\r\n    if (material.uniforms.invModelViewMatrix) {\r\n      // NOTE: update of modelViewMatrix inside threejs is done after onBeforeRender call,\r\n      // so we have to do it manually in that place\r\n      this.modelViewMatrix.multiplyMatrices(\r\n        camera.matrixWorldInverse,\r\n        this.matrixWorld\r\n      )\r\n      // get inverse matrix\r\n      material.uniforms.invModelViewMatrix.value\r\n        .copy(this.modelViewMatrix)\r\n        .invert()\r\n      material.uniforms.nearPlaneValue.value = camera.near\r\n      material.uniformsNeedUpdate = true\r\n    }\r\n  }\r\n}\r\n\r\nexport default ZSpriteMesh\r\n",
		"import UberObject from './UberObject'\r\nimport { Matrix4, Mesh, Vector3 } from 'three'\r\n\r\nconst OurMesh = UberObject(Mesh)\r\n\r\nclass ZClippedMesh extends OurMesh {\r\n  constructor(geometry, material) {\r\n    super(geometry, material)\r\n    this.castShadow = true\r\n    this.receiveShadow = true\r\n  }\r\n\r\n  static _mvLength = new Vector3()\r\n\r\n  static _center = new Vector3()\r\n\r\n  static _modelView = new Matrix4()\r\n\r\n  _onBeforeRender(renderer, scene, camera) {\r\n    OurMesh.prototype._onBeforeRender.call(this, renderer, scene, camera)\r\n\r\n    const geo = this.geometry\r\n    const { material } = this\r\n    if (!geo.zClip || !material.uberOptions) {\r\n      return\r\n    }\r\n\r\n    const zClipCoef = 0.5\r\n\r\n    const modelView = ZClippedMesh._modelView\r\n    const mvLength = ZClippedMesh._mvLength\r\n    const center = ZClippedMesh._center\r\n\r\n    modelView.multiplyMatrices(this.matrixWorld, camera.matrixWorldInverse)\r\n    const s = mvLength.setFromMatrixColumn(modelView, 0).length()\r\n    center.copy(geo.boundingSphere.center)\r\n\r\n    this.localToWorld(center)\r\n    material.uberOptions.zClipValue =\r\n      camera.position.z - center.z - s * (zClipCoef * geo.boundingSphere.radius)\r\n  }\r\n}\r\n\r\nexport default ZClippedMesh\r\n",
		"import CSS2DObject from '../CSS2DObject'\r\nimport utils from '../../utils'\r\nimport { Group } from 'three'\r\nimport { clone } from 'lodash'\r\n\r\nclass TextMesh extends Group {\r\n  constructor(geometry, _material) {\r\n    super()\r\n    this.geometry = geometry\r\n\r\n    const self = this\r\n    self.initialized = false\r\n    this.geometry.addEventListener('update', () => {\r\n      self.update()\r\n    })\r\n  }\r\n\r\n  init() {\r\n    const { children } = this\r\n    for (let i = children.length - 1; i >= 0; --i) {\r\n      this.remove(children[i])\r\n    }\r\n\r\n    const { items, userData } = this.geometry\r\n    for (let i = 0, n = items.length; i < n; ++i) {\r\n      const srcItem = items[i]\r\n      if (!srcItem) {\r\n        continue\r\n      }\r\n      const item = utils.shallowCloneNode(srcItem)\r\n      const label = new CSS2DObject(item)\r\n      label.userData = clone(userData)\r\n      const el = label.getElement()\r\n      el.style.visibility = 'visible'\r\n      label.source = srcItem\r\n      this.add(label)\r\n    }\r\n    this.initialized = true\r\n  }\r\n\r\n  update() {\r\n    const geo = this.geometry\r\n    if (!geo.needsUpdate) {\r\n      return\r\n    }\r\n    const { children } = this\r\n    if (!this.initialized) {\r\n      this.init()\r\n    }\r\n\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      const child = children[i]\r\n      const item = child.source\r\n      child.position.copy(item.worldPos)\r\n      child.userData.color = item.opts.color\r\n      child.userData.background = item.opts.background\r\n    }\r\n  }\r\n}\r\n\r\nexport default TextMesh\r\n",
		"import UberObject from './UberObject'\r\nimport { Mesh } from 'three'\r\n\r\nconst OurMesh = UberObject(Mesh)\r\n\r\nclass SimpleMesh extends OurMesh {\r\n  constructor(geometry, material) {\r\n    super(geometry, material)\r\n    this.castShadow = true\r\n    this.receiveShadow = true\r\n  }\r\n}\r\n\r\nexport default SimpleMesh\r\n",
		"import UberObject from './UberObject'\r\nimport { Mesh, Vector2 } from 'three'\r\n\r\nconst OurMesh = UberObject(Mesh)\r\nconst _viewport = new Vector2()\r\n\r\nclass ThickLineMesh extends OurMesh {\r\n  _onBeforeRender(renderer, scene, camera, _geometry, _material, _group) {\r\n    const { material } = this\r\n    if (!material.uberOptions) {\r\n      return\r\n    }\r\n\r\n    material.uberOptions.projMatrixInv.copy(camera.projectionMatrix).invert()\r\n    renderer.getSize(_viewport)\r\n    material.uberOptions.viewport.set(_viewport.width, _viewport.height)\r\n  }\r\n}\r\n\r\nexport default ThickLineMesh\r\n",
		"import UberObject from './UberObject'\r\nimport { Mesh } from 'three'\r\n\r\nconst OurMesh = UberObject(Mesh)\r\n\r\nclass InstancedMesh extends OurMesh {\r\n  constructor(...rest) {\r\n    super(...rest)\r\n    this.castShadow = true\r\n    this.receiveShadow = true\r\n  }\r\n}\r\n\r\nexport default InstancedMesh\r\n",
		"import UberObject from './UberObject'\r\nimport ZSpriteMesh from './ZSpriteMesh'\r\nimport ZClippedMesh from './ZClippedMesh'\r\nimport TextMesh from './TextMesh'\r\nimport SimpleMesh from './SimpleMesh'\r\nimport ThickLineMesh from './ThickLineMesh'\r\nimport InstancedMesh from './InstancedMesh'\r\nimport { Line, LineSegments } from 'three'\r\n\r\nexport default {\r\n  ZClipped: ZClippedMesh,\r\n  ZSprite: ZSpriteMesh,\r\n  Text: TextMesh,\r\n  Line: UberObject(Line),\r\n  LineSegments: UberObject(LineSegments),\r\n  Mesh: SimpleMesh,\r\n  ThickLineMesh,\r\n  Instanced: InstancedMesh\r\n}\r\n",
		"import geometries from '../geometries/geometries'\r\nimport meshes from './meshes'\r\nimport ThickLinesGeometry from '../geometries/ThickLinesGeometry'\r\n\r\nfunction setMatParams(params, uniforms) {\r\n  return function (material) {\r\n    material.setValues(params)\r\n    material.setUberOptions(uniforms)\r\n  }\r\n}\r\n\r\nfunction _createInstancedCylinders(useZSprites, openEnded) {\r\n  return {\r\n    Geometry(a, b) {\r\n      return new geometries.Instanced2CCylindersGeometry(\r\n        a,\r\n        b,\r\n        useZSprites,\r\n        openEnded\r\n      )\r\n    },\r\n    Object: useZSprites ? meshes.ZSprite : meshes.Instanced,\r\n    initMaterial: setMatParams({\r\n      instancedMatrix: true,\r\n      attrColor: true,\r\n      attrColor2: true,\r\n      attrAlphaColor: true,\r\n      cylinderSprite: useZSprites\r\n    })\r\n  }\r\n}\r\n\r\nfunction _createLineSegmentsGeoTriplet(geo, renderParams) {\r\n  const thickLines = geo.prototype instanceof ThickLinesGeometry\r\n  const lineWidth = renderParams.lineWidth || 0\r\n  return {\r\n    Geometry: geo,\r\n    Object: thickLines ? meshes.ThickLineMesh : meshes.LineSegments,\r\n    initMaterial: setMatParams(\r\n      {\r\n        lights: false,\r\n        attrColor: true,\r\n        attrAlphaColor: true,\r\n        thickLine: thickLines\r\n      },\r\n      {\r\n        lineWidth\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\nfunction _createSimpleGeoTriplet(geoClass) {\r\n  return {\r\n    Geometry: geoClass,\r\n    Object: meshes.Mesh,\r\n    initMaterial: setMatParams({\r\n      attrColor: true,\r\n      attrAlphaColor: true\r\n    })\r\n  }\r\n}\r\n\r\nfunction _createIsoSurfaceGeoTriplet(geoClass, caps, settings, renderParams) {\r\n  const surfaceOpts = {\r\n    wireframe: !!renderParams.wireframe,\r\n    fakeOpacity: settings.now.isoSurfaceFakeOpacity,\r\n    zClip: renderParams.zClip\r\n  }\r\n  return {\r\n    Geometry: geoClass,\r\n    Object: meshes.ZClipped,\r\n    initMaterial: setMatParams({\r\n      attrColor: true,\r\n      attrAlphaColor: false,\r\n      wireframe: surfaceOpts.wireframe,\r\n      fakeOpacity: surfaceOpts.fakeOpacity,\r\n      zClip: surfaceOpts.zClip\r\n    })\r\n  }\r\n}\r\n\r\nclass MeshCreator {\r\n  static createSpheres(caps, settings) {\r\n    const useZSprites = settings.now.zSprites\r\n    return {\r\n      Geometry(a, b) {\r\n        return new geometries.InstancedSpheresGeometry(a, b, useZSprites)\r\n      },\r\n      Object: useZSprites ? meshes.ZSprite : meshes.Instanced,\r\n      initMaterial: setMatParams({\r\n        instancedPos: true,\r\n        attrColor: true,\r\n        attrAlphaColor: true,\r\n        sphereSprite: useZSprites\r\n      })\r\n    }\r\n  }\r\n\r\n  static create2CClosedCylinders(_caps, _settings) {\r\n    return _createInstancedCylinders(false, false)\r\n  }\r\n\r\n  static create2CCylinders(caps, settings) {\r\n    return _createInstancedCylinders(settings.now.zSprites, true)\r\n  }\r\n\r\n  static create2CLines(_caps, _settings, renderParams) {\r\n    return _createLineSegmentsGeoTriplet(\r\n      geometries.TwoColorLinesGeometry,\r\n      renderParams\r\n    )\r\n  }\r\n\r\n  static createCrosses(_caps, _settings, renderParams) {\r\n    return _createLineSegmentsGeoTriplet(geometries.CrossGeometry, renderParams)\r\n  }\r\n\r\n  static createExtrudedChains(_caps, _settings) {\r\n    return _createSimpleGeoTriplet(geometries.ExtrudedObjectsGeometry)\r\n  }\r\n\r\n  static createChunkedLines(_caps, _settings, renderParams) {\r\n    return _createLineSegmentsGeoTriplet(\r\n      geometries.ChunkedLinesGeometry,\r\n      renderParams\r\n    )\r\n  }\r\n\r\n  static createQuickSurface(caps, settings, renderParams) {\r\n    return _createIsoSurfaceGeoTriplet(\r\n      geometries.QuickSurfGeometry,\r\n      caps,\r\n      settings,\r\n      renderParams\r\n    )\r\n  }\r\n\r\n  static createContactSurface(caps, settings, renderParams) {\r\n    return _createIsoSurfaceGeoTriplet(\r\n      geometries.ContactSurfaceGeometry,\r\n      caps,\r\n      settings,\r\n      renderParams\r\n    )\r\n  }\r\n\r\n  static createSASSES(caps, settings, renderParams) {\r\n    return _createIsoSurfaceGeoTriplet(\r\n      geometries.SSIsosurfaceGeometry,\r\n      caps,\r\n      settings,\r\n      renderParams\r\n    )\r\n  }\r\n\r\n  static createLabels(_caps, _settings) {\r\n    return {\r\n      Geometry: geometries.LabelsGeometry,\r\n      Object: meshes.Text,\r\n      initMaterial() {}\r\n    }\r\n  }\r\n}\r\n\r\nexport default MeshCreator\r\n",
		"import gfxutils from '../gfxutils'\r\nimport { Matrix4, Object3D, Ray } from 'three'\r\n\r\nclass TransformGroup extends Object3D {\r\n  static _inverseMatrix = new Matrix4()\r\n\r\n  static _ray = new Ray()\r\n\r\n  constructor(geometry, geoParams, material, transforms) {\r\n    super()\r\n    this._geometry = geometry\r\n    this._geoParams = geoParams\r\n    const mat = material.createInstance()\r\n    geoParams.initMaterial(mat)\r\n    this._material = mat\r\n    this._transforms = transforms.length > 0 ? transforms : [new Matrix4()]\r\n    const meshes = this._createMeshes(geometry)\r\n    for (let i = 0, n = meshes.length; i < n; ++i) {\r\n      this.add(meshes[i])\r\n    }\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const ray = TransformGroup._ray\r\n    const inverseMatrix = TransformGroup._inverseMatrix\r\n    const { children } = this\r\n    ray.copy(raycaster.ray)\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      const child = children[i]\r\n\r\n      if (!gfxutils.belongToSelectLayers(child)) {\r\n        continue\r\n      }\r\n\r\n      child.updateMatrixWorld()\r\n      const mtx = child.matrixWorld\r\n      inverseMatrix.copy(mtx).invert()\r\n      raycaster.ray.copy(ray).applyMatrix4(inverseMatrix)\r\n      const childIntersects = []\r\n      this._geometry.raycast(raycaster, childIntersects)\r\n\r\n      for (let j = 0, ciCount = childIntersects.length; j < ciCount; ++j) {\r\n        const inters = childIntersects[j]\r\n        if (inters.point) {\r\n          inters.point.applyMatrix4(mtx)\r\n          inters.distance = ray.origin.distanceTo(inters.point)\r\n        }\r\n        inters.object = child\r\n        intersects[intersects.length] = inters\r\n      }\r\n    }\r\n    raycaster.ray.copy(ray)\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const geos = this._geometry.getSubset(chunkIndices)\r\n    const subset = []\r\n    let subIdx = 0\r\n\r\n    for (let i = 0, n = geos.length; i < n; ++i) {\r\n      const meshes = this._createMeshes(geos[i])\r\n      for (let j = 0, meshCnt = meshes.length; j < meshCnt; ++j) {\r\n        subset[subIdx++] = meshes[j]\r\n      }\r\n    }\r\n\r\n    return subset\r\n  }\r\n\r\n  _createMeshes(geometry) {\r\n    const transforms = this._transforms\r\n    const Mesh = this._geoParams.Object\r\n    const material = this._material\r\n    const meshes = []\r\n    for (let i = 0, n = transforms.length; i < n; ++i) {\r\n      const mesh = new Mesh(geometry, material)\r\n      mesh.applyMatrix4(transforms[i])\r\n      meshes[i] = mesh\r\n    }\r\n\r\n    return meshes\r\n  }\r\n}\r\n\r\nexport default TransformGroup\r\n",
		"import RCGroup from '../../RCGroup'\r\nimport TransformGroup from '../../meshes/TransformGroup'\r\n\r\nfunction wrapper(Name, args) {\r\n  const params = [Name].concat(args)\r\n  return Name.bind(...params)\r\n}\r\n\r\nclass ChemGroup extends RCGroup {\r\n  constructor(\r\n    geoParams,\r\n    selection,\r\n    colorer,\r\n    mode,\r\n    transforms,\r\n    polyComplexity,\r\n    material\r\n  ) {\r\n    super()\r\n    if (this.constructor === ChemGroup) {\r\n      throw new Error('Can not instantiate abstract class!')\r\n    }\r\n    this._selection = selection\r\n    this._mode = mode\r\n    this._colorer = colorer\r\n    this._chunksIdc = selection.chunks\r\n    this._polyComplexity = polyComplexity\r\n    this._geo = new (wrapper(geoParams.Geometry, this._makeGeoArgs()))()\r\n    this._mesh = new TransformGroup(this._geo, geoParams, material, transforms)\r\n    this.add(this._mesh)\r\n    this._build()\r\n  }\r\n\r\n  _makeGeoArgs() {\r\n    throw new Error('ChemGroup subclass must override _makeGeoArgs() method')\r\n  }\r\n\r\n  /**\r\n   * Builds subset geometry by ATOMS index list\r\n   *\r\n   * @param {Number} mask - Representation mask\r\n   * @param {Boolean} innerOnly - if true returns inner bonds only - without halves\r\n   * @returns {Array} Subset geometry\r\n   */\r\n  getSubset(mask, innerOnly) {\r\n    innerOnly = innerOnly !== undefined ? innerOnly : false\r\n    const chunksList = this._calcChunksList(mask, innerOnly)\r\n    if (chunksList.length === 0) {\r\n      return []\r\n    }\r\n    return this._mesh.getSubset(chunksList)\r\n  }\r\n\r\n  _changeSubsetOpacity(mask, value, innerOnly) {\r\n    const chunksList = this._calcChunksList(mask, innerOnly)\r\n    if (chunksList.length === 0) {\r\n      return\r\n    }\r\n    this._geo.setOpacity(chunksList, value)\r\n  }\r\n\r\n  enableSubset(mask, innerOnly) {\r\n    innerOnly = innerOnly !== undefined ? innerOnly : true\r\n    this._changeSubsetOpacity(mask, 1.0, innerOnly)\r\n  }\r\n\r\n  disableSubset(mask, innerOnly) {\r\n    innerOnly = innerOnly !== undefined ? innerOnly : true\r\n    this._changeSubsetOpacity(mask, 0.0, innerOnly)\r\n  }\r\n}\r\n\r\nexport default ChemGroup\r\n",
		"import ChemGroup from './ChemGroup'\r\n\r\nclass AtomsGroup extends ChemGroup {\r\n  raycast(raycaster, intersects) {\r\n    const { atoms } = this._selection\r\n    const inters = []\r\n    this._mesh.raycast(raycaster, inters)\r\n    const atomsIdc = this._chunksIdc\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue\r\n      }\r\n      const atomIdx = atomsIdc[inters[i].chunkIdx]\r\n      if (atomIdx < atoms.length) {\r\n        inters[i].atom = atoms[atomIdx]\r\n        intersects.push(inters[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  _calcChunksList(mask) {\r\n    const chunksList = []\r\n    const { atoms } = this._selection\r\n    const atomsIdc = this._chunksIdc\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]]\r\n      if ((atom.mask & mask) !== 0) {\r\n        chunksList.push(i)\r\n      }\r\n    }\r\n    return chunksList\r\n  }\r\n}\r\n\r\nexport default AtomsGroup\r\n",
		"import AtomsGroup from './AtomsGroup'\r\n\r\nclass AtomsSphereGroup extends AtomsGroup {\r\n  _makeGeoArgs() {\r\n    return [this._selection.chunks.length, this._polyComplexity]\r\n  }\r\n\r\n  _build() {\r\n    const atomsIdc = this._selection.chunks\r\n    const { atoms, parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]]\r\n      geo.setItem(i, atom.position, mode.calcAtomRadius(atom))\r\n      geo.setColor(i, colorer.getAtomColor(atom, parent))\r\n    }\r\n    geo.finalize()\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const atomsIdc = this._selection.chunks\r\n    const { atoms } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const updateColor = frameData.needsColorUpdate(colorer)\r\n    const geo = this._geo\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]]\r\n      geo.setItem(\r\n        i,\r\n        frameData.getAtomPos(atomsIdc[i]),\r\n        mode.calcAtomRadius(atom)\r\n      )\r\n      if (updateColor) {\r\n        geo.setColor(i, frameData.getAtomColor(colorer, atom))\r\n      }\r\n    }\r\n    geo.finalize()\r\n  }\r\n}\r\n\r\nexport default AtomsSphereGroup\r\n",
		"import AtomsSphereGroup from './AtomsSphereGroup'\r\n\r\nclass AtomsSurfaceGroup extends AtomsSphereGroup {\r\n  _makeGeoArgs() {\r\n    const selectedAtoms = []\r\n    const { atoms, chunks } = this._selection\r\n    const n = chunks.length\r\n    for (let i = 0; i < n; ++i) {\r\n      selectedAtoms[i] = atoms[chunks[i]]\r\n    }\r\n    const opts = this._mode.getSurfaceOpts()\r\n    opts.atoms = selectedAtoms\r\n    return [n, opts]\r\n  }\r\n}\r\nexport default AtomsSurfaceGroup\r\n",
		"/* This is a stub class keep it until SAS/SES is refactored */\r\n\r\nimport AtomsSphereGroup from './AtomsSphereGroup'\r\n\r\nclass AtomsSASSESGroupStub extends AtomsSphereGroup {\r\n  _makeGeoArgs() {\r\n    const selectedAtoms = []\r\n    const { atoms, chunks } = this._selection\r\n    const n = chunks.length\r\n    for (let i = 0; i < n; ++i) {\r\n      selectedAtoms[i] = atoms[chunks[i]]\r\n    }\r\n    const opts = this._mode.getSurfaceOpts()\r\n    opts.atoms = selectedAtoms\r\n    opts.selection = this._selection\r\n    opts.colorMode = this._colorer\r\n    return [n, opts]\r\n  }\r\n}\r\n\r\nexport default AtomsSASSESGroupStub\r\n",
		"import AtomsGroup from './AtomsGroup'\r\nimport utils from '../../../utils'\r\n\r\nfunction adjustColor(color) {\r\n  let r = (color >> 16) & 255\r\n  let g = (color >> 8) & 255\r\n  let b = color & 255\r\n\r\n  if (0.2126 * r + 0.7152 * g + 0.0722 * b > 127) {\r\n    r = (r * 3) / 10\r\n    g = (g * 3) / 10\r\n    b = (b * 3) / 10\r\n  } else {\r\n    r = 255 - ((255 - r) * 3) / 10\r\n    g = 255 - ((255 - g) * 3) / 10\r\n    b = 255 - ((255 - b) * 3) / 10\r\n  }\r\n\r\n  return (r << 16) | (g << 8) | b\r\n}\r\n\r\nfunction inverseColor(color) {\r\n  const r = (color >> 16) & 255\r\n  const g = (color >> 8) & 255\r\n  const b = color & 255\r\n\r\n  return ((255 - r) << 16) | ((255 - g) << 8) | (255 - b)\r\n}\r\n\r\nfunction getAtomText(atom) {\r\n  if (atom.name.getNode() !== null) {\r\n    return atom.name.getNode()\r\n  }\r\n\r\n  return atom.getVisualName()\r\n}\r\n\r\nconst colorMappings = {\r\n  none(c) {\r\n    return c\r\n  },\r\n  adjust: adjustColor,\r\n  inverse: inverseColor\r\n}\r\n\r\nfunction propagateColor(color, rule) {\r\n  let result\r\n  if (colorMappings.hasOwnProperty(rule)) {\r\n    result = utils.hexColor(colorMappings[rule](color))\r\n  } else {\r\n    const val = parseInt(rule, 16)\r\n    if (!Number.isNaN(val) && rule.toLowerCase().startsWith('0x')) {\r\n      result = utils.hexColor(val)\r\n    } else {\r\n      result = '#000000'\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nconst templateMappings = {\r\n  serial(a) {\r\n    return a.serial\r\n  },\r\n  name(a) {\r\n    return a.getVisualName()\r\n  },\r\n  elem(a) {\r\n    return a.element.name\r\n  },\r\n  residue(a) {\r\n    return a.residue.getType().getName()\r\n  },\r\n  sequence(a) {\r\n    return a.residue.getSequence()\r\n  },\r\n  chain(a) {\r\n    return a.residue.getChain().getName()\r\n  },\r\n  hetatm(a) {\r\n    return a.isHet()\r\n  },\r\n  water(a) {\r\n    return (\r\n      a.residue.getType().getName() === 'HOH' ||\r\n      a.residue.getType().getName() === 'WAT'\r\n    )\r\n  }\r\n}\r\n\r\nconst parseTemplate = function (atom, str) {\r\n  return str.replace(/\\{\\{(\\s*\\w+\\s*)\\}\\}/g, (m) => {\r\n    let key = m.replace(/\\s+/g, '')\r\n    key = key.substring(2, key.length - 2).toLowerCase()\r\n\r\n    if (templateMappings.hasOwnProperty(key)) {\r\n      return templateMappings[key](atom)\r\n    }\r\n    return 'null'\r\n  })\r\n}\r\n\r\nclass AtomsTextGroup extends AtomsGroup {\r\n  _makeGeoArgs() {\r\n    const opts = this._mode.getLabelOpts()\r\n    return [this._selection.chunks.length, opts]\r\n  }\r\n\r\n  _build() {\r\n    const opts = this._mode.getLabelOpts()\r\n    const atomsIdc = this._selection.chunks\r\n    const { atoms, parent } = this._selection\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]]\r\n      const text = opts.template\r\n        ? parseTemplate(atom, opts.template)\r\n        : getAtomText(atom)\r\n      if (!text) {\r\n        continue\r\n      }\r\n      const color = colorer.getAtomColor(atom, parent)\r\n      const fgColor = parseInt(propagateColor(color, opts.fg).substring(1), 16)\r\n      const bgColor = opts.showBg\r\n        ? parseInt(propagateColor(color, opts.bg).substring(1), 16)\r\n        : 'transparent'\r\n      geo.setItem(i, atom.position, text)\r\n      geo.setColor(i, fgColor, bgColor)\r\n    }\r\n    geo.finalize()\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const opts = this._mode.getLabelOpts()\r\n    const atomsIdc = this._selection.chunks\r\n    const { atoms } = this._selection\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const updateColor = frameData.needsColorUpdate(colorer)\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]]\r\n      const text = opts.template\r\n        ? parseTemplate(atom, opts.template)\r\n        : getAtomText(atom)\r\n      if (!text) {\r\n        continue\r\n      }\r\n      const color = frameData.getAtomColor(colorer, atom)\r\n      const fgColor = parseInt(propagateColor(color, opts.fg).substring(1), 16)\r\n      const bgColor = opts.showBg\r\n        ? parseInt(propagateColor(color, opts.bg).substring(1), 16)\r\n        : 'transparent'\r\n      geo.setItem(i, frameData.getAtomPos(atomsIdc[i]), text)\r\n      if (updateColor) {\r\n        geo.setColor(i, fgColor, bgColor)\r\n      }\r\n    }\r\n    geo.finalize()\r\n  }\r\n}\r\n\r\nexport default AtomsTextGroup\r\n",
		"import AtomsGroup from './AtomsGroup'\r\nimport { Vector3 } from 'three'\r\n\r\nfunction _slerp(omega, v1, v2, t) {\r\n  const oSin = Math.sin(omega)\r\n  return v1\r\n    .clone()\r\n    .multiplyScalar(Math.sin((1 - t) * omega) / oSin)\r\n    .addScaledVector(v2, Math.sin(t * omega) / oSin)\r\n}\r\n\r\nclass AromaticGroup extends AtomsGroup {\r\n  _buildInner(radOffset, addChunk) {\r\n    const chunksToIdx = this._selection.chunks\r\n\r\n    const prevVector = new Vector3()\r\n    const currVector = new Vector3()\r\n    const segmentsHeight = this._segmentsHeight\r\n    const leprStep = 1.0 / segmentsHeight\r\n    const colorer = this._colorer\r\n\r\n    const { cycles, parent } = this._selection\r\n    let chunkIdx = 0\r\n    let currAtomIdx = chunksToIdx[chunkIdx]\r\n\r\n    for (let cIdx = 0, cCount = cycles.length; cIdx < cCount; ++cIdx) {\r\n      const cycle = cycles[cIdx]\r\n      const cycAtoms = cycle.atoms\r\n      const chunkPoints = []\r\n      const tmpDir = []\r\n      const { center } = cycle\r\n      const cycleRad = cycle.radius - radOffset\r\n      const n = cycAtoms.length\r\n      let i = 0\r\n      const prevPos = cycAtoms[n - 1].position\r\n      let currPos = cycAtoms[i].position\r\n      prevVector.subVectors(prevPos, center)\r\n      currVector.subVectors(currPos, center)\r\n      const upDir = currVector.clone().cross(prevVector).normalize()\r\n\r\n      for (; i < n; ++i) {\r\n        const omega = prevVector.angleTo(currVector)\r\n        tmpDir[i] = _slerp(omega, prevVector, currVector, 0.5).normalize()\r\n        currPos = cycAtoms[(i + 1) % n].position\r\n        prevVector.copy(currVector)\r\n        currVector.subVectors(currPos, center)\r\n      }\r\n\r\n      for (i = 0; i < n; ++i) {\r\n        if (cycAtoms[i].index !== currAtomIdx) {\r\n          continue\r\n        }\r\n        const start = tmpDir[i]\r\n        const end = tmpDir[(i + 1) % n]\r\n        const color = colorer.getAtomColor(cycAtoms[i], parent)\r\n        const currAngle = start.angleTo(end)\r\n\r\n        for (let j = 0; j <= segmentsHeight; ++j) {\r\n          chunkPoints[j] = _slerp(currAngle, start, end, j * leprStep)\r\n            .multiplyScalar(cycleRad)\r\n            .add(center)\r\n        }\r\n\r\n        addChunk(chunkIdx++, color, chunkPoints, center, upDir)\r\n        currAtomIdx = chunksToIdx[chunkIdx]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default AromaticGroup\r\n",
		"import gfxutils from '../../gfxutils'\r\nimport AromaticGroup from './AromaticGroup'\r\nimport { Vector2, Vector3 } from 'three'\r\n\r\nfunction _createShape(rad, parts) {\r\n  const pts = []\r\n  for (let i = 0; i < parts; ++i) {\r\n    const a = ((-2 * i) / parts) * Math.PI\r\n    pts.push(new Vector3(Math.cos(a) * rad, Math.sin(a) * rad, 0))\r\n  }\r\n  return pts\r\n}\r\nconst { calcChunkMatrix } = gfxutils\r\n\r\nclass AromaticTorusGroup extends AromaticGroup {\r\n  _build() {\r\n    const segmentsHeight = this._segmentsHeight\r\n    const torusRad = this._mode.getAromRadius()\r\n    const radiusV = new Vector2(torusRad, torusRad)\r\n    const radOffset = this._mode.calcStickRadius() + 2 * torusRad\r\n    const lookAtVector = new Vector3()\r\n    const mtc = []\r\n    const geo = this._geo\r\n    this._buildInner(radOffset, (chunkIdx, color, points, center, upDir) => {\r\n      for (let j = 0; j <= segmentsHeight; ++j) {\r\n        const currPoint = points[j]\r\n        const currDir = currPoint.clone().sub(center).cross(upDir)\r\n        lookAtVector.addVectors(currPoint, currDir)\r\n        mtc[j] = calcChunkMatrix(currPoint, lookAtVector, upDir, radiusV)\r\n      }\r\n      geo.setItem(chunkIdx, mtc)\r\n      geo.setColor(chunkIdx, color)\r\n    })\r\n    geo.finalize()\r\n  }\r\n\r\n  _makeGeoArgs() {\r\n    this._segmentsHeight = this._polyComplexity\r\n    return [\r\n      _createShape(1.0, this._polyComplexity),\r\n      this._segmentsHeight + 1,\r\n      this._selection.chunks.length\r\n    ]\r\n  }\r\n}\r\n\r\nexport default AromaticTorusGroup\r\n",
		"import AromaticGroup from './AromaticGroup'\r\n\r\nclass AromaticLinesGroup extends AromaticGroup {\r\n  _build() {\r\n    const geo = this._geo\r\n    const radOffset = this._mode.getAromaticOffset()\r\n    this._buildInner(radOffset, (chunkIdx, color, points) => {\r\n      let prevPt = points[0] // do not replace with start\r\n      for (let j = 1; j <= this._segmentsHeight; ++j) {\r\n        const currPoint = points[j]\r\n        geo.setSegment(chunkIdx, j - 1, prevPt, currPoint)\r\n        prevPt = currPoint\r\n      }\r\n      geo.setColor(chunkIdx, color)\r\n    })\r\n    geo.finalize()\r\n  }\r\n\r\n  _makeGeoArgs() {\r\n    this._segmentsHeight = this._mode.getAromaticArcChunks()\r\n    return [this._selection.chunks.length, this._segmentsHeight, true]\r\n  }\r\n}\r\n\r\nexport default AromaticLinesGroup\r\n",
		"import ChemGroup from './ChemGroup'\r\n\r\nclass ResiduesGroup extends ChemGroup {\r\n  raycast(raycaster, intersects) {\r\n    const { residues } = this._selection\r\n    const inters = []\r\n    this._mesh.raycast(raycaster, inters)\r\n    const chunksIdc = this._chunksIdc\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue\r\n      }\r\n      const resIdx = chunksIdc[inters[i].chunkIdx]\r\n      if (resIdx < residues.length) {\r\n        inters[i].residue = residues[resIdx]\r\n        intersects.push(inters[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  _calcChunksList(mask) {\r\n    const chunksList = []\r\n    const { residues } = this._selection\r\n    const resIdc = this._chunksIdc\r\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\r\n      const res = residues[resIdc[i]]\r\n      if ((res._mask & mask) !== 0) {\r\n        chunksList.push(i)\r\n      }\r\n    }\r\n    return chunksList\r\n  }\r\n}\r\n\r\nexport default ResiduesGroup\r\n",
		"import ResiduesGroup from './ResiduesGroup'\r\n\r\nclass NucleicItemGroup extends ResiduesGroup {\r\n  raycast(raycaster, intersects) {\r\n    const { residues } = this._selection\r\n    const inters = []\r\n    this._mesh.raycast(raycaster, inters)\r\n    const chunksIdc = this._chunksIdc\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue\r\n      }\r\n      const resIdx = chunksIdc[Math.floor(inters[i].chunkIdx / 2)]\r\n      if (resIdx < residues.length) {\r\n        inters[i].residue = residues[resIdx]\r\n        intersects.push(inters[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  _build() {\r\n    const { residues, parent } = this._selection\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const stickRad = this._mode.calcStickRadius()\r\n    let chunkIdx = 0\r\n\r\n    const resIdc = this._selection.chunks\r\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\r\n      const res = residues[resIdc[i]]\r\n      const color = colorer.getResidueColor(res, parent)\r\n      this._processItem(\r\n        chunkIdx++,\r\n        res._cylinders[0],\r\n        res._cylinders[1],\r\n        stickRad,\r\n        color\r\n      )\r\n    }\r\n    geo.finalize()\r\n  }\r\n\r\n  _calcChunksList(mask) {\r\n    const chunksList = []\r\n    let chunkIdx = 0\r\n    const { residues } = this._selection\r\n    const resIdc = this._chunksIdc\r\n\r\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\r\n      const res = residues[resIdc[i]]\r\n      if ((res._mask & mask) !== 0) {\r\n        chunksList[chunkIdx++] = 2 * i\r\n        chunksList[chunkIdx++] = 2 * i + 1\r\n      }\r\n    }\r\n    return chunksList\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const residues = frameData.getResidues()\r\n    const { parent } = this._selection\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const stickRad = this._mode.calcStickRadius()\r\n    let chunkIdx = 0\r\n\r\n    const resIdc = this._selection.chunks\r\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\r\n      const res = residues[resIdc[i]]\r\n      const color = colorer.getResidueColor(res, parent)\r\n      this._processItem(\r\n        chunkIdx++,\r\n        res._cylinders[0],\r\n        res._cylinders[1],\r\n        stickRad,\r\n        color\r\n      )\r\n    }\r\n    geo.finishUpdate()\r\n  }\r\n}\r\n\r\nexport default NucleicItemGroup\r\n",
		"import NucleicItemGroup from './NucleicItemGroup'\r\n\r\nclass NucleicCylindersGroup extends NucleicItemGroup {\r\n  _makeGeoArgs() {\r\n    return [this._selection.chunks.length, this._polyComplexity]\r\n  }\r\n\r\n  _processItem(chunkIdx, cyl1, cyl2, stickRad, color) {\r\n    const geo = this._geo\r\n    geo.setItem(chunkIdx, cyl1, cyl2, stickRad)\r\n    geo.setColor(chunkIdx, color, color)\r\n  }\r\n}\r\n\r\nexport default NucleicCylindersGroup\r\n",
		"import NucleicItemGroup from './NucleicItemGroup'\r\n\r\nclass NucleicSpheresGroup extends NucleicItemGroup {\r\n  _makeGeoArgs() {\r\n    return [this._selection.chunks.length * 2, this._polyComplexity]\r\n  }\r\n\r\n  _processItem(chunkIdx, cyl1, cyl2, stickRad, color) {\r\n    const geo = this._geo\r\n    let idx = chunkIdx * 2\r\n    geo.setItem(idx, cyl1, stickRad)\r\n    geo.setColor(idx, color)\r\n    idx++\r\n    geo.setItem(idx, cyl2, stickRad)\r\n    geo.setColor(idx, color)\r\n  }\r\n}\r\n\r\nexport default NucleicSpheresGroup\r\n",
		"/*\r\nSmooth.js version 0.1.7\r\n\r\nTurn arrays into smooth functions.\r\n\r\nCopyright 2012 Spencer Cohen\r\nLicensed under MIT license (see \"Smooth.js MIT license.txt\")\r\n*/\r\n\r\n/*Constants (these are accessible by Smooth.WHATEVER in user space)\r\n */\r\n\r\n;(function () {\r\n  var AbstractInterpolator,\r\n    CubicInterpolator,\r\n    Enum,\r\n    LinearInterpolator,\r\n    NearestInterpolator,\r\n    PI,\r\n    SincFilterInterpolator,\r\n    Smooth,\r\n    clipClamp,\r\n    clipMirror,\r\n    clipPeriodic,\r\n    defaultConfig,\r\n    getColumn,\r\n    getType,\r\n    isValidNumber,\r\n    k,\r\n    makeLanczosWindow,\r\n    makeScaledFunction,\r\n    makeSincKernel,\r\n    normalizeScaleTo,\r\n    shallowCopy,\r\n    sin,\r\n    sinc,\r\n    v,\r\n    validateNumber,\r\n    validateVector,\r\n    __hasProp = Object.prototype.hasOwnProperty,\r\n    __extends = function (child, parent) {\r\n      for (var key in parent) {\r\n        if (__hasProp.call(parent, key)) child[key] = parent[key]\r\n      }\r\n      function ctor() {\r\n        this.constructor = child\r\n      }\r\n      ctor.prototype = parent.prototype\r\n      child.prototype = new ctor()\r\n      child.__super__ = parent.prototype\r\n      return child\r\n    }\r\n\r\n  Enum = {\r\n    /*Interpolation methods\r\n     */\r\n    METHOD_NEAREST: 'nearest',\r\n    METHOD_LINEAR: 'linear',\r\n    METHOD_CUBIC: 'cubic',\r\n    METHOD_LANCZOS: 'lanczos',\r\n    METHOD_SINC: 'sinc',\r\n    /*Input clipping modes\r\n     */\r\n    CLIP_CLAMP: 'clamp',\r\n    CLIP_ZERO: 'zero',\r\n    CLIP_PERIODIC: 'periodic',\r\n    CLIP_MIRROR: 'mirror',\r\n    /* Constants for control over the cubic interpolation tension\r\n     */\r\n    CUBIC_TENSION_DEFAULT: 0,\r\n    CUBIC_TENSION_CATMULL_ROM: 0\r\n  }\r\n\r\n  defaultConfig = {\r\n    method: Enum.METHOD_CUBIC,\r\n    cubicTension: Enum.CUBIC_TENSION_DEFAULT,\r\n    clip: Enum.CLIP_CLAMP,\r\n    scaleTo: 0,\r\n    sincFilterSize: 2,\r\n    sincWindow: void 0\r\n  }\r\n\r\n  /*Index clipping functions\r\n   */\r\n\r\n  clipClamp = function (i, n) {\r\n    return Math.max(0, Math.min(i, n - 1))\r\n  }\r\n\r\n  clipPeriodic = function (i, n) {\r\n    i = i % n\r\n    if (i < 0) i += n\r\n    return i\r\n  }\r\n\r\n  clipMirror = function (i, n) {\r\n    var period\r\n    period = 2 * (n - 1)\r\n    i = clipPeriodic(i, period)\r\n    if (i > n - 1) i = period - i\r\n    return i\r\n  }\r\n\r\n  /*\r\n  Abstract scalar interpolation class which provides common functionality for all interpolators\r\n  \r\n  Subclasses must override interpolate().\r\n  */\r\n\r\n  AbstractInterpolator = (function () {\r\n    function AbstractInterpolator(array, config) {\r\n      this.array = array.slice(0)\r\n      this.length = this.array.length\r\n      if (\r\n        !(this.clipHelper = {\r\n          clamp: this.clipHelperClamp,\r\n          zero: this.clipHelperZero,\r\n          periodic: this.clipHelperPeriodic,\r\n          mirror: this.clipHelperMirror\r\n        }[config.clip])\r\n      ) {\r\n        throw 'Invalid clip: ' + config.clip\r\n      }\r\n    }\r\n\r\n    AbstractInterpolator.prototype.getClippedInput = function (i) {\r\n      if (0 <= i && i < this.length) {\r\n        return this.array[i]\r\n      } else {\r\n        return this.clipHelper(i)\r\n      }\r\n    }\r\n\r\n    AbstractInterpolator.prototype.clipHelperClamp = function (i) {\r\n      return this.array[clipClamp(i, this.length)]\r\n    }\r\n\r\n    AbstractInterpolator.prototype.clipHelperZero = function (i) {\r\n      return 0\r\n    }\r\n\r\n    AbstractInterpolator.prototype.clipHelperPeriodic = function (i) {\r\n      return this.array[clipPeriodic(i, this.length)]\r\n    }\r\n\r\n    AbstractInterpolator.prototype.clipHelperMirror = function (i) {\r\n      return this.array[clipMirror(i, this.length)]\r\n    }\r\n\r\n    AbstractInterpolator.prototype.interpolate = function (t) {\r\n      throw 'Subclasses of AbstractInterpolator must override the interpolate() method.'\r\n    }\r\n\r\n    return AbstractInterpolator\r\n  })()\r\n\r\n  NearestInterpolator = (function (_super) {\r\n    __extends(NearestInterpolator, _super)\r\n\r\n    function NearestInterpolator() {\r\n      NearestInterpolator.__super__.constructor.apply(this, arguments)\r\n    }\r\n\r\n    NearestInterpolator.prototype.interpolate = function (t) {\r\n      return this.getClippedInput(Math.round(t))\r\n    }\r\n\r\n    return NearestInterpolator\r\n  })(AbstractInterpolator)\r\n\r\n  LinearInterpolator = (function (_super) {\r\n    __extends(LinearInterpolator, _super)\r\n\r\n    function LinearInterpolator() {\r\n      LinearInterpolator.__super__.constructor.apply(this, arguments)\r\n    }\r\n\r\n    LinearInterpolator.prototype.interpolate = function (t) {\r\n      var k\r\n      k = Math.floor(t)\r\n      t -= k\r\n      return (1 - t) * this.getClippedInput(k) + t * this.getClippedInput(k + 1)\r\n    }\r\n\r\n    return LinearInterpolator\r\n  })(AbstractInterpolator)\r\n\r\n  CubicInterpolator = (function (_super) {\r\n    __extends(CubicInterpolator, _super)\r\n\r\n    function CubicInterpolator(array, config) {\r\n      this.tangentFactor = 1 - Math.max(-1, Math.min(1, config.cubicTension))\r\n      CubicInterpolator.__super__.constructor.apply(this, arguments)\r\n    }\r\n\r\n    CubicInterpolator.prototype.getTangent = function (k) {\r\n      return (\r\n        (this.tangentFactor *\r\n          (this.getClippedInput(k + 1) - this.getClippedInput(k - 1))) /\r\n        2\r\n      )\r\n    }\r\n\r\n    CubicInterpolator.prototype.interpolate = function (t) {\r\n      var k, m, p, t2, t3\r\n      k = Math.floor(t)\r\n      m = [this.getTangent(k), this.getTangent(k + 1)]\r\n      p = [this.getClippedInput(k), this.getClippedInput(k + 1)]\r\n      t -= k\r\n      t2 = t * t\r\n      t3 = t * t2\r\n      return (\r\n        (2 * t3 - 3 * t2 + 1) * p[0] +\r\n        (t3 - 2 * t2 + t) * m[0] +\r\n        (-2 * t3 + 3 * t2) * p[1] +\r\n        (t3 - t2) * m[1]\r\n      )\r\n    }\r\n\r\n    return CubicInterpolator\r\n  })(AbstractInterpolator)\r\n  ;(sin = Math.sin), (PI = Math.PI)\r\n\r\n  sinc = function (x) {\r\n    if (x === 0) {\r\n      return 1\r\n    } else {\r\n      return sin(PI * x) / (PI * x)\r\n    }\r\n  }\r\n\r\n  makeLanczosWindow = function (a) {\r\n    return function (x) {\r\n      return sinc(x / a)\r\n    }\r\n  }\r\n\r\n  makeSincKernel = function (window) {\r\n    return function (x) {\r\n      return sinc(x) * window(x)\r\n    }\r\n  }\r\n\r\n  SincFilterInterpolator = (function (_super) {\r\n    __extends(SincFilterInterpolator, _super)\r\n\r\n    function SincFilterInterpolator(array, config) {\r\n      SincFilterInterpolator.__super__.constructor.apply(this, arguments)\r\n      this.a = config.sincFilterSize\r\n      if (!config.sincWindow) throw 'No sincWindow provided'\r\n      this.kernel = makeSincKernel(config.sincWindow)\r\n    }\r\n\r\n    SincFilterInterpolator.prototype.interpolate = function (t) {\r\n      var k, n, sum, _ref, _ref2\r\n      k = Math.floor(t)\r\n      sum = 0\r\n      for (\r\n        n = _ref = k - this.a + 1, _ref2 = k + this.a;\r\n        _ref <= _ref2 ? n <= _ref2 : n >= _ref2;\r\n        _ref <= _ref2 ? n++ : n--\r\n      ) {\r\n        sum += this.kernel(t - n) * this.getClippedInput(n)\r\n      }\r\n      return sum\r\n    }\r\n\r\n    return SincFilterInterpolator\r\n  })(AbstractInterpolator)\r\n\r\n  getColumn = function (arr, i) {\r\n    var row, _i, _len, _results\r\n    _results = []\r\n    for (_i = 0, _len = arr.length; _i < _len; _i++) {\r\n      row = arr[_i]\r\n      _results.push(row[i])\r\n    }\r\n    return _results\r\n  }\r\n\r\n  makeScaledFunction = function (f, baseScale, scaleRange) {\r\n    var scaleFactor, translation\r\n    if (scaleRange.join === '0,1') {\r\n      return f\r\n    } else {\r\n      scaleFactor = baseScale / (scaleRange[1] - scaleRange[0])\r\n      translation = scaleRange[0]\r\n      return function (t) {\r\n        return f(scaleFactor * (t - translation))\r\n      }\r\n    }\r\n  }\r\n\r\n  getType = function (x) {\r\n    return Object.prototype.toString.call(x).slice('[object '.length, -1)\r\n  }\r\n\r\n  validateNumber = function (n) {\r\n    if (isNaN(n)) throw 'NaN in Smooth() input'\r\n    if (getType(n) !== 'Number') throw 'Non-number in Smooth() input'\r\n    if (!isFinite(n)) throw 'Infinity in Smooth() input'\r\n  }\r\n\r\n  validateVector = function (v, dimension) {\r\n    var n, _i, _len\r\n    if (getType(v) !== 'Array') throw 'Non-vector in Smooth() input'\r\n    if (v.length !== dimension) throw 'Inconsistent dimension in Smooth() input'\r\n    for (_i = 0, _len = v.length; _i < _len; _i++) {\r\n      n = v[_i]\r\n      validateNumber(n)\r\n    }\r\n  }\r\n\r\n  isValidNumber = function (n) {\r\n    return getType(n) === 'Number' && isFinite(n) && !isNaN(n)\r\n  }\r\n\r\n  normalizeScaleTo = function (s) {\r\n    var invalidErr\r\n    invalidErr = 'scaleTo param must be number or array of two numbers'\r\n    switch (getType(s)) {\r\n      case 'Number':\r\n        if (!isValidNumber(s)) throw invalidErr\r\n        s = [0, s]\r\n        break\r\n      case 'Array':\r\n        if (s.length !== 2) throw invalidErr\r\n        if (!(isValidNumber(s[0]) && isValidNumber(s[1]))) throw invalidErr\r\n        break\r\n      default:\r\n        throw invalidErr\r\n    }\r\n    return s\r\n  }\r\n\r\n  shallowCopy = function (obj) {\r\n    var copy, k, v\r\n    copy = {}\r\n    for (k in obj) {\r\n      if (!__hasProp.call(obj, k)) continue\r\n      v = obj[k]\r\n      copy[k] = v\r\n    }\r\n    return copy\r\n  }\r\n\r\n  Smooth = function (arr, config) {\r\n    var baseDomainEnd,\r\n      dimension,\r\n      i,\r\n      interpolator,\r\n      interpolatorClass,\r\n      interpolators,\r\n      k,\r\n      n,\r\n      properties,\r\n      smoothFunc,\r\n      v\r\n    if (config == null) config = {}\r\n    properties = {}\r\n    config = shallowCopy(config)\r\n    properties.config = shallowCopy(config)\r\n    if (config.scaleTo == null) config.scaleTo = config.period\r\n    if (config.sincFilterSize == null) {\r\n      config.sincFilterSize = config.lanczosFilterSize\r\n    }\r\n    for (k in defaultConfig) {\r\n      if (!__hasProp.call(defaultConfig, k)) continue\r\n      v = defaultConfig[k]\r\n      if (config[k] == null) config[k] = v\r\n    }\r\n    if (\r\n      !(interpolatorClass = {\r\n        nearest: NearestInterpolator,\r\n        linear: LinearInterpolator,\r\n        cubic: CubicInterpolator,\r\n        lanczos: SincFilterInterpolator,\r\n        sinc: SincFilterInterpolator\r\n      }[config.method])\r\n    ) {\r\n      throw 'Invalid method: ' + config.method\r\n    }\r\n    if (config.method === 'lanczos') {\r\n      config.sincWindow = makeLanczosWindow(config.sincFilterSize)\r\n    }\r\n    if (arr.length < 2) throw 'Array must have at least two elements'\r\n    properties.count = arr.length\r\n    smoothFunc = (function () {\r\n      var _i, _j, _len, _len2\r\n      switch (getType(arr[0])) {\r\n        case 'Number':\r\n          properties.dimension = 'scalar'\r\n          if (Smooth.deepValidation) {\r\n            for (_i = 0, _len = arr.length; _i < _len; _i++) {\r\n              n = arr[_i]\r\n              validateNumber(n)\r\n            }\r\n          }\r\n          interpolator = new interpolatorClass(arr, config)\r\n          return function (t) {\r\n            return interpolator.interpolate(t)\r\n          }\r\n        case 'Array':\r\n          properties.dimension = dimension = arr[0].length\r\n          if (!dimension) throw 'Vectors must be non-empty'\r\n          if (Smooth.deepValidation) {\r\n            for (_j = 0, _len2 = arr.length; _j < _len2; _j++) {\r\n              v = arr[_j]\r\n              validateVector(v, dimension)\r\n            }\r\n          }\r\n          interpolators = (function () {\r\n            var _results\r\n            _results = []\r\n            for (\r\n              i = 0;\r\n              0 <= dimension ? i < dimension : i > dimension;\r\n              0 <= dimension ? i++ : i--\r\n            ) {\r\n              _results.push(new interpolatorClass(getColumn(arr, i), config))\r\n            }\r\n            return _results\r\n          })()\r\n          return function (t) {\r\n            var interpolator, _k, _len3, _results\r\n            _results = []\r\n            for (_k = 0, _len3 = interpolators.length; _k < _len3; _k++) {\r\n              interpolator = interpolators[_k]\r\n              _results.push(interpolator.interpolate(t))\r\n            }\r\n            return _results\r\n          }\r\n        default:\r\n          throw 'Invalid element type: ' + getType(arr[0])\r\n      }\r\n    })()\r\n    if (config.clip === 'periodic') {\r\n      baseDomainEnd = arr.length\r\n    } else {\r\n      baseDomainEnd = arr.length - 1\r\n    }\r\n    config.scaleTo || (config.scaleTo = baseDomainEnd)\r\n    properties.domain = normalizeScaleTo(config.scaleTo)\r\n    smoothFunc = makeScaledFunction(\r\n      smoothFunc,\r\n      baseDomainEnd,\r\n      properties.domain\r\n    )\r\n    properties.domain.sort()\r\n    /*copy properties\r\n     */\r\n    for (k in properties) {\r\n      if (!__hasProp.call(properties, k)) continue\r\n      v = properties[k]\r\n      smoothFunc[k] = v\r\n    }\r\n    return smoothFunc\r\n  }\r\n\r\n  for (k in Enum) {\r\n    if (!__hasProp.call(Enum, k)) continue\r\n    v = Enum[k]\r\n    Smooth[k] = v\r\n  }\r\n\r\n  Smooth.deepValidation = true\r\n  ;(typeof exports !== 'undefined' && exports !== null\r\n    ? exports\r\n    : window\r\n  ).Smooth = Smooth\r\n}.call(this))\r\n",
		"import { Smooth } from '../../../vendors/Smooth'\r\nimport gfxutils from '../../gfxutils'\r\nimport chem from '../../../chem'\r\nimport { Vector2, Vector3 } from 'three'\r\n\r\nconst { ResidueType } = chem\r\n\r\nconst calcMatrix = gfxutils.calcChunkMatrix\r\n\r\nfunction _buildStructureInterpolator(points, tension) {\r\n  const path = Smooth(points, {\r\n    method: Smooth.METHOD_CUBIC,\r\n    clip: Smooth.CLIP_CLAMP,\r\n    cubicTension: tension,\r\n    scaleTo: 1\r\n  })\r\n\r\n  return function (t, argTrans) {\r\n    let transformT = argTrans\r\n    if (transformT === null) {\r\n      // map our range to the [second .. last but one]\r\n      transformT = function (tt) {\r\n        return (tt * (points.length - 1 - 2) + 1) / (points.length - 1)\r\n      }\r\n    }\r\n    const newt = transformT(t)\r\n    const ans = path(newt)\r\n    return new Vector3(ans[0], ans[1], ans[2])\r\n  }\r\n}\r\n\r\nfunction _addPoints(centerPoints, topPoints, idx, residue) {\r\n  if (!residue._isValid) {\r\n    centerPoints[idx] = centerPoints[idx - 1]\r\n    topPoints[idx] = topPoints[idx - 1]\r\n    return\r\n  }\r\n  const cp = residue._controlPoint\r\n  centerPoints[idx] = [cp.x, cp.y, cp.z]\r\n  const tp = cp.clone().add(residue._wingVector)\r\n  topPoints[idx] = [tp.x, tp.y, tp.z]\r\n}\r\n\r\nfunction _addPointsForLoneResidue(centerPoints, topPoints, idx, residue) {\r\n  const nucleic = (residue._type.flags & ResidueType.Flags.NUCLEIC) !== 0\r\n  const nameFrom = nucleic ? \"C5'\" : 'N'\r\n  const nameTo = nucleic ? \"C3'\" : 'C'\r\n\r\n  let posFrom\r\n  let posTo\r\n  residue.forEachAtom((atom) => {\r\n    const name = atom.getVisualName()\r\n    if (!posFrom && name === nameFrom) {\r\n      posFrom = atom.position\r\n    } else if (!posTo && name === nameTo) {\r\n      posTo = atom.position\r\n    }\r\n  })\r\n\r\n  // provide a fallback for unknown residues\r\n  if (!(posFrom && posTo)) {\r\n    posFrom = residue._firstAtom.position\r\n    posTo = residue._lastAtom.position\r\n  }\r\n\r\n  if (posFrom && posTo) {\r\n    const shift = posTo.clone().sub(posFrom)\r\n\r\n    const wing = residue._wingVector\r\n    const cp = residue._controlPoint\r\n    const tp = cp.clone().add(wing)\r\n\r\n    const cpPrev = cp.clone().sub(shift)\r\n    const tpPrev = cpPrev.clone().add(wing)\r\n    centerPoints[idx] = [cpPrev.x, cpPrev.y, cpPrev.z]\r\n    topPoints[idx] = [tpPrev.x, tpPrev.y, tpPrev.z]\r\n    ++idx\r\n    centerPoints[idx] = [cpPrev.x, cpPrev.y, cpPrev.z]\r\n    topPoints[idx] = [tpPrev.x, tpPrev.y, tpPrev.z]\r\n    ++idx\r\n\r\n    centerPoints[idx] = [cp.x, cp.y, cp.z]\r\n    topPoints[idx] = [tp.x, tp.y, tp.z]\r\n    ++idx\r\n\r\n    const cpNext = cp.clone().add(shift)\r\n    const tpNext = cpNext.clone().add(wing)\r\n    centerPoints[idx] = [cpNext.x, cpNext.y, cpNext.z]\r\n    topPoints[idx] = [tpNext.x, tpNext.y, tpNext.z]\r\n    ++idx\r\n    centerPoints[idx] = [cpNext.x, cpNext.y, cpNext.z]\r\n    topPoints[idx] = [tpNext.x, tpNext.y, tpNext.z]\r\n  }\r\n}\r\n\r\nfunction _calcPoints(residues, firstIdx, lastIdx, boundaries) {\r\n  const left = boundaries.start\r\n  const right = boundaries.end\r\n  function _prevIdx(idx) {\r\n    return idx > left && residues[idx - 1]._isValid ? idx - 1 : idx\r\n  }\r\n  function _nextIdx(idx) {\r\n    return idx < right && residues[idx + 1]._isValid ? idx + 1 : idx\r\n  }\r\n\r\n  const topPoints = []\r\n  const centerPoints = []\r\n  let arrIdx = 0\r\n  function _extrapolate2(currIdx, otherIdx) {\r\n    const cp = residues[currIdx]._controlPoint\r\n      .clone()\r\n      .lerp(residues[otherIdx]._controlPoint, -0.25)\r\n    const tp = cp.clone().add(residues[currIdx]._wingVector)\r\n    centerPoints[arrIdx] = [cp.x, cp.y, cp.z]\r\n    topPoints[arrIdx++] = [tp.x, tp.y, tp.z]\r\n    centerPoints[arrIdx] = [cp.x, cp.y, cp.z]\r\n    topPoints[arrIdx++] = [tp.x, tp.y, tp.z]\r\n  }\r\n\r\n  // a single disconnected residue\r\n  const prevIdx = _prevIdx(firstIdx)\r\n  const nextIdx = _nextIdx(lastIdx)\r\n  if (prevIdx === nextIdx) {\r\n    _addPointsForLoneResidue(\r\n      centerPoints,\r\n      topPoints,\r\n      arrIdx,\r\n      residues[firstIdx]\r\n    )\r\n    return { centerPoints, topPoints }\r\n  }\r\n\r\n  // Two points (prev-prev and next-next) are added to support edge conditions for cubic splines, they are ignored\r\n  // Another two (prev and next) were added to support the outside of the sub chain\r\n\r\n  // prev and prev-prev\r\n  if (firstIdx === prevIdx) {\r\n    // do the extrapolation\r\n    _extrapolate2(firstIdx, _nextIdx(firstIdx))\r\n  } else {\r\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[_prevIdx(prevIdx)])\r\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[prevIdx])\r\n  }\r\n\r\n  // main loop\r\n  for (let idx = firstIdx; idx <= lastIdx; ++idx) {\r\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[idx])\r\n  }\r\n\r\n  // next and next-next\r\n  if (nextIdx === _nextIdx(nextIdx)) {\r\n    // do the extrapolation\r\n    _extrapolate2(lastIdx, _prevIdx(lastIdx))\r\n  } else {\r\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[nextIdx])\r\n    _addPoints(centerPoints, topPoints, arrIdx, residues[_nextIdx(nextIdx)])\r\n  }\r\n  return { centerPoints, topPoints }\r\n}\r\n\r\nclass CartoonHelper {\r\n  constructor(residues, startIdx, endIdx, segmentsCount, tension, boundaries) {\r\n    const pointsArrays = _calcPoints(residues, startIdx, endIdx, boundaries)\r\n    this._topInterp = _buildStructureInterpolator(\r\n      pointsArrays.topPoints,\r\n      tension\r\n    )\r\n    this._centerInterp = _buildStructureInterpolator(\r\n      pointsArrays.centerPoints,\r\n      tension\r\n    )\r\n\r\n    this._shift = 0.5 / (endIdx - startIdx + 2)\r\n    this._valueStep =\r\n      (1.0 - 2 * this._shift) /\r\n      (2 * (endIdx - startIdx + 1) * (segmentsCount - 1))\r\n    this._segmentsCount = segmentsCount\r\n  }\r\n\r\n  prepareMatrices(idx, firstRad, secondRad) {\r\n    const mtcCount = this._segmentsCount\r\n    const outMtc = new Array(mtcCount)\r\n    const currRad = new Vector2(0, 0)\r\n\r\n    const topInterp = this._topInterp\r\n    const cenInterp = this._centerInterp\r\n\r\n    let currentValue = this._shift + this._valueStep * (mtcCount - 1) * idx\r\n\r\n    for (let mtxIdx = 0; mtxIdx < mtcCount; ++mtxIdx) {\r\n      const lerpVal = Math.min(1.0, mtxIdx / (mtcCount - 1))\r\n      currRad.lerpVectors(firstRad, secondRad, lerpVal)\r\n\r\n      const currTop = topInterp(currentValue, null)\r\n      const currCenter = cenInterp(currentValue, null)\r\n      currentValue += this._valueStep\r\n      const nextCenter = cenInterp(currentValue, null)\r\n\r\n      outMtc[mtxIdx] = calcMatrix(\r\n        currCenter.clone(),\r\n        nextCenter.clone(),\r\n        currTop.clone().sub(currCenter),\r\n        currRad\r\n      )\r\n    }\r\n\r\n    return outMtc\r\n  }\r\n}\r\n\r\nexport default CartoonHelper\r\n",
		"import ResiduesGroup from './ResiduesGroup'\r\nimport CartoonHelper from './CartoonHelper'\r\nimport { Vector3 } from 'three'\r\n\r\nfunction _createShape(rad, parts) {\r\n  const pts = []\r\n\r\n  for (let i = 0; i < parts; ++i) {\r\n    // starts from pi/2 because it's important that points are lied on the angles of arrows (visual issues if not)\r\n    const a = Math.PI / 2.0 - (2 * Math.PI * i) / parts\r\n\r\n    pts.push(new Vector3(Math.cos(a) * rad, Math.sin(a) * rad, 0))\r\n  }\r\n  return pts\r\n}\r\n\r\nfunction _loopThrough(\r\n  subDiv,\r\n  residues,\r\n  segmentsHeight,\r\n  tension,\r\n  mode,\r\n  callback\r\n) {\r\n  for (let subDivI = 0, subDivN = subDiv.length; subDivI < subDivN; ++subDivI) {\r\n    const subs = subDiv[subDivI].arr\r\n    const { boundaries } = subDiv[subDivI]\r\n    for (let i = 0, n = subs.length; i < n; ++i) {\r\n      const idc = [subs[i].start, subs[i].end]\r\n      const matrixHelper = new CartoonHelper(\r\n        residues,\r\n        idc[0],\r\n        idc[1],\r\n        segmentsHeight,\r\n        tension,\r\n        boundaries\r\n      )\r\n      let prevLast = null\r\n      const startIdx = subs[i].start * 2\r\n      const endIdx = subs[i].end * 2 + 1\r\n      let prevSecondRad = mode.getResidueRadius(residues[0], 0)\r\n      for (let idx = startIdx; idx <= endIdx; ++idx) {\r\n        const resIdx = (idx / 2) | 0\r\n        const currRes = residues[resIdx]\r\n        const firstRad = mode.getResidueRadius(currRes, idx % 2)\r\n        const secondRad = mode.getResidueRadius(currRes, 1 + (idx % 2))\r\n\r\n        const mtc = matrixHelper.prepareMatrices(\r\n          idx - idc[0] * 2,\r\n          firstRad,\r\n          secondRad\r\n        )\r\n        mtc.unshift(prevLast === null ? mtc[0] : prevLast)\r\n\r\n        // Slope - radius is changed along this residue part\r\n        const hasSlope =\r\n          firstRad.x !== secondRad.x || firstRad.y !== secondRad.y\r\n        // Cut - end radius of previous part not equal to start radius of this part. First section of this part lies in the orthogonal plane\r\n        const hasCut =\r\n          firstRad.x !== prevSecondRad.x || firstRad.y !== prevSecondRad.y\r\n\r\n        callback(currRes, mtc, hasSlope, hasCut)\r\n\r\n        prevLast = mtc[segmentsHeight]\r\n        prevSecondRad = secondRad\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass ResiduesSubseqGroup extends ResiduesGroup {\r\n  _makeGeoArgs() {\r\n    const cmpMultiplier = this._mode.getHeightSegmentsRatio()\r\n    this._segmentsHeight = (this._polyComplexity * cmpMultiplier) | 0\r\n    return [\r\n      _createShape(1.0, this._polyComplexity),\r\n      this._segmentsHeight + 1,\r\n      this._selection.chunks.length * 2\r\n    ]\r\n  }\r\n\r\n  _build() {\r\n    const { residues, parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const tension = mode.getTension()\r\n    const geo = this._geo\r\n    let chunkIdx = 0\r\n    const chunkIdc = []\r\n    _loopThrough(\r\n      this._selection.subdivs,\r\n      residues,\r\n      this._segmentsHeight,\r\n      tension,\r\n      mode,\r\n      (currRes, mtc, hasSlope = false, hasCut = false) => {\r\n        const color = colorer.getResidueColor(currRes, parent)\r\n        chunkIdc[chunkIdx] = currRes._index\r\n        geo.setItem(chunkIdx, mtc, hasSlope, hasCut)\r\n        geo.setColor(chunkIdx++, color)\r\n      }\r\n    )\r\n    this._chunksIdc = chunkIdc\r\n    geo.finalize()\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const { parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const tension = mode.getTension()\r\n    const geo = this._geo\r\n    const frameRes = frameData.getResidues()\r\n    let chunkIdx = 0\r\n    const updateColor = frameData.needsColorUpdate(colorer)\r\n    _loopThrough(\r\n      this._selection.subdivs,\r\n      frameRes,\r\n      this._segmentsHeight,\r\n      tension,\r\n      mode,\r\n      (currRes, mtc) => {\r\n        geo.setItem(chunkIdx, mtc)\r\n        if (updateColor) {\r\n          geo.setColor(chunkIdx, colorer.getResidueColor(currRes, parent))\r\n        }\r\n        chunkIdx++\r\n      }\r\n    )\r\n    geo.finalize()\r\n  }\r\n}\r\n\r\nexport default ResiduesSubseqGroup\r\n",
		"import ChemGroup from './ChemGroup'\r\n\r\nclass ResiduesTraceGroup extends ChemGroup {\r\n  _makeGeoArgs() {\r\n    const subDiv = this._selection.subdivs\r\n    let chunksCount = 0\r\n    for (\r\n      let subDivI = 0, subDivN = subDiv.length;\r\n      subDivI < subDivN;\r\n      ++subDivI\r\n    ) {\r\n      const subs = subDiv[subDivI].arr\r\n      for (let i = 0, n = subs.length; i < n; ++i) {\r\n        chunksCount += subs[i].end - subs[i].start\r\n      }\r\n    }\r\n    return [chunksCount, this._polyComplexity]\r\n  }\r\n\r\n  _build() {\r\n    const { residues, parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    let chunkIdx = 0\r\n    const chunkIdc = []\r\n    const subDiv = this._selection.subdivs\r\n    const stickRad = mode.calcStickRadius()\r\n\r\n    for (\r\n      let subDivI = 0, subDivN = subDiv.length;\r\n      subDivI < subDivN;\r\n      ++subDivI\r\n    ) {\r\n      const subs = subDiv[subDivI].arr\r\n      for (let i = 0, n = subs.length; i < n; ++i) {\r\n        const startIdx = subs[i].start\r\n        const endIdx = subs[i].end\r\n        let prevRes = residues[startIdx]\r\n        for (let idx = startIdx + 1; idx <= endIdx; ++idx) {\r\n          const currRes = residues[idx]\r\n          chunkIdc[chunkIdx] = { first: prevRes._index, second: currRes._index }\r\n          geo.setItem(\r\n            chunkIdx,\r\n            prevRes._controlPoint,\r\n            currRes._controlPoint,\r\n            stickRad\r\n          )\r\n          geo.setColor(\r\n            chunkIdx,\r\n            colorer.getResidueColor(prevRes, parent),\r\n            colorer.getResidueColor(currRes, parent)\r\n          )\r\n          chunkIdx++\r\n          prevRes = currRes\r\n        }\r\n      }\r\n    }\r\n\r\n    this._chunksIdc = chunkIdc\r\n    geo.finalize()\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n\r\n    const residues = frameData.getResidues()\r\n    const { parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    let chunkIdx = 0\r\n    const subDiv = this._selection.subdivs\r\n    const stickRad = mode.calcStickRadius()\r\n    const updateColor = frameData.needsColorUpdate(colorer)\r\n\r\n    for (\r\n      let subDivI = 0, subDivN = subDiv.length;\r\n      subDivI < subDivN;\r\n      ++subDivI\r\n    ) {\r\n      const subs = subDiv[subDivI].arr\r\n      for (let i = 0, n = subs.length; i < n; ++i) {\r\n        const startIdx = subs[i].start\r\n        const endIdx = subs[i].end\r\n        let prevRes = residues[startIdx]\r\n        for (let idx = startIdx + 1; idx <= endIdx; ++idx) {\r\n          const currRes = residues[idx]\r\n          geo.setItem(\r\n            chunkIdx,\r\n            prevRes._controlPoint,\r\n            currRes._controlPoint,\r\n            stickRad\r\n          )\r\n          if (updateColor) {\r\n            geo.setColor(\r\n              chunkIdx,\r\n              colorer.getResidueColor(prevRes, parent),\r\n              colorer.getResidueColor(currRes, parent)\r\n            )\r\n          }\r\n          chunkIdx++\r\n          prevRes = currRes\r\n        }\r\n      }\r\n    }\r\n\r\n    geo.finalize()\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const inters = []\r\n    const { residues } = this._selection\r\n    this._mesh.raycast(raycaster, inters)\r\n    const chunksToIdx = this._chunksIdc\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue\r\n      }\r\n      const { chunkIdx } = inters[i]\r\n      const chunk = chunksToIdx[Math.floor(chunkIdx / 2)]\r\n      const resIdx = chunkIdx % 2 === 0 ? chunk.first : chunk.second\r\n      if (resIdx < residues.length) {\r\n        inters[i].residue = residues[resIdx]\r\n        intersects.push(inters[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  _calcChunksList(mask) {\r\n    const chunksList = []\r\n    const chunksToIdx = this._chunksIdc\r\n    const { residues } = this._selection\r\n    for (let i = 0, n = chunksToIdx.length; i < n; ++i) {\r\n      const chunk = chunksToIdx[i]\r\n      if (residues[chunk.first]._mask & mask) {\r\n        chunksList.push(i * 2)\r\n      }\r\n      if (residues[chunk.second]._mask & mask) {\r\n        chunksList.push(i * 2 + 1)\r\n      }\r\n    }\r\n    return chunksList\r\n  }\r\n}\r\n\r\nexport default ResiduesTraceGroup\r\n",
		"import ChemGroup from './ChemGroup'\r\nimport Bond from '../../../chem/Bond'\r\n\r\nfunction getCylinderCount(bondOrder) {\r\n  return bondOrder < 2 ? 1 : bondOrder\r\n}\r\n\r\nclass BondsGroup extends ChemGroup {\r\n  _makeGeoArgs() {\r\n    const drawMultiple = this._mode.drawMultiorderBonds()\r\n    const showAromatic = this._mode.showAromaticLoops()\r\n    const bondsIdc = this._selection.chunks\r\n    const { bonds } = this._selection\r\n    let bondsCount = 0\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      bondsCount += this.getBondOrder(\r\n        bonds[bondsIdc[i]],\r\n        drawMultiple,\r\n        showAromatic\r\n      )\r\n    }\r\n    return [bondsCount, this._polyComplexity]\r\n  }\r\n\r\n  getBondOrder(bond, drawMultiple, showAromatic) {\r\n    let bondOrder = 1\r\n    if (\r\n      drawMultiple &&\r\n      (!showAromatic || bond._type !== Bond.BondType.AROMATIC)\r\n    ) {\r\n      bondOrder = getCylinderCount(bond._order)\r\n    }\r\n    return bondOrder\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const { bonds } = this._selection\r\n    const inters = []\r\n    this._mesh.raycast(raycaster, inters)\r\n    const bondsIdc = this._chunksIdc\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue\r\n      }\r\n      const { chunkIdx } = inters[i]\r\n      const bondIdx = bondsIdc[Math.floor(chunkIdx / 2)]\r\n      if (bondIdx < bonds.length) {\r\n        const bond = bonds[bondIdx]\r\n        inters[i].atom = chunkIdx % 2 === 0 ? bond._left : bond._right\r\n        intersects.push(inters[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  _calcChunksList(mask, innerOnly) {\r\n    const chunksList = []\r\n    const { bonds } = this._selection\r\n    const chunksToIdx = this._chunksIdc\r\n    for (let i = 0, n = chunksToIdx.length; i < n; ++i) {\r\n      const bond = bonds[chunksToIdx[i]]\r\n      if (bond._left.mask & mask && (!innerOnly || bond._right.mask & mask)) {\r\n        chunksList.push(2 * i)\r\n      }\r\n      if (bond._right.mask & mask && (!innerOnly || bond._left.mask & mask)) {\r\n        chunksList.push(2 * i + 1)\r\n      }\r\n    }\r\n    return chunksList\r\n  }\r\n}\r\n\r\nexport default BondsGroup\r\n",
		"import BondsGroup from './BondsGroup'\r\nimport { Vector3 } from 'three'\r\n\r\nclass BondsCylinderGroup extends BondsGroup {\r\n  _build() {\r\n    const bondsIdc = this._selection.chunks\r\n    const { bonds, parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const drawMultiple = mode.drawMultiorderBonds()\r\n    const showAromatic = mode.showAromaticLoops()\r\n\r\n    const stickRad = mode.calcStickRadius()\r\n    const emptyOffset = mode.calcSpaceFraction()\r\n    let normDir\r\n    const leftPos = new Vector3()\r\n    const rightPos = new Vector3()\r\n    let currBondIdx = 0\r\n    const chunksToIdx = []\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      const bond = bonds[bondsIdc[i]]\r\n      const atom1 = bond._left\r\n      const atom2 = bond._right\r\n      const a1Pos = atom1.position\r\n      const a2Pos = atom2.position\r\n      normDir = bond.calcNormalDir()\r\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic)\r\n      const minRad = Math.min(\r\n        mode.calcAtomRadius(atom1),\r\n        mode.calcAtomRadius(atom2)\r\n      )\r\n      const dist = (2 * minRad) / order\r\n      const currStickRad = drawMultiple\r\n        ? Math.min(stickRad, dist * 0.5 * (1.0 - emptyOffset))\r\n        : stickRad\r\n\r\n      for (let j = 0; j < order; ++j) {\r\n        const scale =\r\n          dist *\r\n          (order % 2 === 0\r\n            ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\r\n            : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2)))\r\n        chunksToIdx[currBondIdx] = bond._index\r\n        leftPos.copy(a1Pos)\r\n        leftPos.addScaledVector(normDir, scale)\r\n        rightPos.copy(a2Pos)\r\n        rightPos.addScaledVector(normDir, scale)\r\n        geo.setItem(currBondIdx, leftPos, rightPos, currStickRad)\r\n        geo.setColor(\r\n          currBondIdx++,\r\n          colorer.getAtomColor(atom1, parent),\r\n          colorer.getAtomColor(atom2, parent)\r\n        )\r\n      }\r\n    }\r\n\r\n    geo.finalize()\r\n    this._chunksIdc = chunksToIdx\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    const bondsIdc = this._selection.chunks\r\n    const { bonds } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const drawMultiple = mode.drawMultiorderBonds()\r\n    const showAromatic = mode.showAromaticLoops()\r\n\r\n    const stickRad = mode.calcStickRadius()\r\n    const emptyOffset = mode.calcSpaceFraction()\r\n    let normDir\r\n    const leftPos = new Vector3()\r\n    const rightPos = new Vector3()\r\n    let currBondIdx = 0\r\n    const updateColor = frameData.needsColorUpdate(colorer)\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      const bond = bonds[bondsIdc[i]]\r\n      const atom1 = bond._left\r\n      const atom2 = bond._right\r\n      const a1Pos = frameData.getAtomPos(atom1.index).clone()\r\n      const a2Pos = frameData.getAtomPos(atom2.index)\r\n      normDir = bond.calcNormalDir()\r\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic)\r\n      const minRad = Math.min(\r\n        mode.calcAtomRadius(atom1),\r\n        mode.calcAtomRadius(atom2)\r\n      )\r\n      const dist = (2 * minRad) / order\r\n      const currStickRad = drawMultiple\r\n        ? Math.min(stickRad, dist * 0.5 * (1.0 - emptyOffset))\r\n        : stickRad\r\n\r\n      for (let j = 0; j < order; ++j) {\r\n        const scale =\r\n          dist *\r\n          (order % 2 === 0\r\n            ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\r\n            : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2)))\r\n        leftPos.copy(a1Pos)\r\n        leftPos.addScaledVector(normDir, scale)\r\n        rightPos.copy(a2Pos)\r\n        rightPos.addScaledVector(normDir, scale)\r\n        geo.setItem(currBondIdx, leftPos, rightPos, currStickRad)\r\n        if (updateColor) {\r\n          geo.setColor(\r\n            currBondIdx,\r\n            frameData.getAtomColor(colorer, atom1),\r\n            frameData.getAtomColor(colorer, atom2)\r\n          )\r\n        }\r\n        currBondIdx++\r\n      }\r\n    }\r\n    geo.finalize()\r\n  }\r\n}\r\n\r\nexport default BondsCylinderGroup\r\n",
		"import BondsGroup from './BondsGroup'\r\nimport { Vector3 } from 'three'\r\n\r\nconst STEP_SIZE = 0.15\r\n\r\nclass BondsLinesGroup extends BondsGroup {\r\n  _build() {\r\n    const bondsIdc = this._selection.chunks\r\n    const { bonds, parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const drawMultiple = mode.drawMultiorderBonds()\r\n    const showAromatic = mode.showAromaticLoops()\r\n\r\n    const bondDir = new Vector3()\r\n\r\n    const leftPos = new Vector3()\r\n    const rightPos = new Vector3()\r\n    let currBondIdx = 0\r\n    const chunksToIdx = []\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      const bond = bonds[bondsIdc[i]]\r\n      const atom1 = bond._left\r\n      const atom2 = bond._right\r\n      const a1Pos = atom1.position\r\n      const a2Pos = atom2.position\r\n      const a1Hangs = atom1.bonds.length === 1\r\n      const a2Hangs = atom2.bonds.length === 1\r\n      bondDir.subVectors(a2Pos, a1Pos)\r\n      const len = bondDir.length()\r\n      const normDir = bond.calcNormalDir()\r\n\r\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic)\r\n\r\n      for (let j = 0; j < order; ++j) {\r\n        leftPos.copy(a1Pos)\r\n        rightPos.copy(a2Pos)\r\n        let scale =\r\n          order % 2 === 0\r\n            ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\r\n            : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2))\r\n        chunksToIdx[currBondIdx] = bond._index\r\n        if (order === 2 && !a1Hangs && !a2Hangs) {\r\n          scale -= 0.5\r\n          scale *= -1\r\n        }\r\n\r\n        if (!a1Hangs && !a2Hangs && order > 1 && scale !== 0) {\r\n          leftPos.lerpVectors(a1Pos, a2Pos, STEP_SIZE / len)\r\n          rightPos.lerpVectors(a1Pos, a2Pos, 1.0 - STEP_SIZE / len)\r\n        }\r\n\r\n        scale *= STEP_SIZE\r\n\r\n        leftPos.addScaledVector(normDir, scale)\r\n        rightPos.addScaledVector(normDir, scale)\r\n        geo.setItem(currBondIdx, leftPos, rightPos)\r\n        geo.setColor(\r\n          currBondIdx++,\r\n          colorer.getAtomColor(atom1, parent),\r\n          colorer.getAtomColor(atom2, parent)\r\n        )\r\n      }\r\n    }\r\n    geo.finalize()\r\n    this._chunksIdc = chunksToIdx\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const bondsIdc = this._selection.chunks\r\n    const { bonds } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const drawMultiple = mode.drawMultiorderBonds()\r\n    const showAromatic = mode.showAromaticLoops()\r\n\r\n    const bondDir = new Vector3()\r\n\r\n    const leftPos = new Vector3()\r\n    const rightPos = new Vector3()\r\n    let currBondIdx = 0\r\n    const updateColor = frameData.needsColorUpdate(colorer)\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      const bond = bonds[bondsIdc[i]]\r\n      const atom1 = bond._left\r\n      const atom2 = bond._right\r\n      const a1Pos = frameData.getAtomPos(atom1.index).clone()\r\n      const a2Pos = frameData.getAtomPos(atom2.index)\r\n      const a1Hangs = atom1.bonds.length === 1\r\n      const a2Hangs = atom2.bonds.length === 1\r\n      bondDir.subVectors(a2Pos, a1Pos)\r\n      const len = bondDir.length()\r\n      const normDir = bond.calcNormalDir()\r\n\r\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic)\r\n\r\n      for (let j = 0; j < order; ++j) {\r\n        leftPos.copy(a1Pos)\r\n        rightPos.copy(a2Pos)\r\n        let scale =\r\n          order % 2 === 0\r\n            ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\r\n            : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2))\r\n        if (order === 2 && !a1Hangs && !a2Hangs) {\r\n          scale -= 0.5\r\n          scale *= -1\r\n        }\r\n\r\n        if (!a1Hangs && !a2Hangs && order > 1 && scale !== 0) {\r\n          leftPos.lerpVectors(a1Pos, a2Pos, STEP_SIZE / len)\r\n          rightPos.lerpVectors(a1Pos, a2Pos, 1.0 - STEP_SIZE / len)\r\n        }\r\n\r\n        scale *= STEP_SIZE\r\n\r\n        leftPos.addScaledVector(normDir, scale)\r\n        rightPos.addScaledVector(normDir, scale)\r\n        geo.setItem(currBondIdx, leftPos, rightPos)\r\n        if (updateColor) {\r\n          geo.setColor(\r\n            currBondIdx,\r\n            frameData.getAtomColor(colorer, atom1),\r\n            frameData.getAtomColor(colorer, atom2)\r\n          )\r\n        }\r\n        currBondIdx++\r\n      }\r\n    }\r\n    geo.finalize()\r\n  }\r\n}\r\n\r\nexport default BondsLinesGroup\r\n",
		"import AtomsSphereGroup from './AtomsSphereGroup'\r\nimport AtomsSurfaceGroup from './AtomsSurfaceGroup'\r\nimport AtomsSASSESGroupStub from './AtomsSASSESGroupStub'\r\nimport AtomsTextGroup from './AtomsTextGroup'\r\nimport AromaticTorusGroup from './AromaticTorusGroup'\r\nimport AromaticLinesGroup from './AromaticLinesGroup'\r\nimport NucleicCylindersGroup from './NucleicCylindersGroup'\r\nimport NucleicSpheresGroup from './NucleicSpheresGroup'\r\nimport ResiduesSubseqGroup from './ResiduesSubseqGroup'\r\nimport ResiduesTraceGroup from './ResiduesTraceGroup'\r\nimport BondsCylinderGroup from './BondsCylinderGroup'\r\nimport BondsLinesGroup from './BondsLinesGroup'\r\n\r\nexport default {\r\n  AtomsSphereGroup,\r\n  AtomsSurfaceGroup,\r\n  AtomsSASSESGroupStub,\r\n  AtomsTextGroup,\r\n  AromaticTorusGroup,\r\n  AromaticLinesGroup,\r\n  NucleicCylindersGroup,\r\n  NucleicSpheresGroup,\r\n  ResiduesSubseqGroup,\r\n  ResiduesTraceGroup,\r\n  BondsCylinderGroup,\r\n  BondsLinesGroup\r\n}\r\n",
		"import RCGroup from '../../RCGroup'\r\n\r\nclass AtomsProcessor extends RCGroup {\r\n  constructor(\r\n    AtomsGroup,\r\n    geoParams,\r\n    complex,\r\n    colorer,\r\n    mode,\r\n    polyComplexity,\r\n    mask,\r\n    material\r\n  ) {\r\n    super()\r\n    const self = this\r\n    this._complex = complex\r\n    this._mode = mode\r\n    const atoms = complex.getAtoms()\r\n    const transforms = complex.getTransforms()\r\n\r\n    complex.forEachComponent((component) => {\r\n      const atomsIdc = []\r\n      let atomCount = 0\r\n      component.forEachAtom((atom) => {\r\n        if (!self._checkAtom(atom, mask)) {\r\n          return\r\n        }\r\n        atomsIdc[atomCount++] = atom.index\r\n      })\r\n      if (atomCount === 0) {\r\n        return\r\n      }\r\n      const atomsGroup = new AtomsGroup(\r\n        geoParams,\r\n        {\r\n          atoms,\r\n          chunks: atomsIdc,\r\n          parent: complex\r\n        },\r\n        colorer,\r\n        mode,\r\n        transforms,\r\n        polyComplexity,\r\n        material\r\n      )\r\n      atomsGroup._component = component\r\n      self.add(atomsGroup)\r\n    })\r\n  }\r\n\r\n  _checkAtom(atom, mask) {\r\n    return atom.mask & mask\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = []\r\n    const { children } = this\r\n    let meshIdx = 0\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly)\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j]\r\n          subsetEl._component = children[i]._component\r\n          totalSubset[meshIdx++] = subsetEl\r\n        }\r\n      }\r\n    }\r\n    return totalSubset\r\n  }\r\n}\r\n\r\nexport default AtomsProcessor\r\n",
		"import AtomsProcessor from './AtomsProcessor'\r\n\r\nclass OrphanAtomsProcessor extends AtomsProcessor {\r\n  _checkAtom(atom, mask) {\r\n    if (!(atom.mask & mask)) {\r\n      return false\r\n    }\r\n\r\n    const { bonds } = atom\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      if (bonds[i]._left.mask & mask && bonds[i]._right.mask & mask) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n}\r\n\r\nexport default OrphanAtomsProcessor\r\n",
		"import RCGroup from '../../RCGroup'\r\n\r\nclass ResiduesProcessor extends RCGroup {\r\n  constructor(\r\n    ResidueGroup,\r\n    geoParams,\r\n    complex,\r\n    colorer,\r\n    mode,\r\n    polyComplexity,\r\n    mask,\r\n    material\r\n  ) {\r\n    super()\r\n    const self = this\r\n    this._complex = complex\r\n    const residues = complex.getResidues()\r\n    const transforms = complex.getTransforms()\r\n\r\n    complex.forEachComponent((component) => {\r\n      let chunksCount = 0\r\n      const resIdc = []\r\n      component.forEachResidue((residue) => {\r\n        if (self._checkResidue(residue, mask)) {\r\n          resIdc[chunksCount++] = residue._index\r\n        }\r\n      })\r\n\r\n      if (chunksCount === 0) {\r\n        return\r\n      }\r\n      const residuesGroup = new ResidueGroup(\r\n        geoParams,\r\n        {\r\n          residues,\r\n          chunks: resIdc,\r\n          parent: complex\r\n        },\r\n        colorer,\r\n        mode,\r\n        transforms,\r\n        polyComplexity,\r\n        material\r\n      )\r\n      residuesGroup._component = component\r\n      self.add(residuesGroup)\r\n    })\r\n  }\r\n\r\n  checkResidue(residue, mask) {\r\n    return residue._mask & mask\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = []\r\n    const { children } = this\r\n    let meshIdx = 0\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly)\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j]\r\n          subsetEl._component = children[i]._component\r\n          totalSubset[meshIdx++] = subsetEl\r\n        }\r\n      }\r\n    }\r\n    return totalSubset\r\n  }\r\n}\r\n\r\nexport default ResiduesProcessor\r\n",
		"import ResidueProcessor from './ResiduesProcessor'\r\n\r\nclass NucleicProcessor extends ResidueProcessor {\r\n  _checkResidue(residue, mask) {\r\n    return mask & residue._mask && residue._cylinders !== null\r\n  }\r\n}\r\nexport default NucleicProcessor\r\n",
		"import RCGroup from '../../RCGroup'\r\n\r\nclass SubseqsProcessor extends RCGroup {\r\n  constructor(\r\n    ResidueGroup,\r\n    geoParams,\r\n    complex,\r\n    colorer,\r\n    mode,\r\n    polyComplexity,\r\n    mask,\r\n    material\r\n  ) {\r\n    super()\r\n    const self = this\r\n    this._complex = complex\r\n    const residues = complex.getResidues()\r\n    const transforms = complex.getTransforms()\r\n\r\n    complex.forEachComponent((component) => {\r\n      const subDivs = component.getMaskedSubdivSequences(mask)\r\n\r\n      let chunksCount = 0\r\n      const resIdc = []\r\n      for (\r\n        let subDivI = 0, subDivN = subDivs.length;\r\n        subDivI < subDivN;\r\n        ++subDivI\r\n      ) {\r\n        const subs = subDivs[subDivI].arr\r\n        for (let i = 0, n = subs.length; i < n; ++i) {\r\n          for (let j = subs[i].start, jEnd = subs[i].end; j <= jEnd; ++j) {\r\n            resIdc[chunksCount++] = residues[j]._index\r\n          }\r\n        }\r\n      }\r\n\r\n      if (chunksCount === 0) {\r\n        return\r\n      }\r\n      const residuesGroup = new ResidueGroup(\r\n        geoParams,\r\n        {\r\n          residues,\r\n          chunks: resIdc,\r\n          subdivs: subDivs,\r\n          parent: complex\r\n        },\r\n        colorer,\r\n        mode,\r\n        transforms,\r\n        polyComplexity,\r\n        material\r\n      )\r\n      residuesGroup._component = component\r\n      self.add(residuesGroup)\r\n    })\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = []\r\n    const { children } = this\r\n    let meshIdx = 0\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly)\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j]\r\n          subsetEl._component = children[i]._component\r\n          totalSubset[meshIdx++] = subsetEl\r\n        }\r\n      }\r\n    }\r\n    return totalSubset\r\n  }\r\n}\r\n\r\nexport default SubseqsProcessor\r\n",
		"import RCGroup from '../../RCGroup'\r\n\r\nclass BondsProcessor extends RCGroup {\r\n  constructor(\r\n    BondsGroup,\r\n    geoParams,\r\n    complex,\r\n    colorer,\r\n    mode,\r\n    polyComplexity,\r\n    mask,\r\n    material\r\n  ) {\r\n    super()\r\n    const self = this\r\n    this._complex = complex\r\n    const bonds = complex.getBonds()\r\n    const transforms = complex.getTransforms()\r\n\r\n    complex.forEachComponent((component) => {\r\n      const bondsIdc = []\r\n      let bondsCount = 0\r\n      component.forEachBond((bond) => {\r\n        const atom1 = bond._left\r\n        const atom2 = bond._right\r\n        if (!(atom1.mask & mask) || !(atom2.mask & mask)) {\r\n          return\r\n        }\r\n        bondsIdc[bondsCount++] = bond._index\r\n      })\r\n      if (bondsCount === 0) {\r\n        return\r\n      }\r\n      const bondsGroup = new BondsGroup(\r\n        geoParams,\r\n        {\r\n          bonds,\r\n          chunks: bondsIdc,\r\n          parent: complex\r\n        },\r\n        colorer,\r\n        mode,\r\n        transforms,\r\n        polyComplexity,\r\n        material\r\n      )\r\n      bondsGroup._component = component\r\n      self.add(bondsGroup)\r\n    })\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = []\r\n    const { children } = this\r\n    let meshIdx = 0\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly)\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j]\r\n          subsetEl._component = children[i]._component\r\n          totalSubset[meshIdx++] = subsetEl\r\n        }\r\n      }\r\n    }\r\n    return totalSubset\r\n  }\r\n}\r\n\r\nexport default BondsProcessor\r\n",
		"import RCGroup from '../../RCGroup'\r\n\r\nclass AromaticProcessor extends RCGroup {\r\n  constructor(\r\n    AromaticGroup,\r\n    geoParams,\r\n    complex,\r\n    colorer,\r\n    mode,\r\n    polyComplexity,\r\n    mask,\r\n    material\r\n  ) {\r\n    super()\r\n    const self = this\r\n    this._complex = complex\r\n    const atoms = complex.getAtoms()\r\n    const transforms = complex.getTransforms()\r\n    if (!mode.showAromaticLoops()) {\r\n      return\r\n    }\r\n\r\n    complex.forEachComponent((component) => {\r\n      const atomsIdc = []\r\n      let chunksCount = 0\r\n      const cycles = []\r\n      let cycleIdx = 0\r\n      component.forEachCycle((cycle) => {\r\n        const cycAtoms = cycle.atoms\r\n        let perCycle = 0\r\n        for (let i = 0, n = cycAtoms.length; i < n; ++i) {\r\n          if ((cycAtoms[i].mask & mask) !== 0) {\r\n            ++perCycle\r\n            atomsIdc[chunksCount++] = cycAtoms[i].index\r\n          }\r\n        }\r\n        if (perCycle > 0) {\r\n          cycles[cycleIdx++] = cycle\r\n        }\r\n      })\r\n\r\n      const atomsGroup = new AromaticGroup(\r\n        geoParams,\r\n        {\r\n          cycles,\r\n          atoms,\r\n          chunks: atomsIdc,\r\n          parent: complex\r\n        },\r\n        colorer,\r\n        mode,\r\n        transforms,\r\n        polyComplexity,\r\n        material\r\n      )\r\n      atomsGroup._component = component\r\n      self.add(atomsGroup)\r\n    })\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = []\r\n    const { children } = this\r\n    let meshIdx = 0\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly)\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j]\r\n          subsetEl._component = children[i]._component\r\n          totalSubset[meshIdx++] = subsetEl\r\n        }\r\n      }\r\n    }\r\n    return totalSubset\r\n  }\r\n}\r\n\r\nexport default AromaticProcessor\r\n",
		"import AtomsProcessor from './AtomsProcessor'\r\nimport OrphanAtomsProcessor from './OrphanAtomsProcessor'\r\nimport ResiduesProcessor from './ResiduesProcessor'\r\nimport NucleicProcessor from './NucleicProcessor'\r\nimport SubseqsProcessor from './SubseqsProcessor'\r\nimport BondsProcessor from './BondsProcessor'\r\nimport AromaticProcessor from './AromaticProcessor'\r\n\r\nexport default {\r\n  Atoms: AtomsProcessor,\r\n  OrphanAtoms: OrphanAtomsProcessor,\r\n  Residues: ResiduesProcessor,\r\n  Nucleic: NucleicProcessor,\r\n  Subseqs: SubseqsProcessor,\r\n  Bonds: BondsProcessor,\r\n  Aromatic: AromaticProcessor\r\n}\r\n",
		"import MeshCreator from '../../meshes/MeshCreator'\r\nimport groups from './groups'\r\nimport processors from '../processors/processors'\r\n\r\nfunction _bakeGroup(triplet, Processor, Group) {\r\n  return function (complex, colorer, mode, polyComplexity, mask, material) {\r\n    return new Processor(\r\n      Group,\r\n      triplet,\r\n      complex,\r\n      colorer,\r\n      mode,\r\n      polyComplexity,\r\n      mask,\r\n      material\r\n    )\r\n  }\r\n}\r\n\r\nclass GroupsFactory {\r\n  static AtomsSpheres(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createSpheres(caps, settings)\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSphereGroup)\r\n  }\r\n\r\n  static OrphanedAtomsCrosses(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createCrosses(caps, settings, renderParams)\r\n\r\n    return _bakeGroup(\r\n      gfxTriplet,\r\n      processors.OrphanAtoms,\r\n      groups.AtomsSphereGroup\r\n    )\r\n  }\r\n\r\n  static BondsCylinders(caps, settings) {\r\n    const gfxTriplet = MeshCreator.create2CCylinders(caps, settings)\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Bonds, groups.BondsCylinderGroup)\r\n  }\r\n\r\n  static BondsLines(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.create2CLines(caps, settings, renderParams)\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Bonds, groups.BondsLinesGroup)\r\n  }\r\n\r\n  static CartoonChains(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createExtrudedChains(caps, settings)\r\n\r\n    return _bakeGroup(\r\n      gfxTriplet,\r\n      processors.Subseqs,\r\n      groups.ResiduesSubseqGroup\r\n    )\r\n  }\r\n\r\n  static TraceChains(caps, settings) {\r\n    const gfxTriplet = MeshCreator.create2CClosedCylinders(caps, settings)\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Subseqs, groups.ResiduesTraceGroup)\r\n  }\r\n\r\n  static NucleicSpheres(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createSpheres(caps, settings)\r\n\r\n    return _bakeGroup(\r\n      gfxTriplet,\r\n      processors.Nucleic,\r\n      groups.NucleicSpheresGroup\r\n    )\r\n  }\r\n\r\n  static NucleicCylinders(caps, settings) {\r\n    const gfxTriplet = MeshCreator.create2CCylinders(caps, settings)\r\n\r\n    return _bakeGroup(\r\n      gfxTriplet,\r\n      processors.Nucleic,\r\n      groups.NucleicCylindersGroup\r\n    )\r\n  }\r\n\r\n  static ALoopsTorus(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createExtrudedChains(caps, settings)\r\n\r\n    return _bakeGroup(\r\n      gfxTriplet,\r\n      processors.Aromatic,\r\n      groups.AromaticTorusGroup\r\n    )\r\n  }\r\n\r\n  static ALoopsLines(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createChunkedLines(\r\n      caps,\r\n      settings,\r\n      renderParams\r\n    )\r\n\r\n    return _bakeGroup(\r\n      gfxTriplet,\r\n      processors.Aromatic,\r\n      groups.AromaticLinesGroup\r\n    )\r\n  }\r\n\r\n  static QuickSurfGeo(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createQuickSurface(\r\n      caps,\r\n      settings,\r\n      renderParams\r\n    )\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSurfaceGroup)\r\n  }\r\n\r\n  static ContactSurfaceGeo(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createContactSurface(\r\n      caps,\r\n      settings,\r\n      renderParams\r\n    )\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSurfaceGroup)\r\n  }\r\n\r\n  static SASSESSurfaceGeo(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createSASSES(caps, settings, renderParams)\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSASSESGroupStub)\r\n  }\r\n\r\n  static TextLabelsGeo(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createLabels(caps, settings)\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsTextGroup)\r\n  }\r\n}\r\n\r\nexport default GroupsFactory\r\n",
		"import { merge, isArray, isEmpty } from 'lodash'\r\nimport makeContextDependent from '../../utils/makeContextDependent'\r\nimport utils from '../../utils'\r\nimport gfxutils from '../gfxutils'\r\nimport factory from './groups/GroupsFactory'\r\n\r\n/**\r\n * Create new mode.\r\n *\r\n * @param {object=} opts - Options to override defaults with.\r\n *\r\n *   These options are copied locally and not kept by reference, so the created instance will not reflect further\r\n *   changes to the `opts` object. However, changes in defaults **will** affect the mode after its creation.\r\n *\r\n * @exports Mode\r\n * @this Mode\r\n * @abstract\r\n * @constructor\r\n * @classdesc Basic class for all available modes used for building and displaying molecule geometry.\r\n */\r\nclass Mode {\r\n  constructor(opts) {\r\n    if (this.constructor === Mode) {\r\n      throw new Error('Can not instantiate abstract class!')\r\n    }\r\n    /**\r\n     * Mode options inherited (prototyped) from defaults.\r\n     * @type {object}\r\n     */\r\n    this.opts = merge(\r\n      utils.deriveDeep(this.settings.now.modes[this.id], true),\r\n      opts\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Get mode identification, probably with options.\r\n   * @returns {string|Array} Mode identifier string ({@link Mode#id}) or two-element array containing both mode\r\n   *   identifier and options ({@link Mode#opts}).\r\n   * Options are returned if they were changed during or after the mode creation.\r\n   */\r\n  identify() {\r\n    const diff = utils.objectsDiff(this.opts, this.settings.now.modes[this.id])\r\n    if (!isEmpty(diff)) {\r\n      return [this.id, diff]\r\n    }\r\n    return this.id\r\n  }\r\n\r\n  buildGeometry(complex, colorer, mask, material) {\r\n    const polyComplexity = this.opts.polyComplexity\r\n      ? this.opts.polyComplexity[this.settings.now.resolution]\r\n      : 0\r\n    const groupList = this.depGroups\r\n    const groupCount = groupList.length\r\n    const group = new gfxutils.RCGroup()\r\n    const self = this\r\n    for (let i = 0; i < groupCount; ++i) {\r\n      let currGroup = groupList[i]\r\n      let renderParams = {}\r\n      if (isArray(currGroup)) {\r\n        renderParams = currGroup[1].call(this)\r\n        ;[currGroup] = currGroup\r\n      }\r\n      const Group = factory[currGroup](null, this.settings, renderParams)\r\n      const newGroup = new Group(\r\n        complex,\r\n        colorer,\r\n        self,\r\n        polyComplexity,\r\n        mask,\r\n        material\r\n      )\r\n      if (newGroup.children.length > 0) {\r\n        group.add(newGroup)\r\n      }\r\n    }\r\n    return group\r\n  }\r\n}\r\n\r\nmakeContextDependent(Mode.prototype)\r\n\r\n/**\r\n * Mode identifier.\r\n * @type {string}\r\n */\r\nMode.prototype.id = '__'\r\n\r\n/**\r\n * Mode geo groups.\r\n * @type {Array}\r\n */\r\nMode.prototype.depGroups = []\r\n\r\nexport default Mode\r\n",
		"import Mode from './Mode'\r\n\r\nfunction getRenderParams() {\r\n  return {\r\n    lineWidth: this.opts.lineWidth\r\n  }\r\n}\r\n\r\nclass LinesMode extends Mode {\r\n  static id = 'LN'\r\n\r\n  constructor(opts) {\r\n    super(opts)\r\n    this.depGroups = this.depGroups.slice(0) // clone depGroups to prevent prototype edits\r\n    const groups = this.depGroups\r\n    for (let i = 0, n = groups.length; i < n; ++i) {\r\n      groups[i] = [groups[i], getRenderParams]\r\n    }\r\n  }\r\n\r\n  drawMultiorderBonds() {\r\n    return this.opts.multibond\r\n  }\r\n\r\n  calcAtomRadius() {\r\n    return this.opts.atom\r\n  }\r\n\r\n  getAromaticOffset() {\r\n    return this.opts.offsarom\r\n  }\r\n\r\n  getAromaticArcChunks() {\r\n    return this.opts.chunkarom\r\n  }\r\n\r\n  showAromaticLoops() {\r\n    return this.opts.showarom\r\n  }\r\n}\r\n\r\nLinesMode.prototype.id = 'LN'\r\nLinesMode.prototype.name = 'Lines'\r\nLinesMode.prototype.shortName = 'Lines'\r\nLinesMode.prototype.depGroups = [\r\n  'ALoopsLines',\r\n  'BondsLines',\r\n  'OrphanedAtomsCrosses'\r\n]\r\n\r\nexport default LinesMode\r\n",
		"/* eslint-disable no-magic-numbers */\r\nimport Mode from './Mode'\r\n\r\nclass LicoriceMode extends Mode {\r\n  static id = 'LC'\r\n\r\n  calcAtomRadius(_atom) {\r\n    return this.opts.bond\r\n  }\r\n\r\n  calcStickRadius() {\r\n    return this.opts.bond\r\n  }\r\n\r\n  calcSpaceFraction() {\r\n    return this.opts.space\r\n  }\r\n\r\n  getAromRadius() {\r\n    return this.opts.aromrad\r\n  }\r\n\r\n  showAromaticLoops() {\r\n    return this.opts.showarom\r\n  }\r\n\r\n  drawMultiorderBonds() {\r\n    return this.opts.multibond\r\n  }\r\n}\r\n\r\nLicoriceMode.prototype.id = 'LC'\r\nLicoriceMode.prototype.name = 'Licorice'\r\nLicoriceMode.prototype.shortName = 'Licorice'\r\nLicoriceMode.prototype.depGroups = [\r\n  'AtomsSpheres',\r\n  'BondsCylinders',\r\n  'ALoopsTorus'\r\n]\r\n\r\nexport default LicoriceMode\r\n",
		"/* eslint-disable no-magic-numbers */\r\nimport Mode from './Mode'\r\n\r\nclass BallsAndSticksMode extends Mode {\r\n  static id = 'BS'\r\n\r\n  calcAtomRadius(atom) {\r\n    return atom.element.radius * this.opts.atom\r\n  }\r\n\r\n  calcStickRadius() {\r\n    return this.opts.bond\r\n  }\r\n\r\n  getAromRadius() {\r\n    return this.opts.aromrad\r\n  }\r\n\r\n  showAromaticLoops() {\r\n    return this.opts.showarom\r\n  }\r\n\r\n  calcSpaceFraction() {\r\n    return this.opts.space\r\n  }\r\n\r\n  drawMultiorderBonds() {\r\n    return this.opts.multibond\r\n  }\r\n}\r\n\r\nBallsAndSticksMode.prototype.id = 'BS'\r\nBallsAndSticksMode.prototype.name = 'Balls and Sticks'\r\nBallsAndSticksMode.prototype.shortName = 'Balls'\r\nBallsAndSticksMode.prototype.depGroups = [\r\n  'AtomsSpheres',\r\n  'BondsCylinders',\r\n  'ALoopsTorus'\r\n]\r\n\r\nexport default BallsAndSticksMode\r\n",
		"import Mode from './Mode'\r\n\r\nclass VanDerWaalsMode extends Mode {\r\n  static id = 'VW'\r\n\r\n  calcAtomRadius(atom) {\r\n    return atom.element.radius\r\n  }\r\n}\r\n\r\nVanDerWaalsMode.prototype.id = 'VW'\r\nVanDerWaalsMode.prototype.name = 'Van der Waals'\r\nVanDerWaalsMode.prototype.shortName = 'VDW'\r\nVanDerWaalsMode.prototype.depGroups = ['AtomsSpheres']\r\n\r\nexport default VanDerWaalsMode\r\n",
		"import Mode from './Mode'\r\n\r\nclass TraceMode extends Mode {\r\n  static id = 'TR'\r\n\r\n  calcStickRadius() {\r\n    return this.opts.radius\r\n  }\r\n}\r\n\r\nTraceMode.prototype.id = 'TR'\r\nTraceMode.prototype.name = 'Trace'\r\nTraceMode.prototype.shortName = 'Trace'\r\nTraceMode.prototype.depGroups = ['TraceChains']\r\n\r\nexport default TraceMode\r\n",
		"import Mode from './Mode'\r\nimport { Vector2 } from 'three'\r\n\r\nclass TubeMode extends Mode {\r\n  static id = 'TU'\r\n\r\n  getResidueRadius(_residue) {\r\n    return this.TUBE_RADIUS\r\n  }\r\n\r\n  getHeightSegmentsRatio() {\r\n    return this.opts.heightSegmentsRatio\r\n  }\r\n\r\n  getTension() {\r\n    return this.opts.tension\r\n  }\r\n\r\n  buildGeometry(complex, colorer, mask, material) {\r\n    const rad = this.opts.radius\r\n    this.TUBE_RADIUS = new Vector2(rad, rad)\r\n\r\n    return Mode.prototype.buildGeometry.call(\r\n      this,\r\n      complex,\r\n      colorer,\r\n      mask,\r\n      material\r\n    )\r\n  }\r\n}\r\n\r\nTubeMode.prototype.id = 'TU'\r\nTubeMode.prototype.name = 'Tube'\r\nTubeMode.prototype.shortName = 'Tube'\r\nTubeMode.prototype.depGroups = ['CartoonChains']\r\n\r\nexport default TubeMode\r\n",
		"import Mode from './Mode'\r\nimport { Vector2 } from 'three'\r\n\r\nclass CartoonMode extends Mode {\r\n  static id = 'CA'\r\n\r\n  constructor(opts) {\r\n    super(opts)\r\n    // cache for secondary structure options\r\n    this.secCache = {}\r\n  }\r\n\r\n  getResidueStartRadius(residue) {\r\n    const second = residue.getSecondary()\r\n    if (!second || !second.generic) {\r\n      return this.TUBE_RADIUS\r\n    }\r\n    const secOpts = this.secCache[second.generic]\r\n    if (!secOpts) {\r\n      return this.TUBE_RADIUS\r\n    }\r\n    if (second.term === residue) {\r\n      return secOpts.start\r\n    }\r\n    return secOpts.center\r\n  }\r\n\r\n  getResidueEndRadius(residue) {\r\n    const second = residue.getSecondary()\r\n    if (second === null || !second.generic) {\r\n      return this.TUBE_RADIUS\r\n    }\r\n    const secOpts = this.secCache[second.generic]\r\n    if (!secOpts) {\r\n      return this.TUBE_RADIUS\r\n    }\r\n    if (second.term === residue) {\r\n      return this.ARROW_END\r\n    }\r\n    return secOpts.center\r\n  }\r\n\r\n  getResidueRadius(residue, val) {\r\n    const startRad = this.getResidueStartRadius(residue)\r\n    if (val === 0) {\r\n      return startRad\r\n    }\r\n\r\n    const endRad = this.getResidueEndRadius(residue)\r\n    if (val === 2) {\r\n      return endRad\r\n    }\r\n\r\n    return startRad.clone().lerp(endRad, val / 2.0)\r\n  }\r\n\r\n  calcStickRadius(_res) {\r\n    return this.opts.radius\r\n  }\r\n\r\n  getHeightSegmentsRatio() {\r\n    return this.opts.heightSegmentsRatio\r\n  }\r\n\r\n  getTension() {\r\n    return this.opts.tension\r\n  }\r\n\r\n  buildGeometry(complex, colorer, mask, material) {\r\n    const tubeRad = this.opts.radius\r\n    const secHeight = this.opts.depth\r\n\r\n    this.TUBE_RADIUS = new Vector2(tubeRad, tubeRad)\r\n    this.ARROW_END = new Vector2(secHeight, tubeRad)\r\n    const secCache = {}\r\n    const secData = this.opts.ss\r\n    /* eslint-disable guard-for-in */\r\n    for (const prop in secData) {\r\n      secCache[prop] = {\r\n        center: new Vector2(secHeight, secData[prop].width),\r\n        start: new Vector2(secHeight, secData[prop].arrow)\r\n      }\r\n    }\r\n    this.secCache = secCache\r\n    /* eslint-enable guard-for-in */\r\n\r\n    return Mode.prototype.buildGeometry.call(\r\n      this,\r\n      complex,\r\n      colorer,\r\n      mask,\r\n      material\r\n    )\r\n  }\r\n}\r\n\r\nCartoonMode.prototype.id = 'CA'\r\nCartoonMode.prototype.name = 'Cartoon'\r\nCartoonMode.prototype.shortName = 'Cartoon'\r\nCartoonMode.prototype.depGroups = [\r\n  'CartoonChains',\r\n  'NucleicSpheres',\r\n  'NucleicCylinders'\r\n]\r\n\r\nexport default CartoonMode\r\n",
		"import chem from '../../chem'\r\nimport Mode from './Mode'\r\n\r\nconst { selectors } = chem\r\n\r\nfunction getRenderParams() {\r\n  return {\r\n    wireframe: this.opts.wireframe,\r\n    zClip: this.opts.zClip\r\n  }\r\n}\r\n\r\nclass SurfaceMode extends Mode {\r\n  constructor(opts) {\r\n    super(opts)\r\n    this.depGroups = this.depGroups.slice(0) // clone depGroups to prevent prototype edits\r\n    const surfaces = this.surfaceNames\r\n    const groups = this.depGroups\r\n    for (let i = 0, n = surfaces.length; i < n; ++i) {\r\n      groups[groups.length] = [surfaces[i], getRenderParams]\r\n    }\r\n  }\r\n\r\n  calcAtomRadius(atom) {\r\n    return atom.element.radius\r\n  }\r\n\r\n  getVisibilitySelector() {\r\n    let visibilitySelector = null\r\n    if (this.opts.subset !== '') {\r\n      const res = selectors.parse(this.opts.subset)\r\n      if (!res.error) {\r\n        visibilitySelector = res.selector\r\n      }\r\n    }\r\n    return visibilitySelector\r\n  }\r\n}\r\n\r\nSurfaceMode.prototype.isSurface = true\r\nSurfaceMode.prototype.surfaceNames = []\r\n\r\nexport default SurfaceMode\r\n",
		"import SurfaceMode from './SurfaceMode'\r\n\r\nclass QuickSurfaceMode extends SurfaceMode {\r\n  static id = 'QS'\r\n\r\n  getSurfaceOpts() {\r\n    return {\r\n      useBeads: false,\r\n      isoValue: this.opts.isoValue,\r\n      gaussLim: this.opts.gaussLim[this.settings.now.resolution],\r\n      radScale: this.opts.scale,\r\n      gridSpacing: this.opts.gridSpacing[this.settings.now.resolution],\r\n      zClip: this.opts.zClip,\r\n      visibilitySelector: this.getVisibilitySelector()\r\n    }\r\n  }\r\n}\r\n\r\nQuickSurfaceMode.prototype.id = 'QS'\r\nQuickSurfaceMode.prototype.name = 'Quick Surface'\r\nQuickSurfaceMode.prototype.shortName = 'Quick Surf'\r\nQuickSurfaceMode.prototype.surfaceNames = ['QuickSurfGeo']\r\n\r\nexport default QuickSurfaceMode\r\n",
		"import SurfaceMode from './SurfaceMode'\r\n\r\nclass IsoSurfaceMode extends SurfaceMode {\r\n  constructor(excludeProbe, opts) {\r\n    super(opts)\r\n    this._excludeProbe = excludeProbe\r\n  }\r\n\r\n  calcAtomRadius(atom) {\r\n    return atom.element.radius\r\n  }\r\n\r\n  getSurfaceOpts() {\r\n    return {\r\n      gridSpacing: this.opts.polyComplexity[this.settings.now.resolution],\r\n      radScale: this._radScale,\r\n      zClip: this.opts.zClip,\r\n      visibilitySelector: this.getVisibilitySelector(),\r\n      probeRadius: this.opts.probeRadius,\r\n      excludeProbe: this._excludeProbe\r\n    }\r\n  }\r\n}\r\n\r\nIsoSurfaceMode.prototype.id = 'SU'\r\nIsoSurfaceMode.prototype.name = 'Surface'\r\nIsoSurfaceMode.prototype.shortName = 'Surface'\r\nIsoSurfaceMode.prototype.surfaceNames = ['SASSESSurfaceGeo']\r\n\r\nIsoSurfaceMode.prototype._radScale = 1\r\nIsoSurfaceMode.prototype._excludeProbe = false\r\n\r\nexport default IsoSurfaceMode\r\n",
		"import IsoSurfaceMode from './IsoSurfaceMode'\r\n\r\nclass IsoSurfaceSASMode extends IsoSurfaceMode {\r\n  static id = 'SA'\r\n\r\n  constructor(opts) {\r\n    super(false, opts)\r\n  }\r\n}\r\n\r\nIsoSurfaceSASMode.prototype.id = 'SA'\r\nIsoSurfaceSASMode.prototype.name = 'Solvent Accessible Surface'\r\nIsoSurfaceSASMode.prototype.shortName = 'SAS'\r\n\r\nexport default IsoSurfaceSASMode\r\n",
		"import IsoSurfaceMode from './IsoSurfaceMode'\r\n\r\nclass IsoSurfaceSESMode extends IsoSurfaceMode {\r\n  static id = 'SE'\r\n\r\n  constructor(opts) {\r\n    super(true, opts)\r\n  }\r\n}\r\n\r\nIsoSurfaceSESMode.prototype.id = 'SE'\r\nIsoSurfaceSESMode.prototype.name = 'Solvent Excluded Surface'\r\nIsoSurfaceSESMode.prototype.shortName = 'SES'\r\n\r\nexport default IsoSurfaceSESMode\r\n",
		"import SurfaceMode from './SurfaceMode'\r\n\r\nclass ContactSurfaceMode extends SurfaceMode {\r\n  static id = 'CS'\r\n\r\n  getSurfaceOpts() {\r\n    return {\r\n      probeRadius: this.opts.probeRadius,\r\n      radScale: this.opts.polyComplexity[this.settings.now.resolution],\r\n      scaleFactor: this.opts.polyComplexity[this.settings.now.resolution],\r\n      gridSpacing: 1.0 / this.opts.polyComplexity[this.settings.now.resolution],\r\n      isoValue: this.opts.isoValue,\r\n      probePositions: this.opts.probePositions,\r\n      zClip: this.opts.zClip,\r\n      visibilitySelector: this.getVisibilitySelector()\r\n    }\r\n  }\r\n}\r\n\r\nContactSurfaceMode.prototype.id = 'CS'\r\nContactSurfaceMode.prototype.name = 'Contact Surface'\r\nContactSurfaceMode.prototype.shortName = 'Contact Surf'\r\nContactSurfaceMode.prototype.isSurface = true\r\nContactSurfaceMode.prototype.surfaceNames = ['ContactSurfaceGeo']\r\n\r\nexport default ContactSurfaceMode\r\n",
		"import { merge } from 'lodash'\r\nimport Mode from './Mode'\r\n\r\nclass TextMode extends Mode {\r\n  static id = 'TX'\r\n\r\n  getTemplateOptions() {\r\n    return this.opts.template\r\n  }\r\n\r\n  getLabelOpts() {\r\n    return merge(this.opts, {\r\n      colors: true,\r\n      adjustColor: true,\r\n      transparent: true\r\n    })\r\n  }\r\n}\r\n\r\nTextMode.prototype.id = 'TX'\r\nTextMode.prototype.name = 'Text mode'\r\nTextMode.prototype.shortName = 'Text'\r\nTextMode.prototype.depGroups = ['TextLabelsGeo']\r\n\r\nexport default TextMode\r\n",
		"import EntityList from '../utils/EntityList'\r\n\r\nimport LinesMode from './modes/LinesMode'\r\nimport LicoriceMode from './modes/LicoriceMode'\r\nimport BallsAndSticksMode from './modes/BallsAndSticksMode'\r\nimport VanDerWaalsMode from './modes/VanDerWaalsMode'\r\nimport TraceMode from './modes/TraceMode'\r\nimport TubeMode from './modes/TubeMode'\r\nimport CartoonMode from './modes/CartoonMode'\r\nimport QuickSurfaceMode from './modes/QuickSurfaceMode'\r\nimport IsoSurfaceSASMode from './modes/IsoSurfaceSASMode'\r\nimport IsoSurfaceSESMode from './modes/IsoSurfaceSESMode'\r\nimport ContactSurfaceMode from './modes/ContactSurfaceMode'\r\nimport TextMode from './modes/TextMode'\r\n\r\nconst modes = new EntityList([\r\n  LinesMode,\r\n  LicoriceMode,\r\n  BallsAndSticksMode,\r\n  VanDerWaalsMode,\r\n  TraceMode,\r\n  TubeMode,\r\n  CartoonMode,\r\n  QuickSurfaceMode,\r\n  IsoSurfaceSASMode,\r\n  IsoSurfaceSESMode,\r\n  ContactSurfaceMode,\r\n  TextMode\r\n])\r\n\r\nexport default modes\r\n",
		"import { assign } from 'lodash'\r\n\r\nfunction clamp(x, a, b) {\r\n  return x <= b ? (x < 0 ? 0 : x) : b\r\n}\r\n\r\nfunction lerpColor(c1, c2, alpha) {\r\n  const beta = 1 - alpha\r\n  const r1 = (c1 >> 16) & 0xff\r\n  const g1 = (c1 >> 8) & 0xff\r\n  const b1 = c1 & 0xff\r\n  const r2 = (c2 >> 16) & 0xff\r\n  const g2 = (c2 >> 8) & 0xff\r\n  const b2 = c2 & 0xff\r\n  const r = beta * r1 + alpha * r2\r\n  const g = beta * g1 + alpha * g2\r\n  const b = beta * b1 + alpha * b2\r\n  return (r << 16) | (g << 8) | b\r\n}\r\n\r\nclass Palette {\r\n  constructor(name, id) {\r\n    this.name = name || 'Custom'\r\n    this.id = id || 'CP'\r\n  }\r\n\r\n  getElementColor(name, asIs = false) {\r\n    const color = this.elementColors[name]\r\n    return color === undefined && !asIs ? this.defaultElementColor : color\r\n  }\r\n\r\n  getResidueColor(name, asIs = false) {\r\n    const color = this.residueColors[name]\r\n    return color === undefined && !asIs ? this.defaultResidueColor : color\r\n  }\r\n\r\n  getChainColor(name) {\r\n    let chain = name.charCodeAt(0)\r\n    chain =\r\n      ((chain < 0 ? 0 : chain >= 256 ? chain - 256 : chain) & 0x1f) %\r\n      this.chainColors.length\r\n    return this.chainColors[chain]\r\n  }\r\n\r\n  getSecondaryColor(type, asIs = false) {\r\n    const color = this.secondaryColors[type]\r\n    return color === undefined && !asIs ? this.defaultSecondaryColor : color\r\n  }\r\n\r\n  getSequentialColor(index) {\r\n    const { colors } = this\r\n    const len = colors.length\r\n    return index < 0 ? colors[(index % len) + len] : colors[index % len]\r\n  }\r\n\r\n  getGradientColor(value, gradientName) {\r\n    const gradient = this.gradients[gradientName]\r\n    if (!gradient) {\r\n      return this.defaultNamedColor\r\n    }\r\n    const count = gradient.length\r\n    const index = value * (count - 1)\r\n    let left = Math.floor(index)\r\n    const right = clamp(left + 1, 0, count - 1)\r\n    left = clamp(left, 0, count - 1)\r\n    return lerpColor(gradient[left], gradient[right], index - left)\r\n  }\r\n\r\n  getNamedColor(name, asIs = false) {\r\n    const color = this.namedColors[name]\r\n    return color === undefined && !asIs ? this.defaultNamedColor : color\r\n  }\r\n}\r\n\r\nassign(Palette.prototype, {\r\n  colors: [0xffffff, 0xff0000, 0x00ff00, 0x0000ff, 0x808080],\r\n\r\n  minRangeColor: 0x000000,\r\n  midRangeColor: 0x7f7f7f,\r\n  maxRangeColor: 0xffffff,\r\n\r\n  defaultElementColor: 0xffffff,\r\n  elementColors: {},\r\n\r\n  defaultResidueColor: 0xffffff,\r\n  residueColors: {},\r\n\r\n  chainColors: [0xffffff],\r\n\r\n  defaultSecondaryColor: 0xffffff,\r\n  secondaryColors: {},\r\n\r\n  defaultGradientColor: 0x000000,\r\n\r\n  defaultNamedColor: 0xffffff,\r\n  namedColorsArray: [\r\n    /* eslint-disable no-multi-spaces */\r\n    ['indianred', 0xcd5c5c],\r\n    ['lightcoral', 0xf08080],\r\n    ['salmon', 0xfa8072],\r\n    ['darksalmon', 0xe9967a],\r\n    ['lightsalmon', 0xffa07a],\r\n    ['crimson', 0xdc143c],\r\n    ['red', 0xff0000],\r\n    ['firebrick', 0xb22222],\r\n    ['darkred', 0x8b0000],\r\n    ['pink', 0xffc0cb],\r\n    ['lightpink', 0xffb6c1],\r\n    ['hotpink', 0xff69b4],\r\n    ['deeppink', 0xff1493],\r\n    ['mediumvioletred', 0xc71585],\r\n    ['palevioletred', 0xdb7093],\r\n    ['coral', 0xff7f50],\r\n    ['tomato', 0xff6347],\r\n    ['orangered', 0xff4500],\r\n    ['darkorange', 0xff8c00],\r\n    ['orange', 0xffa500],\r\n    ['gold', 0xffd700],\r\n    ['yellow', 0xffff00],\r\n    ['lightyellow', 0xffffe0],\r\n    ['lemonchiffon', 0xfffacd],\r\n    ['lightgoldenrodyellow', 0xfafad2],\r\n    ['papayawhip', 0xffefd5],\r\n    ['moccasin', 0xffe4b5],\r\n    ['peachpuff', 0xffdab9],\r\n    ['palegoldenrod', 0xeee8aa],\r\n    ['khaki', 0xf0e68c],\r\n    ['darkkhaki', 0xbdb76b],\r\n    ['lavender', 0xe6e6fa],\r\n    ['thistle', 0xd8bfd8],\r\n    ['plum', 0xdda0dd],\r\n    ['violet', 0xee82ee],\r\n    ['orchid', 0xda70d6],\r\n    ['fuchsia', 0xff00ff],\r\n    ['magenta', 0xff00ff],\r\n    ['mediumorchid', 0xba55d3],\r\n    ['mediumpurple', 0x9370db],\r\n    ['rebeccapurple', 0x663399],\r\n    ['blueviolet', 0x8a2be2],\r\n    ['darkviolet', 0x9400d3],\r\n    ['darkorchid', 0x9932cc],\r\n    ['darkmagenta', 0x8b008b],\r\n    ['purple', 0x800080],\r\n    ['indigo', 0x4b0082],\r\n    ['slateblue', 0x6a5acd],\r\n    ['mediumslateblue', 0x7b68ee],\r\n    ['darkslateblue', 0x483d8b],\r\n    ['greenyellow', 0xadff2f],\r\n    ['chartreuse', 0x7fff00],\r\n    ['lawngreen', 0x7cfc00],\r\n    ['lime', 0x00ff00],\r\n    ['limegreen', 0x32cd32],\r\n    ['palegreen', 0x98fb98],\r\n    ['lightgreen', 0x90ee90],\r\n    ['mediumspringgreen', 0x00fa9a],\r\n    ['springgreen', 0x00ff7f],\r\n    ['mediumseagreen', 0x3cb371],\r\n    ['seagreen', 0x2e8b57],\r\n    ['forestgreen', 0x228b22],\r\n    ['green', 0x008000],\r\n    ['darkgreen', 0x006400],\r\n    ['yellowgreen', 0x9acd32],\r\n    ['olivedrab', 0x6b8e23],\r\n    ['olive', 0x808000],\r\n    ['darkolivegreen', 0x556b2f],\r\n    ['mediumaquamarine', 0x66cdaa],\r\n    ['darkseagreen', 0x8fbc8f],\r\n    ['lightseagreen', 0x20b2aa],\r\n    ['darkcyan', 0x008b8b],\r\n    ['teal', 0x008080],\r\n    ['aqua', 0x00ffff],\r\n    ['cyan', 0x00ffff],\r\n    ['lightcyan', 0xe0ffff],\r\n    ['paleturquoise', 0xafeeee],\r\n    ['aquamarine', 0x7fffd4],\r\n    ['turquoise', 0x40e0d0],\r\n    ['mediumturquoise', 0x48d1cc],\r\n    ['darkturquoise', 0x00ced1],\r\n    ['cadetblue', 0x5f9ea0],\r\n    ['steelblue', 0x4682b4],\r\n    ['lightsteelblue', 0xb0c4de],\r\n    ['powderblue', 0xb0e0e6],\r\n    ['lightblue', 0xadd8e6],\r\n    ['skyblue', 0x87ceeb],\r\n    ['lightskyblue', 0x87cefa],\r\n    ['deepskyblue', 0x00bfff],\r\n    ['dodgerblue', 0x1e90ff],\r\n    ['cornflowerblue', 0x6495ed],\r\n    ['royalblue', 0x4169e1],\r\n    ['blue', 0x0000ff],\r\n    ['mediumblue', 0x0000cd],\r\n    ['darkblue', 0x00008b],\r\n    ['navy', 0x000080],\r\n    ['midnightblue', 0x191970],\r\n    ['cornsilk', 0xfff8dc],\r\n    ['blanchedalmond', 0xffebcd],\r\n    ['bisque', 0xffe4c4],\r\n    ['navajowhite', 0xffdead],\r\n    ['wheat', 0xf5deb3],\r\n    ['burlywood', 0xdeb887],\r\n    ['tan', 0xd2b48c],\r\n    ['rosybrown', 0xbc8f8f],\r\n    ['sandybrown', 0xf4a460],\r\n    ['goldenrod', 0xdaa520],\r\n    ['darkgoldenrod', 0xb8860b],\r\n    ['peru', 0xcd853f],\r\n    ['chocolate', 0xd2691e],\r\n    ['saddlebrown', 0x8b4513],\r\n    ['sienna', 0xa0522d],\r\n    ['brown', 0xa52a2a],\r\n    ['maroon', 0x800000],\r\n    ['white', 0xffffff],\r\n    ['snow', 0xfffafa],\r\n    ['honeydew', 0xf0fff0],\r\n    ['mintcream', 0xf5fffa],\r\n    ['azure', 0xf0ffff],\r\n    ['aliceblue', 0xf0f8ff],\r\n    ['ghostwhite', 0xf8f8ff],\r\n    ['whitesmoke', 0xf5f5f5],\r\n    ['seashell', 0xfff5ee],\r\n    ['beige', 0xf5f5dc],\r\n    ['oldlace', 0xfdf5e6],\r\n    ['floralwhite', 0xfffaf0],\r\n    ['ivory', 0xfffff0],\r\n    ['antiquewhite', 0xfaebd7],\r\n    ['linen', 0xfaf0e6],\r\n    ['lavenderblush', 0xfff0f5],\r\n    ['mistyrose', 0xffe4e1],\r\n    ['gainsboro', 0xdcdcdc],\r\n    ['lightgray', 0xd3d3d3],\r\n    ['silver', 0xc0c0c0],\r\n    ['darkgray', 0xa9a9a9],\r\n    ['gray', 0x808080],\r\n    ['dimgray', 0x696969],\r\n    ['lightslategray', 0x778899],\r\n    ['slategray', 0x708090],\r\n    ['darkslategray', 0x2f4f4f],\r\n    ['black', 0x000000]\r\n    /* eslint-enable no-multi-spaces */\r\n  ],\r\n\r\n  namedColors: {},\r\n  /* eslint-enable no-magic-numbers */\r\n\r\n  gradients: {\r\n    rainbow: [\r\n      0x0000ff, // blue\r\n      0x00ffff, // cyan\r\n      0x00ff00, // green\r\n      0xffff00, // yellow\r\n      0xff0000 // red\r\n    ],\r\n    temp: [\r\n      0x0000ff, // blue\r\n      0x007fff, // light-blue\r\n      0xffffff, // white\r\n      0xff7f00, // orange\r\n      0xff0000 // red\r\n    ],\r\n    hot: [\r\n      0xffffff, // white\r\n      0xff7f00, // orange\r\n      0xff0000 // red\r\n    ],\r\n    cold: [\r\n      0xffffff, // white\r\n      0x007fff, // light-blue\r\n      0x0000ff // blue\r\n    ],\r\n    'blue-red': [\r\n      0x0000ff, // blue\r\n      0xffffff, // white\r\n      0xff0000 // red\r\n    ],\r\n    reds: [\r\n      0xffffff, // white\r\n      0xff0000 // red\r\n    ],\r\n    blues: [\r\n      0xffffff, // white\r\n      0x0000ff // blue\r\n    ]\r\n  }\r\n})\r\n\r\nconst { namedColorsArray, namedColors } = Palette.prototype\r\n\r\nfor (let i = 0, { length } = namedColorsArray; i < length; ++i) {\r\n  const [name, value] = namedColorsArray[i]\r\n  namedColors[name] = value\r\n}\r\n\r\nexport default Palette\r\n",
		"import Palette from './Palette'\r\n\r\nconst palette = new Palette('CPK', 'CP')\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\npalette.elementColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  H: 0xffffff,\r\n  C: 0x202020,\r\n  N: 0x2060ff,\r\n  O: 0xee2010,\r\n  F: 0x00ff00,\r\n  P: 0x8020ff,\r\n  S: 0xffff00,\r\n  CL: 0x00bb00,\r\n  FE: 0xd0d0d0,\r\n  CO: 0xd0d0d0,\r\n  NI: 0xd0d0d0,\r\n  CU: 0xd0d0d0,\r\n  BR: 0x008800,\r\n  I: 0x005500\r\n  /* eslint-enable no-magic-numbers */\r\n}\r\n\r\nexport default palette\r\n",
		"import Palette from './Palette'\r\nimport StructuralElement from '../../chem/StructuralElement'\r\n\r\nconst palette = new Palette('Jmol', 'JM')\r\n\r\npalette.colors = [\r\n  /* eslint-disable no-magic-numbers */\r\n  0x0000ff, // blue\r\n  0x0055ff, //\r\n  0x00abff, //\r\n  0x00ffff, // cyan\r\n  0x00ffab, //\r\n  0x00ff55, //\r\n  0x00ff00, // green\r\n  0x55ff00, //\r\n  0xabff00, //\r\n  0xffff00, // yellow\r\n  0xffab00, //\r\n  0xff5500, //\r\n  0xff0000, // red\r\n  0xff0055, //\r\n  0xff00ab, //\r\n  0xff00ff, // magenta\r\n  0xab00ff, //\r\n  0x5500ff //\r\n  /* eslint-enable no-magic-numbers */\r\n]\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\npalette.elementColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  H: 0xffffff,\r\n  D: 0xffffc0,\r\n  T: 0xffffa0,\r\n  HE: 0xd9ffff,\r\n  LI: 0xcc80ff,\r\n  BE: 0xc2ff00,\r\n  B: 0xffb5b5,\r\n  C: 0x909090,\r\n  N: 0x3050f8,\r\n  O: 0xff0d0d,\r\n  F: 0x90e050,\r\n  NE: 0xb3e3f5,\r\n  NA: 0xab5cf2,\r\n  MG: 0x8aff00,\r\n  AL: 0xbfa6a6,\r\n  SI: 0xf0c8a0,\r\n  P: 0xff8000,\r\n  S: 0xffff30,\r\n  CL: 0x1ff01f,\r\n  AR: 0x80d1e3,\r\n  K: 0x8f40d4,\r\n  CA: 0x3dff00,\r\n  SC: 0xe6e6e6,\r\n  TI: 0xbfc2c7,\r\n  V: 0xa6a6ab,\r\n  CR: 0x8a99c7,\r\n  MN: 0x9c7ac7,\r\n  FE: 0xe06633,\r\n  CO: 0xf090a0,\r\n  NI: 0x50d050,\r\n  CU: 0xc88033,\r\n  ZN: 0x7d80b0,\r\n  GA: 0xc28f8f,\r\n  GE: 0x668f8f,\r\n  AS: 0xbd80e3,\r\n  SE: 0xffa100,\r\n  BR: 0xa62929,\r\n  KR: 0x5cb8d1,\r\n  RB: 0x702eb0,\r\n  SR: 0x00ff00,\r\n  Y: 0x94ffff,\r\n  ZR: 0x94e0e0,\r\n  NB: 0x73c2c9,\r\n  MO: 0x54b5b5,\r\n  TC: 0x3b9e9e,\r\n  RU: 0x248f8f,\r\n  RH: 0x0a7d8c,\r\n  PD: 0x006985,\r\n  AG: 0xc0c0c0,\r\n  CD: 0xffd98f,\r\n  IN: 0xa67573,\r\n  SN: 0x668080,\r\n  SB: 0x9e63b5,\r\n  TE: 0xd47a00,\r\n  I: 0x940094,\r\n  XE: 0x429eb0,\r\n  CS: 0x57178f,\r\n  BA: 0x00c900,\r\n  LA: 0x70d4ff,\r\n  CE: 0xffffc7,\r\n  PR: 0xd9ffc7,\r\n  ND: 0xc7ffc7,\r\n  PM: 0xa3ffc7,\r\n  SM: 0x8fffc7,\r\n  EU: 0x61ffc7,\r\n  GD: 0x45ffc7,\r\n  TB: 0x30ffc7,\r\n  DY: 0x1fffc7,\r\n  HO: 0x00ff9c,\r\n  ER: 0x00e675,\r\n  TM: 0x00d452,\r\n  YB: 0x00bf38,\r\n  LU: 0x00ab24,\r\n  HF: 0x4dc2ff,\r\n  TA: 0x4da6ff,\r\n  W: 0x2194d6,\r\n  RE: 0x267dab,\r\n  OS: 0x266696,\r\n  IR: 0x175487,\r\n  PT: 0xd0d0e0,\r\n  AU: 0xffd123,\r\n  HG: 0xb8b8d0,\r\n  TL: 0xa6544d,\r\n  PB: 0x575961,\r\n  BI: 0x9e4fb5,\r\n  PO: 0xab5c00,\r\n  AT: 0x754f45,\r\n  RN: 0x428296,\r\n  FR: 0x420066,\r\n  RA: 0x007d00,\r\n  AC: 0x70abfa,\r\n  TH: 0x00baff,\r\n  PA: 0x00a1ff,\r\n  U: 0x008fff,\r\n  NP: 0x0080ff,\r\n  PU: 0x006bff,\r\n  AM: 0x545cf2,\r\n  CM: 0x785ce3,\r\n  BK: 0x8a4fe3,\r\n  CF: 0xa136d4,\r\n  ES: 0xb31fd4,\r\n  FM: 0xb31fba,\r\n  MD: 0xb30da6,\r\n  NO: 0xbd0d87,\r\n  LR: 0xc70066,\r\n  RF: 0xcc0059,\r\n  DB: 0xd1004f,\r\n  SG: 0xd90045,\r\n  BH: 0xe00038,\r\n  HS: 0xe6002e,\r\n  MT: 0xeb0026\r\n  /* eslint-enable no-magic-numbers */\r\n}\r\n\r\npalette.defaultResidueColor = 0xbea06e\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from residue_types.csv by residue_types.py.\r\npalette.residueColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  ALA: 0xc8c8c8,\r\n  ARG: 0x145aff,\r\n  ASN: 0x00dcdc,\r\n  ASP: 0xe60a0a,\r\n  CYS: 0xe6e600,\r\n  GLN: 0x00dcdc,\r\n  GLU: 0xe60a0a,\r\n  GLY: 0xebebeb,\r\n  HIS: 0x8282d2,\r\n  ILE: 0x0f820f,\r\n  LEU: 0x0f820f,\r\n  LYS: 0x145aff,\r\n  MET: 0xe6e600,\r\n  PHE: 0x3232aa,\r\n  PRO: 0xdc9682,\r\n  SER: 0xfa9600,\r\n  THR: 0xfa9600,\r\n  TRP: 0xb45ab4,\r\n  TYR: 0x3232aa,\r\n  VAL: 0x0f820f,\r\n  A: 0xa0a0ff,\r\n  C: 0xff8c4b,\r\n  G: 0xff7070,\r\n  I: 0x80ffff,\r\n  T: 0xa0ffa0,\r\n  U: 0xff8080,\r\n  DA: 0xa0a0ff,\r\n  DC: 0xff8c4b,\r\n  DG: 0xff7070,\r\n  DI: 0x80ffff,\r\n  DT: 0xa0ffa0,\r\n  DU: 0xff8080,\r\n  '+A': 0xa0a0ff,\r\n  '+C': 0xff8c4b,\r\n  '+G': 0xff7070,\r\n  '+I': 0x80ffff,\r\n  '+T': 0xa0ffa0,\r\n  '+U': 0xff8080\r\n  /* eslint-enable no-magic-numbers */\r\n}\r\n\r\npalette.chainColors = [\r\n  // ' '->0 'A'->1, 'B'->2\r\n  0xffffffff, // ' ' & '0' white\r\n  //\r\n  0xffc0d0ff, // skyblue\r\n  0xffb0ffb0, // pastel green\r\n  0xffffc0c8, // pink\r\n  0xffffff80, // pastel yellow\r\n  0xffffc0ff, // pastel magenta\r\n  0xffb0f0f0, // pastel cyan\r\n  0xffffd070, // pastel gold\r\n  0xfff08080, // lightcoral\r\n\r\n  0xfff5deb3, // wheat\r\n  0xff00bfff, // deepskyblue\r\n  0xffcd5c5c, // indianred\r\n  0xff66cdaa, // mediumaquamarine\r\n  0xff9acd32, // yellowgreen\r\n  0xffee82ee, // violet\r\n  0xff00ced1, // darkturquoise\r\n  0xff00ff7f, // springgreen\r\n  0xff3cb371, // mediumseagreen\r\n\r\n  0xff00008b, // darkblue\r\n  0xffbdb76b, // darkkhaki\r\n  0xff006400, // darkgreen\r\n  0xff800000, // maroon\r\n  0xff808000, // olive\r\n  0xff800080, // purple\r\n  0xff008080, // teal\r\n  0xffb8860b, // darkgoldenrod\r\n  0xffb22222 // firebrick\r\n]\r\n\r\nconst StructuralElementType = StructuralElement.Type\r\n\r\npalette.secondaryColors = {\r\n  [StructuralElementType.HELIX_ALPHA]: 0xff0080,\r\n  [StructuralElementType.HELIX_PI]: 0x600080,\r\n  [StructuralElementType.HELIX_310]: 0xa00080,\r\n  [StructuralElementType.STRAND]: 0xffc800,\r\n  [StructuralElementType.TURN]: 0x6080ff,\r\n  dna: 0xae00fe,\r\n  rna: 0xfd0162\r\n}\r\n\r\nexport default palette\r\n",
		"import Palette from './Palette'\r\nimport StructuralElement from '../../chem/StructuralElement'\r\n\r\nconst palette = new Palette('VMD', 'VM')\r\n\r\npalette.colors = [\r\n  /* eslint-disable no-magic-numbers */\r\n  0x0000ff, // blue\r\n  0xff0000, // red\r\n  0x606060, // gray\r\n  0xff8000, // orange\r\n  0xffff00, // yellow\r\n  0x808033, // tan\r\n  0x999999, // silver\r\n  0x00ff00, // green\r\n  0xffffff, // white\r\n  0xff9999, // pink\r\n  0x40c0c0, // cyan\r\n  0xa600a6, // purple\r\n  0x80e666, // lime\r\n  0xe666b3, // mauve\r\n  0x804d00, // ochre\r\n  0x8080c0 // ice blue\r\n  /* eslint-enable no-magic-numbers */\r\n]\r\n\r\npalette.defaultElementColor = 0x804d00\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\npalette.elementColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  H: 0xffffff,\r\n  C: 0x40bfbf,\r\n  N: 0x0000ff,\r\n  O: 0xff0000,\r\n  P: 0x808033,\r\n  S: 0xffff00\r\n  /* eslint-enable no-magic-numbers */\r\n}\r\n\r\npalette.defaultResidueColor = 0x40c0c0\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from residue_types.csv by residue_types.py.\r\npalette.residueColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  ALA: 0x0000ff,\r\n  ARG: 0xffffff,\r\n  ASN: 0x808033,\r\n  ASP: 0xff0000,\r\n  CYS: 0xffff00,\r\n  GLN: 0xff8000,\r\n  GLU: 0xff9999,\r\n  GLY: 0xffffff,\r\n  HIS: 0x40c0c0,\r\n  ILE: 0x00ff00,\r\n  LEU: 0xff9999,\r\n  LYS: 0x40c0c0,\r\n  MET: 0xffff00,\r\n  PHE: 0xa600a6,\r\n  PRO: 0x804c00,\r\n  SER: 0xffff00,\r\n  THR: 0xe666b3,\r\n  TRP: 0x999999,\r\n  TYR: 0x00ff00,\r\n  VAL: 0x808033,\r\n  A: 0x0000ff,\r\n  C: 0xff8000,\r\n  G: 0xffff00,\r\n  T: 0xa600a6,\r\n  U: 0x00ff00,\r\n  DA: 0x0000ff,\r\n  DC: 0xff8000,\r\n  DG: 0xffff00,\r\n  DT: 0xa600a6,\r\n  DU: 0x00ff00,\r\n  '+A': 0x0000ff,\r\n  '+C': 0xff8000,\r\n  '+G': 0xffff00,\r\n  '+T': 0xa600a6,\r\n  '+U': 0x00ff00,\r\n  WAT: 0x40c0c0,\r\n  H2O: 0x40c0c0,\r\n  HOH: 0x40c0c0\r\n  /* eslint-enable no-magic-numbers */\r\n}\r\n\r\npalette.chainColors = [0xffffff].concat(palette.colors)\r\n\r\nconst StructuralElementType = StructuralElement.Type\r\n\r\npalette.secondaryColors = {\r\n  [StructuralElementType.HELIX_ALPHA]: 0xa600a6,\r\n  [StructuralElementType.HELIX_310]: 0x0000ff,\r\n  [StructuralElementType.HELIX_PI]: 0xff0000,\r\n  [StructuralElementType.STRAND]: 0xffff00,\r\n  [StructuralElementType.BRIDGE]: 0x808033,\r\n  [StructuralElementType.TURN]: 0x40c0c0\r\n}\r\n\r\nexport default palette\r\n",
		"import EntityList from '../utils/EntityList'\r\n\r\nimport cpkPalette from './palettes/cpkPalette'\r\nimport jmolPalette from './palettes/jmolPalette'\r\nimport vmdPalette from './palettes/vmdPalette'\r\n\r\nconst palettes = new EntityList([cpkPalette, jmolPalette, vmdPalette])\r\n\r\nexport default palettes\r\n",
		"import settings from '../../settings'\r\nimport utils from '../../utils'\r\nimport palettes from '../palettes'\r\nimport { merge, isEmpty } from 'lodash'\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with.\r\n *\r\n *   These options are copied locally and not kept by reference, so the created instance will not reflect further\r\n *   changes to the `opts` object. However, changes in defaults **will** affect the colorer after its creation.\r\n *\r\n * @exports Colorer\r\n * @this Colorer\r\n * @abstract\r\n * @constructor\r\n * @classdesc Basic class for all available coloring algorithms used for building and displaying molecule geometry.\r\n */\r\nclass Colorer {\r\n  constructor(opts) {\r\n    if (this.constructor === Colorer) {\r\n      throw new Error('Can not instantiate abstract class!')\r\n    }\r\n    /**\r\n     * Colorer options inherited (prototyped) from defaults.\r\n     * @type {object}\r\n     */\r\n    this.opts = merge(\r\n      utils.deriveDeep(settings.now.colorers[this.id], true),\r\n      opts\r\n    )\r\n    /**\r\n     * Palette in use.\r\n     * @type {Palette}\r\n     */\r\n    this.palette = palettes.first\r\n  }\r\n\r\n  /**\r\n   * Get Colorer identification, probably with options.\r\n   * @returns {string|Array} Colorer identifier string ({@link Colorer#id}) or two-element array containing both colorer\r\n   *   identifier and options ({@link Colorer#opts}).\r\n   * Options are returned if they were changed during or after colorer creation.\r\n   */\r\n  identify() {\r\n    const diff = utils.objectsDiff(this.opts, settings.now.colorers[this.id])\r\n    if (!isEmpty(diff)) {\r\n      return [this.id, diff]\r\n    }\r\n    return this.id\r\n  }\r\n}\r\n\r\n/**\r\n * Colorer identifier.\r\n * @type {string}\r\n */\r\n\r\nColorer.prototype.id = '__'\r\n\r\nexport default Colorer\r\n",
		"import Colorer from './Colorer'\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @see Element\r\n *\r\n * @exports ElementColorer\r\n * @augments Colorer\r\n * @constructor\r\n * @classdesc Coloring algorithm based on chemical element.\r\n */\r\nclass ElementColorer extends Colorer {\r\n  static id = 'EL'\r\n\r\n  getAtomColor(atom, _complex) {\r\n    const type = atom.element.name\r\n    if (type === 'C' && this.opts.carbon >= 0) {\r\n      return this.opts.carbon\r\n    }\r\n    return this.palette.getElementColor(type)\r\n  }\r\n\r\n  getResidueColor(_residue, _complex) {\r\n    return this.palette.defaultResidueColor\r\n  }\r\n}\r\n\r\nElementColorer.prototype.id = 'EL'\r\nElementColorer.prototype.name = 'Element'\r\nElementColorer.prototype.shortName = 'Element'\r\n\r\nexport default ElementColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\n/**\r\n * Coloring algorithm based on residue type.\r\n *\r\n * @see ResidueType\r\n *\r\n * @exports ResidueTypeColorer\r\n * @constructor\r\n */\r\nclass ResidueTypeColorer extends Colorer {\r\n  static id = 'RT'\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    return this.palette.getResidueColor(residue._type._name)\r\n  }\r\n}\r\n\r\nResidueTypeColorer.prototype.id = 'RT'\r\nResidueTypeColorer.prototype.name = 'Residue Type'\r\nResidueTypeColorer.prototype.shortName = 'Residue'\r\n\r\nexport default ResidueTypeColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\nclass SequenceColorer extends Colorer {\r\n  static id = 'SQ'\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const chain = residue._chain\r\n    if (\r\n      chain.minSequence === Number.POSITIVE_INFINITY &&\r\n      chain.maxSequence === Number.NEGATIVE_INFINITY\r\n    ) {\r\n      return this.palette.defaultNamedColor\r\n    }\r\n    const min = chain.minSequence\r\n    const max = chain.maxSequence > min ? chain.maxSequence : min + 1\r\n    return this.palette.getGradientColor(\r\n      (residue._sequence - min) / (max - min),\r\n      this.opts.gradient\r\n    )\r\n  }\r\n}\r\n\r\nSequenceColorer.prototype.id = 'SQ'\r\nSequenceColorer.prototype.name = 'Sequence'\r\nSequenceColorer.prototype.shortName = 'Sequence'\r\n\r\nexport default SequenceColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\nclass ChainColorer extends Colorer {\r\n  static id = 'CH'\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    return this.palette.getChainColor(residue.getChain()._name)\r\n  }\r\n}\r\n\r\nChainColorer.prototype.id = 'CH'\r\nChainColorer.prototype.name = 'Chain'\r\nChainColorer.prototype.shortName = 'Chain'\r\n\r\nexport default ChainColorer\r\n",
		"import Colorer from './Colorer'\r\nimport ResidueType from '../../chem/ResidueType'\r\n\r\nclass SecondaryStructureColorer extends Colorer {\r\n  static id = 'SS'\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    if (residue._type.flags & ResidueType.Flags.DNA) {\r\n      return this.palette.getSecondaryColor('dna')\r\n    }\r\n    if (residue._type.flags & ResidueType.Flags.RNA) {\r\n      return this.palette.getSecondaryColor('rna')\r\n    }\r\n    const secondary = residue.getSecondary()\r\n    if (secondary) {\r\n      let color = this.palette.getSecondaryColor(secondary.type, true)\r\n      if (color === undefined) {\r\n        color = this.palette.getSecondaryColor(secondary.generic)\r\n      }\r\n      return color\r\n    }\r\n    return this.palette.defaultSecondaryColor\r\n  }\r\n}\r\n\r\nSecondaryStructureColorer.prototype.id = 'SS'\r\nSecondaryStructureColorer.prototype.name = 'Secondary Structure'\r\nSecondaryStructureColorer.prototype.shortName = 'Structure'\r\n\r\nexport default SecondaryStructureColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\nclass UniformColorer extends Colorer {\r\n  static id = 'UN'\r\n\r\n  getAtomColor(_atom, _complex) {\r\n    return this.opts.color\r\n  }\r\n\r\n  getResidueColor(_residue, _complex) {\r\n    return this.opts.color\r\n  }\r\n}\r\n\r\nUniformColorer.prototype.id = 'UN'\r\nUniformColorer.prototype.name = 'Uniform'\r\nUniformColorer.prototype.shortName = 'Uniform'\r\n\r\nexport default UniformColorer\r\n",
		"import Colorer from './Colorer'\r\nimport selectors from '../../chem/selectors'\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @exports ConditionalColorer\r\n * @augments Colorer\r\n * @constructor\r\n * @classdesc Bicolor coloring algorithm based on a selector string used as a condition.\r\n */\r\nclass ConditionalColorer extends Colorer {\r\n  static id = 'CO'\r\n\r\n  constructor(opts) {\r\n    super(opts)\r\n    const parsed = selectors.parse(this.opts.subset)\r\n    this._subsetCached = parsed.error ? selectors.none() : parsed.selector\r\n  }\r\n\r\n  getAtomColor(atom, _complex) {\r\n    return this._subsetCached.includesAtom(atom)\r\n      ? this.opts.color\r\n      : this.opts.baseColor\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const subset = this._subsetCached\r\n    const atoms = residue._atoms\r\n    for (let i = 0, n = atoms.length; i < n; ++i) {\r\n      if (!subset.includesAtom(atoms[i])) {\r\n        return this.opts.baseColor\r\n      }\r\n    }\r\n    return this.opts.color\r\n  }\r\n}\r\n\r\nConditionalColorer.prototype.id = 'CO'\r\nConditionalColorer.prototype.name = 'Conditional'\r\nConditionalColorer.prototype.shortName = 'Conditional'\r\n\r\nexport default ConditionalColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\nclass ConformationColorer extends Colorer {\r\n  static id = 'CF'\r\n\r\n  getAtomColor(atom, _complex) {\r\n    return this.palette.getChainColor(String.fromCharCode(atom.location))\r\n  }\r\n\r\n  getResidueColor(_residue, _complex) {\r\n    return this.palette.defaultResidueColor\r\n  }\r\n}\r\n\r\nConformationColorer.prototype.id = 'CF'\r\nConformationColorer.prototype.name = 'Conformation'\r\nConformationColorer.prototype.shortName = 'Conformation'\r\n\r\nexport default ConformationColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @see Temperature\r\n *\r\n * @exports TemperatureColorer\r\n * @augments Colorer\r\n * @constructor\r\n * @classdesc Coloring algorithm based on temperature of chemical element.\r\n */\r\nclass TemperatureColorer extends Colorer {\r\n  static id = 'TM'\r\n\r\n  getAtomColor(atom, _complex) {\r\n    const { opts } = this\r\n    let factor = 1\r\n    if (atom.temperature && opts) {\r\n      if (opts.min === opts.max) {\r\n        factor = atom.temperature > opts.max ? 1 : 0\r\n      } else {\r\n        factor = (atom.temperature - opts.min) / (opts.max - opts.min)\r\n      }\r\n      return this.palette.getGradientColor(factor, opts.gradient)\r\n    }\r\n    return this.palette.defaultGradientColor\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const { opts } = this\r\n    if (!opts) {\r\n      return this.palette.defaultGradientColor\r\n    }\r\n    if (residue.temperature) {\r\n      let factor = 0\r\n      if (opts.min === opts.max) {\r\n        factor = residue.temperature > opts.max ? 1 : 0\r\n      } else {\r\n        factor = (residue.temperature - opts.min) / (opts.max - opts.min)\r\n      }\r\n      return this.palette.getGradientColor(factor, opts.gradient)\r\n    }\r\n    return this.palette.defaultGradientColor\r\n  }\r\n}\r\n\r\nTemperatureColorer.prototype.id = 'TM' // [T]e[M]perature\r\nTemperatureColorer.prototype.name = 'Temperature'\r\nTemperatureColorer.prototype.shortName = 'Temperature'\r\n\r\nexport default TemperatureColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @see Occupancy\r\n *\r\n * @exports OccupancyColorer\r\n * @arguments Occupancy\r\n * @constructor\r\n * @classdesc Coloring algorithm based on occupancy of chemical element.\r\n */\r\nclass OccupancyColorer extends Colorer {\r\n  static id = 'OC'\r\n\r\n  _getColorByOccupancy(occupancy, opts) {\r\n    if (occupancy !== undefined) {\r\n      const factor = 1 - occupancy\r\n      return this.palette.getGradientColor(factor, opts.gradient)\r\n    }\r\n    return this.palette.defaultGradientColor\r\n  }\r\n\r\n  getAtomColor(atom, _complex) {\r\n    const { opts } = this\r\n    return this._getColorByOccupancy(atom.occupancy, opts)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const { opts } = this\r\n    return this._getColorByOccupancy(residue.occupancy, opts)\r\n  }\r\n}\r\n\r\nOccupancyColorer.prototype.id = 'OC' // [OC]cupancy\r\nOccupancyColorer.prototype.name = 'Occupancy'\r\nOccupancyColorer.prototype.shortName = 'Occupancy'\r\n\r\nexport default OccupancyColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\nclass HydrophobicityColorer extends Colorer {\r\n  static id = 'HY'\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    let color = this.palette.defaultResidueColor\r\n    if (residue._type.hydrophobicity !== undefined) {\r\n      // Kyte Doolitle hydro [-4.5,4.5]->[0.1]\r\n      const min = -4.5\r\n      const max = 4.5\r\n      color = this.palette.getGradientColor(\r\n        (residue._type.hydrophobicity - min) / (max - min),\r\n        this.opts.gradient\r\n      )\r\n    }\r\n    return color\r\n  }\r\n}\r\n\r\nHydrophobicityColorer.prototype.id = 'HY'\r\nHydrophobicityColorer.prototype.name = 'Hydrophobicity'\r\nHydrophobicityColorer.prototype.shortName = 'Hydrophobicity'\r\n\r\nexport default HydrophobicityColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\nclass MoleculeColorer extends Colorer {\r\n  static id = 'MO'\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const molecule = residue._molecule\r\n    const count = _complex.getMoleculeCount()\r\n    if (count > 1) {\r\n      return this.palette.getGradientColor(\r\n        (molecule.index - 1) / (count - 1),\r\n        this.opts.gradient\r\n      )\r\n    }\r\n    return this.palette.getGradientColor(0, this.opts.gradient)\r\n  }\r\n}\r\n\r\nMoleculeColorer.prototype.id = 'MO'\r\nMoleculeColorer.prototype.name = 'Molecule'\r\nMoleculeColorer.prototype.shortName = 'Molecule'\r\n\r\nexport default MoleculeColorer\r\n",
		"import Colorer from './Colorer'\r\nimport Atom from '../../chem/Atom'\r\n\r\nfunction scaleColor(c, factor) {\r\n  const r1 = (c >> 16) & 0xff\r\n  const g1 = (c >> 8) & 0xff\r\n  const b1 = c & 0xff\r\n  const r = factor * r1\r\n  const g = factor * g1\r\n  const b = factor * b1\r\n  return (r << 16) | (g << 8) | b\r\n}\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @exports CarbonColorer\r\n * @augments Colorer\r\n * @constructor\r\n * @classdesc Bicolor coloring algorithm based on selection carbon atoms.\r\n */\r\nclass CarbonColorer extends Colorer {\r\n  static id = 'CB'\r\n\r\n  getAtomColor(atom, _complex) {\r\n    const colorCarbon = this.opts.color\r\n    const colorNotCarbon = scaleColor(colorCarbon, this.opts.factor)\r\n    return atom.flags & Atom.Flags.CARBON ? colorCarbon : colorNotCarbon\r\n  }\r\n\r\n  getResidueColor(_residue, _complex) {\r\n    return this.opts.color\r\n  }\r\n}\r\n\r\nCarbonColorer.prototype.id = 'CB'\r\nCarbonColorer.prototype.name = 'Carbon'\r\nCarbonColorer.prototype.shortName = 'Carbon'\r\n\r\nexport default CarbonColorer\r\n",
		"import EntityList from '../utils/EntityList'\r\n\r\nimport ElementColorer from './colorers/ElementColorer'\r\nimport ResidueTypeColorer from './colorers/ResidueTypeColorer'\r\nimport SequenceColorer from './colorers/SequenceColorer'\r\nimport ChainColorer from './colorers/ChainColorer'\r\nimport SecondaryStructureColorer from './colorers/SecondaryStructureColorer'\r\nimport UniformColorer from './colorers/UniformColorer'\r\nimport ConditionalColorer from './colorers/ConditionalColorer'\r\nimport ConformationColorer from './colorers/ConformationColorer'\r\nimport TemperatureColorer from './colorers/TemperatureColorer'\r\nimport OccupancyColorer from './colorers/OccupancyColorer'\r\nimport HydrophobicityColorer from './colorers/HydrophobicityColorer'\r\nimport MoleculeColorer from './colorers/MoleculeColorer'\r\nimport CarbonColorer from './colorers/CarbonColorer'\r\n\r\nconst colorers = new EntityList([\r\n  ElementColorer,\r\n  ResidueTypeColorer,\r\n  SequenceColorer,\r\n  ChainColorer,\r\n  SecondaryStructureColorer,\r\n  UniformColorer,\r\n  ConditionalColorer,\r\n  ConformationColorer,\r\n  TemperatureColorer,\r\n  OccupancyColorer,\r\n  HydrophobicityColorer,\r\n  MoleculeColorer,\r\n  CarbonColorer\r\n])\r\n\r\nexport default colorers\r\n",
		"import { Color } from 'three'\r\nimport EntityList from '../utils/EntityList'\r\n\r\nfunction neutralColor(intensity) {\r\n  return new Color(intensity, intensity, intensity)\r\n}\r\n\r\nconst materialList = [\r\n  {\r\n    id: 'DF',\r\n    name: 'Diffuse',\r\n    shortName: 'Diffuse',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 1,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'SF',\r\n    name: 'Soft Plastic',\r\n    shortName: 'Soft',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.1),\r\n      shininess: 30,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'PL',\r\n    name: 'Glossy Plastic',\r\n    shortName: 'Glossy',\r\n    uberOptions: {\r\n      diffuse: neutralColor(0.56),\r\n      specular: neutralColor(0.28),\r\n      shininess: 100,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'ME',\r\n    name: 'Metal',\r\n    shortName: 'Metal',\r\n    uberOptions: {\r\n      diffuse: neutralColor(0.56),\r\n      specular: neutralColor(0.55),\r\n      shininess: 30,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'TR',\r\n    name: 'Transparent',\r\n    shortName: 'Transparent',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 1,\r\n      opacity: 0.5\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: true,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'GL',\r\n    name: 'Glass',\r\n    shortName: 'Glass',\r\n    uberOptions: {\r\n      diffuse: neutralColor(0.5),\r\n      specular: neutralColor(0.65),\r\n      shininess: 100,\r\n      opacity: 0.5\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: true,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'BA',\r\n    name: 'Backdrop',\r\n    shortName: 'Backdrop',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 1,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: false,\r\n      fog: false,\r\n      depthWrite: false,\r\n      transparent: false,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'TN',\r\n    name: 'Toon',\r\n    shortName: 'Toon',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 1,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: true\r\n    }\r\n  },\r\n  {\r\n    id: 'FL',\r\n    name: 'Flat',\r\n    shortName: 'Flat',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 0,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: false,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false\r\n    }\r\n  }\r\n]\r\n\r\nconst materials = new EntityList(materialList)\r\n\r\nexport default materials\r\n",
		"/**\r\n * Utils functions which is worked with meshes\r\n *\r\n * functions for doing something with all/specified meshes\r\n * functions for traversihg tree and create auxiliary meshes for transparency/shadowmaps...\r\n * functions for calculating data connected with meshes\r\n */\r\n\r\nimport UberMaterial from './shaders/UberMaterial'\r\nimport gfxutils from './gfxutils'\r\nimport {\r\n  BufferGeometry,\r\n  InstancedBufferAttribute,\r\n  InstancedBufferGeometry,\r\n  Line,\r\n  LineSegments,\r\n  Mesh\r\n} from 'three'\r\n\r\nfunction _gatherObjects(root, meshTypes) {\r\n  const meshes = []\r\n  root.traverse((object) => {\r\n    for (let i = 0; i < meshTypes.length; i++) {\r\n      if (object instanceof meshTypes[i]) {\r\n        meshes[meshes.length] = object\r\n        break\r\n      }\r\n    }\r\n  })\r\n  return meshes\r\n}\r\n\r\n// new mesh with the same geometry and specified material values and layer\r\nfunction createDerivativeMesh(mesh, values, layer) {\r\n  const material = mesh.material.createInstance()\r\n  material.setValues(values)\r\n\r\n  const newMesh = new mesh.constructor(mesh.geometry, material)\r\n  newMesh.material.needsUpdate = true\r\n  newMesh.applyMatrix4(mesh.matrix)\r\n  newMesh.layers.set(layer)\r\n  return newMesh\r\n}\r\n\r\nfunction traverseMeshes(root, meshTypes, func) {\r\n  const meshes = _gatherObjects(root, meshTypes)\r\n\r\n  for (let i = 0, n = meshes.length; i < n; ++i) {\r\n    const mesh = meshes[i]\r\n    if (!mesh.parent) {\r\n      continue\r\n    }\r\n    func(mesh)\r\n  }\r\n}\r\n\r\nfunction applyTransformsToMeshes(root, mtc) {\r\n  const mtcCount = mtc.length\r\n  if (mtcCount < 1) {\r\n    return\r\n  }\r\n\r\n  const meshTypes = [Mesh, LineSegments, Line]\r\n  traverseMeshes(root, meshTypes, (mesh) => {\r\n    mesh.applyMatrix4(mtc[0])\r\n    for (let j = 1; j < mtcCount; ++j) {\r\n      const newMesh = new mesh.constructor(mesh.geometry, mesh.material)\r\n      mesh.parent.add(newMesh)\r\n      newMesh.applyMatrix4(mtc[j])\r\n    }\r\n  })\r\n}\r\n\r\nconst processTransparentMaterial = (function () {\r\n  const matValues = {\r\n    prepassTransparancy: true,\r\n    fakeOpacity: false,\r\n    transparent: false,\r\n    colorFromDepth: false,\r\n    lights: false,\r\n    shadowmap: false,\r\n    fog: false\r\n  }\r\n\r\n  return function (root, material) {\r\n    if (!(material instanceof UberMaterial)) {\r\n      return\r\n    }\r\n\r\n    traverseMeshes(root, [Mesh, LineSegments], (mesh) => {\r\n      mesh.material.setValues({\r\n        prepassTransparancy: false,\r\n        fakeOpacity: false\r\n      })\r\n      mesh.material.needsUpdate = true\r\n      mesh.layers.set(gfxutils.LAYERS.TRANSPARENT)\r\n\r\n      const prepassTranspMesh = createDerivativeMesh(\r\n        mesh,\r\n        matValues,\r\n        gfxutils.LAYERS.PREPASS_TRANSPARENT\r\n      )\r\n      mesh.parent.add(prepassTranspMesh)\r\n    })\r\n  }\r\n})()\r\n\r\nconst processColFromPosMaterial = (function () {\r\n  const matValues = {\r\n    colorFromPos: true,\r\n    transparent: false,\r\n    colorFromDepth: false,\r\n    lights: false,\r\n    shadowmap: false,\r\n    fog: false,\r\n    overrideColor: false,\r\n    fogTransparent: false,\r\n    attrColor: false,\r\n    attrColor2: false,\r\n    attrAlphaColor: false,\r\n    fakeOpacity: false\r\n  }\r\n\r\n  return function (root, material) {\r\n    if (!(material instanceof UberMaterial)) {\r\n      return\r\n    }\r\n\r\n    traverseMeshes(root, [Mesh, LineSegments], (mesh) => {\r\n      const colFromPosMesh = createDerivativeMesh(\r\n        mesh,\r\n        matValues,\r\n        gfxutils.LAYERS.COLOR_FROM_POSITION\r\n      )\r\n      mesh.parent.add(colFromPosMesh)\r\n    })\r\n  }\r\n})()\r\n\r\nconst createShadowmapMaterial = (function () {\r\n  const matValues = {\r\n    colorFromDepth: true,\r\n    orthoCam: true,\r\n    lights: false,\r\n    shadowmap: false,\r\n    fog: false\r\n  }\r\n\r\n  return function (root, material) {\r\n    if (!(material instanceof UberMaterial)) {\r\n      return\r\n    }\r\n    traverseMeshes(root, [Mesh, LineSegments], (mesh) => {\r\n      if (!mesh.receiveShadow && mesh.material.shadowmap) {\r\n        // remove shadow from non-receivers\r\n        mesh.material.setValues({ shadowmap: false })\r\n      }\r\n      if (!mesh.material.lights) {\r\n        // skip creating shadowmap meshes for materials without lighting\r\n        return\r\n      }\r\n      if (!mesh.castShadow) {\r\n        // skip creating shadowmap meshes for non-casters\r\n        return\r\n      }\r\n      if (!gfxutils.belongToSelectLayers(mesh)) {\r\n        // skip creating shadowmap meshes for selection layer\r\n        return\r\n      }\r\n\r\n      const shadowmapMesh = createDerivativeMesh(\r\n        mesh,\r\n        matValues,\r\n        gfxutils.LAYERS.SHADOWMAP\r\n      )\r\n      shadowmapMesh.isShadowmapMesh = true\r\n      mesh.parent.add(shadowmapMesh)\r\n    })\r\n  }\r\n})()\r\n\r\nfunction removeShadowmapMaterial(root, material) {\r\n  if (!(material instanceof UberMaterial)) {\r\n    return\r\n  }\r\n\r\n  traverseMeshes(root, [Mesh, LineSegments], (mesh) => {\r\n    if (mesh.isShadowmapMesh) {\r\n      mesh.parent.remove(mesh)\r\n    }\r\n  })\r\n}\r\n\r\nfunction forEachMeshInGroup(group, process) {\r\n  function processObj(object) {\r\n    if (object instanceof Mesh) {\r\n      process(object)\r\n    }\r\n    for (let i = 0, l = object.children.length; i < l; i++) {\r\n      processObj(object.children[i])\r\n    }\r\n  }\r\n  processObj(group)\r\n}\r\n\r\nfunction _countMeshTriangles(mesh) {\r\n  const geom = mesh.geometry\r\n  if (geom instanceof InstancedBufferGeometry) {\r\n    const attribs = geom.attributes\r\n    for (const property in attribs) {\r\n      if (\r\n        attribs.hasOwnProperty(property) &&\r\n        attribs[property] instanceof InstancedBufferAttribute\r\n      ) {\r\n        const currAttr = attribs[property]\r\n        const indexSize = geom.index ? geom.index.array.length / 3 : 0\r\n        return (indexSize * currAttr.array.length) / currAttr.itemSize\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n  if (geom instanceof BufferGeometry) {\r\n    return geom.index ? geom.index.array.length / 3 : 0\r\n  }\r\n  return geom.faces ? geom.faces.length : 0\r\n}\r\n\r\nfunction countTriangles(group) {\r\n  let totalCount = 0\r\n  forEachMeshInGroup(group, (mesh) => {\r\n    totalCount += _countMeshTriangles(mesh)\r\n  })\r\n  return totalCount\r\n}\r\n\r\nexport default {\r\n  applyTransformsToMeshes,\r\n  processTransparentMaterial,\r\n  processColFromPosMaterial,\r\n  createShadowmapMaterial,\r\n  removeShadowmapMaterial,\r\n  forEachMeshInGroup,\r\n  countTriangles\r\n}\r\n",
		"import UberMaterial from './shaders/UberMaterial'\r\nimport gfxutils from './gfxutils'\r\nimport meshutils from './meshutils'\r\nimport settings from '../settings'\r\nimport materials from './materials'\r\nimport chem from '../chem'\r\nimport { Group } from 'three'\r\nimport { isEqual } from 'lodash'\r\n\r\nconst { selectors } = chem\r\n\r\nclass Representation {\r\n  constructor(index, mode, colorer, selector) {\r\n    const startMaterialValues = {\r\n      clipPlane: settings.now.draft.clipPlane,\r\n      fogTransparent: settings.now.bg.transparent,\r\n      shadowmap: settings.now.shadow.on,\r\n      shadowmapType: settings.now.shadow.type\r\n    }\r\n    this.index = index\r\n    this.mode = mode\r\n    this.colorer = colorer\r\n    this.selector = selector\r\n    this.selectorString = ''\r\n    this.count = 0\r\n    this.material = new UberMaterial()\r\n    this.material.setValues(startMaterialValues)\r\n    this.material.setUberOptions({ fogAlpha: settings.now.fogAlpha })\r\n    this.materialPreset = materials.first\r\n    this.needsRebuild = true\r\n    this.visible = true\r\n\r\n    // apply mode params & preset\r\n    this.setMode(mode)\r\n  }\r\n\r\n  markAtoms(complex) {\r\n    this.count = complex.markAtoms(this.selector, 1 << this.index)\r\n    this.needsRebuild = true\r\n    return this.count\r\n  }\r\n\r\n  unmarkAtoms(complex) {\r\n    complex.clearAtomBits(1 << this.index)\r\n    this.count = 0\r\n  }\r\n\r\n  setMode(mode) {\r\n    this.mode = mode\r\n  }\r\n\r\n  setMaterialPreset(preset) {\r\n    this.materialPreset = preset\r\n    this.material.setUberOptions(preset.uberOptions)\r\n    this.material.setValues(preset.values)\r\n  }\r\n\r\n  reset() {\r\n    this.geo = null\r\n    this.selectionGeo = null\r\n  }\r\n\r\n  buildGeometry(complex) {\r\n    this.reset()\r\n    this.needsRebuild = false\r\n\r\n    if (settings.now.ao) {\r\n      this.material.setValues({ normalsToGBuffer: settings.now.ao })\r\n    }\r\n\r\n    this.geo = this.mode.buildGeometry(\r\n      complex,\r\n      this.colorer,\r\n      1 << this.index,\r\n      this.material\r\n    )\r\n\r\n    if (\r\n      this.material.uberOptions.opacity < 0.99 &&\r\n      settings.now.transparency === 'prepass'\r\n    ) {\r\n      meshutils.processTransparentMaterial(this.geo, this.material)\r\n    }\r\n    this.geo.visible = this.visible\r\n\r\n    gfxutils.processObjRenderOrder(this.geo, this.materialPreset.id)\r\n    meshutils.processColFromPosMaterial(this.geo, this.material)\r\n\r\n    if (settings.now.shadow.on) {\r\n      meshutils.createShadowmapMaterial(this.geo, this.material)\r\n    }\r\n\r\n    return this.geo\r\n  }\r\n\r\n  buildSelectionGeometry(mask) {\r\n    let sg = null\r\n\r\n    if (this.geo && 'getSubset' in this.geo) {\r\n      const meshes = this.geo.getSubset(mask)\r\n      if (meshes && meshes.length > 0) {\r\n        sg = new Group()\r\n        sg.matrixAutoUpdate = false\r\n        sg.matrix = this.geo.matrix\r\n\r\n        for (let j = 0; j < meshes.length; j++) {\r\n          const m = meshes[j]\r\n          sg.add(m)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (sg) {\r\n      sg.visible = this.visible\r\n    }\r\n\r\n    this.selectionGeo = sg\r\n    return this.selectionGeo\r\n  }\r\n\r\n  /**\r\n   * Create object that represents difference between current and another rep\r\n   * anotherRep could be undefined. In this case everything is reported.\r\n   */\r\n  compare(repSettings) {\r\n    const diff = {}\r\n\r\n    const selStr = String(this.selector)\r\n    if (\r\n      !repSettings ||\r\n      selStr.valueOf() !== String(repSettings.selector).valueOf()\r\n    ) {\r\n      diff.selector = selStr\r\n    }\r\n\r\n    const modeDiff = this.mode.identify()\r\n    if (\r\n      !repSettings ||\r\n      Array.isArray(modeDiff) ||\r\n      modeDiff !== repSettings.mode\r\n    ) {\r\n      diff.mode = modeDiff\r\n    }\r\n\r\n    const colorerDiff = this.colorer.identify()\r\n    if (\r\n      !repSettings ||\r\n      Array.isArray(colorerDiff) ||\r\n      colorerDiff !== repSettings.colorer\r\n    ) {\r\n      diff.colorer = colorerDiff\r\n    }\r\n\r\n    if (!repSettings || this.materialPreset.id !== repSettings.material) {\r\n      diff.material = this.materialPreset.id\r\n    }\r\n\r\n    return diff\r\n  }\r\n\r\n  /**\r\n   * Change representation. Write fields what was changed into new object, return it.\r\n   */\r\n  change(repSettings, complex, mode, color) {\r\n    const diff = {}\r\n\r\n    // modify selector\r\n    if (repSettings.selector) {\r\n      const newSelectorObject = selectors.parse(repSettings.selector).selector\r\n      const newSelector = String(newSelectorObject)\r\n      if (this.selectorString !== newSelector) {\r\n        diff.selector = newSelector\r\n        this.selectorString = newSelector\r\n        this.selector = newSelectorObject\r\n        this.markAtoms(complex)\r\n      }\r\n    }\r\n\r\n    // modify mode\r\n    if (repSettings.mode) {\r\n      const newMode = repSettings.mode\r\n      if (!isEqual(this.mode.identify(), newMode)) {\r\n        diff.mode = newMode\r\n        this.setMode(mode)\r\n      }\r\n    }\r\n\r\n    // modify colorer\r\n    if (repSettings.colorer) {\r\n      const newColorer = repSettings.colorer\r\n      if (!isEqual(this.colorer.identify(), newColorer)) {\r\n        diff.colorer = newColorer\r\n        this.colorer = color\r\n      }\r\n    }\r\n\r\n    // modify material\r\n    if (repSettings.material) {\r\n      const newMaterial = repSettings.material\r\n      if (!isEqual(this.materialPreset.id, newMaterial)) {\r\n        diff.material = newMaterial\r\n        this.setMaterialPreset(materials.get(repSettings.material))\r\n      }\r\n    }\r\n\r\n    return diff\r\n  }\r\n\r\n  show(visible) {\r\n    this.visible = visible\r\n    if (this.geo) {\r\n      this.geo.visible = visible\r\n    }\r\n    if (this.selectionGeo) {\r\n      this.selectionGeo.visible = visible\r\n    }\r\n  }\r\n}\r\n\r\nexport default Representation\r\n",
		"import logger from './utils/logger'\r\nimport gfxutils from './gfx/gfxutils'\r\nimport './gfx/modes'\r\nimport { Group, Matrix4, Object3D, Vector3 } from 'three'\r\n\r\nfunction _traverseComponentGroups(root, component, callback) {\r\n  const { children } = root\r\n  if (!children) {\r\n    return\r\n  }\r\n\r\n  for (let i = 0, n = children.length; i < n; ++i) {\r\n    const child = children[i]\r\n    if (child._component === component) {\r\n      callback(child)\r\n    }\r\n    if (child instanceof gfxutils.RCGroup) {\r\n      _traverseComponentGroups(child, component, callback)\r\n    }\r\n  }\r\n}\r\n\r\nfunction ComplexEditor() {}\r\n\r\nclass ComplexComponentEditor extends ComplexEditor {\r\n  constructor(complexVisual) {\r\n    super()\r\n    this._complexVisual = complexVisual\r\n    this._inProgress = false\r\n  }\r\n\r\n  begin() {\r\n    const complex = this._complexVisual.getComplex()\r\n\r\n    // init component matrices\r\n    this._componentTransforms = []\r\n    for (let i = 0; i < complex._components.length; ++i) {\r\n      const component = complex._components[i]\r\n      this._componentTransforms[component._index] = new Object3D()\r\n    }\r\n\r\n    this._inProgress = true\r\n\r\n    return true\r\n  }\r\n\r\n  apply() {\r\n    if (!this._inProgress) {\r\n      return\r\n    }\r\n\r\n    const complex = this._complexVisual.getComplex()\r\n\r\n    for (let i = 0; i < complex._components.length; ++i) {\r\n      this._bakeComponentTransform(complex._components[i])\r\n    }\r\n\r\n    complex.onAtomPositionChanged()\r\n\r\n    this._resetComponentTransform()\r\n\r\n    this._complexVisual.finalizeEdit()\r\n  }\r\n\r\n  discard() {\r\n    if (!this._inProgress) {\r\n      return\r\n    }\r\n\r\n    this._resetComponentTransform()\r\n\r\n    this._complexVisual.finalizeEdit()\r\n  }\r\n\r\n  getAltObj() {\r\n    const res = {\r\n      objects: [],\r\n      pivot: new Vector3(0, 0, 0)\r\n    }\r\n\r\n    const visual = this._complexVisual\r\n    const component = visual.getSelectedComponent()\r\n\r\n    if (component === null) {\r\n      return res\r\n    }\r\n\r\n    const selection = this._complexVisual.getSelectionGeo()\r\n    const selectionMask = 1 << visual.getSelectionBit()\r\n    let i\r\n    let j\r\n    let reprNode\r\n    let geo\r\n\r\n    // find all geo nodes for this component\r\n    _traverseComponentGroups(visual, component, (child) => {\r\n      res.objects.push(child)\r\n    })\r\n\r\n    // find all selection nodes for this component\r\n    for (i = 0; i < selection.children.length; ++i) {\r\n      reprNode = selection.children[i]\r\n      for (j = 0; j < reprNode.children.length; ++j) {\r\n        geo = reprNode.children[j]\r\n        if (geo.hasOwnProperty('_component') && geo._component === component) {\r\n          res.objects.push(geo)\r\n        }\r\n      }\r\n    }\r\n\r\n    // add dummy object that stores component transformation\r\n    res.objects.push(this._componentTransforms[component._index])\r\n\r\n    const bbmin = new Vector3(\r\n      Number.MAX_VALUE,\r\n      Number.MAX_VALUE,\r\n      Number.MAX_VALUE\r\n    )\r\n    const bbmax = new Vector3(\r\n      -Number.MAX_VALUE,\r\n      -Number.MAX_VALUE,\r\n      -Number.MAX_VALUE\r\n    )\r\n\r\n    component.forEachResidue((residue) => {\r\n      const atoms = residue._atoms\r\n      for (j = 0; j < atoms.length; ++j) {\r\n        if (atoms[j].mask & selectionMask) {\r\n          bbmin.min(atoms[j].position)\r\n          bbmax.max(atoms[j].position)\r\n        }\r\n      }\r\n    })\r\n\r\n    res.pivot.lerpVectors(bbmin, bbmax, 0.5)\r\n    return res\r\n  }\r\n\r\n  _bakeComponentTransform(component) {\r\n    const t = this._componentTransforms[component._index]\r\n    if (\r\n      t &&\r\n      (!(t.position.x === 0 && t.position.y === 0 && t.position.z === 0) ||\r\n        !(\r\n          t.quaternion.x === 0 &&\r\n          t.quaternion.y === 0 &&\r\n          t.quaternion.z === 0 &&\r\n          t.quaternion.w === 1\r\n        ))\r\n    ) {\r\n      t.updateMatrix()\r\n\r\n      component.forEachResidue((residue) => {\r\n        const atoms = residue._atoms\r\n        for (let j = 0; j < atoms.length; ++j) {\r\n          atoms[j].position.applyMatrix4(t.matrix)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  _resetComponentTransform() {\r\n    const visual = this._complexVisual\r\n    const selection = this._complexVisual.getSelectionGeo()\r\n    let i\r\n    let j\r\n    let reprNode\r\n    let geo\r\n\r\n    for (i = 0; i < this._componentTransforms.length; ++i) {\r\n      geo = this._componentTransforms[i]\r\n      geo.position.set(0, 0, 0)\r\n      geo.quaternion.set(0, 0, 0, 1)\r\n    }\r\n\r\n    // reset all geo nodes\r\n    for (i = 0; i < visual.children.length; ++i) {\r\n      reprNode = visual.children[i]\r\n      for (j = 0; j < reprNode.children.length; ++j) {\r\n        geo = reprNode.children[j]\r\n        if (geo.hasOwnProperty('_component')) {\r\n          geo.position.set(0, 0, 0)\r\n          geo.quaternion.set(0, 0, 0, 1)\r\n        }\r\n      }\r\n    }\r\n\r\n    // reset all selection nodes\r\n    for (i = 0; i < selection.children.length; ++i) {\r\n      reprNode = selection.children[i]\r\n      for (j = 0; j < reprNode.children.length; ++j) {\r\n        geo = reprNode.children[j]\r\n        if (geo.hasOwnProperty('_component')) {\r\n          geo.position.set(0, 0, 0)\r\n          geo.quaternion.set(0, 0, 0, 1)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass ComplexFragmentEditor extends ComplexEditor {\r\n  constructor(complexVisual) {\r\n    super()\r\n    this._complexVisual = complexVisual\r\n    this._inProgress = false\r\n  }\r\n\r\n  begin() {\r\n    const visual = this._complexVisual\r\n    const selection = this._complexVisual.getSelectionGeo()\r\n\r\n    const atoms = this._getSelectionBorderAtoms()\r\n    if (atoms.length < 1 || atoms.length > 2) {\r\n      logger.error('Can only edit fragments with one or two bound atoms.')\r\n      return false\r\n    }\r\n\r\n    this._fragmentBoundAtoms = atoms\r\n\r\n    const selectionMask = 1 << visual.getSelectionBit()\r\n\r\n    // hide selected fragment in main model\r\n    visual.disableSubset(selectionMask, true)\r\n\r\n    // hide selection geo in main model\r\n    for (let k = 0; k < selection.children.length; ++k) {\r\n      selection.children[k].visible = false\r\n    }\r\n\r\n    // create visible fragment representation to rotate\r\n    const pivotPos = atoms[0].position.clone()\r\n\r\n    if (atoms.length === 2) {\r\n      pivotPos.lerp(atoms[1].position, 0.5)\r\n    }\r\n\r\n    this._fragmentGeo = new Group()\r\n    visual.add(this._fragmentGeo)\r\n    this._fragmentGeo.position.copy(pivotPos)\r\n\r\n    this._fragmentSelectionGeo = new Group()\r\n    selection.add(this._fragmentSelectionGeo)\r\n    this._fragmentSelectionGeo.position.copy(pivotPos)\r\n\r\n    const offset = pivotPos.clone()\r\n    offset.negate()\r\n\r\n    for (let i = 0; i < visual.children.length; ++i) {\r\n      const g = visual.children[i]\r\n      if (!('getSubset' in g)) {\r\n        continue\r\n      }\r\n\r\n      const vg = new Group()\r\n      this._fragmentGeo.add(vg)\r\n\r\n      const sg = new Group()\r\n      this._fragmentSelectionGeo.add(sg)\r\n\r\n      const meshes = g.getSubset(selectionMask, true)\r\n      for (let j = 0; j < meshes.length; j++) {\r\n        const m = meshes[j]\r\n        vg.add(m)\r\n        m.position.copy(offset)\r\n      }\r\n\r\n      const smeshes = g.getSubset(selectionMask, true)\r\n      for (let h = 0; h < smeshes.length; h++) {\r\n        const sm = smeshes[h]\r\n        sg.add(sm)\r\n        sm.position.copy(offset)\r\n      }\r\n    }\r\n\r\n    gfxutils.applySelectionMaterial(this._fragmentSelectionGeo)\r\n\r\n    this._inProgress = true\r\n    return true\r\n  }\r\n\r\n  apply() {\r\n    if (!this._inProgress) {\r\n      return\r\n    }\r\n\r\n    const visual = this._complexVisual\r\n    const selectionBit = visual.getSelectionBit()\r\n\r\n    const p = this._fragmentGeo.position\r\n    const m = this._fragmentGeo.matrix.clone()\r\n    m.multiply(new Matrix4().makeTranslation(-p.x, -p.y, -p.z))\r\n\r\n    this._bakeAtomTransform(m, 1 << selectionBit)\r\n\r\n    // show selected fragment in main model\r\n    visual.enableSubset(1 << selectionBit, true)\r\n\r\n    visual.getComplex().onAtomPositionChanged()\r\n\r\n    visual.finalizeEdit()\r\n  }\r\n\r\n  discard() {\r\n    if (!this._inProgress) {\r\n      return\r\n    }\r\n\r\n    const visual = this._complexVisual\r\n    const selection = this._complexVisual.getSelectionGeo()\r\n\r\n    this._fragmentGeo.parent.remove(this._fragmentGeo)\r\n\r\n    // show selected fragment in main model\r\n    visual.enableSubset(1 << visual.getSelectionBit(), true)\r\n\r\n    // show selection geo in main model (+ remove fragment selection geo)\r\n    for (let i = 0; i < selection.children.length; ++i) {\r\n      const node = selection.children[i]\r\n      if (node.visible) {\r\n        selection.remove(node)\r\n      } else {\r\n        node.visible = true\r\n      }\r\n    }\r\n\r\n    visual.finalizeEdit()\r\n  }\r\n\r\n  isFreeRotationAllowed() {\r\n    return this._fragmentBoundAtoms.length < 2\r\n  }\r\n\r\n  getAltObj() {\r\n    const res = {\r\n      objects: [],\r\n      pivot: new Vector3(0, 0, 0)\r\n    }\r\n\r\n    res.objects.push(this._fragmentGeo, this._fragmentSelectionGeo)\r\n\r\n    const boundAtoms = this._fragmentBoundAtoms\r\n    if (boundAtoms.length === 1) {\r\n      if (boundAtoms[0].bonds.length === 1) {\r\n        // single external bond allows rotation about bond axis\r\n        const bond = boundAtoms[0].bonds[0]\r\n        res.axis = new Vector3().subVectors(\r\n          bond._right.position,\r\n          bond._left.position\r\n        )\r\n        res.axis.normalize()\r\n        res.axis.transformDirection(this._complexVisual.matrixWorld)\r\n      }\r\n    } else if (boundAtoms.length === 2) {\r\n      // two bound atoms allow rotation only about axis running through their centers\r\n      res.axis = new Vector3().subVectors(\r\n        boundAtoms[1].position,\r\n        boundAtoms[0].position\r\n      )\r\n      res.axis.normalize()\r\n      res.axis.transformDirection(this._complexVisual.matrixWorld)\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  _getSelectionBorderAtoms() {\r\n    const complex = this._complexVisual.getComplex()\r\n\r\n    const selectionMask = 1 << this._complexVisual.getSelectionBit()\r\n    const atomHash = {}\r\n\r\n    complex.forEachBond((bond) => {\r\n      if (bond._left.mask & selectionMask) {\r\n        if ((bond._right.mask & selectionMask) === 0) {\r\n          atomHash[bond._left.index] = 1\r\n        }\r\n      } else if (bond._right.mask & selectionMask) {\r\n        atomHash[bond._right.index] = 1\r\n      }\r\n    })\r\n\r\n    const atoms = []\r\n    const keys = Object.keys(atomHash)\r\n    for (let i = 0, n = keys.length; i < n; ++i) {\r\n      const idx = keys[i]\r\n      atoms.push(complex._atoms[idx])\r\n    }\r\n\r\n    return atoms\r\n  }\r\n\r\n  _bakeAtomTransform(matrix, mask) {\r\n    this._complexVisual.getComplex().forEachAtom((atom) => {\r\n      if (atom.mask & mask) {\r\n        atom.position.applyMatrix4(matrix)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default {\r\n  ComponentEditor: ComplexComponentEditor,\r\n  FragmentEditor: ComplexFragmentEditor\r\n}\r\n",
		"import utils from './utils'\r\nimport logger from './utils/logger'\r\nimport chem from './chem'\r\nimport settings from './settings'\r\nimport gfxutils from './gfx/gfxutils'\r\nimport modes from './gfx/modes'\r\nimport colorers from './gfx/colorers'\r\nimport palettes from './gfx/palettes'\r\nimport materials from './gfx/materials'\r\nimport Representation from './gfx/Representation'\r\nimport Visual from './Visual'\r\nimport ComplexVisualEdit from './ComplexVisualEdit'\r\nimport meshutils from './gfx/meshutils'\r\nimport { isEmpty, merge } from 'lodash'\r\nimport { Group, Mesh } from 'three'\r\n\r\nconst { selectors } = chem\r\n\r\nfunction lookupAndCreate(entityList, specs) {\r\n  if (!Array.isArray(specs)) {\r\n    specs = [specs]\r\n  }\r\n  const [id, opts] = specs\r\n  const Entity = entityList.get(id) || entityList.first\r\n  return new Entity(opts)\r\n}\r\n\r\nclass ComplexVisual extends Visual {\r\n  constructor(name, dataSource) {\r\n    super(name, dataSource)\r\n    this._complex = dataSource\r\n\r\n    /** @type {Representation[]} */\r\n    this._reprList = []\r\n    /** @type {?Representation} */\r\n    this._repr = null\r\n    this._reprListChanged = true\r\n\r\n    this._selectionBit = 0\r\n    this._reprUsedBits = 0\r\n    this._selectionCount = 0\r\n\r\n    this._selectionGeometry = new Group()\r\n  }\r\n\r\n  getBoundaries() {\r\n    return this._complex.getBoundaries()\r\n  }\r\n\r\n  release() {\r\n    if (this._selectionGeometry.parent) {\r\n      this._selectionGeometry.remove(this._selectionGeometry)\r\n    }\r\n    Visual.prototype.release.call(this)\r\n  }\r\n\r\n  getComplex() {\r\n    return this._complex\r\n  }\r\n\r\n  getSelectionCount() {\r\n    return this._selectionCount\r\n  }\r\n\r\n  getSelectionGeo() {\r\n    return this._selectionGeometry\r\n  }\r\n\r\n  getSelectionBit() {\r\n    return this._selectionBit\r\n  }\r\n\r\n  getEditor() {\r\n    return this._editor\r\n  }\r\n\r\n  resetReps(reps) {\r\n    // Create all necessary representations\r\n    if (this._complex) {\r\n      this._complex.clearAtomBits(~0)\r\n    }\r\n    this._reprListChanged = true\r\n    this._reprUsedBits = 0\r\n    this._reprList.length = reps.length\r\n    for (let i = 0, n = reps.length; i < n; ++i) {\r\n      const rep = reps[i]\r\n\r\n      let selector\r\n      let selectorString\r\n      if (typeof rep.selector === 'string') {\r\n        selectorString = rep.selector\r\n        ;({ selector } = selectors.parse(selectorString))\r\n      } else if (typeof rep.selector === 'undefined') {\r\n        selectorString = settings.now.presets.default[0].selector\r\n        ;({ selector } = selectors.parse(selectorString))\r\n      } else {\r\n        ;({ selector } = rep)\r\n        selectorString = selector.toString()\r\n      }\r\n      const mode = lookupAndCreate(modes, rep.mode)\r\n      const colorer = lookupAndCreate(colorers, rep.colorer)\r\n      const material = materials.get(rep.material) || materials.first\r\n\r\n      this._reprList[i] = new Representation(i, mode, colorer, selector)\r\n      this._reprList[i].setMaterialPreset(material)\r\n      this._reprList[i].selectorString = selectorString\r\n\r\n      if (this._complex) {\r\n        this._complex.markAtoms(selector, 1 << i)\r\n      }\r\n\r\n      this._reprUsedBits |= 1 << i\r\n    }\r\n    this._repr = reps.length > 0 ? this._reprList[0] : null\r\n\r\n    this._selectionBit = reps.length\r\n    this._reprUsedBits |= 1 << this._selectionBit // selection uses one bit\r\n    this._selectionCount = 0\r\n\r\n    if (this._complex) {\r\n      this._complex.update()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get number of representations created so far.\r\n   * @returns {number} Number of reps.\r\n   */\r\n  repCount() {\r\n    return this._reprList.length\r\n  }\r\n\r\n  /**\r\n   * Get or set the current representation index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\r\n   * @returns {number} The current index.\r\n   */\r\n  repCurrent(index) {\r\n    if (index >= 0 && index < this._reprList.length) {\r\n      this._repr = this._reprList[index]\r\n    } else {\r\n      index = this._reprList.indexOf(this._repr)\r\n    }\r\n    return index\r\n  }\r\n\r\n  /**\r\n   * Get or set representation by index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\r\n   * @param {object=} rep - Optional representation description.\r\n   * @param {string=} rep.selector - Selector string.\r\n   * @param {string=} rep.mode - Mode id.\r\n   * @param {string=} rep.colorer - Colorer id.\r\n   * @param {string=} rep.material - Material id.\r\n   * @returns {Object} {desc, index, status} field desc contains rep description, index - index of correspondent rep,\r\n   * status - one of three strings: 'created', 'changed', ''. 'created' means new rep was created during this function,\r\n   * 'changed' - rep was changed during this function. '' - something else.\r\n   */\r\n  rep(index, rep) {\r\n    // if index is missing then it is the current\r\n    if (!rep && (index === undefined || index instanceof Object)) {\r\n      rep = index\r\n      index = this.repCurrent()\r\n    }\r\n\r\n    // fail if out of bounds\r\n    if (index < 0 || index > this._reprList.length) {\r\n      logger.error(`Rep ${index} does not exist!`)\r\n      return null\r\n    }\r\n\r\n    // a special case of adding just after the end\r\n    if (index === this._reprList.length) {\r\n      const res = this.repAdd(rep)\r\n      logger.warn(\r\n        `Rep ${index} does not exist! New representation was created.`\r\n      )\r\n      return { desc: res.desc, index, status: 'created' }\r\n    }\r\n\r\n    // gather description\r\n    const target = this._reprList[index]\r\n    const desc = {\r\n      selector: target.selectorString,\r\n      mode: target.mode.identify(),\r\n      colorer: target.colorer.identify(),\r\n      material: target.materialPreset.id\r\n    }\r\n\r\n    // modification is requested\r\n    if (rep) {\r\n      // modify\r\n      const diff = target.change(\r\n        rep,\r\n        this._complex,\r\n        lookupAndCreate(modes, rep.mode),\r\n        lookupAndCreate(colorers, rep.colorer)\r\n      )\r\n\r\n      // something was changed\r\n      if (!isEmpty(diff)) {\r\n        target.needsRebuild = true\r\n        for (const key in diff) {\r\n          if (diff.hasOwnProperty(key)) {\r\n            desc[key] = diff[key]\r\n            logger.debug(`rep[${index}].${key} changed to ${diff[key]}`)\r\n          }\r\n        }\r\n\r\n        // safety trick: lower resolution for surface modes\r\n        if (\r\n          diff.mode &&\r\n          target.mode.isSurface &&\r\n          (settings.now.resolution === 'ultra' ||\r\n            settings.now.resolution === 'high')\r\n        ) {\r\n          logger.report(\r\n            'Surface resolution was changed to \"medium\" to avoid hang-ups.'\r\n          )\r\n          settings.set('resolution', 'medium')\r\n        }\r\n        return { desc, index, status: 'changed' }\r\n      }\r\n    }\r\n    return { desc, index, status: '' }\r\n  }\r\n\r\n  /**\r\n   * Get representation (not just description) by index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\r\n   * @returns {?object} Representation.\r\n   */\r\n  repGet(index) {\r\n    // if index is missing then it is the current\r\n    if (index === undefined || index instanceof Object) {\r\n      index = this.repCurrent()\r\n    }\r\n\r\n    // fail if out of bounds\r\n    if (index < 0 || index >= this._reprList.length) {\r\n      return null\r\n    }\r\n\r\n    return this._reprList[index]\r\n  }\r\n\r\n  _getFreeReprIdx() {\r\n    let bits = this._reprUsedBits\r\n    for (\r\n      let i = 0;\r\n      i <= ComplexVisual.NUM_REPRESENTATION_BITS;\r\n      ++i, bits >>= 1\r\n    ) {\r\n      if ((bits & 1) === 0) {\r\n        return i\r\n      }\r\n    }\r\n    return -1\r\n  }\r\n\r\n  /**\r\n   * Add new representation.\r\n   * @param {object=} rep - Representation description.\r\n   * @returns {Object} {desc, index} field desc contains added rep description, index - index of this rep.\r\n   */\r\n  repAdd(rep) {\r\n    if (this._reprList.length >= ComplexVisual.NUM_REPRESENTATION_BITS) {\r\n      return null\r\n    }\r\n\r\n    const newSelectionBit = this._getFreeReprIdx()\r\n    if (newSelectionBit < 0) {\r\n      return null // no more slots for representations\r\n    }\r\n\r\n    const originalSelection = this.buildSelectorFromMask(\r\n      1 << this._selectionBit\r\n    )\r\n\r\n    // Fill in default values\r\n    const def = settings.now.presets.default[0]\r\n    const desc = merge(\r\n      {\r\n        selector: def.selector,\r\n        mode: def.mode,\r\n        colorer: def.colorer,\r\n        material: def.material\r\n      },\r\n      rep\r\n    )\r\n\r\n    const selector =\r\n      typeof desc.selector === 'string'\r\n        ? selectors.parse(desc.selector).selector\r\n        : desc.selector\r\n    const target = new Representation(\r\n      this._selectionBit,\r\n      lookupAndCreate(modes, desc.mode),\r\n      lookupAndCreate(colorers, desc.colorer),\r\n      selector\r\n    )\r\n    target.selectorString = selector.toString()\r\n    target.setMaterialPreset(materials.get(desc.material))\r\n    target.markAtoms(this._complex)\r\n    this._reprList.push(target)\r\n\r\n    // change selection bit\r\n    this._selectionBit = newSelectionBit\r\n    this._reprUsedBits |= 1 << this._selectionBit\r\n\r\n    // restore selection using new selection bit\r\n    this._complex.markAtoms(originalSelection, 1 << this._selectionBit)\r\n\r\n    return { desc, index: this._reprList.length - 1 }\r\n  }\r\n\r\n  /**\r\n   * Remove representation.\r\n   * @param {number=} index - Zero-based representation index.\r\n   */\r\n  repRemove(index) {\r\n    if (index === undefined) {\r\n      index = this.repCurrent()\r\n    }\r\n\r\n    // catch out of bounds case\r\n    let count = this._reprList.length\r\n    if (index < 0 || index >= count || count <= 1) {\r\n      // do not allow to remove the single rep\r\n      return\r\n    }\r\n\r\n    const target = this._reprList[index]\r\n    target.unmarkAtoms(this._complex)\r\n    this._reprUsedBits &= ~(1 << target.index)\r\n\r\n    this._reprList.splice(index, 1)\r\n\r\n    // update current rep\r\n    if (target === this._repr) {\r\n      --count\r\n      index = index < count ? index : count - 1\r\n      this._repr = this._reprList[index]\r\n    }\r\n    this._reprListChanged = true\r\n  }\r\n\r\n  /**\r\n   * Hide representation.\r\n   * @param {number} index - Zero-based representation index.\r\n   * @param {boolean=} hide - Specify false to make rep visible, true to hide (by default).\r\n   */\r\n  repHide(index, hide) {\r\n    if (hide === undefined) {\r\n      hide = true\r\n    }\r\n\r\n    // fail if out of bounds\r\n    if (index < 0 || index >= this._reprList.length) {\r\n      return\r\n    }\r\n\r\n    const target = this._reprList[index]\r\n    target.show(!hide)\r\n  }\r\n\r\n  /**\r\n   * Select atoms with selector\r\n   * @param {Selector} selector - selector\r\n   * @param {boolean=} append - true to append selection atoms to current selection, false to rewrite selection\r\n   */\r\n  select(selector, append) {\r\n    if (append) {\r\n      this._selectionCount += this._complex.markAtomsAdditionally(\r\n        selector,\r\n        1 << this._selectionBit\r\n      )\r\n    } else {\r\n      this._selectionCount = this._complex.markAtoms(\r\n        selector,\r\n        1 << this._selectionBit\r\n      )\r\n    }\r\n    this._complex.updateStructuresMask()\r\n    this.rebuildSelectionGeometry()\r\n  }\r\n\r\n  resetSelectionMask() {\r\n    if (this._selectionCount !== 0) {\r\n      this._selectionCount = 0\r\n      if (this._complex) {\r\n        this._complex.clearAtomBits(1 << this._selectionBit)\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSelectionMask(pickedObj) {\r\n    const self = this\r\n    const { atom } = pickedObj\r\n    let { residue, chain, molecule } = pickedObj\r\n    const setMask = 1 << this._selectionBit\r\n    const clearMask = ~setMask\r\n\r\n    if (atom) {\r\n      residue = atom.residue\r\n      chain = residue._chain\r\n      molecule = residue._molecule\r\n\r\n      if (atom.mask & setMask) {\r\n        atom.mask &= clearMask\r\n        residue._mask &= clearMask\r\n        chain._mask &= clearMask\r\n        if (molecule) {\r\n          molecule.mask &= clearMask\r\n        }\r\n        this._selectionCount--\r\n      } else {\r\n        atom.mask |= setMask\r\n        this._selectionCount++\r\n\r\n        // select residue if all atoms in it are selected\r\n        residue.collectMask()\r\n        // select chain and molecule if all residues in it are selected\r\n        chain.collectMask()\r\n        if (molecule) {\r\n          molecule.collectMask()\r\n        }\r\n      }\r\n    } else if (residue) {\r\n      chain = residue._chain\r\n      molecule = residue._molecule\r\n\r\n      if (residue._mask & setMask) {\r\n        residue._mask &= clearMask\r\n        chain._mask &= clearMask\r\n        residue.forEachAtom((a) => {\r\n          if (a.mask & setMask) {\r\n            a.mask &= clearMask\r\n            self._selectionCount--\r\n          }\r\n        })\r\n      } else {\r\n        residue._mask |= setMask\r\n        residue.forEachAtom((a) => {\r\n          if (!(a.mask & setMask)) {\r\n            a.mask |= setMask\r\n            self._selectionCount++\r\n          }\r\n        })\r\n\r\n        // select chain and molecule if all residues in it are selected\r\n        chain.collectMask()\r\n        if (molecule) {\r\n          molecule.collectMask()\r\n        }\r\n      }\r\n    } else if (chain || molecule) {\r\n      const obj = chain || molecule\r\n      if (obj._mask & setMask) {\r\n        obj._mask &= clearMask\r\n        obj.forEachResidue((r) => {\r\n          if (r._mask & setMask) {\r\n            r._mask &= clearMask\r\n            r.forEachAtom((a) => {\r\n              if (a.mask & setMask) {\r\n                a.mask &= clearMask\r\n                self._selectionCount--\r\n              }\r\n            })\r\n            r._mask &= clearMask\r\n          }\r\n        })\r\n      } else {\r\n        obj._mask |= setMask\r\n        obj.forEachResidue((r) => {\r\n          if (!(r._mask & setMask)) {\r\n            r._mask |= setMask\r\n            r.forEachAtom((a) => {\r\n              if (!(a.mask & setMask)) {\r\n                a.mask |= setMask\r\n                self._selectionCount++\r\n              }\r\n            })\r\n            const otherObj = chain ? r.getMolecule() : r.getChain()\r\n            if (otherObj) {\r\n              otherObj.collectMask()\r\n            }\r\n          }\r\n        })\r\n      }\r\n    } else {\r\n      this.resetSelectionMask()\r\n    }\r\n  }\r\n\r\n  expandSelection() {\r\n    const self = this\r\n    const selectionMask = 1 << this._selectionBit\r\n    const tmpMask = 1 << 31\r\n\r\n    // mark atoms to add\r\n    this._complex.forEachBond((bond) => {\r\n      if (bond._left.mask & selectionMask) {\r\n        if ((bond._right.mask & selectionMask) === 0) {\r\n          bond._right.mask |= tmpMask\r\n        }\r\n      } else if (bond._right.mask & selectionMask) {\r\n        bond._left.mask |= tmpMask\r\n      }\r\n    })\r\n\r\n    // select marked atoms\r\n    const deselectionMask = ~tmpMask\r\n    this._complex.forEachAtom((atom) => {\r\n      if (atom.mask & tmpMask) {\r\n        atom.mask = (atom.mask & deselectionMask) | selectionMask\r\n        ++self._selectionCount\r\n      }\r\n    })\r\n\r\n    this._complex.updateStructuresMask()\r\n  }\r\n\r\n  shrinkSelection() {\r\n    const self = this\r\n    const selectionMask = 1 << this._selectionBit\r\n    const tmpMask = 1 << 31\r\n\r\n    // mark atoms neighbouring to unselected ones\r\n    this._complex.forEachBond((bond) => {\r\n      if (bond._left.mask & selectionMask) {\r\n        if ((bond._right.mask & selectionMask) === 0) {\r\n          bond._left.mask |= tmpMask\r\n        }\r\n      } else if (bond._right.mask & selectionMask) {\r\n        bond._right.mask |= tmpMask\r\n      }\r\n    })\r\n\r\n    // mark hanging atoms\r\n    this._complex.forEachAtom((atom) => {\r\n      if (atom.mask & selectionMask && atom.bonds.length === 1) {\r\n        atom.mask |= tmpMask\r\n      }\r\n    })\r\n\r\n    // deselect marked atoms\r\n    const deselectionMask = ~(selectionMask | tmpMask)\r\n    this._complex.forEachAtom((atom) => {\r\n      if (atom.mask & tmpMask) {\r\n        atom.mask &= deselectionMask\r\n        --self._selectionCount\r\n      }\r\n    })\r\n\r\n    this._complex.updateStructuresMask()\r\n  }\r\n\r\n  getSelectedComponent() {\r\n    const selectionMask = 1 << this._selectionBit\r\n\r\n    let component = null\r\n    let multiple = false\r\n\r\n    // find which component is selected (exclusively)\r\n    this._complex.forEachAtom((atom) => {\r\n      if (atom.mask & selectionMask) {\r\n        if (component === null) {\r\n          component = atom.residue._component\r\n        } else if (component !== atom.residue._component) {\r\n          multiple = true\r\n        }\r\n      }\r\n    })\r\n\r\n    return multiple ? null : component\r\n  }\r\n\r\n  getSelectionCenter(center, includesAtom, selRule) {\r\n    center.set(0.0, 0.0, 0.0)\r\n    let count = 0\r\n\r\n    this._complex.forEachAtom((atom) => {\r\n      if (includesAtom(atom, selRule)) {\r\n        center.add(atom.position)\r\n        count++\r\n      }\r\n    })\r\n    if (count === 0) {\r\n      return false\r\n    }\r\n    center.divideScalar(count)\r\n    center.applyMatrix4(this.matrix)\r\n    return true\r\n  }\r\n\r\n  needsRebuild() {\r\n    if (this._reprListChanged) {\r\n      return true\r\n    }\r\n    const reprList = this._reprList\r\n    for (let i = 0, n = reprList.length; i < n; ++i) {\r\n      const repr = reprList[i]\r\n      if (repr.needsRebuild) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Rebuild molecule geometry asynchronously.\r\n   */\r\n  rebuild() {\r\n    const self = this\r\n\r\n    // Destroy current geometry\r\n    gfxutils.clearTree(this)\r\n\r\n    return new Promise((resolve) => {\r\n      // Nothing to do?\r\n      const complex = self._complex\r\n      if (!complex) {\r\n        resolve()\r\n        return\r\n      }\r\n\r\n      let errorOccured = false\r\n      setTimeout(() => {\r\n        console.time('build')\r\n        const reprList = self._reprList\r\n        const palette = palettes.get(settings.now.palette) || palettes.first\r\n        let hasGeometry = false\r\n        for (let i = 0, n = reprList.length; i < n; ++i) {\r\n          const repr = reprList[i]\r\n          repr.colorer.palette = palette\r\n\r\n          if (repr.needsRebuild) {\r\n            repr.reset()\r\n\r\n            try {\r\n              repr.buildGeometry(complex)\r\n            } catch (e) {\r\n              if (e instanceof utils.OutOfMemoryError) {\r\n                repr.needsRebuild = false\r\n                repr.reset()\r\n                logger.error(\r\n                  `Not enough memory to build geometry for representation ${\r\n                    repr.index + 1\r\n                  }`\r\n                )\r\n                errorOccured = true\r\n              } else {\r\n                throw e\r\n              }\r\n            }\r\n\r\n            if (DEBUG && !errorOccured) {\r\n              logger.debug(\r\n                `Triangles count: ${meshutils.countTriangles(repr.geo)}`\r\n              )\r\n            }\r\n          }\r\n\r\n          hasGeometry =\r\n            errorOccured ||\r\n            hasGeometry ||\r\n            gfxutils.groupHasGeometryToRender(repr.geo)\r\n\r\n          if (repr.geo) {\r\n            self.add(repr.geo)\r\n          }\r\n        }\r\n\r\n        self._reprListChanged = false\r\n\r\n        console.timeEnd('build')\r\n        resolve()\r\n      }, 10)\r\n    })\r\n  }\r\n\r\n  setNeedsRebuild() {\r\n    // invalidate all representations\r\n    const reprList = this._reprList\r\n    for (let i = 0, n = reprList.length; i < n; ++i) {\r\n      reprList[i].needsRebuild = true\r\n    }\r\n  }\r\n\r\n  rebuildSelectionGeometry() {\r\n    const mask = 1 << this._selectionBit\r\n\r\n    gfxutils.clearTree(this._selectionGeometry)\r\n\r\n    for (let i = 0, n = this._reprList.length; i < n; ++i) {\r\n      const repr = this._reprList[i]\r\n      const sg = repr.buildSelectionGeometry(mask)\r\n      if (!sg) {\r\n        continue\r\n      }\r\n\r\n      this._selectionGeometry.add(sg)\r\n      for (let j = 0; j < sg.children.length; j++) {\r\n        const m = sg.children[j]\r\n\r\n        // copy component transform (that's not applied yet)\r\n        // TODO make this code obsolete, accessing editor is bad\r\n        if (this._editor && this._editor._componentTransforms) {\r\n          const t = this._editor._componentTransforms[m._component._index]\r\n          if (t) {\r\n            m.position.copy(t.position)\r\n            m.quaternion.copy(t.quaternion)\r\n          }\r\n        }\r\n      }\r\n\r\n      gfxutils.applySelectionMaterial(sg)\r\n    }\r\n  }\r\n\r\n  _buildSelectorFromSortedLists(atoms, residues, chains) {\r\n    const complex = this._complex\r\n\r\n    function optimizeList(list) {\r\n      const result = []\r\n      let k = 0\r\n      let first = NaN\r\n      let last = NaN\r\n      for (let i = 0, n = list.length; i < n; ++i) {\r\n        const value = list[i]\r\n        if (value === last + 1) {\r\n          last = value\r\n        } else {\r\n          if (!Number.isNaN(first)) {\r\n            result[k++] = new selectors.Range(first, last)\r\n          }\r\n          first = last = value\r\n        }\r\n      }\r\n      if (!Number.isNaN(first)) {\r\n        result[k] = new selectors.Range(first, last)\r\n      }\r\n      return result\r\n    }\r\n\r\n    let expression = null\r\n    if (chains.length === complex._chains.length) {\r\n      expression = selectors.all()\r\n    } else {\r\n      let selector\r\n      if (chains.length > 0) {\r\n        selector = selectors.chain(chains)\r\n        expression = expression ? selectors.or(expression, selector) : selector // NOSONAR\r\n      }\r\n      if (Object.keys(residues).length > 0) {\r\n        for (const ch in residues) {\r\n          if (residues.hasOwnProperty(ch)) {\r\n            selector = selectors.and(\r\n              selectors.chain(ch),\r\n              selectors.residx(optimizeList(residues[ch]))\r\n            )\r\n            expression = expression\r\n              ? selectors.or(expression, selector)\r\n              : selector\r\n          }\r\n        }\r\n      }\r\n      if (atoms.length > 0) {\r\n        selector = selectors.serial(optimizeList(atoms))\r\n        expression = expression ? selectors.or(expression, selector) : selector\r\n      }\r\n\r\n      if (!expression) {\r\n        expression = selectors.none()\r\n      }\r\n    }\r\n\r\n    return expression\r\n  }\r\n\r\n  buildSelectorFromMask(mask) {\r\n    const complex = this._complex\r\n    const chains = []\r\n    const residues = {}\r\n    const atoms = []\r\n\r\n    complex.forEachChain((chain) => {\r\n      if (chain._mask & mask) {\r\n        chains.push(chain._name)\r\n      }\r\n    })\r\n\r\n    complex.forEachResidue((residue) => {\r\n      if (residue._mask & mask && !(residue._chain._mask & mask)) {\r\n        const c = residue._chain._name\r\n        if (!(c in residues)) {\r\n          residues[c] = [residue._index]\r\n        } else {\r\n          residues[c].push(residue._index)\r\n        }\r\n      }\r\n    })\r\n\r\n    complex.forEachAtom((atom) => {\r\n      if (atom.mask & mask && !(atom.residue._mask & mask)) {\r\n        atoms.push(atom.serial)\r\n      }\r\n    })\r\n\r\n    return this._buildSelectorFromSortedLists(atoms, residues, chains)\r\n  }\r\n\r\n  forSelectedResidues(process) {\r\n    const selectionMask = 1 << this._selectionBit\r\n    this._complex.forEachResidue((residue) => {\r\n      if (residue._mask & selectionMask) {\r\n        process(residue)\r\n      }\r\n    })\r\n  }\r\n\r\n  beginComponentEdit() {\r\n    if (this._editor) {\r\n      return null\r\n    }\r\n\r\n    const editor = new ComplexVisualEdit.ComponentEditor(this)\r\n    if (!editor.begin()) {\r\n      return null\r\n    }\r\n\r\n    this._editor = editor\r\n    return editor\r\n  }\r\n\r\n  beginFragmentEdit() {\r\n    if (this._editor) {\r\n      return null\r\n    }\r\n\r\n    const editor = new ComplexVisualEdit.FragmentEditor(this)\r\n    if (!editor.begin()) {\r\n      return null\r\n    }\r\n\r\n    this._editor = editor\r\n    return editor\r\n  }\r\n\r\n  // should only be called by editors\r\n  finalizeEdit() {\r\n    this._editor = null\r\n  }\r\n\r\n  setMaterialValues(values, needTraverse = false, process = undefined) {\r\n    for (let i = 0, n = this._reprList.length; i < n; ++i) {\r\n      const rep = this._reprList[i]\r\n      rep.material.setValues(values)\r\n      if (needTraverse) {\r\n        rep.geo.traverse((object) => {\r\n          if (object instanceof Mesh) {\r\n            object.material.setValues(values)\r\n\r\n            if (process !== undefined) {\r\n              process(object)\r\n            }\r\n\r\n            object.material.needsUpdate = true\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  setUberOptions(values) {\r\n    for (let i = 0, n = this._reprList.length; i < n; ++i) {\r\n      const rep = this._reprList[i]\r\n      rep.material.setUberOptions(values)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Build selector that contains all atoms within given distance from group of atoms\r\n   * @param {Selector} selector - selector describing source group of atoms\r\n   * @param {number} radius - distance\r\n   * @returns {Selector} selector describing result group of atoms\r\n   */\r\n  within(selector, radius) {\r\n    const vw = this._complex.getVoxelWorld()\r\n    if (vw === null) {\r\n      return false\r\n    }\r\n\r\n    // mark atoms of the group as selected\r\n    const selectionMask = 1 << this._selectionBit\r\n    this._complex.markAtoms(selector, selectionMask)\r\n\r\n    // mark all atoms within distance as selected\r\n    if (vw) {\r\n      vw.forEachAtomWithinDistFromMasked(\r\n        this._complex,\r\n        selectionMask,\r\n        Number(radius),\r\n        (atom) => {\r\n          atom.mask |= selectionMask\r\n        }\r\n      )\r\n    }\r\n\r\n    // update selection count\r\n    this._selectionCount = this._complex.countAtomsByMask(selectionMask)\r\n\r\n    // update secondary structure mask\r\n    this._complex.updateStructuresMask()\r\n\r\n    return this.buildSelectorFromMask(selectionMask)\r\n  }\r\n}\r\n// 32 bits = 30 bits for reps + 1 for selection + 1 for selection expansion\r\nComplexVisual.NUM_REPRESENTATION_BITS = 30\r\n\r\nexport default ComplexVisual\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\nimport vertexVolumeFaces from './VolumeFaces.vert'\r\nimport fragmentVolumeFaces from './VolumeFaces.frag'\r\nimport vertexVolume from './Volume.vert'\r\nimport fragmentVolume from './Volume.frag'\r\nimport vertexFarPlane from './VolumeFarPlane.vert'\r\nimport fragmentFarPlane from './VolumeFarPlane.frag'\r\nimport settings from '../../settings'\r\nimport {\r\n  BackSide,\r\n  FrontSide,\r\n  Matrix4,\r\n  ShaderMaterial,\r\n  UniformsUtils,\r\n  Vector2,\r\n  Vector3\r\n} from 'three'\r\n\r\nconst volumeUniforms = UniformsUtils.merge([\r\n  {\r\n    volumeDim: { type: 'v3', value: new Vector3(512, 512, 512) },\r\n    tileTex: { type: 't', value: null },\r\n    tileTexSize: { type: 'v2', value: new Vector2(512, 512) },\r\n    tileStride: { type: 'v2', value: new Vector2(512, 512) },\r\n\r\n    boxAngles: { type: 'v3', value: new Vector3(1, 1, 1) },\r\n    delta: { type: 'v3', value: new Vector3(0, 0, 0) },\r\n\r\n    _isoLevel0: { type: 'v2', value: new Vector3(0.5, 0.75, 1.0) },\r\n    _flipV: { type: 'f', value: 0.0 },\r\n    _BFLeft: { type: 't', value: null },\r\n    _BFRight: { type: 't', value: null },\r\n    _FFLeft: { type: 't', value: null },\r\n    _FFRight: { type: 't', value: null },\r\n    _WFFLeft: { type: 't', value: null },\r\n    _WFFRight: { type: 't', value: null }\r\n  }\r\n])\r\n\r\nfunction overrideUniforms(params, defUniforms) {\r\n  const uniforms = UniformsUtils.clone(defUniforms)\r\n  for (const p in params) {\r\n    if (uniforms.hasOwnProperty(p)) {\r\n      uniforms[p].value = params[p]\r\n    }\r\n  }\r\n  return uniforms\r\n}\r\n\r\nfunction facesPosMaterialParams(params, sideType) {\r\n  return {\r\n    uniforms: overrideUniforms(params, {}),\r\n    vertexShader: vertexVolumeFaces,\r\n    fragmentShader: fragmentVolumeFaces,\r\n    transparent: false,\r\n    depthTest: false,\r\n    depthWrite: false,\r\n    side: sideType\r\n  }\r\n}\r\n\r\nclass BackFacePosMaterial extends ShaderMaterial {\r\n  constructor(params) {\r\n    const backFaceParams = facesPosMaterialParams(params, BackSide)\r\n    super(backFaceParams)\r\n  }\r\n}\r\n\r\nclass ShaderParams {\r\n  constructor(params, uniforms, vertexShader, fragmentShader) {\r\n    this.uniforms = overrideUniforms(params, uniforms)\r\n    this.vertexShader = vertexShader\r\n    this.fragmentShader = fragmentShader\r\n    this.transparent = false\r\n    this.depthTest = false\r\n    this.depthWrite = false\r\n    this.side = FrontSide\r\n  }\r\n}\r\n\r\nclass BackFacePosMaterialFarPlane extends ShaderMaterial {\r\n  constructor(params) {\r\n    const matUniforms = UniformsUtils.merge([\r\n      {\r\n        aspectRatio: { type: 'f', value: 0.0 },\r\n        farZ: { type: 'f', value: 0.0 },\r\n        tanHalfFOV: { type: 'f', value: 0.0 },\r\n        matWorld2Volume: { type: '4fv', value: new Matrix4() }\r\n      }\r\n    ])\r\n\r\n    const shaderParams = new ShaderParams(\r\n      params,\r\n      matUniforms,\r\n      vertexFarPlane,\r\n      fragmentFarPlane\r\n    )\r\n    super(shaderParams)\r\n  }\r\n}\r\n\r\nclass FrontFacePosMaterial extends ShaderMaterial {\r\n  constructor(params) {\r\n    const frontFaceParams = facesPosMaterialParams(params, FrontSide)\r\n    super(frontFaceParams)\r\n  }\r\n}\r\n\r\nclass VolumeMaterial extends ShaderMaterial {\r\n  constructor(params) {\r\n    const shaderParams = new ShaderParams(\r\n      params,\r\n      volumeUniforms,\r\n      vertexVolume,\r\n      fragmentVolume\r\n    )\r\n    shaderParams.transparent = true\r\n    shaderParams.depthTest = true\r\n\r\n    super(shaderParams)\r\n    this.updateDefines()\r\n  }\r\n\r\n  updateDefines() {\r\n    this.defines = {\r\n      ISO_MODE: settings.now.modes.VD.isoMode,\r\n      STEPS_COUNT:\r\n        settings.now.modes.VD.polyComplexity[settings.now.resolution] * 100\r\n    }\r\n    this.needsUpdate = true\r\n  }\r\n}\r\n\r\nexport default {\r\n  BackFacePosMaterial,\r\n  BackFacePosMaterialFarPlane,\r\n  FrontFacePosMaterial,\r\n  VolumeMaterial\r\n}\r\n",
		"import VolumeMaterial from './shaders/VolumeMaterial'\r\nimport settings from '../settings'\r\nimport {\r\n  BufferAttribute,\r\n  BufferGeometry,\r\n  Matrix4,\r\n  Mesh,\r\n  Plane,\r\n  Vector3,\r\n  Vector4\r\n} from 'three'\r\n\r\nclass VolumeMesh extends Mesh {\r\n  volumeInfo = {} // data for noise filter\r\n\r\n  constructor() {\r\n    const geo = new BufferGeometry()\r\n    super(geo)\r\n    this.clipPlane = new Plane()\r\n    const size = new Vector3(0.5, 0.5, 0.5)\r\n    this.size = size\r\n\r\n    this.cullFlag = [\r\n      true,\r\n      true,\r\n      true,\r\n      true,\r\n      true,\r\n      true,\r\n      true,\r\n      true,\r\n      false,\r\n      false,\r\n      false,\r\n      false,\r\n      false,\r\n      false\r\n    ]\r\n\r\n    this.faces = [\r\n      { indices: [], norm: new Vector3(0, 0, -1) },\r\n      { indices: [], norm: new Vector3(0, 0, 1) },\r\n      { indices: [], norm: new Vector3(0, -1, 0) },\r\n      { indices: [], norm: new Vector3(0, 1, 0) },\r\n      { indices: [], norm: new Vector3(-1, 0, 0) },\r\n      { indices: [], norm: new Vector3(1, 0, 0) },\r\n      { indices: [], norm: new Vector3(0, 0, 0) }\r\n    ]\r\n\r\n    this.vertices = [\r\n      new Vector3(-size.x, -size.y, -size.z),\r\n      new Vector3(-size.x, size.y, -size.z),\r\n      new Vector3(size.x, -size.y, -size.z),\r\n      new Vector3(size.x, size.y, -size.z),\r\n      new Vector3(-size.x, -size.y, size.z),\r\n      new Vector3(-size.x, size.y, size.z),\r\n      new Vector3(size.x, -size.y, size.z),\r\n      new Vector3(size.x, size.y, size.z),\r\n      new Vector3(0.0, 0.0, 0.0), // Placeholder for section\r\n      new Vector3(0.0, 0.0, 0.0),\r\n      new Vector3(0.0, 0.0, 0.0),\r\n      new Vector3(0.0, 0.0, 0.0),\r\n      new Vector3(0.0, 0.0, 0.0),\r\n      new Vector3(0.0, 0.0, 0.0)\r\n    ]\r\n\r\n    geo.setAttribute(\r\n      'position',\r\n      new BufferAttribute(new Float32Array(this.vertices.length * 3), 3)\r\n    )\r\n\r\n    this.name = 'VolumeMesh'\r\n  }\r\n\r\n  static _corners = [\r\n    // x, y, z, edge1, edge2, edge3\r\n    [-1, -1, -1, 0, 4, 8],\r\n    [1, -1, -1, 0, 5, 9],\r\n    [1, 1, -1, 1, 5, 10],\r\n    [-1, 1, -1, 1, 4, 11],\r\n    [-1, -1, 1, 2, 6, 8],\r\n    [1, -1, 1, 2, 7, 9],\r\n    [1, 1, 1, 3, 7, 10],\r\n    [-1, 1, 1, 3, 6, 11]\r\n  ]\r\n\r\n  static _edges = [\r\n    // corner1, corner2, center_x, center_y, center_z\r\n    [0, 1, 0, -1, -1],\r\n    [2, 3, 0, 1, -1],\r\n    [4, 5, 0, -1, 1],\r\n    [6, 7, 0, 1, 1],\r\n    [0, 3, -1, 0, -1],\r\n    [1, 2, 1, 0, -1],\r\n    [4, 7, -1, 0, 1],\r\n    [5, 6, 1, 0, 1],\r\n    [0, 4, -1, -1, 0],\r\n    [1, 5, 1, -1, 0],\r\n    [2, 6, -1, 1, 0],\r\n    [3, 7, 1, 1, 0]\r\n  ]\r\n\r\n  static _edgeIntersections = (function () {\r\n    const edgeIntersections = []\r\n    for (let j = 0; j < 12; ++j) {\r\n      edgeIntersections.push(new Vector3())\r\n    }\r\n    return edgeIntersections\r\n  })()\r\n\r\n  _updateVertices() {\r\n    // Algorithm:\r\n    // 1. Get plane parameters\r\n    // 2. Compute culling flags for all vertices\r\n    // 3. If intersection occurs => compute from 3 to 6 intersection points\r\n    const corners = VolumeMesh._corners\r\n    const edges = VolumeMesh._edges\r\n    const edgeIntersections = VolumeMesh._edgeIntersections\r\n\r\n    let i\r\n\r\n    const norm = this.clipPlane.normal\r\n    const D = this.clipPlane.constant\r\n\r\n    const vert = this.vertices\r\n    const { size } = this\r\n\r\n    const cornerMark = [0, 0, 0, 0, 0, 0, 0, 0]\r\n    const edgeMark = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n\r\n    const curEdge = new Vector3()\r\n    let curEdgeInter = null\r\n\r\n    function CheckX() {\r\n      if (norm.x === 0) return 0\r\n      const x = -(norm.dot(curEdge) + D) / norm.x\r\n      if (-size.x <= x && x <= size.x) {\r\n        curEdgeInter.set(x, curEdge.y, curEdge.z)\r\n        if (x === size.x) return 2\r\n        if (x === -size.x) return -2\r\n        return 1\r\n      }\r\n      return 0\r\n    }\r\n\r\n    function CheckY() {\r\n      if (norm.y === 0) return 0\r\n      const y = -(norm.dot(curEdge) + D) / norm.y\r\n      if (-size.y <= y && y <= size.y) {\r\n        curEdgeInter.set(curEdge.x, y, curEdge.z)\r\n        if (y === size.y) return 2\r\n        if (y === -size.y) return -2\r\n        return 1\r\n      }\r\n      return 0\r\n    }\r\n\r\n    function CheckZ() {\r\n      if (norm.z === 0) return 0\r\n      const z = -(norm.dot(curEdge) + D) / norm.z\r\n      if (-size.z <= z && z <= size.z) {\r\n        curEdgeInter.set(curEdge.x, curEdge.y, z)\r\n        if (z === size.z) return 2\r\n        if (z === -size.z) return -2\r\n        return 1\r\n      }\r\n      return 0\r\n    }\r\n\r\n    // for each edge\r\n    for (let curEdgeIdx = 0; curEdgeIdx < 12; ++curEdgeIdx) {\r\n      const curEdgeSource = edges[curEdgeIdx]\r\n      curEdgeInter = edgeIntersections[curEdgeIdx]\r\n\r\n      curEdge.set(curEdgeSource[2], curEdgeSource[3], curEdgeSource[4])\r\n      curEdge.multiply(size)\r\n\r\n      // calculate intersection point\r\n      let flag = 0\r\n      if (curEdgeSource[2] === 0) flag = CheckX()\r\n      if (curEdgeSource[3] === 0) flag = CheckY()\r\n      if (curEdgeSource[4] === 0) flag = CheckZ()\r\n\r\n      // mark corresponding corner (if plane cuts through one)\r\n      if (flag === -2) {\r\n        cornerMark[curEdgeSource[0]] = 1\r\n      } else if (flag === 2) {\r\n        cornerMark[curEdgeSource[1]] = 1\r\n      } else if (flag === 0) {\r\n        // edge is not intersected by the plane (doesn't produce a vertex)\r\n        edgeMark[curEdgeIdx] = 0\r\n      }\r\n    }\r\n\r\n    const face = {\r\n      indices: [],\r\n      norm: norm.clone().negate()\r\n    }\r\n\r\n    let nextVertex = 8\r\n\r\n    // for each marked corner\r\n    for (i = 0; i < 8; ++i) {\r\n      if (cornerMark[i] === 1) {\r\n        // add corner as vertex to the face\r\n        vert[nextVertex]\r\n          .set(corners[i][0], corners[i][1], corners[i][2])\r\n          .multiply(size)\r\n        face.indices.push(nextVertex++)\r\n        // skip adjacent edges\r\n        edgeMark[corners[i][3]] = 0\r\n        edgeMark[corners[i][4]] = 0\r\n        edgeMark[corners[i][5]] = 0\r\n      }\r\n    }\r\n\r\n    // for each edge that has internal intersection\r\n    for (i = 0; i < 12; ++i) {\r\n      if (edgeMark[i] === 1) {\r\n        // add intersection point as vertex to the face\r\n        vert[nextVertex].copy(edgeIntersections[i])\r\n        face.indices.push(nextVertex++)\r\n      }\r\n    }\r\n\r\n    this.faces[6] = face\r\n\r\n    const diff = new Vector3()\r\n    const coplanarPoint = new Vector3()\r\n    this.clipPlane.coplanarPoint(coplanarPoint)\r\n    for (i = 0; i < vert.length; ++i) {\r\n      this.cullFlag[i] = false\r\n      if (i < 8) {\r\n        // corners should be culled by clipping plane\r\n        diff.subVectors(vert[i], coplanarPoint)\r\n        this.cullFlag[i] = norm.dot(diff) >= 0.0\r\n      } else if (i < 8 + face.indices.length) {\r\n        // cross section vertices don't get culled\r\n        this.cullFlag[i] = true\r\n      }\r\n    }\r\n\r\n    // write data to vertex buffer\r\n    const positions = this.geometry.getAttribute('position')\r\n    let idx = 0\r\n    for (i = 0; i < vert.length; ++i) {\r\n      positions.array[idx++] = vert[i].x\r\n      positions.array[idx++] = vert[i].y\r\n      positions.array[idx++] = vert[i].z\r\n    }\r\n    positions.needsUpdate = true\r\n  }\r\n\r\n  _collectVertices(face, filter) {\r\n    let i\r\n    const vert = this.vertices\r\n    face.indices = []\r\n    for (i = 0; i < vert.length; ++i) {\r\n      if (this.cullFlag[i] && filter(vert[i])) {\r\n        face.indices.push(i)\r\n      }\r\n    }\r\n  }\r\n\r\n  _sortIndices(face, right) {\r\n    let i\r\n    let j\r\n    const vert = this.vertices\r\n    const angle = []\r\n\r\n    const dir = new Vector3()\r\n    for (i = 1; i < face.indices.length; ++i) {\r\n      dir.subVectors(vert[face.indices[i]], vert[face.indices[0]])\r\n      dir.normalize()\r\n      dir.cross(right)\r\n      dir.negate()\r\n      angle[i] = face.norm.dot(dir)\r\n    }\r\n\r\n    // Exchange sort\r\n    for (i = 1; i < face.indices.length - 1; ++i) {\r\n      for (j = i + 1; j < face.indices.length; ++j) {\r\n        if (angle[j] < angle[i]) {\r\n          // swap\r\n          let t = angle[i]\r\n          angle[i] = angle[j]\r\n          angle[j] = t\r\n\r\n          t = face.indices[i]\r\n          face.indices[i] = face.indices[j]\r\n          face.indices[j] = t\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _updateIndices() {\r\n    // Algorithm:\r\n    // 1. Get plane vertices (from 3 to 6 vertices)\r\n    // 2. Get \"right\" vector in plane\r\n    // 3. Sort vertices using Graham-like method\r\n    // 4. Create indices\r\n\r\n    let i\r\n    let faceIdx\r\n    let face\r\n    const vert = this.vertices\r\n    const { size } = this\r\n\r\n    this._collectVertices(this.faces[0], (vertex) => vertex.z === -size.z)\r\n    this._collectVertices(this.faces[1], (vertex) => vertex.z === size.z)\r\n    this._collectVertices(this.faces[2], (vertex) => vertex.y === -size.y)\r\n    this._collectVertices(this.faces[3], (vertex) => vertex.y === size.y)\r\n    this._collectVertices(this.faces[4], (vertex) => vertex.x === -size.x)\r\n    this._collectVertices(this.faces[5], (vertex) => vertex.x === size.x)\r\n\r\n    const vCenter = new Vector3()\r\n    const vRight = new Vector3()\r\n    const vDir = new Vector3()\r\n\r\n    for (faceIdx = 0; faceIdx < this.faces.length; ++faceIdx) {\r\n      face = this.faces[faceIdx]\r\n\r\n      if (face.indices.length === 0) continue\r\n\r\n      vCenter.set(0, 0, 0)\r\n      for (i = 0; i < face.indices.length; ++i) {\r\n        vCenter.add(vert[face.indices[i]])\r\n      }\r\n      vCenter.multiplyScalar(1.0 / face.indices.length)\r\n      vRight.subVectors(vert[face.indices[0]], vCenter)\r\n      vRight.normalize()\r\n\r\n      const rightProj = []\r\n      for (i = 0; i < face.indices.length; ++i) {\r\n        vDir.subVectors(vert[face.indices[i]], vCenter)\r\n        rightProj[i] = vDir.dot(vRight)\r\n      }\r\n      for (i = 1; i < face.indices.length; ++i) {\r\n        if (rightProj[i] < rightProj[0]) {\r\n          // swap\r\n          let t = rightProj[0]\r\n          rightProj[0] = rightProj[i]\r\n          rightProj[i] = t\r\n          ;[t] = face.indices\r\n          face.indices[0] = face.indices[i]\r\n          face.indices[i] = t\r\n        }\r\n      }\r\n\r\n      this._sortIndices(face, vRight)\r\n    }\r\n\r\n    let numIndices = 0\r\n    for (faceIdx = 0; faceIdx < this.faces.length; ++faceIdx) {\r\n      face = this.faces[faceIdx]\r\n      if (face.indices.length >= 3) {\r\n        numIndices += 3 * (face.indices.length - 2)\r\n      }\r\n    }\r\n    let offset = 0\r\n    const indices = new Uint16Array(numIndices)\r\n    for (faceIdx = 0; faceIdx < this.faces.length; ++faceIdx) {\r\n      face = this.faces[faceIdx]\r\n      for (i = 0; i < face.indices.length - 2; ++i) {\r\n        indices[offset] = face.indices[0] // eslint-disable-line prefer-destructuring\r\n        indices[offset + 1] = face.indices[i + 1]\r\n        indices[offset + 2] = face.indices[i + 2]\r\n        offset += 3\r\n      }\r\n    }\r\n\r\n    this.geometry.setIndex(new BufferAttribute(indices, 1))\r\n  }\r\n\r\n  setDataSource(dataSource) {\r\n    const vm = new VolumeMaterial.VolumeMaterial()\r\n    const dim = dataSource.getDimensions()\r\n    const stride = dataSource.getTiledTextureStride()\r\n    const texture = dataSource.buildTiledTexture()\r\n    const bbox = dataSource.getBox()\r\n    vm.uniforms.volumeDim.value.set(dim[0], dim[1], dim[2])\r\n    vm.uniforms.tileTex.value = texture\r\n    vm.uniforms.tileTexSize.value.set(texture.image.width, texture.image.height)\r\n    vm.uniforms.tileStride.value.set(stride[0], stride[1])\r\n    Object.assign(this.volumeInfo, dataSource.getVolumeInfo())\r\n\r\n    const volInfo = this.volumeInfo\r\n    vm.uniforms.delta.value.copy(volInfo.delta)\r\n    vm.uniforms.boxAngles.value.set(\r\n      volInfo.obtuseAngle[0],\r\n      volInfo.obtuseAngle[1],\r\n      volInfo.obtuseAngle[2]\r\n    )\r\n\r\n    this.material = vm\r\n\r\n    bbox.getSize(this.scale)\r\n    bbox.getCenter(this.position)\r\n  }\r\n\r\n  _updateIsoLevel() {\r\n    const { kSigma, kSigmaMed, kSigmaMax } = settings.now.modes.VD\r\n    const volInfo = this.volumeInfo\r\n    const mean = volInfo.dmean - volInfo.dmin\r\n    const span = volInfo.dmax - volInfo.dmin\r\n    const level = (k) => (mean + k * volInfo.sd) / span\r\n    this.material.uniforms._isoLevel0.value.set(\r\n      level(kSigma),\r\n      level(kSigmaMed),\r\n      level(kSigmaMax)\r\n    )\r\n  }\r\n\r\n  static _nearClipPlaneOffset = 0.2\r\n\r\n  static _pos = new Vector3()\r\n\r\n  static _norm = new Vector3()\r\n\r\n  static _norm4D = new Vector4()\r\n\r\n  static _matrixWorldToLocal = new Matrix4()\r\n\r\n  static _clipPlane = new Plane()\r\n\r\n  rebuild(camera) {\r\n    const nearClipPlaneOffset = VolumeMesh._nearClipPlaneOffset\r\n    const pos = VolumeMesh._pos\r\n    const norm = VolumeMesh._norm\r\n    const norm4D = VolumeMesh._norm4D\r\n    const matrixWorldToLocal = VolumeMesh._matrixWorldToLocal\r\n    const clipPlane = VolumeMesh._clipPlane\r\n\r\n    this._updateIsoLevel()\r\n\r\n    // get clip plane in local space\r\n    camera.getWorldDirection(norm)\r\n    camera.getWorldPosition(pos)\r\n    pos.addScaledVector(norm, camera.near + nearClipPlaneOffset)\r\n\r\n    // transform pos to local CS\r\n    matrixWorldToLocal.copy(this.matrixWorld).invert()\r\n    pos.applyMatrix4(matrixWorldToLocal)\r\n\r\n    // transform norm to local CS\r\n    norm4D.set(norm.x, norm.y, norm.z, 0.0) // NOTE: use homogeneous norm for proper transformation\r\n    norm4D.applyMatrix4(matrixWorldToLocal)\r\n    norm.copy(norm4D)\r\n    norm.normalize()\r\n\r\n    clipPlane.setFromNormalAndCoplanarPoint(norm, pos)\r\n\r\n    if (!this.clipPlane.equals(clipPlane)) {\r\n      this.clipPlane = clipPlane.clone()\r\n      this._updateVertices()\r\n      this._updateIndices()\r\n    }\r\n  }\r\n}\r\n\r\nexport default VolumeMesh\r\n",
		"import gfxutils from './gfxutils'\r\nimport {\r\n  BufferAttribute,\r\n  BufferGeometry,\r\n  LineBasicMaterial,\r\n  LineSegments,\r\n  Vector3\r\n} from 'three'\r\n\r\nfunction _flattenArray(input) {\r\n  const n = input.length\r\n  const output = new Float32Array(n * 3)\r\n  for (let i = 0; i < n; ++i) {\r\n    const j = 3 * i\r\n    const v = input[i]\r\n    output[j] = v.x\r\n    output[j + 1] = v.y\r\n    output[j + 2] = v.z\r\n  }\r\n  return output\r\n}\r\n\r\nclass VolumeBounds {\r\n  static _projectionTable = {\r\n    // corresponds between (origin axes and angles between them) and between saving vector coordinates\r\n    XY: ['x', 2],\r\n    XZ: ['y', 1],\r\n    YZ: ['z', 0]\r\n  }\r\n\r\n  constructor(bBox, volInfo) {\r\n    const { delta } = volInfo // {x: XY, y : XZ, z: YZ}\r\n    const { obtuseAngle } = volInfo // 1 - obtuse, 0 - acute\r\n\r\n    const bSize = new Vector3()\r\n    bBox.getSize(bSize)\r\n    bSize.multiplyScalar(0.5)\r\n\r\n    const offsetVert = this._getBaseVertices(delta, obtuseAngle)\r\n\r\n    const geometry = new BufferGeometry()\r\n    const vertices = []\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      vertices.push(offsetVert[i].clone().multiply(bSize))\r\n      vertices.push(offsetVert[(i + 1) % 4].clone().multiply(bSize))\r\n    }\r\n    const translation = new Vector3(2 * bSize.x * (1 - delta.x - delta.y), 0, 0)\r\n    for (let i = 0; i < 8; i++) {\r\n      vertices.push(vertices[i].clone().add(translation))\r\n    }\r\n    for (let i = 0; i < 4; i++) {\r\n      vertices.push(vertices[i * 2].clone())\r\n      vertices.push(vertices[i * 2 + 8].clone())\r\n    }\r\n    const center = new Vector3()\r\n    bBox.getCenter(center)\r\n    vertices.forEach((vertex) => vertex.add(center)) // pivot shift\r\n\r\n    const flatVertices = _flattenArray(vertices)\r\n    geometry.setAttribute('position', new BufferAttribute(flatVertices, 3))\r\n\r\n    this._lines = new LineSegments(\r\n      geometry,\r\n      new LineBasicMaterial({ color: 0xffffff })\r\n    )\r\n    this._lines.layers.set(gfxutils.LAYERS.VOLUME)\r\n  }\r\n\r\n  // Set one edge (4 points) of frame, from which with parallel transfer  the rest of the frame points can be obtained\r\n  _getBaseVertices(delta, obtuseAngle) {\r\n    const projTable = VolumeBounds._projectionTable\r\n\r\n    const proj = (index, inv) => {\r\n      // tricky function to take account of projections: their position(related to box) and sign\r\n      const currDelta = delta[projTable[index][0]]\r\n      const angleValue =\r\n        -0.5 * (inv - 1) + inv * obtuseAngle[projTable[index][1]] // inv = 1: alpha; inv = -1: 1 - alpha\r\n      return angleValue * currDelta\r\n    }\r\n\r\n    const offsetVert = [\r\n      new Vector3(\r\n        -1 + 2 * (proj('XZ', 1) + proj('XY', 1)),\r\n        -1 + 2 * proj('YZ', 1),\r\n        -1\r\n      ),\r\n      new Vector3(\r\n        -1 + 2 * (proj('XZ', -1) + proj('XY', 1)),\r\n        -1 + 2 * proj('YZ', -1),\r\n        1\r\n      ),\r\n      new Vector3(\r\n        -1 + 2 * (proj('XZ', -1) + proj('XY', -1)),\r\n        1 - 2 * proj('YZ', 1),\r\n        1\r\n      ),\r\n      new Vector3(\r\n        -1 + 2 * (proj('XZ', 1) + proj('XY', -1)),\r\n        1 - 2 * proj('YZ', -1),\r\n        -1\r\n      )\r\n    ]\r\n\r\n    return offsetVert\r\n  }\r\n\r\n  getMesh() {\r\n    return this._lines\r\n  }\r\n}\r\n\r\nexport default VolumeBounds\r\n",
		"import VolumeMaterial from './shaders/VolumeMaterial'\r\nimport meshes from './meshes/meshes'\r\nimport gfxutils from './gfxutils'\r\nimport {\r\n  BufferAttribute,\r\n  BufferGeometry,\r\n  MathUtils,\r\n  Matrix4,\r\n  Vector4\r\n} from 'three'\r\n\r\n// Thes geometric far plane is required for correct filling in the BFTexture in case, when far plane cuts the volume\r\n// cube. In cut place of cube there is no correct data in BFTexture and volume rendering integral is calculated\r\n// with errors.\r\n// Far plane cuts the cube in case of large volume scale (zoom), because farplane doesn't change\r\nclass VolumeFarPlane {\r\n  // create plane with unit corners coords (for future rescale in vshader according to camera properties)\r\n  constructor(volume, width, height) {\r\n    const planeGeo = this._initPlaneGeo(width, height)\r\n\r\n    const mat = new VolumeMaterial.BackFacePosMaterialFarPlane()\r\n    this._plane = new meshes.Mesh(planeGeo, mat)\r\n    this._plane.frustumCulled = false\r\n    this._plane.doubleSided = true\r\n    const matWorldToVolume = new Matrix4()\r\n\r\n    this._plane._onBeforeRender = function (\r\n      _renderer,\r\n      _scene,\r\n      camera,\r\n      _geometry,\r\n      _material,\r\n      _group\r\n    ) {\r\n      const { material } = this\r\n      if (!volume || !material) {\r\n        return\r\n      }\r\n\r\n      // count point in world at farplane place\r\n      const planeCamPos = new Vector4(0, 0, -(camera.far - 0.1), 1)\r\n      planeCamPos.applyMatrix4(camera.matrixWorld)\r\n\r\n      // recalc matrices to make plane be placed as farplane in the World relative to camera\r\n      this.matrix.identity()\r\n      this.matrix.makeTranslation(planeCamPos.x, planeCamPos.y, planeCamPos.z)\r\n      this.matrixWorld.copy(this.matrix)\r\n      this.modelViewMatrix.multiplyMatrices(\r\n        camera.matrixWorldInverse,\r\n        this.matrixWorld\r\n      )\r\n      this.normalMatrix.getNormalMatrix(this.modelViewMatrix)\r\n\r\n      // build worldToVolume matrix to transform plane into volumeCS (volumeCS coords are written to BackFaceTexture)\r\n      const volumeMatrix = volume.matrixWorld\r\n      matWorldToVolume.copy(volumeMatrix).invert()\r\n\r\n      // update material props\r\n      material.uniforms.aspectRatio.value = camera.aspect\r\n      material.uniforms.farZ.value = camera.far\r\n      material.uniforms.tanHalfFOV.value = Math.tan(\r\n        MathUtils.DEG2RAD * 0.5 * camera.fov\r\n      )\r\n      material.uniforms.matWorld2Volume.value = matWorldToVolume\r\n    }\r\n\r\n    // set it to special layer to draw only into BFTexture\r\n    this._plane.layers.set(gfxutils.LAYERS.VOLUME_BFPLANE)\r\n  }\r\n\r\n  _initPlaneGeo(width, height) {\r\n    const planeGeo = new BufferGeometry()\r\n\r\n    width = width || 1\r\n    height = height || 1\r\n\r\n    const vertices = new Float32Array([\r\n      -0.5 * width,\r\n      0.5 * height,\r\n      0,\r\n      0.5 * width,\r\n      0.5 * height,\r\n      0,\r\n      -0.5 * width,\r\n      -0.5 * height,\r\n      0,\r\n      0.5 * width,\r\n      -0.5 * height,\r\n      0\r\n    ])\r\n\r\n    planeGeo.setAttribute('position', new BufferAttribute(vertices, 3))\r\n    planeGeo.setIndex([0, 2, 1, 2, 3, 1])\r\n\r\n    return planeGeo\r\n  }\r\n\r\n  getMesh() {\r\n    return this._plane\r\n  }\r\n}\r\n\r\nexport default VolumeFarPlane\r\n",
		"import VolumeMesh from './gfx/VolumeMesh'\r\nimport VolumeBounds from './gfx/VolumeBounds'\r\nimport VolumeFarPlane from './gfx/VolumeFarPlane'\r\nimport Visual from './Visual'\r\nimport settings from './settings'\r\nimport { Sphere } from 'three'\r\n\r\nclass VolumeVisual extends Visual {\r\n  constructor(name, dataSource) {\r\n    super(name, dataSource)\r\n    this._mesh = new VolumeMesh()\r\n    this._mesh.setDataSource(dataSource)\r\n    this.add(this._mesh)\r\n\r\n    this._frame = new VolumeBounds(\r\n      this.getBoundaries().boundingBox,\r\n      this._mesh.volumeInfo\r\n    )\r\n    this.add(this._frame.getMesh())\r\n    this.showFrame(settings.now.modes.VD.frame)\r\n\r\n    this._farPlane = new VolumeFarPlane(this._mesh, 2, 2)\r\n    this.add(this._farPlane.getMesh())\r\n  }\r\n\r\n  getBoundaries() {\r\n    const box = this._dataSource.getBox()\r\n    const sphere = new Sphere()\r\n    box.getBoundingSphere(sphere)\r\n\r\n    return {\r\n      boundingBox: box,\r\n      boundingSphere: sphere\r\n    }\r\n  }\r\n\r\n  getMesh() {\r\n    return this._mesh\r\n  }\r\n\r\n  showFrame(needShow) {\r\n    this._frame.getMesh().material.visible = needShow\r\n  }\r\n}\r\n\r\nexport default VolumeVisual\r\n",
		"import EntityList from '../../utils/EntityList'\r\n\r\n/**\r\n * A list of available loaders.\r\n * @extends EntityList\r\n */\r\nclass LoaderList extends EntityList {\r\n  /**\r\n   * Create a list of loaders.\r\n   * The loaders are indexed by supported source types (`.types` property of a Loader\r\n   * subclass).\r\n   * The loaders can be retrieved later by matching against specs (see {@link LoaderList#find}).\r\n   *\r\n   * @param {!Array<function(new:Loader)>=} someLoaders A list of {@link Loader} subclasses to\r\n   *   automatically register at creation time.\r\n   * @see LoaderList#register\r\n   */\r\n  constructor(someLoaders = []) {\r\n    super(someLoaders, ['types'])\r\n  }\r\n\r\n  /**\r\n   * Find a suitable loader for a source type.\r\n   *\r\n   * @param {Object} specs Loader specifications.\r\n   * @param {string=} specs.type Supported source type.\r\n   * @param {*=} specs.source Source to load from.\r\n   */\r\n  find(specs) {\r\n    let list = []\r\n    if (specs.type) {\r\n      list = this._dict.types[specs.type.toLowerCase()] || []\r\n    } else if (specs.source) {\r\n      return this._list.filter(\r\n        (SomeLoader) =>\r\n          SomeLoader.canProbablyLoad && SomeLoader.canProbablyLoad(specs.source)\r\n      )\r\n    }\r\n    return [...list]\r\n  }\r\n}\r\n\r\nexport default LoaderList\r\n",
		"import EventDispatcher from '../../utils/EventDispatcher'\r\nimport makeContextDependent from '../../utils/makeContextDependent'\r\n\r\nexport default class Loader extends EventDispatcher {\r\n  constructor(source, options) {\r\n    super()\r\n    this._source = source\r\n    this._options = options || {}\r\n    this._abort = false\r\n    this._agent = null\r\n  }\r\n\r\n  load() {\r\n    return Promise.reject(\r\n      new Error('Loading from this source is not implemented')\r\n    )\r\n  }\r\n\r\n  abort() {\r\n    this._abort = true\r\n    if (this._agent) {\r\n      this._agent.abort()\r\n    }\r\n  }\r\n\r\n  static extractName(_source) {\r\n    return undefined\r\n  }\r\n}\r\n\r\nmakeContextDependent(Loader.prototype)\r\n",
		"import Loader from './Loader'\r\n\r\nexport default class FileLoader extends Loader {\r\n  constructor(source, options) {\r\n    super(source, options)\r\n\r\n    options = this._options\r\n    this._binary = options.binary === true\r\n  }\r\n\r\n  load() {\r\n    return new Promise((resolve, reject) => {\r\n      if (this._abort) {\r\n        throw new Error('Loading aborted')\r\n      }\r\n\r\n      const blob = this._source\r\n      const reader = (this._agent = new FileReader())\r\n\r\n      reader.addEventListener('load', () => {\r\n        resolve(reader.result)\r\n      })\r\n      reader.addEventListener('error', () => {\r\n        reject(reader.error)\r\n      })\r\n      reader.addEventListener('abort', () => {\r\n        reject(new Error('Loading aborted'))\r\n      })\r\n      reader.addEventListener('progress', (event) => {\r\n        this.dispatchEvent(event)\r\n      })\r\n\r\n      if (this._binary) {\r\n        reader.readAsArrayBuffer(blob)\r\n      } else {\r\n        reader.readAsText(blob)\r\n      }\r\n    })\r\n  }\r\n\r\n  static canProbablyLoad(source) {\r\n    return (File && source instanceof File) || (Blob && source instanceof Blob)\r\n  }\r\n\r\n  static extractName(source) {\r\n    return source && source.name\r\n  }\r\n}\r\n\r\nFileLoader.types = ['file', 'blob']\r\n",
		"import { isString } from 'lodash'\r\nimport Loader from './Loader'\r\n\r\n// we don't need to detect all kinds of URLs, just the evident ones\r\nconst urlStartRegexp = /^(https?|ftp):\\/\\//i\r\n\r\nexport default class XHRLoader extends Loader {\r\n  constructor(source, options) {\r\n    super(source, options)\r\n\r\n    options = this._options\r\n    this._binary = options.binary === true\r\n  }\r\n\r\n  load() {\r\n    return new Promise((resolve, reject) => {\r\n      if (this._abort) {\r\n        throw new Error('Loading aborted')\r\n      }\r\n\r\n      const url = this._source\r\n      const request = (this._agent = new XMLHttpRequest())\r\n\r\n      request.addEventListener('load', () => {\r\n        if (request.status === 200) {\r\n          resolve(request.response)\r\n        } else {\r\n          reject(new Error(`HTTP ${request.status} while fetching ${url}`))\r\n        }\r\n      })\r\n      request.addEventListener('error', () => {\r\n        reject(new Error('HTTP request failed'))\r\n      })\r\n      request.addEventListener('abort', () => {\r\n        reject(new Error('Loading aborted'))\r\n      })\r\n      request.addEventListener('progress', (event) => {\r\n        this.dispatchEvent(event)\r\n      })\r\n\r\n      request.open('GET', url)\r\n      if (this._binary) {\r\n        request.responseType = 'arraybuffer'\r\n      } else {\r\n        request.responseType = 'text'\r\n      }\r\n      request.send()\r\n    })\r\n  }\r\n\r\n  static canProbablyLoad(source) {\r\n    return isString(source) && urlStartRegexp.test(source)\r\n  }\r\n\r\n  static extractName(source) {\r\n    if (source) {\r\n      const last =\r\n        (source.indexOf('?') + 1 ||\r\n          source.lastIndexOf('#') + 1 ||\r\n          source.length + 1) - 1\r\n      return source.slice(source.lastIndexOf('/', last) + 1, last)\r\n    }\r\n    return undefined\r\n  }\r\n}\r\n\r\nXHRLoader.types = ['url']\r\n",
		"import Loader from './Loader'\r\n\r\nexport default class ImmediateLoader extends Loader {\r\n  load() {\r\n    return new Promise((resolve) => {\r\n      if (this._abort) {\r\n        throw new Error('Loading aborted')\r\n      }\r\n      resolve(this._source)\r\n    })\r\n  }\r\n\r\n  static canProbablyLoad(_source) {\r\n    return false\r\n  }\r\n}\r\n\r\nImmediateLoader.types = ['immediate']\r\n",
		"import LoaderList from './loaders/LoaderList'\r\n\r\nimport FileLoader from './loaders/FileLoader'\r\nimport XHRLoader from './loaders/XHRLoader'\r\nimport ImmediateLoader from './loaders/ImmediateLoader'\r\n\r\nexport default new LoaderList([\r\n  // note: order might be important\r\n  FileLoader,\r\n  XHRLoader,\r\n  ImmediateLoader\r\n])\r\n",
		"import EntityList from '../../utils/EntityList'\r\n\r\n/**\r\n * A list of available parsers.\r\n * @extends EntityList\r\n */\r\nclass ParserList extends EntityList {\r\n  /**\r\n   * Create a list of parsers.\r\n   * The parsers are indexed by supported data formats and file extensions (`.formats` and\r\n   * `.extensions` properties of a Parser subclass).\r\n   * The parsers can be retrieved later by matching against specs (see {@link ParserList#find}).\r\n   *\r\n   * @param {!Array<function(new:Parser)>=} someParsers A list of {@link Parser} subclasses to\r\n   *   automatically register at creation time.\r\n   * @see ParserList#register\r\n   */\r\n  constructor(someParsers = []) {\r\n    super(someParsers, ['formats', 'extensions'])\r\n  }\r\n\r\n  /**\r\n   * Find a suitable parser for data.\r\n   *\r\n   * @param {Object} specs Parser specifications.\r\n   * @param {string=} specs.format Supported data format.\r\n   * @param {string=} specs.ext Supported filename extension.\r\n   * @param {*=} specs.data Data to parse.\r\n   */\r\n  find(specs) {\r\n    let list = []\r\n    if (specs.format) {\r\n      list = this._dict.formats[specs.format.toLowerCase()] || []\r\n    } else if (specs.ext) {\r\n      list = this._dict.extensions[specs.ext.toLowerCase()] || []\r\n    }\r\n    // autodetect only if no format is forced\r\n    if (list.length === 0 && !specs.format && specs.data) {\r\n      return this._list.filter(\r\n        (SomeParser) =>\r\n          SomeParser.canProbablyParse && SomeParser.canProbablyParse(specs.data)\r\n      )\r\n    }\r\n    return [...list]\r\n  }\r\n}\r\n\r\nexport default ParserList\r\n",
		"import makeContextDependent from '../../utils/makeContextDependent'\r\n\r\nexport default class Parser {\r\n  constructor(data, options) {\r\n    this._data = data\r\n    this._options = options || {}\r\n    this._abort = false\r\n  }\r\n\r\n  parseSync() {\r\n    throw new Error('Parsing this type of data is not implemented')\r\n  }\r\n\r\n  parse() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        try {\r\n          if (this._abort) {\r\n            return reject(new Error('Parsing aborted'))\r\n          }\r\n          return resolve(this.parseSync())\r\n        } catch (error) {\r\n          return reject(error)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  // only for volume Parsers\r\n  getModel() {\r\n    this.model._parseHeader(this._data)\r\n    return this.model\r\n  }\r\n\r\n  abort() {\r\n    this._abort = true\r\n  }\r\n}\r\n\r\nmakeContextDependent(Parser.prototype)\r\n",
		"/**\r\n * Parser helper for PDB tag \"REMARK 290\".\r\n *\r\n * @exports Remark290\r\n * @constructor\r\n */\r\nimport { Matrix4 } from 'three'\r\n\r\nclass Remark290 {\r\n  constructor() {\r\n    /** @type {Matrix4[]} */\r\n    this.matrices = []\r\n\r\n    /** @type {?Matrix4} */\r\n    this._matrix = null\r\n    /** @type {number} */\r\n    this._matrixIndex = -1\r\n  }\r\n\r\n  /**\r\n   * Parse a single line of a stream.\r\n   * @param {PDBStream} stream - stream to parse\r\n   */\r\n\r\n  parse(stream) {\r\n    /** @type {?Matrix4} */\r\n    let matrix = this._matrix\r\n\r\n    if (stream.readString(12, 18) === '  SMTRY') {\r\n      const matrixRow = stream.readCharCode(19) - 49 // convert '1', '2', or '3' -> 0, 1, or 2\r\n      const matrixData = stream.readString(20, 80).trim().split(/\\s+/)\r\n      const matrixIndex = parseInt(matrixData[0], 10)\r\n      if (this._matrix === null || matrixIndex !== this._matrixIndex) {\r\n        // TODO: assert(matrixIndex === this.matrices.length + 1);\r\n        this._matrixIndex = matrixIndex\r\n        this._matrix = matrix = new Matrix4()\r\n        this.matrices[this.matrices.length] = matrix\r\n      }\r\n\r\n      const { elements } = matrix\r\n      elements[matrixRow] = parseFloat(matrixData[1])\r\n      elements[matrixRow + 4] = parseFloat(matrixData[2])\r\n      elements[matrixRow + 8] = parseFloat(matrixData[3])\r\n      elements[matrixRow + 12] = parseFloat(matrixData[4])\r\n    }\r\n  }\r\n}\r\n\r\nRemark290.prototype.id = 290\r\n\r\nexport default Remark290\r\n",
		"import chem from '../../../chem'\r\nimport { Matrix4 } from 'three'\r\n\r\nconst { Assembly } = chem\r\n\r\n/**\r\n * Parser helper for PDB tag \"REMARK 350\".\r\n *\r\n * @exports Remark350\r\n * @constructor\r\n */\r\nclass Remark350 {\r\n  constructor(complex) {\r\n    /** @type {Complex} */\r\n    this._complex = complex\r\n    /** @type {Assembly[]} */\r\n    this.assemblies = []\r\n\r\n    /** @type {?Assembly} */\r\n    this._assembly = null\r\n    /** @type {?Matrix4} */\r\n    this._matrix = null\r\n    /** @type {number} */\r\n    this._matrixIndex = -1\r\n  }\r\n\r\n  /**\r\n   * Parse a single line of a stream.\r\n   * @param {PDBStream} stream - stream to parse\r\n   */\r\n\r\n  parse(stream) {\r\n    /** @type {?Assembly} */\r\n    let assembly = this._assembly\r\n    /** @type {?Matrix4} */\r\n    let matrix = this._matrix\r\n\r\n    if (assembly && stream.readString(12, 18) === '  BIOMT') {\r\n      const matrixRow = stream.readCharCode(19) - 49 // convert '1', '2', or '3' -> 0, 1, or 2\r\n      const matrixData = stream.readString(20, 80).trim().split(/\\s+/)\r\n      const matrixIndex = parseInt(matrixData[0], 10)\r\n      if (this._matrix === null || matrixIndex !== this._matrixIndex) {\r\n        // TODO: assert(matrixIndex === assembly.matrices.length + 1);\r\n        this._matrixIndex = matrixIndex\r\n        this._matrix = matrix = new Matrix4()\r\n        assembly.addMatrix(matrix)\r\n      }\r\n\r\n      const { elements } = matrix\r\n      elements[matrixRow] = parseFloat(matrixData[1])\r\n      elements[matrixRow + 4] = parseFloat(matrixData[2])\r\n      elements[matrixRow + 8] = parseFloat(matrixData[3])\r\n      elements[matrixRow + 12] = parseFloat(matrixData[4])\r\n    } else if (assembly && stream.readString(35, 41) === 'CHAINS:') {\r\n      const entries = stream.readString(42, 80).split(',')\r\n      for (let i = 0, n = entries.length; i < n; ++i) {\r\n        const chain = entries[i].trim()\r\n        if (chain.length > 0) {\r\n          assembly.addChain(chain)\r\n        }\r\n      }\r\n    } else if (stream.readString(12, 23) === 'BIOMOLECULE:') {\r\n      // assert molIndex === this.assemblies.length + 1\r\n      this._matrix = null\r\n      this._matrixIndex = -1\r\n      this._assembly = assembly = new Assembly(this._complex)\r\n      this.assemblies.push(assembly)\r\n    }\r\n  }\r\n}\r\n\r\nRemark350.prototype.id = 350\r\n\r\nexport default Remark350\r\n",
		"/** Helper class for stream-like reading input files. */\r\nclass PDBStream {\r\n  /**\r\n   * Create a stream\r\n   * @param {String} data Input data\r\n   */\r\n  constructor(data) {\r\n    /** @type String */\r\n    this._data = data // Input file\r\n    /** @type Number */\r\n    this._start = 0 // Starting position of line\r\n    /** @type Number */\r\n    this._nextCR = -1 // Position of next CR (0x0D)\r\n    /** @type Number */\r\n    this._nextLF = -1 // Position of next LF (0x0A)\r\n    /** @type Number */\r\n    this._next = -1 // End position of line\r\n    /** @type Number */\r\n    this._end = data.length // End of data\r\n\r\n    this.next()\r\n  }\r\n\r\n  /**\r\n   * Reading next line.\r\n   * @returns {String} Next line in data (ending with LF or CR)\r\n   */\r\n  readLine() {\r\n    return this._data.slice(this._start, this._next)\r\n  }\r\n\r\n  /**\r\n   * Reading character from position.\r\n   * @param {Number} pos - Position in current line.\r\n   * @returns {String} Character from position\r\n   */\r\n  readChar(pos) {\r\n    pos = this._start + pos - 1\r\n    return pos < this._next ? this._data[pos] : ' '\r\n  }\r\n\r\n  /**\r\n   * Reading character code from position.\r\n   * @param {Number} pos - Position in current line.\r\n   * @returns {Number} Character code from position\r\n   */\r\n  readCharCode(pos) {\r\n    pos = this._start + pos - 1\r\n    return pos < this._next ? this._data.charCodeAt(pos) : 32\r\n  }\r\n\r\n  /**\r\n   * Reading string from begin to end points.\r\n   * For a reason unknown, numbering assumed not to start from 0, but from 1.\r\n   * @param {Number} begin - Begin point in current line.\r\n   * @param {Number} end - End point in current line.\r\n   * @returns {String} String from begin to end\r\n   */\r\n  readString(begin, end) {\r\n    const from = this._start + begin - 1\r\n    const to = this._start + end\r\n    return this._data.slice(from, to < this._next ? to : this._next)\r\n  }\r\n\r\n  /**\r\n   * Reading integer from begin to end points.\r\n   * @param {Number} begin - Begin point in current line.\r\n   * @param {Number} end - End point in current line.\r\n   * @returns {Number} Integer from begin to end\r\n   */\r\n  readInt(begin, end) {\r\n    return parseInt(this.readString(begin, end), 10)\r\n  }\r\n\r\n  /**\r\n   * Reading float from begin to end points.\r\n   * @param {Number} begin - Begin point in current line.\r\n   * @param {Number} end - End point in current line.\r\n   * @returns {Number} Float from begin to end\r\n   */\r\n  readFloat(begin, end) {\r\n    return parseFloat(this.readString(begin, end))\r\n  }\r\n\r\n  /**\r\n   * Checking for end of data.\r\n   * @returns {boolean} True if data is ended, false otherwise\r\n   */\r\n  end() {\r\n    return this._start >= this._end\r\n  }\r\n\r\n  /**\r\n   * Procedure to re-arrange current pointers in data.\r\n   */\r\n  next() {\r\n    const start = this._next + 1\r\n    this._start = start < this._end ? start : this._end\r\n\r\n    // support CR, LF, CR+LF line endings\r\n    // do not support LF+CR, CR+CR+LF, and other strange combinations\r\n\r\n    if (this._start > this._nextCR) {\r\n      this._nextCR =\r\n        (this._data.indexOf('\\r', this._start) + 1 || this._end + 1) - 1\r\n    }\r\n    if (this._start > this._nextLF) {\r\n      this._nextLF =\r\n        (this._data.indexOf('\\n', this._start) + 1 || this._end + 1) - 1\r\n    }\r\n    this._next = this._nextCR + 1 < this._nextLF ? this._nextCR : this._nextLF\r\n  }\r\n}\r\n\r\nexport default PDBStream\r\n",
		"import { isString, isUndefined } from 'lodash'\r\nimport Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport Remark290 from './pdb/Remark290'\r\nimport Remark350 from './pdb/Remark350'\r\nimport PDBStream from './PDBStream'\r\nimport { Vector3 } from 'three'\r\n\r\nconst { Complex, Element, Helix, Sheet, Strand, Bond, Molecule } = chem\r\n\r\nconst TAG_LENGTH = 6\r\n\r\nfunction nameToElement(name) {\r\n  // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\r\n  //\r\n  // http://www.cgl.ucsf.edu/chimera/docs/UsersGuide/tutorials/pdbintro.html#note1\r\n  //\r\n  // Atom names start with element symbols right-justified in columns 13-14\r\n  // as permitted by the length of the name. For example, the symbol FE for\r\n  // iron appears in columns 13-14, whereas the symbol C for carbon appears\r\n  // in column 14 (see Misaligned Atom Names). If an atom name has four\r\n  // characters, however, it must start in column 13 even if the element\r\n  // symbol is a single character (for example, see Hydrogen Atoms).\r\n\r\n  const veryLong = name.trim().length === 4\r\n  return name.slice(0, veryLong ? 1 : 2).trim()\r\n}\r\n\r\n// the most frequently used beginnings; although HEADER is mandatory, it is often missing in handmade files\r\nconst pdbStartRegexp = /^(HEADER\\s|COMPND\\s|REMARK\\s|ATOM {2}|HETATM|MODEL )/i\r\n\r\nconst remarkParsers = {\r\n  // NOTE: please forget the idea to build the method name in runtime, it can be obfuscated.\r\n  290: Remark290,\r\n  350: Remark350\r\n}\r\n\r\nclass PDBParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n\r\n    this._complex = null\r\n    this._chain = null\r\n    this._residue = null\r\n    this._sheet = null\r\n    this._serialAtomMap = null\r\n    this._modelId = 1\r\n    this._compaundFound = false\r\n    this._biomoleculeFound = false\r\n    this._allowedChainsIDs = null\r\n    this._lastMolId = -1\r\n\r\n    this._remarks = {}\r\n    this._remark = null\r\n\r\n    this._molecules = []\r\n    this._molecule = null\r\n    this._compndCurrToken = ''\r\n\r\n    this._options.fileType = 'pdb'\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return isString(data) && pdbStartRegexp.test(data)\r\n  }\r\n\r\n  _finalize() {\r\n    this._fixBondsArray()\r\n    this._fixChains()\r\n\r\n    // keep crystallographic symmetry transformations\r\n    const remark290 = this._remarks[290]\r\n    this._complex.symmetry = isUndefined(remark290) ? [] : remark290.matrices\r\n\r\n    // add loaded biological assemblies\r\n    const remark350 = this._remarks[350]\r\n    this._complex.units = this._complex.units.concat(\r\n      isUndefined(remark350) ? [] : remark350.assemblies\r\n    )\r\n\r\n    // add loaded macromolecules\r\n    this._finalizeMolecules()\r\n\r\n    // create secondary structure etc.\r\n    this._complex.finalize({\r\n      needAutoBonding: true,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n  }\r\n\r\n  _finalizeMolecules() {\r\n    // get chains from complex\r\n    const chainDict = {}\r\n    let i\r\n    const chains = this._complex._chains\r\n    for (i = 0; i < chains.length; ++i) {\r\n      const chainObj = chains[i]\r\n      const chainName = chainObj._name\r\n      chainDict[chainName] = chainObj\r\n    }\r\n\r\n    // aggregate residues from chains\r\n    for (i = 0; i < this._molecules.length; i++) {\r\n      const m = this._molecules[i]\r\n      let residues = []\r\n      for (let j = 0; j < m._chains.length; j++) {\r\n        const name = m._chains[j]\r\n        const chain = chainDict[name]\r\n        residues = residues.concat(chain._residues.slice())\r\n      }\r\n      const molecule = new Molecule(this._complex, m._name, i + 1)\r\n      molecule.residues = residues\r\n      this._complex._molecules[i] = molecule\r\n    }\r\n  }\r\n\r\n  _fixChains() {\r\n    const idChainMap = {}\r\n    const complex = this._complex\r\n\r\n    // prepare\r\n    for (let i = 0; i < complex._chains.length; i++) {\r\n      const chain = complex._chains[i]\r\n      idChainMap[chain._name.charCodeAt(0)] = chain\r\n    }\r\n  }\r\n\r\n  // FIXME: This function is redundant, CONECT records always follow ATOM and HETATM. Build the map online.\r\n  _fixBondsArray() {\r\n    const serialAtomMap = (this._serialAtomMap = {})\r\n    const complex = this._complex\r\n\r\n    const atoms = complex._atoms\r\n    for (let i = 0, ni = atoms.length; i < ni; ++i) {\r\n      const atom = atoms[i]\r\n      serialAtomMap[atom.serial] = atom\r\n    }\r\n\r\n    const bonds = complex._bonds\r\n    const { logger } = this\r\n    for (let j = 0, nj = bonds.length; j < nj; ++j) {\r\n      const bond = bonds[j]\r\n      if (bond._right < bond._left) {\r\n        logger.debug('_fixBondsArray: Logic error.')\r\n      }\r\n      bond._left = serialAtomMap[bond._left] || null\r\n      bond._right = serialAtomMap[bond._right] || null\r\n    }\r\n  }\r\n\r\n  _parseATOM(stream) {\r\n    if (this._modelId !== 1) {\r\n      return\r\n    }\r\n\r\n    /* eslint-disable no-magic-numbers */\r\n    const het = stream.readCharCode(1) === 0x48\r\n\r\n    // field names according to wwPDB Format\r\n    // NOTE: Chimera allows (nonstandard) use of columns 6-11 for the integer atom serial number in ATOM records.\r\n    const serial = het ? stream.readInt(7, 11) : stream.readInt(6, 11)\r\n    let name = stream.readString(13, 16)\r\n    const altLoc = stream.readChar(17)\r\n    const resName = stream.readString(18, 20).trim()\r\n    const chainID = stream.readChar(22)\r\n    const resSeq = stream.readInt(23, 26)\r\n    const iCode = stream.readChar(27)\r\n    const x = stream.readFloat(31, 38)\r\n    const y = stream.readFloat(39, 46)\r\n    const z = stream.readFloat(47, 54)\r\n    const occupancy = stream.readFloat(55, 60)\r\n    const tempFactor = stream.readFloat(61, 66)\r\n    const element = stream.readString(77, 78).trim() || nameToElement(name)\r\n    const charge = stream.readInt(79, 80) || 0\r\n    /* eslint-enable no-magic-numbers */\r\n    // skip waters (there may be lots of them)\r\n    if (this.settings.now.nowater) {\r\n      if (resName === 'HOH' || resName === 'WAT') {\r\n        return\r\n      }\r\n    }\r\n\r\n    // PDB uses positional system for atom names. It helps derive element type from the name\r\n    // but names may include extra spaces. From this point on we don't need those spaces anymore.\r\n    name = name.trim()\r\n\r\n    const type = Element.getByName(element)\r\n    const role = Element.Role[name] // FIXME: Maybe should use type as additional index (\" CA \" vs. \"CA  \")\r\n\r\n    // NOTE: Residues of a particular chain are not required to be listed next to each other.\r\n    // https://github.com/biasmv/pv/commit/7319b898b7473ba380c26699e3b028b2b1a7e1a1\r\n    let chain = this._chain\r\n    if (!chain || chain.getName() !== chainID) {\r\n      this._chain = chain =\r\n        this._complex.getChain(chainID) || this._complex.addChain(chainID)\r\n      this._residue = null\r\n    }\r\n\r\n    let residue = this._residue\r\n    if (\r\n      !residue ||\r\n      residue.getSequence() !== resSeq ||\r\n      residue.getICode() !== iCode\r\n    ) {\r\n      this._residue = residue = chain.addResidue(resName, resSeq, iCode)\r\n    }\r\n\r\n    const xyz = new Vector3(x, y, z)\r\n    residue.addAtom(\r\n      name,\r\n      type,\r\n      xyz,\r\n      role,\r\n      het,\r\n      serial,\r\n      altLoc,\r\n      occupancy,\r\n      tempFactor,\r\n      charge\r\n    )\r\n  }\r\n\r\n  _parseENDMDL() {\r\n    this._modelId += 1\r\n  }\r\n\r\n  _parseCONECT(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const serial0 = stream.readInt(7, 11)\r\n    const serial1 = stream.readInt(12, 16)\r\n    const serial2 = stream.readInt(17, 21)\r\n    const serial3 = stream.readInt(22, 26)\r\n    const serial4 = stream.readInt(27, 31)\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    const complex = this._complex\r\n\r\n    // Keep bonds ordered by atom serial\r\n    if (serial1 && serial1 > serial0) {\r\n      complex.addBond(serial0, serial1, 0, Bond.BondType.UNKNOWN, true)\r\n    }\r\n    if (serial2 && serial2 > serial0) {\r\n      complex.addBond(serial0, serial2, 0, Bond.BondType.UNKNOWN, true)\r\n    }\r\n    if (serial3 && serial3 > serial0) {\r\n      complex.addBond(serial0, serial3, 0, Bond.BondType.UNKNOWN, true)\r\n    }\r\n    if (serial4 && serial4 > serial0) {\r\n      complex.addBond(serial0, serial4, 0, Bond.BondType.UNKNOWN, true)\r\n    }\r\n  }\r\n\r\n  _parseCOMPND(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const str = stream.readString(11, 80)\r\n    const tokenIdx = str.indexOf(':')\r\n    this._compndCurrToken =\r\n      tokenIdx > 0 ? str.substring(0, tokenIdx).trim() : this._compndCurrToken\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    // start reading new molecule\r\n    if (this._compndCurrToken === 'MOL_ID') {\r\n      this._molecule = { _index: '', _chains: [] }\r\n      this._molecule._index = parseInt(\r\n        str.substring(tokenIdx + 1, str.indexOf(';')),\r\n        10\r\n      )\r\n      this._molecules.push(this._molecule)\r\n      // parse molecule name\r\n    } else if (this._compndCurrToken === 'MOLECULE' && this._molecule != null) {\r\n      this._molecule._name = str\r\n        .substring(tokenIdx + 1, str.indexOf(';'))\r\n        .trim()\r\n      // parse molecule chains\r\n    } else if (this._compndCurrToken === 'CHAIN' && this._molecule != null) {\r\n      let chainStr = str.substring(tokenIdx + 1, 80).trim()\r\n      const lastChar = chainStr[chainStr.length - 1]\r\n      if (lastChar === ';' || lastChar === ',') {\r\n        chainStr = chainStr.slice(0, -1)\r\n      }\r\n      chainStr = chainStr.replace(/\\s+/g, '')\r\n      const chains = chainStr.split(',')\r\n      this._molecule._chains = this._molecule._chains.concat(chains)\r\n    }\r\n  }\r\n\r\n  _parseREMARK(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const remarkNum = stream.readInt(8, 10)\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    // create remark parser if needed\r\n    let remark = this._remarks[remarkNum]\r\n    if (isUndefined(remark)) {\r\n      const RemarkParser = remarkParsers[remarkNum]\r\n      if (typeof RemarkParser === 'function') {\r\n        this._remarks[remarkNum] = remark = new RemarkParser(this._complex)\r\n      }\r\n    }\r\n\r\n    // delegate parsing\r\n    if (!isUndefined(remark)) {\r\n      remark.parse(stream)\r\n    }\r\n  }\r\n\r\n  _parseHELIX(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const fields = [20, 22, 32, 34]\r\n    /* eslint-enable no-magic-numbers */\r\n    this._parseSTRUCTURE(stream, fields, (obj) => {\r\n      this._complex.addHelix(obj)\r\n      this._complex.structures.push(obj)\r\n    })\r\n  }\r\n\r\n  _parseSHEET(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const fields = [22, 23, 33, 34]\r\n    /* eslint-enable no-magic-numbers */\r\n    this._parseSTRUCTURE(stream, fields, (obj) => {\r\n      this._complex.addSheet(obj)\r\n    })\r\n  }\r\n\r\n  _parseSTRUCTURE(stream, pars, adder) {\r\n    const startId = 0\r\n    const startIndex = 1\r\n    const endId = 2\r\n    const endIndex = 3\r\n\r\n    // identify fields: debugging and stuff\r\n    /* eslint-disable no-magic-numbers */\r\n    const codeOfS = 0x53\r\n    const serialNumber = stream.readInt(8, 10)\r\n    const structureName = stream.readString(12, 14).trim() // FIXME: LString(3) forbids trim()\r\n    const comment = stream.readString(41, 70).trim()\r\n    const helLength = stream.readInt(72, 76)\r\n    const helixClass = stream.readInt(39, 40)\r\n    const shWidth = stream.readInt(15, 16)\r\n    const shCur = stream.readInt(42, 45)\r\n    const shPrev = stream.readInt(57, 60)\r\n    /* eslint-enable no-magic-numbers */\r\n    // file fields\r\n    const startChainID = stream\r\n      .readString(pars[startId], pars[endId] + 1)\r\n      .charCodeAt(0)\r\n    const endChainID = stream\r\n      .readString(pars[endId], pars[endId] + 1)\r\n      .charCodeAt(0)\r\n    const startSequenceNumber = stream.readInt(\r\n      pars[startIndex],\r\n      pars[startIndex] + 3\r\n    )\r\n    let iCodeStr = stream.readString(pars[startIndex] + 4, pars[startIndex] + 4)\r\n    let startICode = 0\r\n\r\n    if (iCodeStr.length > 0) {\r\n      startICode = iCodeStr.charCodeAt(0)\r\n    }\r\n    const endSequenceNumber = stream.readInt(pars[endIndex], pars[endIndex] + 3)\r\n    iCodeStr = stream.readString(pars[endIndex] + 4, pars[endIndex] + 4)\r\n    let endICode = 0\r\n    if (iCodeStr.length > 0) {\r\n      endICode = iCodeStr.charCodeAt(0)\r\n    }\r\n\r\n    let obj\r\n    let cs = this._sheet\r\n    if (stream.readCharCode(1) === codeOfS) {\r\n      if (cs !== null && cs.getName() !== structureName) {\r\n        cs = null\r\n        this._sheet = null\r\n      }\r\n      if (cs === null) {\r\n        this._sheet = obj = new Sheet(structureName, shWidth)\r\n        adder(obj)\r\n      } else {\r\n        obj = cs\r\n      }\r\n      const strand = new Strand(\r\n        obj,\r\n        this._complex.getUnifiedSerial(\r\n          startChainID,\r\n          startSequenceNumber,\r\n          startICode\r\n        ),\r\n        this._complex.getUnifiedSerial(endChainID, endSequenceNumber, endICode),\r\n        helixClass,\r\n        shCur,\r\n        shPrev\r\n      )\r\n      obj.addStrand(strand)\r\n      this._complex.structures.push(strand)\r\n    } else {\r\n      obj = new Helix(\r\n        helixClass,\r\n        this._complex.getUnifiedSerial(\r\n          startChainID,\r\n          startSequenceNumber,\r\n          startICode\r\n        ),\r\n        this._complex.getUnifiedSerial(endChainID, endSequenceNumber, endICode),\r\n        serialNumber,\r\n        structureName,\r\n        comment,\r\n        helLength\r\n      )\r\n      adder(obj)\r\n    }\r\n  }\r\n\r\n  _parseHEADER(stream) {\r\n    const { metadata } = this._complex\r\n    metadata.classification = stream.readString(11, 50).trim()\r\n    metadata.date = stream.readString(51, 59).trim()\r\n\r\n    const id = stream.readString(63, 66).trim()\r\n    metadata.id = id\r\n    if (id) {\r\n      this._complex.name = id\r\n    }\r\n    metadata.format = 'pdb'\r\n  }\r\n\r\n  _parseTITLE(stream) {\r\n    const { metadata } = this._complex\r\n    metadata.title = metadata.title || []\r\n\r\n    const line = stream.readInt(9, 10) || 1\r\n    metadata.title[line - 1] = stream.readString(11, 80).trim()\r\n  }\r\n\r\n  static tagParsers = {\r\n    HEADER: PDBParser.prototype._parseHEADER,\r\n    'TITLE ': PDBParser.prototype._parseTITLE,\r\n    'ATOM  ': PDBParser.prototype._parseATOM,\r\n    HETATM: PDBParser.prototype._parseATOM,\r\n    ENDMDL: PDBParser.prototype._parseENDMDL,\r\n    CONECT: PDBParser.prototype._parseCONECT,\r\n    COMPND: PDBParser.prototype._parseCOMPND,\r\n    REMARK: PDBParser.prototype._parseREMARK,\r\n    // 'SOURCE': PDBParser.prototype._parseSOURCE,\r\n    'HELIX ': PDBParser.prototype._parseHELIX,\r\n    'SHEET ': PDBParser.prototype._parseSHEET,\r\n\r\n    // nonstandard extension to allow range 100,000 - 999,999\r\n    'ATOM 1': PDBParser.prototype._parseATOM,\r\n    'ATOM 2': PDBParser.prototype._parseATOM,\r\n    'ATOM 3': PDBParser.prototype._parseATOM,\r\n    'ATOM 4': PDBParser.prototype._parseATOM,\r\n    'ATOM 5': PDBParser.prototype._parseATOM,\r\n    'ATOM 6': PDBParser.prototype._parseATOM,\r\n    'ATOM 7': PDBParser.prototype._parseATOM,\r\n    'ATOM 8': PDBParser.prototype._parseATOM,\r\n    'ATOM 9': PDBParser.prototype._parseATOM\r\n  }\r\n\r\n  parseSync() {\r\n    const stream = new PDBStream(this._data)\r\n    const result = (this._complex = new Complex())\r\n\r\n    // parse PDB line by line\r\n    while (!stream.end()) {\r\n      const tag = stream.readString(1, TAG_LENGTH)\r\n      const func = PDBParser.tagParsers[tag]\r\n      if (typeof func === 'function') {\r\n        func.call(this, stream)\r\n      }\r\n      stream.next()\r\n    }\r\n\r\n    // Resolve indices and serials to objects\r\n    this._finalize()\r\n\r\n    // cleanup\r\n    this._serialAtomMap = null\r\n    this._sheet = null\r\n    this._residue = null\r\n    this._chain = null\r\n    this._complex = null\r\n\r\n    if (result.getAtomCount() === 0) {\r\n      throw new Error('The data does not contain valid atoms')\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n\r\nPDBParser.formats = ['pdb']\r\nPDBParser.extensions = ['.pdb', '.ent']\r\n\r\nexport default PDBParser\r\n",
		"import Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport { isString } from 'lodash'\r\nimport { Vector3 } from 'three'\r\n\r\nconst { Complex, Element, SGroup, Bond } = chem\r\n\r\nconst cOrderCharCodes = {\r\n  A: 0,\r\n  S: 1,\r\n  D: 2,\r\n  T: 3\r\n}\r\n\r\nconst cmlStartRegexp = /\\s*<\\?xml\\b[^?>]*\\?>\\s*<(?:cml|molecule)\\b/i\r\n\r\nclass CMLParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this._complex = null\r\n    this._residue = null\r\n    this._serialAtomMap = null\r\n    this._modelId = 1\r\n    this._lastMolId = -1\r\n    this._readOnlyOneMolecule = false\r\n    this._options.fileType = 'cml'\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return isString(data) && cmlStartRegexp.test(data)\r\n  }\r\n\r\n  _rebuidBondIndexes(atoms, bonds) {\r\n    const count = atoms.length\r\n    for (let i = 0; i < count; i++) {\r\n      const atomId = atoms[i].id\r\n\r\n      const countBonds = bonds.length\r\n      for (let j = 0; j < countBonds; j++) {\r\n        const idxs = bonds[j].atomRefs2.split(' ')\r\n        if (idxs[0] === atomId) {\r\n          bonds[j].start = i\r\n        }\r\n\r\n        if (idxs[1] === atomId) {\r\n          bonds[j].end = i\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _createSGroup(molecule, moleculeArr) {\r\n    const newGroup = new SGroup(\r\n      molecule.id,\r\n      molecule.fieldData,\r\n      new Vector3(parseFloat(molecule.x), parseFloat(molecule.y), 0),\r\n      molecule.atomRefs,\r\n      molecule\r\n    )\r\n    if (molecule.placement === 'Relative') {\r\n      newGroup._center = new Vector3(0, 0, 0)\r\n    }\r\n    if (molecule.fieldName === 'MDLBG_FRAGMENT_CHARGE') {\r\n      newGroup._charge = parseInt(molecule.fieldData, 10) || 0\r\n    }\r\n    if (molecule.fieldName === 'MDLBG_FRAGMENT_COEFFICIENT') {\r\n      newGroup._repeat = parseInt(molecule.fieldData, 10) || 1\r\n    }\r\n    moleculeArr.push(newGroup)\r\n  }\r\n\r\n  _extractSGroup(molecule, moleculeArr) {\r\n    if (!Array.isArray(moleculeArr)) {\r\n      moleculeArr = []\r\n    }\r\n\r\n    if (molecule) {\r\n      if (Array.isArray(molecule)) {\r\n        const count = molecule.length\r\n        for (let i = 0; i < count; i++) {\r\n          if (molecule[i].molecule) {\r\n            moleculeArr = moleculeArr.concat(\r\n              this._extractSGroup(molecule[i].molecule)\r\n            )\r\n          }\r\n          this._createSGroup(molecule[i], moleculeArr)\r\n        }\r\n      } else {\r\n        if (molecule.molecule) {\r\n          if (molecule.molecule) {\r\n            moleculeArr = moleculeArr.concat(\r\n              this._extractSGroup(molecule.molecule)\r\n            )\r\n          }\r\n        }\r\n        this._createSGroup(molecule, moleculeArr)\r\n      }\r\n    }\r\n\r\n    return moleculeArr\r\n  }\r\n\r\n  _extractSGroups(molecule, atoms) {\r\n    const moleculeArr = this._extractSGroup(molecule)\r\n\r\n    const count = atoms.length\r\n    let i\r\n    let j\r\n\r\n    for (i = 0; i < count; i++) {\r\n      const atomId = atoms[i].id\r\n      for (j = 0; j < moleculeArr.length; j++) {\r\n        const firstAtomRef = moleculeArr[j]._atoms.split(' ')[0]\r\n        if (firstAtomRef === atomId) {\r\n          if (!atoms[i].sgroupRef) {\r\n            atoms[i].sgroupRef = []\r\n          }\r\n          atoms[i].sgroupRef.push(moleculeArr[j])\r\n        }\r\n      }\r\n    }\r\n    // build sGroups centers\r\n    let atomMap = {} // sgrpmap cache\r\n    let mapEntry = null\r\n    const nLimon = 100000000\r\n    const bLow = new Vector3(nLimon, nLimon, nLimon)\r\n    const bHight = new Vector3(-nLimon, -nLimon, -nLimon)\r\n\r\n    function cycleFuncInner(e) {\r\n      mapEntry = atomMap[e]\r\n      if (mapEntry) {\r\n        moleculeArr[j]._atoms.push(mapEntry.a)\r\n      }\r\n    }\r\n\r\n    function cycleFunc(e) {\r\n      mapEntry = atomMap[e]\r\n      if (mapEntry) {\r\n        bLow.set(\r\n          Math.min(bLow.x, mapEntry.x),\r\n          Math.min(bLow.y, mapEntry.y),\r\n          Math.min(bLow.z, mapEntry.z)\r\n        )\r\n        bHight.set(\r\n          Math.max(bHight.x, mapEntry.x),\r\n          Math.max(bHight.y, mapEntry.y),\r\n          Math.max(bHight.z, mapEntry.z)\r\n        )\r\n        cycleFuncInner(e)\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < atoms.length; i++) {\r\n      atomMap[atoms[i].id] = {}\r\n      atomMap[atoms[i].id].x = atoms[i].x2\r\n      if (atoms[i].x3) {\r\n        atomMap[atoms[i].id].x = atoms[i].x3\r\n      }\r\n      atomMap[atoms[i].id].x = parseFloat(atomMap[atoms[i].id].x)\r\n      atomMap[atoms[i].id].y = atoms[i].y2\r\n      if (atoms[i].y3) {\r\n        atomMap[atoms[i].id].y = atoms[i].y3\r\n      }\r\n      atomMap[atoms[i].id].y = parseFloat(atomMap[atoms[i].id].y)\r\n      atomMap[atoms[i].id].z = '0.0'\r\n      if (atoms[i].z3) {\r\n        atomMap[atoms[i].id].z = atoms[i].z3\r\n      }\r\n      atomMap[atoms[i].id].z = parseFloat(atomMap[atoms[i].id].z)\r\n      atomMap[atoms[i].id].a = atoms[i]\r\n    }\r\n\r\n    let atomsRef\r\n    for (j = 0; j < moleculeArr.length; j++) {\r\n      if (moleculeArr[j]._center !== null) {\r\n        bLow.set(nLimon, nLimon, nLimon)\r\n        bHight.set(-nLimon, -nLimon, -nLimon)\r\n        atomsRef = moleculeArr[j]._atoms.split(' ')\r\n        moleculeArr[j]._atoms = []\r\n        atomsRef.forEach(cycleFunc)\r\n\r\n        moleculeArr[j]._center.addVectors(bLow, bHight)\r\n        moleculeArr[j]._center.multiplyScalar(0.5)\r\n      } else {\r\n        atomsRef = moleculeArr[j]._atoms.split(' ')\r\n        moleculeArr[j]._atoms = []\r\n        atomsRef.forEach(cycleFuncInner)\r\n      }\r\n    }\r\n    atomMap = null\r\n  }\r\n\r\n  _traverseData(dom) {\r\n    function isArray(o) {\r\n      return Object.prototype.toString.apply(o) === '[object Array]'\r\n    }\r\n\r\n    function parseNode(xmlNode, result) {\r\n      if (xmlNode.nodeName === '#text' && xmlNode.nodeValue.trim() === '') {\r\n        return\r\n      }\r\n\r\n      const jsonNode = {}\r\n      jsonNode.xmlNode = xmlNode\r\n      const existing = result[xmlNode.nodeName]\r\n      if (existing) {\r\n        if (!isArray(existing)) {\r\n          result[xmlNode.nodeName] = [existing, jsonNode]\r\n        } else {\r\n          result[xmlNode.nodeName].push(jsonNode)\r\n        }\r\n      } else {\r\n        result[xmlNode.nodeName] = jsonNode\r\n      }\r\n\r\n      let length\r\n      let i\r\n      if (xmlNode.attributes) {\r\n        ;({ length } = xmlNode.attributes)\r\n        for (i = 0; i < length; i++) {\r\n          const attribute = xmlNode.attributes[i]\r\n          jsonNode[attribute.nodeName] = attribute.nodeValue\r\n        }\r\n      }\r\n\r\n      ;({ length } = xmlNode.childNodes)\r\n      for (i = 0; i < length; i++) {\r\n        parseNode(xmlNode.childNodes[i], jsonNode)\r\n      }\r\n    }\r\n\r\n    const result = {}\r\n    if (dom.childNodes.length) {\r\n      parseNode(dom.childNodes[0], result)\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  _findSuitableMolecule(data, molSet) {\r\n    for (const key in data) {\r\n      if (key === 'xmlNode') {\r\n        continue\r\n      } else if (key === 'molecule') {\r\n        if (data.molecule) {\r\n          if (data.molecule.atomArray && data.molecule.atomArray.atom) {\r\n            molSet.push(data)\r\n          }\r\n          if (Array.isArray(data.molecule)) {\r\n            for (let i = 0; i < data.molecule.length; i++) {\r\n              if (\r\n                data.molecule[i].atomArray &&\r\n                data.molecule[i].atomArray.atom\r\n              ) {\r\n                molSet.push({ molecule: data.molecule[i] })\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else if (\r\n        data[key] &&\r\n        data[key] !== null &&\r\n        typeof data[key] === 'object'\r\n      ) {\r\n        this._findSuitableMolecule(data[key], molSet)\r\n      }\r\n    }\r\n  }\r\n\r\n  _selectComponents(text) {\r\n    const parser = new DOMParser()\r\n    const doc = parser.parseFromString(text, 'application/xml')\r\n    const traversedData = this._traverseData(doc)\r\n    let rawData\r\n    const self = this\r\n\r\n    function prepareComponentCompound(data) {\r\n      let atoms = []\r\n      if (\r\n        data.molecule &&\r\n        data.molecule.atomArray &&\r\n        data.molecule.atomArray.atom\r\n      ) {\r\n        if (!Array.isArray(data.molecule.atomArray.atom)) {\r\n          atoms.push(data.molecule.atomArray.atom)\r\n        } else {\r\n          atoms = data.molecule.atomArray.atom\r\n        }\r\n      } else if (!data.molecule) {\r\n        const ret = {}\r\n        ret.atomLabels = null\r\n        ret.labelsCount = 1\r\n        return ret\r\n      }\r\n\r\n      if (data.molecule.molecule) {\r\n        self._extractSGroups(data.molecule.molecule, atoms)\r\n      }\r\n\r\n      let atom\r\n      let count = atoms.length\r\n      for (let i = 0; i < count; i++) {\r\n        atom = atoms[i]\r\n        atom.edges = []\r\n      }\r\n\r\n      let localBond = []\r\n      if (data.molecule.bondArray && data.molecule.bondArray.bond) {\r\n        if (!Array.isArray(data.molecule.bondArray.bond)) {\r\n          localBond.push(data.molecule.bondArray.bond)\r\n        } else {\r\n          localBond = data.molecule.bondArray.bond\r\n        }\r\n      }\r\n      let bond\r\n      count = localBond.length\r\n      self._rebuidBondIndexes(atoms, localBond)\r\n\r\n      function addCurrBond(index) {\r\n        bond = localBond[index]\r\n        atom = atoms[bond.start]\r\n        if (!atom) {\r\n          return false\r\n        }\r\n        atom.edges.push(bond.end)\r\n        atom = atoms[bond.end]\r\n        if (!atom) {\r\n          return false\r\n        }\r\n        atom.edges.push(bond.start)\r\n        return true\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        if (!addCurrBond(i)) {\r\n          // ignore invalid bond\r\n          continue\r\n        }\r\n        const orderAttr = bond.xmlNode.getAttribute('order')\r\n        const tc = parseInt(orderAttr, 10)\r\n        // the default bond order is unknown\r\n        localBond[i].order = 0\r\n        localBond[i].type = Bond.BondType.UNKNOWN\r\n        if (tc > 1) {\r\n          localBond[i].order = tc\r\n        } else {\r\n          // another option - bond order is a string\r\n          const order = cOrderCharCodes[orderAttr]\r\n          if (order !== undefined) {\r\n            localBond[i].order = order\r\n            if (orderAttr === 'A') {\r\n              localBond[i].type = Bond.BondType.AROMATIC\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      count = atoms.length\r\n      for (let i = 0; i < count; i++) {\r\n        atom = atoms[i]\r\n        atom.edges.sort()\r\n      }\r\n\r\n      const labels = self._breadWidthSearch(atoms, 0) // for now\r\n\r\n      const retStruct = {}\r\n      retStruct.atoms = atoms\r\n      retStruct.bonds = localBond\r\n      retStruct.labels = labels.atomLabels\r\n      retStruct.count = Math.min(1, labels.labelsCount) // for now\r\n      retStruct.curr = -1\r\n      retStruct.originalCML = doc\r\n\r\n      return retStruct\r\n    }\r\n\r\n    if (traversedData.cml) {\r\n      rawData = traversedData.cml\r\n    } else {\r\n      rawData = traversedData\r\n    }\r\n    const retData = []\r\n    const filteredData = []\r\n    this._findSuitableMolecule(rawData, filteredData)\r\n    if (this._readOnlyOneMolecule && filteredData.length > 1) {\r\n      filteredData.splice(1, filteredData.length - 1)\r\n    }\r\n    filteredData.forEach((d) => {\r\n      const rd = prepareComponentCompound(d)\r\n      if (rd.atoms.length > 0) {\r\n        retData.push(rd)\r\n      }\r\n    })\r\n    return retData\r\n  }\r\n\r\n  _packLabel(compId, molId) {\r\n    const shift = 16\r\n    return (molId << shift) + compId\r\n  }\r\n\r\n  _unpackLabel(l) {\r\n    const shift = 16\r\n    const mask = (1 << shift) - 1\r\n    return { molId: l >>> shift, compId: l & mask }\r\n  }\r\n\r\n  _breadWidthSearch(atoms, molID) {\r\n    const atomLabels = new Array(atoms.length)\r\n\r\n    let id\r\n    for (id = 0; id < atomLabels.length; id++) {\r\n      atomLabels[id] = this._packLabel(0, molID)\r\n    }\r\n\r\n    const breadthQueue = []\r\n    let componentID = 0\r\n    let labeledAtoms = atoms.length\r\n\r\n    while (labeledAtoms > 0) {\r\n      componentID++\r\n\r\n      let startID = -1\r\n      for (id = 0; id < atomLabels.length; id++) {\r\n        if (this._unpackLabel(atomLabels[id]).compId === 0) {\r\n          startID = id\r\n          break\r\n        }\r\n      }\r\n\r\n      if (startID < 0) {\r\n        break\r\n      }\r\n\r\n      // Bread first search\r\n      breadthQueue.push(atoms[startID])\r\n      atomLabels[startID] = this._packLabel(componentID, molID)\r\n      labeledAtoms--\r\n\r\n      while (breadthQueue.length > 0) {\r\n        const curr = breadthQueue.shift()\r\n        if (!curr) {\r\n          continue\r\n        }\r\n\r\n        for (let i = 0; i < curr.edges.length; i++) {\r\n          if (atomLabels[curr.edges[i]] !== componentID) {\r\n            breadthQueue.push(atoms[curr.edges[i]])\r\n            atomLabels[curr.edges[i]] = componentID\r\n            labeledAtoms--\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const ret = {}\r\n    ret.atomLabels = atomLabels\r\n    ret.labelsCount = componentID\r\n    return ret\r\n  }\r\n\r\n  _parseBond(eAtom, mainAtom, order, type) {\r\n    if (eAtom >= 0) {\r\n      const h = [Math.min(eAtom, mainAtom), Math.max(eAtom, mainAtom)]\r\n      this._complex.addBond(h[0], h[1], order, type, true)\r\n    }\r\n  }\r\n\r\n  _fixBondsArray() {\r\n    const serialAtomMap = (this._serialAtomMap = {})\r\n    const complex = this._complex\r\n\r\n    const atoms = complex._atoms\r\n    for (let i = 0, ni = atoms.length; i < ni; ++i) {\r\n      const atom = atoms[i]\r\n      serialAtomMap[atom.serial] = atom\r\n    }\r\n\r\n    const bonds = complex._bonds\r\n    const { logger } = this\r\n    for (let j = 0, nj = bonds.length; j < nj; ++j) {\r\n      const bond = bonds[j]\r\n      if (bond._right < bond._left) {\r\n        logger.debug('_fixBondsArray: Logic error.')\r\n      }\r\n      bond._left = serialAtomMap[bond._left] || null\r\n      bond._right = serialAtomMap[bond._right] || null\r\n    }\r\n  }\r\n\r\n  _parseSet(varData) {\r\n    const complex = (this._complex = new Complex())\r\n    const data = varData\r\n    const currentLabel = data.curr\r\n    const { atoms, labels } = data\r\n    let atom = null\r\n    let i\r\n    let j\r\n    const count = atoms.length\r\n\r\n    function addFunc(a) {\r\n      a.xmlNodeRef = atom\r\n      if (atom.x2) {\r\n        atom.x3 = atom.x2\r\n        delete atom.x2\r\n      }\r\n      if (atom.y2) {\r\n        atom.y3 = atom.y2\r\n        delete atom.y2\r\n      }\r\n      if (!atom.z3) {\r\n        atom.z3 = '0.0'\r\n      }\r\n      atom.complexAtom = a\r\n    }\r\n\r\n    let chains = {}\r\n    // parse atoms in label order\r\n    const reorder = []\r\n    for (i = 0; i < count; i++) {\r\n      reorder.push(i)\r\n    }\r\n    reorder.sort((a, b) => labels[a] - labels[b])\r\n    for (i = 0; i < count; i++) {\r\n      const atomCharge = 0\r\n      const lLabel = labels[reorder[i]]\r\n      if (\r\n        this._unpackLabel(lLabel).molId ===\r\n        this._unpackLabel(currentLabel).molId\r\n      ) {\r\n        atom = atoms[reorder[i]]\r\n        const atomFullNameStruct = atom.elementType\r\n\r\n        if (atom.sgroupRef) {\r\n          const countRef = atom.sgroupRef.length\r\n          for (let k = 0; k < countRef; ++k) {\r\n            complex._sgroups.push(atom.sgroupRef[k])\r\n          }\r\n        }\r\n\r\n        if (atom.x3 || atom.x2) {\r\n          const currAtomComp = this._unpackLabel(lLabel).compId\r\n          // use ' ' by default instead of synthetic creation of chain names\r\n          const chainID = ' ' //= String.fromCharCode('A'.charCodeAt(0) + currAtomComp);\r\n          const resSeq = currAtomComp\r\n          const iCode = ' '\r\n          let strLabel = currAtomComp.toString()\r\n          if (strLabel.length === 1) {\r\n            strLabel = `0${strLabel}`\r\n          }\r\n          const resName = `N${strLabel}`\r\n          let chain = chains[chainID]\r\n          if (!chain || chain.getName() !== chainID) {\r\n            chains[chainID] = chain =\r\n              this._complex.getChain(chainID) || this._complex.addChain(chainID)\r\n            this._residue = null\r\n          }\r\n\r\n          let residue = this._residue\r\n          if (\r\n            !residue ||\r\n            residue.getSequence() !== resSeq ||\r\n            residue.getICode() !== iCode\r\n          ) {\r\n            this._residue = residue = chain.addResidue(resName, resSeq, iCode)\r\n          }\r\n\r\n          // _x, _y, _z, mname, mindex, atomNameFull, atomName, chainID, serial, isHet, atlLocInd, atomNameToTypeF\r\n          let xyz = null\r\n          if (atom.x3) {\r\n            xyz = new Vector3(\r\n              parseFloat(atom.x3),\r\n              parseFloat(atom.y3),\r\n              parseFloat(atom.z3)\r\n            )\r\n          } else if (atom.x2) {\r\n            xyz = new Vector3(parseFloat(atom.x2), parseFloat(atom.y2), 0)\r\n          }\r\n          let element = Element.ByName[atom.elementType.toUpperCase()]\r\n          if (!element) {\r\n            element = JSON.parse(\r\n              JSON.stringify(\r\n                Element.ByName[\r\n                  Object.keys(Element.ByName)[\r\n                    Object.keys(Element.ByName).length - 1\r\n                  ]\r\n                ]\r\n              )\r\n            )\r\n            element.number += 1\r\n            element.name = atom.elementType.toUpperCase()\r\n            element.fullName = 'Unknown'\r\n            Element.ByName[atom.elementType.toUpperCase()] = element\r\n          }\r\n          const atomSerial = parseInt(atom.id.replace(/[^0-9]/, ''), 10)\r\n          const added = residue.addAtom(\r\n            atomFullNameStruct,\r\n            element,\r\n            xyz,\r\n            Element.Role.SG,\r\n            true,\r\n            atomSerial,\r\n            ' ',\r\n            1.0,\r\n            0.0,\r\n            atomCharge\r\n          )\r\n          if (atom.hydrogenCount) {\r\n            added.hydrogenCount = parseInt(atom.hydrogenCount, 10)\r\n          }\r\n          if (atom.mrvValence) {\r\n            added.valence = parseInt(atom.mrvValence, 10)\r\n          }\r\n          addFunc(added)\r\n        }\r\n      }\r\n    }\r\n    chains = null // NOSONAR\r\n    for (i = 0; i < data.bonds.length; i++) {\r\n      const cb = data.bonds[i]\r\n      if (\r\n        this._unpackLabel(labels[cb.start]).molId ===\r\n          this._unpackLabel(currentLabel).molId &&\r\n        this._unpackLabel(labels[cb.end]).molId ===\r\n          this._unpackLabel(currentLabel).molId\r\n      ) {\r\n        atom = atoms[cb.start]\r\n        if (!atom || !atoms[cb.end]) {\r\n          continue // skip invalid\r\n        }\r\n        this._parseBond(\r\n          parseInt(atom.id.replace(/[^0-9]/, ''), 10),\r\n          parseInt(atoms[cb.end].id.replace(/[^0-9]/, ''), 10),\r\n          cb.order,\r\n          cb.type\r\n        )\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < this._complex.getSGroupCount(); i++) {\r\n      const sGrp = this._complex.getSGroups()[i]\r\n      for (j = 0; j < sGrp._atoms.length; j++) {\r\n        sGrp._atoms[j] = sGrp._atoms[j].complexAtom\r\n      }\r\n    }\r\n    for (i = 0; i < count; i++) {\r\n      if (\r\n        this._unpackLabel(labels[i]).molId ===\r\n        this._unpackLabel(currentLabel).molId\r\n      ) {\r\n        atom = atoms[i]\r\n        atom.complexAtom = null\r\n        delete atom.complexAtom\r\n      }\r\n    }\r\n    this._complex.originalCML = data.originalCML\r\n    this._fixBondsArray()\r\n    complex.finalize({\r\n      needAutoBonding: false,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n    this._serialAtomMap = null\r\n    this._complex = null\r\n    return complex\r\n  }\r\n\r\n  parseSync() {\r\n    const complexes = []\r\n    const self = this\r\n    const moleculaSet = this._selectComponents(this._data)\r\n    moleculaSet.forEach((molSet) => {\r\n      molSet.curr = 2\r\n      if (molSet.count === 0) {\r\n        molSet.count = 1\r\n      }\r\n      for (let i = 0; i < molSet.count; i++) {\r\n        molSet.curr = i + 1\r\n        complexes.push(self._parseSet(molSet, false))\r\n      }\r\n    })\r\n\r\n    let totalAtomsParsed = 0\r\n    complexes.forEach((c) => {\r\n      totalAtomsParsed += c.getAtomCount()\r\n    })\r\n    if (totalAtomsParsed <= 0) {\r\n      throw new Error('The data does not contain valid atoms')\r\n    }\r\n\r\n    if (complexes.length > 1) {\r\n      const joinedComplex = new Complex()\r\n      joinedComplex.joinComplexes(complexes)\r\n      joinedComplex.originalCML = complexes[0].originalCML\r\n      return joinedComplex\r\n    }\r\n    if (complexes.length === 1) {\r\n      return complexes[0]\r\n    }\r\n    return new Complex()\r\n  }\r\n}\r\n\r\nCMLParser.formats = ['cml']\r\nCMLParser.extensions = ['.cml']\r\n\r\nexport default CMLParser\r\n",
		"!(function (r, t) {\r\n  if ('function' == typeof define && define.amd) define(['exports'], t)\r\n  else if ('object' == typeof exports && 'undefined' != typeof module)\r\n    t(exports)\r\n  else t((r.MMTF = r.MMTF || {}))\r\n})(this, function (r) {\r\n  'use strict'\r\n  function t(r, t, n) {\r\n    for (var e = (r.byteLength, 0), i = n.length; i > e; e++) {\r\n      var o = n.charCodeAt(e)\r\n      if (128 > o) r.setUint8(t++, ((o >>> 0) & 127) | 0)\r\n      else if (2048 > o)\r\n        r.setUint8(t++, ((o >>> 6) & 31) | 192),\r\n          r.setUint8(t++, ((o >>> 0) & 63) | 128)\r\n      else if (65536 > o)\r\n        r.setUint8(t++, ((o >>> 12) & 15) | 224),\r\n          r.setUint8(t++, ((o >>> 6) & 63) | 128),\r\n          r.setUint8(t++, ((o >>> 0) & 63) | 128)\r\n      else {\r\n        if (!(1114112 > o)) throw new Error('bad codepoint ' + o)\r\n        r.setUint8(t++, ((o >>> 18) & 7) | 240),\r\n          r.setUint8(t++, ((o >>> 12) & 63) | 128),\r\n          r.setUint8(t++, ((o >>> 6) & 63) | 128),\r\n          r.setUint8(t++, ((o >>> 0) & 63) | 128)\r\n      }\r\n    }\r\n  }\r\n  function n(r) {\r\n    for (var t = 0, n = 0, e = r.length; e > n; n++) {\r\n      var i = r.charCodeAt(n)\r\n      if (128 > i) t += 1\r\n      else if (2048 > i) t += 2\r\n      else if (65536 > i) t += 3\r\n      else {\r\n        if (!(1114112 > i)) throw new Error('bad codepoint ' + i)\r\n        t += 4\r\n      }\r\n    }\r\n    return t\r\n  }\r\n  function e(r, i, o) {\r\n    var a = typeof r\r\n    if ('string' === a) {\r\n      var u = n(r)\r\n      if (32 > u) return i.setUint8(o, 160 | u), t(i, o + 1, r), 1 + u\r\n      if (256 > u)\r\n        return i.setUint8(o, 217), i.setUint8(o + 1, u), t(i, o + 2, r), 2 + u\r\n      if (65536 > u)\r\n        return i.setUint8(o, 218), i.setUint16(o + 1, u), t(i, o + 3, r), 3 + u\r\n      if (4294967296 > u)\r\n        return i.setUint8(o, 219), i.setUint32(o + 1, u), t(i, o + 5, r), 5 + u\r\n    }\r\n    if (r instanceof Uint8Array) {\r\n      var u = r.byteLength,\r\n        s = new Uint8Array(i.buffer)\r\n      if (256 > u)\r\n        return i.setUint8(o, 196), i.setUint8(o + 1, u), s.set(r, o + 2), 2 + u\r\n      if (65536 > u)\r\n        return i.setUint8(o, 197), i.setUint16(o + 1, u), s.set(r, o + 3), 3 + u\r\n      if (4294967296 > u)\r\n        return i.setUint8(o, 198), i.setUint32(o + 1, u), s.set(r, o + 5), 5 + u\r\n    }\r\n    if ('number' === a) {\r\n      if (!isFinite(r)) throw new Error('Number not finite: ' + r)\r\n      if (Math.floor(r) !== r)\r\n        return i.setUint8(o, 203), i.setFloat64(o + 1, r), 9\r\n      if (r >= 0) {\r\n        if (128 > r) return i.setUint8(o, r), 1\r\n        if (256 > r) return i.setUint8(o, 204), i.setUint8(o + 1, r), 2\r\n        if (65536 > r) return i.setUint8(o, 205), i.setUint16(o + 1, r), 3\r\n        if (4294967296 > r) return i.setUint8(o, 206), i.setUint32(o + 1, r), 5\r\n        throw new Error('Number too big 0x' + r.toString(16))\r\n      }\r\n      if (r >= -32) return i.setInt8(o, r), 1\r\n      if (r >= -128) return i.setUint8(o, 208), i.setInt8(o + 1, r), 2\r\n      if (r >= -32768) return i.setUint8(o, 209), i.setInt16(o + 1, r), 3\r\n      if (r >= -2147483648) return i.setUint8(o, 210), i.setInt32(o + 1, r), 5\r\n      throw new Error('Number too small -0x' + (-r).toString(16).substr(1))\r\n    }\r\n    if (null === r) return i.setUint8(o, 192), 1\r\n    if ('boolean' === a) return i.setUint8(o, r ? 195 : 194), 1\r\n    if ('object' === a) {\r\n      var u,\r\n        f = 0,\r\n        c = Array.isArray(r)\r\n      if (c) u = r.length\r\n      else {\r\n        var d = Object.keys(r)\r\n        u = d.length\r\n      }\r\n      var f\r\n      if (\r\n        (16 > u\r\n          ? (i.setUint8(o, u | (c ? 144 : 128)), (f = 1))\r\n          : 65536 > u\r\n          ? (i.setUint8(o, c ? 220 : 222), i.setUint16(o + 1, u), (f = 3))\r\n          : 4294967296 > u &&\r\n            (i.setUint8(o, c ? 221 : 223), i.setUint32(o + 1, u), (f = 5)),\r\n        c)\r\n      )\r\n        for (var l = 0; u > l; l++) f += e(r[l], i, o + f)\r\n      else\r\n        for (var l = 0; u > l; l++) {\r\n          var v = d[l]\r\n          ;(f += e(v, i, o + f)), (f += e(r[v], i, o + f))\r\n        }\r\n      return f\r\n    }\r\n    throw new Error('Unknown type ' + a)\r\n  }\r\n  function i(r) {\r\n    var t = typeof r\r\n    if ('string' === t) {\r\n      var e = n(r)\r\n      if (32 > e) return 1 + e\r\n      if (256 > e) return 2 + e\r\n      if (65536 > e) return 3 + e\r\n      if (4294967296 > e) return 5 + e\r\n    }\r\n    if (r instanceof Uint8Array) {\r\n      var e = r.byteLength\r\n      if (256 > e) return 2 + e\r\n      if (65536 > e) return 3 + e\r\n      if (4294967296 > e) return 5 + e\r\n    }\r\n    if ('number' === t) {\r\n      if (Math.floor(r) !== r) return 9\r\n      if (r >= 0) {\r\n        if (128 > r) return 1\r\n        if (256 > r) return 2\r\n        if (65536 > r) return 3\r\n        if (4294967296 > r) return 5\r\n        throw new Error('Number too big 0x' + r.toString(16))\r\n      }\r\n      if (r >= -32) return 1\r\n      if (r >= -128) return 2\r\n      if (r >= -32768) return 3\r\n      if (r >= -2147483648) return 5\r\n      throw new Error('Number too small -0x' + r.toString(16).substr(1))\r\n    }\r\n    if ('boolean' === t || null === r) return 1\r\n    if ('object' === t) {\r\n      var e,\r\n        o = 0\r\n      if (Array.isArray(r)) {\r\n        e = r.length\r\n        for (var a = 0; e > a; a++) o += i(r[a])\r\n      } else {\r\n        var u = Object.keys(r)\r\n        e = u.length\r\n        for (var a = 0; e > a; a++) {\r\n          var s = u[a]\r\n          o += i(s) + i(r[s])\r\n        }\r\n      }\r\n      if (16 > e) return 1 + o\r\n      if (65536 > e) return 3 + o\r\n      if (4294967296 > e) return 5 + o\r\n      throw new Error('Array or object too long 0x' + e.toString(16))\r\n    }\r\n    throw new Error('Unknown type ' + t)\r\n  }\r\n  function o(r) {\r\n    var t = new ArrayBuffer(i(r)),\r\n      n = new DataView(t)\r\n    return e(r, n, 0), new Uint8Array(t)\r\n  }\r\n  function a(r, t, n) {\r\n    return t ? new r(t.buffer, t.byteOffset, t.byteLength / (n || 1)) : void 0\r\n  }\r\n  function u(r) {\r\n    return a(DataView, r)\r\n  }\r\n  function s(r) {\r\n    return a(Uint8Array, r)\r\n  }\r\n  function f(r) {\r\n    return a(Int8Array, r)\r\n  }\r\n  function c(r) {\r\n    return a(Int32Array, r, 4)\r\n  }\r\n  function d(r) {\r\n    return a(Float32Array, r, 4)\r\n  }\r\n  function l(r, t) {\r\n    var n = r.length / 2\r\n    t || (t = new Int16Array(n))\r\n    for (var e = 0, i = 0; n > e; ++e, i += 2)\r\n      t[e] = (r[i] << 8) ^ (r[i + 1] << 0)\r\n    return t\r\n  }\r\n  function v(r, t) {\r\n    var n = r.length\r\n    t || (t = new Uint8Array(2 * n))\r\n    for (var e = u(t), i = 0; n > i; ++i) e.setInt16(2 * i, r[i])\r\n    return s(t)\r\n  }\r\n  function g(r, t) {\r\n    var n = r.length / 4\r\n    t || (t = new Int32Array(n))\r\n    for (var e = 0, i = 0; n > e; ++e, i += 4)\r\n      t[e] = (r[i] << 24) ^ (r[i + 1] << 16) ^ (r[i + 2] << 8) ^ (r[i + 3] << 0)\r\n    return t\r\n  }\r\n  function L(r, t) {\r\n    var n = r.length\r\n    t || (t = new Uint8Array(4 * n))\r\n    for (var e = u(t), i = 0; n > i; ++i) e.setInt32(4 * i, r[i])\r\n    return s(t)\r\n  }\r\n  function h(r, t) {\r\n    var n = r.length\r\n    t || (t = new Float32Array(n / 4))\r\n    for (var e = u(t), i = u(r), o = 0, a = 0, s = n / 4; s > o; ++o, a += 4)\r\n      e.setFloat32(a, i.getFloat32(a), !0)\r\n    return t\r\n  }\r\n  function y(r, t, n) {\r\n    var e = r.length,\r\n      i = 1 / t\r\n    n || (n = new Float32Array(e))\r\n    for (var o = 0; e > o; ++o) n[o] = r[o] * i\r\n    return n\r\n  }\r\n  function m(r, t, n) {\r\n    var e = r.length\r\n    n || (n = new Int32Array(e))\r\n    for (var i = 0; e > i; ++i) n[i] = Math.round(r[i] * t)\r\n    return n\r\n  }\r\n  function p(r, t) {\r\n    var n, e\r\n    if (!t) {\r\n      var i = 0\r\n      for (n = 0, e = r.length; e > n; n += 2) i += r[n + 1]\r\n      t = new r.constructor(i)\r\n    }\r\n    var o = 0\r\n    for (n = 0, e = r.length; e > n; n += 2)\r\n      for (var a = r[n], u = r[n + 1], s = 0; u > s; ++s) (t[o] = a), ++o\r\n    return t\r\n  }\r\n  function U(r) {\r\n    if (0 === r.length) return new Int32Array()\r\n    var t,\r\n      n,\r\n      e = 2\r\n    for (t = 1, n = r.length; n > t; ++t) r[t - 1] !== r[t] && (e += 2)\r\n    var i = new Int32Array(e),\r\n      o = 0,\r\n      a = 1\r\n    for (t = 1, n = r.length; n > t; ++t)\r\n      r[t - 1] !== r[t]\r\n        ? ((i[o] = r[t - 1]), (i[o + 1] = a), (a = 1), (o += 2))\r\n        : ++a\r\n    return (i[o] = r[r.length - 1]), (i[o + 1] = a), i\r\n  }\r\n  function b(r, t) {\r\n    var n = r.length\r\n    t || (t = new r.constructor(n)), n && (t[0] = r[0])\r\n    for (var e = 1; n > e; ++e) t[e] = r[e] + t[e - 1]\r\n    return t\r\n  }\r\n  function I(r, t) {\r\n    var n = r.length\r\n    t || (t = new r.constructor(n)), (t[0] = r[0])\r\n    for (var e = 1; n > e; ++e) t[e] = r[e] - r[e - 1]\r\n    return t\r\n  }\r\n  function w(r, t) {\r\n    var n,\r\n      e,\r\n      i = r instanceof Int8Array ? 127 : 32767,\r\n      o = -i - 1,\r\n      a = r.length\r\n    if (!t) {\r\n      var u = 0\r\n      for (n = 0; a > n; ++n) r[n] < i && r[n] > o && ++u\r\n      t = new Int32Array(u)\r\n    }\r\n    for (n = 0, e = 0; a > n; ) {\r\n      for (var s = 0; r[n] === i || r[n] === o; ) (s += r[n]), ++n\r\n      ;(s += r[n]), ++n, (t[e] = s), ++e\r\n    }\r\n    return t\r\n  }\r\n  function C(r, t) {\r\n    var n,\r\n      e = t ? 127 : 32767,\r\n      i = -e - 1,\r\n      o = r.length,\r\n      a = 0\r\n    for (n = 0; o > n; ++n) {\r\n      var u = r[n]\r\n      0 === u\r\n        ? ++a\r\n        : (a +=\r\n            u === e || u === i\r\n              ? 2\r\n              : u > 0\r\n              ? Math.ceil(u / e)\r\n              : Math.ceil(u / i))\r\n    }\r\n    var s = t ? new Int8Array(a) : new Int16Array(a),\r\n      f = 0\r\n    for (n = 0; o > n; ++n) {\r\n      var u = r[n]\r\n      if (u >= 0) for (; u >= e; ) (s[f] = e), ++f, (u -= e)\r\n      else for (; i >= u; ) (s[f] = i), ++f, (u -= i)\r\n      ;(s[f] = u), ++f\r\n    }\r\n    return s\r\n  }\r\n  function A(r, t) {\r\n    return b(p(r), t)\r\n  }\r\n  function x(r) {\r\n    return U(I(r))\r\n  }\r\n  function M(r, t, n) {\r\n    return y(p(r, c(n)), t, n)\r\n  }\r\n  function F(r, t) {\r\n    return U(m(r, t))\r\n  }\r\n  function S(r, t, n) {\r\n    return y(b(r, c(n)), t, n)\r\n  }\r\n  function E(r, t, n) {\r\n    return I(m(r, t), n)\r\n  }\r\n  function N(r, t, n) {\r\n    return y(w(r, c(n)), t, n)\r\n  }\r\n  function O(r, t, n) {\r\n    var e = w(r, c(n))\r\n    return S(e, t, d(e))\r\n  }\r\n  function T(r, t, n) {\r\n    return C(E(r, t), n)\r\n  }\r\n  function k(r) {\r\n    var t = u(r),\r\n      n = t.getInt32(0),\r\n      e = t.getInt32(4),\r\n      i = r.subarray(8, 12),\r\n      r = r.subarray(12)\r\n    return [n, r, e, i]\r\n  }\r\n  function j(r, t, n, e) {\r\n    var i = new ArrayBuffer(12 + e.byteLength),\r\n      o = new Uint8Array(i),\r\n      a = new DataView(i)\r\n    return a.setInt32(0, r), a.setInt32(4, t), n && o.set(n, 8), o.set(e, 12), o\r\n  }\r\n  function q(r) {\r\n    var t = r.length,\r\n      n = s(r)\r\n    return j(2, t, void 0, n)\r\n  }\r\n  function D(r) {\r\n    var t = r.length,\r\n      n = L(r)\r\n    return j(4, t, void 0, n)\r\n  }\r\n  function P(r, t) {\r\n    var n = r.length / t,\r\n      e = L([t]),\r\n      i = s(r)\r\n    return j(5, n, e, i)\r\n  }\r\n  function z(r) {\r\n    var t = r.length,\r\n      n = L(U(r))\r\n    return j(6, t, void 0, n)\r\n  }\r\n  function B(r) {\r\n    var t = r.length,\r\n      n = L(x(r))\r\n    return j(8, t, void 0, n)\r\n  }\r\n  function V(r, t) {\r\n    var n = r.length,\r\n      e = L([t]),\r\n      i = L(F(r, t))\r\n    return j(9, n, e, i)\r\n  }\r\n  function G(r, t) {\r\n    var n = r.length,\r\n      e = L([t]),\r\n      i = v(T(r, t))\r\n    return j(10, n, e, i)\r\n  }\r\n  function R(r) {\r\n    var t = {}\r\n    return (\r\n      rr.forEach(function (n) {\r\n        void 0 !== r[n] && (t[n] = r[n])\r\n      }),\r\n      r.bondAtomList && (t.bondAtomList = D(r.bondAtomList)),\r\n      r.bondOrderList && (t.bondOrderList = q(r.bondOrderList)),\r\n      (t.xCoordList = G(r.xCoordList, 1e3)),\r\n      (t.yCoordList = G(r.yCoordList, 1e3)),\r\n      (t.zCoordList = G(r.zCoordList, 1e3)),\r\n      r.bFactorList && (t.bFactorList = G(r.bFactorList, 100)),\r\n      r.atomIdList && (t.atomIdList = B(r.atomIdList)),\r\n      r.altLocList && (t.altLocList = z(r.altLocList)),\r\n      r.occupancyList && (t.occupancyList = V(r.occupancyList, 100)),\r\n      (t.groupIdList = B(r.groupIdList)),\r\n      (t.groupTypeList = D(r.groupTypeList)),\r\n      r.secStructList && (t.secStructList = q(r.secStructList, 1)),\r\n      r.insCodeList && (t.insCodeList = z(r.insCodeList)),\r\n      r.sequenceIndexList && (t.sequenceIndexList = B(r.sequenceIndexList)),\r\n      (t.chainIdList = P(r.chainIdList, 4)),\r\n      r.chainNameList && (t.chainNameList = P(r.chainNameList, 4)),\r\n      t\r\n    )\r\n  }\r\n  function H(r) {\r\n    function t(r) {\r\n      for (var t = {}, n = 0; r > n; n++) {\r\n        var e = o()\r\n        t[e] = o()\r\n      }\r\n      return t\r\n    }\r\n    function n(t) {\r\n      var n = r.subarray(a, a + t)\r\n      return (a += t), n\r\n    }\r\n    function e(t) {\r\n      var n = r.subarray(a, a + t)\r\n      a += t\r\n      var e = 65535\r\n      if (t > e) {\r\n        for (var i = [], o = 0; o < n.length; o += e)\r\n          i.push(String.fromCharCode.apply(null, n.subarray(o, o + e)))\r\n        return i.join('')\r\n      }\r\n      return String.fromCharCode.apply(null, n)\r\n    }\r\n    function i(r) {\r\n      for (var t = new Array(r), n = 0; r > n; n++) t[n] = o()\r\n      return t\r\n    }\r\n    function o() {\r\n      var o,\r\n        s,\r\n        f = r[a]\r\n      if (0 === (128 & f)) return a++, f\r\n      if (128 === (240 & f)) return (s = 15 & f), a++, t(s)\r\n      if (144 === (240 & f)) return (s = 15 & f), a++, i(s)\r\n      if (160 === (224 & f)) return (s = 31 & f), a++, e(s)\r\n      if (224 === (224 & f)) return (o = u.getInt8(a)), a++, o\r\n      switch (f) {\r\n        case 192:\r\n          return a++, null\r\n        case 194:\r\n          return a++, !1\r\n        case 195:\r\n          return a++, !0\r\n        case 196:\r\n          return (s = u.getUint8(a + 1)), (a += 2), n(s)\r\n        case 197:\r\n          return (s = u.getUint16(a + 1)), (a += 3), n(s)\r\n        case 198:\r\n          return (s = u.getUint32(a + 1)), (a += 5), n(s)\r\n        case 202:\r\n          return (o = u.getFloat32(a + 1)), (a += 5), o\r\n        case 203:\r\n          return (o = u.getFloat64(a + 1)), (a += 9), o\r\n        case 204:\r\n          return (o = r[a + 1]), (a += 2), o\r\n        case 205:\r\n          return (o = u.getUint16(a + 1)), (a += 3), o\r\n        case 206:\r\n          return (o = u.getUint32(a + 1)), (a += 5), o\r\n        case 208:\r\n          return (o = u.getInt8(a + 1)), (a += 2), o\r\n        case 209:\r\n          return (o = u.getInt16(a + 1)), (a += 3), o\r\n        case 210:\r\n          return (o = u.getInt32(a + 1)), (a += 5), o\r\n        case 217:\r\n          return (s = u.getUint8(a + 1)), (a += 2), e(s)\r\n        case 218:\r\n          return (s = u.getUint16(a + 1)), (a += 3), e(s)\r\n        case 219:\r\n          return (s = u.getUint32(a + 1)), (a += 5), e(s)\r\n        case 220:\r\n          return (s = u.getUint16(a + 1)), (a += 3), i(s)\r\n        case 221:\r\n          return (s = u.getUint32(a + 1)), (a += 5), i(s)\r\n        case 222:\r\n          return (s = u.getUint16(a + 1)), (a += 3), t(s)\r\n        case 223:\r\n          return (s = u.getUint32(a + 1)), (a += 5), t(s)\r\n      }\r\n      throw new Error('Unknown type 0x' + f.toString(16))\r\n    }\r\n    var a = 0,\r\n      u = new DataView(r.buffer)\r\n    return o()\r\n  }\r\n  function W(r, t, n, e) {\r\n    switch (r) {\r\n      case 1:\r\n        return h(t)\r\n      case 2:\r\n        return f(t)\r\n      case 3:\r\n        return l(t)\r\n      case 4:\r\n        return g(t)\r\n      case 5:\r\n        return s(t)\r\n      case 6:\r\n        return p(g(t), new Uint8Array(n))\r\n      case 7:\r\n        return p(g(t))\r\n      case 8:\r\n        return A(g(t))\r\n      case 9:\r\n        return M(g(t), g(e)[0])\r\n      case 10:\r\n        return O(l(t), g(e)[0])\r\n      case 11:\r\n        return y(l(t), g(e)[0])\r\n      case 12:\r\n        return N(l(t), g(e)[0])\r\n      case 13:\r\n        return N(f(t), g(e)[0])\r\n      case 14:\r\n        return w(l(t))\r\n      case 15:\r\n        return w(f(t))\r\n    }\r\n  }\r\n  function X(r, t) {\r\n    t = t || {}\r\n    var n = t.ignoreFields,\r\n      e = {}\r\n    return (\r\n      nr.forEach(function (t) {\r\n        var i = n ? -1 !== n.indexOf(t) : !1,\r\n          o = r[t]\r\n        i ||\r\n          void 0 === o ||\r\n          (o instanceof Uint8Array ? (e[t] = W.apply(null, k(o))) : (e[t] = o))\r\n      }),\r\n      e\r\n    )\r\n  }\r\n  function J(r) {\r\n    return String.fromCharCode.apply(null, r).replace(/\\0/g, '')\r\n  }\r\n  function K(r, t, n) {\r\n    n = n || {}\r\n    var e,\r\n      i,\r\n      o,\r\n      a,\r\n      u,\r\n      s,\r\n      f = n.firstModelOnly,\r\n      c = t.onModel,\r\n      d = t.onChain,\r\n      l = t.onGroup,\r\n      v = t.onAtom,\r\n      g = t.onBond,\r\n      L = 0,\r\n      h = 0,\r\n      y = 0,\r\n      m = 0,\r\n      p = 0,\r\n      U = -1,\r\n      b = r.chainNameList,\r\n      I = r.secStructList,\r\n      w = r.insCodeList,\r\n      C = r.sequenceIndexList,\r\n      A = r.atomIdList,\r\n      x = r.bFactorList,\r\n      M = r.altLocList,\r\n      F = r.occupancyList,\r\n      S = r.bondAtomList,\r\n      E = r.bondOrderList\r\n    for (e = 0, i = r.chainsPerModel.length; i > e && !(f && L > 0); ++e) {\r\n      var N = r.chainsPerModel[L]\r\n      for (c && c({ chainCount: N, modelIndex: L }), o = 0; N > o; ++o) {\r\n        var O = r.groupsPerChain[h]\r\n        if (d) {\r\n          var T = J(r.chainIdList.subarray(4 * h, 4 * h + 4)),\r\n            k = null\r\n          b && (k = J(b.subarray(4 * h, 4 * h + 4))),\r\n            d({\r\n              groupCount: O,\r\n              chainIndex: h,\r\n              modelIndex: L,\r\n              chainId: T,\r\n              chainName: k\r\n            })\r\n        }\r\n        for (a = 0; O > a; ++a) {\r\n          var j = r.groupList[r.groupTypeList[y]],\r\n            q = j.atomNameList.length\r\n          if (l) {\r\n            var D = null\r\n            I && (D = I[y])\r\n            var P = null\r\n            r.insCodeList && (P = String.fromCharCode(w[y]))\r\n            var z = null\r\n            C && (z = C[y]),\r\n              l({\r\n                atomCount: q,\r\n                groupIndex: y,\r\n                chainIndex: h,\r\n                modelIndex: L,\r\n                groupId: r.groupIdList[y],\r\n                groupType: r.groupTypeList[y],\r\n                groupName: j.groupName,\r\n                singleLetterCode: j.singleLetterCode,\r\n                chemCompType: j.chemCompType,\r\n                secStruct: D,\r\n                insCode: P,\r\n                sequenceIndex: z\r\n              })\r\n          }\r\n          for (u = 0; q > u; ++u) {\r\n            if (v) {\r\n              var B = null\r\n              A && (B = A[m])\r\n              var V = null\r\n              x && (V = x[m])\r\n              var G = null\r\n              M && (G = String.fromCharCode(M[m]))\r\n              var R = null\r\n              F && (R = F[m]),\r\n                v({\r\n                  atomIndex: m,\r\n                  groupIndex: y,\r\n                  chainIndex: h,\r\n                  modelIndex: L,\r\n                  atomId: B,\r\n                  element: j.elementList[u],\r\n                  atomName: j.atomNameList[u],\r\n                  formalCharge: j.formalChargeList[u],\r\n                  xCoord: r.xCoordList[m],\r\n                  yCoord: r.yCoordList[m],\r\n                  zCoord: r.zCoordList[m],\r\n                  bFactor: V,\r\n                  altLoc: G,\r\n                  occupancy: R\r\n                })\r\n            }\r\n            m += 1\r\n          }\r\n          if (g) {\r\n            var H = j.bondAtomList\r\n            for (u = 0, s = j.bondOrderList.length; s > u; ++u)\r\n              g({\r\n                atomIndex1: m - q + H[2 * u],\r\n                atomIndex2: m - q + H[2 * u + 1],\r\n                bondOrder: j.bondOrderList[u]\r\n              })\r\n          }\r\n          y += 1\r\n        }\r\n        h += 1\r\n      }\r\n      if (((p = U + 1), (U = m - 1), g && S))\r\n        for (u = 0, s = S.length; s > u; u += 2) {\r\n          var W = S[u],\r\n            X = S[u + 1]\r\n          ;((W >= p && U >= W) || (X >= p && U >= X)) &&\r\n            g({ atomIndex1: W, atomIndex2: X, bondOrder: E ? E[u / 2] : null })\r\n        }\r\n      L += 1\r\n    }\r\n  }\r\n  function Q(r) {\r\n    return o(R(r))\r\n  }\r\n  function Y(r, t) {\r\n    r instanceof ArrayBuffer && (r = new Uint8Array(r))\r\n    var n\r\n    return (n = r instanceof Uint8Array ? H(r) : r), X(n, t)\r\n  }\r\n  function Z(r, t, n, e) {\r\n    function i() {\r\n      try {\r\n        var r = Y(o.response)\r\n        n(r)\r\n      } catch (t) {\r\n        e(t)\r\n      }\r\n    }\r\n    var o = new XMLHttpRequest()\r\n    o.addEventListener('load', i, !0),\r\n      o.addEventListener('error', e, !0),\r\n      (o.responseType = 'arraybuffer'),\r\n      o.open('GET', t + r.toUpperCase()),\r\n      o.send()\r\n  }\r\n  function $(r, t, n) {\r\n    Z(r, or, t, n)\r\n  }\r\n  function _(r, t, n) {\r\n    Z(r, ar, t, n)\r\n  }\r\n  var rr = [\r\n      'mmtfVersion',\r\n      'mmtfProducer',\r\n      'unitCell',\r\n      'spaceGroup',\r\n      'structureId',\r\n      'title',\r\n      'depositionDate',\r\n      'releaseDate',\r\n      'experimentalMethods',\r\n      'resolution',\r\n      'rFree',\r\n      'rWork',\r\n      'bioAssemblyList',\r\n      'ncsOperatorList',\r\n      'entityList',\r\n      'groupList',\r\n      'numBonds',\r\n      'numAtoms',\r\n      'numGroups',\r\n      'numChains',\r\n      'numModels',\r\n      'groupsPerChain',\r\n      'chainsPerModel'\r\n    ],\r\n    tr = [\r\n      'xCoordList',\r\n      'yCoordList',\r\n      'zCoordList',\r\n      'groupIdList',\r\n      'groupTypeList',\r\n      'chainIdList',\r\n      'bFactorList',\r\n      'atomIdList',\r\n      'altLocList',\r\n      'occupancyList',\r\n      'secStructList',\r\n      'insCodeList',\r\n      'sequenceIndexList',\r\n      'chainNameList',\r\n      'bondAtomList',\r\n      'bondOrderList'\r\n    ],\r\n    nr = rr.concat(tr),\r\n    er = 'v1.1.0dev',\r\n    ir = '//mmtf.rcsb.org/v1.0/',\r\n    or = ir + 'full/',\r\n    ar = ir + 'reduced/'\r\n  ;(r.encode = Q),\r\n    (r.decode = Y),\r\n    (r.traverse = K),\r\n    (r.fetch = $),\r\n    (r.fetchReduced = _),\r\n    (r.version = er),\r\n    (r.fetchUrl = or),\r\n    (r.fetchReducedUrl = ar),\r\n    (r.encodeMsgpack = o),\r\n    (r.encodeMmtf = R),\r\n    (r.decodeMsgpack = H),\r\n    (r.decodeMmtf = X)\r\n})\r\n",
		"import Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport MMTF from '../../vendors/mmtf'\r\nimport StructuralElement from '../../chem/StructuralElement'\r\nimport { isArrayBuffer, isUndefined } from 'lodash'\r\nimport { Matrix4, Vector3 } from 'three'\r\n\r\nconst {\r\n  Complex,\r\n  Chain,\r\n  Atom,\r\n  Element,\r\n  Helix,\r\n  Sheet,\r\n  Strand,\r\n  Bond,\r\n  Assembly,\r\n  Molecule\r\n} = chem\r\n\r\nclass ArrayComparator {\r\n  constructor(original) {\r\n    this._original = Array.from(original)\r\n    this._original.sort()\r\n\r\n    this._sum = 0\r\n    for (let i = 0; i < this._original.length; ++i) {\r\n      this._sum += this._original[i]\r\n    }\r\n  }\r\n\r\n  compare(candidate) {\r\n    const len = candidate.length\r\n    if (len !== this._original.length) {\r\n      return false\r\n    }\r\n\r\n    let sum = 0\r\n    let i\r\n    for (i = 0; i < len; ++i) {\r\n      sum += candidate[i]\r\n    }\r\n\r\n    if (sum !== this._sum) {\r\n      return false\r\n    }\r\n\r\n    const sorted = Array.from(candidate)\r\n    sorted.sort()\r\n\r\n    for (i = 0; i < len; ++i) {\r\n      if (sorted[i] !== this._original[i]) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\nArrayComparator.prototype.constructor = ArrayComparator\r\n\r\nconst StructuralElementType = StructuralElement.Type\r\n\r\n// see https://github.com/rcsb/mmtf-javascript/blob/master/src/mmtf-traverse.js\r\nconst secStructToType = [\r\n  StructuralElementType.HELIX_PI, // 0\r\n  StructuralElementType.BEND, // 1\r\n  StructuralElementType.HELIX_ALPHA, // 2\r\n  StructuralElementType.STRAND, // 3\r\n  StructuralElementType.HELIX_310, // 4\r\n  StructuralElementType.BRIDGE, // 5\r\n  StructuralElementType.TURN, // 6\r\n  StructuralElementType.COIL // 7\r\n]\r\n\r\nfunction getFirstByte(buf) {\r\n  const bytes = new Uint8Array(buf, 0, 1)\r\n  return bytes[0]\r\n}\r\n\r\nclass MMTFParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this._options.fileType = 'mmtf'\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    // check if it's binary MessagePack format containing a map (dictionary)\r\n    // see https://github.com/msgpack/msgpack/blob/master/spec.md\r\n    return isArrayBuffer(data) && (getFirstByte(data) | 1) === 0xdf\r\n  }\r\n\r\n  _onModel(_modelData) {}\r\n\r\n  _onChain(chainData) {\r\n    if (chainData.modelIndex !== 0) {\r\n      return\r\n    }\r\n\r\n    const chain = new Chain(this._complex, chainData.chainName)\r\n    this._complex._chains[chainData.chainIndex] = chain\r\n    chain._index = chainData.chainIndex\r\n  }\r\n\r\n  _onGroup(groupData) {\r\n    if (groupData.modelIndex !== 0) {\r\n      return\r\n    }\r\n\r\n    if (this.settings.now.nowater) {\r\n      // skip water\r\n      if (groupData.groupName === 'HOH' || groupData.groupName === 'WAT') {\r\n        return\r\n      }\r\n    }\r\n\r\n    const chain = this._complex._chains[groupData.chainIndex]\r\n    const icode = !groupData.insCode.charCodeAt(0) ? '' : groupData.insCode\r\n    const residue = chain.addResidue(\r\n      groupData.groupName,\r\n      groupData.groupId,\r\n      icode\r\n    )\r\n    residue._index = groupData.groupIndex\r\n\r\n    this._updateSecStructure(this._complex, residue, groupData)\r\n  }\r\n\r\n  _onAtom(atomData) {\r\n    if (atomData.modelIndex !== 0) {\r\n      return\r\n    }\r\n\r\n    const altLoc = !atomData.altLoc.charCodeAt(0) ? '' : atomData.altLoc\r\n    const atom = new Atom(\r\n      atomData.groupIndex, // we store residue index here to replace it later with actual reference\r\n      atomData.atomName,\r\n      Element.getByName(atomData.element.toUpperCase()),\r\n      new Vector3(atomData.xCoord, atomData.yCoord, atomData.zCoord),\r\n      Element.Role[atomData.atomName],\r\n      false, // hetero atoms will be marked later\r\n      atomData.atomId,\r\n      altLoc,\r\n      atomData.occupancy,\r\n      atomData.bFactor,\r\n      atomData.formalCharge\r\n    )\r\n\r\n    this._complex._atoms[atomData.atomIndex] = atom\r\n    atom.index = atomData.atomIndex\r\n\r\n    this._serialAtomMap[atomData.atomId] = atom\r\n  }\r\n\r\n  _onBond(bondData) {\r\n    const right = Math.max(bondData.atomIndex1, bondData.atomIndex2)\r\n    if (right >= this._complex._atoms.length) {\r\n      return\r\n    }\r\n    const left = Math.min(bondData.atomIndex1, bondData.atomIndex2)\r\n    this._complex.addBond(\r\n      this._complex._atoms[left],\r\n      this._complex._atoms[right],\r\n      bondData.bondOrder,\r\n      Bond.BondType.UNKNOWN,\r\n      true\r\n    )\r\n  }\r\n\r\n  _updateSecStructure(complex, residue, groupData) {\r\n    const helixClasses = [3, -1, 1, -1, 5]\r\n\r\n    if (!isUndefined(groupData) && groupData.secStruct === this._ssType) {\r\n      residue._secondary = this._ssStruct\r\n      if (this._ssStruct) {\r\n        this._ssStruct.term = residue\r\n      }\r\n      return\r\n    }\r\n\r\n    if (!isUndefined(groupData)) {\r\n      // start new secondary structure\r\n      const type = secStructToType[groupData.secStruct]\r\n      this._ssType = groupData.secStruct\r\n      this._ssStart = residue\r\n\r\n      let struct = null\r\n      switch (this._ssType) {\r\n        case -1: // undefined\r\n        case 7: // coil\r\n          break\r\n        case 0: // pi helix\r\n        case 2: // alpha helix\r\n        case 4: // 3-10 helix\r\n          struct = new Helix(\r\n            helixClasses[this._ssType],\r\n            residue,\r\n            residue,\r\n            0,\r\n            '',\r\n            '',\r\n            0\r\n          )\r\n          complex._helices.push(struct)\r\n          break\r\n        case 3: {\r\n          // extended\r\n          const sheet = new Sheet('', 0)\r\n          complex._sheets.push(sheet)\r\n          struct = new Strand(sheet, residue, residue, 0, null, null)\r\n          break\r\n        }\r\n        default:\r\n          if (type !== undefined) {\r\n            struct = new StructuralElement(type, residue, residue)\r\n          }\r\n          break\r\n      }\r\n\r\n      this._ssStruct = struct\r\n      residue._secondary = struct\r\n      if (struct) {\r\n        complex.structures.push(struct)\r\n      }\r\n    }\r\n  }\r\n\r\n  _updateMolecules(mmtfData) {\r\n    const entities = mmtfData.entityList\r\n    if (!entities) {\r\n      return\r\n    }\r\n\r\n    const chainsInModel0 = mmtfData.chainsPerModel[0]\r\n    for (let i = 0; i < entities.length; i++) {\r\n      const entity = entities[i]\r\n      const chains = entity.chainIndexList\r\n      let residues = []\r\n      for (let j = 0; j < chains.length; j++) {\r\n        const chainIndex = chains[j]\r\n        // skip chains in models other than the first one\r\n        if (chainIndex >= chainsInModel0) {\r\n          continue\r\n        }\r\n        const chain = this._complex._chains[chainIndex]\r\n        residues = residues.concat(chain._residues.slice())\r\n      }\r\n      const molecule = new Molecule(this._complex, entity.description, i + 1)\r\n      molecule.residues = residues\r\n      this._complex._molecules[i] = molecule\r\n    }\r\n  }\r\n\r\n  // populate complex with chains, residues and atoms\r\n  _traverse(mmtfData) {\r\n    const self = this\r\n\r\n    // get metadata\r\n    const { metadata } = this._complex\r\n    metadata.id = mmtfData.structureId\r\n    metadata.title = []\r\n    metadata.title[0] = mmtfData.title\r\n    metadata.date = mmtfData.releaseDate\r\n    metadata.format = 'mmtf'\r\n\r\n    // create event callback functions\r\n    const eventCallbacks = {\r\n      onModel(modelData) {\r\n        self._onModel(modelData)\r\n      },\r\n      onChain(chainData) {\r\n        self._onChain(chainData)\r\n      },\r\n      onGroup(groupData) {\r\n        self._onGroup(groupData)\r\n      },\r\n      onAtom(atomData) {\r\n        self._onAtom(atomData)\r\n      },\r\n      onBond(bondData) {\r\n        self._onBond(bondData)\r\n      }\r\n    }\r\n\r\n    // temporary variables used during traversal to track secondary structures\r\n    this._ssType = -1\r\n    this._ssStruct = null\r\n    this._ssStart = null\r\n\r\n    // traverse the structure and listen to the events\r\n    MMTF.traverse(mmtfData, eventCallbacks)\r\n\r\n    this._updateSecStructure(this._complex)\r\n    this._updateMolecules(mmtfData)\r\n  }\r\n\r\n  // During traversal atoms and residues don't come sequentially\r\n  // so a residue for certain atom can be unavailable. Thus we\r\n  // store residue index in atom.\r\n  // This function being called after traversal replaces the index\r\n  // with actual reference, and also populates atom lists in residues.\r\n  _linkAtomsToResidues() {\r\n    for (let i = 0; i < this._complex._atoms.length; ++i) {\r\n      const atom = this._complex._atoms[i]\r\n      const residue = this._complex._residues[atom.residue]\r\n      atom.residue = residue\r\n      residue._atoms.push(atom)\r\n    }\r\n  }\r\n\r\n  _findSynonymousChains() {\r\n    const named = {}\r\n    for (let i = 0; i < this._complex._chains.length; ++i) {\r\n      const chain = this._complex._chains[i]\r\n      const name = chain.getName()\r\n      if (!named.hasOwnProperty(name)) {\r\n        named[name] = []\r\n      }\r\n\r\n      named[name].push(chain._index)\r\n    }\r\n\r\n    return named\r\n  }\r\n\r\n  // NOTE: This function relies on original chain indices, so it must be called before any magic happens to chains.\r\n  _parseAssemblyInfo(mmtfData) {\r\n    let i\r\n    let j\r\n    let k\r\n    const assemblies = []\r\n    const { logger } = this\r\n\r\n    for (i = 0; i < mmtfData.bioAssemblyList.length; ++i) {\r\n      const baInfo = mmtfData.bioAssemblyList[i]\r\n      if (baInfo.transformList.length === 0) {\r\n        continue\r\n      }\r\n\r\n      const chains = baInfo.transformList[0].chainIndexList\r\n      const chainListCheck = new ArrayComparator(chains)\r\n\r\n      // build list of chain names\r\n      const chainNames = {}\r\n      for (j = 0; j < chains.length; ++j) {\r\n        chainNames[this._complex._chains[chains[j]].getName()] = 1\r\n      }\r\n\r\n      // all chains with the same name should belong to assembly if one of them belongs\r\n      const allChains = []\r\n      let name\r\n      for (name in chainNames) {\r\n        if (chainNames.hasOwnProperty(name)) {\r\n          // just concat arrays -- there should be no duplicates\r\n          Array.prototype.push.apply(allChains, this._chainsByName[name])\r\n        }\r\n      }\r\n      if (!chainListCheck.compare(allChains)) {\r\n        // assembly is missing some of the chains\r\n        logger.debug(\r\n          'MMTF: Assembly is missing some of the synonymous chains. Skipping...'\r\n        )\r\n      }\r\n\r\n      const a = new Assembly(this._complex)\r\n\r\n      // add chains to assembly\r\n      for (name in chainNames) {\r\n        if (chainNames.hasOwnProperty(name)) {\r\n          a.addChain(name)\r\n        }\r\n      }\r\n\r\n      // add unique matrices to assembly\r\n      a.addMatrix(\r\n        new Matrix4().fromArray(baInfo.transformList[0].matrix).transpose()\r\n      )\r\n      for (j = 1; j < baInfo.transformList.length; ++j) {\r\n        const transform = baInfo.transformList[j]\r\n\r\n        if (!chainListCheck.compare(transform.chainIndexList)) {\r\n          // list of chains for this transform doesn't match that for other transforms\r\n          // this is illegal in our structure\r\n          logger.debug(\r\n            'MMTF: Chain lists differ for different transforms in one assembly. Skipping...'\r\n          )\r\n          continue\r\n        }\r\n\r\n        const m = new Matrix4().fromArray(transform.matrix).transpose()\r\n\r\n        // check if matrix is already in the list\r\n        for (k = 0; k < a.matrices.length; ++k) {\r\n          if (a.matrices[k].equals(m)) {\r\n            break\r\n          }\r\n        }\r\n\r\n        if (k === a.matrices.length) {\r\n          a.addMatrix(m)\r\n        }\r\n      }\r\n\r\n      a.finalize()\r\n      assemblies.push(a)\r\n    }\r\n\r\n    return assemblies\r\n  }\r\n\r\n  // NOTE: This function relies on original chain indices, so it must be called before any magic happens to chains.\r\n  _markHeteroAtoms(mmtfData) {\r\n    const chainsInModel0 = mmtfData.chainsPerModel[0]\r\n    for (let i = 0; i < mmtfData.entityList.length; ++i) {\r\n      const entity = mmtfData.entityList[i]\r\n      if (entity.type !== 'polymer') {\r\n        for (let j = 0; j < entity.chainIndexList.length; ++j) {\r\n          const chainIndex = entity.chainIndexList[j]\r\n          // skip chains in models other than the first one\r\n          if (chainIndex >= chainsInModel0) {\r\n            continue\r\n          }\r\n          const chain = this._complex._chains[chainIndex]\r\n          for (let k = 0; k < chain._residues.length; ++k) {\r\n            const res = chain._residues[k]\r\n            for (let m = 0; m < res._atoms.length; ++m) {\r\n              res._atoms[m].het = true\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // joins chains with the same name into single chain\r\n  _joinSynonymousChains() {\r\n    let i\r\n    let j\r\n\r\n    const primaryChainsArray = []\r\n    const primaryChainsHash = {}\r\n\r\n    // join chains\r\n    for (i = 0; i < this._complex._chains.length; ++i) {\r\n      const chain = this._complex._chains[i]\r\n      const name = chain.getName()\r\n      if (!primaryChainsHash.hasOwnProperty(name)) {\r\n        // new name -- this is a primary chain\r\n        primaryChainsHash[name] = chain\r\n        chain._index = primaryChainsArray.length // update index as this array will later replace original chain list\r\n        primaryChainsArray.push(chain)\r\n        continue\r\n      }\r\n\r\n      // this chain should be joined with the primary chain of the same name\r\n      const primary = primaryChainsHash[name]\r\n      for (j = 0; j < chain._residues.length; ++j) {\r\n        const residue = chain._residues[j]\r\n        primary._residues.push(residue)\r\n        residue._chain = primary\r\n      }\r\n    }\r\n\r\n    // replace chains list with one containing only primary chains\r\n    // dropping references to all chains but primary\r\n    this._complex._chains = primaryChainsArray\r\n  }\r\n\r\n  parseSync() {\r\n    const mmtfData = MMTF.decode(this._data)\r\n\r\n    this._complex = new Complex()\r\n    this._serialAtomMap = {} // filled during traversal\r\n\r\n    this._traverse(mmtfData)\r\n    this._linkAtomsToResidues()\r\n    this._markHeteroAtoms(mmtfData)\r\n    this._chainsByName = this._findSynonymousChains()\r\n    Array.prototype.push.apply(\r\n      this._complex.units,\r\n      this._parseAssemblyInfo(mmtfData)\r\n    )\r\n    this._joinSynonymousChains()\r\n\r\n    this._complex.finalize({\r\n      needAutoBonding: false,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n\r\n    return this._complex\r\n  }\r\n}\r\n\r\nMMTFParser.formats = ['mmtf']\r\nMMTFParser.extensions = ['.mmtf']\r\nMMTFParser.binary = true\r\n\r\nexport default MMTFParser\r\n",
		"class ParsingError extends Error {\r\n  constructor(message, line, column) {\r\n    super(`data:${line}:${column}: ${message}`)\r\n\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, ParsingError)\r\n    }\r\n\r\n    this.name = 'ParsingError'\r\n    this.parseLine = line\r\n    this.parseColumn = column\r\n  }\r\n}\r\n\r\nexport default ParsingError\r\n",
		"import { set } from 'lodash'\r\nimport ParsingError from './ParsingError'\r\n\r\n// Implemented and being tested against: https://www.iucr.org/resources/cif/spec/version1.1/cifsyntax\r\n\r\nfunction _isWhitespace(ch) {\r\n  return ch === 32 || ch === 10 || ch === 13 || ch === 9\r\n}\r\n\r\nfunction _inlineIndexOf(ch0, str, idx) {\r\n  const len = str.length\r\n  let ch = -1\r\n  while (idx < len) {\r\n    ch = str.charCodeAt(idx)\r\n    if (ch === ch0 || ch === 10) {\r\n      break\r\n    }\r\n    ++idx\r\n  }\r\n  return ch === ch0 ? idx : -1\r\n}\r\n\r\nexport default function readCIF(source) {\r\n  let i = 0\r\n  let j = 0\r\n  const n = source.length\r\n  let code = NaN\r\n  let newline = true\r\n  let line = 1\r\n  let column = 1\r\n  let begin\r\n  let state = 0 // 0 - start, 1 - block, 2 - item, 3 - loop, 4 - values, 5 - value\r\n  const result = {}\r\n  let block = {}\r\n  let keys = []\r\n  let keysCount = 0\r\n  let key = ''\r\n  let values = []\r\n  let valuesCount = 0\r\n  let value\r\n\r\n  function _parseValue() {\r\n    let val\r\n    if (\r\n      (code === 46 || code === 63) &&\r\n      (i + 1 >= n || _isWhitespace(source.charCodeAt(i + 1)))\r\n    ) {\r\n      // '.' or '?' .....\r\n      // it's a missing value\r\n      ++column\r\n      ++i\r\n      return undefined\r\n    }\r\n    if (newline && code === 59) {\r\n      // ';' ......................................................................\r\n      // parse multi-line string\r\n      j = i\r\n      let lines = 0\r\n      do {\r\n        j = _inlineIndexOf(10, source, j + 1) // '\\n'\r\n        if (j === -1) {\r\n          throw new ParsingError('Unterminated text block found', line, column)\r\n        }\r\n        ++lines\r\n      } while ((j + 1 < n && source.charCodeAt(j + 1) !== code) || j + 1 >= n)\r\n      val = source.substring(i + 1, j).replace(/\\r/g, '')\r\n      i = j + 2\r\n      line += lines\r\n      column = 1\r\n      newline = false\r\n      return val\r\n    }\r\n    if (code === 39 || code === 34) {\r\n      // ''' or '\"' ...........................................................\r\n      // parse quoted string\r\n      j = i\r\n      do {\r\n        j = _inlineIndexOf(code, source, j + 1)\r\n        if (j === -1) {\r\n          throw new ParsingError(\r\n            'Unterminated quoted string found',\r\n            line,\r\n            column\r\n          )\r\n        }\r\n      } while (j + 1 < n && !_isWhitespace(source.charCodeAt(j + 1)))\r\n      val = source.substring(i + 1, j)\r\n      column += j - i + 1\r\n      i = j + 1\r\n      return val\r\n    } // ......................................................................................................\r\n    // parse until the first whitespace\r\n    j = i\r\n    while (j < n && !_isWhitespace(source.charCodeAt(j))) {\r\n      ++j\r\n    }\r\n    val = source.substring(i, j)\r\n    column += j - i\r\n    i = j\r\n    // try to convert to a number\r\n    const num = Number(val)\r\n    if (!Number.isNaN(num)) {\r\n      return num\r\n    }\r\n    // or leave as an unquoted string\r\n    return val\r\n  }\r\n\r\n  function _storeKey(tag) {\r\n    keys[keysCount++] = tag\r\n  }\r\n\r\n  function _storeValue(val) {\r\n    const keyIndex = valuesCount % keysCount\r\n    values[keyIndex].push(val)\r\n    ++valuesCount\r\n    return val\r\n  }\r\n\r\n  while (i <= n) {\r\n    code = source.charCodeAt(i) // 'NaN' in place of '<eof>'\r\n    if (code === 13) {\r\n      // '\\r' .......................................................................................\r\n      // just ignore\r\n    } else if (code === 10) {\r\n      // '\\n' ................................................................................\r\n      // take note of new lines\r\n      newline = true\r\n      ++line\r\n      column = 1\r\n    } else {\r\n      // process inline characters\r\n      if (code === 32 || code === 9) {\r\n        // ' ' or '\\t' ................................................................\r\n        // just ignore\r\n      } else if (code === 35) {\r\n        // '#' ...............................................................................\r\n        // skip the comment until before the end of the line\r\n        i = _inlineIndexOf(10, source, i + 1) // '\\n'\r\n        if (i === -1) {\r\n          break\r\n        } else {\r\n          continue // don't forget to process the new line\r\n        }\r\n      } else if (state === 0) {\r\n        // start =============================================================================\r\n        if (\r\n          (code === 68 || code === 100) &&\r\n          source.substr(i + 1, 4).toLowerCase() === 'ata_'\r\n        ) {\r\n          // 'data_' ..........\r\n          j = i + 5\r\n          begin = j\r\n          while (j < n && !_isWhitespace(source.charCodeAt(j))) {\r\n            ++j\r\n          }\r\n          column += j - i\r\n          i = j\r\n          if (begin < i) {\r\n            // add new data block\r\n            result[source.substring(begin, i)] = block = {}\r\n            state = 1 // block\r\n            continue // don't forget to process the whitespace\r\n          } else {\r\n            throw new ParsingError('Data block name missing', line, column)\r\n          }\r\n        } else if (Number.isNaN(code)) {\r\n          // <eof> ....................................................................\r\n          break\r\n        } else {\r\n          // ..................................................................................................\r\n          throw new ParsingError(\r\n            `Unexpected character in state ${state}`,\r\n            line,\r\n            column\r\n          )\r\n        }\r\n      } else if (state === 1) {\r\n        // block =============================================================================\r\n        if (\r\n          (code === 68 || code === 100) &&\r\n          source.substr(i + 1, 4).toLowerCase() === 'ata_'\r\n        ) {\r\n          // 'data_' ..........\r\n          state = 0 // start\r\n          continue // parse again in a different state\r\n        } else if (code === 95) {\r\n          // '_' .............................................................................\r\n          j = i + 1\r\n          begin = j\r\n          while (j < n && !_isWhitespace(source.charCodeAt(j))) {\r\n            ++j\r\n          }\r\n          column += j - i\r\n          i = j\r\n          if (begin < i) {\r\n            // start new item\r\n            key = source.substring(begin, i)\r\n            state = 2 // item\r\n            continue // don't forget to process the whitespace\r\n          } else {\r\n            throw new ParsingError('Tag name missing', line, column)\r\n          }\r\n        } else if (\r\n          (code === 76 || code === 108) &&\r\n          source.substr(i + 1, 4).toLowerCase() === 'oop_'\r\n        ) {\r\n          // 'loop_' ...\r\n          i += 5\r\n          column += 5\r\n          if (i < n && !_isWhitespace(source.charCodeAt(i))) {\r\n            throw new ParsingError(\r\n              `Unexpected character in state ${state}`,\r\n              line,\r\n              column\r\n            )\r\n          } else {\r\n            // start new loop\r\n            keys = []\r\n            keysCount = 0\r\n            values = []\r\n            valuesCount = 0\r\n            state = 3 // loop\r\n            continue // don't forget to process the whitespace\r\n          }\r\n        } else if (Number.isNaN(code)) {\r\n          // <eof> ....................................................................\r\n          break\r\n        } else {\r\n          // ..................................................................................................\r\n          throw new ParsingError(\r\n            `Unexpected character in state ${state}`,\r\n            line,\r\n            column\r\n          )\r\n        }\r\n      } else if (state === 2) {\r\n        // item ==============================================================================\r\n        if (Number.isNaN(code)) {\r\n          break\r\n        }\r\n        value = _parseValue()\r\n        set(block, key, value)\r\n        state = 1 // block\r\n        continue\r\n      } else if (state === 3) {\r\n        // loop ==============================================================================\r\n        if (code === 95) {\r\n          // '_' ....................................................................................\r\n          j = i + 1\r\n          begin = j\r\n          while (j < n && !_isWhitespace(source.charCodeAt(j))) {\r\n            ++j\r\n          }\r\n          column += j - i\r\n          i = j\r\n          if (begin < i) {\r\n            // add new key\r\n            _storeKey(source.substring(begin, i))\r\n            continue // don't forget to process the whitespace\r\n          } else {\r\n            throw new ParsingError('Tag name missing', line, column)\r\n          }\r\n        } else {\r\n          // ..................................................................................................\r\n          if (keysCount > 0) {\r\n            for (let keyIndex = 0; keyIndex < keysCount; ++keyIndex) {\r\n              value = []\r\n              values[keyIndex] = value\r\n              set(block, keys[keyIndex], value)\r\n            }\r\n            state = 4\r\n            continue // parse again in a different state\r\n          }\r\n          throw new ParsingError(\r\n            'Data tags are missing inside a loop',\r\n            line,\r\n            column\r\n          )\r\n        }\r\n      } else if (state === 4) {\r\n        // values ============================================================================\r\n        if (\r\n          (code === 68 || code === 100) &&\r\n          source.substr(i + 1, 4).toLowerCase() === 'ata_'\r\n        ) {\r\n          // 'data_' ..........\r\n          state = 0 // start\r\n        } else if (code === 95) {\r\n          // '_' .............................................................................\r\n          state = 1 // block\r\n        } else if (\r\n          (code === 76 || code === 108) &&\r\n          source.substr(i + 1, 4).toLowerCase() === 'oop_'\r\n        ) {\r\n          // 'loop_' ...\r\n          state = 1 // block\r\n        } else if (Number.isNaN(code)) {\r\n          // <eof> ....................................................................\r\n          state = 0\r\n        } else {\r\n          // ..................................................................................................\r\n          _storeValue(_parseValue())\r\n        }\r\n        continue // parse again in a different state\r\n      } else {\r\n        // ====================================================================================================\r\n        throw new ParsingError(\r\n          `Unexpected internal state ${state}`,\r\n          line,\r\n          column\r\n        )\r\n      }\r\n\r\n      newline = false\r\n      ++column\r\n    }\r\n    ++i\r\n  }\r\n\r\n  if (state === 2) {\r\n    // item\r\n    throw new ParsingError(\r\n      `Unexpected end of file in state ${state}`,\r\n      line,\r\n      column\r\n    )\r\n  }\r\n\r\n  return result\r\n}\r\n",
		"import Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport StructuralElement from '../../chem/StructuralElement'\r\nimport readCIF from './readCIF'\r\nimport { isArray, isString } from 'lodash'\r\nimport { Matrix4, Vector3 } from 'three'\r\n\r\nconst { Complex, Element, Helix, Sheet, Strand, Assembly, Molecule } = chem\r\n\r\nconst cRequiredAtomFields = [\r\n  'auth_seq_id',\r\n  'Cartn_x',\r\n  'Cartn_y',\r\n  'Cartn_z',\r\n  'label_atom_id'\r\n]\r\n\r\nconst cSecondaryCoding = {\r\n  helx: 'helix',\r\n  turn: 'turn',\r\n  strn: 'strand'\r\n}\r\n\r\nfunction getTypeFromId(string) {\r\n  const typeId = /[A-Za-z]+/.exec(string)\r\n  if (!typeId) {\r\n    return null\r\n  }\r\n\r\n  return cSecondaryCoding[typeId[0].toLowerCase()]\r\n}\r\n\r\n/**\r\n * Make valid object an array\r\n * @param arrayLikeObject\r\n * @return {array, object} array or object\r\n */\r\nfunction arrize(arrayLikeObject) {\r\n  if (\r\n    arrayLikeObject === null ||\r\n    arrayLikeObject === undefined ||\r\n    isArray(arrayLikeObject)\r\n  ) {\r\n    return arrayLikeObject\r\n  }\r\n  return [arrayLikeObject]\r\n}\r\n\r\nfunction nameToElement(name) {\r\n  // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\r\n  //\r\n  // http://www.cgl.ucsf.edu/chimera/docs/UsersGuide/tutorials/pdbintro.html#note1\r\n  //\r\n  // Atom names start with element symbols right-justified in columns 13-14\r\n  // as permitted by the length of the name. For example, the symbol FE for\r\n  // iron appears in columns 13-14, whereas the symbol C for carbon appears\r\n  // in column 14 (see Misaligned Atom Names). If an atom name has four\r\n  // characters, however, it must start in column 13 even if the element\r\n  // symbol is a single character (for example, see Hydrogen Atoms).\r\n\r\n  const veryLong = name.trim().length === 4\r\n  return name.slice(0, veryLong ? 1 : 2).trim()\r\n}\r\n\r\nclass AtomDataError extends Error {\r\n  constructor(message) {\r\n    super()\r\n    this.name = 'AtomDataError'\r\n    this.message = message\r\n  }\r\n}\r\n\r\nfunction _getOperations(operList) {\r\n  if (!operList) {\r\n    return null\r\n  }\r\n  const idc = arrize(operList.id)\r\n  const { matrix, vector } = operList\r\n  if (!idc || !matrix || !vector) {\r\n    return null\r\n  }\r\n\r\n  const ops = []\r\n  for (let i = 0, n = idc.length; i < n; ++i) {\r\n    const mtx = new Matrix4()\r\n    const { elements } = mtx\r\n\r\n    for (let row = 0; row < 3; ++row) {\r\n      const matrixData = matrix[row + 1]\r\n      elements[row] = arrize(matrixData[1])[i]\r\n      elements[row + 4] = arrize(matrixData[2])[i]\r\n      elements[row + 8] = arrize(matrixData[3])[i]\r\n      elements[row + 12] = arrize(vector[row + 1])[i]\r\n    }\r\n    ops[idc[i]] = mtx\r\n  }\r\n  return ops\r\n}\r\n\r\nfunction _extractOperations(assemblyGen, opsDict) {\r\n  assemblyGen = isString(assemblyGen) ? assemblyGen : `${assemblyGen}`\r\n  const l = assemblyGen.replace(/\\)\\s*\\(/g, '!').replace(/[()']/g, '')\r\n  const groupStr = l.split('!')\r\n  const gps = []\r\n\r\n  for (let grIdx = 0, grCount = groupStr.length; grIdx < grCount; ++grIdx) {\r\n    const gr = groupStr[grIdx].split(',')\r\n    const gp = []\r\n    let idx = 0\r\n    for (let i = 0, n = gr.length; i < n; ++i) {\r\n      const s = gr[i]\r\n      if (s.includes('-')) {\r\n        const es = s.split('-')\r\n        let j = parseInt(es[0], 10)\r\n        const m = parseInt(es[1], 10)\r\n        for (; j <= m; ++j) {\r\n          gp[idx++] = opsDict[j]\r\n        }\r\n      } else {\r\n        gp[idx++] = opsDict[s]\r\n      }\r\n    }\r\n    gps.push(gp)\r\n  }\r\n\r\n  // traverse all groups from the end of array and make all mults\r\n  const matrices = []\r\n  let cnt = 0\r\n  function traverse(level, mtx) {\r\n    for (let ii = 0, nn = gps[level].length; ii < nn; ++ii) {\r\n      const newMtx = mtx ? mtx.clone() : new Matrix4()\r\n      newMtx.multiplyMatrices(gps[level][ii], newMtx)\r\n      if (level === 0) {\r\n        matrices[cnt++] = newMtx\r\n      } else {\r\n        traverse(level - 1, newMtx)\r\n      }\r\n    }\r\n  }\r\n  traverse(gps.length - 1)\r\n  return matrices\r\n}\r\n\r\nclass CIFParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this.asymDict = {}\r\n    this.molecules = []\r\n    this._options.fileType = 'cif'\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return isString(data) && /^\\s*data_/i.test(data)\r\n  }\r\n\r\n  parseSync() {\r\n    this.logger.info('Parsing CIF file..')\r\n    const data = readCIF(this._data)\r\n    return this._toComplex(data)\r\n  }\r\n\r\n  /**\r\n   * Convert intermediate structure into our valid Complex object\r\n   * @param cifData intermediate CIF object\r\n   * @returns {Complex} complex\r\n   * @private\r\n   */\r\n  _toComplex(cifData) {\r\n    const complex = new Complex()\r\n    const complexData = cifData[Object.keys(cifData)[0]]\r\n    this._extractAtoms(complex, complexData)\r\n    this._extractSecondary(complex, complexData)\r\n    this._extractAssemblies(complex, complexData)\r\n    this._extractMolecules(complex, complexData)\r\n    this._extractMetadata(complex, complexData)\r\n    complex.finalize({\r\n      needAutoBonding: true,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing\r\n    })\r\n\r\n    return complex\r\n  }\r\n\r\n  /**\r\n   * Extract metadata\r\n   * @param complex structure to fill\r\n   * @param complexData complex data from CIF file\r\n   * @private\r\n   */\r\n\r\n  _extractMetadata(complex, complexData) {\r\n    const { metadata } = complex\r\n    metadata.id = complexData.entry.id\r\n    metadata.classification = complexData.struct_keywords.pdbx_keywords\r\n    const databaserev = complexData.database_PDB_rev\r\n    metadata.date =\r\n      databaserev && databaserev.date_original ? databaserev.date_original : ''\r\n    metadata.format = 'cif'\r\n    metadata.title = []\r\n    metadata.title[0] = complexData.struct.title\r\n  }\r\n\r\n  /**\r\n   * Extract molecules information from CIF structure (should be called strictly after _extractAtoms)\r\n   * @param complexData complex data from CIF file\r\n   * @private\r\n   */\r\n  _extractMolecules(complex, complexData) {\r\n    const molData = complexData.entity\r\n    const names = arrize(molData.pdbx_description)\r\n    const count = names.length\r\n    let i\r\n\r\n    // molecules names from cif\r\n    for (i = 0; i < count; i++) {\r\n      if (this.molecules[i]) {\r\n        // molecule was created during atoms processing\r\n        this.molecules[i].name = names[i]\r\n      } else {\r\n        // molecule wasn't created, because there is no atom which is contained\r\n        this.molecules[i] = { name: names[i], residues: [] }\r\n      }\r\n    }\r\n\r\n    // reorganize molecules for complex and check chains\r\n    const molecules = complex.getMolecules()\r\n    for (i = 0; i < count; i++) {\r\n      const molecule = this.molecules[i]\r\n      molecules[i] = new Molecule(complex, molecule.name, i + 1)\r\n      molecules[i].residues = molecule.residues\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extract atom information from CIF structure and fill complex\r\n   * @param {Complex} complex\r\n   * @param complexData complex data from CIF file\r\n   * @private\r\n   */\r\n  _extractAtoms(complex, complexData) {\r\n    const atomData = complexData.atom_site\r\n    if (!atomData) {\r\n      throw new AtomDataError('CIF parsing error: atom_site is not specified!')\r\n    }\r\n\r\n    for (let f = 0, n = cRequiredAtomFields.length; f < n; ++f) {\r\n      if (!atomData[cRequiredAtomFields[f]]) {\r\n        throw new AtomDataError(\r\n          `CIF parsing error: requires field ${cRequiredAtomFields[f]} not found!`\r\n        )\r\n      }\r\n    }\r\n\r\n    const { asymDict } = this\r\n    // required fields\r\n    const resIdc = arrize(atomData.auth_seq_id)\r\n    const x = arrize(atomData.Cartn_x)\r\n    const y = arrize(atomData.Cartn_y)\r\n    const z = arrize(atomData.Cartn_z)\r\n    const names = arrize(atomData.label_atom_id)\r\n    const count = names.length\r\n    // optional fields\r\n    const group = arrize(atomData.group_PDB) || []\r\n    const chainIdc = arrize(atomData.auth_asym_id) || []\r\n    const chainLabelIdc = arrize(atomData.label_asym_id) || []\r\n    const serials = arrize(atomData.id) || []\r\n    const iCodes = arrize(atomData.pdbx_PDB_ins_code) || []\r\n    const resNames = arrize(atomData.label_comp_id) || []\r\n    const elements = arrize(atomData.type_symbol) || []\r\n    const tempFactors = arrize(atomData.B_iso_or_equiv) || []\r\n    const occupancies = arrize(atomData.occupancy) || []\r\n    const charges = arrize(atomData.pdbx_formal_charge) || []\r\n    const altLocs = arrize(atomData.label_alt_id) || []\r\n    const models = arrize(atomData.pdbx_PDB_model_num) || []\r\n    const molecules = arrize(atomData.label_entity_id) || []\r\n\r\n    let chain = null\r\n    let residue = null\r\n    for (let i = 0; i < count; ++i) {\r\n      const model = models[i] || 1\r\n      if (model !== 1) {\r\n        continue\r\n      }\r\n      const chainID = String(chainIdc[i] || ' ')\r\n\r\n      if (!chain || chain.getName() !== chainID) {\r\n        chain = complex.getChain(chainID) || complex.addChain(chainID)\r\n      }\r\n      asymDict[String(chainLabelIdc[i] || ' ')] = chainID\r\n      const resSeq = resIdc[i]\r\n      const iCode = String(iCodes[i] || ' ')\r\n      const resName = String(resNames[i] || '')\r\n      if (\r\n        !residue ||\r\n        residue.getSequence() !== resSeq ||\r\n        residue.getICode() !== iCode\r\n      ) {\r\n        residue = chain.addResidue(resName, resSeq, iCode)\r\n\r\n        // store residue in appropriate molecule\r\n        const moleculeIdx = molecules[i] - 1\r\n        let entity = this.molecules[moleculeIdx]\r\n        if (!entity) {\r\n          // create new molecule if it hasn't been created\r\n          this.molecules[moleculeIdx] = { name: '', residues: [] }\r\n          entity = this.molecules[moleculeIdx]\r\n        }\r\n        entity.residues.push(residue)\r\n      }\r\n\r\n      const name = names[i]\r\n      const element = elements[i] || nameToElement(name)\r\n      const type = Element.getByName(element)\r\n      const role = Element.Role[name.trim()]\r\n      const xyz = new Vector3(x[i], y[i], z[i])\r\n      const het = group[i] === 'HETATM' || false\r\n      const serial = serials[i] || i\r\n      const tempFactor = tempFactors[i] || 0.0\r\n      const occupancy = occupancies[i] || 0.0\r\n      const altLoc = String(altLocs[i] || '')\r\n      const charge = charges[i] || 0\r\n\r\n      residue.addAtom(\r\n        name,\r\n        type,\r\n        xyz,\r\n        role,\r\n        het,\r\n        serial,\r\n        altLoc,\r\n        occupancy,\r\n        tempFactor,\r\n        charge\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts secondary structure information from CIF intermediate data\r\n   * and adds it into complex\r\n   * @param {Complex} complex - complex to fill\r\n   * @param complexData - CIF complex data\r\n   * @private\r\n   */\r\n  _extractSecondary(complex, complexData) {\r\n    if (complexData.struct_conf) {\r\n      this._extractConfs(complex, complexData.struct_conf)\r\n    }\r\n    if (complexData.struct_sheet_range) {\r\n      this._extractSheets(complex, complexData.struct_sheet_range)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts sheets information from CIF intermediate data\r\n   * and adds it into complex\r\n   * @param {Complex} complex\r\n   * @param sheetData\r\n   * @private\r\n   */\r\n  _extractSheets(complex, sheetData) {\r\n    const { asymDict } = this\r\n    if (\r\n      !sheetData.sheet_id ||\r\n      !sheetData.id ||\r\n      !sheetData.beg_label_seq_id ||\r\n      !sheetData.end_label_seq_id ||\r\n      !sheetData.beg_label_asym_id\r\n    ) {\r\n      return\r\n    }\r\n    // Strand(sheet, start, end, sense, cur, prev)\r\n    const sheets = complex._sheets\r\n\r\n    function getSheet(name) {\r\n      const n = sheets.length\r\n      for (let i = 0; i < n; ++i) {\r\n        if (sheets[i]._name === name) {\r\n          return sheets[i]\r\n        }\r\n      }\r\n      sheets[n] = new Sheet(name, 0)\r\n      return sheets[n]\r\n    }\r\n\r\n    const sheetNames = arrize(sheetData.sheet_id)\r\n    const strandNames = arrize(sheetData.id)\r\n    const starts = arrize(sheetData.beg_auth_seq_id)\r\n    const ends = arrize(sheetData.end_auth_seq_id)\r\n    const chains = arrize(sheetData.beg_label_asym_id)\r\n    const stICodes = arrize(sheetData.pdbx_beg_PDB_ins_code) || []\r\n    const endICodes = arrize(sheetData.pdbx_end_PDB_ins_code) || []\r\n\r\n    for (let i = 0, n = strandNames.length; i < n; ++i) {\r\n      const chain = complex.getChain(asymDict[chains[i]])\r\n      const sheet = getSheet(sheetNames[i])\r\n      const startIdx = starts[i]\r\n      const endIdx = ends[i]\r\n      const startICode = stICodes[i] || ' '\r\n      const endICode = endICodes[i] || ' '\r\n\r\n      const start = chain.findResidue(startIdx, startICode)\r\n      const end = chain.findResidue(endIdx, endICode)\r\n\r\n      // TODO think about last condition\r\n      if (!start || !end) {\r\n        continue\r\n      }\r\n\r\n      const strand = new Strand(sheet, start[0], end[0], 0, null, null)\r\n      const residues = chain.getResidues()\r\n      for (let r = start[1]; r <= end[1]; ++r) {\r\n        residues[r]._secondary = strand\r\n      }\r\n      sheet.addStrand(strand)\r\n      complex.structures.push(strand)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts helix/turn/strand(?) information from CIF intermediate data\r\n   * and adds it into complex\r\n   * @param {Complex} complex\r\n   * @param helicesData\r\n   * @private\r\n   */\r\n  _extractConfs(complex, helicesData) {\r\n    const { asymDict } = this\r\n    if (\r\n      !helicesData.conf_type_id ||\r\n      !helicesData.beg_label_seq_id ||\r\n      !helicesData.end_label_seq_id ||\r\n      !helicesData.beg_label_asym_id\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const types = arrize(helicesData.conf_type_id)\r\n    const starts = arrize(helicesData.beg_auth_seq_id)\r\n    const stICodes = arrize(helicesData.pdbx_beg_PDB_ins_code) || []\r\n    const ends = arrize(helicesData.end_auth_seq_id)\r\n    const endICodes = arrize(helicesData.pdbx_end_PDB_ins_code) || []\r\n    const comments = arrize(helicesData.details) || []\r\n    const lengths = arrize(helicesData.pdbx_PDB_helix_length) || []\r\n    const helixClasses = arrize(helicesData.pdbx_PDB_helix_class) || []\r\n    const names = arrize(helicesData.id) || []\r\n    const chains = arrize(helicesData.beg_label_asym_id)\r\n\r\n    for (let i = 0, n = types.length; i < n; ++i) {\r\n      const type = getTypeFromId(types[i])\r\n      if (!type) {\r\n        continue\r\n      }\r\n      const name = names[i] || types[i]\r\n      const chain = complex.getChain(asymDict[chains[i]])\r\n\r\n      const startIdx = starts[i]\r\n      const endIdx = ends[i]\r\n      const startICode = stICodes[i] || ' '\r\n      const endICode = endICodes[i] || ' '\r\n\r\n      const start = chain.findResidue(startIdx, startICode)\r\n      const end = chain.findResidue(endIdx, endICode)\r\n\r\n      // TODO think about last condition\r\n      if (!start || !end) {\r\n        continue\r\n      }\r\n      const comment = comments[i] || ''\r\n      const length = lengths[i] || 0\r\n      const helixClass = helixClasses[i] || ' '\r\n      let struct\r\n      if (type === 'helix') {\r\n        const idx = complex._helices.length\r\n        struct = new Helix(\r\n          helixClass,\r\n          start[0],\r\n          end[0],\r\n          idx,\r\n          name,\r\n          comment,\r\n          length\r\n        )\r\n        complex.addHelix(struct)\r\n        complex.structures.push(struct)\r\n      } else if (type === 'turn') {\r\n        struct = new StructuralElement(\r\n          StructuralElement.Type.TURN,\r\n          start[0],\r\n          end[0]\r\n        )\r\n        complex.structures.push(struct)\r\n      } else {\r\n        struct = null\r\n      }\r\n      if (!struct) {\r\n        continue\r\n      }\r\n      const residues = chain.getResidues()\r\n      for (let r = start[1]; r <= end[1]; ++r) {\r\n        residues[r]._secondary = struct\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extract biological assemblies information from CIF structure and fill complex\r\n   * @param {Complex} complex\r\n   * @param complexData complex data from CIF file\r\n   * @private\r\n   */\r\n  _extractAssemblies(complex, complexData) {\r\n    const { asymDict } = this\r\n    const asmGen = complexData.pdbx_struct_assembly_gen\r\n    if (!asmGen) {\r\n      return\r\n    }\r\n\r\n    const asmIdx = arrize(asmGen.assembly_id)\r\n    const asmOper = arrize(asmGen.oper_expression)\r\n    const asmList = arrize(asmGen.asym_id_list)\r\n    if (!asmIdx || !asmOper || !asmList) {\r\n      return\r\n    }\r\n\r\n    const operList = _getOperations(complexData.pdbx_struct_oper_list)\r\n    if (!operList) {\r\n      return\r\n    }\r\n\r\n    for (let i = 0, n = asmIdx.length; i < n; ++i) {\r\n      const asm = new Assembly(complex)\r\n      const assemblyOps = _extractOperations(asmOper[i], operList)\r\n      const entries = asmList[i].split(',')\r\n      for (let ii = 0, nn = entries.length; ii < nn; ++ii) {\r\n        const chain = entries[ii].trim()\r\n        if (chain.length > 0) {\r\n          asm.addChain(asymDict[chain])\r\n        }\r\n      }\r\n      asm.matrices = assemblyOps\r\n      complex.units.push(asm)\r\n    }\r\n  }\r\n}\r\n\r\nCIFParser.formats = ['cif', 'mmcif']\r\nCIFParser.extensions = ['.cif', '.mmcif']\r\n\r\nexport default CIFParser\r\n",
		"import Volume from '../../chem/Volume'\r\nimport { Box3, Vector3 } from 'three'\r\nimport { isArrayBuffer, isTypedArray, pick } from 'lodash'\r\n\r\nexport const valueType = {\r\n  singular: 0,\r\n  vector: 1,\r\n  array: 2,\r\n  buffer: 3\r\n}\r\n\r\nclass VolumeModel {\r\n  _xyz2crs = []\r\n\r\n  _origin = new Vector3(0, 0, 0)\r\n\r\n  constructor() {\r\n    this._header = {}\r\n    this._boxSize = new Vector3()\r\n    this._boxStart = new Vector3()\r\n    this._header.delta = {}\r\n    this._header.extent = []\r\n    this._header.nstart = []\r\n    this._header.grid = []\r\n    this._header.crs2xyz = []\r\n    this._header.cellDims = new Vector3()\r\n    this._header.angles = []\r\n    this._header.origin = new Vector3(0, 0, 0)\r\n    this._header.dmin = 0\r\n    this._header.dmean = 0\r\n    this._header.dmax = 0\r\n  }\r\n\r\n  _typedCheck() {\r\n    if (isTypedArray(this._buff)) {\r\n      this._buff = this._buff.buffer\r\n    } else if (!isArrayBuffer(this._buff)) {\r\n      throw new TypeError('Expected ArrayBuffer or TypedArray')\r\n    }\r\n  }\r\n\r\n  _fillHeader(headerFormat, arrays) {\r\n    for (const key in headerFormat) {\r\n      if (headerFormat.hasOwnProperty(key)) {\r\n        switch (headerFormat[key][0]) {\r\n          case valueType.singular:\r\n            this._header[key] =\r\n              arrays[headerFormat[key][1]][headerFormat[key][2]]\r\n            break\r\n\r\n          case valueType.array:\r\n            this._parseArray(\r\n              this._header[key],\r\n              arrays[headerFormat[key][1]],\r\n              headerFormat[key][2]\r\n            )\r\n            break\r\n\r\n          case valueType.vector:\r\n            this._parseVector(\r\n              this._header[key],\r\n              arrays[headerFormat[key][1]],\r\n              headerFormat[key][2]\r\n            )\r\n            break\r\n\r\n          case valueType.buffer:\r\n            this._header[key] = new Uint8Array(\r\n              arrays[headerFormat[key][1]],\r\n              [headerFormat[key][2]] * 4,\r\n              [headerFormat[key][3]] * 4\r\n            )\r\n            break\r\n\r\n          default:\r\n            break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _parseVector(vector, arr, pos) {\r\n    ;[vector.x, vector.y, vector.z] = [arr[pos], arr[pos + 1], arr[pos + 2]]\r\n  }\r\n\r\n  _parseArray(vector, arr, pos) {\r\n    vector[0] = arr[pos]\r\n    vector[1] = arr[pos + 1]\r\n    vector[2] = arr[pos + 2]\r\n  }\r\n\r\n  _parseHeader(_buffer) {}\r\n\r\n  _setAxisIndices() {}\r\n\r\n  _setOrigins() {}\r\n\r\n  _getAxis() {\r\n    const header = this._header\r\n\r\n    const xScale = header.cellDims.x / header.grid[0]\r\n    const yScale = header.cellDims.y / header.grid[1]\r\n    const zScale = header.cellDims.z / header.grid[2]\r\n\r\n    const [alpha, beta, gamma] = header.angles\r\n\r\n    const z1 = Math.cos(beta)\r\n    const z2 =\r\n      (Math.cos(alpha) - Math.cos(beta) * Math.cos(gamma)) / Math.sin(gamma)\r\n    const z3 = Math.sqrt(1.0 - z1 * z1 - z2 * z2)\r\n\r\n    const xaxis = new Vector3(xScale, 0, 0)\r\n    const yaxis = new Vector3(\r\n      Math.cos(gamma) * yScale,\r\n      Math.sin(gamma) * yScale,\r\n      0\r\n    )\r\n    const zaxis = new Vector3(z1 * zScale, z2 * zScale, z3 * zScale)\r\n\r\n    return [xaxis, yaxis, zaxis]\r\n  }\r\n\r\n  _getXYZdim() {\r\n    return [\r\n      this._header.extent[this._xyz2crs[0]],\r\n      this._header.extent[this._xyz2crs[1]],\r\n      this._header.extent[this._xyz2crs[2]]\r\n    ]\r\n  }\r\n\r\n  _getVolumeInfo() {\r\n    const volInfo = pick(this._header, ['dmean', 'dmin', 'dmax', 'sd', 'delta'])\r\n    volInfo.obtuseAngle = this._header.angles.map((angle) =>\r\n      Number(angle >= Math.PI / 2)\r\n    )\r\n    return volInfo\r\n  }\r\n\r\n  _setBoxParams(xaxis, yaxis, zaxis) {\r\n    // if axes are not orthogonal, the origins might not match with box coordinates - need to make shift\r\n    let shiftX = 0\r\n    let shiftY = 0\r\n    const [alpha, beta, gamma] = this._header.angles\r\n\r\n    if (gamma >= Math.PI / 2) {\r\n      shiftX += Math.abs(yaxis.x)\r\n    }\r\n    if (beta >= Math.PI / 2) {\r\n      shiftX += Math.abs(zaxis.x)\r\n    }\r\n    if (alpha >= Math.PI / 2) {\r\n      shiftY += Math.abs(zaxis.y)\r\n    }\r\n\r\n    this._boxStart = new Vector3(\r\n      this._origin.x - shiftX,\r\n      this._origin.y - shiftY,\r\n      this._origin.z\r\n    )\r\n    this._boxSize = new Vector3(\r\n      Math.abs(xaxis.x) + Math.abs(yaxis.x) + Math.abs(zaxis.x),\r\n      Math.abs(yaxis.y) + Math.abs(zaxis.y),\r\n      Math.abs(zaxis.z)\r\n    )\r\n\r\n    const delta = (axe, proj) => Math.abs(axe[proj]) / this._boxSize[proj]\r\n    this._header.delta.x = delta(yaxis, 'x')\r\n    this._header.delta.y = delta(zaxis, 'x')\r\n    this._header.delta.z = delta(zaxis, 'y')\r\n  }\r\n\r\n  _getXYZbox() {\r\n    return new Box3(\r\n      this._boxStart.clone(),\r\n      this._boxStart.clone().add(this._boxSize)\r\n    )\r\n  }\r\n\r\n  _toXYZData() {}\r\n\r\n  parse(data) {\r\n    this._parseHeader(data)\r\n    this._setOrigins()\r\n    return new Volume(\r\n      Float32Array,\r\n      this._getXYZdim(),\r\n      this._getXYZbox(),\r\n      1,\r\n      this._toXYZData(),\r\n      this._getVolumeInfo()\r\n    )\r\n  }\r\n}\r\n\r\nexport default VolumeModel\r\n",
		"import Parser from './Parser'\r\nimport VolumeModel, { valueType } from './VolumeModel'\r\n\r\nconst CCP4Header = {\r\n  extent: [valueType.array, 'u32', 0],\r\n  type: [valueType.singular, 'u32', 3],\r\n  nstart: [valueType.array, 'i32', 4],\r\n  grid: [valueType.array, 'u32', 7],\r\n  cellDims: [valueType.vector, 'f32', 10],\r\n  angles: [valueType.array, 'f32', 13],\r\n  crs2xyz: [valueType.array, 'i32', 16],\r\n  dmin: [valueType.singular, 'f32', 19],\r\n  dmax: [valueType.singular, 'f32', 20],\r\n  dmean: [valueType.singular, 'f32', 21],\r\n  ispg: [valueType.singular, 'u32', 22],\r\n  nsymbt: [valueType.singular, 'u32', 23],\r\n  lksflg: [valueType.singular, 'u32', 24],\r\n  customData: [valueType.buffer, 'buffer', 25, 9],\r\n  origin: [valueType.vector, 'f32', 34],\r\n  map: [valueType.buffer, 'buffer', 52, 1],\r\n  machine: [valueType.singular, 'u32', 53],\r\n  sd: [valueType.singular, 'f32', 54],\r\n  nlabel: [valueType.singular, 'f32', 55],\r\n  label: [valueType.buffer, 'buffer', 56, 200]\r\n}\r\n\r\nclass Ccp4Model extends VolumeModel {\r\n  // read header (http://www.ccp4.ac.uk/html/maplib.html)\r\n  _parseHeader(_buffer) {\r\n    this._buff = _buffer\r\n    this._typedCheck()\r\n    const arrays = {}\r\n    arrays.u32 = new Uint32Array(this._buff, 0, 56)\r\n    arrays.i32 = new Int32Array(this._buff, 0, 56)\r\n    arrays.f32 = new Float32Array(this._buff, 0, 56)\r\n    arrays.buffer = this._buff\r\n    const header = this._header\r\n\r\n    this._fillHeader(CCP4Header, arrays)\r\n\r\n    // calculate non-orthogonal unit cell coordinates\r\n    header.angles.forEach((angle, i, a) => {\r\n      a[i] *= Math.PI / 180.0\r\n    })\r\n  }\r\n\r\n  _setAxisIndices() {\r\n    const header = this._header\r\n\r\n    if (\r\n      header.cellDims.x === 0.0 &&\r\n      header.cellDims.y === 0.0 &&\r\n      header.cellDims.z === 0.0\r\n    ) {\r\n      header.cellDims.set(1.0, 1.0, 1.0)\r\n    }\r\n    // Apply header conversion\r\n    // Mapping between CCP4 column, row, section and VMD x, y, z.\r\n    const { crs2xyz } = this._header\r\n    if (crs2xyz[0] === 0 && crs2xyz[1] === 0 && crs2xyz[2] === 0) {\r\n      crs2xyz[0] = 1\r\n      crs2xyz[1] = 2\r\n      crs2xyz[2] = 3\r\n    }\r\n\r\n    const xyz2crs = this._xyz2crs\r\n    xyz2crs[crs2xyz[0] - 1] = 0 // column\r\n    xyz2crs[crs2xyz[1] - 1] = 1 // row\r\n    xyz2crs[crs2xyz[2] - 1] = 2 // section\r\n  }\r\n\r\n  _setOrigins() {\r\n    const [xaxis, yaxis, zaxis] = this._getAxis()\r\n    this._setAxisIndices()\r\n\r\n    const header = this._header\r\n    const xyz2crs = this._xyz2crs\r\n    // Handle both MRC-2000 and older format maps\r\n    if (\r\n      header.origin.x === 0.0 &&\r\n      header.origin.y === 0.0 &&\r\n      header.origin.z === 0.0\r\n    ) {\r\n      this._origin.addScaledVector(xaxis, header.nstart[xyz2crs[0]])\r\n      this._origin.addScaledVector(yaxis, header.nstart[xyz2crs[1]])\r\n      this._origin.addScaledVector(zaxis, header.nstart[xyz2crs[2]])\r\n    } else {\r\n      this._origin = header.origin\r\n      // Use ORIGIN records rather than old n[xyz]start records\r\n      //   http://www2.mrc-lmb.cam.ac.uk/image2000.html\r\n      // XXX the ORIGIN field is only used by the EM community, and\r\n      // has undefined meaning for non-orthogonal maps and/or non-cubic voxels, etc.\r\n    }\r\n    xaxis.multiplyScalar(header.extent[xyz2crs[0]] - 1)\r\n    yaxis.multiplyScalar(header.extent[xyz2crs[1]] - 1)\r\n    zaxis.multiplyScalar(header.extent[xyz2crs[2]] - 1)\r\n\r\n    if (header.type === 2) {\r\n      this._data = new Float32Array(\r\n        this._buff,\r\n        1024 + header.nsymbt,\r\n        header.extent[0] * header.extent[1] * header.extent[2]\r\n      )\r\n    } else {\r\n      throw new Error(`CCP4: Unsupported format ${header.type}`)\r\n    }\r\n\r\n    this._setBoxParams(xaxis, yaxis, zaxis)\r\n  }\r\n\r\n  _toXYZData() {\r\n    const header = this._header\r\n    const data = this._data\r\n    const xyz2crs = this._xyz2crs\r\n    const xyzData = new Float32Array(data.length)\r\n\r\n    const dim = this._getXYZdim()\r\n    const xSize = dim[0]\r\n    const ySize = dim[1]\r\n\r\n    let crsIdx = 0\r\n    const coord = []\r\n    let x\r\n    let y\r\n    let z\r\n    for (coord[2] = 0; coord[2] < header.extent[2]; coord[2]++) {\r\n      // Site\r\n      for (coord[1] = 0; coord[1] < header.extent[1]; coord[1]++) {\r\n        // Row\r\n        for (coord[0] = 0; coord[0] < header.extent[0]; coord[0]++, crsIdx++) {\r\n          // Column\r\n          x = coord[xyz2crs[0]]\r\n          y = coord[xyz2crs[1]]\r\n          z = coord[xyz2crs[2]]\r\n          xyzData[x + xSize * (y + ySize * z)] = data[crsIdx]\r\n        }\r\n      }\r\n    }\r\n\r\n    return xyzData\r\n  }\r\n}\r\n\r\nclass CCP4Parser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this._options.fileType = 'ccp4'\r\n    this.model = new Ccp4Model()\r\n  }\r\n\r\n  static canProbablyParse(_data) {\r\n    return false // Autodetection is not implemented yet\r\n  }\r\n\r\n  parseSync() {\r\n    return this.model.parse(this._data)\r\n  }\r\n}\r\n\r\nCCP4Parser.formats = ['ccp4']\r\nCCP4Parser.extensions = ['.ccp4', '.map', '.mrc']\r\nCCP4Parser.binary = true\r\n\r\nexport default CCP4Parser\r\n",
		"import { isString } from 'lodash'\r\nimport Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport { Vector3 } from 'three'\r\n\r\nconst { Complex, Element, Molecule } = chem\r\n\r\nclass XYZParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n\r\n    this._complex = null\r\n    this._atomsInf = null\r\n\r\n    this._options.fileType = 'xyz'\r\n    this._fileName = options.name\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return isString(data) && /^\\s*\\d+ *\\n[^\\n]*\\n\\s*\\w{1,3}\\s+-?\\d/.test(data)\r\n  }\r\n\r\n  _parseToAtomsInf(source) {\r\n    const endnAtoms = source.indexOf('\\n')\r\n    const nAtoms = parseInt(source.substring(0, endnAtoms), 10)\r\n    const endComment = source.indexOf('\\n', endnAtoms + 1)\r\n    let comment = source.slice(endnAtoms + 1, endComment).trim()\r\n    if (comment.length === 0) {\r\n      comment = this._fileName\r\n    }\r\n\r\n    const startAtomsInf = endComment + source.substring(endComment).search(/\\S/)\r\n    this._atomsInf = source.substring(startAtomsInf).split(/[\\s,]*\\n[\\s,]*/)\r\n    if (!Number.isNaN(nAtoms) && this._atomsInf.length - 1 !== nAtoms) {\r\n      this._complex.error = {\r\n        message: 'wrong number of atoms'\r\n      }\r\n      return\r\n    }\r\n\r\n    this._complex.metadata.format = 'xyz'\r\n    this._complex.name = comment\r\n  }\r\n\r\n  _parseAtomsInf() {\r\n    const het = true\r\n    const altLoc = ' '\r\n    const occupancy = 1\r\n    const tempFactor = 1\r\n    const charge = 0\r\n\r\n    const chain = this._complex.addChain('A')\r\n    const residue = chain.addResidue('UNK', 1, ' ')\r\n\r\n    for (let i = 0; i < this._atomsInf.length - 1; i++) {\r\n      const words = this._atomsInf[i].split(/[\\s,]+/)\r\n\r\n      if (words.length !== 4) {\r\n        this._complex.error = {\r\n          message: 'missed parameters'\r\n        }\r\n        break\r\n      }\r\n\r\n      const serial = i + 1\r\n      const name = words[0]\r\n      const xyz = new Vector3(\r\n        parseFloat(words[1]),\r\n        parseFloat(words[2]),\r\n        parseFloat(words[3])\r\n      )\r\n      const type = Element.getByName(name)\r\n      const role = undefined\r\n\r\n      residue.addAtom(\r\n        name,\r\n        type,\r\n        xyz,\r\n        role,\r\n        het,\r\n        serial,\r\n        altLoc,\r\n        occupancy,\r\n        tempFactor,\r\n        charge\r\n      )\r\n    }\r\n\r\n    const molecule = new Molecule(this._complex, this._complex.name, 1)\r\n    molecule.residues = residue\r\n    this._complex._molecules[0] = molecule\r\n  }\r\n\r\n  parseSync() {\r\n    const result = (this._complex = new Complex())\r\n\r\n    this._parseToAtomsInf(this._data)\r\n    this._parseAtomsInf()\r\n\r\n    this._complex.finalize({\r\n      needAutoBonding: true,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n\r\n    this._complex = null\r\n    this._atomsInf = null\r\n\r\n    if (result.error) {\r\n      throw new Error(result.error.message)\r\n    }\r\n    return result\r\n  }\r\n\r\n  static formats = ['xyz']\r\n\r\n  static extensions = ['.xyz']\r\n}\r\n\r\nexport default XYZParser\r\n",
		"import { fromPairs, isString, zip } from 'lodash'\r\nimport Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport { Vector3 } from 'three'\r\n\r\nconst { Complex, Element } = chem\r\n\r\nclass PubChemParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this._options.fileType = 'pubchem+json'\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return isString(data) && data[0] === '{'\r\n  }\r\n\r\n  parseSync() {\r\n    this.logger.info('Parsing PubChem JSON file...')\r\n    return this._toComplex(JSON.parse(this._data))\r\n  }\r\n\r\n  _toComplex(jsonData) {\r\n    const complex = new Complex()\r\n    const complexData = jsonData.PC_Compounds && jsonData.PC_Compounds[0]\r\n    if (complexData) {\r\n      this._extractAtoms(complex, complexData)\r\n      complex.finalize({\r\n        needAutoBonding: false,\r\n        detectAromaticLoops: this.settings.now.aromatic,\r\n        enableEditing: this.settings.now.editing\r\n      })\r\n    }\r\n    return complex\r\n  }\r\n\r\n  _extractAtoms(complex, complexData) {\r\n    let aids = complexData.atoms && complexData.atoms.aid\r\n    let elements = aids && complexData.atoms.element\r\n    if (!elements || aids.length !== elements.length) {\r\n      throw new Error('Unable to parse atom elements')\r\n    }\r\n    elements = fromPairs(zip(aids, elements))\r\n    const atoms = {}\r\n\r\n    const coords = complexData.coords && complexData.coords[0]\r\n    const model = coords && coords.conformers && coords.conformers[0]\r\n    const xs = model && model.x\r\n    const ys = model && model.y\r\n    const zs = (model && model.z) || []\r\n    aids = coords && coords.aid\r\n    if (!aids || !xs || !ys) {\r\n      throw new Error('Coordinates are not found in the file')\r\n    }\r\n\r\n    const chain = complex.addChain(' ')\r\n    const residue = chain.addResidue('UNK', 1, ' ')\r\n\r\n    for (let i = 0, n = aids.length; i < n; ++i) {\r\n      const aid = aids[i]\r\n      const element = Element.ByAtomicNumber[elements[aid]]\r\n      const xyz = new Vector3(xs[i], ys[i], zs[i] || 0.0)\r\n      atoms[aid] = residue.addAtom(\r\n        element.name,\r\n        element,\r\n        xyz,\r\n        undefined,\r\n        true,\r\n        aid,\r\n        ' ',\r\n        1.0,\r\n        0.0,\r\n        0\r\n      )\r\n    }\r\n\r\n    const aids1 = complexData.bonds && complexData.bonds.aid1\r\n    const aids2 = complexData.bonds && complexData.bonds.aid2\r\n    const orders = (complexData.bonds && complexData.bonds.order) || []\r\n    if (!aids1 || !aids2 || aids1.length !== aids2.length) {\r\n      return\r\n    }\r\n\r\n    for (let j = 0, m = aids1.length; j < m; ++j) {\r\n      complex.addBond(atoms[aids1[j]], atoms[aids2[j]], orders[j] || 1, 0, true)\r\n    }\r\n  }\r\n}\r\n\r\nPubChemParser.formats = ['pubchem', 'pubchem+json', 'pc']\r\nPubChemParser.extensions = ['.json']\r\n\r\nexport default PubChemParser\r\n",
		"import { isUndefined } from 'lodash'\r\n\r\nexport default class SDFStream {\r\n  constructor(data) {\r\n    this._strings = data.split(/\\r?\\n|\\r/)\r\n    this._currentStart = 0\r\n    this._currentStringIndx = 0\r\n  }\r\n\r\n  setStart(start) {\r\n    if (start >= this._strings.length) {\r\n      this._currentStart = this._strings.length - 1\r\n      this._currentStringIndx = this._strings.length - 1\r\n    } else {\r\n      this._currentStart = start\r\n      this._currentStringIndx = start\r\n    }\r\n  }\r\n\r\n  getNextString() {\r\n    return this._strings[++this._currentStringIndx]\r\n  }\r\n\r\n  getCurrentString() {\r\n    return this._strings[this._currentStringIndx]\r\n  }\r\n\r\n  getStringFromStart(numb) {\r\n    this._currentStringIndx = this._currentStart + numb\r\n    return this._strings[this._currentStart + numb]\r\n  }\r\n\r\n  findNextDataItem() {\r\n    let curStr = this.getNextString()\r\n    let res = false\r\n    while (!isUndefined(curStr) && curStr.trim() !== '$$$$') {\r\n      if (curStr.match(/>\\s+<(.*)>/)) {\r\n        res = true\r\n        break\r\n      }\r\n      curStr = this.getNextString()\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  findNextCompoundStart() {\r\n    let curStr = this.getCurrentString()\r\n    while (!isUndefined(curStr) && curStr.trim() !== '$$$$') {\r\n      curStr = this.getNextString()\r\n    }\r\n    this.setStart(++this._currentStringIndx)\r\n    return this.probablyHaveDataToParse()\r\n  }\r\n\r\n  probablyHaveDataToParse() {\r\n    return this._currentStringIndx < this._strings.length - 2\r\n  }\r\n}\r\n",
		"import Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport SDFStream from './SDFStream'\r\nimport Assembly from '../../chem/Assembly'\r\nimport { Matrix4, Vector3 } from 'three'\r\nimport { isString } from 'lodash'\r\n\r\nconst { Complex, Element, Bond, Molecule } = chem\r\n\r\nconst chargeMap = [0, 3, 2, 1, 0, -1, -2, -3]\r\nconst orderMap = [0, 1, 2, 3, 1, 1, 1, 2]\r\nconst typeMap = [\r\n  Bond.BondType.UNKNOWN, // 0 - error\r\n  Bond.BondType.COVALENT, // 1 - single\r\n  Bond.BondType.COVALENT, // 2 - double\r\n  Bond.BondType.COVALENT, // 3 - triple\r\n  Bond.BondType.AROMATIC, // 4 - aromatic\r\n  Bond.BondType.UNKNOWN, // 5 - single or double\r\n  Bond.BondType.AROMATIC, // 6 - single or aromatic\r\n  Bond.BondType.AROMATIC // 7 - double or aromatic\r\n  // 8 - any\r\n  // 9 - coordination\r\n  // 10 - hydrogen\r\n]\r\n\r\nconst sdfAndMolRegexp = /.*(M\\s\\sEND).*|.*(^$$$$).*|.*>\\s+<(.+)>.*/\r\nconst sdfRegExp = /.*($$$$).*|.*>\\s+<(.+)>.*/\r\n\r\nconst fileFormat = { SDF: 'sdf', MOL: 'mol' }\r\n\r\nconst possibleNameTags = [\r\n  'PUBCHEM_IUPAC_TRADITIONAL_NAME',\r\n  /PUBCHEM_(.+)_NAME/,\r\n  /(.+)name/,\r\n  /(.+)NAME/\r\n]\r\nconst possibleIDTags = [\r\n  'PUBCHEM_COMPOUND_CID',\r\n  'id',\r\n  'ID',\r\n  /.*CID/,\r\n  /.*ID/,\r\n  /.*id/\r\n]\r\nconst possibleTitleTags = [\r\n  'msg',\r\n  'MSG',\r\n  'message',\r\n  'title',\r\n  'description',\r\n  'desc'\r\n]\r\nconst tagsNames = ['name', 'id', 'title']\r\nconst tags = {\r\n  name: possibleNameTags,\r\n  id: possibleIDTags,\r\n  title: possibleTitleTags\r\n}\r\n\r\nfunction buildChainID(index) {\r\n  if (!index) {\r\n    return 'A'\r\n  }\r\n\r\n  const codes = []\r\n  while (index) {\r\n    codes.push(65 + (index % 26))\r\n    index = Math.trunc(index / 26)\r\n  }\r\n  if (codes.length > 1) {\r\n    codes.reverse()\r\n    codes[0] -= 1\r\n  }\r\n\r\n  return String.fromCharCode(...codes)\r\n}\r\n\r\nexport default class SDFParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this._format = 'sdf'\r\n    this._complex = null\r\n    this._chain = null\r\n    this._residue = null\r\n    this._molecules = null\r\n    this._metadata = {}\r\n    this._metadata.molecules = []\r\n    this._currentMolProps = {}\r\n    this._compoundIndx = -1\r\n    this._assemblies = []\r\n    this._atomsParsed = 0\r\n    this._atomsIndexes = []\r\n  }\r\n\r\n  canProbablyParse(data) {\r\n    return isString(data) && sdfAndMolRegexp.test(data)\r\n  }\r\n\r\n  _parseHeader(stream) {\r\n    const molecule = {}\r\n    molecule.name = stream.getStringFromStart(0)\r\n    const date = parseInt(stream.getStringFromStart(1).substr(10, 6).trim(), 10)\r\n    molecule.date = date.toString() || ''\r\n    molecule.title = stream.getStringFromStart(2)\r\n    this._metadata.molecules.push(molecule)\r\n  }\r\n\r\n  _parseAtoms(stream, atomsNum) {\r\n    let curStr\r\n    let serial = this._atomsParsed\r\n\r\n    // each molecule = chain\\residue\r\n    const chainID = buildChainID(this._compoundIndx)\r\n    const resName = 'UNK'\r\n    const resSeq = 1\r\n\r\n    this._chain =\r\n      this._complex.getChain(chainID) || this._complex.addChain(chainID)\r\n    this._residue = this._chain.addResidue(resName, resSeq, ' ')\r\n\r\n    for (let i = 0; i < atomsNum; i++) {\r\n      curStr = stream.getNextString()\r\n      serial++\r\n      const x = parseFloat(curStr.substr(0, 10))\r\n      const y = parseFloat(curStr.substr(10, 10))\r\n      const z = parseFloat(curStr.substr(20, 10))\r\n      const charge = chargeMap[parseInt(curStr.substr(36, 3), 10)]\r\n      const xyz = new Vector3(x, y, z)\r\n      let name = curStr.substr(31, 3).trim().toUpperCase()\r\n      const type = Element.getByName(name)\r\n      if (!this._atomsIndexes[name]) {\r\n        this._atomsIndexes[name] = 0\r\n      }\r\n      this._atomsIndexes[name] += 1\r\n      name += this._atomsIndexes[name] // every atom need to have unique name.\r\n\r\n      this._residue.addAtom(\r\n        name,\r\n        type,\r\n        xyz,\r\n        undefined,\r\n        true,\r\n        serial,\r\n        ' ',\r\n        1.0,\r\n        0.0,\r\n        charge\r\n      )\r\n    }\r\n  }\r\n\r\n  _parseBonds(stream, bondsNum) {\r\n    let curStr\r\n\r\n    for (let i = 0; i < bondsNum; i++) {\r\n      curStr = stream.getNextString()\r\n      let atom1 = parseInt(curStr.substr(0, 3), 10) + this._atomsParsed\r\n      let atom2 = parseInt(curStr.substr(3, 3), 10) + this._atomsParsed\r\n      const bondType = parseInt(curStr.substr(6, 3), 10)\r\n\r\n      if (atom1 > atom2) {\r\n        ;[atom1, atom2] = [atom2, atom1]\r\n      }\r\n      this._complex.addBond(\r\n        atom1,\r\n        atom2,\r\n        orderMap[bondType] || 1,\r\n        typeMap[bondType] || Bond.BondType.UNKNOWN,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  _parseMOL(stream) {\r\n    this._compoundIndx++\r\n\r\n    this._parseHeader(stream)\r\n    const countsLine = stream.getStringFromStart(3)\r\n    const atomsNum = parseInt(countsLine.substr(0, 3), 10)\r\n    const bondsNum = parseInt(countsLine.substr(3, 3), 10)\r\n    this._parseAtoms(stream, atomsNum)\r\n    this._parseBonds(stream, bondsNum)\r\n\r\n    this._atomsParsed += atomsNum\r\n\r\n    this._metadata.molecules[this._compoundIndx]._residues = []\r\n    this._metadata.molecules[this._compoundIndx]._residues.push(this._residue)\r\n  }\r\n\r\n  _parseDataItem(stream) {\r\n    const tag = stream.getCurrentString()\r\n\r\n    let data = []\r\n    let curStr = stream.getNextString()\r\n\r\n    // read data\r\n    while (curStr.trim() !== '') {\r\n      data.push(curStr)\r\n      curStr = stream.getNextString()\r\n    }\r\n    if (data.length === 1) {\r\n      ;[data] = data\r\n    }\r\n    this._currentMolProps[tag.replace(/[<>]/g, '').trim()] = data\r\n  }\r\n\r\n  _parseCompound(stream) {\r\n    this._parseMOL(stream)\r\n\r\n    // parse data items block\r\n    if (this._format === fileFormat.SDF) {\r\n      this._currentMolProps = {}\r\n      while (stream.findNextDataItem()) {\r\n        this._parseDataItem(stream)\r\n      }\r\n      if (Object.keys(this._currentMolProps).length !== 0) {\r\n        const molecule = this._metadata.molecules[this._compoundIndx]\r\n        molecule.props = this._currentMolProps\r\n        this._tryToUpdateMoleculeData(molecule)\r\n      }\r\n    }\r\n  }\r\n\r\n  _fixBondsArray() {\r\n    const serialAtomMap = this._serialAtomMap\r\n    const complex = this._complex\r\n\r\n    const bonds = complex._bonds\r\n    for (let j = 0; j < bonds.length; j++) {\r\n      const bond = bonds[j]\r\n      if (bond._right < bond._left) {\r\n        console.log('_fixBondsArray: Logic error.')\r\n      }\r\n      bond._left = serialAtomMap[bond._left] || null\r\n      bond._right = serialAtomMap[bond._right] || null\r\n    }\r\n  }\r\n\r\n  _buildAssemblies() {\r\n    const chains = this._complex._chains\r\n\r\n    if (chains.length === 1) {\r\n      return this._assemblies\r\n    }\r\n\r\n    for (let i = 0; i < chains.length; i++) {\r\n      const assembly = new Assembly(this._complex)\r\n      const matrix = new Matrix4()\r\n      assembly.addMatrix(matrix)\r\n      assembly.addChain(chains[i]._name)\r\n      this._assemblies.push(assembly)\r\n    }\r\n\r\n    return this._assemblies\r\n  }\r\n\r\n  _buildMolecules() {\r\n    this._complex._molecules = []\r\n    const { molecules } = this._metadata\r\n    for (let i = 0; i < molecules.length; i++) {\r\n      const molecule = new Molecule(this._complex, molecules[i].name, i + 1)\r\n      molecule.residues = molecules[i]._residues\r\n      this._complex._molecules[i] = molecule\r\n    }\r\n\r\n    return this._complex._molecules\r\n  }\r\n\r\n  _searchTag(tag, props) {\r\n    for (let i = 0; i < props.length; i++) {\r\n      if (\r\n        (tag instanceof RegExp && tag.test(props[i].tag)) ||\r\n        tag === props[i].tag\r\n      ) {\r\n        return props[i].data\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  _tryToFind(tagsList, props) {\r\n    for (let j = 0; j < tagsList.length; j++) {\r\n      const res = this._searchTag(tagsList[j], props)\r\n      if (res) {\r\n        return res\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  _tryToUpdateMoleculeData(molecule) {\r\n    let res = false\r\n    for (let i = 0; i < tagsNames.length; i++) {\r\n      const tagPossibleNames = tags[tagsNames[i]]\r\n      const data = this._tryToFind(tagPossibleNames, molecule.props)\r\n      if (data) {\r\n        molecule[tagsNames[i]] = data\r\n        res = true\r\n      }\r\n    }\r\n\r\n    molecule.name = molecule.name || molecule.id\r\n    if (molecule.name.match(/^\\d+$/)) {\r\n      molecule.name = `CID: ${molecule.name}`\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  _finalizeMetadata() {\r\n    const { molecules } = this._metadata\r\n    const { metadata } = this._complex\r\n    const complex = this._complex\r\n\r\n    if (molecules.length === 1) {\r\n      complex.name = molecules[0].name\r\n      metadata.title = molecules[0].title\r\n      metadata.date = molecules[0].date\r\n      metadata.properties = molecules[0].props\r\n    } else if (molecules.length > 1) {\r\n      metadata.molecules = []\r\n      for (let i = 0; i < molecules.length; i++) {\r\n        metadata.molecules.push({\r\n          name: molecules[i].name,\r\n          date: molecules[i].date,\r\n          title: molecules[i].title,\r\n          properties: molecules[i].props\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  _finalize() {\r\n    const serialAtomMap = (this._serialAtomMap = {})\r\n    const atoms = this._complex._atoms\r\n\r\n    for (let i = 0; i < atoms.length; i++) {\r\n      const atom = atoms[i]\r\n      serialAtomMap[atom.serial] = atom\r\n    }\r\n\r\n    this._complex._finalizeBonds()\r\n    this._fixBondsArray()\r\n    this._finalizeMetadata()\r\n    this._buildAssemblies()\r\n    this._complex.units = this._complex.units.concat(this._assemblies)\r\n    this._buildMolecules()\r\n    this._complex.finalize({\r\n      needAutoBonding: false,\r\n      detectAromaticLoops: false,\r\n      enableEditing: false,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n  }\r\n\r\n  defineFormat(data) {\r\n    let format\r\n    if (sdfRegExp.test(data)) {\r\n      format = fileFormat.SDF\r\n    } else {\r\n      format = fileFormat.MOL\r\n    }\r\n\r\n    return format\r\n  }\r\n\r\n  parseSync() {\r\n    const result = (this._complex = new Complex())\r\n    const stream = new SDFStream(this._data)\r\n\r\n    this._format = this.defineFormat(this._data)\r\n    result.metadata.format = this._format\r\n\r\n    do {\r\n      this._parseCompound(stream)\r\n    } while (stream.findNextCompoundStart())\r\n\r\n    this._finalize()\r\n\r\n    return result\r\n  }\r\n}\r\n\r\nSDFParser.formats = ['mol', 'sdf']\r\nSDFParser.extensions = ['.mol', '.sdf']\r\n",
		"import Parser from './Parser'\r\nimport VolumeModel, { valueType } from './VolumeModel'\r\nimport { Vector3 } from 'three'\r\n\r\n// http://www.uoxray.uoregon.edu/tnt/manual/node104.html\r\nconst DSN6Header = {\r\n  nstart: [valueType.array, 'i16', 0],\r\n  extent: [valueType.array, 'i16', 3],\r\n  grid: [valueType.array, 'i16', 6],\r\n  cellDims: [valueType.vector, 'i16', 9],\r\n  angles: [valueType.array, 'i16', 12],\r\n  div: [valueType.singular, 'i16', 15],\r\n  adder: [valueType.singular, 'i16', 16],\r\n  scaleFactor: [valueType.singular, 'i16', 17]\r\n}\r\n\r\nclass DSN6Model extends VolumeModel {\r\n  _parseHeader(_buffer) {\r\n    this._buff = _buffer\r\n    this._typedCheck()\r\n\r\n    const arrays = {}\r\n    arrays.i16 = new Int16Array(this._buff)\r\n\r\n    // check and reverse if big endian\r\n    if (arrays.i16[18] !== 100) {\r\n      for (let i = 0, n = arrays.i16.length; i < n; ++i) {\r\n        const val = arrays.i16[i]\r\n        arrays.i16[i] = ((val & 0xff) << 8) | ((val >> 8) & 0xff)\r\n      }\r\n    }\r\n    if (arrays.i16[18] !== 100) {\r\n      throw new Error('DSN6: Incorrect format ')\r\n    }\r\n\r\n    const header = this._header\r\n\r\n    this._fillHeader(DSN6Header, arrays)\r\n    header.cellDims.multiplyScalar(1.0 / header.scaleFactor)\r\n    header.angles.forEach((angle, i, a) => {\r\n      a[i] *= Math.PI / 180.0 / header.scaleFactor\r\n    })\r\n    header.div /= 100\r\n  }\r\n\r\n  _setAxisIndices() {\r\n    this._xyz2crs[0] = 0\r\n    this._xyz2crs[1] = 1\r\n    this._xyz2crs[2] = 2\r\n  }\r\n\r\n  _setOrigins() {\r\n    const header = this._header\r\n    const [xaxis, yaxis, zaxis] = this._getAxis()\r\n    this._setAxisIndices()\r\n\r\n    this._origin.addScaledVector(xaxis, header.nstart[0])\r\n    this._origin.addScaledVector(yaxis, header.nstart[1])\r\n    this._origin.addScaledVector(zaxis, header.nstart[2])\r\n\r\n    xaxis.multiplyScalar(header.extent[0])\r\n    yaxis.multiplyScalar(header.extent[1])\r\n    zaxis.multiplyScalar(header.extent[2])\r\n\r\n    this._setBoxParams(xaxis, yaxis, zaxis)\r\n  }\r\n\r\n  _pointCalculate(xyzData, byteBuffer, z, y, x, pos, i) {\r\n    const header = this._header\r\n\r\n    if (x < header.extent[0] && y < header.extent[1] && z < header.extent[2]) {\r\n      const idx = x + header.extent[0] * (y + header.extent[1] * z)\r\n      xyzData[idx] = (byteBuffer[pos.counter] - header.adder) / header.div\r\n      ++pos.counter\r\n    } else {\r\n      pos.counter += 8 - i\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  _blockCalculate(xyzData, byteBuffer, zBlock, yBlock, xBlock, pos) {\r\n    for (let k = 0; k < 8; ++k) {\r\n      const z = 8 * zBlock + k\r\n      for (let j = 0; j < 8; ++j) {\r\n        const y = 8 * yBlock + j\r\n        let inRange = true\r\n        let i = 0\r\n        while (inRange && i < 8) {\r\n          const x = 8 * xBlock + i\r\n          inRange = this._pointCalculate(xyzData, byteBuffer, z, y, x, pos, i)\r\n          i++\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _toXYZData() {\r\n    const header = this._header\r\n    const byteBuffer = new Uint8Array(this._buff)\r\n    const xyzData = new Float32Array(\r\n      header.extent[0] * header.extent[1] * header.extent[2]\r\n    )\r\n\r\n    const blocks = new Vector3(\r\n      header.extent[0] / 8,\r\n      header.extent[1] / 8,\r\n      header.extent[2] / 8\r\n    )\r\n\r\n    const pos = {}\r\n    pos.counter = 512\r\n\r\n    for (let zBlock = 0; zBlock < blocks.z; ++zBlock) {\r\n      for (let yBlock = 0; yBlock < blocks.y; ++yBlock) {\r\n        for (let xBlock = 0; xBlock < blocks.x; ++xBlock) {\r\n          this._blockCalculate(xyzData, byteBuffer, zBlock, yBlock, xBlock, pos)\r\n        }\r\n      }\r\n    }\r\n    this._calculateInfoParams(xyzData)\r\n    return xyzData\r\n  }\r\n\r\n  _calculateInfoParams(xyzData) {\r\n    this._header.dmean /= xyzData.length\r\n    let dispersion = 0\r\n    let minDensity = xyzData[0]\r\n    let maxDensity = xyzData[0]\r\n    for (let j = 0; j < xyzData.length; j++) {\r\n      dispersion += (this._header.dmean - xyzData[j]) ** 2\r\n\r\n      if (xyzData[j] < minDensity) {\r\n        minDensity = xyzData[j]\r\n      }\r\n      if (xyzData[j] > maxDensity) {\r\n        maxDensity = xyzData[j]\r\n      }\r\n    }\r\n    this._header.sd = Math.sqrt(dispersion / xyzData.length)\r\n    this._header.dmax = maxDensity\r\n    this._header.dmin = minDensity\r\n  }\r\n}\r\n\r\nclass DSN6Parser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this._options.fileType = 'dsn6'\r\n    this.model = new DSN6Model()\r\n  }\r\n\r\n  static canParse(data, options) {\r\n    if (!data) {\r\n      return false\r\n    }\r\n    return (\r\n      data instanceof ArrayBuffer &&\r\n      Parser.checkDataTypeOptions(options, 'dsn6')\r\n    )\r\n  }\r\n\r\n  static canProbablyParse(_data) {\r\n    return false\r\n  }\r\n\r\n  parseSync() {\r\n    return this.model.parse(this._data)\r\n  }\r\n}\r\n\r\nDSN6Parser.formats = ['dsn6']\r\nDSN6Parser.extensions = ['.dsn6', '.omap']\r\nDSN6Parser.binary = true\r\n\r\nexport default DSN6Parser\r\n",
		"import PDBStream from './PDBStream'\r\n\r\n/**\r\n * Little helper class for GRO Parser usage.\r\n * @extends PDBStream\r\n */\r\nclass GROReader extends PDBStream {\r\n  constructor(data) {\r\n    super(data)\r\n    /** @type Number */\r\n    this._next = -1 // End position of line\r\n    this.next()\r\n  }\r\n\r\n  /**\r\n   * Getting end of string.\r\n   * @returns {Number} Pointer to end of string\r\n   */\r\n  getNext() {\r\n    return this._next\r\n  }\r\n}\r\n\r\nexport default GROReader\r\n",
		"import Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport GROReader from './GROReader'\r\nimport { isString } from 'lodash'\r\nimport { Vector3 } from 'three'\r\n\r\nconst { Complex, Element, Molecule } = chem\r\n\r\n/**\r\n * Gromos87 file format parser.\r\n * @extends Parser\r\n */\r\nclass GROParser extends Parser {\r\n  /**\r\n   * Create parser for .gro file format\r\n   *\r\n   * @param {String} data Input file\r\n   * @param {String} options Input options (optional field)\r\n   */\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    /** @type Date */\r\n    this._time = null // Time in ps, optional field for animations\r\n    /** @type Number */\r\n    this._numAtoms = null // Number of atoms in complex\r\n    /** @type Number */\r\n    this._residueNumber = null // Number of exact residue\r\n    /** @type String */\r\n    this._residueName = '' // Scientific name of exact residue\r\n    /** @type String */\r\n    this._atomName = '' // Scientific name of exact atom\r\n    /** @type Number */\r\n    this._atomNumber = null // Sorted number of exact atom\r\n    /** @type Array */\r\n    this._atomPosition = [] // Array which contains x, y, z position of exact atom\r\n    /** @type Array */\r\n    this._atomVelocity = [] // Array which contains x, y, z velocity of exact atom (optional)\r\n    /** @type Complex */\r\n    this._complex = null // Complex structure for unified molecule representation\r\n    /** @type Vector3 */\r\n    this._molecules = [] // Molecules array\r\n    /** @type Molecule */\r\n    this._molecule = null // Single molecule\r\n    /** @type String */\r\n    this._options.filetype = 'gro' // Extension of data file.\r\n  }\r\n\r\n  /**\r\n   * General check for possibility of parsing.\r\n   * @param {String} data - Input file\r\n   * @returns {boolean} true if this file is in ascii, false otherwise\r\n   */\r\n  canProbablyParse(data) {\r\n    return (\r\n      isString(this._data) &&\r\n      /^\\s*[^\\n]*\\n\\s*\\d+ *\\n\\s*\\d+[^\\n\\d]{3}\\s*\\w+\\s*\\d+\\s*-?\\d/.test(data)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Parsing title of molecule complex.\r\n   * NOTE: that names are ESTIMATES, there is no strict rules in Gromos87 standard for first line in input file.\r\n   * @param {GROReader} line - Line containing title and time.\r\n   */\r\n  _parseTitle(line) {\r\n    const { metadata } = this._complex\r\n    metadata.id = line.readLine().trim()\r\n    metadata.name = metadata.id.slice(\r\n      metadata.id.lastIndexOf('\\\\') + 1,\r\n      metadata.id.lastIndexOf('.')\r\n    )\r\n    metadata.format = 'gro'\r\n  }\r\n\r\n  /**\r\n   * Parsing line containing number of atoms information.\r\n   * @param {GROReader} line - Line containing number of atoms.\r\n   */\r\n  _parseNumberOfAtoms(line) {\r\n    this._numAtoms = line.readInt(0, line.getNext())\r\n    if (Number.isNaN(this._numAtoms)) {\r\n      throw new Error(\r\n        'Line 2 is not representing atom number. Consider checking input file'\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parsing line containing information about residues, atoms etc. Also information about box vectors.\r\n   * Format of atoms MUST (by Gromos87 standard) be this: (note that numbering starts not from 0, but from 1!)\r\n   * ResidueNumber[1 - 5]  ResidueName[6 - 10] AtomName[11 - 15] AtomNumber[16 - 20] Position[21 - 45] Velocity[46 - 69]\r\n   * @param {GROReader} line - Line containing information about atom.\r\n   */\r\n  _parseAtom(line) {\r\n    this._residueNumber = line.readInt(1, 5)\r\n    this._residueName = line.readString(6, 10).trim()\r\n    this._atomName = line.readString(11, 15).trim()\r\n    this._atomNumber = line.readInt(16, 20)\r\n    const positionX = line.readFloat(21, 28) * 10\r\n    const positionY = line.readFloat(29, 36) * 10\r\n    const positionZ = line.readFloat(37, 45) * 10\r\n    if (\r\n      Number.isNaN(positionX) ||\r\n      Number.isNaN(positionY) ||\r\n      Number.isNaN(positionZ)\r\n    ) {\r\n      this._complex.error = {\r\n        message: `Atom position is invalid in \"${line.readLine()}\"`\r\n      }\r\n      return\r\n    }\r\n    /* const velocityX = line.readFloat(46, 53);\r\n    const velocityY = line.readFloat(54, 61);\r\n    const velocityZ = line.readFloat(62, 69); */\r\n    /* Adding residue and atom to complex structure */\r\n    const type = Element.getByName(\r\n      this._atomName[0]\r\n    ) /* MAGIC 0. REASONS: This name is something like \"CA\", where\r\n     C - is an element an A is something else. But what about Calcium? */\r\n    if (type.fullName === 'Unknown') {\r\n      this._complex.error = {\r\n        message: `${this._atomName[0]} hasn't been recognised as an atom name.`\r\n      }\r\n      return\r\n    }\r\n    const role = Element.Role[this._atomName]\r\n    /* Firstly, create a dummy chain */\r\n    let chain = this._chain\r\n    if (!chain) {\r\n      this._chain = chain = this._complex.addChain('A')\r\n    }\r\n    /* Secondly, add residue to that chain */\r\n    let residue = this._residue\r\n    if (!residue || residue.getSequence() !== this._residueNumber) {\r\n      this._residue = residue = chain.addResidue(\r\n        this._residueName,\r\n        this._residueNumber,\r\n        ' '\r\n      )\r\n    }\r\n    /* Lastly, add atom to that residue */\r\n    this._atomPosition = new Vector3(positionX, positionY, positionZ)\r\n    /* Adding default constants to correct atom addition process */\r\n    const het = true\r\n    const altLoc = ' '\r\n    const occupancy = 1\r\n    const tempFactor = 1\r\n    const charge = 0\r\n    residue.addAtom(\r\n      this._atomName,\r\n      type,\r\n      this._atomPosition,\r\n      role,\r\n      het,\r\n      this._atomNumber,\r\n      altLoc,\r\n      occupancy,\r\n      tempFactor,\r\n      charge\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Some finalizing procedures. In '.gro' file format there is only 1 chain and 1 molecule.\r\n   */\r\n  _finalize() {\r\n    const molecule = new Molecule(this._complex, this._complex.metadata.name, 1)\r\n    // aggregate residues from chain\r\n    molecule.residues = this._chain._residues\r\n    molecule._chains = this._chain\r\n    this._complex._molecules[0] = molecule\r\n    this._molecules.push(molecule)\r\n    this._complex.finalize({\r\n      needAutoBonding: true,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Main parsing procedure.\r\n   * @returns {Complex} Complex structure for visualizing.\r\n   */\r\n  parseSync() {\r\n    /* Create \"Complex\" variable */\r\n    const result = (this._complex = new Complex())\r\n    /* Parse input file line-by-line */\r\n    const reader = new GROReader(this._data)\r\n    let counter = 0 /* Simple counter regarding to format of .gro file */\r\n    /* First two lines - technical information, other lines - Atoms */\r\n    this._parseTitle(reader)\r\n    reader.next()\r\n    this._parseNumberOfAtoms(reader)\r\n    reader.next()\r\n    for (counter = 0; counter < this._numAtoms; ++counter) {\r\n      if (!reader.end()) {\r\n        this._parseAtom(reader)\r\n        reader.next()\r\n      } else break\r\n    }\r\n    /* If number of atoms in second line is less then actual atoms in file */\r\n    if (counter < this._numAtoms) {\r\n      this._complex.error = {\r\n        message: 'File ended unexpectedly.'\r\n      }\r\n    }\r\n    /* Catch errors occurred in parsing process */\r\n    if (result.error) {\r\n      throw new Error(result.error.message)\r\n    }\r\n\r\n    /* Finalizing data */\r\n    this._finalize()\r\n\r\n    /* Cleaning up */\r\n    this._atomPosition = null\r\n    this._complex = null\r\n    this._molecules = null\r\n    this._molecule = null\r\n\r\n    /* Return resulting Complex variable */\r\n    return result\r\n  }\r\n}\r\n\r\nGROParser.formats = ['gro']\r\nGROParser.extensions = ['.gro']\r\n\r\nexport default GROParser\r\n",
		"import Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport { Vector3 } from 'three'\r\n\r\nconst { Complex, Element, Bond, Molecule } = chem\r\n\r\nconst orderMap = {\r\n  un: 0,\r\n  1: 1,\r\n  2: 2,\r\n  3: 3,\r\n  ar: 1,\r\n  am: 1,\r\n  nc: 0,\r\n  du: 1\r\n}\r\nconst typeMap = {\r\n  un: Bond.BondType.UNKNOWN, // unknown (cannot be determined from the parameter tables)\r\n  1: Bond.BondType.COVALENT, // single\r\n  2: Bond.BondType.COVALENT, // double\r\n  3: Bond.BondType.COVALENT, // triple\r\n  ar: Bond.BondType.AROMATIC, // aromatic\r\n  am: Bond.BondType.COVALENT, // amide\r\n  nc: Bond.BondType.UNKNOWN, // not connected\r\n  du: Bond.BondType.COVALENT // dummy\r\n}\r\n\r\nconst resNumberRegex = /\\d+$/\r\nconst spacesRegex = /\\s+/\r\n\r\nfunction splitToFields(str) {\r\n  return str.trim().split(spacesRegex)\r\n}\r\n/* There is no jsdoc documentation because of eslint corrections:\r\n * not all Parser methods are implemented\r\n */\r\n\r\nclass MOL2Parser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n\r\n    this._complex = null\r\n    this._chain = null\r\n    this._residue = null\r\n    this._compoundIndx = -1\r\n\r\n    this._molecules = []\r\n    this._molecule = null\r\n\r\n    this._currPosIdx = 0\r\n    this._currStartIdx = 0\r\n\r\n    this._serialAtomMap = {}\r\n\r\n    this._options.fileType = 'mol2'\r\n  }\r\n\r\n  _parseRawStrings(data) {\r\n    return data.split(/\\r?\\n|\\r/)\r\n  }\r\n\r\n  _toStringFromStart(numb, MOL2Data) {\r\n    const newPosIdx = this._currStartIdx + numb\r\n    this._currPosIdx =\r\n      newPosIdx < MOL2Data.length ? newPosIdx : this._currStartIdx\r\n  }\r\n\r\n  _toHeaderString(header, MOL2Data) {\r\n    this._toStringFromStart(0, MOL2Data)\r\n    while (this._currPosIdx < MOL2Data.length) {\r\n      if (MOL2Data[this._currPosIdx].match(`@<TRIPOS>${header}`)) {\r\n        return\r\n      }\r\n      this._currPosIdx++\r\n    }\r\n    this._toStringFromStart(0, MOL2Data)\r\n  }\r\n\r\n  _toStringFromHeader(header, numb, MOL2Data) {\r\n    this._toHeaderString(header, MOL2Data)\r\n    const newPosIdx = this._currPosIdx + numb\r\n\r\n    if (\r\n      MOL2Data[this._currPosIdx].match(`@<TRIPOS>${header}`) &&\r\n      newPosIdx < MOL2Data.length\r\n    ) {\r\n      this._currPosIdx = newPosIdx\r\n    }\r\n  }\r\n\r\n  _setStart(startPos, MOL2Data) {\r\n    if (startPos >= MOL2Data.length) {\r\n      this._currStartIdx = this._currPosIdx = MOL2Data.length - 1\r\n    } else {\r\n      this._currStartIdx = this._currPosIdx = startPos\r\n    }\r\n  }\r\n\r\n  _probablyHaveDataToParse(MOL2Data) {\r\n    return this._currPosIdx < MOL2Data.length - 2\r\n  }\r\n\r\n  _findNextCompoundStart(MOL2Data) {\r\n    while (\r\n      this._currPosIdx < MOL2Data.length &&\r\n      MOL2Data[this._currPosIdx].trim() !== '@<TRIPOS>MOLECULE>'\r\n    ) {\r\n      this._currPosIdx++\r\n    }\r\n    this._setStart(++this._currPosIdx, MOL2Data)\r\n    return this._probablyHaveDataToParse(MOL2Data)\r\n  }\r\n\r\n  _parseMolecule(MOL2Data) {\r\n    this._toHeaderString('MOLECULE', MOL2Data)\r\n\r\n    const { metadata } = this._complex\r\n    metadata.name = MOL2Data[++this._currPosIdx]\r\n    metadata.format = 'mol2'\r\n\r\n    this._molecule = { _index: '', _chains: [] }\r\n    this._molecule._index = this._compoundIndx + 1\r\n    this._molecules.push(this._molecule)\r\n  }\r\n\r\n  /* Atom format description:\r\n   * atomId atomName x y z element [resSeq [resName [charge [statusBit]]]]\r\n   * statusBits is the internal SYBYL status bits associated with the atom.\r\n   * These should never be set by the user.\r\n   * Source: http://chemyang.ccnu.edu.cn/ccb/server/AIMMS/mol2.pdf\r\n   */\r\n  _parseAtoms(atomsNum, MOL2Data) {\r\n    this._toHeaderString('ATOM', MOL2Data)\r\n\r\n    for (let i = 0; i < atomsNum; i++) {\r\n      const parsedStr = splitToFields(MOL2Data[++this._currPosIdx])\r\n\r\n      if (parsedStr.length < 6) {\r\n        throw new Error(\r\n          'MOL2 parsing error: Not enough information to create atom!'\r\n        )\r\n      }\r\n      const atomId = parseInt(parsedStr[0], 10)\r\n      const atomName = parsedStr[1]\r\n\r\n      const x = parseFloat(parsedStr[2])\r\n      const y = parseFloat(parsedStr[3])\r\n      const z = parseFloat(parsedStr[4])\r\n\r\n      const element = parsedStr[5].split('.')[0].toUpperCase()\r\n\r\n      let charge = 0\r\n      if (parsedStr.length >= 9) {\r\n        charge = parseFloat(parsedStr[8]) || 0.0\r\n      }\r\n\r\n      let chain = this._chain\r\n      if (!chain) {\r\n        // .mol2 may contain information about multiple molecules, but they can't be visualized\r\n        // at the same time now. There is no need to create different chain IDs then.\r\n        this._chain = chain =\r\n          this._complex.getChain('A') || this._complex.addChain('A')\r\n        this._residue = null\r\n      }\r\n      if (!this._setResidue(parsedStr)) {\r\n        continue\r\n      }\r\n\r\n      // These fields are not listed in mol2 format. Set them default.\r\n      // Atoms and het atoms doesn't differ in .mol2,\r\n      // but het atoms have special residues. It can be used in next updates\r\n      const het = false\r\n      const altLoc = ' '\r\n      const occupancy = 1.0\r\n      const tempFactor = 0.0\r\n      const type = Element.getByName(element)\r\n      const role = Element.Role[atomName]\r\n\r\n      const xyz = new Vector3(x, y, z)\r\n      this._residue.addAtom(\r\n        atomName,\r\n        type,\r\n        xyz,\r\n        role,\r\n        het,\r\n        atomId,\r\n        altLoc,\r\n        occupancy,\r\n        tempFactor,\r\n        charge\r\n      )\r\n    }\r\n  }\r\n\r\n  _setResidue(parsedStr) {\r\n    let resSeq = 1\r\n    let resName = 'UNK' // The same meaning has '<0>' in some mol2 files\r\n\r\n    if (parsedStr.length >= 7) {\r\n      resSeq = parseInt(parsedStr[6], 10)\r\n    }\r\n    if (parsedStr.length >= 8 && parsedStr[7] !== '<0>') {\r\n      resName = parsedStr[7].replace(resNumberRegex, '')\r\n    }\r\n    if (this.settings.now.nowater) {\r\n      if (resName === 'HOH' || resName === 'WAT') {\r\n        return false\r\n      }\r\n    }\r\n    const residue = this._residue\r\n    const chain = this._chain\r\n    if (!residue || residue.getSequence() !== resSeq) {\r\n      this._residue = chain.addResidue(resName, resSeq, 'A')\r\n    }\r\n    return true\r\n  }\r\n\r\n  /* Bond format description\r\n   * bondId originAtomId targetAtomId bondType [statusBits]\r\n   */\r\n  _parseBonds(bondsNum, MOL2Data) {\r\n    this._toHeaderString('BOND', MOL2Data)\r\n\r\n    for (let i = 0; i < bondsNum; i++) {\r\n      const parsedStr = splitToFields(MOL2Data[++this._currPosIdx])\r\n\r\n      if (parsedStr.length < 3) {\r\n        throw new Error('MOL2 parsing error: Missing information about bonds!')\r\n      }\r\n\r\n      let originAtomId = parseInt(parsedStr[1], 10)\r\n      let targetAtomId = parseInt(parsedStr[2], 10)\r\n      const bondType = parsedStr[3]\r\n\r\n      if (originAtomId > targetAtomId) {\r\n        ;[originAtomId, targetAtomId] = [targetAtomId, originAtomId]\r\n      }\r\n      this._complex.addBond(\r\n        originAtomId,\r\n        targetAtomId,\r\n        orderMap[bondType] || 0,\r\n        typeMap[bondType] || Bond.BondType.UNKNOWN,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  _fixSerialAtoms() {\r\n    const atoms = this._complex._atoms\r\n    for (let i = 0; i < atoms.length; i++) {\r\n      const atom = atoms[i]\r\n      this._serialAtomMap[atom.serial] = atom\r\n    }\r\n  }\r\n\r\n  _fixBondsArray() {\r\n    const serialAtomMap = this._serialAtomMap\r\n    const complex = this._complex\r\n\r\n    if (Object.keys(serialAtomMap).length === 0) {\r\n      throw new Error('MOL2 parsing error: Missing atom information!')\r\n    }\r\n\r\n    const bonds = complex._bonds\r\n    for (let j = 0; j < bonds.length; j++) {\r\n      const bond = bonds[j]\r\n      bond._left = serialAtomMap[bond._left] || null\r\n      bond._right = serialAtomMap[bond._right] || null\r\n    }\r\n  }\r\n\r\n  _finalizeMolecules() {\r\n    // Get chain from complex\r\n    const chain = this._complex._chains[0]\r\n    this._complex._molecules = []\r\n\r\n    // Aggregate residues from chains\r\n    // (to be precise from the chain 'A')\r\n    for (let i = 0; i < this._molecules.length; i++) {\r\n      const currMolecule = this._molecules[i]\r\n      const molResidues = chain._residues\r\n      const molecule = new Molecule(this._complex, currMolecule._name, i + 1)\r\n      molecule.residues = molResidues\r\n      this._complex._molecules[i] = molecule\r\n    }\r\n  }\r\n\r\n  _finalize() {\r\n    this._complex._finalizeBonds()\r\n    this._fixSerialAtoms()\r\n    this._fixBondsArray()\r\n    this._finalizeMolecules()\r\n\r\n    this._complex.finalize({\r\n      needAutoBonding: false,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n  }\r\n\r\n  _parseCompound(MOL2Data) {\r\n    this._compoundIndx++\r\n    this._parseMolecule(MOL2Data)\r\n\r\n    // Ignoring comments and everything before @<TRIPOS>MOLECULE block\r\n    this._toStringFromHeader('MOLECULE', 2, MOL2Data)\r\n\r\n    const parsedStr = MOL2Data[this._currPosIdx].trim().split(spacesRegex)\r\n    const atomsNum = parsedStr[0]\r\n    const bondsNum = parsedStr[1]\r\n\r\n    this._parseAtoms(atomsNum, MOL2Data)\r\n    this._parseBonds(bondsNum, MOL2Data)\r\n  }\r\n\r\n  parseSync() {\r\n    const result = (this._complex = new Complex())\r\n    const MOL2Data = this._parseRawStrings(this._data)\r\n    do {\r\n      this._parseCompound(MOL2Data)\r\n    } while (this._findNextCompoundStart(MOL2Data))\r\n\r\n    this._finalize()\r\n\r\n    return result\r\n  }\r\n}\r\n\r\nMOL2Parser.formats = ['mol2']\r\nMOL2Parser.extensions = ['.mol2', '.ml2', '.sy2']\r\n\r\nexport default MOL2Parser\r\n",
		"import ParserList from './parsers/ParserList'\r\n\r\nimport PDBParser from './parsers/PDBParser'\r\nimport CMLParser from './parsers/CMLParser'\r\nimport MMTFParser from './parsers/MMTFParser'\r\nimport CIFParser from './parsers/CIFParser'\r\nimport CCP4Parser from './parsers/CCP4Parser'\r\nimport XYZParser from './parsers/XYZParser'\r\nimport PubChemParser from './parsers/PubChemParser'\r\nimport SDFParser from './parsers/SDFParser'\r\nimport DSN6Parser from './parsers/DSN6Parser'\r\nimport GROParser from './parsers/GROParser'\r\nimport MOL2Parser from './parsers/MOL2Parser'\r\n\r\nexport default new ParserList([\r\n  // note: order might be important\r\n  PDBParser,\r\n  CIFParser,\r\n  MMTFParser,\r\n  XYZParser,\r\n  CMLParser,\r\n  PubChemParser,\r\n  SDFParser,\r\n  CCP4Parser,\r\n  DSN6Parser,\r\n  GROParser,\r\n  MOL2Parser\r\n])\r\n",
		"import EntityList from '../../utils/EntityList'\r\n\r\n/**\r\n * A list of available exporters.\r\n * @extends EntityList\r\n */\r\nclass ExporterList extends EntityList {\r\n  /**\r\n   * Create a list of exporters.\r\n   * The exporters are indexed by supported data formats (`.formats` and\r\n   * `.extensions` properties of a Exporter subclass).\r\n   * The Exporters can be retrieved later by matching against specs (see {@link ExporterList#find}).\r\n   *\r\n   * @param {!Array<function(new:Exporter)>=} someExporters A list of {@link Exporter} subclasses to\r\n   *   automatically register at creation time.\r\n   * @see ExporterList#register\r\n   */\r\n  constructor(someExporters = []) {\r\n    super(someExporters, ['formats'])\r\n  }\r\n\r\n  /**\r\n   * Find a suitable exporter for data.\r\n   *\r\n   * @param {Object} specs Exporter specifications.\r\n   * @param {string=} specs.format Supported data format.\r\n   * @param {*=} specs.data Data to export.\r\n   */\r\n  find(specs) {\r\n    let list = []\r\n    if (specs.format) {\r\n      list = this._dict.formats[specs.format.toLowerCase()] || []\r\n    }\r\n    return [...list]\r\n  }\r\n}\r\n\r\nexport default ExporterList\r\n",
		"import makeContextDependent from '../../utils/makeContextDependent'\r\n\r\nexport default class Exporter {\r\n  constructor(source, options) {\r\n    this._source = source\r\n    this._options = options || {}\r\n    this._abort = false\r\n  }\r\n\r\n  exportSync() {\r\n    throw new Error('Exporting to this source is not implemented')\r\n  }\r\n\r\n  export() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        try {\r\n          if (this._abort) {\r\n            return reject(new Error('Export aborted'))\r\n          }\r\n          return resolve(this.exportSync())\r\n        } catch (error) {\r\n          return reject(error)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  abort() {\r\n    this._abort = true\r\n  }\r\n}\r\n\r\nmakeContextDependent(Exporter.prototype)\r\n",
		"import { isBoolean, isUndefined, isNumber, isString } from 'lodash'\r\nimport { Matrix4 } from 'three'\r\n\r\nexport default class PDBResult {\r\n  constructor() {\r\n    this._resultArray = []\r\n    this._currentStr = -1\r\n    this._tag = null\r\n    this._fixedNumeration = false\r\n    this._numeration = false\r\n    this._tagStrNum = 0\r\n  }\r\n\r\n  getResult() {\r\n    this.writeString('\\n', 81, 81)\r\n    return this._resultArray.join('')\r\n  }\r\n\r\n  _currentStrLength() {\r\n    const curStr = this._resultArray[this._currentStr]\r\n    return curStr ? curStr.length : 0\r\n  }\r\n\r\n  // numeration can be number or boolean\r\n  // if numeration is number then just put this number to 8-10 pos in string\r\n  // if numeration is boolean then increase number for all new strings\r\n  newTag(tag, numeration) {\r\n    if (!tag) {\r\n      this._tag = null\r\n    } else {\r\n      this._tag = tag\r\n    }\r\n    if (!isUndefined(numeration)) {\r\n      if (isNumber(numeration)) {\r\n        this._tagStrNum = numeration\r\n        this._numeration = true\r\n        this._fixedNumeration = true\r\n      } else if (isBoolean(numeration)) {\r\n        this._tagStrNum = 0\r\n        this._numeration = numeration\r\n        this._fixedNumeration = false\r\n      }\r\n    } else {\r\n      this._numeration = false\r\n      this._fixedNumeration = false\r\n      this._tagStrNum = 0\r\n    }\r\n  }\r\n\r\n  newString(tag) {\r\n    this.writeString('\\n', 81, 81)\r\n    this._currentStr++\r\n    this._resultArray.push('')\r\n\r\n    if (tag) {\r\n      this.writeString(tag, 1, 6)\r\n    } else if (this._tag) {\r\n      this.writeString(this._tag, 1, 6)\r\n    }\r\n\r\n    if (this._numeration) {\r\n      if (!this._fixedNumeration) {\r\n        this._tagStrNum++\r\n      }\r\n      if (this._tagStrNum !== 1) {\r\n        this.writeString(this._tagStrNum.toString(), 10, 8)\r\n      }\r\n    }\r\n  }\r\n\r\n  writeEntireString(string, maxStrPos, concat) {\r\n    if (!maxStrPos) {\r\n      maxStrPos = 81\r\n    }\r\n    for (let j = 0; j < string.length; j++) {\r\n      if (this._currentStrLength() === maxStrPos && j !== string.length - 1) {\r\n        this.newString()\r\n        if (concat) {\r\n          // pretty hardcoddy\r\n          this.writeString(concat.tag, concat.begin, concat.end)\r\n        }\r\n      }\r\n      if (string[j] === '\\n') {\r\n        this.newString()\r\n      } else {\r\n        this.writeString(string[j])\r\n      }\r\n    }\r\n  }\r\n\r\n  writeString(string, begin, end) {\r\n    let curStr = this._resultArray[this._currentStr]\r\n    let str\r\n\r\n    const curStrLength = curStr ? curStr.length : 0\r\n\r\n    if (isUndefined(string)) {\r\n      return\r\n    }\r\n\r\n    if (!isNumber(begin)) {\r\n      begin = curStrLength + 1\r\n    }\r\n\r\n    if (!isNumber(end)) {\r\n      end = curStrLength + string.length\r\n    }\r\n\r\n    if (!isString(string)) {\r\n      str = string.toString()\r\n    } else {\r\n      str = string\r\n    }\r\n\r\n    const finish = begin < end ? end : begin\r\n    const start = begin < end ? begin : end\r\n\r\n    if (str.length > Math.abs(begin - end) + 1) {\r\n      str = str.substr(0, Math.abs(begin - end + 1))\r\n    }\r\n\r\n    // spaces before start of new data\r\n    if (start > curStrLength + 1) {\r\n      this._resultArray[this._currentStr] += ' '.repeat(\r\n        start - curStrLength - 1\r\n      )\r\n    } else if (start <= curStrLength) {\r\n      const cStr = this._resultArray[this._currentStr]\r\n      this._resultArray[this._currentStr] = cStr.slice(0, start - 1)\r\n    }\r\n\r\n    // if reverse order\r\n    // reverse order of end and begin means that user wants to align text right\r\n    if (end < begin) {\r\n      const len = begin - end + 1\r\n      str = ' '.repeat(len - str.length) + str\r\n    }\r\n\r\n    // some hardcode fix for space between string numeration and data\r\n    // (see pdb file format description)\r\n    if (start === 11 && this._numeration && this._tagStrNum !== 1) {\r\n      str = ` ${str}`\r\n    }\r\n\r\n    // append new data to string\r\n    this._resultArray[this._currentStr] += str\r\n    curStr = this._resultArray[this._currentStr]\r\n\r\n    if (finish > curStr.length) {\r\n      this._resultArray[this._currentStr] += ' '.repeat(finish - curStr.length)\r\n    }\r\n  }\r\n\r\n  writeBondsArray(bonds, atom) {\r\n    const bondsArrays = this._getSubArrays(bonds, 4)\r\n\r\n    for (let k = 0; k < bondsArrays.length; k++) {\r\n      this.newString()\r\n      this.writeString(atom.serial, 11, 7)\r\n\r\n      for (let j = 0; j < bondsArrays[k].length; j++) {\r\n        const serial =\r\n          bondsArrays[k][j]._left.serial === atom.serial\r\n            ? bondsArrays[k][j]._right.serial\r\n            : bondsArrays[k][j]._left.serial\r\n\r\n        this.writeString(serial, 16 + 5 * j, 12 + 5 * j)\r\n      }\r\n    }\r\n  }\r\n\r\n  _getSubArrays(arr, subArraySize) {\r\n    const subArrays = []\r\n    for (let i = 0; i < arr.length; i += subArraySize) {\r\n      subArrays.push(arr.slice(i, i + subArraySize))\r\n    }\r\n    return subArrays\r\n  }\r\n\r\n  // function for writing matrix in Remark290 and Remark350 tags\r\n  // (see pdb file description)\r\n  writeMatrix(matrix, matrixIndx, tag) {\r\n    for (let j = 0; j < 3; j++) {\r\n      this.newString()\r\n      this.writeString(tag, 14, 18)\r\n      this.writeString((j + 1).toString(), 19, 19)\r\n      this.writeString(matrixIndx.toString(), 23, 20)\r\n      for (let k = 0; k < 3; k++) {\r\n        const numb = parseFloat(matrix.elements[j * 4 + k]).toFixed(6)\r\n        this.writeString(numb.toString(), 33 + k * 10, 24 + k * 10)\r\n      }\r\n\r\n      const numb = parseFloat(matrix.elements[j * 4 + 3]).toFixed(5)\r\n      this.writeString(numb.toString(), 68, 55)\r\n    }\r\n  }\r\n\r\n  writeMatrices(matrices, string) {\r\n    if (!matrices) {\r\n      return\r\n    }\r\n    const matrix = new Matrix4()\r\n    for (let j = 0; j < matrices.length; j++) {\r\n      matrix.copy(matrices[j]).transpose()\r\n      this.writeMatrix(matrix, j + 1, string)\r\n    }\r\n  }\r\n}\r\n",
		"import { invert } from 'lodash'\r\nimport Complex from '../../chem/Complex'\r\nimport Exporter from './Exporter'\r\nimport PDBResult from './PDBResult'\r\nimport Assembly from '../../chem/Assembly'\r\nimport { typeByPDBHelixClass } from '../../chem/Helix'\r\n\r\nexport default class PDBExporter extends Exporter {\r\n  constructor(source, options) {\r\n    super(source, options)\r\n    this._tags = [\r\n      'HEADER',\r\n      'TITLE',\r\n      'COMPND',\r\n      'REMARK',\r\n      'HELIX',\r\n      'SHEET',\r\n      'ATOM and HETATM',\r\n      'CONECT'\r\n    ]\r\n    this._result = null\r\n    this._tagExtractors = {\r\n      HEADER: this._extractHEADER,\r\n      TITLE: this._extractTITLE,\r\n      'ATOM and HETATM': this._extractATOM,\r\n      CONECT: this._extractCONECT,\r\n      COMPND: this._extractCOMPND,\r\n      REMARK: this._extractREMARK,\r\n      HELIX: this._extractHELIX,\r\n      SHEET: this._extractSHEET\r\n    }\r\n    this._stringForRemark350 =\r\n      'COORDINATES FOR A COMPLETE MULTIMER REPRESENTING THE KNOWN\\n' +\r\n      'BIOLOGICALLY SIGNIFICANT OLIGOMERIZATION STATE OF THE\\n' +\r\n      'MOLECULE CAN BE GENERATED BY APPLYING BIOMT TRANSFORMATIONS\\n' +\r\n      'GIVEN BELOW.  BOTH NON-CRYSTALLOGRAPHIC AND\\n' +\r\n      'CRYSTALLOGRAPHIC OPERATIONS ARE GIVEN.'\r\n\r\n    this._stringForRemark290 =\r\n      'CRYSTALLOGRAPHIC SYMMETRY TRANSFORMATIONS\\n' +\r\n      'THE FOLLOWING TRANSFORMATIONS OPERATE ON THE ATOM/HETATM\\n' +\r\n      'RECORDS IN THIS ENTRY TO PRODUCE CRYSTALLOGRAPHICALLY\\n' +\r\n      'RELATED MOLECULES.'\r\n  }\r\n\r\n  exportSync() {\r\n    const result = new PDBResult()\r\n    if (!this._source) {\r\n      return this._result\r\n    }\r\n\r\n    for (let i = 0; i < this._tags.length; i++) {\r\n      const tag = this._tags[i]\r\n      const func = this._tagExtractors[tag]\r\n      if (typeof func === 'function') {\r\n        func.call(this, result)\r\n      }\r\n    }\r\n\r\n    this._result = result.getResult()\r\n\r\n    return this._result\r\n  }\r\n\r\n  _extractHEADER(result) {\r\n    if (!this._source.metadata) {\r\n      return\r\n    }\r\n    const { metadata } = this._source\r\n    result.newTag('HEADER')\r\n    result.newString()\r\n    if (metadata.classification) {\r\n      result.writeString(metadata.classification, 11, 50)\r\n    }\r\n    if (metadata.date) {\r\n      result.writeString(metadata.date, 51, 59)\r\n    }\r\n    if (metadata.id) {\r\n      result.writeString(metadata.id, 63, 66)\r\n    }\r\n  }\r\n\r\n  _extractTITLE(result) {\r\n    if (!this._source.metadata) {\r\n      return\r\n    }\r\n    const { metadata } = this._source\r\n    if (!metadata.title) {\r\n      return\r\n    }\r\n    result.newTag('TITLE', true)\r\n    for (let i = 0; i < metadata.title.length; i++) {\r\n      result.newString()\r\n      result.writeString(metadata.title[i], 11, 80)\r\n    }\r\n  }\r\n\r\n  _extractCONECT(result) {\r\n    if (!this._source._atoms) {\r\n      return\r\n    }\r\n\r\n    const atoms = this._source._atoms\r\n    result.newTag('CONECT')\r\n\r\n    for (let i = 0; i < atoms.length; i++) {\r\n      const fixedBonds = atoms[i].bonds.filter((bond) => bond._fixed)\r\n      if (fixedBonds.length !== 0) {\r\n        result.writeBondsArray(fixedBonds.reverse(), atoms[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  _extractSHEET(result) {\r\n    if (!this._source._sheets) {\r\n      return\r\n    }\r\n\r\n    result.newTag('SHEET')\r\n\r\n    const sheets = this._source._sheets\r\n    for (let i = 0; i < sheets.length; i++) {\r\n      if (sheets[i]._strands) {\r\n        const strands = sheets[i]._strands\r\n        for (let j = 0; j < strands.length; j++) {\r\n          result.newString()\r\n          result.writeString(j + 1, 10, 8)\r\n          result.writeString(sheets[i]._name, 14, 12)\r\n          result.writeString(strands.length, 16, 15)\r\n          result.writeString(strands[j].init._type._name, 18, 20)\r\n          result.writeString(strands[j].init._chain._name, 22, 22)\r\n          result.writeString(strands[j].init._sequence, 26, 23)\r\n          result.writeString(strands[j].init._icode, 27, 27)\r\n          result.writeString(strands[j].term._type._name, 29, 31)\r\n          result.writeString(strands[j].init._chain._name, 33, 33)\r\n          result.writeString(strands[j].term._sequence, 37, 34)\r\n          result.writeString(strands[j].term._icode, 38, 38)\r\n          result.writeString(strands[j].sense, 40, 39)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _extractHELIX(result) {\r\n    if (!this._source._helices) {\r\n      return\r\n    }\r\n\r\n    result.newTag('HELIX')\r\n    const helices = this._source._helices\r\n    for (let i = 0; i < helices.length; i++) {\r\n      const helix = helices[i]\r\n      const helixClass = invert(typeByPDBHelixClass)\r\n      result.newString()\r\n      result.writeString(helix.serial, 10, 8)\r\n      result.writeString(helix.name, 14, 12)\r\n      result.writeString(helix.init._type._name, 16, 18)\r\n      result.writeString(helix.init._chain._name, 20, 20)\r\n      result.writeString(helix.init._sequence, 25, 22)\r\n      result.writeString(helix.init._icode, 26, 26)\r\n      result.writeString(helix.term._type._name, 28, 30)\r\n      result.writeString(helix.term._chain._name, 32, 32)\r\n      result.writeString(helix.term._sequence, 37, 34)\r\n      result.writeString(helix.term._icode, 38, 38)\r\n      result.writeString(helixClass[helix.type], 40, 39)\r\n      result.writeString(helix.comment, 41, 70)\r\n      result.writeString(helix.length, 76, 72)\r\n    }\r\n  }\r\n\r\n  _extractATOM(result) {\r\n    if (!this._source._atoms) {\r\n      return\r\n    }\r\n    const atoms = this._source._atoms\r\n\r\n    for (let i = 0; i < atoms.length; i++) {\r\n      const tag = atoms[i].het ? 'HETATM' : 'ATOM'\r\n      result.newString(tag)\r\n      const startIndx =\r\n        atoms[i].element.name.length > 1 || atoms[i].name.length > 3 ? 13 : 14\r\n      result.writeString(atoms[i].serial, 11, 7)\r\n      result.writeString(atoms[i].name, startIndx, 16)\r\n      result.writeString(String.fromCharCode(atoms[i].location), 17, 17)\r\n      result.writeString(atoms[i].residue._type._name, 20, 18)\r\n      result.writeString(atoms[i].residue._chain._name, 22, 22)\r\n      result.writeString(atoms[i].residue._sequence, 26, 23)\r\n      result.writeString(atoms[i].residue._icode, 27, 27)\r\n      result.writeString(atoms[i].position.x.toFixed(3), 38, 31)\r\n      result.writeString(atoms[i].position.y.toFixed(3), 46, 39)\r\n      result.writeString(atoms[i].position.z.toFixed(3), 54, 47)\r\n      result.writeString(atoms[i].occupancy.toFixed(2), 60, 55)\r\n      result.writeString(atoms[i].temperature.toFixed(2), 66, 61)\r\n      result.writeString(atoms[i].element.name, 78, 77)\r\n      if (atoms[i].charge) {\r\n        result.writeString(atoms[i].charge, 79, 80)\r\n      }\r\n    }\r\n  }\r\n\r\n  _extractCOMPND(result) {\r\n    if (!this._source._molecules) {\r\n      return\r\n    }\r\n    const molecules = this._source._molecules\r\n    result.newTag('COMPND', true)\r\n\r\n    for (let i = 0; i < molecules.length; i++) {\r\n      const chains = this._getMoleculeChains(molecules[i])\r\n      result.newString()\r\n      result.writeString(`MOL_ID: ${molecules[i].index};`, 11, 80)\r\n      result.newString()\r\n      result.writeString(`MOLECULE: ${molecules[i].name};`, 11, 80)\r\n      result.newString()\r\n      result.writeString('CHAIN: ', 11, 18)\r\n      const chainsString = `${chains.join(', ')};`\r\n      result.writeEntireString(chainsString, 81)\r\n    }\r\n  }\r\n\r\n  _extractREMARK(result) {\r\n    this._Remark290(result)\r\n    this._Remark350(result)\r\n  }\r\n\r\n  _Remark290(result) {\r\n    if (!this._source.symmetry) {\r\n      return\r\n    }\r\n\r\n    if (this._source.symmetry.length !== 0) {\r\n      const matrices = this._source.symmetry\r\n      result.newTag('REMARK', 290)\r\n      result.newString()\r\n      result.newString()\r\n      result.writeEntireString(this._stringForRemark290)\r\n      result.writeMatrices(matrices, 'SMTRY')\r\n      result.newString()\r\n      result.newString()\r\n      result.writeString('REMARK: NULL', 11, 80)\r\n    }\r\n  }\r\n\r\n  _Remark350(result) {\r\n    if (!this._source.units) {\r\n      return\r\n    }\r\n    const { units } = this._source\r\n    let biomolIndx = 0\r\n\r\n    result.newTag('REMARK', 350)\r\n    result.newString()\r\n    result.newString()\r\n    result.writeEntireString(this._stringForRemark350)\r\n\r\n    const assemblies = units.filter((unit) => unit instanceof Assembly)\r\n\r\n    for (let i = 0; i < assemblies.length; i++) {\r\n      result.newString()\r\n      result.newString()\r\n      biomolIndx++\r\n      result.writeString(`BIOMOLECULE: ${biomolIndx}`, 11, 80)\r\n      const chains = assemblies[i].chains.join(', ')\r\n      result.newString()\r\n      result.writeString('APPLY THE FOLLOWING TO CHAINS: ')\r\n      result.writeEntireString(chains, 69, {\r\n        tag: 'AND CHAINS: ',\r\n        begin: 31,\r\n        end: 42\r\n      })\r\n\r\n      const { matrices } = assemblies[i]\r\n      result.writeMatrices(matrices, 'BIOMT')\r\n    }\r\n  }\r\n\r\n  _getMoleculeChains(molecule) {\r\n    function getChainName(residue) {\r\n      return residue._chain._name\r\n    }\r\n    const chainNames = molecule.residues.map(getChainName)\r\n    return chainNames.filter((item, pos) => chainNames.indexOf(item) === pos)\r\n  }\r\n}\r\n\r\nPDBExporter.formats = ['pdb']\r\nPDBExporter.SourceClass = Complex\r\n",
		"import { Vector4 } from 'three'\r\n\r\nconst FBX_POS_SIZE = 3\r\nconst FBX_NORM_SIZE = 3\r\nconst FBX_COL_SIZE = 4\r\n\r\nfunction copyFbxPoint3(src, srcIdx, dst, dstIdx) {\r\n  dst[dstIdx] = src[srcIdx]\r\n  dst[dstIdx + 1] = src[srcIdx + 1]\r\n  dst[dstIdx + 2] = src[srcIdx + 2]\r\n}\r\n\r\nfunction copyFbxPoint4(src, srcIdx, dst, dstIdx, value) {\r\n  dst[dstIdx] = src[srcIdx]\r\n  dst[dstIdx + 1] = src[srcIdx + 1]\r\n  dst[dstIdx + 2] = src[srcIdx + 2]\r\n  dst[dstIdx + 3] = value\r\n}\r\n\r\nconst vector4 = new Vector4()\r\nfunction copyTransformedPoint3(src, srcIdx, dst, dstIdx, opts) {\r\n  vector4.set(src[srcIdx], src[srcIdx + 1], src[srcIdx + 2], opts.w)\r\n  vector4.applyMatrix4(opts.matrix)\r\n  dst[dstIdx] = vector4.x\r\n  dst[dstIdx + 1] = vector4.y\r\n  dst[dstIdx + 2] = vector4.z\r\n}\r\n\r\nfunction setSubArray(src, dst, count, copyFunctor, functorOpts) {\r\n  if (\r\n    (dst.array.length - dst.start) / dst.stride < count ||\r\n    (src.array.length - src.start) / src.stride < count\r\n  ) {\r\n    return // we've got no space\r\n  }\r\n  if (src.stride === dst.stride) {\r\n    // stride is the same\r\n    dst.array.set(src.array, dst.start)\r\n  } else {\r\n    let idx = dst.start\r\n    let arridx = src.start\r\n    for (let i = 0; i < count; ++i, idx += dst.stride, arridx += src.stride) {\r\n      copyFunctor(src.array, arridx, dst.array, idx, functorOpts)\r\n    }\r\n  }\r\n}\r\n\r\nexport default class FBXModel {\r\n  constructor() {\r\n    this.positions = null\r\n    this.normals = null\r\n    this.colors = null\r\n    this.indices = null\r\n    this.lastPos = 0\r\n    this.lastNorm = 0\r\n    this.lastCol = 0\r\n    this.lastIdx = 0\r\n  }\r\n\r\n  init(vertsCount, indsCount) {\r\n    this.positions = new Float32Array(vertsCount * FBX_POS_SIZE)\r\n    this.normals = new Float32Array(vertsCount * FBX_NORM_SIZE)\r\n    this.colors = new Float32Array(vertsCount * FBX_COL_SIZE)\r\n    this.indices = new Int32Array(indsCount)\r\n  }\r\n\r\n  setPositions(array, start, count, stride) {\r\n    const src = {\r\n      array,\r\n      start,\r\n      stride\r\n    }\r\n    const dst = {\r\n      array: this.positions,\r\n      start: this.lastPos,\r\n      stride: FBX_POS_SIZE\r\n    }\r\n    setSubArray(src, dst, count, copyFbxPoint3)\r\n    this.lastPos += count * FBX_POS_SIZE\r\n  }\r\n\r\n  setTransformedPositions(array, start, count, stride, matrix) {\r\n    let idx = this.lastPos\r\n    let arrIdx = start\r\n    const opts = { matrix, w: 1 }\r\n    for (let i = 0; i < count; ++i, arrIdx += stride, idx += FBX_POS_SIZE) {\r\n      copyTransformedPoint3(array, arrIdx, this.positions, idx, opts)\r\n    }\r\n    this.lastPos += count * FBX_POS_SIZE\r\n  }\r\n\r\n  setNormals(array, start, count, stride) {\r\n    const src = {\r\n      array,\r\n      start,\r\n      stride\r\n    }\r\n    const dst = {\r\n      array: this.normals,\r\n      start: this.lastNorm,\r\n      stride: FBX_NORM_SIZE\r\n    }\r\n    setSubArray(src, dst, count, copyFbxPoint3)\r\n    this.lastNorm += count * FBX_NORM_SIZE\r\n  }\r\n\r\n  setTransformedNormals(array, start, count, stride, matrix) {\r\n    let idx = this.lastNorm\r\n    let arrIdx = start\r\n    const opts = { matrix, w: 0 }\r\n    for (let i = 0; i < count; ++i, arrIdx += stride, idx += FBX_NORM_SIZE) {\r\n      copyTransformedPoint3(array, arrIdx, this.normals, idx, opts)\r\n    }\r\n    this.lastNorm += count * FBX_NORM_SIZE\r\n  }\r\n\r\n  setColors(array, start, count, stride) {\r\n    const src = {\r\n      array,\r\n      start,\r\n      stride\r\n    }\r\n    const dst = {\r\n      array: this.colors,\r\n      start: this.lastCol,\r\n      stride: FBX_COL_SIZE\r\n    }\r\n    setSubArray(src, dst, count, copyFbxPoint4, 1)\r\n    this.lastCol += count * FBX_COL_SIZE\r\n  }\r\n\r\n  setIndices(array, start, count) {\r\n    this.indices.set(array, this.lastIdx)\r\n    this.lastIdx += count\r\n  }\r\n\r\n  setShiftedIndices(array, count, shift) {\r\n    const shifted = array.map((x) => x + shift)\r\n    this.setIndices(shifted, 0, count)\r\n  }\r\n\r\n  getVerticesNumber() {\r\n    return this.lastPos / FBX_POS_SIZE\r\n  }\r\n\r\n  addInstance(matrix, geo) {\r\n    // add indices at first to take old number of vertices for shift\r\n    const currentCount = this.getVerticesNumber()\r\n    this.setShiftedIndices(geo.indices, geo.indices.length, currentCount)\r\n    // simply write vertices at empty space\r\n    const size = geo.itemSize\r\n    this.setTransformedPositions(\r\n      geo.positions,\r\n      0,\r\n      geo.vertsCount,\r\n      size.position,\r\n      matrix\r\n    )\r\n    this.setTransformedNormals(\r\n      geo.normals,\r\n      0,\r\n      geo.vertsCount,\r\n      size.normal,\r\n      matrix\r\n    )\r\n    this.setColors(geo.colors, 0, geo.vertsCount, size.color)\r\n  }\r\n}\r\n",
		"/** Base class for fbx geometry contains simply organized attributes: positions+normals+colors, indices. */\r\nexport default class FBXGeometry {\r\n  /**\r\n   * Create a base geo with necessary members.\r\n   */\r\n  constructor() {\r\n    this.positions = null\r\n    this.normals = null\r\n    this.colors = null\r\n    this.indices = null\r\n    this.vertsCount = 0\r\n    this.itemSize = null\r\n  }\r\n\r\n  /**\r\n   * Initialize base geo storing items info from attributes.\r\n   * @param {Object} geo - THREE.BufferGeometry.\r\n   */\r\n  init(geo, _info) {\r\n    const { attributes } = geo\r\n    // save item size\r\n    this.itemSize = {\r\n      position: attributes.position.itemSize,\r\n      normal: attributes.normal.itemSize,\r\n      color: attributes.color.itemSize\r\n    }\r\n  }\r\n}\r\n",
		"import FBXGeometry from './FBXGeometry'\r\n\r\n/**\r\n * Fbx geometry, that copies positions+normals, indexes and creates colors filled with defined value.\r\n * @extends FBXGeometry\r\n */\r\nexport default class FBX1CGeometry extends FBXGeometry {\r\n  /**\r\n   * Initialize geo storing positions, normals, indices and create colors.\r\n   * @param {Object} geo - THREE.BufferGeometry.\r\n   */\r\n  init(geo, _info) {\r\n    super.init(geo, _info)\r\n    const {\r\n      attributes: { position, normal },\r\n      index\r\n    } = geo\r\n    // copy vertices attributes\r\n    this.vertsCount = position.count\r\n    this.positions = position.array\r\n    this.normals = normal.array\r\n    // create color array\r\n    this.colors = new Float32Array(this.vertsCount * this.itemSize.color)\r\n    // indices\r\n    this.indices = index.array\r\n  }\r\n\r\n  /**\r\n   * Set defined color for all items in color attribute\r\n   * @param {Object} color - THREE.Color.\r\n   */\r\n  setColors(color) {\r\n    let offset = 0\r\n    for (\r\n      let i = 0, l = this.colors.length, cl = this.itemSize.color;\r\n      i < l;\r\n      i += cl\r\n    ) {\r\n      this.colors[offset++] = color.r\r\n      this.colors[offset++] = color.g\r\n      this.colors[offset++] = color.b\r\n    }\r\n  }\r\n}\r\n",
		"import FBXGeometry from './FBXGeometry'\r\n\r\n/**\r\n * Fbx geometry, that copies positions+normals, indexes from cylinder  geometry and creates colors filled with two\r\n * defined values.\r\n * @extends FBXGeometry\r\n */\r\nexport default class FBX2CCylinder extends FBXGeometry {\r\n  constructor() {\r\n    super()\r\n    this._cutRawStart = 0\r\n    this._cutRawEnd = 0\r\n    this._facesPerSlice = 0\r\n  }\r\n\r\n  /**\r\n   * Initialize geo by creating new attributes, because we extend number of vertices to make cylinder two-colored.\r\n   * Indices remain the same. We process open- end close-ended cylinders and consider cylinders od 2 segments\r\n   * in height ONLY.\r\n   * NOTE: cylinder consists of 2 height segments and stores parts in the order: tube, topCap, bottomCap\r\n   * @param {Object} geo - THREE.BufferGeometry.\r\n   * @param {Object} info - information needed for geo extend\r\n   */\r\n  init(geo, info) {\r\n    super.init(geo, info)\r\n    const {\r\n      attributes: { position },\r\n      index\r\n    } = geo\r\n    // extend vertices arrays\r\n    this.vertsCount = position.count + info.addPerCylinder\r\n    this._facesPerSlice = info.addPerCylinder\r\n    this.positions = new Float32Array(this.vertsCount * position.itemSize)\r\n    this.normals = new Float32Array(this.vertsCount * this.itemSize.normal)\r\n    this.colors = new Float32Array(this.vertsCount * this.itemSize.color)\r\n    this._extendVertices(geo, info)\r\n    // number of indices stays the same\r\n    this.indices = new Uint32Array(index.count)\r\n    this._extendIndices(geo, info)\r\n  }\r\n\r\n  /** Extend vertex attributes to have one more slice to make sharp middle startColor-endColor line. */\r\n  _extendVertices(geo, info) {\r\n    const { position } = geo.attributes\r\n    const { normal } = geo.attributes\r\n    const geoParams = geo.getGeoParams()\r\n    const cutRaw = 1 // we expect cylinders of 2 segments in height => so half segment = 1\r\n    this._cutRawStart = cutRaw * geoParams.radialSegments\r\n    this._cutRawEnd = this._cutRawStart + info.addPerCylinder\r\n    {\r\n      // write first half of cylinder\r\n      let temp = position.array.slice(0, this._cutRawEnd * position.itemSize)\r\n      this.positions.set(temp, 0)\r\n      temp = normal.array.slice(0, this._cutRawEnd * normal.itemSize)\r\n      this.normals.set(temp, 0)\r\n    }\r\n    {\r\n      // write second part of cylinder\r\n      let temp = position.array.slice(\r\n        this._cutRawStart * position.itemSize,\r\n        position.array.length\r\n      )\r\n      this.positions.set(temp, this._cutRawEnd * position.itemSize)\r\n      temp = normal.array.slice(\r\n        this._cutRawStart * normal.itemSize,\r\n        normal.array.length\r\n      )\r\n      this.normals.set(temp, this._cutRawEnd * normal.itemSize)\r\n    }\r\n  }\r\n\r\n  /** Shift values of second part (+caps) indices by newly added vertices count. Number of faces remains the same. */\r\n  _extendIndices(geo, info) {\r\n    const { index } = geo\r\n    const indicesPerQuad = 6 // quad = 2 triangles => 6 indices\r\n    const startToShift = info.addPerCylinder * indicesPerQuad\r\n    const shift = info.addPerCylinder\r\n    let shifted = index.array.slice(startToShift, index.count)\r\n    shifted = shifted.map((x) => x + shift) // shift only the endings\r\n    this.indices.set(index.array, 0)\r\n    this.indices.set(shifted, startToShift)\r\n  }\r\n\r\n  /**\r\n   * Set defined colors: (first part + bottom cap), (second part + top cap)\r\n   * @param {number} start - start color index\r\n   * @param {number} end - start color index\r\n   * @param {array} array - array of colors\r\n   * @param {array} color - color value components\r\n   */\r\n  _setColorRange(start, end, array, color) {\r\n    const colorSize = color.length\r\n    for (let i = start; i < end; i += colorSize) {\r\n      array.set(color, i)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set defined colors: (first part + bottom cap), (second part + top cap)\r\n   * @param {Object} color1 - THREE.Color.\r\n   * @param {Object} color2 - THREE.Color.\r\n   */\r\n  setColors(color1, color2) {\r\n    const colorSize = this.itemSize.color\r\n    const part1End = this._cutRawEnd * colorSize\r\n    const part2End = part1End * 2\r\n    this._setColorRange(0, part1End, this.colors, color1.toArray())\r\n    this._setColorRange(part1End, part2End, this.colors, color2.toArray())\r\n    if (part2End < this.colors.length) {\r\n      // cylinder has caps, lets paint them\r\n      const capSize = (this._facesPerSlice + 1) * colorSize\r\n      const cap1End = part2End + capSize\r\n      this._setColorRange(part2End, cap1End, this.colors, color2.toArray())\r\n      const cap2End = cap1End + capSize // should be equal to this.colors.length;\r\n      this._setColorRange(cap1End, cap2End, this.colors, color1.toArray())\r\n    }\r\n  }\r\n}\r\n",
		"import utils from '../../../utils'\r\nimport gfxutils from '../../../gfx/gfxutils'\r\nimport logger from '../../../utils/logger'\r\n\r\nimport FBXModel from './FBXModel'\r\nimport ThickLineMesh from '../../../gfx/meshes/ThickLineMesh'\r\nimport ZSpriteMesh from '../../../gfx/meshes/ZSpriteMesh'\r\nimport InstancedSpheresGeometry from '../../../gfx/geometries/InstancedSpheresGeometry'\r\nimport Instanced2CCylindersGeometry from '../../../gfx/geometries/Instanced2CCylindersGeometry'\r\nimport FBX1CGeometry from './FBX1CGeometry'\r\nimport FBX2CCylinder from './FBX2CCylinder'\r\nimport { Layers, Matrix4, Mesh, Color } from 'three'\r\nimport { findIndex, isEqual } from 'lodash'\r\n\r\nexport default class FBXInfoExtractor {\r\n  constructor() {\r\n    this._materials = []\r\n    this._models = []\r\n  }\r\n\r\n  process(data) {\r\n    this._extractModelsAndMaterials(data)\r\n    const models = this._flattenModels()\r\n\r\n    return {\r\n      name: data.name,\r\n      models,\r\n      materials: this._materials\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extract fbx object information from ComplexVisual\r\n   * @param {object} data - complexVisual to get geometry info from\r\n   */\r\n  _extractModelsAndMaterials(data) {\r\n    const layersOfInterest = new Layers()\r\n    layersOfInterest.set(gfxutils.LAYERS.DEFAULT)\r\n    layersOfInterest.enable(gfxutils.LAYERS.TRANSPARENT)\r\n    data.traverse((object) => {\r\n      if (\r\n        object instanceof Mesh &&\r\n        object.layers.test(layersOfInterest) &&\r\n        this.checkExportAbility(object)\r\n      ) {\r\n        if (object.geometry.type === 'InstancedBufferGeometry') {\r\n          this._collectInstancedGeoInfo(object)\r\n        } else {\r\n          this._collectGeoInfo(object)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Reworking indices buffer, see https://banexdevblog.wordpress.com/2014/06/23/a-quick-tutorial-about-the-fbx-ascii-format/\r\n   * basically, every triangle in Miew has been represented hat way (e.g.) : 0,1,7, but we must (for FBX) rework that\r\n   * into: 0,1,-8.\r\n   * @param {array} indices - belongs to [0, maxVertIndex]\r\n   */\r\n  _reworkIndices(indices) {\r\n    const faceSize = 3\r\n    for (let i = faceSize - 1; i < indices.length; i += faceSize) {\r\n      indices[i] *= -1\r\n      indices[i]--\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Combine geometry from several models having the same material into one Model and finally prepare indices\r\n   * @returns {array} models, combined by material id\r\n   */\r\n  _flattenModels() {\r\n    let overallVertsCount = 0\r\n    function shift(x) {\r\n      return x + overallVertsCount\r\n    }\r\n    const combined = []\r\n    // flatten models geometry\r\n    for (let i = 0, n = this._models.length; i < n; i++) {\r\n      const models = this._models[i]\r\n      let indices = []\r\n      let positions = []\r\n      let normals = []\r\n      let colors = []\r\n      // reorganize every attributes as array of arrays\r\n      overallVertsCount = 0\r\n      for (let j = 0; j < models.length; j++) {\r\n        const m = models[j]\r\n        indices.push(m.indices.map(shift))\r\n        overallVertsCount += m.getVerticesNumber()\r\n        positions.push(m.positions)\r\n        normals.push(m.normals)\r\n        colors.push(m.colors)\r\n      }\r\n      // join all subarrays into one\r\n      indices = utils.mergeTypedArraysUnsafe(indices)\r\n      this._reworkIndices(indices)\r\n      positions = utils.mergeTypedArraysUnsafe(positions)\r\n      normals = utils.mergeTypedArraysUnsafe(normals)\r\n      colors = utils.mergeTypedArraysUnsafe(colors)\r\n      combined.push({\r\n        indices,\r\n        positions,\r\n        normals,\r\n        colors,\r\n        verticesCount: overallVertsCount\r\n      })\r\n    }\r\n    return combined\r\n  }\r\n\r\n  /**\r\n   * Check ability to export the kind of mesh.\r\n   * @param {object} mesh - given mesh to check\r\n   * @returns {boolean} result of check\r\n   */\r\n  checkExportAbility(mesh) {\r\n    // check mesh on not being empty\r\n    if (mesh.geometry.attributes.position.count === 0) {\r\n      return false\r\n    }\r\n    // check type of mesh\r\n    // if (mesh.geometry.isInstancedBufferGeometry && settings.now.zSprites) {\r\n    if (mesh instanceof ZSpriteMesh) {\r\n      logger.warn(\r\n        \"Currently we cannot export 'sprites' modes, like BS, WV, LC. Please turn of settings 'zSprites' and try again\"\r\n      )\r\n      return false\r\n    }\r\n    if (mesh instanceof ThickLineMesh) {\r\n      logger.warn('Currently we cannot export Lines mode')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Save geometry info from common mesh, like Surface or Cartoon\r\n   */\r\n  _collectGeoInfo(mesh) {\r\n    const {\r\n      geometry: {\r\n        attributes: { position, color, normal },\r\n        index\r\n      },\r\n      matrix\r\n    } = mesh\r\n\r\n    const model = new FBXModel()\r\n    const vertCount = position.count\r\n    model.init(vertCount, index.count)\r\n    if (matrix.isIdentity()) {\r\n      model.setPositions(position.array, 0, vertCount, position.itemSize)\r\n      model.setNormals(normal.array, 0, vertCount, normal.itemSize)\r\n    } else {\r\n      model.setTransformedPositions(\r\n        position.array,\r\n        0,\r\n        vertCount,\r\n        position.itemSize,\r\n        matrix\r\n      )\r\n      model.setTransformedNormals(\r\n        normal.array,\r\n        0,\r\n        vertCount,\r\n        normal.itemSize,\r\n        matrix\r\n      )\r\n    }\r\n    model.setColors(color.array, 0, vertCount, color.itemSize)\r\n    model.setIndices(index.array, 0, index.count)\r\n    const material = this._collectMaterialInfo(mesh)\r\n    this._addToPool(model, material)\r\n  }\r\n\r\n  /**\r\n   * Collect instanced spheres geometry and materials.\r\n   * @param {object} mesh - mesh with instanced spheres info\r\n   */\r\n  _collectSpheresInfo(mesh) {\r\n    const {\r\n      geometry: {\r\n        attributes: { position, color },\r\n        index\r\n      },\r\n      matrix\r\n    } = mesh\r\n\r\n    const model = new FBXModel()\r\n    const instCount = mesh.geometry.instanceCount\r\n    const vertCount = position.count\r\n    const indsCount = index.count\r\n    model.init(instCount * vertCount, instCount * indsCount)\r\n    const geo = new FBX1CGeometry()\r\n    geo.init(mesh.geometry)\r\n    const instMatrix = new Matrix4()\r\n    const objMatrix = new Matrix4()\r\n    const sphereColor = new Color()\r\n    for (let instanceIndex = 0; instanceIndex < instCount; ++instanceIndex) {\r\n      // update colors in geometry\r\n      const colorIdx = instanceIndex * color.itemSize\r\n      sphereColor.fromArray(color.array, colorIdx)\r\n      geo.setColors(sphereColor)\r\n      // add instance to the model\r\n      this._getSphereInstanceMatrix(mesh.geometry, instanceIndex, instMatrix)\r\n      objMatrix.multiplyMatrices(matrix, instMatrix)\r\n      model.addInstance(objMatrix, geo)\r\n    }\r\n    const material = this._collectMaterialInfo(mesh)\r\n    this._addToPool(model, material)\r\n  }\r\n\r\n  /**\r\n   * Getting all instanced cylinders from given mesh.\r\n   * Divide cylinder (add additional vertexes) for prettiness therefore algorithm is a bit complicated\r\n   * @param {object} mesh - given mesh with instanced cylinders\r\n   */\r\n  _collectCylindersInfo(mesh) {\r\n    const {\r\n      geometry: {\r\n        attributes: { position, color, color2 },\r\n        index\r\n      },\r\n      matrix\r\n    } = mesh\r\n\r\n    const model = new FBXModel()\r\n    const instCount = mesh.geometry.instanceCount\r\n    const oneCCylinder = new FBX1CGeometry()\r\n    oneCCylinder.init(mesh.geometry)\r\n    const splittingInfo = this._gatherCylindersColoringInfo(mesh.geometry)\r\n    let twoCCylinder = null\r\n    if (splittingInfo.needToSplit > 0) {\r\n      twoCCylinder = new FBX2CCylinder()\r\n      twoCCylinder.init(mesh.geometry, splittingInfo)\r\n    }\r\n    const additionalVertsCount =\r\n      splittingInfo.addPerCylinder * splittingInfo.needToSplit\r\n    const vertCount = position.count\r\n    const indsCount = index.count\r\n    model.init(\r\n      instCount * vertCount + additionalVertsCount,\r\n      instCount * indsCount\r\n    )\r\n    const instMatrix = new Matrix4()\r\n    const objMatrix = new Matrix4()\r\n    const colorStart = new Color()\r\n    const colorEnd = new Color()\r\n    let geo = {}\r\n    for (let instanceIndex = 0; instanceIndex < instCount; ++instanceIndex) {\r\n      // update colors in geometry\r\n      const colorIdx = instanceIndex * color.itemSize\r\n      if (splittingInfo.is2Colored[instanceIndex]) {\r\n        // .color2 contains starting color, and .color contains starting color (see uber.frag ATTR_COLOR2)\r\n        colorStart.fromArray(color2.array, colorIdx)\r\n        colorEnd.fromArray(color.array, colorIdx)\r\n        if (twoCCylinder) {\r\n          twoCCylinder.setColors(colorStart, colorEnd)\r\n          geo = twoCCylinder\r\n        }\r\n      } else {\r\n        // has one color per cylinder\r\n        colorStart.fromArray(color.array, colorIdx)\r\n        oneCCylinder.setColors(colorStart)\r\n        geo = oneCCylinder\r\n      }\r\n      // add instance to the model\r\n      this._getCylinderInstanceMatrix(mesh.geometry, instanceIndex, instMatrix)\r\n      objMatrix.multiplyMatrices(matrix, instMatrix)\r\n      model.addInstance(objMatrix, geo)\r\n    }\r\n    const material = this._collectMaterialInfo(mesh)\r\n    this._addToPool(model, material)\r\n  }\r\n\r\n  /**\r\n   * Adding model to pool of models or extend existing ones\r\n   * @param {object} model - model to add\r\n   * @param {object} material - material to add\r\n   */\r\n  _addToPool(model, material) {\r\n    const materialIdx = this._checkExistingMaterial(material)\r\n    if (materialIdx < 0) {\r\n      // new model-material pair\r\n      this._models.push([model])\r\n      this._materials.push(material)\r\n    } else {\r\n      // add model to existing model-material pair\r\n      const models = this._models[materialIdx]\r\n      models.push(model)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checking if given material already was registered in materials pool (no need to create new one)\r\n   * @param {object} material - given material\r\n   * @returns {number} number of model-material pair\r\n   */\r\n  _checkExistingMaterial(material) {\r\n    return findIndex(this._materials, (m) => isEqual(m, material))\r\n  }\r\n\r\n  _gatherCylindersColoringInfo(geo) {\r\n    const instCount = geo.instanceCount\r\n    const color1 = geo.attributes.color.array\r\n    const color2 = geo.attributes.color2.array\r\n    const stride = geo.attributes.color.itemSize\r\n    const is2Colored = new Array(instCount)\r\n    // analyze color instance attributes\r\n    let needToSplit = 0\r\n    let colIdx = 0\r\n    for (let i = 0; i < instCount; i++, colIdx += stride) {\r\n      const differs =\r\n        Math.abs(color1[colIdx] - color2[colIdx]) > 0.0000001 || // compare ending colors\r\n        Math.abs(color1[colIdx + 1] - color2[colIdx + 1]) > 0.0000001 ||\r\n        Math.abs(color1[colIdx + 2] - color2[colIdx + 2]) > 0.0000001\r\n      is2Colored[i] = differs\r\n      needToSplit += differs // count number of 2-colored cylinders\r\n    }\r\n    // calc number of vertices to add into 2-colored\r\n    const geoParams = geo.getGeoParams()\r\n    const addPerCylinder = geoParams.radialSegments\r\n    return { is2Colored, needToSplit, addPerCylinder }\r\n  }\r\n\r\n  /**\r\n   * Collect instanced models and materials.\r\n   * @param {object} mesh - given mesh with instanced something (spheres or cylinders)\r\n   */\r\n  _collectInstancedGeoInfo(mesh) {\r\n    if (mesh.geometry instanceof InstancedSpheresGeometry) {\r\n      this._collectSpheresInfo(mesh)\r\n    } else if (mesh.geometry instanceof Instanced2CCylindersGeometry) {\r\n      this._collectCylindersInfo(mesh)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect Material info from given mesh.\r\n   * @param {object} mesh - given mesh with material info\r\n   * @returns {object} material\r\n   */\r\n  _collectMaterialInfo(mesh) {\r\n    const { uberOptions } = mesh.material\r\n    return {\r\n      diffuse: uberOptions.diffuse.toArray(),\r\n      opacity: uberOptions.opacity,\r\n      shininess: uberOptions.shininess,\r\n      specular: uberOptions.specular.toArray()\r\n    }\r\n  }\r\n\r\n  _getCylinderInstanceMatrix(geo, instIdx, matrix) {\r\n    const matVector1 = geo.attributes.matVector1.array\r\n    const matVector2 = geo.attributes.matVector2.array\r\n    const matVector3 = geo.attributes.matVector3.array\r\n    const idxOffset = instIdx * 4 // used 4 because offset arrays are stored in quads\r\n    matrix.set(\r\n      matVector1[idxOffset],\r\n      matVector1[idxOffset + 1],\r\n      matVector1[idxOffset + 2],\r\n      matVector1[idxOffset + 3],\r\n      matVector2[idxOffset],\r\n      matVector2[idxOffset + 1],\r\n      matVector2[idxOffset + 2],\r\n      matVector2[idxOffset + 3],\r\n      matVector3[idxOffset],\r\n      matVector3[idxOffset + 1],\r\n      matVector3[idxOffset + 2],\r\n      matVector3[idxOffset + 3],\r\n      0,\r\n      0,\r\n      0,\r\n      1\r\n    )\r\n  }\r\n\r\n  _getSphereInstanceMatrix(geo, instIdx, matrix) {\r\n    const { offset } = geo.attributes\r\n    const idx = instIdx * offset.itemSize\r\n    const x = offset.array[idx]\r\n    const y = offset.array[idx + 1]\r\n    const z = offset.array[idx + 2]\r\n    const scale = offset.array[idx + 3]\r\n    matrix.set(scale, 0, 0, x, 0, scale, 0, y, 0, 0, scale, z, 0, 0, 0, 1)\r\n  }\r\n}\r\n",
		"// Forming default definitions block\r\nconst defaultDefinitions = `\r\nDefinitions:  {\r\n  Version: 100\r\n  Count: 3\r\n  ObjectType: \"Model\" {\r\n    Count: 1\r\n  }\r\n  ObjectType: \"Geometry\" {\r\n    Count: 1\r\n  }\r\n  ObjectType: \"Material\" {\r\n    Count: 1\r\n  }\r\n  ObjectType: \"Pose\" {\r\n    Count: 1\r\n  }\r\n  ObjectType: \"GlobalSettings\" {\r\n    Count: 1\r\n  }\r\n} `\r\n\r\n// Default model properties\r\nconst defaultProperties = `Properties60: {\r\n      Property: \"QuaternionInterpolate\", \"bool\", \"\",0\r\n      Property: \"Visibility\", \"Visibility\", \"A\",1\r\n      Property: \"Lcl Translation\", \"Lcl Translation\", \"A\",0.000000000000000,0.000000000000000,-1789.238037109375000\r\n      Property: \"Lcl Rotation\", \"Lcl Rotation\", \"A\",0.000009334667643,-0.000000000000000,0.000000000000000\r\n      Property: \"Lcl Scaling\", \"Lcl Scaling\", \"A\",1.000000000000000,1.000000000000000,1.000000000000000\r\n      Property: \"RotationOffset\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"RotationPivot\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"ScalingOffset\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"ScalingPivot\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"TranslationActive\", \"bool\", \"\",0\r\n      Property: \"TranslationMin\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"TranslationMax\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"TranslationMinX\", \"bool\", \"\",0\r\n      Property: \"TranslationMinY\", \"bool\", \"\",0\r\n      Property: \"TranslationMinZ\", \"bool\", \"\",0\r\n      Property: \"TranslationMaxX\", \"bool\", \"\",0\r\n      Property: \"TranslationMaxY\", \"bool\", \"\",0\r\n      Property: \"TranslationMaxZ\", \"bool\", \"\",0\r\n      Property: \"RotationOrder\", \"enum\", \"\",0\r\n      Property: \"RotationSpaceForLimitOnly\", \"bool\", \"\",0\r\n      Property: \"AxisLen\", \"double\", \"\",10\r\n      Property: \"PreRotation\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"PostRotation\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"RotationActive\", \"bool\", \"\",0\r\n      Property: \"RotationMin\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"RotationMax\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"RotationMinX\", \"bool\", \"\",0\r\n      Property: \"RotationMinY\", \"bool\", \"\",0\r\n      Property: \"RotationMinZ\", \"bool\", \"\",0\r\n      Property: \"RotationMaxX\", \"bool\", \"\",0\r\n      Property: \"RotationMaxY\", \"bool\", \"\",0\r\n      Property: \"RotationMaxZ\", \"bool\", \"\",0\r\n      Property: \"RotationStiffnessX\", \"double\", \"\",0\r\n      Property: \"RotationStiffnessY\", \"double\", \"\",0\r\n      Property: \"RotationStiffnessZ\", \"double\", \"\",0\r\n      Property: \"MinDampRangeX\", \"double\", \"\",0\r\n      Property: \"MinDampRangeY\", \"double\", \"\",0\r\n      Property: \"MinDampRangeZ\", \"double\", \"\",0\r\n      Property: \"MaxDampRangeX\", \"double\", \"\",0\r\n      Property: \"MaxDampRangeY\", \"double\", \"\",0\r\n      Property: \"MaxDampRangeZ\", \"double\", \"\",0\r\n      Property: \"MinDampStrengthX\", \"double\", \"\",0\r\n      Property: \"MinDampStrengthY\", \"double\", \"\",0\r\n      Property: \"MinDampStrengthZ\", \"double\", \"\",0\r\n      Property: \"MaxDampStrengthX\", \"double\", \"\",0\r\n      Property: \"MaxDampStrengthY\", \"double\", \"\",0\r\n      Property: \"MaxDampStrengthZ\", \"double\", \"\",0\r\n      Property: \"PreferedAngleX\", \"double\", \"\",0\r\n      Property: \"PreferedAngleY\", \"double\", \"\",0\r\n      Property: \"PreferedAngleZ\", \"double\", \"\",0\r\n      Property: \"InheritType\", \"enum\", \"\",0\r\n      Property: \"ScalingActive\", \"bool\", \"\",0\r\n      Property: \"ScalingMin\", \"Vector3D\", \"\",1,1,1\r\n      Property: \"ScalingMax\", \"Vector3D\", \"\",1,1,1\r\n      Property: \"ScalingMinX\", \"bool\", \"\",0\r\n      Property: \"ScalingMinY\", \"bool\", \"\",0\r\n      Property: \"ScalingMinZ\", \"bool\", \"\",0\r\n      Property: \"ScalingMaxX\", \"bool\", \"\",0\r\n      Property: \"ScalingMaxY\", \"bool\", \"\",0\r\n      Property: \"ScalingMaxZ\", \"bool\", \"\",0\r\n      Property: \"GeometricTranslation\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"GeometricRotation\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"GeometricScaling\", \"Vector3D\", \"\",1,1,1\r\n      Property: \"LookAtProperty\", \"object\", \"\"\r\n      Property: \"UpVectorProperty\", \"object\", \"\"\r\n      Property: \"Show\", \"bool\", \"\",1\r\n      Property: \"NegativePercentShapeSupport\", \"bool\", \"\",1\r\n      Property: \"DefaultAttributeIndex\", \"int\", \"\",0\r\n      Property: \"Color\", \"Color\", \"A+\",0,0,0\r\n      Property: \"Size\", \"double\", \"\",100\r\n      Property: \"Look\", \"enum\", \"\",1\r\n    }`\r\n\r\n// Default materials layer\r\nconst defaultMaterialLayer = `\r\n    LayerElementMaterial: 0 {\r\n      Version: 101\r\n      Name: \"\"\r\n      MappingInformationType: \"AllSame\"\r\n      ReferenceInformationType: \"Direct\"\r\n      Materials: 0\r\n    }`\r\n\r\n// Default layers block\r\nconst defaultLayerBlock = `\r\n    Layer: 0 {\r\n      Version: 100\r\n      LayerElement:  {\r\n        Type: \"LayerElementNormal\"\r\n        TypedIndex: 0\r\n      }\r\n      LayerElement:  {\r\n        Type: \"LayerElementColor\"\r\n        TypedIndex: 0\r\n      }\r\n      LayerElement:  {\r\n        Type: \"LayerElementMaterial\"\r\n        TypedIndex: 0\r\n      }\r\n    }`\r\n\r\n/**\r\n * globalSettings info in output file.\r\n */\r\nconst globalSettings = `GlobalSettings: {\r\n    Version: 1000\r\n    Properties60:  {\r\n      Property: \"UpAxis\", \"int\", \"\",1\r\n      Property: \"UpAxisSign\", \"int\", \"\",1\r\n      Property: \"FrontAxis\", \"int\", \"\",2\r\n      Property: \"FrontAxisSign\", \"int\", \"\",1\r\n      Property: \"CoordAxis\", \"int\", \"\",0\r\n      Property: \"CoordAxisSign\", \"int\", \"\",1\r\n      Property: \"UnitScaleFactor\", \"double\", \"\",1\r\n    }\r\n  }`\r\n\r\nexport default class FBXResult {\r\n  constructor() {\r\n    this._resultArray = []\r\n    this._info = null\r\n  }\r\n\r\n  getResult(info) {\r\n    this._info = info\r\n    this._resultArray.push(this._writeHeader())\r\n    this._resultArray.push(this._writeDefinitions())\r\n    this._resultArray.push(this._writeObjects(info.models, info.materials))\r\n    this._resultArray.push(this._writeRelations())\r\n    this._resultArray.push(this._writeConnections()) // connections between models and materials)\r\n    this._info = null\r\n    return this._resultArray.join('')\r\n  }\r\n\r\n  /**\r\n   * Add FBXHeader info to output file.\r\n   * Some fields are really confusing, but it seems that all listed fields are very informative\r\n   */\r\n  _writeHeader() {\r\n    const FBXHeaderVersion = 1003 // 1003 is some number which appears to present in many 6.1 ASCII files\r\n    const FBXVersion = 6100 // Mandatory and only supported version\r\n    const date = new Date()\r\n    const timeStampVersion = 1000\r\n    const creator = `Miew FBX Exporter v${this._info.version}` // Supposed to be an engine\r\n\r\n    return `; FBX 6.1.0 project file\r\n; Created by ${creator} Copyright (c) 2015-2020 EPAM Systems, Inc.\r\n; For support please contact miew@epam.com\r\n; ----------------------------------------------------\r\n\r\nFBXHeaderExtension:  {\r\n  FBXHeaderVersion: ${FBXHeaderVersion}\r\n  FBXVersion: ${FBXVersion}\r\n  CreationTimeStamp:  {\r\n    Version: ${timeStampVersion}\r\n    Year: ${date.getFullYear()}\r\n    Month: ${date.getMonth() + 1} \r\n    Day: ${date.getDate()}\r\n    Hour: ${date.getHours()}\r\n    Minute: ${date.getMinutes()}\r\n    Second: ${date.getSeconds()}\r\n    Millisecond: ${date.getMilliseconds()}\r\n  }\r\n  Creator: \"${creator}\"\r\n  OtherFlags:  {\r\n    FlagPLE: 0\r\n  }\r\n}\r\nCreationTime: \"${date}\"\r\nCreator: \"${creator}\"  \r\n`\r\n  }\r\n\r\n  /**\r\n   * Add Definitions info to output file.\r\n   * Not exactly sure if this section is template section (as it is in 7.4+) or it should every time be like this\r\n   */\r\n  _writeDefinitions() {\r\n    return `\r\n; Object definitions\r\n;------------------------------------------------------------------\r\n\r\n${defaultDefinitions}\r\n`\r\n  }\r\n\r\n  /**\r\n   * Adding gathered information about Models to resulting string.\r\n   * Reminder - there may be more then 1 model in scene, but we must place materials after ALL models.\r\n   * @returns {string} string containing all models (vertices, indices, colors, normals etc)\r\n   */\r\n  _models() {\r\n    const modelVersion = 232\r\n    let allModels = ''\r\n    const { models } = this._info\r\n    for (let i = 0; i < models.length; ++i) {\r\n      const model = models[i]\r\n      const vertCount = model.verticesCount\r\n      allModels += `\r\n  Model: \"Model::${this._info.name}_${i}\", \"Mesh\" {\r\n    Version: ${modelVersion} \r\n    ${defaultProperties}\r\n    ${this._verticesIndices(model.positions, model.indices)}\r\n    ${this._normalLayer(model.normals)} \r\n    ${this._colorLayer(model.colors, vertCount)} \r\n    ${defaultMaterialLayer}  \r\n    ${defaultLayerBlock}\r\n  }`\r\n    }\r\n    return allModels\r\n  }\r\n\r\n  /**\r\n   * Add Material info to result\r\n   */\r\n  _materials() {\r\n    const materialVersion = 102\r\n    let allMaterials = ''\r\n    const { materials } = this._info\r\n    for (let i = 0; i < materials.length; ++i) {\r\n      const material = materials[i]\r\n      allMaterials += `\r\n  Material: \"Material::${this._info.name}_${i}_default\", \"\" {\r\n    Version: ${materialVersion}\r\n    ShadingModel: \"lambert\"\r\n    MultiLayer: 0\r\n    ${this._materialProperties(material)}\r\n  }`\r\n    }\r\n    return allMaterials\r\n  }\r\n\r\n  /**\r\n   * Add Objects info to output file.\r\n   */\r\n  _writeObjects() {\r\n    return `\r\n; Object properties\r\n;------------------------------------------------------------------\r\n\r\nObjects:  {\r\n  ${this._models()}\r\n  ${this._materials()}\r\n  ${globalSettings}\r\n}\r\n`\r\n  }\r\n\r\n  /**\r\n   * Add Relations info to output file.\r\n   */\r\n  _writeRelations() {\r\n    let modelsList = ''\r\n    for (let i = 0; i < this._info.models.length; ++i) {\r\n      modelsList += `\r\n  Model: \"Model::${this._info.name}_${i}\", \"Mesh\" {\r\n  }`\r\n    }\r\n    let materialList = ''\r\n    for (let i = 0; i < this._info.materials.length; ++i) {\r\n      materialList += `\r\n  Material: \"Material::${this._info.name}_${i}_default\", \"\" {\r\n  }`\r\n    }\r\n\r\n    return `\r\n; Object relations\r\n;------------------------------------------------------------------\r\n\r\nRelations:  {\r\n  ${modelsList}\r\n  Model: \"Model::Producer Perspective\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Top\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Bottom\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Front\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Back\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Right\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Left\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Camera Switcher\", \"CameraSwitcher\" {\r\n  }\r\n  ${materialList}\r\n}`\r\n  }\r\n\r\n  /**\r\n   * Add Connections info to output file.\r\n   */\r\n  _writeConnections() {\r\n    let modelsList = ''\r\n    const { name } = this._info\r\n    for (let i = 0; i < this._info.models.length; ++i) {\r\n      modelsList += `\r\n  Connect: \"OO\", \"Model::${name}_${i}\", \"Model::Scene\"`\r\n    }\r\n\r\n    let materialList = ''\r\n    for (let i = 0; i < this._info.materials.length; ++i) {\r\n      materialList += `\r\n  Connect: \"OO\", \"Material::${name}_${i}_default\", \"Model::${name}_${i}\"`\r\n    }\r\n\r\n    return `\r\n; Object connections\r\n;------------------------------------------------------------------\r\n\r\nConnections:  {\r\n  ${modelsList}\r\n  ${materialList}\r\n}`\r\n  }\r\n\r\n  /**\r\n   * Write float array to string with limited precision\r\n   * @param {Float32Array} array - array to be fixed\r\n   * @returns {String} String with fixed floats\r\n   */\r\n  _floatArrayToString(array) {\r\n    const str = []\r\n    for (let i = 0; i < array.length; ++i) {\r\n      str[i] = array[i].toFixed(6)\r\n    }\r\n    return str.join(',')\r\n  }\r\n\r\n  /**\r\n   * Adding color layer to resulting file\r\n   * @param {Float32Array} colorArray attribute\r\n   * @param {number} vertCount - number of vertices in the model\r\n   * @returns {string} color layer info\r\n   */\r\n  _colorLayer(colorArray, vertCount) {\r\n    const layerElementColorNumber = 0\r\n    const layerElementColorVersion = 101\r\n    const layerElementColorName = ''\r\n    const colorsStr = this._floatArrayToString(colorArray)\r\n    // Mapping Information type and Reference Information type are mandatory for our Miew! Must not be changed\r\n    // As said [..Array(...)] - fastest and easiest way to produce [0, 1, .....] array\r\n    const colorIndices = [...Array(vertCount).keys()]\r\n    return `\r\n    LayerElementColor: ${layerElementColorNumber} {\r\n      Version: ${layerElementColorVersion}\r\n      Name: \"${layerElementColorName}\"\r\n      MappingInformationType: \"ByVertice\"\r\n      ReferenceInformationType: \"Direct\"\r\n      Colors: ${colorsStr}\r\n      ColorIndex: ${colorIndices}\r\n    }`\r\n  }\r\n\r\n  /**\r\n   * Adding normal layer to resulting file\r\n   * @param {Float32Array} normalArray attribute\r\n   * @returns {string} normal layer info\r\n   */\r\n  _normalLayer(normalArray) {\r\n    const layerElementNormalNumber = 0\r\n    const layerElementNormalVersion = 101\r\n    const layerElementNormalName = ''\r\n    const normalsStr = this._floatArrayToString(normalArray)\r\n    // Mapping Information type and Reference Information type are mandatory for our Miew! Must not be changed\r\n    return `\r\n    LayerElementNormal: ${layerElementNormalNumber} {\r\n      Version: ${layerElementNormalVersion}\r\n      Name: \"${layerElementNormalName}\"\r\n      MappingInformationType: \"ByVertice\"\r\n      ReferenceInformationType: \"Direct\" \r\n      Normals: ${normalsStr}\r\n    }`\r\n  }\r\n\r\n  /**\r\n   * Adding vertices and indices to resulting string\r\n   * @return {string} resulting string in FBX notation\r\n   */\r\n  _verticesIndices(positions, indices) {\r\n    const multiLayer = 0\r\n    const multiTake = 1\r\n    const shading = 'Y'\r\n    const culling = 'CullingOff'\r\n    const geometryVersion = 124\r\n    const vertStr = this._floatArrayToString(positions)\r\n    /* About _correctArrayNotation: Float32Arrays will contains only Float32 numbers, which implies that it will be floating points with 17 numbers after point.\r\n     * We cannot (and it's logically incorrect) save all this information, so we convert this Float32Array into Array-like object with numbers with only 6 numbers after point\r\n     * Reminder - this is big memory loss (as we must save at one moment two arrays with similar information) */\r\n    return `MultiLayer: ${multiLayer}\r\n    MultiTake: ${multiTake}\r\n    Shading: ${shading}\r\n    Culling: \"${culling}\"\r\n    Vertices: ${vertStr}\r\n    PolygonVertexIndex: ${indices}\r\n    GeometryVersion: ${geometryVersion}`\r\n  }\r\n\r\n  /**\r\n   * Forming material properties block.\r\n   * @param {Object} material - given material of model\r\n   * @returns {String} material properties string\r\n   */\r\n  _materialProperties(material) {\r\n    return `Properties60:  {\r\n      Property: \"ShadingModel\", \"KString\", \"\", \"Lambert\"\r\n      Property: \"MultiLayer\", \"bool\", \"\",0\r\n      Property: \"EmissiveColor\", \"ColorRGB\", \"\",0,0,0\r\n      Property: \"EmissiveFactor\", \"double\", \"\",0.0000\r\n      Property: \"AmbientColor\", \"ColorRGB\", \"\",1,1,1\r\n      Property: \"AmbientFactor\", \"double\", \"\",0.0000\r\n      Property: \"DiffuseColor\", \"ColorRGB\", \"\",${material.diffuse}\r\n      Property: \"DiffuseFactor\", \"double\", \"\",1.0000\r\n      Property: \"Bump\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"TransparentColor\", \"ColorRGB\", \"\",1,1,1\r\n      Property: \"TransparencyFactor\", \"double\", \"\",0.0000\r\n      Property: \"SpecularColor\", \"ColorRGB\", \"\",${material.specular}\r\n      Property: \"SpecularFactor\", \"double\", \"\",1.0000\r\n      Property: \"ShininessExponent\", \"double\", \"\",${material.shininess}\r\n      Property: \"ReflectionColor\", \"ColorRGB\", \"\",0,0,0\r\n      Property: \"ReflectionFactor\", \"double\", \"\",1\r\n      Property: \"Ambient\", \"ColorRGB\", \"\",1,1,1\r\n      Property: \"Diffuse\", \"ColorRGB\", \"\",${material.diffuse}\r\n      Property: \"Specular\", \"ColorRGB\", \"\",${material.specular}\r\n      Property: \"Shininess\", \"double\", \"\",${material.shininess}\r\n      Property: \"Opacity\", \"double\", \"\",${material.opacity}\r\n      Property: \"Reflectivity\", \"double\", \"\",0\r\n    }`\r\n  }\r\n}\r\n",
		"import Exporter from './Exporter'\r\nimport FBXInfoExtractor from './fbx/FBXInfoExtractor'\r\nimport FBXResult from './fbx/FBXResult'\r\nimport ComplexVisual from '../../ComplexVisual'\r\n\r\nexport default class FBXExporter extends Exporter {\r\n  constructor(source, options) {\r\n    super(source, options)\r\n    // Data\r\n    this._data = source\r\n    this._version = options.miewVersion || '0.0-UNSPECIFIED'\r\n    this._extractor = new FBXInfoExtractor()\r\n  }\r\n\r\n  /**\r\n   * Entry point to exporter.\r\n   */\r\n  exportSync() {\r\n    // Creating mandatory blocks\r\n    const result = new FBXResult()\r\n    if (!this._source) {\r\n      return this._result\r\n    }\r\n\r\n    const info = this._extractor.process(this._data)\r\n    info.version = this._version\r\n    this._result = result.getResult(info)\r\n    return this._result\r\n  }\r\n}\r\n\r\nFBXExporter.formats = ['fbx']\r\nFBXExporter.SourceClass = ComplexVisual\r\n",
		"import ExporterList from './exporters/ExporterList'\r\n\r\nimport PDBExporter from './exporters/PDBExporter'\r\nimport FBXExporter from './exporters/FBXExporter'\r\n\r\nexport default new ExporterList([PDBExporter, FBXExporter])\r\n",
		"import loaders from './loaders'\r\nimport parsers from './parsers'\r\nimport exporters from './exporters'\r\n\r\nexport default {\r\n  loaders,\r\n  parsers,\r\n  exporters\r\n}\r\n",
		"/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nimport CSS2DObject from './CSS2DObject'\r\nimport { Matrix4, Vector3, Color, MathUtils } from 'three'\r\n\r\nconst tempColor = new Color()\r\n\r\nclass CSS2DRenderer {\r\n  constructor() {\r\n    this._width = 0\r\n    this._height = 0\r\n    this._widthHalf = 0\r\n    this._heightHalf = 0\r\n\r\n    this._vector = new Vector3()\r\n    this._viewMatrix = new Matrix4()\r\n    this._projectionMatrix = new Matrix4()\r\n\r\n    this._domElement = document.createElement('div')\r\n    this._domElement.style.overflow = 'hidden'\r\n    this._domElement.style.position = 'absolute'\r\n    this._domElement.style.top = '0'\r\n    this._domElement.style.zIndex = '0' // start a new Stacking Context to enclose all z-ordered children\r\n    this._domElement.style.pointerEvents = 'none'\r\n  }\r\n\r\n  getElement() {\r\n    return this._domElement\r\n  }\r\n\r\n  reset() {\r\n    const myNode = this.getElement()\r\n    while (myNode.firstChild) {\r\n      myNode.removeChild(myNode.firstChild)\r\n    }\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this._width = width\r\n    this._height = height\r\n\r\n    this._widthHalf = this._width / 2\r\n    this._heightHalf = this._height / 2\r\n\r\n    this._domElement.style.width = `${width}px`\r\n    this._domElement.style.height = `${height}px`\r\n  }\r\n\r\n  _renderObject(object, camera, scene) {\r\n    function lerpColorAsHex(a, b, t) {\r\n      tempColor.setHex(a)\r\n      tempColor.lerp(b, t)\r\n      return `#${tempColor.getHexString()}`\r\n    }\r\n\r\n    function colorAsHex(a) {\r\n      tempColor.setHex(a)\r\n      return `#${tempColor.getHexString()}`\r\n    }\r\n\r\n    if (object instanceof CSS2DObject) {\r\n      this._vector.setFromMatrixPosition(object.matrixWorld)\r\n\r\n      if (\r\n        object.userData !== undefined &&\r\n        object.userData.offset !== undefined\r\n      ) {\r\n        const localOffset = new Vector3(\r\n          object.userData.offset.x,\r\n          object.userData.offset.y,\r\n          0\r\n        )\r\n        this._vector.add(\r\n          localOffset.multiplyScalar(object.matrixWorld.getMaxScaleOnAxis())\r\n        )\r\n      }\r\n\r\n      this._vector.applyMatrix4(this._viewMatrix)\r\n\r\n      const visibility = this._vector.z > -camera.near ? 'hidden' : 'visible'\r\n      const zIndex =\r\n        (10000 * (camera.far - -this._vector.z)) / (camera.far - camera.near)\r\n\r\n      const element = object.getElement()\r\n      if (typeof scene.fog === 'undefined') {\r\n        element.style.color = colorAsHex(object.userData.color)\r\n        if (object.userData.background !== 'transparent') {\r\n          element.style.background = colorAsHex(object.userData.background)\r\n        }\r\n      } else {\r\n        const fogFactor = MathUtils.smoothstep(\r\n          -this._vector.z,\r\n          scene.fog.near,\r\n          scene.fog.far\r\n        )\r\n        element.style.color = lerpColorAsHex(\r\n          object.userData.color,\r\n          scene.fog.color,\r\n          fogFactor\r\n        )\r\n        if (object.userData.background !== 'transparent') {\r\n          element.style.background = lerpColorAsHex(\r\n            object.userData.background,\r\n            scene.fog.color,\r\n            fogFactor\r\n          )\r\n        }\r\n      }\r\n\r\n      this._vector.applyMatrix4(this._projectionMatrix)\r\n\r\n      const style = `${\r\n        object.userData !== {}\r\n          ? object.userData.translation\r\n          : 'translate(-50%, -50%) '\r\n      }translate(${this._vector.x * this._widthHalf + this._widthHalf}px,${\r\n        -this._vector.y * this._heightHalf + this._heightHalf\r\n      }px)`\r\n      element.style.visibility = visibility\r\n      element.style.WebkitTransform = style\r\n      element.style.MozTransform = style\r\n      element.style.oTransform = style\r\n      element.style.transform = style\r\n      element.style.zIndex = Number(zIndex).toFixed(0)\r\n\r\n      if (element.parentNode !== this._domElement) {\r\n        this._domElement.appendChild(element)\r\n      }\r\n    }\r\n\r\n    for (let i = 0, l = object.children.length; i < l; i++) {\r\n      this._renderObject(object.children[i], camera, scene)\r\n    }\r\n  }\r\n\r\n  render(scene, camera) {\r\n    scene.updateMatrixWorld()\r\n\r\n    if (camera.parent === null) {\r\n      camera.updateMatrixWorld()\r\n    }\r\n\r\n    camera.matrixWorldInverse.copy(camera.matrixWorld).invert()\r\n\r\n    this._viewMatrix.copy(camera.matrixWorldInverse)\r\n    this._projectionMatrix.copy(camera.projectionMatrix)\r\n\r\n    this._renderObject(scene, camera, scene)\r\n  }\r\n}\r\nexport default CSS2DRenderer\r\n",
		"import Timer from '../Timer'\r\nimport settings from '../settings'\r\nimport EventDispatcher from '../utils/EventDispatcher'\r\nimport { Matrix4, Quaternion, Vector2, Vector3 } from 'three'\r\n\r\nconst VK_LEFT = 37\r\nconst VK_UP = 38\r\nconst VK_RIGHT = 39\r\nconst VK_DOWN = 40\r\n\r\nconst STATE = {\r\n  NONE: -1,\r\n  ROTATE: 0,\r\n  TRANSLATE: 1,\r\n  SCALE: 2,\r\n  TRANSLATE_PIVOT: 3\r\n}\r\n\r\n// pausing for this amount of time before releasing mouse button prevents inertial rotation (seconds)\r\nconst FULL_STOP_THRESHOLD = 0.1\r\n\r\nconst quaternion = new Quaternion()\r\nconst matrix4 = new Matrix4()\r\n\r\n// pivot -- local offset of the rotation pivot point\r\nfunction ObjectHandler(objects, camera, pivot, options) {\r\n  this.objects = objects\r\n  ;[this.object] = objects\r\n  this.camera = camera\r\n  this.pivot = pivot\r\n  this.axis = new Vector3(0, 0, 1)\r\n  this.options = options\r\n\r\n  this.lastRotation = {\r\n    axis: new Vector3(),\r\n    angle: 0.0\r\n  }\r\n}\r\n\r\nObjectHandler.prototype._rotate = (function () {\r\n  const p = new Vector3()\r\n  const q = new Quaternion()\r\n  const s = new Vector3()\r\n\r\n  const m = new Matrix4()\r\n\r\n  return function (quat) {\r\n    const zeroPivot =\r\n      this.pivot.x === 0.0 && this.pivot.y === 0.0 && this.pivot.z === 0.0\r\n\r\n    m.copy(this.object.matrix)\r\n\r\n    if (zeroPivot) {\r\n      m.multiply(matrix4.makeRotationFromQuaternion(quat))\r\n    } else {\r\n      m.multiply(\r\n        matrix4.makeTranslation(this.pivot.x, this.pivot.y, this.pivot.z)\r\n      )\r\n      m.multiply(matrix4.makeRotationFromQuaternion(quat))\r\n      m.multiply(\r\n        matrix4.makeTranslation(-this.pivot.x, -this.pivot.y, -this.pivot.z)\r\n      )\r\n    }\r\n\r\n    m.decompose(p, q, s)\r\n\r\n    // update objects\r\n    if (!zeroPivot) {\r\n      for (let i = 0; i < this.objects.length; ++i) {\r\n        this.objects[i].position.copy(p)\r\n      }\r\n    }\r\n\r\n    for (let j = 0; j < this.objects.length; ++j) {\r\n      this.objects[j].quaternion.copy(q)\r\n      this.objects[j].updateMatrix()\r\n    }\r\n  }\r\n})()\r\n\r\nObjectHandler.prototype.setObjects = function (objects) {\r\n  this.objects = objects\r\n  ;[this.object] = objects\r\n}\r\n\r\nObjectHandler.prototype.rotate = (function () {\r\n  const rot = {\r\n    axis: new Vector3(),\r\n    angle: 0.0\r\n  }\r\n\r\n  return function (quat, mousePrevPos, mouseCurPos, aboutAxis) {\r\n    this.mouse2rotation(rot, mousePrevPos, mouseCurPos, aboutAxis)\r\n    quat.setFromAxisAngle(rot.axis, rot.angle)\r\n\r\n    if (rot.angle) {\r\n      this._rotate(quat)\r\n    }\r\n\r\n    this.lastRotation = rot\r\n  }\r\n})()\r\n\r\nObjectHandler.prototype.translate = (function () {\r\n  const dir = new Vector3()\r\n  const pivot = new Vector3()\r\n\r\n  return function (delta) {\r\n    // reverse-project viewport movement to view coords (compensate for screen aspect ratio)\r\n    dir.set(\r\n      delta.x / this.camera.projectionMatrix.elements[0],\r\n      delta.y / this.camera.projectionMatrix.elements[5],\r\n      0\r\n    )\r\n    let dist = dir.length()\r\n    dir.normalize()\r\n\r\n    // transform movement direction to object local coords\r\n    dir.transformDirection(matrix4.copy(this.object.matrixWorld).invert())\r\n\r\n    // visible translate distance shouldn't depend on camera-to-object distance\r\n    pivot.copy(this.pivot)\r\n    this.object.localToWorld(pivot)\r\n    dist *= Math.abs(pivot.z - this.camera.position.z)\r\n\r\n    // visible translate distance shouldn't depend on object scale\r\n    dist /= this.object.matrixWorld.getMaxScaleOnAxis()\r\n\r\n    // all objects are translated similar to principal object\r\n    // (we assume they all have identical pivot and scale)\r\n    for (let i = 0; i < this.objects.length; ++i) {\r\n      this.objects[i].translateOnAxis(dir, dist)\r\n    }\r\n  }\r\n})()\r\n\r\nObjectHandler.prototype.update = (function () {\r\n  const axis = new Vector3()\r\n\r\n  return function (timeSinceLastUpdate, timeSinceMove) {\r\n    if (settings.now.autoRotation !== 0.0) {\r\n      // auto-rotation with constant speed\r\n\r\n      // if rotation axis is fixed or hasn't been defined yet\r\n      if (\r\n        settings.now.autoRotationAxisFixed ||\r\n        this.lastRotation.axis.length() === 0.0\r\n      ) {\r\n        // use Y-axis (transformed to local object coords)\r\n        axis\r\n          .set(0, 1, 0)\r\n          .transformDirection(matrix4.copy(this.object.matrixWorld).invert())\r\n      } else {\r\n        // use axis defined by last user rotation\r\n        axis.copy(this.lastRotation.axis)\r\n      }\r\n\r\n      this._rotate(\r\n        quaternion.setFromAxisAngle(\r\n          axis,\r\n          settings.now.autoRotation * timeSinceLastUpdate\r\n        )\r\n      )\r\n      return true\r\n    }\r\n\r\n    if (this.options.intertia && this.lastRotation.angle) {\r\n      // inertial object rotation\r\n      const angle =\r\n        this.lastRotation.angle *\r\n        (1.0 - this.options.dynamicDampingFactor) ** (40.0 * timeSinceMove)\r\n\r\n      if (Math.abs(angle) <= this.options.intertiaThreshold) {\r\n        this.lastRotation.angle = 0.0\r\n      } else {\r\n        this._rotate(quaternion.setFromAxisAngle(this.lastRotation.axis, angle))\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n})()\r\n\r\nObjectHandler.prototype.stop = function () {\r\n  this.lastRotation.angle = 0.0\r\n}\r\n\r\n// calculate (axis, angle) pair from mouse/touch movement\r\nObjectHandler.prototype.mouse2rotation = (function () {\r\n  const center = new Vector3()\r\n\r\n  const eye = new Vector3()\r\n  const eyeDirection = new Vector3()\r\n\r\n  const cameraUpDirection = new Vector3()\r\n  const cameraSidewaysDirection = new Vector3()\r\n\r\n  const moveDirection = new Vector3()\r\n\r\n  const mouseDelta = new Vector2()\r\n\r\n  return function (rot, mousePrev, mouseCur, aboutAxis) {\r\n    if (aboutAxis) {\r\n      rot.axis.copy(this.axis)\r\n      rot.angle = this.options.axisRotateFactor * (mouseCur.y - mousePrev.y)\r\n\r\n      /* cool method that allows rotation around Z axis to be \"tied\" to mouse cursor\r\n\r\n        res.axis.copy(this.axis);\r\n\r\n        var pivot = this.pivot.clone();\r\n        this.object.localToWorld(pivot);\r\n        pivot.project(this.camera);\r\n\r\n        var v1 = new Vector3(mousePrev.x, mousePrev.y, this.camera.position.z);\r\n        v1.sub(pivot);\r\n        var v2 = new Vector3(mouseCur.x, mouseCur.y, this.camera.position.z);\r\n        v2.sub(pivot);\r\n\r\n        v1.sub(res.axis.clone().multiplyScalar(v1.dot(res.axis)));\r\n        v2.sub(res.axis.clone().multiplyScalar(v2.dot(res.axis)));\r\n\r\n        var abs = v1.length() * v2.length();\r\n        if (abs > 0) {\r\n          res.angle = res.axis.dot(v1.cross(v2)) / abs;\r\n        }\r\n      */\r\n    } else {\r\n      mouseDelta.subVectors(mouseCur, mousePrev)\r\n      const angle = mouseDelta.length()\r\n      if (angle === 0.0) {\r\n        return\r\n      }\r\n\r\n      center.copy(this.pivot)\r\n      this.object.localToWorld(center)\r\n      eye.subVectors(this.camera.position, center)\r\n      eyeDirection.copy(eye).normalize()\r\n\r\n      cameraUpDirection.copy(this.camera.up).normalize()\r\n      cameraSidewaysDirection\r\n        .crossVectors(cameraUpDirection, eyeDirection)\r\n        .normalize()\r\n\r\n      cameraUpDirection.setLength(mouseDelta.y)\r\n      cameraSidewaysDirection.setLength(mouseDelta.x)\r\n\r\n      moveDirection.copy(cameraUpDirection.add(cameraSidewaysDirection))\r\n\r\n      rot.axis.crossVectors(moveDirection, eye)\r\n\r\n      rot.angle = -angle * this.options.rotateFactor\r\n    }\r\n\r\n    rot.axis.transformDirection(matrix4.copy(this.object.matrixWorld).invert())\r\n\r\n    // make sure angle is always positive (thus 'axis' defines both axis and direction of rotation)\r\n    if (rot.angle < 0.0) {\r\n      rot.axis.negate()\r\n      rot.angle = -rot.angle\r\n    }\r\n  }\r\n})()\r\n\r\nfunction ObjectControls(object, objectPivot, camera, domElement, getAltObj) {\r\n  EventDispatcher.call(this)\r\n  const self = this\r\n\r\n  this.object = object\r\n  this.objectPivot = objectPivot\r\n  this.camera = camera\r\n  this.domElement = typeof domElement !== 'undefined' ? domElement : document\r\n  this.getAltObj = getAltObj\r\n\r\n  // API\r\n\r\n  this.enabled = true\r\n  this.hotkeysEnabled = true\r\n\r\n  this.screen = {\r\n    left: 0,\r\n    top: 0,\r\n    width: 0,\r\n    height: 0\r\n  }\r\n\r\n  this.options = {\r\n    rotateFactor: Math.PI, // full screen slide (along short side) would roughly mean 180 deg. rotation\r\n    axisRotateFactor: 4 * Math.PI, // full screen slide (along short side) would roughly mean 720 deg. rotation\r\n    intertia: true,\r\n    dynamicDampingFactor: 0.1,\r\n    intertiaThreshold: 1e-3\r\n  }\r\n\r\n  // internals\r\n\r\n  this._state = STATE.NONE\r\n\r\n  this._mousePrevPos = new Vector2()\r\n  this._mouseCurPos = new Vector2()\r\n\r\n  this._mainObj = new ObjectHandler(\r\n    [this.object],\r\n    this.camera,\r\n    new Vector3(0, 0, 0),\r\n    this.options\r\n  )\r\n  this._altObj = new ObjectHandler(\r\n    [this.object],\r\n    this.camera,\r\n    new Vector3(0, 0, 0),\r\n    this.options\r\n  )\r\n  this._affectedObj = this._mainObj\r\n  this._isAltObjFreeRotationAllowed = true\r\n  this._isTranslationAllowed = true\r\n  this._isKeysTranslatingObj = false\r\n\r\n  this._pressedKeys = []\r\n\r\n  this._clock = new Timer()\r\n  this._clock.start()\r\n  this._lastUpdateTime = this._clock.getElapsedTime()\r\n\r\n  // events\r\n  this._listeners = [\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousedown',\r\n      handler(e) {\r\n        self.mousedown(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mouseup',\r\n      handler(e) {\r\n        self.mouseup(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousemove',\r\n      handler(e) {\r\n        self.mousemove(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousewheel',\r\n      handler(e) {\r\n        self.mousewheel(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'DOMMouseScroll',\r\n      handler(e) {\r\n        self.mousewheel(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mouseout',\r\n      handler(e) {\r\n        self.mouseup(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchstart',\r\n      handler(e) {\r\n        self.touchstartend(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchend',\r\n      handler(e) {\r\n        self.touchstartend(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchmove',\r\n      handler(e) {\r\n        self.touchmove(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.getKeyBindObject(),\r\n      type: 'keydown',\r\n      handler(e) {\r\n        self.keydownup(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.getKeyBindObject(),\r\n      type: 'keyup',\r\n      handler(e) {\r\n        self.keydownup(e)\r\n      }\r\n    },\r\n    {\r\n      obj: window,\r\n      type: 'resize',\r\n      handler() {\r\n        self.handleResize()\r\n      }\r\n    },\r\n    {\r\n      obj: window,\r\n      type: 'blur',\r\n      handler() {\r\n        self.resetKeys()\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'contextmenu',\r\n      handler(e) {\r\n        self.contextmenu(e)\r\n      }\r\n    }\r\n  ]\r\n\r\n  for (let i = 0; i < this._listeners.length; i++) {\r\n    const l = this._listeners[i]\r\n    l.obj.addEventListener(l.type, l.handler)\r\n  }\r\n\r\n  this.handleResize()\r\n\r\n  this.resetKeys()\r\n\r\n  // force an update at start\r\n  this.update()\r\n}\r\n\r\n// methods\r\n\r\nObjectControls.prototype = Object.create(EventDispatcher.prototype)\r\nObjectControls.prototype.constructor = ObjectControls\r\n\r\nObjectControls.prototype.resetKeys = function () {\r\n  this._pressedKeys[VK_LEFT] = false\r\n  this._pressedKeys[VK_UP] = false\r\n  this._pressedKeys[VK_RIGHT] = false\r\n  this._pressedKeys[VK_DOWN] = false\r\n}\r\n\r\nObjectControls.prototype.contextmenu = function (e) {\r\n  e.stopPropagation()\r\n  e.preventDefault()\r\n}\r\n\r\nObjectControls.prototype.handleResize = function () {\r\n  if (this.domElement === document) {\r\n    this.screen.left = 0\r\n    this.screen.top = 0\r\n    this.screen.width = window.innerWidth\r\n    this.screen.height = window.innerHeight\r\n  } else {\r\n    const box = this.domElement.getBoundingClientRect()\r\n    // adjustments come from similar code in the jquery offset() function\r\n    const d = this.domElement.ownerDocument.documentElement\r\n    this.screen.left = box.left + window.pageXOffset - d.clientLeft\r\n    this.screen.top = box.top + window.pageYOffset - d.clientTop\r\n    this.screen.width = box.width\r\n    this.screen.height = box.height\r\n  }\r\n}\r\n\r\nObjectControls.prototype.enable = function (enable) {\r\n  this.enabled = enable\r\n}\r\n\r\nObjectControls.prototype.enableHotkeys = function (enable) {\r\n  this.hotkeysEnabled = enable\r\n}\r\n\r\nObjectControls.prototype.allowTranslation = function (allow) {\r\n  this._isTranslationAllowed = allow\r\n}\r\n\r\nObjectControls.prototype.allowAltObjFreeRotation = function (allow) {\r\n  this._isAltObjFreeRotationAllowed = allow\r\n}\r\n\r\nObjectControls.prototype.keysTranslateObj = function (on) {\r\n  this._isKeysTranslatingObj = on\r\n}\r\n\r\nObjectControls.prototype.isEditingAltObj = function () {\r\n  return (\r\n    (this._state === STATE.ROTATE || this._state === STATE.TRANSLATE) &&\r\n    this._affectedObj === this._altObj\r\n  )\r\n}\r\n\r\n// convert page coords of mouse/touch to uniform coords with smaller side being [-0.5, 0.5]\r\n// (uniform coords keep direct proportion with screen distance travelled by mouse regardless of screen aspect ratio)\r\nObjectControls.prototype.convertMouseToOnCircle = function (\r\n  coords,\r\n  pageX,\r\n  pageY\r\n) {\r\n  const screenSize = Math.min(this.screen.width, this.screen.height)\r\n\r\n  if (screenSize === 0) {\r\n    coords.set(0, 0)\r\n    return\r\n  }\r\n\r\n  coords.set(\r\n    (pageX - this.screen.width * 0.5 - this.screen.left) / screenSize,\r\n    (0.5 * this.screen.height + this.screen.top - pageY) / screenSize\r\n  )\r\n}\r\n\r\n// convert page coords of mouse/touch to viewport coords with both sides being [-1, 1]\r\n// (those are non-uniform coords affected by screen aspect ratio)\r\nObjectControls.prototype.convertMouseToViewport = function (\r\n  coords,\r\n  pageX,\r\n  pageY\r\n) {\r\n  if (this.screen.width === 0 || this.screen.height === 0) {\r\n    coords.set(0, 0)\r\n    return\r\n  }\r\n\r\n  coords.set(\r\n    (2.0 * (pageX - this.screen.width * 0.5 - this.screen.left)) /\r\n      this.screen.width,\r\n    (2.0 * (0.5 * this.screen.height + this.screen.top - pageY)) /\r\n      this.screen.height\r\n  )\r\n}\r\n\r\nObjectControls.prototype.stop = function () {\r\n  this._mainObj.stop()\r\n  this._altObj.stop()\r\n}\r\n\r\n// rotate object based on latest mouse/touch movement\r\nObjectControls.prototype.rotateByMouse = (function () {\r\n  const quat = new Quaternion()\r\n\r\n  return function (aboutZAxis) {\r\n    this._affectedObj.rotate(\r\n      quat,\r\n      this._mousePrevPos,\r\n      this._mouseCurPos,\r\n      aboutZAxis\r\n    )\r\n    this.dispatchEvent({ type: 'change', action: 'rotate', quaternion: quat })\r\n  }\r\n})()\r\n\r\n// rotate object by specified quaternion\r\nObjectControls.prototype.rotate = function (quat) {\r\n  this.object.quaternion.multiply(quat)\r\n  this.dispatchEvent({ type: 'change', action: 'rotate', quaternion: quat })\r\n}\r\n\r\n// get object's orientation\r\nObjectControls.prototype.getOrientation = function () {\r\n  return this.object.quaternion\r\n}\r\n\r\n// set object's orientation\r\nObjectControls.prototype.setOrientation = function (quat) {\r\n  this.object.quaternion.copy(quat)\r\n}\r\n\r\n// translate object based on latest mouse/touch movement\r\nObjectControls.prototype.translate = (function () {\r\n  const delta = new Vector2()\r\n  return function () {\r\n    delta.subVectors(this._mouseCurPos, this._mousePrevPos)\r\n    this._affectedObj.translate(delta)\r\n    this.dispatchEvent({ type: 'change', action: 'translate' })\r\n  }\r\n})()\r\n\r\n// get object scale\r\nObjectControls.prototype.getScale = function () {\r\n  return this.object.scale.x\r\n}\r\n\r\n// set uniform object scale\r\nObjectControls.prototype.setScale = function (scale) {\r\n  this.object.scale.set(scale, scale, scale)\r\n}\r\n\r\n// scale object by factor (factor should be greater than zero)\r\nObjectControls.prototype.scale = function (factor) {\r\n  if (factor <= 0) {\r\n    return\r\n  }\r\n  this.setScale(this.object.scale.x * factor)\r\n  this.dispatchEvent({ type: 'change', action: 'zoom', factor })\r\n}\r\n\r\nObjectControls.prototype.update = (function () {\r\n  const shift = new Vector2()\r\n\r\n  return function () {\r\n    const curTime = this._clock.getElapsedTime()\r\n    const timeSinceLastUpdate = curTime - this._lastUpdateTime\r\n\r\n    // update object handler\r\n    if (this._state === STATE.NONE) {\r\n      const timeSinceMove = curTime - this._lastMouseMoveTime\r\n      if (\r\n        this._mainObj.update(timeSinceLastUpdate, timeSinceMove) ||\r\n        this._altObj.update(timeSinceLastUpdate, timeSinceMove)\r\n      ) {\r\n        this.dispatchEvent({ type: 'change', action: 'auto' })\r\n      }\r\n    }\r\n\r\n    // apply arrow keys\r\n    if (this._isKeysTranslatingObj) {\r\n      const speedX =\r\n        Number(this._pressedKeys[VK_RIGHT]) - Number(this._pressedKeys[VK_LEFT])\r\n      const speedY =\r\n        Number(this._pressedKeys[VK_UP]) - Number(this._pressedKeys[VK_DOWN])\r\n      if (speedX !== 0.0 || speedY !== 0.0) {\r\n        const delta = timeSinceLastUpdate\r\n\r\n        // update object translation\r\n        const altObj = this.getAltObj()\r\n        if (altObj.objects.length > 0) {\r\n          this._altObj.setObjects(altObj.objects)\r\n          this._altObj.pivot = altObj.pivot\r\n\r\n          if ('axis' in altObj) {\r\n            this._altObj.axis = altObj.axis.clone()\r\n          } else {\r\n            this._altObj.axis.set(0, 0, 1)\r\n          }\r\n\r\n          shift.set(delta * speedX, delta * speedY)\r\n          this._altObj.translate(shift)\r\n          this.dispatchEvent({ type: 'change', action: 'translate' })\r\n        }\r\n      }\r\n    }\r\n\r\n    this._lastUpdateTime = curTime\r\n  }\r\n})()\r\n\r\nObjectControls.prototype.reset = function () {\r\n  this._state = STATE.NONE\r\n\r\n  this.object.quaternion.copy(quaternion.set(0, 0, 0, 1))\r\n}\r\n\r\n// listeners\r\n\r\nObjectControls.prototype.mousedown = function (event) {\r\n  if (this.enabled === false || this._state !== STATE.NONE) {\r\n    return\r\n  }\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  if (this._state === STATE.NONE) {\r\n    if (event.button === 0) {\r\n      this._affectedObj.stop() // can edit only one object at a time\r\n\r\n      let workWithAltObj = false\r\n\r\n      if (event.altKey) {\r\n        const altObj = this.getAltObj()\r\n        workWithAltObj = altObj.objects.length > 0\r\n        if (workWithAltObj) {\r\n          this._altObj.setObjects(altObj.objects)\r\n          this._altObj.pivot = altObj.pivot\r\n\r\n          if ('axis' in altObj) {\r\n            this._altObj.axis = altObj.axis.clone()\r\n          } else {\r\n            this._altObj.axis.set(0, 0, 1)\r\n          }\r\n        }\r\n      }\r\n\r\n      this._affectedObj = workWithAltObj ? this._altObj : this._mainObj\r\n\r\n      this._state =\r\n        workWithAltObj && event.ctrlKey && this._isTranslationAllowed\r\n          ? STATE.TRANSLATE\r\n          : STATE.ROTATE\r\n    } else if (event.button === 2) {\r\n      this._state = STATE.TRANSLATE_PIVOT\r\n    }\r\n  }\r\n\r\n  if (this._state === STATE.ROTATE) {\r\n    this.convertMouseToOnCircle(this._mouseCurPos, event.pageX, event.pageY)\r\n    this._mousePrevPos.copy(this._mouseCurPos)\r\n  }\r\n\r\n  if (\r\n    this._state === STATE.TRANSLATE ||\r\n    this._state === STATE.TRANSLATE_PIVOT\r\n  ) {\r\n    this.convertMouseToViewport(this._mouseCurPos, event.pageX, event.pageY)\r\n    this._mousePrevPos.copy(this._mouseCurPos)\r\n  }\r\n}\r\n\r\nObjectControls.prototype.mousemove = function (event) {\r\n  if (this.enabled === false || this._state === STATE.NONE) {\r\n    return\r\n  }\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  switch (this._state) {\r\n    case STATE.ROTATE:\r\n      this._mousePrevPos.copy(this._mouseCurPos)\r\n      this.convertMouseToOnCircle(this._mouseCurPos, event.pageX, event.pageY)\r\n      this.rotateByMouse(\r\n        (event.altKey && !this._isAltObjFreeRotationAllowed) || event.shiftKey\r\n      )\r\n      this._lastMouseMoveTime = this._clock.getElapsedTime()\r\n      break\r\n\r\n    case STATE.TRANSLATE:\r\n      this._mousePrevPos.copy(this._mouseCurPos)\r\n      this.convertMouseToViewport(this._mouseCurPos, event.pageX, event.pageY)\r\n      this.translate()\r\n      break\r\n\r\n    case STATE.TRANSLATE_PIVOT:\r\n      this._mousePrevPos.copy(this._mouseCurPos)\r\n      this.convertMouseToViewport(this._mouseCurPos, event.pageX, event.pageY)\r\n      this.translatePivotByMouse()\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n}\r\n\r\nObjectControls.prototype.mousewheel = function (event) {\r\n  if (\r\n    this.enabled === false ||\r\n    !settings.now.zooming ||\r\n    this._state !== STATE.NONE ||\r\n    event.shiftKey\r\n  ) {\r\n    return\r\n  }\r\n\r\n  event.preventDefault()\r\n\r\n  let delta = 0\r\n\r\n  if (event.wheelDelta) {\r\n    // WebKit / Opera / Explorer 9\r\n    delta = event.wheelDelta / 40\r\n  } else if (event.detail) {\r\n    // Firefox\r\n    delta = -event.detail / 3\r\n  }\r\n\r\n  let factor = 1.0 + delta * 0.05\r\n  factor = Math.max(factor, 0.01)\r\n  this.scale(factor)\r\n}\r\n\r\nObjectControls.prototype.mouseup = function (event) {\r\n  if (this.enabled === false || this._state === STATE.NONE) {\r\n    return\r\n  }\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  this._state = STATE.NONE\r\n\r\n  if (\r\n    this._clock.getElapsedTime() - this._lastMouseMoveTime >\r\n    FULL_STOP_THRESHOLD\r\n  ) {\r\n    this._affectedObj.stop()\r\n  }\r\n}\r\n\r\nObjectControls.prototype.touchstartend = function (event) {\r\n  if (this.enabled === false) {\r\n    return\r\n  }\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  switch (event.touches.length) {\r\n    case 1:\r\n      this._state = STATE.ROTATE\r\n      this.convertMouseToOnCircle(\r\n        this._mouseCurPos,\r\n        event.touches[0].pageX,\r\n        event.touches[0].pageY\r\n      )\r\n      this._mousePrevPos.copy(this._mouseCurPos)\r\n      break\r\n\r\n    case 2: {\r\n      // prevent inertial rotation\r\n      this._mainObj.stop()\r\n      this._altObj.stop()\r\n\r\n      this._state = STATE.SCALE\r\n      const dx = event.touches[0].pageX - event.touches[1].pageX\r\n      const dy = event.touches[0].pageY - event.touches[1].pageY\r\n      this._touchDistanceCur = this._touchDistanceStart = Math.sqrt(\r\n        dx * dx + dy * dy\r\n      )\r\n      this._scaleStart = this.object.scale.x\r\n      break\r\n    }\r\n\r\n    default:\r\n      this._state = STATE.NONE\r\n  }\r\n}\r\n\r\nObjectControls.prototype.touchmove = function (event) {\r\n  if (this.enabled === false || this._state === STATE.NONE) {\r\n    return\r\n  }\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  switch (this._state) {\r\n    case STATE.ROTATE:\r\n      this._mousePrevPos.copy(this._mouseCurPos)\r\n      this.convertMouseToOnCircle(\r\n        this._mouseCurPos,\r\n        event.touches[0].pageX,\r\n        event.touches[0].pageY\r\n      )\r\n      this.rotateByMouse(false)\r\n\r\n      this._lastMouseMoveTime = this._clock.getElapsedTime()\r\n      break\r\n\r\n    case STATE.SCALE:\r\n      if (settings.now.zooming) {\r\n        // update scale\r\n        const dx = event.touches[0].pageX - event.touches[1].pageX\r\n        const dy = event.touches[0].pageY - event.touches[1].pageY\r\n        this._touchDistanceCur = Math.sqrt(dx * dx + dy * dy)\r\n        const newScale =\r\n          (this._scaleStart * this._touchDistanceCur) / this._touchDistanceStart\r\n        const factor = newScale / this.object.scale.x\r\n        this.scale(factor)\r\n      }\r\n      break\r\n\r\n    default:\r\n  }\r\n}\r\n\r\nObjectControls.prototype.keydownup = function (event) {\r\n  if (this.enabled === false || this.hotkeysEnabled === false) {\r\n    return\r\n  }\r\n\r\n  switch (event.keyCode) {\r\n    case VK_LEFT:\r\n    case VK_UP:\r\n    case VK_RIGHT:\r\n    case VK_DOWN:\r\n      this._pressedKeys[event.keyCode] = event.type === 'keydown'\r\n      event.preventDefault()\r\n      event.stopPropagation()\r\n      break\r\n    default:\r\n  }\r\n}\r\n\r\nObjectControls.prototype.getKeyBindObject = function () {\r\n  return window\r\n}\r\n\r\nObjectControls.prototype.dispose = function () {\r\n  for (let i = 0; i < this._listeners.length; i++) {\r\n    const l = this._listeners[i]\r\n    l.obj.removeEventListener(l.type, l.handler)\r\n  }\r\n}\r\n\r\nObjectControls.prototype.translatePivotByMouse = (function () {\r\n  const delta = new Vector2()\r\n  return function () {\r\n    delta.subVectors(this._mouseCurPos, this._mousePrevPos)\r\n    this.translatePivotInWorld(\r\n      settings.now.translationSpeed * delta.x,\r\n      settings.now.translationSpeed * delta.y,\r\n      0\r\n    )\r\n  }\r\n})()\r\n\r\n// Translate in WorldCS, translation is scaled with root scale matrix\r\nObjectControls.prototype.translatePivotInWorld = function (x, y, z) {\r\n  const pos = this.objectPivot.position\r\n  pos.applyMatrix4(this.object.matrixWorld)\r\n  pos.setX(pos.x + x)\r\n  pos.setY(pos.y + y)\r\n  pos.setZ(pos.z + z)\r\n  pos.applyMatrix4(matrix4.copy(this.object.matrixWorld).invert())\r\n\r\n  this.dispatchEvent({ type: 'change', action: 'translatePivot' })\r\n}\r\n\r\n// Translate in ModelCS, x, y, z are Ang\r\nObjectControls.prototype.translatePivot = function (x, y, z) {\r\n  const pos = this.objectPivot.position\r\n  pos.setX(pos.x + x)\r\n  pos.setY(pos.y + y)\r\n  pos.setZ(pos.z + z)\r\n\r\n  this.dispatchEvent({ type: 'change', action: 'translatePivot' })\r\n}\r\n\r\n// Set pivot\r\nObjectControls.prototype.setPivot = function (newPivot) {\r\n  this.objectPivot.position.copy(newPivot)\r\n\r\n  this.dispatchEvent({ type: 'change', action: 'translatePivot' })\r\n}\r\n\r\nexport default ObjectControls\r\n",
		"import settings from '../settings'\r\nimport Timer from '../Timer'\r\nimport EventDispatcher from '../utils/EventDispatcher'\r\nimport { Raycaster, Vector2 } from 'three'\r\n\r\nfunction Picker(gfxObj, camera, domElement) {\r\n  EventDispatcher.call(this)\r\n  const self = this\r\n\r\n  this.gfxObj = gfxObj\r\n  this.camera = camera\r\n  this.domElement = typeof domElement !== 'undefined' ? domElement : document\r\n  this.screen = {\r\n    left: 0,\r\n    top: 0,\r\n    width: 0,\r\n    height: 0\r\n  }\r\n  this._lastMousePos = new Vector2(0, 0)\r\n  this._mouseTotalDist = 0.0\r\n  this._lastClickBeginTime = -1000.0\r\n  this._lastClickPos = new Vector2(0, 0)\r\n  this._clickBeginTime = 0.0\r\n\r\n  this._clock = new Timer()\r\n  this._clock.start()\r\n\r\n  this._listeners = [\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousedown',\r\n      handler(e) {\r\n        self.mousedown(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mouseup',\r\n      handler(e) {\r\n        self.mouseup(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousemove',\r\n      handler(e) {\r\n        self.mousemove(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchstart',\r\n      handler(e) {\r\n        self.touchstart(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchend',\r\n      handler(e) {\r\n        self.touchend(e)\r\n      }\r\n    },\r\n    {\r\n      obj: window,\r\n      type: 'resize',\r\n      handler() {\r\n        self.handleResize()\r\n      }\r\n    }\r\n  ]\r\n\r\n  for (let i = 0; i < this._listeners.length; i++) {\r\n    const l = this._listeners[i]\r\n    l.obj.addEventListener(l.type, l.handler)\r\n  }\r\n\r\n  this.handleResize()\r\n}\r\n\r\nPicker.prototype = Object.create(EventDispatcher.prototype)\r\nPicker.prototype.constructor = Picker\r\n\r\nPicker.prototype.reset = function () {\r\n  this.picked = {}\r\n  this.dispatchEvent({ type: 'newpick', obj: {} })\r\n}\r\n\r\nPicker.prototype.handleResize = function () {\r\n  if (this.domElement === document) {\r\n    this.screen.left = 0\r\n    this.screen.top = 0\r\n    this.screen.width = window.innerWidth\r\n    this.screen.height = window.innerHeight\r\n  } else {\r\n    const box = this.domElement.getBoundingClientRect()\r\n    // adjustments come from similar code in the jquery offset() function\r\n    const d = this.domElement.ownerDocument.documentElement\r\n    this.screen.left = box.left + window.pageXOffset - d.clientLeft\r\n    this.screen.top = box.top + window.pageYOffset - d.clientTop\r\n    this.screen.width = box.width\r\n    this.screen.height = box.height\r\n  }\r\n}\r\n\r\nPicker.prototype.pickObject = function (screenPos) {\r\n  if (!this.gfxObj) {\r\n    this.picked = {}\r\n    this.dispatchEvent({ type: 'newpick', obj: {} })\r\n    return\r\n  }\r\n\r\n  const { gfxObj } = this\r\n  const rayCaster = new Raycaster()\r\n  rayCaster.ray.origin.setFromMatrixPosition(this.camera.matrixWorld)\r\n  rayCaster.ray.direction\r\n    .set(screenPos.x, screenPos.y, 0.5)\r\n    .unproject(this.camera)\r\n    .sub(rayCaster.ray.origin)\r\n    .normalize()\r\n\r\n  const clipPlane =\r\n    settings.now.draft.clipPlane && this.clipPlaneValue\r\n      ? this.clipPlaneValue\r\n      : Infinity\r\n  const fogFarPlane =\r\n    settings.now.fog && this.fogFarValue ? this.fogFarValue : Infinity\r\n  const point = rayCaster.intersectVisibleObject(\r\n    gfxObj,\r\n    this.camera,\r\n    clipPlane,\r\n    fogFarPlane\r\n  )\r\n  if (!point) {\r\n    this.picked = {}\r\n    this.dispatchEvent({ type: 'newpick', obj: {} })\r\n    return\r\n  }\r\n\r\n  let picked = {}\r\n  if (point.residue || point.atom) {\r\n    const residue = point.residue || point.atom.residue\r\n    if (settings.now.pick === 'chain') {\r\n      picked = { chain: residue.getChain() }\r\n    } else if (settings.now.pick === 'molecule') {\r\n      picked = { molecule: residue.getMolecule() }\r\n    } else if (point.residue || settings.now.pick === 'residue') {\r\n      picked = { residue }\r\n    } else if (point.atom) {\r\n      picked = { atom: point.atom }\r\n    }\r\n  }\r\n  this.picked = picked\r\n  this.dispatchEvent({ type: 'newpick', obj: picked })\r\n}\r\n\r\nPicker.prototype.getMouseInViewport = function (pageX, pageY) {\r\n  return new Vector2(\r\n    ((pageX - this.screen.left) / this.screen.width) * 2 - 1,\r\n    (-(pageY - this.screen.top) / this.screen.height) * 2 + 1\r\n  )\r\n}\r\n\r\nPicker.prototype.mousedown = function (event) {\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  if (event.button === 0) {\r\n    this._lastMousePos = this.getMouseInViewport(event.pageX, event.pageY)\r\n    this._mouseTotalDist = 0.0\r\n    this._clickBeginTime = this._clock.getElapsedTime()\r\n  }\r\n}\r\n\r\nPicker.prototype.mousemove = function (event) {\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  const pos = this.getMouseInViewport(event.pageX, event.pageY)\r\n  this._mouseTotalDist += pos.sub(this._lastMousePos).length()\r\n}\r\n\r\nPicker.prototype.mouseup = function (event) {\r\n  const self = this\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  if (event.button === 0) {\r\n    if (this._mouseTotalDist < 0.01) {\r\n      const curTime = this._clock.getElapsedTime()\r\n      const curPos = this.getMouseInViewport(event.pageX, event.pageY)\r\n\r\n      const timeSinceLastClickBegin = curTime - this._lastClickBeginTime\r\n      if (timeSinceLastClickBegin < 0.7) {\r\n        const clickDist = new Vector2().subVectors(curPos, this._lastClickPos)\r\n        if (clickDist.length() < 0.01) {\r\n          // it's a double click\r\n          this.dispatchEvent({ type: 'dblclick', obj: this.picked })\r\n\r\n          this._lastClickPos = curPos\r\n          this._lastClickBeginTime = -1000 // this click cannot serve as first click in double-click\r\n          return\r\n        }\r\n      }\r\n\r\n      setTimeout(() => {\r\n        self.pickObject(curPos)\r\n      }, 0)\r\n\r\n      this._lastClickPos = curPos\r\n      this._lastClickBeginTime = this._clickBeginTime\r\n    }\r\n  }\r\n}\r\n\r\nPicker.prototype.touchstart = function (event) {\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  if (event.touches.length === 1) {\r\n    this._lastTouchdownPos = this.getMouseInViewport(\r\n      event.touches[0].pageX,\r\n      event.touches[0].pageY\r\n    )\r\n  }\r\n}\r\n\r\nPicker.prototype.touchend = function (event) {\r\n  const self = this\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  if (event.touches.length === 0 && event.changedTouches.length === 1) {\r\n    const pos = this.getMouseInViewport(\r\n      event.changedTouches[0].pageX,\r\n      event.changedTouches[0].pageY\r\n    )\r\n    const dist = pos.sub(this._lastTouchdownPos).length()\r\n    if (dist < 0.01) {\r\n      setTimeout(() => {\r\n        self.pickObject(self._lastTouchdownPos)\r\n      }, 0)\r\n    }\r\n  }\r\n}\r\n\r\nPicker.prototype.dispose = function () {\r\n  for (let i = 0; i < this._listeners.length; i++) {\r\n    const l = this._listeners[i]\r\n    l.obj.removeEventListener(l.type, l.handler)\r\n  }\r\n}\r\n\r\nexport default Picker\r\n",
		"import { AxesHelper, PerspectiveCamera, Scene, Vector2 } from 'three'\r\n\r\nclass Axes {\r\n  constructor(target, targetCamera) {\r\n    this._target = target\r\n    this._targetCamera = targetCamera\r\n    this._camera = new PerspectiveCamera(\r\n      targetCamera.fov,\r\n      targetCamera.aspect,\r\n      1,\r\n      100\r\n    )\r\n    this._object = new AxesHelper(1)\r\n    this._scene = new Scene()\r\n    this._scene.add(this._object)\r\n    this._full = new Vector2()\r\n\r\n    this._update()\r\n  }\r\n\r\n  _update() {\r\n    const { fov } = this._targetCamera\r\n    const camera = this._camera\r\n    camera.aspect = this._targetCamera.aspect\r\n    camera.setMinimalFov(fov)\r\n    camera.setDistanceToFit(1.0, fov)\r\n    camera.updateProjectionMatrix()\r\n\r\n    this._object.quaternion.copy(this._target.quaternion)\r\n  }\r\n\r\n  render(renderer) {\r\n    this._update()\r\n\r\n    renderer.getSize(this._full)\r\n    const width = this._full.width * 0.25\r\n    const height = this._full.height * 0.25\r\n\r\n    const { autoClear } = renderer\r\n    renderer.autoClear = false\r\n    renderer.setViewport(0.0, 0.0, width, height)\r\n    renderer.clear(false, true, false)\r\n    renderer.render(this._scene, this._camera)\r\n    renderer.setViewport(0, 0, this._full.width, this._full.height)\r\n    renderer.autoClear = autoClear\r\n  }\r\n}\r\nexport default Axes\r\n",
		"import SecondaryStructureColorer from './colorers/SecondaryStructureColorer'\r\nimport { Vector3 } from 'three'\r\n\r\nconst cDataOffset = 12\r\nconst cFirstMask = 0x0fffff00\r\nconst cFirstShift = 8\r\nconst cSecMask1 = 0x000000ff\r\nconst cSecShift1 = 12\r\nconst cSecMask2 = 0xfff00000\r\nconst cSecShift2 = 20\r\nconst cThirdMask = 0x000fffff\r\nconst cStrMask = 0xf0000000\r\nconst cStrShift = 28\r\nconst c219 = 1 << 19\r\nconst c220 = 1 << 20\r\n\r\nconst cHelixIdx = 1\r\nconst cSheetIdx = 2\r\nconst secTypes = ['helix', 'strand']\r\nconst cSecNames = ['fs', 'ps', 'ns', 'us']\r\n\r\nfunction _createSecondary(strArray, complex) {\r\n  const residues = complex._residues\r\n  const nRes = residues.length\r\n  const resid = new Uint8Array(nRes)\r\n\r\n  const atoms = complex._atoms\r\n  for (let i = 0, n = strArray.length; i < n; ++i) {\r\n    const atom = atoms[i]\r\n    resid[atom.residue._index] = strArray[i]\r\n  }\r\n\r\n  const secondary = []\r\n  let rIdx = 0\r\n  while (rIdx < nRes) {\r\n    if (resid[rIdx] !== 0) {\r\n      const start = rIdx\r\n      const val = resid[rIdx]\r\n      while (\r\n        rIdx < nRes - 1 &&\r\n        resid[rIdx + 1] === val &&\r\n        residues[rIdx].isConnected(residues[rIdx + 1])\r\n      ) {\r\n        ++rIdx\r\n      }\r\n      secondary.push({ start, end: rIdx, type: secTypes[val - 1] })\r\n    }\r\n    ++rIdx\r\n  }\r\n  return secondary\r\n}\r\n\r\nfunction fromUInt20ToInt20(uint20) {\r\n  return uint20 >= c219 ? uint20 - c220 : uint20\r\n}\r\n\r\nclass FrameInfo {\r\n  constructor(complex, payload, callbacks) {\r\n    this._complex = complex\r\n    this._secondary = null\r\n    this.isLoading = false\r\n    this._framesRange = {\r\n      start: 0,\r\n      end: -1\r\n    }\r\n    this.frameIsReady = false\r\n    this._buffer = null\r\n    this._frameRequest = null\r\n    this._callbacks = callbacks\r\n    if (typeof payload === 'function') {\r\n      this._framesRequestLength = 1\r\n      this._downloadDataFn = payload\r\n    } else {\r\n      this.parseBinaryData(payload, true)\r\n    }\r\n    this.reset()\r\n    this.setFrame(0)\r\n  }\r\n\r\n  _prepareBuffer(framesStart, framesEnd) {\r\n    if (framesStart === undefined || framesStart === null) {\r\n      framesStart = 0\r\n    }\r\n    if (framesEnd === undefined || framesEnd === null) {\r\n      framesEnd = framesStart + this._framesRequestLength\r\n    }\r\n    if (this._framesCount !== undefined) {\r\n      framesEnd = Math.min(this._framesCount - 1, framesEnd)\r\n    }\r\n    if (this._downloadDataFn) {\r\n      const self = this\r\n      const onDone = function (data) {\r\n        self.isLoading = false\r\n        if (\r\n          self._callbacks &&\r\n          typeof self._callbacks.onLoadStatusChanged === 'function'\r\n        ) {\r\n          self._callbacks.onLoadStatusChanged()\r\n        }\r\n        self._buffer = {\r\n          data,\r\n          state: 'ready',\r\n          start: framesStart,\r\n          end: framesEnd\r\n        }\r\n        if (self._frameRequest !== null) {\r\n          const idx = self._frameRequest\r\n          self._frameRequest = null\r\n          self.setFrame(idx)\r\n        }\r\n      }\r\n      const onFail = function () {\r\n        self.isLoading = false\r\n        if (self._callbacks && typeof self._callbacks.onError === 'function') {\r\n          self._callbacks.onError('Streaming failed')\r\n        }\r\n      }\r\n      if (!this._buffer) {\r\n        this._buffer = {}\r\n      }\r\n      this._buffer.state = 'downloading'\r\n      this.isLoading = true\r\n      if (\r\n        self._callbacks &&\r\n        typeof self._callbacks.onLoadStatusChanged === 'function'\r\n      ) {\r\n        self._callbacks.onLoadStatusChanged()\r\n      }\r\n      this._downloadDataFn(\r\n        { start: framesStart, end: framesEnd + 1 },\r\n        onDone,\r\n        onFail\r\n      )\r\n    }\r\n  }\r\n\r\n  _parseBuffer() {\r\n    if (this._buffer && this._buffer.state === 'ready') {\r\n      this._framesRange = {\r\n        start: this._buffer.start,\r\n        end: this._buffer.end\r\n      }\r\n      this.parseBinaryData(this._buffer.data, false)\r\n      let _bufferRequestStart = (this._buffer.end + 1) % this._framesCount\r\n      if (_bufferRequestStart >= this._framesCount) {\r\n        _bufferRequestStart = 0\r\n      }\r\n      this._buffer = {\r\n        state: 'none'\r\n      }\r\n      this._prepareBuffer(\r\n        _bufferRequestStart,\r\n        _bufferRequestStart + this._framesRequestLength\r\n      )\r\n      if (this._frameRequest !== null) {\r\n        const idx = this._frameRequest\r\n        this._frameRequest = null\r\n        this.setFrame(idx)\r\n      }\r\n    }\r\n  }\r\n\r\n  parseBinaryData(arrayBuffer) {\r\n    const dataView = new DataView(arrayBuffer)\r\n    let offset = 0\r\n    const atomsCount = dataView.getUint32(offset, true)\r\n    offset += 4\r\n    const framesCount = dataView.getUint32(offset, true)\r\n    this._framesCount = framesCount\r\n    this._framesRange.end =\r\n      this._framesRange.end > 0\r\n        ? Math.min(this._framesRange.end, framesCount - 1)\r\n        : framesCount - 1\r\n    offset += 4\r\n    this._atomsCount = atomsCount\r\n    const maxSize = 1024 * 1024 // 1 MB\r\n    this._framesRequestLength = Math.ceil(maxSize / (atomsCount * 8))\r\n    const chunkedFramesCount =\r\n      this._framesRange.end - this._framesRange.start + 1\r\n    if (\r\n      atomsCount !== this._complex._atoms.length ||\r\n      arrayBuffer.byteLength !==\r\n        cDataOffset + chunkedFramesCount * atomsCount * 8\r\n    ) {\r\n      throw new Error()\r\n    }\r\n    const complex = this._complex\r\n    let timeStep = dataView.getUint32(offset, true)\r\n    let iName = 0\r\n    while (timeStep > 1000 && iName < cSecNames.length - 1) {\r\n      timeStep /= 1000\r\n      ++iName\r\n    }\r\n\r\n    this._timeStep = `${timeStep.toString()} ${cSecNames[iName]}`\r\n    offset += 4\r\n    const secondary = []\r\n    const posData = new Float32Array(chunkedFramesCount * atomsCount * 3)\r\n    let coordIdx = 0\r\n    const secondaryArr = new Int8Array(atomsCount)\r\n    for (let j = 0; j < chunkedFramesCount; ++j) {\r\n      for (let i = 0; i < atomsCount; ++i) {\r\n        const hiWord = dataView.getUint32(offset, true)\r\n        offset += 4\r\n        const loWord = dataView.getUint32(offset, true)\r\n        offset += 4\r\n        const str = (loWord & cStrMask) >>> cStrShift\r\n        const x = fromUInt20ToInt20(\r\n          ((loWord & cFirstMask) >>> cFirstShift) >> 0\r\n        )\r\n        const y = fromUInt20ToInt20(\r\n          (((loWord & cSecMask1) << cSecShift1) |\r\n            ((hiWord & cSecMask2) >>> cSecShift2)) >>\r\n            0\r\n        )\r\n        const z = fromUInt20ToInt20((hiWord & cThirdMask) >> 0)\r\n        secondaryArr[i] = 0\r\n        if (str > 0 && str < 4) {\r\n          secondaryArr[i] = cHelixIdx\r\n        } else if (str === 4) {\r\n          secondaryArr[i] = cSheetIdx\r\n        }\r\n        posData[coordIdx++] = x / 100\r\n        posData[coordIdx++] = y / 100\r\n        posData[coordIdx++] = z / 100\r\n      }\r\n      secondary.push(_createSecondary(secondaryArr, complex))\r\n    }\r\n    this._secondaryData = secondary\r\n    this._data = posData\r\n  }\r\n\r\n  nextFrame() {\r\n    this.setFrame((this._currFrame + 1) % this._framesCount)\r\n  }\r\n\r\n  needsColorUpdate(colorer) {\r\n    return colorer instanceof SecondaryStructureColorer\r\n  }\r\n\r\n  getAtomColor(colorer, atom) {\r\n    return colorer.getResidueColor(\r\n      this._residues[atom.residue._index],\r\n      this._complex\r\n    )\r\n  }\r\n\r\n  getResidueColor(colorer, residue) {\r\n    return colorer.getResidueColor(\r\n      this._residues[residue._index],\r\n      this._complex\r\n    )\r\n  }\r\n\r\n  _updateSecondary() {\r\n    let i\r\n    const myResidues = this._residues\r\n    let n = myResidues.length\r\n    for (i = 0; i < n; ++i) {\r\n      myResidues[i]._secondary = null\r\n    }\r\n    const sec = this._secondaryData[this._currFrame - this._framesRange.start]\r\n    for (i = 0, n = sec.length; i < n; ++i) {\r\n      const oldSec = sec[i]\r\n      const { start, end } = oldSec\r\n      const nSec = {\r\n        _start: myResidues[start],\r\n        _end: myResidues[end],\r\n        type: oldSec.type,\r\n        generic: oldSec.generic\r\n      }\r\n      for (let j = start; j <= end; ++j) {\r\n        myResidues[j]._secondary = nSec\r\n      }\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const compRes = this._complex._residues\r\n    const n = compRes.length\r\n    this._residues = new Array(n)\r\n    const myResidues = this._residues\r\n    const getSec = function () {\r\n      return this._secondary\r\n    }\r\n    for (let i = 0; i < n; ++i) {\r\n      myResidues[i] = {\r\n        _type: compRes[i]._type,\r\n        _isValid: compRes[i]._isValid,\r\n        _controlPoint: null,\r\n        _wingVector: null,\r\n        _secondary: null,\r\n        getSecondary: getSec\r\n      }\r\n    }\r\n  }\r\n\r\n  setFrame(frameIdx) {\r\n    this.frameIsReady = false\r\n    if (\r\n      frameIdx >= this._framesRange.start &&\r\n      frameIdx <= this._framesRange.end\r\n    ) {\r\n      this._currFrame = frameIdx\r\n      this._cachedResidues = false\r\n      this._updateSecondary()\r\n      this.frameIsReady = true\r\n    } else {\r\n      this._frameRequest = frameIdx\r\n      if (!this._buffer) {\r\n        this._prepareBuffer(frameIdx)\r\n      } else {\r\n        const self = this\r\n        switch (this._buffer.state) {\r\n          case 'none':\r\n            this._prepareBuffer(frameIdx)\r\n            break\r\n          case 'ready':\r\n            self._parseBuffer()\r\n            break\r\n          default:\r\n            break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  disableEvents() {\r\n    this._callbacks = null\r\n  }\r\n\r\n  /**\r\n   * Returns link to atom pos vector, clone it if needed\r\n   */\r\n\r\n  static _vec = new Vector3()\r\n\r\n  getAtomPos(atomIdx) {\r\n    const vec = FrameInfo._vec\r\n    const self = this\r\n    const data = self._data\r\n    const idx =\r\n      (self._atomsCount * (self._currFrame - self._framesRange.start) +\r\n        atomIdx) *\r\n      3\r\n    vec.set(data[idx], data[idx + 1], data[idx + 2])\r\n    return vec\r\n  }\r\n\r\n  getResidues() {\r\n    if (this._cachedResidues) {\r\n      return this._residues\r\n    }\r\n    this._complex.updateToFrame(this)\r\n    return this._residues\r\n  }\r\n}\r\nexport default FrameInfo\r\n",
		"import { isEmpty, merge } from 'lodash'\r\nimport settings from '../../settings'\r\nimport utils from '../../utils'\r\nimport gfxutils from '../gfxutils'\r\n\r\n/**\r\n * Create new scene object.\r\n *\r\n * @param {array=} params - Object required params.\r\n * @param {object=} opts - Options to override defaults with.\r\n *\r\n *   These options are copied locally and not kept by reference, so the created instance will not reflect further\r\n *   changes to the `opts` object. However, changes in defaults **will** affect the colorer after its creation.\r\n *\r\n * @exports SceneObject\r\n * @this SceneObject\r\n * @abstract\r\n * @constructor\r\n * @classdesc Basic class for all scene objects that are not reps.\r\n */\r\nclass SceneObject {\r\n  constructor(params, opts) {\r\n    if (this.constructor === SceneObject) {\r\n      throw new Error('Can not instantiate abstract class!')\r\n    }\r\n    /**\r\n     * Object's options inherited (prototyped) from defaults.\r\n     * @type {object}\r\n     */\r\n    this.params = params\r\n    this.opts = merge(\r\n      utils.deriveDeep(settings.now.objects[this.type], true),\r\n      opts\r\n    )\r\n    this.needsRebuild = false\r\n    this._mesh = null\r\n    this.id = null\r\n  }\r\n\r\n  /**\r\n   * Get object identification, probably with options.\r\n   *  @returns {Object} field type contains type information, params - object's formal parameters,\r\n   * opts - changed options\r\n   * Options are returned if they were changed during or after object creation.\r\n   */\r\n  identify() {\r\n    const result = {\r\n      type: this.type,\r\n      params: this.params\r\n    }\r\n    const diff = utils.objectsDiff(this.opts, settings.now.modes[this.id])\r\n    if (!isEmpty(diff)) {\r\n      result.opts = diff\r\n    }\r\n    return result\r\n  }\r\n\r\n  toString() {\r\n    const paramsStr = `o=${this.type},${this.params.join(',')}`\r\n    const optsStr = utils.compareOptionsWithDefaults(\r\n      this.opts,\r\n      settings.defaults.objects[this.type]\r\n    )\r\n    return paramsStr + optsStr\r\n  }\r\n\r\n  getGeometry() {\r\n    return this._mesh\r\n  }\r\n\r\n  destroy() {\r\n    if (this._mesh) {\r\n      gfxutils.destroyObject(this._mesh)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Scene object identifier.\r\n * @type {string}\r\n */\r\nSceneObject.prototype.type = '__'\r\n\r\nexport default SceneObject\r\n",
		"import SceneObject from './SceneObject'\r\nimport meshutils from '../meshutils'\r\nimport UberMaterial from '../shaders/UberMaterial'\r\nimport meshes from '../meshes/meshes'\r\nimport settings from '../../settings'\r\nimport { BufferAttribute, BufferGeometry, Group, Color } from 'three'\r\n\r\nclass LinesObj extends SceneObject {\r\n  constructor(params, opts) {\r\n    super(params, opts)\r\n    if (params.length < 2) {\r\n      throw new Error('Wrong number of argumets on line object creation!')\r\n    }\r\n    ;[this._id1, this._id2] = params\r\n  }\r\n\r\n  _getAtomFromName(complex, atomId) {\r\n    const err =\r\n      \" - Wrong atom format it must be '#CHAIN_NAME.#RESIDUE_NUMBER.#ATOM_NAME' (e.g. 'A.38.CO1')\"\r\n    const atom1 = complex.getAtomByFullname(atomId)\r\n    if (!atom1) {\r\n      throw new Error(atomId + err)\r\n    }\r\n    return atom1\r\n  }\r\n\r\n  build(complex) {\r\n    const geom = new BufferGeometry()\r\n    this._atom1 = this._getAtomFromName(complex, this._id1)\r\n    this._atom2 = this._getAtomFromName(complex, this._id2)\r\n\r\n    const p1 = this._atom1.position\r\n    const p2 = this._atom2.position\r\n    const vertices = new Float32Array([p1.x, p1.y, p1.z, p2.x, p2.y, p2.z])\r\n\r\n    geom.setAttribute('position', new BufferAttribute(vertices, 3))\r\n    geom.computeBoundingBox()\r\n    const material = new UberMaterial()\r\n    material.setValues({\r\n      lights: false,\r\n      overrideColor: true,\r\n      dashedLine: true,\r\n      fogTransparent: settings.now.bg.transparent\r\n    })\r\n\r\n    this._line = new meshes.Line(geom, material)\r\n    this._line.computeLineDistances()\r\n    this._line.material.setUberOptions({\r\n      fixedColor: new Color(this.opts.color),\r\n      dashedLineSize: this.opts.dashSize,\r\n      dashedLinePeriod: this.opts.dashSize + this.opts.gapSize\r\n    })\r\n    this._line.material.updateUniforms()\r\n\r\n    this._line.raycast = function (_raycaster, _intersects) {}\r\n    this._mesh = this._line\r\n    const transforms = complex.getTransforms()\r\n    if (transforms.length > 0) {\r\n      this._mesh = new Group()\r\n      this._mesh.add(this._line)\r\n      meshutils.applyTransformsToMeshes(this._mesh, transforms)\r\n    }\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    if (!this._atom1 || !this._atom2 || !this._line) {\r\n      return\r\n    }\r\n\r\n    const geo = this._line.geometry\r\n    geo.vertices[0].copy(frameData.getAtomPos(this._atom1.index))\r\n    geo.vertices[1].copy(frameData.getAtomPos(this._atom2.index))\r\n    this._line.computeLineDistances()\r\n    geo.computeBoundingSphere()\r\n\r\n    geo.verticesNeedUpdate = true\r\n  }\r\n}\r\n\r\nLinesObj.prototype.constructor = LinesObj\r\nLinesObj.prototype.type = 'line'\r\n\r\nexport default LinesObj\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './ScreenQuad.vert'\r\nimport fragmentShader from './Outline.frag'\r\nimport { RawShaderMaterial, Vector2 } from 'three'\r\n\r\nclass OutlineMaterial extends RawShaderMaterial {\r\n  constructor(params) {\r\n    // add depth outline\r\n    super(params)\r\n\r\n    const settings = {\r\n      uniforms: {\r\n        srcTex: { type: 't', value: null },\r\n        srcDepthTex: { type: 't', value: null },\r\n        srcTexSize: { type: 'v2', value: new Vector2(512, 512) },\r\n        color: { type: 'v3', value: null },\r\n        threshold: { type: 'f', value: null },\r\n        opacity: { type: 'f', value: 1.0 },\r\n        thickness: { type: 'v2', value: new Vector2(1, 1) }\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: true,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    }\r\n\r\n    this.setValues(settings)\r\n  }\r\n\r\n  copy(source) {\r\n    super.copy(source)\r\n    this.depth = source.depth\r\n  }\r\n\r\n  setValues(values) {\r\n    if (typeof values === 'undefined') {\r\n      return\r\n    }\r\n\r\n    // set direct values\r\n    super.setValues(values)\r\n    const defines = {}\r\n\r\n    if (this.depth) {\r\n      defines.DEPTH_OUTLINE = 1\r\n    }\r\n\r\n    // set dependent values\r\n    this.defines = defines\r\n  }\r\n}\r\n\r\nOutlineMaterial.prototype.depth = false\r\n\r\nexport default OutlineMaterial\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './ScreenQuad.vert'\r\nimport fragmentShader from './FXAA.frag'\r\nimport { RawShaderMaterial, Vector2, Color } from 'three'\r\n\r\nclass FXAAMaterial extends RawShaderMaterial {\r\n  constructor(params) {\r\n    super(params)\r\n\r\n    // set default values\r\n    this.setValues({\r\n      uniforms: {\r\n        srcTex: { type: 't', value: null },\r\n        srcTexelSize: {\r\n          type: 'v2',\r\n          value: new Vector2(1.0 / 512.0, 1.0 / 512.0)\r\n        },\r\n        bgColor: { type: 'c', value: new Color(0xffffff) }\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    })\r\n\r\n    this.setValues(params)\r\n  }\r\n\r\n  copy(source) {\r\n    super.copy(source)\r\n    this.depth = source.depth\r\n  }\r\n\r\n  setValues(values) {\r\n    if (typeof values === 'undefined') {\r\n      return\r\n    }\r\n\r\n    // set direct values\r\n    super.setValues(values)\r\n\r\n    const defines = {}\r\n\r\n    if (this.bgTransparent) {\r\n      defines.BG_TRANSPARENT = 1\r\n    }\r\n    // set dependent values\r\n    this.defines = defines\r\n  }\r\n}\r\n\r\nFXAAMaterial.prototype.bgTransparent = false\r\n\r\nexport default FXAAMaterial\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './ScreenQuad.vert'\r\nimport fragmentShader from './AO.frag'\r\nimport noise from '../noiseTexture'\r\nimport { Matrix4, RawShaderMaterial, Vector2, Vector3 } from 'three'\r\n\r\nconst _samplesKernel = [\r\n  // hemisphere samples adopted to sphere\r\n  new Vector3(0.295184, 0.077723, 0.068429),\r\n  new Vector3(-0.271976, -0.365221, 0.838363),\r\n  new Vector3(0.547713, 0.467576, 0.488515),\r\n  new Vector3(0.662808, -0.031733, 0.584758),\r\n  new Vector3(-0.025717, 0.218955, 0.657094),\r\n  new Vector3(-0.310153, -0.365223, 0.370701),\r\n  new Vector3(-0.101407, -0.006313, 0.747665),\r\n  new Vector3(-0.769138, 0.360399, 0.086847),\r\n  new Vector3(-0.271988, -0.27514, 0.905353),\r\n  new Vector3(0.09674, -0.566901, 0.700151),\r\n  new Vector3(0.562872, -0.735136, 0.094647),\r\n  new Vector3(0.379877, 0.359278, 0.190061),\r\n  new Vector3(0.519064, -0.023055, 0.405068),\r\n  new Vector3(-0.301036, 0.114696, 0.088885),\r\n  new Vector3(-0.282922, 0.598305, 0.487214),\r\n  new Vector3(-0.181859, 0.25167, 0.679702),\r\n  new Vector3(-0.191463, -0.635818, 0.512919),\r\n  new Vector3(-0.293655, 0.427423, 0.078921),\r\n  new Vector3(-0.267983, 0.680534, 0.13288),\r\n  new Vector3(0.139611, 0.319637, 0.477439),\r\n  new Vector3(-0.352086, 0.31104, 0.653913),\r\n  new Vector3(0.321032, 0.805279, 0.487345),\r\n  new Vector3(0.073516, 0.820734, 0.414183),\r\n  new Vector3(-0.155324, 0.589983, 0.41146),\r\n  new Vector3(0.335976, 0.170782, 0.527627),\r\n  new Vector3(0.46346, -0.355658, 0.167689),\r\n  new Vector3(0.222654, 0.59655, 0.769406),\r\n  new Vector3(0.922138, -0.04207, 0.147555),\r\n  new Vector3(-0.72705, -0.329192, 0.369826),\r\n  new Vector3(-0.090731, 0.53382, 0.463767),\r\n  new Vector3(-0.323457, -0.876559, 0.238524),\r\n  new Vector3(-0.663277, -0.372384, 0.342856)\r\n]\r\n\r\nclass AOMaterial extends RawShaderMaterial {\r\n  constructor() {\r\n    super()\r\n\r\n    // set default values\r\n    this.setValues({\r\n      uniforms: {\r\n        noiseTexture: { type: 't', value: noise.noiseTexture },\r\n        noiseTexelSize: {\r\n          type: 'v2',\r\n          value: new Vector2(1.0 / noise.noiseWidth, 1.0 / noise.noiseHeight)\r\n        },\r\n        diffuseTexture: { type: 't', value: null },\r\n        normalTexture: { type: 't', value: null },\r\n        depthTexture: { type: 't', value: null },\r\n        srcTexelSize: {\r\n          type: 'v2',\r\n          value: new Vector2(1.0 / 512.0, 1.0 / 512.0)\r\n        },\r\n        camNearFar: { type: 'v2', value: new Vector2(1.0, 10.0) },\r\n        projMatrix: { type: 'mat4', value: new Matrix4() },\r\n        aspectRatio: { type: 'f', value: 0.0 },\r\n        tanHalfFOV: { type: 'f', value: 0.0 },\r\n        samplesKernel: { type: 'v3v', value: _samplesKernel },\r\n        kernelRadius: { type: 'f', value: 1.0 },\r\n        depthThreshold: { type: 'f', value: 1.0 },\r\n        factor: { type: 'f', value: 1.0 }\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    })\r\n  }\r\n}\r\n\r\nexport default AOMaterial\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './ScreenQuad.vert'\r\nimport fragmentShader from './AOHorBlur.frag'\r\nimport { RawShaderMaterial, Vector2 } from 'three'\r\n\r\nconst _kernelOffsets = [-2.0, -1.0, 0.0, 1.0, 2.0]\r\n\r\nclass AOHorBlurMaterial extends RawShaderMaterial {\r\n  constructor() {\r\n    super()\r\n\r\n    // set default values\r\n    this.setValues({\r\n      uniforms: {\r\n        depthTexture: { type: 't', value: null },\r\n        srcTexelSize: {\r\n          type: 'v2',\r\n          value: new Vector2(1.0 / 512.0, 1.0 / 512.0)\r\n        },\r\n        aoMap: { type: 't', value: null },\r\n        samplesOffsets: { type: 'fv1', value: _kernelOffsets }\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    })\r\n  }\r\n}\r\n\r\nexport default AOHorBlurMaterial\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './ScreenQuad.vert'\r\nimport fragmentShader from './AOVertBlurWithBlend.frag'\r\nimport { Matrix4, RawShaderMaterial, Vector2, Vector4 } from 'three'\r\n\r\nconst _kernelOffsets = [-2.0, -1.0, 0.0, 1.0, 2.0]\r\n\r\nclass AOVertBlurWithBlendMaterial extends RawShaderMaterial {\r\n  constructor(params) {\r\n    super(params)\r\n\r\n    // set default values\r\n    this.setValues({\r\n      uniforms: {\r\n        diffuseTexture: { type: 't', value: null },\r\n        depthTexture: { type: 't', value: null },\r\n        srcTexelSize: {\r\n          type: 'v2',\r\n          value: new Vector2(1.0 / 512.0, 1.0 / 512.0)\r\n        },\r\n        aoMap: { type: 't', value: null },\r\n        samplesOffsets: { type: 'fv1', value: _kernelOffsets },\r\n        projMatrix: { type: 'mat4', value: new Matrix4() },\r\n        aspectRatio: { type: 'f', value: 0.0 },\r\n        tanHalfFOV: { type: 'f', value: 0.0 },\r\n        fogNearFar: { type: 'v2', value: new Vector2(100.0, 100.0) },\r\n        fogColor: { type: 'v4', value: new Vector4(0.0, 0.5, 0.0, 1.0) }\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    })\r\n\r\n    this.setValues(params)\r\n  }\r\n\r\n  setValues(values) {\r\n    if (typeof values === 'undefined') {\r\n      return\r\n    }\r\n\r\n    // set direct values\r\n    super.setValues(values)\r\n\r\n    const defines = {}\r\n\r\n    if (this.useFog) {\r\n      defines.USE_FOG = 1\r\n    }\r\n    if (this.fogTransparent) {\r\n      defines.FOG_TRANSPARENT = 1\r\n    }\r\n    // set dependent values\r\n    this.defines = defines\r\n  }\r\n}\r\n\r\nAOVertBlurWithBlendMaterial.prototype.useFog = true\r\nAOVertBlurWithBlendMaterial.prototype.fogTransparent = false\r\n\r\nexport default AOVertBlurWithBlendMaterial\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './ScreenQuad.vert'\r\nimport fragmentShader from './Anaglyph.frag'\r\nimport { RawShaderMaterial } from 'three'\r\n\r\nclass AnaglyphMaterial extends RawShaderMaterial {\r\n  constructor() {\r\n    super()\r\n    const settings = {\r\n      uniforms: {\r\n        srcL: { type: 't', value: null },\r\n        srcR: { type: 't', value: null }\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    }\r\n    this.setValues(settings)\r\n  }\r\n}\r\n\r\nexport default AnaglyphMaterial\r\n",
		"import settings from '../settings'\r\nimport { Quaternion, Vector3 } from 'three'\r\n\r\nclass View {\r\n  constructor() {\r\n    this.position = new Vector3(0, 0, 0)\r\n    this.scale = 1\r\n    this.orientation = new Quaternion(0, 0, 0, 1)\r\n  }\r\n\r\n  set(position, scale, orientation) {\r\n    this.position = position\r\n    this.scale = scale\r\n    this.orientation = orientation\r\n  }\r\n}\r\n\r\nconst _transitionTime = 1.5 // in seconds\r\n\r\nexport default class ViewInterpolator {\r\n  setup(startView, endView) {\r\n    this._startTime = undefined\r\n    this._endTime = undefined\r\n    this._isPaused = false\r\n\r\n    this._srcView = startView\r\n    this._dstView = endView\r\n    this._isMoving = false\r\n  }\r\n\r\n  isMoving() {\r\n    return this._isMoving\r\n  }\r\n\r\n  wasStarted() {\r\n    return (\r\n      typeof this._startTime !== 'undefined' &&\r\n      typeof this._endTime !== 'undefined'\r\n    )\r\n  }\r\n\r\n  start() {\r\n    this._startTime = Date.now()\r\n    const transTime = settings.now.interpolateViews ? _transitionTime * 1000 : 0\r\n    this._endTime = this._startTime + transTime\r\n    this._isMoving = true\r\n  }\r\n\r\n  getCurrentView() {\r\n    if (\r\n      typeof this._srcView === 'undefined' ||\r\n      typeof this._dstView === 'undefined' ||\r\n      !this._isMoving ||\r\n      !this.wasStarted()\r\n    ) {\r\n      return { success: false }\r\n    }\r\n\r\n    let view = this.createView()\r\n    const time = Date.now()\r\n    if (time > this._endTime) {\r\n      view = this._dstView\r\n      this.reset()\r\n      return { success: true, view }\r\n    }\r\n\r\n    const factor = (time - this._startTime) / (this._endTime - this._startTime)\r\n    view.position.copy(this._srcView.position)\r\n    view.position.lerp(this._dstView.position, factor)\r\n    view.scale =\r\n      (1 - factor) * this._srcView.scale + factor * this._dstView.scale\r\n    view.orientation.copy(this._srcView.orientation)\r\n    view.orientation.slerp(this._dstView.orientation, factor)\r\n    return { success: true, view }\r\n  }\r\n\r\n  reset() {\r\n    this._startTime = this._endTime = 0\r\n    this._isMoving = false\r\n  }\r\n\r\n  pause() {\r\n    if (!this._isPaused) {\r\n      this.setup(this.getCurrentView().view, this._dstView)\r\n      this._isPaused = true\r\n    }\r\n  }\r\n\r\n  resume() {\r\n    this._isPaused = false\r\n  }\r\n\r\n  createView() {\r\n    return new View()\r\n  }\r\n}\r\n",
		"import { merge } from 'lodash'\r\nimport makeContextDependent from './makeContextDependent'\r\n\r\nconst MAX_COOKIE_LEN = 4000\r\nconst COUNT_SUFFIX = 'Cnt'\r\n\r\nfunction _chunkString(string, chunkLen) {\r\n  const l = string.length\r\n  const chunks = []\r\n  for (let c = 0, lc = 0; lc < l; c++, lc += chunkLen) {\r\n    chunks[c] = string.slice(lc, lc + chunkLen)\r\n  }\r\n  return chunks\r\n}\r\n\r\n/**\r\n * Create new context dependent Cookie holder object.\r\n * @param context\r\n * @param {Object} opts - options\r\n * @param {string} opts.path - cookie path\r\n * @constructor\r\n */\r\nfunction Cookies(context, opts) {\r\n  this.context = context\r\n  this._opts = merge(\r\n    {\r\n      path: '/'\r\n    },\r\n    opts\r\n  )\r\n}\r\n\r\nmakeContextDependent(Cookies.prototype)\r\n\r\n/**\r\n * Remove cookie by the name.\r\n * @param key\r\n */\r\nCookies.prototype.removeCookie = function (key) {\r\n  const cntKey = this._toCount(key)\r\n  let cntVal = this._getSimpleCookie(cntKey)\r\n  if (!cntVal) {\r\n    this._removeSimpleCookie(key)\r\n    return\r\n  }\r\n  this._removeSimpleCookie(cntKey)\r\n  cntVal = parseInt(cntVal, 10)\r\n  for (let i = 0; i < cntVal; ++i) {\r\n    this._removeSimpleCookie(key + i)\r\n  }\r\n}\r\n\r\n/**\r\n * Set new cookie value. Automatically splits\r\n * values that are too large into multiple cookies.\r\n * @param key\r\n * @param value\r\n */\r\nCookies.prototype.setCookie = function (key, value) {\r\n  this.removeCookie(key)\r\n  value = encodeURIComponent(value)\r\n  const values = _chunkString(value, MAX_COOKIE_LEN - key.length - 1)\r\n  const cntVal = values.length\r\n  if (cntVal === 1) {\r\n    this._setSimpleCookie(key, value)\r\n    return\r\n  }\r\n  const cntKey = this._toCount(key)\r\n  this._setSimpleCookie(cntKey, cntVal.toString())\r\n  for (let i = 0; i < cntVal; ++i) {\r\n    this._setSimpleCookie(key + i, values[i])\r\n  }\r\n}\r\n\r\n/**\r\n * Obtain the value of a compound cookie.\r\n * @param key\r\n */\r\nCookies.prototype.getCookie = function (key) {\r\n  const cntKey = this._toCount(key)\r\n  let cntVal = this._getSimpleCookie(cntKey)\r\n  if (!cntVal) {\r\n    return this._getSimpleCookie(key)\r\n  }\r\n  cntVal = parseInt(cntVal, 10)\r\n  const value = []\r\n  for (let i = 0; i < cntVal; ++i) {\r\n    value[i] = this._getSimpleCookie(key + i)\r\n  }\r\n  return value.join('')\r\n}\r\n\r\nCookies.prototype._toCount = function (key) {\r\n  return key + COUNT_SUFFIX\r\n}\r\n\r\nCookies.prototype._removeSimpleCookie = function (key) {\r\n  document.cookie = `${key}=; expires=Thu, 01 Jan 1970 00:00:01 GMT;`\r\n}\r\n\r\nCookies.prototype._getExpirationDate = function () {\r\n  const today = new Date()\r\n  const EXP_PERIOD_YEARS = 10\r\n  today.setFullYear(today.getFullYear() + EXP_PERIOD_YEARS)\r\n  return today\r\n}\r\n\r\nCookies.prototype._setSimpleCookie = function (key, value) {\r\n  document.cookie = `${key}=${value};expires=${this._getExpirationDate().toUTCString()};path=${\r\n    this._opts.path\r\n  }`\r\n}\r\n\r\nCookies.prototype._getSimpleCookie = function (key) {\r\n  const matches = document.cookie.match(new RegExp(`(?:^|; )${key}=([^;]*)`))\r\n  return matches ? decodeURIComponent(matches[1]) : ''\r\n}\r\n\r\nCookies.prototype._exists = function (key) {\r\n  return document.cookie.match(new RegExp(`(?:^|; )${key}=([^;]*)`))\r\n}\r\n\r\nexport default Cookies\r\n",
		"/*\r\n * Toggling WebVR is done through button.click because of limitations on calling requestPresent in webVR:\r\n * VRDisplay::requestPresent should be called from user gesture:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/requestPresent\r\n */\r\nexport default function (webVRPoC) {\r\n  function showEnterVR(button) {\r\n    button.style.display = ''\r\n    button.style.cursor = 'pointer'\r\n    button.style.left = 'calc(50% - 50px)'\r\n    button.style.width = '100px'\r\n\r\n    button.textContent = 'ENTER VR'\r\n\r\n    let currentSession = null\r\n\r\n    function onSessionEnded(/* event */) {\r\n      currentSession.removeEventListener('end', onSessionEnded)\r\n      button.textContent = 'ENTER VR'\r\n      currentSession = null\r\n    }\r\n\r\n    function onSessionStarted(session) {\r\n      session.addEventListener('end', onSessionEnded)\r\n      webVRPoC._gfx.renderer.xr.setReferenceSpaceType('local')\r\n      webVRPoC._gfx.renderer.xr.setSession(session)\r\n      button.textContent = 'EXIT VR'\r\n      currentSession = session\r\n    }\r\n\r\n    button.onmouseenter = function () {\r\n      button.style.opacity = '1.0'\r\n    }\r\n    button.onmouseleave = function () {\r\n      button.style.opacity = '0.5'\r\n    }\r\n\r\n    button.onclick = function () {\r\n      if (currentSession === null) {\r\n        // WebXR's requestReferenceSpace only works if the corresponding feature\r\n        // was requested at session creation time. For simplicity, just ask for\r\n        // the interesting ones as optional features, but be aware that the\r\n        // requestReferenceSpace call will fail if it turns out to be unavailable.\r\n        // ('local' is always available for immersive sessions and doesn't need to\r\n        // be requested separately.)\r\n\r\n        const sessionInit = {\r\n          optionalFeatures: ['local-floor', 'bounded-floor']\r\n        }\r\n        navigator.xr\r\n          .requestSession('immersive-vr', sessionInit)\r\n          .then(onSessionStarted)\r\n        webVRPoC.moveSceneBehindHeadset()\r\n      } else {\r\n        currentSession.end()\r\n      }\r\n    }\r\n  }\r\n\r\n  function showWebXRNotFound(button) {\r\n    button.style.display = ''\r\n    button.style.cursor = 'auto'\r\n    button.style.left = 'calc(50% - 75px)'\r\n    button.style.width = '150px'\r\n    button.textContent = 'VR NOT FOUND'\r\n    button.onmouseenter = null\r\n    button.onmouseleave = null\r\n    button.onclick = null\r\n  }\r\n\r\n  function stylizeElement(element) {\r\n    element.style.position = 'absolute'\r\n    element.style.bottom = '20px'\r\n    element.style.padding = '12px 6px'\r\n    element.style.border = '1px solid #fff'\r\n    element.style.borderRadius = '4px'\r\n    element.style.background = 'transparent'\r\n    element.style.color = '#fff'\r\n    element.style.font = 'normal 13px sans-serif'\r\n    element.style.textAlign = 'center'\r\n    element.style.opacity = '0.5'\r\n    element.style.outline = 'none'\r\n    element.style.zIndex = '999'\r\n  }\r\n\r\n  if ('xr' in navigator) {\r\n    const button = document.createElement('button')\r\n    button.style.display = 'none'\r\n    stylizeElement(button)\r\n    navigator.xr\r\n      .isSessionSupported('immersive-vr')\r\n      .then((supported) =>\r\n        supported ? showEnterVR(button) : showWebXRNotFound(button)\r\n      )\r\n    return button\r\n  }\r\n  const message = document.createElement('a')\r\n  message.href = 'https://webvr.info'\r\n  message.innerHTML = 'WEBXR NOT SUPPORTED'\r\n  message.style.left = 'calc(50% - 90px)'\r\n  message.style.width = '180px'\r\n  message.style.textDecoration = 'none'\r\n  stylizeElement(message)\r\n  return message\r\n}\r\n",
		"import createWebVRButton from './createWebVRButton'\r\nimport gfxutils from '../gfxutils'\r\nimport logger from '../../utils/logger'\r\nimport settings from '../../settings'\r\nimport UberMaterial from '../shaders/UberMaterial'\r\nimport {\r\n  CylinderGeometry,\r\n  Mesh,\r\n  Object3D,\r\n  PerspectiveCamera,\r\n  Color\r\n} from 'three'\r\n\r\nexport default class WebVRPoC {\r\n  constructor(onToggle) {\r\n    this._mainCamera = new PerspectiveCamera()\r\n    this._button = null\r\n    this._onToggle = onToggle\r\n\r\n    this._molContainer = new gfxutils.RCGroup()\r\n    this._user = new gfxutils.RCGroup()\r\n    this._scalingPivot = new Object3D()\r\n    this._user.add(this._scalingPivot)\r\n\r\n    this._controller1 = null\r\n    this._controller2 = null\r\n    this._pressedGripsCounter = 0\r\n    this._distance = 0\r\n\r\n    this._gfx = null\r\n  }\r\n\r\n  startScalingByControllers() {\r\n    // reset scale\r\n    this._distance = this._controller1.position.distanceTo(\r\n      this._controller2.position\r\n    )\r\n    gfxutils.getMiddlePoint(\r\n      this._controller1.position,\r\n      this._controller2.position,\r\n      this._scalingPivot.position\r\n    )\r\n    this._scalingPivot.scale.set(1, 1, 1)\r\n    this._scalingPivot.updateMatrix()\r\n    this._scalingPivot.updateMatrixWorld()\r\n    // link molecule to pivot\r\n    this._scalingPivot.addSavingWorldTransform(this._molContainer)\r\n  }\r\n\r\n  stopScalingByControllers() {\r\n    this._gfx.scene.addSavingWorldTransform(this._molContainer)\r\n  }\r\n\r\n  handleGripsDown(event) {\r\n    this._pressedGripsCounter++\r\n    if (this._pressedGripsCounter === 2) {\r\n      this.startScalingByControllers()\r\n    } else if (this._pressedGripsCounter === 1) {\r\n      event.target.addSavingWorldTransform(this._molContainer)\r\n    }\r\n  }\r\n\r\n  handleGripsUp(event) {\r\n    this._pressedGripsCounter--\r\n    if (this._pressedGripsCounter === 1) {\r\n      this.stopScalingByControllers()\r\n      // reattach molecule to other controller\r\n      const anotherController =\r\n        event.target === this._controller1\r\n          ? this._controller2\r\n          : this._controller1\r\n      anotherController.addSavingWorldTransform(this._molContainer)\r\n    } else if (this._pressedGripsCounter === 0) {\r\n      this._gfx.scene.addSavingWorldTransform(this._molContainer)\r\n    }\r\n  }\r\n\r\n  enable(gfx) {\r\n    if (!gfx) {\r\n      logger.warn(\"WebVR couldn't be enabled, because gfx is not defined\")\r\n      return\r\n    }\r\n    this._gfx = gfx\r\n    const { renderer, camera } = gfx\r\n    if (!renderer) {\r\n      throw new Error('No renderer is available to toggle WebVR')\r\n    }\r\n    if (!camera) {\r\n      throw new Error('No camera is available to toggle WebVR')\r\n    }\r\n\r\n    // enable xr in renderer\r\n    renderer.xr.enabled = true\r\n    // add button for turning vr mode\r\n    if (!this._button) {\r\n      this._button = createWebVRButton(this)\r\n      document.body.appendChild(this._button)\r\n    } else {\r\n      this._button.style.display = 'block'\r\n    }\r\n    // store fog setting\r\n    this._mainFog = settings.now.fog\r\n    settings.set('fog', false)\r\n\r\n    this._plugVRNodesIntoScene(gfx, renderer)\r\n    this._setControllersListeners()\r\n\r\n    // make some Miew job\r\n    if (this._onToggle) {\r\n      this._onToggle(true)\r\n    }\r\n  }\r\n\r\n  _plugVRNodesIntoScene(gfx, renderer) {\r\n    // store common scene camera\r\n    this._mainCamera.copy(gfx.camera)\r\n    // add hierarchical structure for webVR into scene\r\n    gfx.scene.add(this._user)\r\n    // turn on webvr transformation\r\n    gfx.scene.add(this._molContainer)\r\n    this._molContainer.add(gfx.root)\r\n\r\n    this._controller1 = renderer.xr.getController(0)\r\n    this._controller2 = renderer.xr.getController(1)\r\n    const mesh = this._createControllerMesh()\r\n    this._controller1.add(mesh)\r\n    this._controller2.add(mesh.clone())\r\n    this._user.add(this._controller1)\r\n    this._user.add(this._controller2)\r\n  }\r\n\r\n  _setControllersListeners() {\r\n    this._controller1.addEventListener('selectstart', (event) => {\r\n      this.handleGripsDown(event)\r\n    })\r\n    this._controller1.addEventListener('selectend', (event) => {\r\n      this.handleGripsUp(event)\r\n    })\r\n    this._controller2.addEventListener('selectstart', (event) => {\r\n      this.handleGripsDown(event)\r\n    })\r\n    this._controller2.addEventListener('selectend', (event) => {\r\n      this.handleGripsUp(event)\r\n    })\r\n\r\n    this._controller1.addEventListener('squeezestart', (event) => {\r\n      this.handleGripsDown(event)\r\n    })\r\n    this._controller1.addEventListener('squeezeend', (event) => {\r\n      this.handleGripsUp(event)\r\n    })\r\n    this._controller2.addEventListener('squeezestart', (event) => {\r\n      this.handleGripsDown(event)\r\n    })\r\n    this._controller2.addEventListener('squeezeend', (event) => {\r\n      this.handleGripsUp(event)\r\n    })\r\n  }\r\n\r\n  disable() {\r\n    if (!this._gfx) {\r\n      return\r\n    }\r\n    const { renderer, camera } = this._gfx\r\n    if (!renderer) {\r\n      throw new Error('No renderer is available to toggle WebVR')\r\n    }\r\n\r\n    // nullify webxr callback for animation frame\r\n    renderer.setAnimationLoop(null)\r\n    const session = renderer.xr.getSession()\r\n    if (session) {\r\n      session.end()\r\n    }\r\n    renderer.xr.enabled = false\r\n    // remove button of VR entering\r\n    if (this._button) {\r\n      this._button.style.display = 'none'\r\n    }\r\n    // restore fog param\r\n    settings.set('fog', this._mainFog)\r\n\r\n    this._unplugVRNodesFromScene(camera)\r\n\r\n    // make some Miew job\r\n    if (this._onToggle) {\r\n      this._onToggle(false)\r\n    }\r\n  }\r\n\r\n  _unplugVRNodesFromScene(camera) {\r\n    // restore common camera\r\n    if (this._mainCamera && camera) {\r\n      camera.copy(this._mainCamera)\r\n    }\r\n    // turn off webvr transformation\r\n    const root = this._molContainer.children[0]\r\n    if (root) {\r\n      this._gfx.scene.add(root)\r\n    }\r\n    this._molContainer.parent.remove(this._molContainer)\r\n    if (this._user) {\r\n      this._gfx.scene.remove(this._user)\r\n    }\r\n    // free scene nodes\r\n    this._molContainer = null\r\n    this._user = null\r\n    this._scalingPivot = null\r\n    this._user = null\r\n    this._controller1 = null\r\n    this._controller2 = null\r\n  }\r\n\r\n  _createControllerMesh() {\r\n    // visualize controllers with cylinders\r\n    const geometry = new CylinderGeometry(0.04, 0.04, 0.3)\r\n    const material = new UberMaterial()\r\n    material.setValues({ lights: false, overrideColor: true })\r\n    material.setUberOptions({ fixedColor: new Color(0x4444ff) })\r\n    material.updateUniforms()\r\n    const cylinder = new Mesh(geometry, material)\r\n    cylinder.rotateX(-Math.PI / 2)\r\n    return cylinder\r\n  }\r\n\r\n  updateMoleculeScale() {\r\n    if (!this._controller1 || !this._controller2) {\r\n      return\r\n    }\r\n\r\n    const self = this\r\n    // update molecule scaling by controllers\r\n    if (self._pressedGripsCounter === 2) {\r\n      // recalc scaling pivot\r\n      gfxutils.getMiddlePoint(\r\n        self._controller1.position,\r\n        self._controller2.position,\r\n        self._scalingPivot.position\r\n      )\r\n      // recalc scaler\r\n      const dist = self._controller1.position.distanceTo(\r\n        self._controller2.position\r\n      )\r\n      const scaler = dist / self._distance\r\n      self._scalingPivot.scale.multiplyScalar(scaler)\r\n      // save cur distance for next frame\r\n      self._distance = dist\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reposition molecule right before the camera.\r\n   * @note The proper way is to initiate headset in the place of common Miew's camera.\r\n   * But threejs limitations on setting new XRReferenceSpace enforce the molecule repositioning\r\n   * Hope, something will change.\r\n   */\r\n  moveSceneBehindHeadset() {\r\n    const gfx = this._gfx\r\n    const { camera } = gfx\r\n\r\n    // set container position in camera space\r\n    const container = this._molContainer\r\n    container.matrix.identity()\r\n    container.position.set(0, 0, -4.0)\r\n    container.updateMatrix()\r\n\r\n    // update container world matrix\r\n    container.matrixWorld.multiplyMatrices(camera.matrixWorld, container.matrix)\r\n    // readd to scene\r\n    gfx.scene.addSavingWorldTransform(container)\r\n    if (this._onToggle) {\r\n      this._onToggle(true)\r\n    }\r\n  }\r\n\r\n  getCanvas() {\r\n    const gfx = this._gfx\r\n    return gfx && gfx.renderer ? gfx.renderer.domElement : null\r\n  }\r\n}\r\n",
		"// eslint-disable-next-line\r\n//@ts-nocheck\r\nimport { Spinner } from 'spin.js'\r\nimport Stats from './gfx/Stats'\r\nimport utils from './utils'\r\nimport JobHandle from './utils/JobHandle'\r\nimport options from './options'\r\nimport settings from './settings'\r\nimport chem from './chem'\r\nimport Visual from './Visual'\r\nimport ComplexVisual from './ComplexVisual'\r\nimport Complex from './chem/Complex'\r\nimport VolumeVisual from './VolumeVisual'\r\nimport io from './io/io'\r\nimport modes from './gfx/modes'\r\nimport colorers from './gfx/colorers'\r\nimport palettes from './gfx/palettes'\r\nimport materials from './gfx/materials'\r\nimport Representation from './gfx/Representation'\r\nimport CSS2DRenderer from './gfx/CSS2DRenderer'\r\nimport ObjectControls from './ui/ObjectControls'\r\nimport Picker from './ui/Picker'\r\nimport Axes from './gfx/Axes'\r\nimport gfxutils from './gfx/gfxutils'\r\nimport meshutils from './gfx/meshutils'\r\nimport FrameInfo from './gfx/FrameInfo'\r\nimport meshes from './gfx/meshes/meshes'\r\nimport LinesObject from './gfx/objects/LinesObj'\r\nimport UberMaterial from './gfx/shaders/UberMaterial'\r\nimport OutlineMaterial from './gfx/shaders/OutlineMaterial'\r\nimport FXAAMaterial from './gfx/shaders/FXAAMaterial'\r\nimport AOMaterial from './gfx/shaders/AOMaterial'\r\nimport AOHorBlurMaterial from './gfx/shaders/AOHorBlurMaterial'\r\nimport AOVertBlurWithBlendMaterial from './gfx/shaders/AOVertBlurWithBlendMaterial'\r\nimport AnaglyphMaterial from './gfx/shaders/AnaglyphMaterial'\r\nimport VolumeMaterial from './gfx/shaders/VolumeMaterial'\r\nimport ViewInterpolator from './gfx/ViewInterpolator'\r\nimport EventDispatcher from './utils/EventDispatcher'\r\nimport logger from './utils/logger'\r\nimport Cookies from './utils/Cookies'\r\nimport capabilities from './gfx/capabilities'\r\nimport WebVRPoC from './gfx/vr/WebVRPoC'\r\nimport './Miew.scss'\r\nimport vertexScreenQuadShader from './gfx/shaders/ScreenQuad.vert'\r\nimport fragmentScreenQuadFromDistTex from './gfx/shaders/ScreenQuadFromDistortionTex.frag'\r\nimport {\r\n  AmbientLight,\r\n  Box3,\r\n  DepthTexture,\r\n  DirectionalLight,\r\n  FloatType,\r\n  Fog,\r\n  Group,\r\n  Line,\r\n  LinearFilter,\r\n  LineSegments,\r\n  Matrix4,\r\n  Mesh,\r\n  NearestFilter,\r\n  PCFShadowMap,\r\n  PerspectiveCamera,\r\n  RGBAFormat,\r\n  Scene,\r\n  Sphere,\r\n  StereoCamera,\r\n  UnsignedShortType,\r\n  Vector2,\r\n  Vector3,\r\n  WebGL1Renderer,\r\n  WebGLRenderTarget,\r\n  Color,\r\n  Euler,\r\n  Vector4,\r\n  Quaternion,\r\n  MathUtils,\r\n  NoBlending,\r\n  RawShaderMaterial,\r\n  OrthographicCamera\r\n} from 'three'\r\nimport {\r\n  assign,\r\n  merge,\r\n  isString,\r\n  head,\r\n  defaults,\r\n  isUndefined,\r\n  isNumber,\r\n  get,\r\n  isArray,\r\n  isEmpty\r\n} from 'lodash'\r\n\r\nconst { selectors, Atom, Residue, Chain, Molecule } = chem\r\n\r\nconst EDIT_MODE = { COMPLEX: 0, COMPONENT: 1, FRAGMENT: 2 }\r\n\r\nconst LOADER_NOT_FOUND = 'Could not find suitable loader for this source'\r\nconst PARSER_NOT_FOUND = 'Could not find suitable parser for this source'\r\n\r\nconst { createElement } = utils\r\n\r\nfunction updateFogRange(fog, center, radius) {\r\n  fog.near = center - radius * settings.now.fogNearFactor\r\n  fog.far = center + radius * settings.now.fogFarFactor\r\n}\r\n\r\nfunction removeExtension(fileName) {\r\n  const dot = fileName.lastIndexOf('.')\r\n  if (dot >= 0) {\r\n    fileName = fileName.substr(0, dot)\r\n  }\r\n  return fileName\r\n}\r\n\r\nfunction hasValidResidues(complex) {\r\n  let hasValidRes = false\r\n  complex.forEachComponent((component) => {\r\n    component.forEachResidue((residue) => {\r\n      if (residue._isValid) {\r\n        hasValidRes = true\r\n      }\r\n    })\r\n  })\r\n  return hasValidRes\r\n}\r\n\r\nfunction reportProgress(log, action, percent) {\r\n  const TOTAL_PERCENT = 100\r\n  if (percent !== undefined) {\r\n    log.debug(`${action}... ${Math.floor(percent * TOTAL_PERCENT)}%`)\r\n  } else {\r\n    log.debug(`${action}...`)\r\n  }\r\n}\r\n\r\nfunction chooseFogColor() {\r\n  return settings.now.fogColorEnable\r\n    ? settings.now.fogColor\r\n    : settings.now.bg.color\r\n}\r\n\r\n/**\r\n * Replace viewer container contents with a DOM element.\r\n * @param {HTMLElement} container - parent container.\r\n * @param {HTMLElement} element - DOM element to show.\r\n * @private\r\n */\r\nfunction _setContainerContents(container, element) {\r\n  const parent = container\r\n  while (parent.firstChild) {\r\n    parent.removeChild(parent.firstChild)\r\n  }\r\n  parent.appendChild(element)\r\n}\r\n\r\nfunction arezSpritesSupported(context) {\r\n  return context.getExtension('EXT_frag_depth')\r\n}\r\n\r\nfunction isAOSupported(context) {\r\n  return (\r\n    context.getExtension('WEBGL_depth_texture') &&\r\n    context.getExtension('WEBGL_draw_buffers')\r\n  )\r\n}\r\n\r\nconst rePdbId = /^(?:(pdb|cif|mmtf|ccp4|dsn6):\\s*)?(\\d[a-z\\d]{3})$/i\r\nconst rePubchem = /^(?:pc|pubchem):\\s*([a-z]+)$/i\r\nconst reUrlScheme = /^([a-z][a-z\\d\\-+.]*):/i\r\n\r\nfunction resolveSourceShortcut(source, opts) {\r\n  if (!isString(source)) {\r\n    return source\r\n  }\r\n\r\n  // e.g. \"mmtf:1CRN\"\r\n  const matchesPdbId = rePdbId.exec(source)\r\n  if (matchesPdbId) {\r\n    let [, format = 'pdb', id] = matchesPdbId\r\n\r\n    format = format.toLowerCase()\r\n    id = id.toUpperCase()\r\n\r\n    switch (format) {\r\n      case 'pdb':\r\n        source = `https://files.rcsb.org/download/${id}.pdb`\r\n        break\r\n      case 'cif':\r\n        source = `https://files.rcsb.org/download/${id}.cif`\r\n        break\r\n      case 'mmtf':\r\n        source = `https://mmtf.rcsb.org/v1.0/full/${id}`\r\n        break\r\n      case 'ccp4':\r\n        source = `https://www.ebi.ac.uk/pdbe/coordinates/files/${id.toLowerCase()}.ccp4`\r\n        break\r\n      case 'dsn6':\r\n        source = `https://edmaps.rcsb.org/maps/${id.toLowerCase()}_2fofc.dsn6`\r\n        break\r\n      default:\r\n        throw new Error('Unexpected data format shortcut')\r\n    }\r\n\r\n    opts.fileType = format\r\n    opts.fileName = `${id}.${format}`\r\n    opts.sourceType = 'url'\r\n    return source\r\n  }\r\n\r\n  // e.g. \"pc:aspirin\"\r\n  const matchesPubchem = rePubchem.exec(source)\r\n  if (matchesPubchem) {\r\n    const compound = matchesPubchem[1].toLowerCase()\r\n    source = `https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/name/${compound}/JSON?record_type=3d`\r\n    opts.fileType = 'pubchem'\r\n    opts.fileName = `${compound}.json`\r\n    opts.sourceType = 'url'\r\n    return source\r\n  }\r\n\r\n  // otherwise is should be an URL\r\n  if (opts.sourceType === 'url' || opts.sourceType === undefined) {\r\n    opts.sourceType = 'url'\r\n\r\n    // e.g. \"./data/1CRN.pdb\"\r\n    if (!reUrlScheme.test(source)) {\r\n      source = utils.resolveURL(source)\r\n    }\r\n  }\r\n\r\n  return source\r\n}\r\n\r\nfunction updateBinaryMode(opts) {\r\n  let { binary } = opts\r\n\r\n  // detect by format\r\n  if (opts.fileType !== undefined) {\r\n    const TheParser = head(io.parsers.find({ format: opts.fileType }))\r\n    if (TheParser) {\r\n      binary = TheParser.binary || false\r\n    } else {\r\n      throw new Error('Could not find suitable parser for this format')\r\n    }\r\n  }\r\n\r\n  // detect by file extension\r\n  if (binary === undefined && opts.fileExt !== undefined) {\r\n    const TheParser = head(io.parsers.find({ ext: opts.fileExt }))\r\n    if (TheParser) {\r\n      binary = TheParser.binary || false\r\n    }\r\n  }\r\n\r\n  // temporary workaround for animation\r\n  if (opts.fileExt !== undefined && opts.fileExt.toLowerCase() === '.man') {\r\n    opts.binary = true\r\n    opts.animation = true // who cares?\r\n  }\r\n\r\n  // update if detected\r\n  if (binary !== undefined) {\r\n    if (opts.binary !== undefined && opts.binary !== binary) {\r\n      opts.context.logger.warn('Overriding incorrect binary mode')\r\n    }\r\n  }\r\n\r\n  opts.binary = binary || false\r\n}\r\n\r\nfunction _fetchData(source, opts, job) {\r\n  return new Promise((resolve) => {\r\n    if (job.shouldCancel()) {\r\n      throw new Error('Operation cancelled')\r\n    }\r\n    job.notify({ type: 'fetching' })\r\n\r\n    // allow for source shortcuts\r\n    source = resolveSourceShortcut(source, opts)\r\n\r\n    // detect a proper loader\r\n    const TheLoader = head(io.loaders.find({ type: opts.sourceType, source }))\r\n    if (!TheLoader) {\r\n      throw new Error(LOADER_NOT_FOUND)\r\n    }\r\n\r\n    // split file name\r\n    const fileName = opts.fileName || TheLoader.extractName(source)\r\n    if (fileName) {\r\n      const [name, fileExt] = utils.splitFileName(fileName)\r\n      defaults(opts, { name, fileExt, fileName })\r\n    }\r\n\r\n    // should it be text or binary?\r\n    updateBinaryMode(opts)\r\n\r\n    // FIXME: All new settings retrieved from server are applied after the loading is complete. However, we need some\r\n    // flags to alter the loading process itself. Here we apply them in advance. Dirty hack. Kill the server, remove\r\n    // all hacks and everybody's happy.\r\n    let newOptions = get(opts, 'preset.expression')\r\n    if (!isUndefined(newOptions)) {\r\n      newOptions = JSON.parse(newOptions)\r\n      if (newOptions && newOptions.settings) {\r\n        const keys = ['singleUnit']\r\n        for (\r\n          let keyIndex = 0, keyCount = keys.length;\r\n          keyIndex < keyCount;\r\n          ++keyIndex\r\n        ) {\r\n          const key = keys[keyIndex]\r\n          const value = get(newOptions.settings, key)\r\n          if (!isUndefined(value)) {\r\n            settings.set(key, value)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // create a loader\r\n    const loader = new TheLoader(source, opts)\r\n    loader.context = opts.context\r\n    job.addEventListener('cancel', () => loader.abort())\r\n\r\n    loader.addEventListener('progress', (event) => {\r\n      if (event.lengthComputable && event.total > 0) {\r\n        reportProgress(loader.logger, 'Fetching', event.loaded / event.total)\r\n      } else {\r\n        reportProgress(loader.logger, 'Fetching')\r\n      }\r\n    })\r\n\r\n    console.time('fetch')\r\n    const promise = loader\r\n      .load()\r\n      .then((data) => {\r\n        console.timeEnd('fetch')\r\n        opts.context.logger.info('Fetching finished')\r\n        job.notify({ type: 'fetchingDone', data })\r\n        return data\r\n      })\r\n      .catch((error) => {\r\n        console.timeEnd('fetch')\r\n        opts.context.logger.debug(error.message)\r\n        if (error.stack) {\r\n          opts.context.logger.debug(error.stack)\r\n        }\r\n        opts.context.logger.error('Fetching failed')\r\n        job.notify({ type: 'fetchingDone', error })\r\n        throw error\r\n      })\r\n    resolve(promise)\r\n  })\r\n}\r\n\r\nfunction _parseData(data, opts, job) {\r\n  if (job.shouldCancel()) {\r\n    return Promise.reject(new Error('Operation cancelled'))\r\n  }\r\n\r\n  job.notify({ type: 'parsing' })\r\n\r\n  const TheParser = head(\r\n    io.parsers.find({ format: opts.fileType, ext: opts.fileExt, data })\r\n  )\r\n  if (!TheParser) {\r\n    return Promise.reject(new Error('Could not find suitable parser'))\r\n  }\r\n\r\n  const parser = new TheParser(data, opts)\r\n  parser.context = opts.context\r\n  job.addEventListener('cancel', () => parser.abort())\r\n\r\n  console.time('parse')\r\n  return parser\r\n    .parse()\r\n    .then((dataSet) => {\r\n      console.timeEnd('parse')\r\n      job.notify({ type: 'parsingDone', data: dataSet })\r\n      return dataSet\r\n    })\r\n    .catch((error) => {\r\n      console.timeEnd('parse')\r\n      opts.error = error\r\n      opts.context.logger.debug(error.message)\r\n      if (error.stack) {\r\n        opts.context.logger.debug(error.stack)\r\n      }\r\n      opts.context.logger.error('Parsing failed')\r\n      job.notify({ type: 'parsingDone', error })\r\n      throw error\r\n    })\r\n}\r\n\r\nfunction _includesInCurSelection(atom, selectionBit) {\r\n  return atom.mask & (1 << selectionBit)\r\n}\r\n\r\nfunction _includesInSelector(atom, selector) {\r\n  return selector.selector.includesAtom(atom)\r\n}\r\n\r\n// ////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Main 3D Molecular Viewer class.\r\n *\r\n * @param {object} opts - Viewer options.\r\n * @param {HTMLElement=} opts.container - DOM element that serves as a viewer container.\r\n * @param {object=} opts.settings - An object with properties to override default settings.\r\n * @param {string=} opts.settingsCookie='settings' - The name of the cookie to save current settings to.\r\n * @param {string=} opts.cookiePath='/' - The path option for cookies. Defaults to root.\r\n *\r\n * @exports Miew\r\n * @constructor\r\n */\r\n\r\nexport interface MiewOptions {\r\n  container?: HTMLDivElement | null\r\n  settingsCookie?: string\r\n  cookiePath?: string\r\n  load?: string\r\n  settings?: {\r\n    palette?: string\r\n    shadow?: object\r\n    ao?: boolean\r\n    aromatic?: boolean\r\n    autobuild?: boolean\r\n    autoRotation?: number\r\n    autoRotationAxisFixed?: boolean\r\n    axes?: boolean\r\n    colorers?: object\r\n    editing?: boolean\r\n    fbxprec?: number\r\n    fox?: boolean\r\n    fogFarFactor?: number\r\n    fogNearFactor?: number\r\n    fps?: boolean\r\n    fxaa?: boolean\r\n    interpolateViews?: boolean\r\n    maxfps?: number\r\n    modes?: object\r\n    outline?: boolean\r\n    pick?: string\r\n    picking?: boolean\r\n    singleUnit?: boolean\r\n    stereo?: string\r\n    suspendRender?: boolean\r\n    translationSpeed?: number\r\n    transparency?: string\r\n    zooming?: boolean\r\n    zSprite?: boolean\r\n  }\r\n}\r\n\r\nexport class Miew extends EventDispatcher {\r\n  constructor(opts: MiewOptions) {\r\n    super()\r\n    this._opts = merge(\r\n      {\r\n        settingsCookie: 'settings',\r\n        cookiePath: '/'\r\n      },\r\n      opts\r\n    )\r\n    /** @type {?object} */\r\n    this._gfx = null\r\n    /** @type {ViewInterpolator} */\r\n    this._interpolator = new ViewInterpolator()\r\n    /** @type {HTMLElement} */\r\n    this._container =\r\n      (opts && opts.container) ||\r\n      document.getElementById('miew-container') ||\r\n      head(document.getElementsByClassName('miew-container')) ||\r\n      document.body\r\n    /** @type {HTMLElement} */\r\n    this._containerRoot = this._container\r\n\r\n    /** @type {boolean} */\r\n    this._running = false\r\n    /** @type {boolean} */\r\n    this._halting = false\r\n    /** @type {boolean} */\r\n    this._building = false\r\n    /** @type {boolean} */\r\n    this._needRender = true\r\n    /** @type {boolean} */\r\n    this._hotKeysEnabled = true\r\n\r\n    /** @type {Settings} */\r\n    this.settings = settings\r\n    const log = logger\r\n    log.console = DEBUG\r\n    log.level = DEBUG ? 'debug' : 'info'\r\n    /**\r\n     * @type {Logger}\r\n     * @example\r\n     * miew.logger.addEventListener('message', function _onLogMessage(evt) {\r\n     *   console.log(evt.message);\r\n     * });\r\n     */\r\n    this.logger = log\r\n\r\n    this._cookies = new Cookies(this)\r\n    this.restoreSettings()\r\n    if (opts && opts.settings) {\r\n      this.settings.set(opts.settings)\r\n    }\r\n\r\n    /** @type {?Spinner} */\r\n    this._spinner = null\r\n    /** @type {JobHandle[]} */\r\n    this._loading = []\r\n    /** @type {?number}\r\n     * @deprecated until Animation system refactoring\r\n     */\r\n    this._animInterval = null\r\n\r\n    /** @type {object} */\r\n    this._visuals = {}\r\n    /** @type {?string} */\r\n    this._curVisualName = null\r\n\r\n    /** @type {array} */\r\n    this._objects = []\r\n\r\n    /** @type {object} */\r\n    this._sourceWindow = null\r\n\r\n    this.reset()\r\n\r\n    if (this._repr) {\r\n      log.debug(\r\n        `Selected ${this._repr.mode.name} mode with ${this._repr.colorer.name} colorer.`\r\n      )\r\n    }\r\n\r\n    const self = this\r\n    Miew.registeredPlugins.forEach((plugin) => {\r\n      plugin.call(self)\r\n    })\r\n\r\n    this._initOnSettingsChanged()\r\n    this.shadowMatrix = new Matrix4()\r\n    this.direction = new Vector3()\r\n    this.OBB = { center: new Vector3(), halfSize: new Vector3() }\r\n    this._bSphereForOneVisual = new Sphere()\r\n    this._bBoxForOneVisual = new Box3()\r\n    this._bBox = new Box3()\r\n    this._invMatrix = new Matrix4()\r\n    this._points = [new Vector3(), new Vector3(), new Vector3(), new Vector3()]\r\n    this._anaglyphMat = new AnaglyphMaterial()\r\n    this._size = new Vector2()\r\n    this._scene = new Scene()\r\n    this._camera = new OrthographicCamera(-1.0, 1.0, 1.0, -1.0, -500, 1000)\r\n    this._material = new RawShaderMaterial({\r\n      uniforms: {\r\n        srcTex: { type: 't', value: null },\r\n        aberration: { type: 'fv3', value: new Vector3(1.0) }\r\n      },\r\n      vertexShader: vertexScreenQuadShader,\r\n      fragmentShader: fragmentScreenQuadFromDistTex,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    })\r\n    this._geo = gfxutils.buildDistorionMesh(\r\n      10,\r\n      10,\r\n      settings.now.debug.stereoBarrel\r\n    )\r\n    this._outlineMaterial = new OutlineMaterial({ depth: true })\r\n    this.pars = {\r\n      minFilter: NearestFilter,\r\n      magFilter: NearestFilter,\r\n      format: RGBAFormat\r\n    }\r\n    this.VERSION =\r\n      (typeof PACKAGE_VERSION !== 'undefined' && PACKAGE_VERSION) || '0.0.0-dev'\r\n    // Uncomment this to get debug trace:\r\n    // this.debugTracer = new utils.DebugTracer(Miew);\r\n  }\r\n\r\n  getMaxRepresentationCount() {\r\n    return ComplexVisual.NUM_REPRESENTATION_BITS\r\n  }\r\n\r\n  /**\r\n   * Update Shadow Camera target position and frustum.\r\n   * @private\r\n   */\r\n  _updateShadowCamera() {\r\n    this._gfx.scene.updateMatrixWorld()\r\n    for (let i = 0; i < this._gfx.scene.children.length; i++) {\r\n      if (this._gfx.scene.children[i].type === 'DirectionalLight') {\r\n        const light = this._gfx.scene.children[i]\r\n        this.shadowMatrix.copy(light.shadow.camera.matrixWorldInverse)\r\n        this.getOBB(this.shadowMatrix, this.OBB)\r\n\r\n        this.direction.subVectors(light.target.position, light.position)\r\n        light.position.subVectors(this.OBB.center, this.direction)\r\n        light.target.position.copy(this.OBB.center)\r\n\r\n        light.shadow.bias = 0.09\r\n        light.shadow.camera.bottom = -this.OBB.halfSize.y\r\n        light.shadow.camera.top = this.OBB.halfSize.y\r\n        light.shadow.camera.right = this.OBB.halfSize.x\r\n        light.shadow.camera.left = -this.OBB.halfSize.x\r\n        light.shadow.camera.near = this.direction.length() - this.OBB.halfSize.z\r\n        light.shadow.camera.far = this.direction.length() + this.OBB.halfSize.z\r\n\r\n        light.shadow.camera.updateProjectionMatrix()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the viewer.\r\n   * @returns {boolean} true on success.\r\n   * @throws Forwards exception raised during initialization.\r\n   * @see Miew#term\r\n   */\r\n  init() {\r\n    const container = this._container\r\n    const elem = utils.createElement('div', { class: 'miew-canvas' })\r\n    _setContainerContents(container, elem)\r\n    this._container = elem\r\n\r\n    const frag = document.createDocumentFragment()\r\n    frag.appendChild(\r\n      (this._msgMode = createElement(\r\n        'div',\r\n        { class: 'mode-message overlay' },\r\n        createElement('p', {}, 'COMPONENT EDIT MODE')\r\n      ))\r\n    )\r\n    frag.appendChild(\r\n      (this._msgAtomInfo = createElement(\r\n        'div',\r\n        { class: 'atom-info overlay' },\r\n        createElement('p', {}, '')\r\n      ))\r\n    )\r\n    container.appendChild(frag)\r\n\r\n    if (this._gfx !== null) {\r\n      // block double init\r\n      return true\r\n    }\r\n\r\n    const self = this\r\n    this._showMessage('Viewer is being initialized...')\r\n    try {\r\n      this._initGfx()\r\n\r\n      this._initListeners()\r\n      this._spinner = new Spinner({\r\n        lines: 13,\r\n        length: 28,\r\n        width: 14,\r\n        radius: 42,\r\n        color: '#fff',\r\n        zIndex: 700\r\n      })\r\n\r\n      window.addEventListener('keydown', (event) => {\r\n        self._onKeyDown(event)\r\n      })\r\n\r\n      window.addEventListener('keyup', (event) => {\r\n        self._onKeyUp(event)\r\n      })\r\n\r\n      this._objectControls = new ObjectControls(\r\n        this._gfx.root,\r\n        this._gfx.pivot,\r\n        this._gfx.camera,\r\n        this._gfx.renderer.domElement,\r\n        () => self._getAltObj()\r\n      )\r\n      this._objectControls.addEventListener('change', (e) => {\r\n        if (settings.now.shadow.on) {\r\n          self._updateShadowCamera()\r\n        }\r\n        // route rotate, zoom, translate and translatePivot events to the external API\r\n        switch (e.action) {\r\n          case 'rotate':\r\n            self.dispatchEvent({ type: 'rotate', quaternion: e.quaternion })\r\n            break\r\n          case 'zoom':\r\n            self.dispatchEvent({ type: 'zoom', factor: e.factor })\r\n            break\r\n          default:\r\n            self.dispatchEvent({ type: e.action })\r\n        }\r\n        self.dispatchEvent({ type: 'transform' })\r\n        self._needRender = true\r\n      })\r\n\r\n      const gfx = this._gfx\r\n      this._picker = new Picker(gfx.root, gfx.camera, gfx.renderer.domElement)\r\n      this._picker.addEventListener('newpick', (event) => {\r\n        self._onPick(event)\r\n      })\r\n      this._picker.addEventListener('dblclick', (event) => {\r\n        self.center(event)\r\n      })\r\n    } catch (error) {\r\n      if (\r\n        error.name === 'TypeError' &&\r\n        error.message === \"Cannot read property 'getExtension' of null\"\r\n      ) {\r\n        this._showMessage('Could not create WebGL context.')\r\n      } else if (error.message.search(/webgl/i) > 1) {\r\n        this._showMessage(error.message)\r\n      } else {\r\n        this._showMessage('Viewer initialization failed.')\r\n        throw error\r\n      }\r\n      return false\r\n    }\r\n\r\n    // automatically load default file\r\n    const file = this._opts && this._opts.load\r\n    if (file) {\r\n      const type = this._opts && this._opts.type\r\n      this.load(file, { fileType: type, keepRepsInfo: true })\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Terminate the viewer completely.\r\n   * @see Miew#init\r\n   */\r\n  term() {\r\n    this._showMessage('Viewer has been terminated.')\r\n    this._loading.forEach((job) => {\r\n      job.cancel()\r\n    })\r\n    this._loading.length = 0\r\n    this.halt()\r\n    this._gfx = null\r\n  }\r\n\r\n  /**\r\n   * Display message inside the viewer container, hiding WebGL canvas.\r\n   * @param {string} msg - Message to show.\r\n   * @private\r\n   */\r\n  _showMessage(msg) {\r\n    const element = document.createElement('div')\r\n    element.setAttribute('class', 'miew-message')\r\n    element\r\n      .appendChild(document.createElement('p'))\r\n      .appendChild(document.createTextNode(msg))\r\n    _setContainerContents(this._container, element)\r\n  }\r\n\r\n  /**\r\n   * Display WebGL canvas inside the viewer container, hiding any message shown.\r\n   * @private\r\n   */\r\n  _showCanvas() {\r\n    _setContainerContents(this._container, this._gfx.renderer.domElement)\r\n  }\r\n\r\n  _requestAnimationFrame(callback) {\r\n    const { xr } = this._gfx.renderer\r\n    if (xr && xr.enabled) {\r\n      this._gfx.renderer.setAnimationLoop(callback)\r\n      return\r\n    }\r\n    requestAnimationFrame(callback)\r\n  }\r\n\r\n  /**\r\n   * Initialize WebGL and set 3D scene up.\r\n   * @private\r\n   */\r\n  _initGfx() {\r\n    const gfx = {\r\n      width: this._container.clientWidth,\r\n      height: this._container.clientHeight\r\n    }\r\n\r\n    const webGLOptions = {\r\n      preserveDrawingBuffer: true,\r\n      alpha: true,\r\n      premultipliedAlpha: false\r\n    }\r\n    if (settings.now.antialias) {\r\n      webGLOptions.antialias = true\r\n    }\r\n\r\n    gfx.renderer2d = new CSS2DRenderer()\r\n\r\n    gfx.renderer = new WebGL1Renderer(webGLOptions)\r\n    gfx.renderer.shadowMap.enabled = settings.now.shadow.on\r\n    gfx.renderer.shadowMap.autoUpdate = false\r\n    gfx.renderer.shadowMap.type = PCFShadowMap\r\n    capabilities.init(gfx.renderer)\r\n\r\n    // z-sprites and ambient occlusion possibility\r\n    if (!arezSpritesSupported(gfx.renderer.getContext())) {\r\n      settings.set('zSprites', false)\r\n    }\r\n    if (!isAOSupported(gfx.renderer.getContext())) {\r\n      settings.set('ao', false)\r\n    }\r\n\r\n    gfx.renderer.autoClear = false\r\n    gfx.renderer.setPixelRatio(window.devicePixelRatio)\r\n    gfx.renderer.setSize(gfx.width, gfx.height)\r\n    gfx.renderer.setClearColor(\r\n      settings.now.bg.color,\r\n      Number(!settings.now.bg.transparent)\r\n    )\r\n    gfx.renderer.clearColor()\r\n\r\n    gfx.renderer2d.setSize(gfx.width, gfx.height)\r\n\r\n    gfx.camera = new PerspectiveCamera(\r\n      settings.now.camFov,\r\n      gfx.width / gfx.height,\r\n      settings.now.camNear,\r\n      settings.now.camFar\r\n    )\r\n    gfx.camera.setMinimalFov(settings.now.camFov)\r\n    gfx.camera.position.z = settings.now.camDistance\r\n    gfx.camera.updateProjectionMatrix()\r\n    gfx.camera.layers.set(gfxutils.LAYERS.DEFAULT)\r\n    gfx.camera.layers.enable(gfxutils.LAYERS.VOLUME)\r\n    gfx.camera.layers.enable(gfxutils.LAYERS.VOLUME_BFPLANE)\r\n\r\n    gfx.stereoCam = new StereoCamera()\r\n\r\n    gfx.scene = new Scene()\r\n\r\n    const color = chooseFogColor()\r\n    gfx.scene.fog = new Fog(color, settings.now.camNear, settings.now.camFar)\r\n\r\n    gfx.root = new gfxutils.RCGroup()\r\n    gfx.scene.add(gfx.root)\r\n\r\n    gfx.pivot = new gfxutils.RCGroup()\r\n    gfx.root.add(gfx.pivot)\r\n\r\n    gfx.selectionScene = new Scene()\r\n    gfx.selectionRoot = new Group()\r\n    gfx.selectionRoot.matrixAutoUpdate = false\r\n    gfx.selectionScene.add(gfx.selectionRoot)\r\n\r\n    gfx.selectionPivot = new Group()\r\n    gfx.selectionPivot.matrixAutoUpdate = false\r\n    gfx.selectionRoot.add(gfx.selectionPivot)\r\n\r\n    const light12 = new DirectionalLight(0xffffff, 0.45)\r\n    light12.position.set(0, 0.414, 1)\r\n    light12.layers.enable(gfxutils.LAYERS.TRANSPARENT)\r\n    light12.castShadow = true\r\n    light12.shadow.bias = 0.09\r\n    light12.shadow.radius = settings.now.shadow.radius\r\n    light12.shadow.camera.layers.set(gfxutils.LAYERS.SHADOWMAP)\r\n\r\n    const pixelRatio = gfx.renderer.getPixelRatio()\r\n    const shadowMapSize = Math.max(gfx.width, gfx.height) * pixelRatio\r\n    light12.shadow.mapSize.width = shadowMapSize\r\n    light12.shadow.mapSize.height = shadowMapSize\r\n    light12.target.position.set(0.0, 0.0, 0.0)\r\n    gfx.scene.add(light12)\r\n    gfx.scene.add(light12.target)\r\n\r\n    const light3 = new AmbientLight(0x666666)\r\n    light3.layers.enable(gfxutils.LAYERS.TRANSPARENT)\r\n    gfx.scene.add(light3)\r\n\r\n    // add axes\r\n    gfx.axes = new Axes(gfx.root, gfx.camera)\r\n    const deviceWidth = gfx.width * pixelRatio\r\n    const deviceHeight = gfx.height * pixelRatio\r\n\r\n    gfx.offscreenBuf = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: NearestFilter,\r\n      format: RGBAFormat,\r\n      depthBuffer: true\r\n    })\r\n\r\n    if (gfx.renderer.getContext().getExtension('WEBGL_depth_texture')) {\r\n      gfx.offscreenBuf.depthTexture = new DepthTexture()\r\n      gfx.offscreenBuf.depthTexture.type = UnsignedShortType\r\n    }\r\n\r\n    gfx.offscreenBuf2 = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      format: RGBAFormat,\r\n      depthBuffer: false\r\n    })\r\n\r\n    gfx.offscreenBuf3 = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      format: RGBAFormat,\r\n      depthBuffer: false\r\n    })\r\n\r\n    gfx.offscreenBuf4 = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      format: RGBAFormat,\r\n      depthBuffer: false\r\n    })\r\n\r\n    gfx.volBFTex = gfx.offscreenBuf3\r\n    gfx.volFFTex = gfx.offscreenBuf4\r\n    gfx.volWFFTex = gfx.offscreenBuf\r\n\r\n    // use float textures for volume rendering if possible\r\n    if (gfx.renderer.getContext().getExtension('OES_texture_float')) {\r\n      gfx.offscreenBuf5 = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n        minFilter: LinearFilter,\r\n        magFilter: LinearFilter,\r\n        format: RGBAFormat,\r\n        type: FloatType,\r\n        depthBuffer: false\r\n      })\r\n\r\n      gfx.offscreenBuf6 = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n        minFilter: LinearFilter,\r\n        magFilter: LinearFilter,\r\n        format: RGBAFormat,\r\n        type: FloatType,\r\n        depthBuffer: false\r\n      })\r\n\r\n      gfx.offscreenBuf7 = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n        minFilter: LinearFilter,\r\n        magFilter: LinearFilter,\r\n        format: RGBAFormat,\r\n        type: FloatType,\r\n        depthBuffer: true\r\n      })\r\n\r\n      gfx.volBFTex = gfx.offscreenBuf5\r\n      gfx.volFFTex = gfx.offscreenBuf6\r\n      gfx.volWFFTex = gfx.offscreenBuf7\r\n    } else {\r\n      this.logger.warn(\"Device doesn't support OES_texture_float extension\")\r\n    }\r\n\r\n    gfx.stereoBufL = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      format: RGBAFormat,\r\n      depthBuffer: false\r\n    })\r\n\r\n    gfx.stereoBufR = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      format: RGBAFormat,\r\n      depthBuffer: false\r\n    })\r\n\r\n    this._gfx = gfx\r\n    this._showCanvas()\r\n\r\n    this._embedWebXR(settings.now.stereo === 'WEBVR')\r\n\r\n    this._container.appendChild(gfx.renderer2d.getElement())\r\n\r\n    // add FPS counter\r\n    const stats = new Stats()\r\n    stats.domElement.style.position = 'absolute'\r\n    stats.domElement.style.right = '0'\r\n    stats.domElement.style.bottom = '0'\r\n    this._container.appendChild(stats.domElement)\r\n    this._fps = stats\r\n    this._fps.show(settings.now.fps)\r\n  }\r\n\r\n  /**\r\n   * Setup event listeners.\r\n   * @private\r\n   */\r\n  _initListeners() {\r\n    const self = this\r\n    window.addEventListener('resize', () => {\r\n      self._onResize()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Try to add numbers to the base name to make it unique among visuals\r\n   * @private\r\n   */\r\n  _makeUniqueVisualName(baseName) {\r\n    if (!baseName) {\r\n      return Math.random().toString()\r\n    }\r\n\r\n    let name = baseName\r\n    let suffix = 1\r\n    while (this._visuals.hasOwnProperty(name)) {\r\n      name = `${baseName} (${suffix.toString()})`\r\n      suffix++\r\n    }\r\n\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Add visual to the viewer\r\n   * @private\r\n   */\r\n  _addVisual(visual) {\r\n    if (!visual) {\r\n      return null\r\n    }\r\n\r\n    // change visual name in order to make it unique\r\n    const name = this._makeUniqueVisualName(visual.name)\r\n    visual.name = name\r\n\r\n    this._visuals[name] = visual\r\n    this._gfx.pivot.add(visual)\r\n    if (visual.getSelectionGeo) {\r\n      this._gfx.selectionPivot.add(visual.getSelectionGeo())\r\n    }\r\n\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Remove visual from the viewer\r\n   * @private\r\n   */\r\n  _removeVisual(visual) {\r\n    let name = ''\r\n    let obj = null\r\n    if (visual instanceof Visual) {\r\n      ;({ name } = visual)\r\n      obj = visual\r\n    } else if (typeof visual === 'string') {\r\n      name = visual\r\n      obj = this._visuals[name]\r\n    }\r\n\r\n    if (\r\n      !obj ||\r\n      !this._visuals.hasOwnProperty(name) ||\r\n      this._visuals[name] !== obj\r\n    ) {\r\n      return\r\n    }\r\n\r\n    if (name === this._curVisualName) {\r\n      this._curVisualName = undefined\r\n    }\r\n\r\n    delete this._visuals[name]\r\n    obj.release() // removes nodes from scene\r\n\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Call specified function for each Visual\r\n   * @private\r\n   */\r\n  _forEachVisual(callback) {\r\n    for (const name in this._visuals) {\r\n      if (this._visuals.hasOwnProperty(name)) {\r\n        callback(this._visuals[name])\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Release (destroy) all visuals in the scene\r\n   * @private\r\n   */\r\n  _releaseAllVisuals() {\r\n    if (!this._gfx || !this._gfx.pivot) {\r\n      return\r\n    }\r\n\r\n    for (const name in this._visuals) {\r\n      if (this._visuals.hasOwnProperty(name)) {\r\n        this._visuals[name].release()\r\n      }\r\n    }\r\n\r\n    this._visuals = {}\r\n  }\r\n\r\n  /**\r\n   * Call specified function for each ComplexVisual\r\n   * @private\r\n   */\r\n  _forEachComplexVisual(callback) {\r\n    if (!this._gfx || !this._gfx.pivot) {\r\n      return\r\n    }\r\n\r\n    for (const name in this._visuals) {\r\n      if (\r\n        this._visuals.hasOwnProperty(name) &&\r\n        this._visuals[name] instanceof ComplexVisual\r\n      ) {\r\n        callback(this._visuals[name])\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns ComplexVisual with specified name, or current (if not found), or any, or null\r\n   * @private\r\n   */\r\n  _getComplexVisual(name) {\r\n    name = name || this._curVisualName\r\n    let any = null\r\n    let named = null\r\n    this._forEachComplexVisual((visual) => {\r\n      any = visual\r\n      if (visual.name === name) {\r\n        named = visual\r\n      }\r\n    })\r\n    return named || any\r\n  }\r\n\r\n  /**\r\n   * Returns first found VolumeVisual (no more than one should be present actually)\r\n   * @private\r\n   */\r\n  _getVolumeVisual() {\r\n    let any = null\r\n    this._forEachVisual((visual) => {\r\n      if (visual instanceof VolumeVisual) {\r\n        any = visual\r\n      }\r\n    })\r\n    return any\r\n  }\r\n\r\n  /**\r\n   * Returns ComplexVisual corresponding to specified complex\r\n   * @private\r\n   */\r\n  _getVisualForComplex(complex) {\r\n    if (!complex) {\r\n      return null\r\n    }\r\n\r\n    let found = null\r\n    this._forEachComplexVisual((visual) => {\r\n      if (visual.getComplex() === complex) {\r\n        found = visual\r\n      }\r\n    })\r\n    return found\r\n  }\r\n\r\n  /*\r\n   * Get a list of names of visuals currently shown by the viewer\r\n   */\r\n  getVisuals() {\r\n    return Object.keys(this._visuals)\r\n  }\r\n\r\n  /*\r\n   * Get complex visuals count\r\n   */\r\n  getComplexVisualsCount() {\r\n    let count = 0\r\n    this._forEachComplexVisual(() => count++)\r\n    return count\r\n  }\r\n\r\n  /*\r\n   * Get current visual\r\n   */\r\n  getCurrentVisual() {\r\n    return this._curVisualName\r\n  }\r\n\r\n  /*\r\n   * Set current visual.\r\n   * All further operations will be performed on this visual (complex) if not stated otherwise.\r\n   */\r\n  setCurrentVisual(name) {\r\n    if (!this._visuals[name]) {\r\n      return\r\n    }\r\n\r\n    this._curVisualName = name\r\n  }\r\n\r\n  /**\r\n   * Run the viewer, start processing update/render frames periodically.\r\n   * Has no effect if already running.\r\n   * @see Miew#halt\r\n   */\r\n  run() {\r\n    if (!this._running) {\r\n      this._running = true\r\n      if (this._halting) {\r\n        this._halting = false\r\n        return\r\n      }\r\n\r\n      this._objectControls.enable(true)\r\n      this._interpolator.resume()\r\n\r\n      this._requestAnimationFrame(() => this._onTick())\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Request the viewer to stop.\r\n   * Will be processed during the next frame.\r\n   * @see Miew#run\r\n   */\r\n  halt() {\r\n    if (this._running) {\r\n      this._discardComponentEdit()\r\n      this._discardFragmentEdit()\r\n      this._objectControls.enable(false)\r\n      this._interpolator.pause()\r\n      this._halting = true\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Request the viewer to start / stop responsing\r\n   * on hot keys.\r\n   * @param enabled - start (true) or stop (false) response on hot keys.\r\n   */\r\n  enableHotKeys(enabled) {\r\n    this._hotKeysEnabled = enabled\r\n    this._objectControls.enableHotkeys(enabled)\r\n  }\r\n\r\n  /**\r\n   * Callback which processes window resize.\r\n   * @private\r\n   */\r\n  _onResize() {\r\n    this._needRender = true\r\n\r\n    const gfx = this._gfx\r\n    gfx.width = this._container.clientWidth\r\n    gfx.height = this._container.clientHeight\r\n\r\n    gfx.camera.aspect = gfx.width / gfx.height\r\n    gfx.camera.setMinimalFov(settings.now.camFov)\r\n    gfx.camera.updateProjectionMatrix()\r\n\r\n    gfx.renderer.setSize(gfx.width, gfx.height)\r\n    gfx.renderer2d.setSize(gfx.width, gfx.height)\r\n\r\n    this.dispatchEvent({ type: 'resize' })\r\n  }\r\n\r\n  _resizeOffscreenBuffers(width, height, stereo) {\r\n    const gfx = this._gfx\r\n    stereo = stereo || 'NONE'\r\n    const isAnaglyph = stereo === 'NONE' || stereo === 'ANAGLYPH'\r\n    const multi = isAnaglyph ? 1 : 0.5\r\n    gfx.offscreenBuf.setSize(multi * width, height)\r\n    gfx.offscreenBuf2.setSize(multi * width, height)\r\n    gfx.offscreenBuf3.setSize(multi * width, height)\r\n    gfx.offscreenBuf4.setSize(multi * width, height)\r\n    if (gfx.offscreenBuf5) {\r\n      gfx.offscreenBuf5.setSize(multi * width, height)\r\n    }\r\n    if (gfx.offscreenBuf6) {\r\n      gfx.offscreenBuf6.setSize(multi * width, height)\r\n    }\r\n    if (gfx.offscreenBuf7) {\r\n      gfx.offscreenBuf7.setSize(multi * width, height)\r\n    }\r\n    if (isAnaglyph) {\r\n      gfx.stereoBufL.setSize(width, height)\r\n      gfx.stereoBufR.setSize(width, height)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback which processes update/render frames.\r\n   * @private\r\n   */\r\n  _onTick() {\r\n    if (this._halting) {\r\n      this._running = false\r\n      this._halting = false\r\n      return\r\n    }\r\n\r\n    this._fps.update()\r\n\r\n    this._requestAnimationFrame(() => this._onTick())\r\n\r\n    this._onUpdate()\r\n    if (this._needRender) {\r\n      this._onRender()\r\n      this._needRender =\r\n        !settings.now.suspendRender || settings.now.stereo === 'WEBVR'\r\n    }\r\n  }\r\n\r\n  _getBSphereRadius() {\r\n    // calculate radius that would include all visuals\r\n    let radius = 0\r\n    this._forEachVisual((visual) => {\r\n      radius = Math.max(radius, visual.getBoundaries().boundingSphere.radius)\r\n    })\r\n    return radius * this._objectControls.getScale()\r\n  }\r\n\r\n  /**\r\n   * Calculate bounding box that would include all visuals and being axis aligned in world defined by\r\n   * transformation matrix: matrix\r\n   * @param {Matrix4} matrix - transformation matrix.\r\n   * @param {object}  OBB           - calculating bounding box.\r\n   * @param {Vector3} OBB.center    - OBB center.\r\n   * @param {Vector3} OBB.halfSize  - half magnitude of OBB sizes.\r\n   */\r\n  getOBB(matrix, OBB) {\r\n    this._bBox.makeEmpty()\r\n\r\n    this._forEachVisual((visual) => {\r\n      this._bSphereForOneVisual.copy(visual.getBoundaries().boundingSphere)\r\n      this._bSphereForOneVisual\r\n        .applyMatrix4(visual.matrixWorld)\r\n        .applyMatrix4(matrix)\r\n      this._bSphereForOneVisual.getBoundingBox(this._bBoxForOneVisual)\r\n      this._bBox.union(this._bBoxForOneVisual)\r\n    })\r\n    this._bBox.getCenter(OBB.center)\r\n\r\n    this._invMatrix.copy(matrix).invert()\r\n    OBB.center.applyMatrix4(this._invMatrix)\r\n\r\n    const { min } = this._bBox\r\n    const { max } = this._bBox\r\n    this._points[0].set(min.x, min.y, min.z) // 000\r\n    this._points[1].set(max.x, min.y, min.z) // 100\r\n    this._points[2].set(min.x, max.y, min.z) // 010\r\n    this._points[3].set(min.x, min.y, max.z) // 001\r\n    for (let i = 0, l = this._points.length; i < l; i++) {\r\n      this._points[i].applyMatrix4(this._invMatrix)\r\n    }\r\n\r\n    OBB.halfSize\r\n      .set(\r\n        Math.abs(this._points[0].x - this._points[1].x),\r\n        Math.abs(this._points[0].y - this._points[2].y),\r\n        Math.abs(this._points[0].z - this._points[3].z)\r\n      )\r\n      .multiplyScalar(0.5)\r\n  }\r\n\r\n  _updateFog() {\r\n    const gfx = this._gfx\r\n\r\n    if (settings.now.fog) {\r\n      if (typeof gfx.scene.fog === 'undefined' || gfx.scene.fog === null) {\r\n        const color = chooseFogColor()\r\n        gfx.scene.fog = new Fog(color)\r\n        this._setUberMaterialValues({ fog: settings.now.fog })\r\n      }\r\n      updateFogRange(\r\n        gfx.scene.fog,\r\n        gfx.camera.position.z,\r\n        this._getBSphereRadius()\r\n      )\r\n    } else if (gfx.scene.fog) {\r\n      gfx.scene.fog = undefined\r\n      this._setUberMaterialValues({ fog: settings.now.fog })\r\n    }\r\n  }\r\n\r\n  _onUpdate() {\r\n    if (\r\n      this.isScriptingCommandAvailable !== undefined &&\r\n      this.isScriptingCommandAvailable() &&\r\n      !this._building\r\n    ) {\r\n      this.callNextCmd()\r\n    }\r\n\r\n    this._objectControls.update()\r\n\r\n    this._forEachComplexVisual((visual) => {\r\n      visual.getComplex().update()\r\n    })\r\n\r\n    if (\r\n      settings.now.autobuild &&\r\n      !this._loading.length &&\r\n      !this._building &&\r\n      this._needRebuild()\r\n    ) {\r\n      this.rebuild()\r\n    }\r\n\r\n    if (!this._loading.length && !this._building && !this._needRebuild()) {\r\n      this._updateView()\r\n    }\r\n\r\n    this._updateFog()\r\n\r\n    if (this._gfx.renderer.xr.enabled) {\r\n      this.webVR.updateMoleculeScale()\r\n    }\r\n  }\r\n\r\n  _onRender() {\r\n    const gfx = this._gfx\r\n\r\n    // update all matrices\r\n    gfx.scene.updateMatrixWorld()\r\n    gfx.camera.updateMatrixWorld()\r\n\r\n    this._clipPlaneUpdateValue(this._getBSphereRadius())\r\n    this._fogFarUpdateValue()\r\n\r\n    gfx.renderer.setRenderTarget(null)\r\n    gfx.renderer.clear()\r\n\r\n    this._renderFrame(settings.now.stereo)\r\n  }\r\n\r\n  _renderFrame(stereo) {\r\n    const gfx = this._gfx\r\n    const { renderer } = gfx\r\n\r\n    renderer.getSize(this._size)\r\n\r\n    if (stereo !== 'NONE') {\r\n      gfx.camera.focus = gfx.camera.position.z // set focus to the center of the object\r\n      gfx.stereoCam.aspect = 1.0\r\n\r\n      // in anaglyph mode we render full-size image for each eye\r\n      // while in other stereo modes only half-size (two images on the screen)\r\n      if (stereo === 'ANAGLYPH') {\r\n        gfx.stereoCam.update(gfx.camera)\r\n      } else {\r\n        gfx.stereoCam.updateHalfSized(gfx.camera, settings.now.camFov)\r\n      }\r\n    }\r\n\r\n    // resize offscreen buffers to match the target\r\n    const pixelRatio = gfx.renderer.getPixelRatio()\r\n    this._resizeOffscreenBuffers(\r\n      this._size.width * pixelRatio,\r\n      this._size.height * pixelRatio,\r\n      stereo\r\n    )\r\n\r\n    this._renderShadowMap()\r\n\r\n    switch (stereo) {\r\n      case 'WEBVR':\r\n      case 'NONE':\r\n        this._renderScene(gfx.camera, false)\r\n        break\r\n      case 'SIMPLE':\r\n      case 'DISTORTED':\r\n        renderer.setScissorTest(true)\r\n\r\n        renderer.setScissor(0, 0, this._size.width / 2, this._size.height)\r\n        renderer.setViewport(0, 0, this._size.width / 2, this._size.height)\r\n        this._renderScene(this._gfx.stereoCam.cameraL, stereo === 'DISTORTED')\r\n\r\n        renderer.setScissor(\r\n          this._size.width / 2,\r\n          0,\r\n          this._size.width / 2,\r\n          this._size.height\r\n        )\r\n        renderer.setViewport(\r\n          this._size.width / 2,\r\n          0,\r\n          this._size.width / 2,\r\n          this._size.height\r\n        )\r\n        this._renderScene(this._gfx.stereoCam.cameraR, stereo === 'DISTORTED')\r\n\r\n        renderer.setScissorTest(false)\r\n        break\r\n      case 'ANAGLYPH':\r\n        this._renderScene(this._gfx.stereoCam.cameraL, false, gfx.stereoBufL)\r\n        this._renderScene(this._gfx.stereoCam.cameraR, false, gfx.stereoBufR)\r\n        renderer.setRenderTarget(null)\r\n        this._anaglyphMat.uniforms.srcL.value = gfx.stereoBufL.texture\r\n        this._anaglyphMat.uniforms.srcR.value = gfx.stereoBufR.texture\r\n        gfx.renderer.renderScreenQuad(this._anaglyphMat)\r\n        break\r\n      default:\r\n    }\r\n\r\n    gfx.renderer2d.render(gfx.scene, gfx.camera)\r\n\r\n    if (settings.now.axes && gfx.axes && !gfx.renderer.xr.enabled) {\r\n      gfx.axes.render(renderer)\r\n    }\r\n  }\r\n\r\n  _onBgColorChanged() {\r\n    const gfx = this._gfx\r\n    const color = chooseFogColor()\r\n    if (gfx) {\r\n      if (gfx.scene.fog) {\r\n        gfx.scene.fog.color.set(color)\r\n      }\r\n      gfx.renderer.setClearColor(\r\n        settings.now.bg.color,\r\n        Number(!settings.now.bg.transparent)\r\n      )\r\n    }\r\n    this._needRender = true\r\n  }\r\n\r\n  _onFogColorChanged() {\r\n    const gfx = this._gfx\r\n    const color = chooseFogColor()\r\n    if (gfx && gfx.scene.fog) {\r\n      gfx.scene.fog.color.set(color)\r\n    }\r\n    this._needRender = true\r\n  }\r\n\r\n  _setUberMaterialValues(values) {\r\n    this._gfx.root.traverse((obj) => {\r\n      if (\r\n        (obj instanceof Mesh ||\r\n          obj instanceof LineSegments ||\r\n          obj instanceof Line) &&\r\n        obj.material instanceof UberMaterial\r\n      ) {\r\n        obj.material.setValues(values)\r\n        obj.material.needsUpdate = true\r\n      }\r\n    })\r\n  }\r\n\r\n  _enableMRT(on, renderBuffer, textureBuffer) {\r\n    const gfx = this._gfx\r\n    const gl = gfx.renderer.getContext()\r\n    const ext = gl.getExtension('WEBGL_draw_buffers')\r\n    const { properties } = gfx.renderer\r\n\r\n    if (!on) {\r\n      ext.drawBuffersWEBGL([gl.COLOR_ATTACHMENT0, null])\r\n      return\r\n    }\r\n\r\n    // take extra texture from Texture Buffer\r\n    gfx.renderer.setRenderTarget(textureBuffer)\r\n    const tx8 = properties.get(textureBuffer.texture).__webglTexture\r\n    gl.bindTexture(gl.TEXTURE_2D, tx8)\r\n\r\n    // take texture and framebuffer from renderbuffer\r\n    gfx.renderer.setRenderTarget(renderBuffer)\r\n    const fb = properties.get(renderBuffer).__webglFramebuffer\r\n    const tx = properties.get(renderBuffer.texture).__webglTexture\r\n\r\n    // set framebuffer\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb)\r\n    fb.width = renderBuffer.width\r\n    fb.height = renderBuffer.height\r\n    gl.framebufferTexture2D(\r\n      gl.FRAMEBUFFER,\r\n      gl.COLOR_ATTACHMENT0,\r\n      gl.TEXTURE_2D,\r\n      tx,\r\n      0\r\n    )\r\n    gl.framebufferTexture2D(\r\n      gl.FRAMEBUFFER,\r\n      ext.COLOR_ATTACHMENT1_WEBGL,\r\n      gl.TEXTURE_2D,\r\n      tx8,\r\n      0\r\n    )\r\n\r\n    // mapping textures\r\n    ext.drawBuffersWEBGL([gl.COLOR_ATTACHMENT0, ext.COLOR_ATTACHMENT1_WEBGL])\r\n  }\r\n\r\n  _renderScene(camera, distortion, target) {\r\n    distortion = distortion || false\r\n    target = target || null\r\n\r\n    const gfx = this._gfx\r\n\r\n    // render to offscreen buffer\r\n    gfx.renderer.setClearColor(\r\n      settings.now.bg.color,\r\n      Number(!settings.now.bg.transparent)\r\n    )\r\n    gfx.renderer.setRenderTarget(target)\r\n    gfx.renderer.clear()\r\n    if (gfx.renderer.xr.enabled) {\r\n      gfx.renderer.render(gfx.scene, camera)\r\n      return\r\n    }\r\n\r\n    // clean buffer for normals texture\r\n    gfx.renderer.setClearColor(0x000000, 0.0)\r\n    gfx.renderer.setRenderTarget(gfx.offscreenBuf4)\r\n    gfx.renderer.clearColor()\r\n\r\n    gfx.renderer.setClearColor(\r\n      settings.now.bg.color,\r\n      Number(!settings.now.bg.transparent)\r\n    )\r\n    gfx.renderer.setRenderTarget(gfx.offscreenBuf)\r\n    gfx.renderer.clear()\r\n\r\n    const bHaveComplexes = this._getComplexVisual() !== null\r\n    const volumeVisual = this._getVolumeVisual()\r\n    const ssao = bHaveComplexes && settings.now.ao\r\n\r\n    if (ssao) {\r\n      this._enableMRT(true, gfx.offscreenBuf, gfx.offscreenBuf4)\r\n    }\r\n\r\n    if (settings.now.transparency === 'prepass') {\r\n      this._renderWithPrepassTransparency(camera, gfx.offscreenBuf)\r\n    } else if (settings.now.transparency === 'standard') {\r\n      gfx.renderer.setRenderTarget(gfx.offscreenBuf)\r\n      gfx.renderer.render(gfx.scene, camera)\r\n    }\r\n\r\n    if (ssao) {\r\n      this._enableMRT(false, null, null)\r\n    }\r\n\r\n    // when fxaa we should get resulting image in temp off-screen buff2 for further postprocessing with fxaa filter\r\n    // otherwise we render to canvas\r\n    const outline = bHaveComplexes && settings.now.outline.on\r\n    const fxaa = bHaveComplexes && settings.now.fxaa\r\n    const volume =\r\n      volumeVisual !== null && volumeVisual.getMesh().material != null\r\n    let dstBuffer =\r\n      ssao || outline || volume || fxaa || distortion\r\n        ? gfx.offscreenBuf2\r\n        : target\r\n    let srcBuffer = gfx.offscreenBuf\r\n\r\n    if (ssao) {\r\n      this._performAO(\r\n        srcBuffer,\r\n        gfx.offscreenBuf4,\r\n        gfx.offscreenBuf.depthTexture,\r\n        dstBuffer,\r\n        gfx.offscreenBuf3,\r\n        gfx.offscreenBuf2\r\n      )\r\n      if (!fxaa && !distortion && !volume && !outline) {\r\n        srcBuffer = dstBuffer\r\n        dstBuffer = target\r\n        gfx.renderer.setRenderTarget(dstBuffer)\r\n        gfx.renderer.renderScreenQuadFromTex(srcBuffer.texture, 1.0)\r\n      }\r\n    } else {\r\n      // just copy color buffer to dst buffer\r\n      gfx.renderer.setRenderTarget(dstBuffer)\r\n      gfx.renderer.renderScreenQuadFromTex(srcBuffer.texture, 1.0)\r\n    }\r\n\r\n    // outline\r\n    if (outline) {\r\n      srcBuffer = dstBuffer\r\n      dstBuffer = volume || fxaa || distortion ? gfx.offscreenBuf3 : target\r\n      if (srcBuffer != null) {\r\n        this._renderOutline(camera, gfx.offscreenBuf, srcBuffer, dstBuffer)\r\n      }\r\n    }\r\n\r\n    // render selected part with outline material\r\n    this._renderSelection(camera, gfx.offscreenBuf, dstBuffer)\r\n\r\n    if (volume) {\r\n      // copy current picture to the buffer that retains depth-data of the original molecule render\r\n      // so that volume renderer could use depth-test\r\n      gfx.renderer.setRenderTarget(gfx.offscreenBuf)\r\n      gfx.renderer.renderScreenQuadFromTex(dstBuffer.texture, 1.0)\r\n      dstBuffer = gfx.offscreenBuf\r\n      this._renderVolume(\r\n        volumeVisual,\r\n        camera,\r\n        dstBuffer,\r\n        gfx.volBFTex,\r\n        gfx.volFFTex,\r\n        gfx.volWFFTex\r\n      )\r\n\r\n      // if this is the last stage -- copy image to target\r\n      if (!fxaa && !distortion) {\r\n        gfx.renderer.setRenderTarget(target)\r\n        gfx.renderer.renderScreenQuadFromTex(dstBuffer.texture, 1.0)\r\n      }\r\n    }\r\n\r\n    srcBuffer = dstBuffer\r\n\r\n    if (fxaa) {\r\n      dstBuffer = distortion ? gfx.offscreenBuf4 : target\r\n      this._performFXAA(srcBuffer, dstBuffer)\r\n      srcBuffer = dstBuffer\r\n    }\r\n\r\n    if (distortion) {\r\n      dstBuffer = target\r\n      this._performDistortion(srcBuffer, dstBuffer, true)\r\n    }\r\n  }\r\n\r\n  _performDistortion(srcBuffer, targetBuffer, mesh) {\r\n    this._scene.add(new meshes.Mesh(this._geo, this._material))\r\n    this._gfx.renderer.setRenderTarget(targetBuffer)\r\n    this._gfx.renderer.clear()\r\n\r\n    if (mesh) {\r\n      this._material.uniforms.srcTex.value = srcBuffer.texture\r\n      this._material.uniforms.aberration.value.set(0.995, 1.0, 1.01)\r\n      this._gfx.renderer.render(this._scene, this._camera)\r\n    } else {\r\n      this._gfx.renderer.renderScreenQuadFromTexWithDistortion(\r\n        srcBuffer,\r\n        settings.now.debug.stereoBarrel\r\n      )\r\n    }\r\n  }\r\n\r\n  _renderOutline(camera, srcDepthBuffer, srcColorBuffer, targetBuffer) {\r\n    const self = this\r\n    const gfx = self._gfx\r\n\r\n    // apply Sobel filter -- draw outline\r\n    this._outlineMaterial.uniforms.srcTex.value = srcColorBuffer.texture\r\n    this._outlineMaterial.uniforms.srcDepthTex.value =\r\n      srcDepthBuffer.depthTexture\r\n    this._outlineMaterial.uniforms.srcTexSize.value.set(\r\n      srcDepthBuffer.width,\r\n      srcDepthBuffer.height\r\n    )\r\n    this._outlineMaterial.uniforms.color.value = new Color(\r\n      settings.now.outline.color\r\n    )\r\n    this._outlineMaterial.uniforms.threshold.value =\r\n      settings.now.outline.threshold\r\n    this._outlineMaterial.uniforms.thickness.value = new Vector2(\r\n      settings.now.outline.thickness,\r\n      settings.now.outline.thickness\r\n    )\r\n\r\n    gfx.renderer.setRenderTarget(targetBuffer)\r\n    gfx.renderer.renderScreenQuad(this._outlineMaterial)\r\n  }\r\n\r\n  _renderShadowMap() {\r\n    if (!settings.now.shadow.on) {\r\n      return\r\n    }\r\n\r\n    const gfx = this._gfx\r\n    const currentRenderTarget = gfx.renderer.getRenderTarget()\r\n    const activeCubeFace = gfx.renderer.getActiveCubeFace()\r\n    const activeMipmapLevel = gfx.renderer.getActiveMipmapLevel()\r\n\r\n    const _state = gfx.renderer.state\r\n\r\n    // Set GL state for depth map.\r\n    _state.setBlending(NoBlending)\r\n    _state.buffers.color.setClear(1, 1, 1, 1)\r\n    _state.buffers.depth.setTest(true)\r\n    _state.setScissorTest(false)\r\n\r\n    for (let i = 0; i < gfx.scene.children.length; i++) {\r\n      if (gfx.scene.children[i].type === 'DirectionalLight') {\r\n        const light = gfx.scene.children[i]\r\n\r\n        if (light.shadow.map == null) {\r\n          light.shadow.map = new WebGLRenderTarget(\r\n            light.shadow.mapSize.width,\r\n            light.shadow.mapSize.height,\r\n            this.pars\r\n          )\r\n          light.shadow.camera.updateProjectionMatrix()\r\n        }\r\n        light.shadow.updateMatrices(light)\r\n\r\n        gfx.renderer.setRenderTarget(light.shadow.map)\r\n        gfx.renderer.clear()\r\n\r\n        gfx.renderer.render(gfx.scene, light.shadow.camera)\r\n      }\r\n    }\r\n    gfx.renderer.setRenderTarget(\r\n      currentRenderTarget,\r\n      activeCubeFace,\r\n      activeMipmapLevel\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Check if there is selection which must be rendered or not.\r\n   * @private\r\n   * @returns {boolean} true on existing selection to render\r\n   */\r\n  _hasSelectionToRender() {\r\n    const selPivot = this._gfx.selectionPivot\r\n\r\n    for (let i = 0; i < selPivot.children.length; i++) {\r\n      const selPivotChild = selPivot.children[i]\r\n      if (selPivotChild.children.length > 0) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  _renderSelection(camera, srcBuffer, targetBuffer) {\r\n    const _outlineMaterial = new OutlineMaterial()\r\n    const self = this\r\n    const gfx = self._gfx\r\n\r\n    // clear offscreen buffer (leave z-buffer intact)\r\n    gfx.renderer.setClearColor('black', 0)\r\n\r\n    // render selection to offscreen buffer\r\n    gfx.renderer.setRenderTarget(srcBuffer)\r\n    gfx.renderer.clear(true, false, false)\r\n    if (self._hasSelectionToRender()) {\r\n      gfx.selectionRoot.matrix = gfx.root.matrix\r\n      gfx.selectionPivot.matrix = gfx.pivot.matrix\r\n      gfx.renderer.render(gfx.selectionScene, camera)\r\n    } else {\r\n      // just render something to force \"target clear\" operation to finish\r\n      gfx.renderer.renderDummyQuad()\r\n    }\r\n\r\n    // overlay to screen\r\n    gfx.renderer.setRenderTarget(targetBuffer)\r\n    gfx.renderer.renderScreenQuadFromTex(srcBuffer.texture, 0.6)\r\n\r\n    // apply Sobel filter -- draw outline\r\n    _outlineMaterial.uniforms.srcTex.value = srcBuffer.texture\r\n    _outlineMaterial.uniforms.srcTexSize.value.set(\r\n      srcBuffer.width,\r\n      srcBuffer.height\r\n    )\r\n    gfx.renderer.renderScreenQuad(_outlineMaterial)\r\n  }\r\n\r\n  _checkVolumeRenderingSupport(renderTarget) {\r\n    if (!renderTarget) {\r\n      return false\r\n    }\r\n    const gfx = this._gfx\r\n    const oldRT = gfx.renderer.getRenderTarget()\r\n\r\n    gfx.renderer.setRenderTarget(renderTarget)\r\n    const context = gfx.renderer.getContext()\r\n    const result = context.checkFramebufferStatus(context.FRAMEBUFFER)\r\n    gfx.renderer.setRenderTarget(oldRT)\r\n    if (result !== context.FRAMEBUFFER_COMPLETE) {\r\n      // floatFrameBufferWarning = ;\r\n      this.logger.warn(\"Device doesn't support electron density rendering\")\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  _renderVolume(volumeVisual, camera, dstBuf, tmpBuf1, tmpBuf2, tmpBuf3) {\r\n    const volumeBFMat = new VolumeMaterial.BackFacePosMaterial()\r\n    const volumeFFMat = new VolumeMaterial.FrontFacePosMaterial()\r\n    const cubeOffsetMat = new Matrix4().makeTranslation(0.5, 0.5, 0.5)\r\n    const world2colorMat = new Matrix4()\r\n    let volumeRenderingSupported\r\n    const gfx = this._gfx\r\n\r\n    if (typeof volumeRenderingSupported === 'undefined') {\r\n      volumeRenderingSupported = this._checkVolumeRenderingSupport(tmpBuf1)\r\n    }\r\n\r\n    if (!volumeRenderingSupported) {\r\n      return\r\n    }\r\n\r\n    const mesh = volumeVisual.getMesh()\r\n\r\n    mesh.rebuild(gfx.camera)\r\n\r\n    // use main camera to prepare special textures to be used by volumetric rendering\r\n    // these textures have the size of the window and are stored in offscreen buffers\r\n    gfx.renderer.setClearColor('black', 0)\r\n    gfx.renderer.setRenderTarget(tmpBuf1)\r\n    gfx.renderer.clear()\r\n    gfx.renderer.setRenderTarget(tmpBuf2)\r\n    gfx.renderer.clear()\r\n    gfx.renderer.setRenderTarget(tmpBuf3)\r\n    gfx.renderer.clear()\r\n\r\n    gfx.renderer.setRenderTarget(tmpBuf1)\r\n    // draw plane with its own material, because it differs slightly from volumeBFMat\r\n    camera.layers.set(gfxutils.LAYERS.VOLUME_BFPLANE)\r\n    gfx.renderer.render(gfx.scene, camera)\r\n\r\n    camera.layers.set(gfxutils.LAYERS.VOLUME)\r\n    gfx.scene.overrideMaterial = volumeBFMat\r\n    gfx.renderer.render(gfx.scene, camera)\r\n\r\n    gfx.renderer.setRenderTarget(tmpBuf2)\r\n    camera.layers.set(gfxutils.LAYERS.VOLUME)\r\n    gfx.scene.overrideMaterial = volumeFFMat\r\n    gfx.renderer.render(gfx.scene, camera)\r\n\r\n    gfx.scene.overrideMaterial = null\r\n    camera.layers.set(gfxutils.LAYERS.DEFAULT)\r\n\r\n    // prepare texture that contains molecule positions\r\n    world2colorMat.copy(mesh.matrixWorld).invert()\r\n    UberMaterial.prototype.uberOptions.world2colorMatrix.multiplyMatrices(\r\n      cubeOffsetMat,\r\n      world2colorMat\r\n    )\r\n    camera.layers.set(gfxutils.LAYERS.COLOR_FROM_POSITION)\r\n    gfx.renderer.setRenderTarget(tmpBuf3)\r\n    gfx.renderer.render(gfx.scene, camera)\r\n\r\n    // render volume\r\n    const vm = mesh.material\r\n    vm.uniforms._BFRight.value = tmpBuf1.texture\r\n    vm.uniforms._FFRight.value = tmpBuf2.texture\r\n    vm.uniforms._WFFRight.value = tmpBuf3.texture\r\n    camera.layers.set(gfxutils.LAYERS.VOLUME)\r\n    gfx.renderer.setRenderTarget(dstBuf)\r\n    gfx.renderer.render(gfx.scene, camera)\r\n    camera.layers.set(gfxutils.LAYERS.DEFAULT)\r\n  }\r\n\r\n  /*  Render scene with 'ZPrepass transparency Effect'\r\n   * Idea: transparent objects are rendered in two passes. The first one writes result only into depth buffer.\r\n   * The second pass reads depth buffer and writes only to color buffer. The method results in\r\n   * correct image of front part of the semi-transparent objects, but we can see only front transparent objects\r\n   * and opaque objects inside, there is no transparent objects inside.\r\n   * Notes: 1. Opaque objects should be rendered strictly before semi-transparent ones.\r\n   * 2. Realization doesn't use camera layers because scene traversing is used for material changes and\r\n   * we can use it to select needed meshes and don't complicate meshes builders with layers\r\n   */\r\n  _renderWithPrepassTransparency(camera, targetBuffer) {\r\n    const gfx = this._gfx\r\n    gfx.renderer.setRenderTarget(targetBuffer)\r\n\r\n    // opaque objects\r\n    camera.layers.set(gfxutils.LAYERS.DEFAULT)\r\n    gfx.renderer.render(gfx.scene, camera)\r\n\r\n    // transparent objects z prepass\r\n    camera.layers.set(gfxutils.LAYERS.PREPASS_TRANSPARENT)\r\n    gfx.renderer.getContext().colorMask(false, false, false, false) // don't update color buffer\r\n    gfx.renderer.render(gfx.scene, camera)\r\n    gfx.renderer.getContext().colorMask(true, true, true, true) // update color buffer\r\n\r\n    // transparent objects color pass\r\n    camera.layers.set(gfxutils.LAYERS.TRANSPARENT)\r\n    gfx.renderer.render(gfx.scene, camera)\r\n\r\n    // restore default layer\r\n    camera.layers.set(gfxutils.LAYERS.DEFAULT)\r\n  }\r\n\r\n  _performFXAA(srcBuffer, targetBuffer) {\r\n    const _fxaaMaterial = new FXAAMaterial()\r\n    if (\r\n      typeof srcBuffer === 'undefined' ||\r\n      typeof targetBuffer === 'undefined'\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const gfx = this._gfx\r\n\r\n    // clear canvas\r\n    gfx.renderer.setClearColor(\r\n      settings.now.bg.color,\r\n      Number(!settings.now.bg.transparent)\r\n    )\r\n    gfx.renderer.setRenderTarget(targetBuffer)\r\n    gfx.renderer.clear()\r\n\r\n    // do fxaa processing of offscreen buff2\r\n    _fxaaMaterial.uniforms.srcTex.value = srcBuffer.texture\r\n    _fxaaMaterial.uniforms.srcTexelSize.value.set(\r\n      1.0 / srcBuffer.width,\r\n      1.0 / srcBuffer.height\r\n    )\r\n    _fxaaMaterial.uniforms.bgColor.value.set(settings.now.bg.color)\r\n\r\n    if (_fxaaMaterial.bgTransparent !== settings.now.bg.transparent) {\r\n      _fxaaMaterial.setValues({ bgTransparent: settings.now.bg.transparent })\r\n      _fxaaMaterial.needsUpdate = true\r\n    }\r\n    gfx.renderer.renderScreenQuad(_fxaaMaterial)\r\n  }\r\n\r\n  _performAO(\r\n    srcColorBuffer,\r\n    normalBuffer,\r\n    srcDepthTexture,\r\n    targetBuffer,\r\n    tempBuffer,\r\n    tempBuffer1\r\n  ) {\r\n    const _aoMaterial = new AOMaterial()\r\n    const _horBlurMaterial = new AOHorBlurMaterial()\r\n    const _vertBlurMaterial = new AOVertBlurWithBlendMaterial()\r\n\r\n    const _scale = new Vector3()\r\n    if (\r\n      !srcColorBuffer ||\r\n      !normalBuffer ||\r\n      !srcDepthTexture ||\r\n      !targetBuffer ||\r\n      !tempBuffer ||\r\n      !tempBuffer1\r\n    ) {\r\n      return\r\n    }\r\n    const gfx = this._gfx\r\n    const tanHalfFOV = Math.tan(MathUtils.DEG2RAD * 0.5 * gfx.camera.fov)\r\n\r\n    _aoMaterial.uniforms.diffuseTexture.value = srcColorBuffer.texture\r\n    _aoMaterial.uniforms.depthTexture.value = srcDepthTexture\r\n    _aoMaterial.uniforms.normalTexture.value = normalBuffer.texture\r\n    _aoMaterial.uniforms.srcTexelSize.value.set(\r\n      1.0 / srcColorBuffer.width,\r\n      1.0 / srcColorBuffer.height\r\n    )\r\n    _aoMaterial.uniforms.camNearFar.value.set(gfx.camera.near, gfx.camera.far)\r\n    _aoMaterial.uniforms.projMatrix.value = gfx.camera.projectionMatrix\r\n    _aoMaterial.uniforms.aspectRatio.value = gfx.camera.aspect\r\n    _aoMaterial.uniforms.tanHalfFOV.value = tanHalfFOV\r\n    gfx.root.matrix.extractScale(_scale)\r\n    _aoMaterial.uniforms.kernelRadius.value =\r\n      settings.now.debug.ssaoKernelRadius * _scale.x\r\n    _aoMaterial.uniforms.depthThreshold.value = 2.0 * this._getBSphereRadius() // diameter\r\n    _aoMaterial.uniforms.factor.value = settings.now.debug.ssaoFactor\r\n    // N: should be tempBuffer1 for proper use of buffers (see buffers using outside the function)\r\n    gfx.renderer.setRenderTarget(tempBuffer1)\r\n    gfx.renderer.renderScreenQuad(_aoMaterial)\r\n\r\n    _horBlurMaterial.uniforms.aoMap.value = tempBuffer1.texture\r\n    _horBlurMaterial.uniforms.srcTexelSize.value.set(\r\n      1.0 / tempBuffer1.width,\r\n      1.0 / tempBuffer1.height\r\n    )\r\n    _horBlurMaterial.uniforms.depthTexture.value = srcDepthTexture\r\n    gfx.renderer.setRenderTarget(tempBuffer)\r\n    gfx.renderer.renderScreenQuad(_horBlurMaterial)\r\n\r\n    _vertBlurMaterial.uniforms.aoMap.value = tempBuffer.texture\r\n    _vertBlurMaterial.uniforms.diffuseTexture.value = srcColorBuffer.texture\r\n    _vertBlurMaterial.uniforms.srcTexelSize.value.set(\r\n      1.0 / tempBuffer.width,\r\n      1.0 / tempBuffer.height\r\n    )\r\n    _vertBlurMaterial.uniforms.depthTexture.value = srcDepthTexture\r\n    _vertBlurMaterial.uniforms.projMatrix.value = gfx.camera.projectionMatrix\r\n    _vertBlurMaterial.uniforms.aspectRatio.value = gfx.camera.aspect\r\n    _vertBlurMaterial.uniforms.tanHalfFOV.value = tanHalfFOV\r\n    const { fog } = gfx.scene\r\n    if (fog) {\r\n      _vertBlurMaterial.uniforms.fogNearFar.value.set(fog.near, fog.far)\r\n      _vertBlurMaterial.uniforms.fogColor.value.set(\r\n        fog.color.r,\r\n        fog.color.g,\r\n        fog.color.b,\r\n        settings.now.fogAlpha\r\n      )\r\n    }\r\n    if (\r\n      _vertBlurMaterial.useFog !== settings.now.fog ||\r\n      _vertBlurMaterial.fogTransparent !== settings.now.bg.transparent\r\n    ) {\r\n      _vertBlurMaterial.setValues({\r\n        useFog: settings.now.fog,\r\n        fogTransparent: settings.now.bg.transparent\r\n      })\r\n      _vertBlurMaterial.needsUpdate = true\r\n    }\r\n    gfx.renderer.setRenderTarget(targetBuffer)\r\n    gfx.renderer.renderScreenQuad(_vertBlurMaterial)\r\n  }\r\n\r\n  /**\r\n   * Reset the viewer, unload molecules.\r\n   * @param {boolean=} keepReps - Keep representations while resetting viewer state.\r\n   */\r\n  reset(/* keepReps */) {\r\n    if (this._picker) {\r\n      this._picker.reset()\r\n    }\r\n    this._lastPick = null\r\n\r\n    this._releaseAllVisuals()\r\n\r\n    this._setEditMode(EDIT_MODE.COMPLEX)\r\n\r\n    this._resetObjects()\r\n\r\n    if (this._gfx) {\r\n      gfxutils.clearTree(this._gfx.pivot)\r\n      this._gfx.renderer2d.reset()\r\n    }\r\n\r\n    this.setNeedRender()\r\n  }\r\n\r\n  _resetScene() {\r\n    this._objectControls.reset()\r\n    this._objectControls.allowTranslation(true)\r\n    this._objectControls.allowAltObjFreeRotation(true)\r\n    this.resetReps()\r\n    this.resetPivot()\r\n    this.rebuildAll()\r\n  }\r\n\r\n  resetView() {\r\n    // reset controls\r\n    if (this._picker) {\r\n      this._picker.reset()\r\n    }\r\n    this._setEditMode(EDIT_MODE.COMPLEX)\r\n    this._resetScene()\r\n\r\n    // reset selection\r\n    this._forEachComplexVisual((visual) => {\r\n      visual.updateSelectionMask({})\r\n      visual.rebuildSelectionGeometry()\r\n    })\r\n  }\r\n\r\n  _export(format) {\r\n    const TheExporter = head(io.exporters.find({ format }))\r\n    if (!TheExporter) {\r\n      this.logger.error('Could not find suitable exporter for this source')\r\n      return Promise.reject(\r\n        new Error('Could not find suitable exporter for this source')\r\n      )\r\n    }\r\n    this.dispatchEvent({ type: 'exporting' })\r\n\r\n    if (this._visuals[this._curVisualName] instanceof ComplexVisual) {\r\n      let dataSource = null\r\n      if (TheExporter.SourceClass === ComplexVisual) {\r\n        dataSource = this._visuals[this._curVisualName]\r\n      } else if (TheExporter.SourceClass === Complex) {\r\n        dataSource = this._visuals[this._curVisualName]._complex\r\n      }\r\n      const exporter = new TheExporter(dataSource, {\r\n        miewVersion: Miew.VERSION\r\n      })\r\n      return exporter.export().then((data) => data)\r\n    }\r\n    if (this._visuals[this._curVisualName] instanceof VolumeVisual) {\r\n      return Promise.reject(\r\n        new Error('Sorry, exporter for volume data not implemented yet')\r\n      )\r\n    }\r\n    return Promise.reject(new Error('Unexpected format of data'))\r\n  }\r\n\r\n  /**\r\n   * Load molecule asynchronously.\r\n   * @param {string|File} source - Molecule source to load (e.g. PDB ID, URL or File object).\r\n   * @param {object=} opts - Options.\r\n   * @param {string=} opts.sourceType - Data source type (e.g. 'url', 'file').\r\n   * @param {string=} opts.fileType - Data contents type (e.g. 'pdb', 'cml').\r\n   * @param {string=} opts.mdFile - .nc file path.\r\n   * @param {boolean=} opts.keepRepsInfo - prevent reset of object and reps information.\r\n   * @returns {Promise} name of the visual that was added to the viewer\r\n   */\r\n  load(source, opts) {\r\n    opts = merge({}, opts, {\r\n      context: this\r\n    })\r\n\r\n    // for a single-file scenario\r\n    if (!this.settings.now.use.multiFile) {\r\n      // abort all loaders in progress\r\n      if (this._loading.length) {\r\n        this._loading.forEach((job) => {\r\n          job.cancel()\r\n        })\r\n        this._loading.length = 0\r\n      }\r\n\r\n      // reset\r\n      if (!opts.animation) {\r\n        // FIXME: sometimes it is set AFTERWARDS!\r\n        this.reset(true)\r\n      }\r\n    }\r\n\r\n    this._interpolator.reset()\r\n\r\n    this.dispatchEvent({ type: 'loading', options: opts, source })\r\n\r\n    const job = new JobHandle()\r\n    this._loading.push(job)\r\n    job.addEventListener('notification', (e) => {\r\n      this.dispatchEvent(e.slaveEvent)\r\n    })\r\n\r\n    this._spinner.spin(this._container)\r\n\r\n    const onLoadEnd = (anything) => {\r\n      const jobIndex = this._loading.indexOf(job)\r\n      if (jobIndex !== -1) {\r\n        this._loading.splice(jobIndex, 1)\r\n      }\r\n      this._spinner.stop()\r\n      this._refreshTitle()\r\n      job.notify({ type: 'loadingDone', anything })\r\n      return anything\r\n    }\r\n\r\n    return _fetchData(source, opts, job)\r\n      .then((data) => _parseData(data, opts, job))\r\n      .then((object) => {\r\n        const name = this._onLoad(object, opts)\r\n        return onLoadEnd(name)\r\n      })\r\n      .catch((err) => {\r\n        this.logger.error('Could not load data')\r\n        this.logger.debug(err)\r\n        throw onLoadEnd(err)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Unload molecule (delete corresponding visual).\r\n   * @param {string=} name - name of the visual\r\n   */\r\n  unload(name) {\r\n    this._removeVisual(name || this.getCurrentVisual())\r\n    this.resetPivot()\r\n    if (settings.now.shadow.on) {\r\n      this._updateShadowCamera()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start new animation. Now is broken.\r\n   * @param fileData - new data to animate\r\n   * @private\r\n   * @deprecated until animation system refactoring.\r\n   */\r\n  _startAnimation(fileData) {\r\n    this._stopAnimation()\r\n    const self = this\r\n    const visual = this._getComplexVisual()\r\n    if (visual === null) {\r\n      this.logger.error('Unable to start animation - no molecule is loaded.')\r\n      return\r\n    }\r\n    try {\r\n      this._frameInfo = new FrameInfo(visual.getComplex(), fileData, {\r\n        onLoadStatusChanged() {\r\n          self.dispatchEvent({\r\n            type: 'mdPlayerStateChanged',\r\n            state: {\r\n              isPlaying: self._isAnimating,\r\n              isLoading: self._frameInfo ? self._frameInfo.isLoading : true\r\n            }\r\n          })\r\n        },\r\n        onError(message) {\r\n          self._stopAnimation()\r\n          self.logger.error(message)\r\n        }\r\n      })\r\n    } catch (e) {\r\n      this.logger.error('Animation file does not fit to current complex!')\r\n      return\r\n    }\r\n    this._continueAnimation()\r\n  }\r\n\r\n  /**\r\n   * Pause current animation. Now is broken.\r\n   * @private\r\n   * @deprecated until animation system refactoring.\r\n   */\r\n  _pauseAnimation() {\r\n    if (this._animInterval === null) {\r\n      return\r\n    }\r\n    this._isAnimating = false\r\n    clearInterval(this._animInterval)\r\n    this._animInterval = null\r\n    if (this._frameInfo) {\r\n      this.dispatchEvent({\r\n        type: 'mdPlayerStateChanged',\r\n        state: {\r\n          isPlaying: this._isAnimating,\r\n          isLoading: this._frameInfo.isLoading\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Continue current animation after pausing. Now is broken.\r\n   * @private\r\n   * @deprecated until animation system refactoring.\r\n   */\r\n  _continueAnimation() {\r\n    this._isAnimating = true\r\n    let minFrameTime = 1000 / settings.now.maxfps\r\n    minFrameTime = Number.isNaN(minFrameTime) ? 0 : minFrameTime\r\n    const self = this\r\n    const { pivot } = self._gfx\r\n    const visual = this._getComplexVisual()\r\n    if (visual) {\r\n      visual.resetSelectionMask()\r\n      visual.rebuildSelectionGeometry()\r\n      this._msgAtomInfo.style.opacity = 0.0\r\n    }\r\n    this._animInterval = setInterval(() => {\r\n      self.dispatchEvent({\r\n        type: 'mdPlayerStateChanged',\r\n        state: {\r\n          isPlaying: self._isAnimating,\r\n          isLoading: self._frameInfo.isLoading\r\n        }\r\n      })\r\n      if (self._frameInfo.frameIsReady) {\r\n        pivot.updateToFrame(self._frameInfo)\r\n        self._updateObjsToFrame(self._frameInfo)\r\n        self._refreshTitle(\r\n          ` Frame ${self._frameInfo._currFrame} of ${self._frameInfo._framesCount} time interval - ${self._frameInfo._timeStep}`\r\n        )\r\n        try {\r\n          self._frameInfo.nextFrame()\r\n        } catch (e) {\r\n          self.logger.error('Error during animation')\r\n          self._stopAnimation()\r\n          return\r\n        }\r\n        self._needRender = true\r\n      }\r\n    }, minFrameTime)\r\n  }\r\n\r\n  /**\r\n   * Stop current animation. Now is broken.\r\n   * @private\r\n   * @deprecated until animation system refactoring.\r\n   */\r\n  _stopAnimation() {\r\n    if (this._animInterval === null) {\r\n      return\r\n    }\r\n    clearInterval(this._animInterval)\r\n    this._frameInfo.disableEvents()\r\n    this._frameInfo = null\r\n    this._animInterval = null\r\n    this.dispatchEvent({\r\n      type: 'mdPlayerStateChanged',\r\n      state: null\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Invoked upon successful loading of some data source\r\n   * @param {DataSource} dataSource - Data source for visualization (molecular complex or other)\r\n   * @param {object} opts - Options.\r\n   * @private\r\n   */\r\n  _onLoad(dataSource, opts) {\r\n    const gfx = this._gfx\r\n    let visualName = null\r\n\r\n    if (opts.animation) {\r\n      this._refreshTitle()\r\n      this._startAnimation(dataSource)\r\n      return null\r\n    }\r\n    this._stopAnimation()\r\n    if (!opts || !opts.keepRepsInfo) {\r\n      this._opts.reps = null\r\n      this._opts._objects = null\r\n    }\r\n\r\n    if (dataSource.id === 'Complex') {\r\n      const complex = dataSource\r\n\r\n      // update title\r\n      if (opts.fileName) {\r\n        complex.name =\r\n          complex.name || removeExtension(opts.fileName).toUpperCase()\r\n      } else if (opts.amberFileName) {\r\n        complex.name =\r\n          complex.name || removeExtension(opts.amberFileName).toUpperCase()\r\n      } else {\r\n        complex.name = `Dynamic ${opts.fileType} molecule`\r\n      }\r\n\r\n      visualName = this._addVisual(new ComplexVisual(complex.name, complex))\r\n      this._curVisualName = visualName\r\n\r\n      const desc = this.info()\r\n      this.logger.info(\r\n        `Parsed ${opts.fileName} (${desc.atoms} atoms, ${desc.bonds} bonds, ${desc.residues} residues, ${desc.chains} chains).`\r\n      )\r\n\r\n      if (isNumber(this._opts.unit)) {\r\n        complex.setCurrentUnit(this._opts.unit)\r\n      }\r\n\r\n      if (opts.preset) {\r\n        // ...removed server access...\r\n      } else if (settings.now.autoPreset) {\r\n        switch (opts.fileType) {\r\n          case 'cml':\r\n            this.resetReps('small')\r\n            break\r\n          case 'pdb':\r\n          case 'mmtf':\r\n          case 'cif':\r\n            if (hasValidResidues(complex)) {\r\n              this.resetReps('macro')\r\n            } else {\r\n              this.resetReps('small')\r\n            }\r\n            break\r\n          default:\r\n            this.resetReps('default')\r\n            break\r\n        }\r\n      } else {\r\n        this.resetReps('default')\r\n      }\r\n    } else if (dataSource.id === 'Volume') {\r\n      this.resetEd()\r\n      visualName = this._onLoadEd(dataSource)\r\n    }\r\n\r\n    gfx.camera.updateProjectionMatrix()\r\n    this._updateFog()\r\n\r\n    // reset global transform\r\n    gfx.root.resetTransform()\r\n    this.resetPivot()\r\n\r\n    // set scale to fit everything on the screen\r\n    this._objectControls.setScale(\r\n      settings.now.radiusToFit / this._getBSphereRadius()\r\n    )\r\n\r\n    this._resetObjects()\r\n\r\n    if (settings.now.autoResolution) {\r\n      this._tweakResolution()\r\n    }\r\n\r\n    if (settings.now.shadow.on) {\r\n      this._updateShadowCamera()\r\n    }\r\n\r\n    if (this._opts.view) {\r\n      this.view(this._opts.view)\r\n      delete this._opts.view\r\n    }\r\n\r\n    this._refreshTitle()\r\n\r\n    return visualName\r\n  }\r\n\r\n  resetEd() {\r\n    if (this._edLoader) {\r\n      this._edLoader.abort()\r\n      this._edLoader = null\r\n    }\r\n\r\n    // free all resources\r\n    this._removeVisual(this._getVolumeVisual())\r\n\r\n    this._needRender = true\r\n  }\r\n\r\n  loadEd(source) {\r\n    this.resetEd()\r\n\r\n    const TheLoader = head(io.loaders.find({ source }))\r\n    if (!TheLoader) {\r\n      this.logger.error(LOADER_NOT_FOUND)\r\n      return Promise.reject(new Error(LOADER_NOT_FOUND))\r\n    }\r\n\r\n    const loader = (this._edLoader = new TheLoader(source, { binary: true }))\r\n    loader.context = this\r\n    return loader\r\n      .load()\r\n      .then((data) => {\r\n        const TheParser = head(io.parsers.find({ format: 'ccp4' }))\r\n        if (!TheParser) {\r\n          throw new Error(PARSER_NOT_FOUND)\r\n        }\r\n        const parser = new TheParser(data)\r\n        parser.context = this\r\n        return parser.parse().then((dataSource) => {\r\n          this._onLoadEd(dataSource)\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        this.logger.error('Could not load ED data')\r\n        this.logger.debug(error)\r\n      })\r\n  }\r\n\r\n  _onLoadEd(dataSource) {\r\n    dataSource.normalize()\r\n\r\n    const volumeVisual = new VolumeVisual('volume', dataSource)\r\n    volumeVisual.getMesh().layers.set(gfxutils.LAYERS.VOLUME) // volume mesh is not visible to common render\r\n    const visualName = this._addVisual(volumeVisual)\r\n\r\n    this._needRender = true\r\n    return visualName\r\n  }\r\n\r\n  _needRebuild() {\r\n    let needsRebuild = false\r\n    this._forEachComplexVisual((visual) => {\r\n      needsRebuild = needsRebuild || visual.needsRebuild()\r\n    })\r\n    return needsRebuild\r\n  }\r\n\r\n  _rebuildObjects() {\r\n    const self = this\r\n    const gfx = this._gfx\r\n    let i\r\n    let n\r\n\r\n    // remove old object geometry\r\n    const toRemove = []\r\n    for (i = 0; i < gfx.pivot.children.length; ++i) {\r\n      const child = gfx.pivot.children[i]\r\n      if (!(child instanceof Visual)) {\r\n        toRemove.push(child)\r\n      }\r\n    }\r\n    for (i = 0; i < toRemove.length; ++i) {\r\n      toRemove[i].parent.remove(toRemove[i])\r\n    }\r\n\r\n    setTimeout(() => {\r\n      const objList = self._objects\r\n      for (i = 0, n = objList.length; i < n; ++i) {\r\n        const obj = objList[i]\r\n        if (obj.needsRebuild) {\r\n          obj.build()\r\n        }\r\n        if (obj.getGeometry()) {\r\n          gfx.pivot.add(obj.getGeometry())\r\n        }\r\n      }\r\n    }, 10)\r\n  }\r\n\r\n  changeUnit(unitIdx, name) {\r\n    const visual = this._getComplexVisual(name)\r\n    if (!visual) {\r\n      throw new Error('There is no complex to change!')\r\n    }\r\n\r\n    function currentUnitInfo() {\r\n      const unit = visual ? visual.getComplex().getCurrentUnit() : 0\r\n      const type = unit > 0 ? `Bio molecule ${unit}` : 'Asymmetric unit'\r\n      return `Current unit: ${unit} (${type})`\r\n    }\r\n\r\n    if (unitIdx === undefined) {\r\n      return currentUnitInfo()\r\n    }\r\n    if (isString(unitIdx)) {\r\n      unitIdx = Math.max(parseInt(unitIdx, 10), 0)\r\n    }\r\n    if (visual.getComplex().setCurrentUnit(unitIdx)) {\r\n      this._resetScene()\r\n      this._updateInfoPanel()\r\n    }\r\n    return currentUnitInfo()\r\n  }\r\n\r\n  /**\r\n   * Start to rebuild geometry asynchronously.\r\n   */\r\n  rebuild() {\r\n    if (this._building) {\r\n      this.logger.warn('Miew.rebuild(): already building!')\r\n      return\r\n    }\r\n    this._building = true\r\n\r\n    this.dispatchEvent({ type: 'rebuilding' })\r\n\r\n    this._rebuildObjects()\r\n\r\n    this._gfx.renderer2d.reset()\r\n\r\n    const rebuildActions = []\r\n    this._forEachComplexVisual((visual) => {\r\n      if (visual.needsRebuild()) {\r\n        rebuildActions.push(\r\n          visual.rebuild().then(\r\n            () =>\r\n              new Promise((resolve) => {\r\n                visual.rebuildSelectionGeometry()\r\n                resolve()\r\n              })\r\n          )\r\n        )\r\n      }\r\n    })\r\n\r\n    // Start asynchronous rebuild\r\n    const self = this\r\n    this._spinner.spin(this._container)\r\n    Promise.all(rebuildActions).then(() => {\r\n      self._spinner.stop()\r\n\r\n      self._needRender = true\r\n\r\n      self._refreshTitle()\r\n      this.dispatchEvent({ type: 'buildingDone' })\r\n      self._building = false\r\n    })\r\n  }\r\n\r\n  /** Mark all representations for rebuilding */\r\n  rebuildAll() {\r\n    this._forEachComplexVisual((visual) => {\r\n      visual.setNeedsRebuild()\r\n    })\r\n  }\r\n\r\n  _refreshTitle(appendix) {\r\n    let title\r\n    appendix = appendix === undefined ? '' : appendix\r\n    const visual = this._getComplexVisual()\r\n    if (visual) {\r\n      title = visual.getComplex().name\r\n      const rep = visual.repGet(visual.repCurrent())\r\n      title += rep ? ` – ${rep.mode.name} Mode` : ''\r\n    } else {\r\n      title = Object.keys(this._visuals).length > 0 ? 'Unknown' : 'No Data'\r\n    }\r\n    title += appendix\r\n\r\n    this.dispatchEvent({ type: 'titleChanged', data: title })\r\n  }\r\n\r\n  setNeedRender() {\r\n    this._needRender = true\r\n  }\r\n\r\n  _extractRepresentation() {\r\n    const changed = []\r\n\r\n    this._forEachComplexVisual((visual) => {\r\n      if (visual.getSelectionCount() === 0) {\r\n        return\r\n      }\r\n\r\n      const selector = visual.buildSelectorFromMask(\r\n        1 << visual.getSelectionBit()\r\n      )\r\n      const defPreset = settings.now.presets.default\r\n      const res = visual.repAdd({\r\n        selector,\r\n        mode: defPreset[0].mode.id,\r\n        colorer: defPreset[0].colorer.id,\r\n        material: defPreset[0].material.id\r\n      })\r\n      if (!res) {\r\n        if (visual.repCount() === ComplexVisual.NUM_REPRESENTATION_BITS) {\r\n          this.logger.warn(\r\n            `Number of representations is limited to ${ComplexVisual.NUM_REPRESENTATION_BITS}`\r\n          )\r\n        }\r\n        return\r\n      }\r\n\r\n      this.dispatchEvent({\r\n        type: 'repAdded',\r\n        index: res.index,\r\n        name: visual.name\r\n      })\r\n      visual.repCurrent(res.index)\r\n\r\n      changed.push(visual.name)\r\n    })\r\n\r\n    if (changed.length > 0) {\r\n      this.logger.report(\r\n        `New representation from selection for complexes: ${changed.join(', ')}`\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Change current representation list.\r\n   * @param {array} reps - Representation list.\r\n   */\r\n  _setReps(reps) {\r\n    reps = reps || (this._opts && this._opts.reps) || []\r\n    this._forEachComplexVisual((visual) => visual.resetReps(reps))\r\n  }\r\n\r\n  /**\r\n   * Apply existing preset to current scene.\r\n   * @param preset\r\n   */\r\n  applyPreset(preset) {\r\n    const { presets } = settings.now\r\n    const presList = [\r\n      preset || settings.defaults.preset,\r\n      settings.defaults.preset,\r\n      Object.keys(presets)[0]\r\n    ]\r\n    let reps = null\r\n    for (let i = 0; !reps && i < presList.length; ++i) {\r\n      settings.set('preset', presList[i])\r\n      reps = presets[settings.now.preset]\r\n      if (!reps) {\r\n        this.logger.warn(`Unknown preset \"${settings.now.preset}\"`)\r\n      }\r\n    }\r\n    this._setReps(reps)\r\n  }\r\n\r\n  /**\r\n   * Reset current representation list to initial values.\r\n   * @param {string} [preset] - The source preset in case of uninitialized representation list.\r\n   */\r\n  resetReps(preset) {\r\n    const reps = this._opts && this._opts.reps\r\n    if (reps) {\r\n      this._setReps(reps)\r\n    } else {\r\n      this.applyPreset(preset)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get number of representations created so far.\r\n   * @returns {number} Number of reps.\r\n   */\r\n  repCount(name) {\r\n    const visual = this._getComplexVisual(name)\r\n    return visual ? visual.repCount() : 0\r\n  }\r\n\r\n  /**\r\n   * Get or set the current representation index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\r\n   * @param {string=} [name] - Complex name. Defaults to the current one.\r\n   * @returns {number} The current index.\r\n   */\r\n  repCurrent(index, name) {\r\n    const visual = this._getComplexVisual(name)\r\n    const newIdx = visual ? visual.repCurrent(index) : -1\r\n    if (index && newIdx !== index) {\r\n      this.logger.warn(\r\n        `Representation ${index} was not found. Current rep remains unchanged.`\r\n      )\r\n    }\r\n    return newIdx\r\n  }\r\n\r\n  /**\r\n   * Get or set representation by index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount}(). Defaults to the current one.\r\n   * @param {object=} rep - Optional representation description.\r\n   * @param {string=} rep.selector - Selector string.\r\n   * @param {string=} rep.mode - Mode id.\r\n   * @param {string=} rep.colorer - Colorer id.\r\n   * @param {string=} rep.material - Material id.\r\n   * @returns {?object} Representation description.\r\n   */\r\n  rep(index, rep) {\r\n    const visual = this._getComplexVisual('')\r\n    if (!visual) {\r\n      return null\r\n    }\r\n    const res = visual.rep(index, rep)\r\n    if (res.status === 'created') {\r\n      this.dispatchEvent({\r\n        type: 'repAdded',\r\n        index: res.index,\r\n        name: visual.name\r\n      })\r\n    } else if (res.status === 'changed') {\r\n      this.dispatchEvent({\r\n        type: 'repChanged',\r\n        index: res.index,\r\n        name: visual.name\r\n      })\r\n    }\r\n    return res.desc\r\n  }\r\n\r\n  /**\r\n   * Get representation (not just description) by index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount}(). Defaults to the current one.\r\n   * @returns {?object} Representation.\r\n   */\r\n  repGet(index, name) {\r\n    const visual = this._getComplexVisual(name)\r\n    return visual ? visual.repGet(index) : null\r\n  }\r\n\r\n  /**\r\n   * Add new representation.\r\n   * @param {object=} rep - Representation description.\r\n   * @returns {number} Index of the new representation.\r\n   */\r\n  repAdd(rep, name) {\r\n    const visual = this._getComplexVisual(name)\r\n    if (!visual) {\r\n      return -1\r\n    }\r\n\r\n    const res = visual.repAdd(rep)\r\n    if (res) {\r\n      this.dispatchEvent({ type: 'repAdded', index: res.index, name })\r\n      return res.index\r\n    }\r\n    return -1\r\n  }\r\n\r\n  /**\r\n   * Remove representation.\r\n   * @param {number=} index - Zero-based representation index.\r\n   */\r\n  repRemove(index, name) {\r\n    const visual = this._getComplexVisual(name)\r\n    if (!visual) {\r\n      return\r\n    }\r\n\r\n    visual.repRemove(index)\r\n    this.dispatchEvent({ type: 'repRemoved', index, name })\r\n  }\r\n\r\n  /**\r\n   * Hide representation.\r\n   * @param {number} index - Zero-based representation index.\r\n   * @param {boolean=} hide - Specify false to make rep visible, true to hide (by default).\r\n   */\r\n  repHide(index, hide, name) {\r\n    this._needRender = true\r\n    const visual = this._getComplexVisual(name)\r\n    return visual ? visual.repHide(index, hide) : null\r\n  }\r\n\r\n  _setEditMode(mode) {\r\n    this._editMode = mode\r\n\r\n    const elem = this._msgMode\r\n    if (elem) {\r\n      elem.style.opacity = mode === EDIT_MODE.COMPLEX ? 0.0 : 1.0\r\n\r\n      if (mode !== EDIT_MODE.COMPLEX) {\r\n        const t = elem.getElementsByTagName('p')[0]\r\n        t.innerHTML =\r\n          mode === EDIT_MODE.COMPONENT\r\n            ? 'COMPONENT EDIT MODE'\r\n            : 'FRAGMENT EDIT MODE'\r\n      }\r\n    }\r\n\r\n    this.dispatchEvent({\r\n      type: 'editModeChanged',\r\n      data: mode === EDIT_MODE.COMPLEX\r\n    })\r\n  }\r\n\r\n  _enterComponentEditMode() {\r\n    if (this._editMode !== EDIT_MODE.COMPLEX) {\r\n      return\r\n    }\r\n\r\n    const editors = []\r\n    this._forEachComplexVisual((visual) => {\r\n      const editor = visual.beginComponentEdit()\r\n      if (editor) {\r\n        editors.push(editor)\r\n      }\r\n    })\r\n\r\n    if (editors === []) {\r\n      return\r\n    }\r\n\r\n    this._editors = editors\r\n\r\n    this.logger.info('COMPONENT EDIT MODE -- ON')\r\n    this._setEditMode(EDIT_MODE.COMPONENT)\r\n    this._objectControls.keysTranslateObj(true)\r\n  }\r\n\r\n  _applyComponentEdit() {\r\n    if (this._editMode !== EDIT_MODE.COMPONENT) {\r\n      return\r\n    }\r\n\r\n    this._objectControls.stop()\r\n    this._objectControls.keysTranslateObj(false)\r\n\r\n    for (let i = 0; i < this._editors.length; ++i) {\r\n      this._editors[i].apply()\r\n    }\r\n    this._editors = []\r\n\r\n    this.logger.info('COMPONENT EDIT MODE -- OFF (applied)')\r\n    this._setEditMode(EDIT_MODE.COMPLEX)\r\n\r\n    this.rebuildAll()\r\n  }\r\n\r\n  _discardComponentEdit() {\r\n    if (this._editMode !== EDIT_MODE.COMPONENT) {\r\n      return\r\n    }\r\n\r\n    this._objectControls.stop()\r\n    this._objectControls.keysTranslateObj(false)\r\n\r\n    for (let i = 0; i < this._editors.length; ++i) {\r\n      this._editors[i].discard()\r\n    }\r\n    this._editors = []\r\n\r\n    this.logger.info('COMPONENT EDIT MODE -- OFF (discarded)')\r\n    this._setEditMode(EDIT_MODE.COMPLEX)\r\n\r\n    this._needRender = true\r\n    this.rebuildAll()\r\n  }\r\n\r\n  _enterFragmentEditMode() {\r\n    if (this._editMode !== EDIT_MODE.COMPLEX) {\r\n      return\r\n    }\r\n\r\n    const selectedVisuals = []\r\n    this._forEachComplexVisual((visual) => {\r\n      if (visual instanceof ComplexVisual && visual.getSelectionCount() > 0) {\r\n        selectedVisuals.push(visual)\r\n      }\r\n    })\r\n\r\n    if (selectedVisuals.length !== 1) {\r\n      // either we have no selection or\r\n      // we have selected atoms in two or more visuals -- not supported\r\n      return\r\n    }\r\n\r\n    const editor = selectedVisuals[0].beginFragmentEdit()\r\n    if (!editor) {\r\n      return\r\n    }\r\n    this._editors = [editor]\r\n\r\n    this.logger.info('FRAGMENT EDIT MODE -- ON (single bond)')\r\n    this._setEditMode(EDIT_MODE.FRAGMENT)\r\n    this._objectControls.allowTranslation(false)\r\n    this._objectControls.allowAltObjFreeRotation(editor.isFreeRotationAllowed())\r\n\r\n    this._needRender = true\r\n  }\r\n\r\n  _applyFragmentEdit() {\r\n    if (this._editMode !== EDIT_MODE.FRAGMENT) {\r\n      return\r\n    }\r\n\r\n    this._objectControls.stop()\r\n\r\n    for (let i = 0; i < this._editors.length; ++i) {\r\n      this._editors[i].apply()\r\n    }\r\n    this._editors = []\r\n\r\n    this.logger.info('FRAGMENT EDIT MODE -- OFF (applied)')\r\n    this._setEditMode(EDIT_MODE.COMPLEX)\r\n    this._objectControls.allowTranslation(true)\r\n    this._objectControls.allowAltObjFreeRotation(true)\r\n\r\n    this.rebuildAll()\r\n  }\r\n\r\n  _discardFragmentEdit() {\r\n    if (this._editMode !== EDIT_MODE.FRAGMENT) {\r\n      return\r\n    }\r\n\r\n    this._objectControls.stop()\r\n\r\n    for (let i = 0; i < this._editors.length; ++i) {\r\n      this._editors[i].discard()\r\n    }\r\n    this._editors = []\r\n\r\n    this.logger.info('FRAGMENT EDIT MODE -- OFF (discarded)')\r\n    this._setEditMode(EDIT_MODE.COMPLEX)\r\n    this._objectControls.allowTranslation(true)\r\n    this._objectControls.allowAltObjFreeRotation(true)\r\n\r\n    this._needRender = true\r\n  }\r\n\r\n  _onPick(event) {\r\n    if (!settings.now.picking) {\r\n      // picking is disabled\r\n      return\r\n    }\r\n\r\n    if (this._animInterval !== null) {\r\n      // animation playback is on\r\n      return\r\n    }\r\n\r\n    if (this._editMode === EDIT_MODE.FRAGMENT) {\r\n      // prevent picking in fragment edit mode\r\n      return\r\n    }\r\n\r\n    if (this._objectControls.isEditingAltObj()) {\r\n      // prevent picking during component rotation\r\n      return\r\n    }\r\n\r\n    // update last pick & find complex\r\n    let complex = null\r\n    if (event.obj.atom) {\r\n      complex = event.obj.atom.residue.getChain().getComplex()\r\n      this._lastPick = event.obj.atom\r\n    } else if (event.obj.residue) {\r\n      complex = event.obj.residue.getChain().getComplex()\r\n      this._lastPick = event.obj.residue\r\n    } else if (event.obj.chain) {\r\n      complex = event.obj.chain.getComplex()\r\n      this._lastPick = event.obj.chain\r\n    } else if (event.obj.molecule) {\r\n      complex = event.obj.molecule.complex\r\n      this._lastPick = event.obj.molecule\r\n    } else {\r\n      this._lastPick = null\r\n    }\r\n\r\n    function _updateSelection(visual) {\r\n      visual.updateSelectionMask(event.obj)\r\n      visual.rebuildSelectionGeometry()\r\n    }\r\n\r\n    // update visual\r\n    if (complex) {\r\n      const visual = this._getVisualForComplex(complex)\r\n      if (visual) {\r\n        _updateSelection(visual)\r\n        this._needRender = true\r\n      }\r\n    } else {\r\n      this._forEachComplexVisual(_updateSelection)\r\n      this._needRender = true\r\n    }\r\n\r\n    this._updateInfoPanel()\r\n    this.dispatchEvent(event)\r\n  }\r\n\r\n  _onKeyDown(event) {\r\n    if (!this._running || !this._hotKeysEnabled) {\r\n      return\r\n    }\r\n\r\n    switch (event.keyCode) {\r\n      case 'C'.charCodeAt(0):\r\n        if (settings.now.editing) {\r\n          this._enterComponentEditMode()\r\n        }\r\n        break\r\n      case 'F'.charCodeAt(0):\r\n        if (settings.now.editing) {\r\n          this._enterFragmentEditMode()\r\n        }\r\n        break\r\n      case 'A'.charCodeAt(0):\r\n        switch (this._editMode) {\r\n          case EDIT_MODE.COMPONENT:\r\n            this._applyComponentEdit()\r\n            break\r\n          case EDIT_MODE.FRAGMENT:\r\n            this._applyFragmentEdit()\r\n            break\r\n          default:\r\n            break\r\n        }\r\n        break\r\n      case 'D'.charCodeAt(0):\r\n        switch (this._editMode) {\r\n          case EDIT_MODE.COMPONENT:\r\n            this._discardComponentEdit()\r\n            break\r\n          case EDIT_MODE.FRAGMENT:\r\n            this._discardFragmentEdit()\r\n            break\r\n          default:\r\n            break\r\n        }\r\n        break\r\n      case 'S'.charCodeAt(0):\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        settings.set('ao', !settings.now.ao)\r\n        this._needRender = true\r\n        break\r\n      case 107:\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        this._forEachComplexVisual((visual) => {\r\n          visual.expandSelection()\r\n          visual.rebuildSelectionGeometry()\r\n        })\r\n        this._updateInfoPanel()\r\n        this._needRender = true\r\n        break\r\n      case 109:\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        this._forEachComplexVisual((visual) => {\r\n          visual.shrinkSelection()\r\n          visual.rebuildSelectionGeometry()\r\n        })\r\n        this._updateInfoPanel()\r\n        this._needRender = true\r\n        break\r\n      default:\r\n    }\r\n  }\r\n\r\n  _onKeyUp(event) {\r\n    if (!this._running || !this._hotKeysEnabled) {\r\n      return\r\n    }\r\n\r\n    if (event.keyCode === 'X'.charCodeAt(0)) {\r\n      this._extractRepresentation()\r\n    }\r\n  }\r\n\r\n  _updateInfoPanel() {\r\n    const info = this._msgAtomInfo.getElementsByTagName('p')[0]\r\n    let atom\r\n    let residue\r\n\r\n    let count = 0\r\n    this._forEachComplexVisual((visual) => {\r\n      count += visual.getSelectionCount()\r\n    })\r\n\r\n    while (info.firstChild) {\r\n      info.removeChild(info.firstChild)\r\n    }\r\n\r\n    if (count === 0) {\r\n      this._msgAtomInfo.style.opacity = 0.0\r\n      return\r\n    }\r\n\r\n    let firstLine = `${String(count)} atom${count !== 1 ? 's' : ''} selected`\r\n    if (this._lastPick !== null) {\r\n      firstLine += ', the last pick:'\r\n    }\r\n    let secondLine = ''\r\n    let aName = ''\r\n    let coordLine = ''\r\n\r\n    if (this._lastPick instanceof Atom) {\r\n      atom = this._lastPick\r\n      residue = atom.residue\r\n\r\n      aName = atom.name\r\n      const location =\r\n        atom.location !== 32 ? String.fromCharCode(atom.location) : '' // 32 is code of white-space\r\n      secondLine = `${atom.element.fullName} #${atom.serial}${location}: \\\r\n      ${residue._chain._name}.${residue._type._name}${\r\n        residue._sequence\r\n      }${residue._icode.trim()}.`\r\n      secondLine += aName\r\n\r\n      coordLine = `Coord: (${atom.position.x.toFixed(2).toString()},\\\r\n     ${atom.position.y.toFixed(2).toString()},\\\r\n     ${atom.position.z.toFixed(2).toString()})`\r\n    } else if (this._lastPick instanceof Residue) {\r\n      residue = this._lastPick\r\n\r\n      secondLine = `${residue._type._fullName}: \\\r\n      ${residue._chain._name}.${residue._type._name}${\r\n        residue._sequence\r\n      }${residue._icode.trim()}`\r\n    } else if (this._lastPick instanceof Chain) {\r\n      secondLine = `chain ${this._lastPick._name}`\r\n    } else if (this._lastPick instanceof Molecule) {\r\n      secondLine = `molecule ${this._lastPick._name}`\r\n    }\r\n\r\n    info.appendChild(document.createTextNode(firstLine))\r\n\r\n    if (secondLine !== '') {\r\n      info.appendChild(document.createElement('br'))\r\n      info.appendChild(document.createTextNode(secondLine))\r\n    }\r\n\r\n    if (coordLine !== '') {\r\n      info.appendChild(document.createElement('br'))\r\n      info.appendChild(document.createTextNode(coordLine))\r\n    }\r\n\r\n    this._msgAtomInfo.style.opacity = 1.0\r\n  }\r\n\r\n  _getAltObj() {\r\n    if (this._editors) {\r\n      let altObj = null\r\n      for (let i = 0; i < this._editors.length; ++i) {\r\n        const nextAltObj = this._editors[i].getAltObj()\r\n        if (nextAltObj.objects.length > 0) {\r\n          if (altObj) {\r\n            // we have selected atoms in two or more visuals -- not supported\r\n            altObj = null\r\n            break\r\n          }\r\n          altObj = nextAltObj\r\n        }\r\n      }\r\n      if (altObj) {\r\n        return altObj\r\n      }\r\n    }\r\n\r\n    return {\r\n      objects: [],\r\n      pivot: new Vector3(0, 0, 0)\r\n    }\r\n  }\r\n\r\n  resetPivot() {\r\n    const boundingBox = new Box3()\r\n    const center = new Vector3()\r\n    boundingBox.makeEmpty()\r\n    this._forEachVisual((visual) => {\r\n      boundingBox.union(visual.getBoundaries().boundingBox)\r\n    })\r\n\r\n    boundingBox.getCenter(center)\r\n    this._objectControls.setPivot(center.negate())\r\n    this.dispatchEvent({ type: 'transform' })\r\n  }\r\n\r\n  setPivotResidue(residue) {\r\n    const center = new Vector3()\r\n    const visual = this._getVisualForComplex(residue.getChain().getComplex())\r\n    if (!visual) {\r\n      return\r\n    }\r\n\r\n    if (residue._controlPoint) {\r\n      center.copy(residue._controlPoint)\r\n    } else {\r\n      let x = 0\r\n      let y = 0\r\n      let z = 0\r\n      const amount = residue._atoms.length\r\n      for (let i = 0; i < amount; ++i) {\r\n        const p = residue._atoms[i].position\r\n        x += p.x / amount\r\n        y += p.y / amount\r\n        z += p.z / amount\r\n      }\r\n      center.set(x, y, z)\r\n    }\r\n    center.applyMatrix4(visual.matrix).negate()\r\n    this._objectControls.setPivot(center)\r\n    this.dispatchEvent({ type: 'transform' })\r\n  }\r\n\r\n  setPivotAtom(atom) {\r\n    const center = new Vector3()\r\n    const visual = this._getVisualForComplex(\r\n      atom.residue.getChain().getComplex()\r\n    )\r\n    if (!visual) {\r\n      return\r\n    }\r\n\r\n    center.copy(atom.position)\r\n    center.applyMatrix4(visual.matrix).negate()\r\n    this._objectControls.setPivot(center)\r\n    this.dispatchEvent({ type: 'transform' })\r\n  }\r\n\r\n  getSelectionCenter(center, includesAtom, selector) {\r\n    const _centerInVisual = new Vector3(0.0, 0.0, 0.0)\r\n    center.set(0.0, 0.0, 0.0)\r\n    let count = 0\r\n\r\n    this._forEachComplexVisual((visual) => {\r\n      if (\r\n        visual.getSelectionCenter(\r\n          _centerInVisual,\r\n          includesAtom,\r\n          selector || visual.getSelectionBit()\r\n        )\r\n      ) {\r\n        center.add(_centerInVisual)\r\n        count++\r\n      }\r\n    })\r\n    if (count === 0) {\r\n      return false\r\n    }\r\n    center.divideScalar(count)\r\n    center.negate()\r\n    return true\r\n  }\r\n\r\n  setPivotSubset(selector) {\r\n    const _center = new Vector3(0.0, 0.0, 0.0)\r\n    const includesAtom = selector\r\n      ? _includesInSelector\r\n      : _includesInCurSelection\r\n\r\n    if (this.getSelectionCenter(_center, includesAtom, selector)) {\r\n      this._objectControls.setPivot(_center)\r\n      this.dispatchEvent({ type: 'transform' })\r\n    } else {\r\n      this.logger.warn('selection is empty. Center operation not performed')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Makes a screenshot.\r\n   * @param {number} [width] - Width of an image. Defaults to the canvas width.\r\n   * @param {number} [height] - Height of an image. Defaults to the width (square) or canvas height,\r\n   *        if width is omitted too.\r\n   * @returns {string} Data URL representing the image contents.\r\n   */\r\n  screenshot(width, height) {\r\n    const gfx = this._gfx\r\n    const deviceWidth = gfx.renderer.domElement.width\r\n    const deviceHeight = gfx.renderer.domElement.height\r\n\r\n    function fov2Tan(fov) {\r\n      return Math.tan(MathUtils.degToRad(0.5 * fov))\r\n    }\r\n\r\n    function tan2Fov(tan) {\r\n      return MathUtils.radToDeg(Math.atan(tan)) * 2.0\r\n    }\r\n\r\n    function getDataURL() {\r\n      let dataURL\r\n      const currBrowser = utils.getBrowser()\r\n\r\n      if (currBrowser === utils.browserType.SAFARI) {\r\n        const canvas = document.createElement('canvas')\r\n        const canvasContext = canvas.getContext('2d')\r\n\r\n        canvas.width = width === undefined ? deviceWidth : width\r\n        canvas.height = height === undefined ? deviceHeight : height\r\n\r\n        canvasContext.drawImage(\r\n          gfx.renderer.domElement,\r\n          0,\r\n          0,\r\n          canvas.width,\r\n          canvas.height\r\n        )\r\n        dataURL = canvas.toDataURL('image/png')\r\n      } else {\r\n        // Copy current canvas to screenshot\r\n        dataURL = gfx.renderer.domElement.toDataURL('image/png')\r\n      }\r\n      return dataURL\r\n    }\r\n    height = height || width\r\n\r\n    let screenshotURI\r\n    if (\r\n      (width === undefined && height === undefined) ||\r\n      (width === deviceWidth && height === deviceHeight)\r\n    ) {\r\n      // renderer.domElement.toDataURL('image/png') returns flipped image in Safari\r\n      // It hasn't been resolved yet, but getScreenshotSafari()\r\n      // fixes it using an extra canvas.\r\n      screenshotURI = getDataURL()\r\n    } else {\r\n      const originalAspect = gfx.camera.aspect\r\n      const originalFov = gfx.camera.fov\r\n      const originalTanFov2 = fov2Tan(gfx.camera.fov)\r\n\r\n      // screenshot should contain the principal area of interest (a centered square touching screen sides)\r\n      const areaOfInterestSize = Math.min(gfx.width, gfx.height)\r\n      const areaOfInterestTanFov2 =\r\n        (originalTanFov2 * areaOfInterestSize) / gfx.height\r\n\r\n      // set appropriate camera aspect & FOV\r\n      const shotAspect = width / height\r\n      gfx.renderer.setPixelRatio(1)\r\n      gfx.camera.aspect = shotAspect\r\n      gfx.camera.fov = tan2Fov(\r\n        areaOfInterestTanFov2 / Math.min(shotAspect, 1.0)\r\n      )\r\n      gfx.camera.updateProjectionMatrix()\r\n\r\n      // resize canvas to the required size of screenshot\r\n      gfx.renderer.setDrawingBufferSize(width, height, 1)\r\n\r\n      // make screenshot\r\n      this._renderFrame(settings.now.stereo)\r\n      screenshotURI = getDataURL()\r\n\r\n      // restore original camera & canvas proportions\r\n      gfx.renderer.setPixelRatio(window.devicePixelRatio)\r\n      gfx.camera.aspect = originalAspect\r\n      gfx.camera.fov = originalFov\r\n      gfx.camera.updateProjectionMatrix()\r\n      gfx.renderer.setDrawingBufferSize(\r\n        gfx.width,\r\n        gfx.height,\r\n        window.devicePixelRatio\r\n      )\r\n      this._needRender = true\r\n    }\r\n\r\n    return screenshotURI\r\n  }\r\n\r\n  /**\r\n   * Makes screenshot and initiates a download.\r\n   * @param {string} [filename] - Name of a file. Default to a 'screenshot-XXXXX.png', where XXXXX is a current\r\n   *        date/time in seconds.\r\n   * @param {number} [width] - Width of an image. Defaults to the canvas width.\r\n   * @param {number} [height] - Height of an image. Defaults to the width (square) or canvas height,\r\n   *        if width is omitted too.\r\n   */\r\n  screenshotSave(filename, width, height) {\r\n    const uri = this.screenshot(width, height)\r\n    utils.shotDownload(uri, filename)\r\n  }\r\n\r\n  save(opts) {\r\n    this._export(opts.fileType)\r\n      .then((dataString) => {\r\n        const filename = this._visuals[this._curVisualName]._complex.name\r\n        utils.download(dataString, filename, opts.fileType)\r\n        this._refreshTitle()\r\n        this.dispatchEvent({ type: 'exportingDone' })\r\n      })\r\n      .catch((error) => {\r\n        this.logger.error('Could not export data')\r\n        this.logger.debug(error)\r\n        this._refreshTitle()\r\n        this.dispatchEvent({ type: 'exportingDone', error })\r\n      })\r\n  }\r\n\r\n  _tweakResolution() {\r\n    const maxPerf = [\r\n      ['poor', 100],\r\n      ['low', 500],\r\n      ['medium', 1000],\r\n      ['high', 5000],\r\n      ['ultra', Number.MAX_VALUE]\r\n    ]\r\n\r\n    let atomCount = 0\r\n    this._forEachComplexVisual((visual) => {\r\n      atomCount += visual.getComplex().getAtomCount()\r\n    })\r\n\r\n    if (atomCount > 0) {\r\n      const performance = (this._gfxScore * 10e5) / atomCount\r\n      // set resolution based on estimated performance\r\n      for (let i = 0; i < maxPerf.length; ++i) {\r\n        if (performance < maxPerf[i][1]) {\r\n          this._autoChangeResolution(maxPerf[i][0])\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _autoChangeResolution(resolution) {\r\n    if (resolution !== settings.now.resolution) {\r\n      this.logger.report(\r\n        `Your rendering resolution was changed to \"${resolution}\" for best performance.`\r\n      )\r\n    }\r\n    settings.now.resolution = resolution\r\n  }\r\n\r\n  /**\r\n   * Save current settings to cookies.\r\n   */\r\n  saveSettings() {\r\n    this._cookies.setCookie(\r\n      this._opts.settingsCookie,\r\n      JSON.stringify(this.settings.getDiffs(true))\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Load settings from cookies.\r\n   */\r\n  restoreSettings() {\r\n    try {\r\n      const cookie = this._cookies.getCookie(this._opts.settingsCookie)\r\n      const diffs = cookie ? JSON.parse(cookie) : {}\r\n      this.settings.applyDiffs(diffs, true)\r\n    } catch (e) {\r\n      this.logger.error(`Cookies parse error: ${e.message}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset current settings to the defaults.\r\n   */\r\n  resetSettings() {\r\n    this.settings.reset()\r\n  }\r\n\r\n  /*\r\n   * DANGEROUS and TEMPORARY. The method should change or disappear in future versions.\r\n   * @param {string|object} opts - See {@link Miew} constructor.\r\n   * @see {@link Miew#set}, {@link Miew#repAdd}, {@link Miew#rep}.\r\n   */\r\n  setOptions(opts) {\r\n    if (typeof opts === 'string') {\r\n      opts = Miew.options.fromAttr(opts)\r\n    }\r\n    if (opts.reps) {\r\n      this._opts.reps = null\r\n    }\r\n    merge(this._opts, opts)\r\n    if (opts.settings) {\r\n      this.set(opts.settings)\r\n    }\r\n\r\n    this._opts._objects = opts._objects\r\n    this._resetObjects()\r\n\r\n    if (opts.load) {\r\n      this.load(opts.load, { fileType: opts.type })\r\n    }\r\n\r\n    if (opts.preset) {\r\n      settings.now.preset = opts.preset\r\n    }\r\n\r\n    if (opts.reps) {\r\n      this.resetReps(opts.preset)\r\n    }\r\n\r\n    if (this._opts.view) {\r\n      this.view(this._opts.view)\r\n      delete this._opts.view\r\n    }\r\n\r\n    const visual = this._getComplexVisual()\r\n    if (visual) {\r\n      visual.getComplex().resetCurrentUnit()\r\n      if (isNumber(opts.unit)) {\r\n        visual.getComplex().setCurrentUnit(opts.unit)\r\n      }\r\n      this.resetView()\r\n      this.rebuildAll()\r\n    }\r\n  }\r\n\r\n  info(name) {\r\n    const visual = this._getComplexVisual(name)\r\n    if (!visual) {\r\n      return {}\r\n    }\r\n    const complex = visual.getComplex()\r\n    const { metadata } = complex\r\n    return {\r\n      id: metadata.id || complex.name || 'UNKNOWN',\r\n      title: (metadata.title && metadata.title.join(' ')) || 'UNKNOWN DATA',\r\n      atoms: complex.getAtomCount(),\r\n      bonds: complex.getBondCount(),\r\n      residues: complex.getResidueCount(),\r\n      chains: complex.getChainCount()\r\n    }\r\n  }\r\n\r\n  /*\r\n   * OBJECTS SEGMENT\r\n   */\r\n\r\n  addObject(objData, bThrow) {\r\n    let Ctor = null\r\n\r\n    if (objData.type === LinesObject.prototype.type) {\r\n      Ctor = LinesObject\r\n    }\r\n\r\n    if (Ctor === null) {\r\n      throw new Error(`Unknown scene object type - ${objData.type}`)\r\n    }\r\n\r\n    try {\r\n      const newObj = new Ctor(objData.params, objData.opts)\r\n      this._addSceneObject(newObj)\r\n    } catch (error) {\r\n      if (!bThrow) {\r\n        this.logger.debug(\r\n          `Error during scene object creation: ${error.message}`\r\n        )\r\n      } else {\r\n        throw error\r\n      }\r\n    }\r\n    this._needRender = true\r\n  }\r\n\r\n  _addSceneObject(sceneObject) {\r\n    const visual = this._getComplexVisual()\r\n    if (sceneObject.build && visual) {\r\n      sceneObject.build(visual.getComplex())\r\n      this._gfx.pivot.add(sceneObject.getGeometry())\r\n    }\r\n    const objects = this._objects\r\n    objects[objects.length] = sceneObject\r\n  }\r\n\r\n  _updateObjsToFrame(frameData) {\r\n    const objs = this._objects\r\n    for (let i = 0, n = objs.length; i < n; ++i) {\r\n      if (objs[i].updateToFrame) {\r\n        objs[i].updateToFrame(frameData)\r\n      }\r\n    }\r\n  }\r\n\r\n  _resetObjects() {\r\n    const objs = this._opts._objects\r\n\r\n    this._objects = []\r\n    if (objs) {\r\n      for (let i = 0, n = objs.length; i < n; ++i) {\r\n        this.addObject(objs[i], false)\r\n      }\r\n    }\r\n  }\r\n\r\n  removeObject(index) {\r\n    const obj = this._objects[index]\r\n    if (!obj) {\r\n      throw new Error(`Scene object with index ${index} does not exist`)\r\n    }\r\n    obj.destroy()\r\n    this._objects.splice(index, 1)\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Get a string with a URL to reproduce the current scene.\r\n   *\r\n   * @param {boolean} [opts.compact=true] - set this flag to false if you want to include full\r\n   * preset information regardless of the differences with settings\r\n   * @param {boolean} [opts.settings=false] - when this flag is true, changes in settings are included\r\n   * @param {boolean} [opts.view=false] - when this flag is true, a view information is included\r\n   * @returns {string} URL\r\n   */\r\n  getURL(opts) {\r\n    return options.toURL(\r\n      this.getState(\r\n        defaults(opts, {\r\n          compact: true,\r\n          settings: false,\r\n          view: false\r\n        })\r\n      )\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Get a string with a script to reproduce the current scene.\r\n   *\r\n   * @param {boolean} [opts.compact=true] - set this flag to false if you want to include full\r\n   * preset information regardless of the differences with settings\r\n   * @param {boolean} [opts.settings=true] - when this flag is true, changes in settings are included\r\n   * @param {boolean} [opts.view=true] - when this flag is true, a view information is included\r\n   * @returns {string} script\r\n   */\r\n  getScript(opts) {\r\n    return options.toScript(\r\n      this.getState(\r\n        defaults(opts, {\r\n          compact: true,\r\n          settings: true,\r\n          view: true\r\n        })\r\n      )\r\n    )\r\n  }\r\n\r\n  /*\r\n   * Generates object that represents the current state of representations list\r\n   * @param {boolean} compareWithDefaults - when this flag is true, reps list is compared (if possible)\r\n   * to preset's defaults and only diffs are generated\r\n   */\r\n  _compareReps(complexVisual, compareWithDefaults) {\r\n    const ans = {}\r\n    let repCount = 0\r\n\r\n    if (complexVisual) {\r\n      repCount = complexVisual.repCount()\r\n    }\r\n\r\n    const currPreset = settings.defaults.presets[settings.now.preset]\r\n    let compare = compareWithDefaults\r\n    if (currPreset === undefined || currPreset.length > repCount) {\r\n      compare = false\r\n      ans.preset = 'empty'\r\n    } else if (settings.now.preset !== settings.defaults.preset) {\r\n      ans.preset = settings.now.preset\r\n    }\r\n\r\n    const repsDiff = []\r\n    let emptyReps = true\r\n    for (let i = 0, n = repCount; i < n; ++i) {\r\n      repsDiff[i] = complexVisual\r\n        .repGet(i)\r\n        .compare(compare ? currPreset[i] : null)\r\n      if (!isEmpty(repsDiff[i])) {\r\n        emptyReps = false\r\n      }\r\n    }\r\n    if (!emptyReps) {\r\n      ans.reps = repsDiff\r\n    }\r\n    return ans\r\n  }\r\n\r\n  /*\r\n   * Obtain object that represents current state of miew (might be used as options in constructor).\r\n   * @param {boolean} [opts.compact=true] - set this flag to false if you want to include full\r\n   * preset information regardless of the differences with settings\r\n   * @param {boolean} [opts.settings=false] - when this flag is true, changes in settings are included\r\n   * @param {boolean} [opts.view=false] - when this flag is true, a view information is included\r\n   * @returns {Object} State object.\r\n   */\r\n  getState(opts) {\r\n    const state = {}\r\n\r\n    opts = defaults(opts, {\r\n      compact: true,\r\n      settings: false,\r\n      view: false\r\n    })\r\n\r\n    // load\r\n    const visual = this._getComplexVisual()\r\n    if (visual !== null) {\r\n      const complex = visual.getComplex()\r\n      const { metadata } = complex\r\n      if (metadata.id) {\r\n        const format = metadata.format ? `${metadata.format}:` : ''\r\n        state.load = format + metadata.id\r\n      }\r\n      const unit = complex.getCurrentUnit()\r\n      if (unit !== 1) {\r\n        state.unit = unit\r\n      }\r\n    }\r\n\r\n    // representations\r\n    const repsInfo = this._compareReps(visual, opts.compact)\r\n    if (repsInfo.preset) {\r\n      state.preset = repsInfo.preset\r\n    }\r\n\r\n    if (repsInfo.reps) {\r\n      state.reps = repsInfo.reps\r\n    }\r\n\r\n    // objects\r\n    const objects = this._objects\r\n    const objectsState = []\r\n    for (let i = 0, n = objects.length; i < n; ++i) {\r\n      objectsState[i] = objects[i].identify()\r\n    }\r\n    if (objects.length > 0) {\r\n      state._objects = objectsState\r\n    }\r\n\r\n    // view\r\n    if (opts.view) {\r\n      state.view = this.view()\r\n    }\r\n\r\n    // settings\r\n    if (opts.settings) {\r\n      const diff = this.settings.getDiffs(false)\r\n      if (!isEmpty(diff)) {\r\n        state.settings = diff\r\n      }\r\n    }\r\n\r\n    return state\r\n  }\r\n\r\n  /**\r\n   * Get parameter value.\r\n   * @param {string} param - Parameter name or path (e.g. 'modes.BS.atom').\r\n   * @param {*=} value - Default value.\r\n   * @returns {*} Parameter value.\r\n   */\r\n  get(param, value) {\r\n    return settings.get(param, value)\r\n  }\r\n\r\n  _clipPlaneUpdateValue(radius) {\r\n    const clipPlaneValue = Math.max(\r\n      this._gfx.camera.position.z - radius * settings.now.draft.clipPlaneFactor,\r\n      settings.now.camNear\r\n    )\r\n\r\n    const opts = { clipPlaneValue }\r\n    this._forEachComplexVisual((visual) => {\r\n      visual.setUberOptions(opts)\r\n    })\r\n    for (let i = 0, n = this._objects.length; i < n; ++i) {\r\n      const obj = this._objects[i]\r\n      if (obj._line) {\r\n        obj._line.material.setUberOptions(opts)\r\n      }\r\n    }\r\n    if (this._picker !== null) {\r\n      this._picker.clipPlaneValue = clipPlaneValue\r\n    }\r\n  }\r\n\r\n  _fogFarUpdateValue() {\r\n    if (this._picker !== null) {\r\n      if (this._gfx.scene.fog) {\r\n        this._picker.fogFarValue = this._gfx.scene.fog.far\r\n      } else {\r\n        this._picker.fogFarValue = undefined\r\n      }\r\n    }\r\n  }\r\n\r\n  _updateShadowmapMeshes(process) {\r\n    this._forEachComplexVisual((visual) => {\r\n      const reprList = visual._reprList\r\n      for (let i = 0, n = reprList.length; i < n; ++i) {\r\n        const repr = reprList[i]\r\n        process(repr.geo, repr.material)\r\n      }\r\n    })\r\n  }\r\n\r\n  _updateMaterials(values, needTraverse = false, process = undefined) {\r\n    this._forEachComplexVisual((visual) =>\r\n      visual.setMaterialValues(values, needTraverse, process)\r\n    )\r\n    for (let i = 0, n = this._objects.length; i < n; ++i) {\r\n      const obj = this._objects[i]\r\n      if (obj._line) {\r\n        obj._line.material.setValues(values)\r\n        obj._line.material.needsUpdate = true\r\n      }\r\n    }\r\n  }\r\n\r\n  _fogAlphaChanged() {\r\n    this._forEachComplexVisual((visual) => {\r\n      visual.setUberOptions({\r\n        fogAlpha: settings.now.fogAlpha\r\n      })\r\n    })\r\n  }\r\n\r\n  _embedWebXR() {\r\n    // switch off\r\n    if (settings.now.stereo !== 'WEBVR') {\r\n      if (this.webVR) {\r\n        this.webVR.disable()\r\n      }\r\n      this.webVR = null\r\n      return\r\n    }\r\n    // switch on\r\n    if (!this.webVR) {\r\n      this.webVR = new WebVRPoC(() => {\r\n        this._requestAnimationFrame(() => this._onTick())\r\n        this._needRender = true\r\n        this._onResize()\r\n      })\r\n    }\r\n    this.webVR.enable(this._gfx)\r\n  }\r\n\r\n  _initOnSettingsChanged() {\r\n    const on = (props, func) => {\r\n      props = isArray(props) ? props : [props]\r\n      props.forEach((prop) => {\r\n        this.settings.addEventListener(`change:${prop}`, func)\r\n      })\r\n    }\r\n\r\n    on('modes.VD.frame', () => {\r\n      const volume = this._getVolumeVisual()\r\n      if (volume === null) return\r\n\r\n      volume.showFrame(settings.now.modes.VD.frame)\r\n      this._needRender = true\r\n    })\r\n\r\n    on('modes.VD.isoMode', () => {\r\n      const volume = this._getVolumeVisual()\r\n      if (volume === null) return\r\n\r\n      volume.getMesh().material.updateDefines()\r\n      this._needRender = true\r\n    })\r\n\r\n    on('bg.color', () => {\r\n      this._onBgColorChanged()\r\n    })\r\n\r\n    on('ao', () => {\r\n      if (settings.now.ao && !isAOSupported(this._gfx.renderer.getContext())) {\r\n        this.logger.warn('Your device or browser does not support ao')\r\n        settings.set('ao', false)\r\n      } else {\r\n        const values = { normalsToGBuffer: settings.now.ao }\r\n        this._setUberMaterialValues(values)\r\n      }\r\n    })\r\n\r\n    on('zSprites', () => {\r\n      if (\r\n        settings.now.zSprites &&\r\n        !arezSpritesSupported(this._gfx.renderer.getContext())\r\n      ) {\r\n        this.logger.warn('Your device or browser does not support zSprites')\r\n        settings.set('zSprites', false)\r\n      }\r\n      this.rebuildAll()\r\n    })\r\n\r\n    on('fogColor', () => {\r\n      this._onFogColorChanged()\r\n    })\r\n\r\n    on('fogColorEnable', () => {\r\n      this._onFogColorChanged()\r\n    })\r\n\r\n    on('bg.transparent', (evt) => {\r\n      const gfx = this._gfx\r\n      if (gfx) {\r\n        gfx.renderer.setClearColor(\r\n          settings.now.bg.color,\r\n          Number(!settings.now.bg.transparent)\r\n        )\r\n      }\r\n      // update materials\r\n      this._updateMaterials({ fogTransparent: evt.value })\r\n      this.rebuildAll()\r\n    })\r\n\r\n    on('draft.clipPlane', (evt) => {\r\n      // update materials\r\n      this._updateMaterials({ clipPlane: evt.value })\r\n      this.rebuildAll()\r\n    })\r\n\r\n    on('shadow.on', (evt) => {\r\n      // update materials\r\n      const values = {\r\n        shadowmap: evt.value,\r\n        shadowmapType: settings.now.shadow.type\r\n      }\r\n      const gfx = this._gfx\r\n      if (gfx) {\r\n        gfx.renderer.shadowMap.enabled = Boolean(values.shadowmap)\r\n      }\r\n      this._updateMaterials(values, true)\r\n      if (values.shadowmap) {\r\n        this._updateShadowCamera()\r\n        this._updateShadowmapMeshes(meshutils.createShadowmapMaterial)\r\n      } else {\r\n        this._updateShadowmapMeshes(meshutils.removeShadowmapMaterial)\r\n      }\r\n      this._needRender = true\r\n    })\r\n\r\n    on('shadow.type', (evt) => {\r\n      // update materials if shadowmap is enable\r\n      if (settings.now.shadow.on) {\r\n        this._updateMaterials({ shadowmapType: evt.value }, true)\r\n        this._needRender = true\r\n      }\r\n    })\r\n\r\n    on('shadow.radius', (evt) => {\r\n      for (let i = 0; i < this._gfx.scene.children.length; i++) {\r\n        if (this._gfx.scene.children[i].shadow !== undefined) {\r\n          const light = this._gfx.scene.children[i]\r\n          light.shadow.radius = evt.value\r\n          this._needRender = true\r\n        }\r\n      }\r\n    })\r\n\r\n    on('fps', () => {\r\n      this._fps.show(settings.now.fps)\r\n    })\r\n\r\n    on(['fog', 'fogNearFactor', 'fogFarFactor'], () => {\r\n      this._updateFog()\r\n      this._needRender = true\r\n    })\r\n\r\n    on('fogAlpha', () => {\r\n      const { fogAlpha } = settings.now\r\n      if (fogAlpha < 0 || fogAlpha > 1) {\r\n        this.logger.warn('fogAlpha must belong range [0,1]')\r\n      }\r\n      this._fogAlphaChanged()\r\n      this._needRender = true\r\n    })\r\n\r\n    on('autoResolution', (evt) => {\r\n      if (evt.value && !this._gfxScore) {\r\n        this.logger.warn(\r\n          'Benchmarks are missed, autoresolution will not work! ' +\r\n            'Autoresolution should be set during miew startup.'\r\n        )\r\n      }\r\n    })\r\n\r\n    on('stereo', () => {\r\n      this._embedWebXR(settings.now.stereo === 'WEBVR')\r\n      this._needRender = true\r\n    })\r\n\r\n    on(['transparency', 'palette'], () => {\r\n      this.rebuildAll()\r\n    })\r\n\r\n    on('resolution', () => {\r\n      // update complex visuals\r\n      this.rebuildAll()\r\n\r\n      // update volume visual\r\n      const volume = this._getVolumeVisual()\r\n      if (volume) {\r\n        volume.getMesh().material.updateDefines()\r\n        this._needRender = true\r\n      }\r\n    })\r\n\r\n    on(\r\n      [\r\n        'axes',\r\n        'fxaa',\r\n        'ao',\r\n        'outline.on',\r\n        'outline.color',\r\n        'outline.threshold',\r\n        'outline.thickness'\r\n      ],\r\n      () => {\r\n        this._needRender = true\r\n      }\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Set parameter value.\r\n   * @param {string|object} params - Parameter name or path (e.g. 'modes.BS.atom') or even settings object.\r\n   * @param {*=} value - Value.\r\n   */\r\n  set(params, value) {\r\n    settings.set(params, value)\r\n  }\r\n\r\n  /**\r\n   * Select atoms with selection string.\r\n   * @param {string} expression - string expression of selection\r\n   * @param {boolean=} append - true to append selection atoms to current selection, false to rewrite selection\r\n   */\r\n  select(expression, append) {\r\n    const visual = this._getComplexVisual()\r\n    if (!visual) {\r\n      return\r\n    }\r\n\r\n    let sel = expression\r\n    if (isString(expression)) {\r\n      sel = selectors.parse(expression).selector\r\n    }\r\n\r\n    visual.select(sel, append)\r\n    this._lastPick = null\r\n\r\n    this._updateInfoPanel()\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Get or set view info packed into string.\r\n   *\r\n   * **Note:** view is stored for *left-handed* cs, euler angles are stored in radians and *ZXY-order*,\r\n   *\r\n   * @param {string=} expression - Optional string encoded the view\r\n   */\r\n  view(expression) {\r\n    const VIEW_VERSION = '1'\r\n    const self = this\r\n    const { pivot } = this._gfx\r\n    let transform = []\r\n    const eulerOrder = 'ZXY'\r\n\r\n    function encode() {\r\n      const pos = pivot.position\r\n      const scale = self._objectControls.getScale() / settings.now.radiusToFit\r\n      const euler = new Euler()\r\n      euler.setFromQuaternion(self._objectControls.getOrientation(), eulerOrder)\r\n      transform = [pos.x, pos.y, pos.z, scale, euler.x, euler.y, euler.z]\r\n      return VIEW_VERSION + utils.arrayToBase64(transform, Float32Array)\r\n    }\r\n\r\n    function decode() {\r\n      // backwards compatible: old non-versioned view is the 0th version\r\n      if (expression.length === 40) {\r\n        expression = `0${expression}`\r\n      }\r\n\r\n      const version = expression[0]\r\n      transform = utils.arrayFromBase64(expression.substr(1), Float32Array)\r\n\r\n      // apply adapter for old versions\r\n      if (version !== VIEW_VERSION) {\r\n        if (version === '0') {\r\n          // cancel radiusToFit included in old views\r\n          transform[3] /= 8.0\r\n        } else {\r\n          // do nothing\r\n          self.logger.warn(\r\n            `Encoded view version mismatch, stored as ${version} vs ${VIEW_VERSION} expected`\r\n          )\r\n          return\r\n        }\r\n      }\r\n\r\n      const interpolator = self._interpolator\r\n      const srcView = interpolator.createView()\r\n      srcView.position.copy(pivot.position)\r\n      srcView.scale = self._objectControls.getScale()\r\n      srcView.orientation.copy(self._objectControls.getOrientation())\r\n\r\n      const dstView = interpolator.createView()\r\n      dstView.position.set(transform[0], transform[1], transform[2])\r\n\r\n      // hack to make preset views work after we moved centering offset to visual nodes\r\n      // FIXME should only store main pivot offset in preset\r\n      if (self._getComplexVisual()) {\r\n        dstView.position.sub(self._getComplexVisual().position)\r\n      }\r\n\r\n      dstView.scale = transform[3] // eslint-disable-line prefer-destructuring\r\n      dstView.orientation.setFromEuler(\r\n        new Euler(transform[4], transform[5], transform[6], eulerOrder)\r\n      )\r\n\r\n      interpolator.setup(srcView, dstView)\r\n    }\r\n\r\n    if (typeof expression === 'undefined') {\r\n      return encode()\r\n    }\r\n    decode()\r\n\r\n    return expression\r\n  }\r\n\r\n  /*\r\n   * Update current view due to viewinterpolator state\r\n   */\r\n  _updateView() {\r\n    const self = this\r\n    const { pivot } = this._gfx\r\n\r\n    const interpolator = this._interpolator\r\n    if (!interpolator.wasStarted()) {\r\n      interpolator.start()\r\n    }\r\n\r\n    if (!interpolator.isMoving()) {\r\n      return\r\n    }\r\n\r\n    const res = interpolator.getCurrentView()\r\n    if (res.success) {\r\n      const curr = res.view\r\n      pivot.position.copy(curr.position)\r\n      self._objectControls.setScale(curr.scale * settings.now.radiusToFit)\r\n      self._objectControls.setOrientation(curr.orientation)\r\n      this.dispatchEvent({ type: 'transform' })\r\n      self._needRender = true\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Translate object by vector\r\n   * @param {number} x - translation value (Ang) along model's X axis\r\n   * @param {number} y - translation value (Ang) along model's Y axis\r\n   * @param {number} z - translation value (Ang) along model's Z axis\r\n   */\r\n  translate(x, y, z) {\r\n    this._objectControls.translatePivot(x, y, z)\r\n    this.dispatchEvent({ type: 'transform' })\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Rotate object by Euler angles\r\n   * @param {number} x - rotation angle around X axis in radians\r\n   * @param {number} y - rotation angle around Y axis in radians\r\n   * @param {number} z - rotation angle around Z axis in radians\r\n   */\r\n  rotate(x, y, z) {\r\n    this._objectControls.rotate(\r\n      new Quaternion().setFromEuler(new Euler(x, y, z, 'XYZ'))\r\n    )\r\n    this.dispatchEvent({ type: 'transform' })\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Scale object by factor\r\n   * @param {number} factor - scale multiplier, should greater than zero\r\n   */\r\n  scale(factor) {\r\n    if (factor <= 0) {\r\n      throw new RangeError('Scale should be greater than zero')\r\n    }\r\n    this._objectControls.scale(factor)\r\n    this.dispatchEvent({ type: 'transform' })\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Center view on selection\r\n   * @param {empty | subset | string} selector - defines part of molecule which must be centered (\r\n   * empty - center on current selection;\r\n   * subset - center on picked atom/residue/molecule;\r\n   * string - center on atoms correspond to selection string)\r\n   */\r\n  center(selector) {\r\n    // no arguments - center on current selection;\r\n    if (selector === undefined) {\r\n      this.setPivotSubset()\r\n      this._needRender = true\r\n      return\r\n    }\r\n    // subset with atom or residue - center on picked atom/residue;\r\n    if (\r\n      selector.obj !== undefined &&\r\n      ('atom' in selector.obj || 'residue' in selector.obj)\r\n    ) {\r\n      // from event with selection\r\n      if ('atom' in selector.obj) {\r\n        this.setPivotAtom(selector.obj.atom)\r\n      } else {\r\n        this.setPivotResidue(selector.obj.residue)\r\n      }\r\n      this._needRender = true\r\n      return\r\n    }\r\n    // string - center on atoms correspond to selection string\r\n    if (selector.obj === undefined && selector !== '') {\r\n      const sel = selectors.parse(selector)\r\n      if (sel.error === undefined) {\r\n        this.setPivotSubset(sel)\r\n        this._needRender = true\r\n        return\r\n      }\r\n    }\r\n    // empty subset or incorrect/empty string - center on all molecule;\r\n    this.resetPivot()\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Build selector that contains all atoms within given distance from group of atoms\r\n   * @param {Selector} selector - selector describing source group of atoms\r\n   * @param {number} radius - distance\r\n   * @returns {Selector} selector describing result group of atoms\r\n   */\r\n  within(selector, radius) {\r\n    const visual = this._getComplexVisual()\r\n    if (!visual) {\r\n      return selectors.None()\r\n    }\r\n\r\n    if (selector instanceof String) {\r\n      selector = selectors.parse(selector)\r\n    }\r\n\r\n    const res = visual.within(selector, radius)\r\n    if (res) {\r\n      visual.rebuildSelectionGeometry()\r\n      this._needRender = true\r\n    }\r\n    return res\r\n  }\r\n\r\n  /**\r\n   * Get atom position in 2D canvas coords\r\n   * @param {string} fullAtomName - full atom name, like A.38.CG\r\n   * @returns {Object} {x, y} or false if atom not found\r\n   */\r\n  projected(fullAtomName, complexName) {\r\n    const visual = this._getComplexVisual(complexName)\r\n    if (!visual) {\r\n      return false\r\n    }\r\n\r\n    const atom = visual.getComplex().getAtomByFullname(fullAtomName)\r\n    if (atom === null) {\r\n      return false\r\n    }\r\n\r\n    const pos = atom.position.clone()\r\n    // we consider atom position to be affected only by common complex transform\r\n    // ignoring any transformations that may add during editing\r\n    this._gfx.pivot.updateMatrixWorldRecursive()\r\n    this._gfx.camera.updateMatrixWorldRecursive()\r\n    this._gfx.pivot.localToWorld(pos)\r\n    pos.project(this._gfx.camera)\r\n\r\n    return {\r\n      x: (pos.x + 1.0) * 0.5 * this._gfx.width,\r\n      y: (1.0 - pos.y) * 0.5 * this._gfx.height\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Replace secondary structure with calculated one.\r\n   *\r\n   * DSSP algorithm implementation is used.\r\n   *\r\n   * Kabsch W, Sander C. 1983. Dictionary of protein secondary structure: pattern recognition of hydrogen-bonded and\r\n   * geometrical features. Biopolymers. 22(12):2577-2637. doi:10.1002/bip.360221211.\r\n   *\r\n   * @param {string=} complexName - complex name\r\n   */\r\n  dssp(complexName) {\r\n    const visual = this._getComplexVisual(complexName)\r\n    if (!visual) {\r\n      return\r\n    }\r\n    visual.getComplex().dssp()\r\n\r\n    // rebuild dependent representations (cartoon or ss-colored)\r\n    visual._reprList.forEach((rep) => {\r\n      if (rep.mode.id === 'CA' || rep.colorer.id === 'SS') {\r\n        rep.needsRebuild = true\r\n      }\r\n    })\r\n  }\r\n\r\n  exportCML() {\r\n    const self = this\r\n\r\n    function extractRotation(m) {\r\n      const xAxis = new Vector3()\r\n      const yAxis = new Vector3()\r\n      const zAxis = new Vector3()\r\n      m.extractBasis(xAxis, yAxis, zAxis)\r\n      xAxis.normalize()\r\n      yAxis.normalize()\r\n      zAxis.normalize()\r\n      const retMat = new Matrix4()\r\n      retMat.identity()\r\n      retMat.makeBasis(xAxis, yAxis, zAxis)\r\n      return retMat\r\n    }\r\n\r\n    function updateCMLData(complex) {\r\n      const { root } = self._gfx\r\n      const mat = extractRotation(root.matrixWorld)\r\n      const v4 = new Vector4(0, 0, 0, 0)\r\n      const vCenter = new Vector4(0, 0, 0, 0)\r\n      let xml = null\r\n      let ap = null\r\n\r\n      // update atoms in cml\r\n      complex.forEachAtom((atom) => {\r\n        if (atom.xmlNodeRef && atom.xmlNodeRef.xmlNode) {\r\n          xml = atom.xmlNodeRef.xmlNode\r\n          ap = atom.position\r\n          v4.set(ap.x, ap.y, ap.z, 1.0)\r\n          v4.applyMatrix4(mat)\r\n          xml.setAttribute('x3', v4.x.toString())\r\n          xml.setAttribute('y3', v4.y.toString())\r\n          xml.setAttribute('z3', v4.z.toString())\r\n          xml.removeAttribute('x2')\r\n          xml.removeAttribute('y2')\r\n        }\r\n      })\r\n      // update stereo groups in cml\r\n      complex.forEachSGroup((sGroup) => {\r\n        if (sGroup.xmlNodeRef && sGroup.xmlNodeRef.xmlNode) {\r\n          xml = sGroup.xmlNodeRef.xmlNode\r\n          ap = sGroup.getPosition()\r\n          v4.set(ap.x, ap.y, ap.z, 1.0)\r\n          const cp = sGroup.getCentralPoint()\r\n          if (cp === null) {\r\n            v4.applyMatrix4(mat)\r\n          } else {\r\n            vCenter.set(cp.x, cp.y, cp.z, 0.0)\r\n            v4.add(vCenter)\r\n            v4.applyMatrix4(mat) // pos in global space\r\n            vCenter.set(cp.x, cp.y, cp.z, 1.0)\r\n            vCenter.applyMatrix4(mat)\r\n            v4.sub(vCenter)\r\n          }\r\n          xml.setAttribute('x', v4.x.toString())\r\n          xml.setAttribute('y', v4.y.toString())\r\n          xml.setAttribute('z', v4.z.toString())\r\n        }\r\n      })\r\n    }\r\n\r\n    const visual = self._getComplexVisual()\r\n    const complex = visual ? visual.getComplex() : null\r\n    if (complex && complex.originalCML) {\r\n      updateCMLData(complex)\r\n\r\n      // serialize xml structure to string\r\n      const oSerializer = new XMLSerializer()\r\n      return oSerializer.serializeToString(complex.originalCML)\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Reproduce the RCSB PDB Molecule of the Month style by David S. Goodsell\r\n   *\r\n   * @see http://pdb101.rcsb.org/motm/motm-about\r\n   */\r\n  motm() {\r\n    settings.set({\r\n      fogColorEnable: true,\r\n      fogColor: 0x000000,\r\n      outline: { on: true, threshold: 0.01 },\r\n      bg: { color: 0xffffff }\r\n    })\r\n\r\n    this._forEachComplexVisual((visual) => {\r\n      const rep = []\r\n      const complex = visual.getComplex()\r\n      const palette = palettes.get(settings.now.palette)\r\n      for (let i = 0; i < complex.getChainCount(); i++) {\r\n        const curChainName = complex._chains[i]._name\r\n        const curChainColor = palette.getChainColor(curChainName)\r\n        rep[i] = {\r\n          selector: `chain ${curChainName}`,\r\n          mode: 'VW',\r\n          colorer: ['CB', { color: curChainColor, factor: 0.9 }],\r\n          material: 'FL'\r\n        }\r\n      }\r\n      visual.resetReps(rep)\r\n    })\r\n  }\r\n}\r\n\r\nassign(\r\n  Miew,\r\n  /** @lends Miew */ {\r\n    VERSION: Miew.VERSION,\r\n\r\n    registeredPlugins: [],\r\n\r\n    // export namespaces // TODO: WIP: refactoring external interface\r\n    chem,\r\n    io,\r\n    modes,\r\n    colorers,\r\n    materials,\r\n    palettes,\r\n    options,\r\n    settings,\r\n    utils,\r\n    gfx: {\r\n      Representation\r\n    }\r\n  }\r\n)\r\n",
		"/* eslint-disable */\r\n// DO NOT EDIT! Automatically generated from .jison\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar parser = (function () {\r\n  var o = function (k, v, o, l) {\r\n      for (o = o || {}, l = k.length; l--; o[k[l]] = v);\r\n      return o\r\n    },\r\n    $V0 = [1, 60],\r\n    $V1 = [1, 62],\r\n    $V2 = [1, 63],\r\n    $V3 = [1, 65],\r\n    $V4 = [1, 66],\r\n    $V5 = [1, 67],\r\n    $V6 = [1, 68],\r\n    $V7 = [1, 69],\r\n    $V8 = [1, 80],\r\n    $V9 = [1, 72],\r\n    $Va = [1, 73],\r\n    $Vb = [1, 74],\r\n    $Vc = [1, 75],\r\n    $Vd = [1, 99],\r\n    $Ve = [1, 76],\r\n    $Vf = [1, 100],\r\n    $Vg = [1, 79],\r\n    $Vh = [1, 51],\r\n    $Vi = [1, 81],\r\n    $Vj = [1, 82],\r\n    $Vk = [1, 84],\r\n    $Vl = [1, 83],\r\n    $Vm = [1, 85],\r\n    $Vn = [1, 96],\r\n    $Vo = [1, 97],\r\n    $Vp = [1, 98],\r\n    $Vq = [1, 86],\r\n    $Vr = [1, 87],\r\n    $Vs = [1, 64],\r\n    $Vt = [1, 70],\r\n    $Vu = [1, 71],\r\n    $Vv = [1, 77],\r\n    $Vw = [1, 78],\r\n    $Vx = [1, 53],\r\n    $Vy = [1, 54],\r\n    $Vz = [1, 55],\r\n    $VA = [1, 61],\r\n    $VB = [1, 88],\r\n    $VC = [1, 89],\r\n    $VD = [1, 90],\r\n    $VE = [1, 91],\r\n    $VF = [1, 92],\r\n    $VG = [1, 93],\r\n    $VH = [1, 94],\r\n    $VI = [1, 95],\r\n    $VJ = [1, 101],\r\n    $VK = [1, 102],\r\n    $VL = [1, 103],\r\n    $VM = [1, 104],\r\n    $VN = [1, 105],\r\n    $VO = [1, 56],\r\n    $VP = [1, 57],\r\n    $VQ = [1, 58],\r\n    $VR = [1, 59],\r\n    $VS = [1, 115],\r\n    $VT = [1, 111],\r\n    $VU = [1, 114],\r\n    $VV = [1, 112],\r\n    $VW = [1, 113],\r\n    $VX = [1, 118],\r\n    $VY = [1, 117],\r\n    $VZ = [1, 134],\r\n    $V_ = [1, 149],\r\n    $V$ = [1, 150],\r\n    $V01 = [1, 157],\r\n    $V11 = [\r\n      5, 6, 7, 9, 13, 14, 15, 17, 18, 19, 20, 23, 25, 26, 27, 30, 33, 34, 35,\r\n      37, 38, 41, 43, 45, 46, 49, 52, 54, 55, 56, 58, 59, 62, 64, 65, 66, 70,\r\n      72, 74, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,\r\n      96, 97, 98, 99, 101\r\n    ],\r\n    $V21 = [\r\n      5, 6, 7, 9, 13, 14, 15, 17, 18, 19, 20, 23, 25, 26, 27, 30, 33, 34, 35,\r\n      37, 38, 41, 43, 45, 46, 49, 52, 54, 55, 56, 58, 59, 62, 64, 65, 66, 70,\r\n      71, 72, 74, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94,\r\n      95, 96, 97, 98, 99, 101\r\n    ],\r\n    $V31 = [\r\n      5, 6, 7, 9, 13, 15, 17, 18, 19, 20, 23, 25, 26, 27, 30, 33, 34, 37, 38,\r\n      41, 43, 45, 46, 49, 52, 54, 55, 56, 58, 59, 62, 64, 65, 66, 70, 72, 82,\r\n      83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95\r\n    ],\r\n    $V41 = [5, 70, 72],\r\n    $V51 = [5, 74],\r\n    $V61 = [71, 101]\r\n  var parser = {\r\n    trace: function trace() {},\r\n    yy: {},\r\n    symbols_: {\r\n      error: 2,\r\n      Program: 3,\r\n      Command: 4,\r\n      EOF: 5,\r\n      RESET: 6,\r\n      BUILD: 7,\r\n      ALL: 8,\r\n      HELP: 9,\r\n      Path: 10,\r\n      MOTM: 11,\r\n      OneArgCommand: 12,\r\n      GET: 13,\r\n      STRING: 14,\r\n      SET: 15,\r\n      Value: 16,\r\n      SET_SAVE: 17,\r\n      SET_RESTORE: 18,\r\n      SET_RESET: 19,\r\n      PRESET: 20,\r\n      AddRepresentation: 21,\r\n      EditRepresentation: 22,\r\n      REMOVE: 23,\r\n      RepresentationReference: 24,\r\n      HIDE: 25,\r\n      SHOW: 26,\r\n      LIST: 27,\r\n      EXPAND_KEY: 28,\r\n      SELECTOR_KEY: 29,\r\n      SELECT: 30,\r\n      AS: 31,\r\n      WordAll: 32,\r\n      SELECTOR: 33,\r\n      WITHIN: 34,\r\n      NUMBER: 35,\r\n      OF: 36,\r\n      MATERIAL: 37,\r\n      IDENTIFIER: 38,\r\n      ModeCMD: 39,\r\n      ColorCMD: 40,\r\n      VIEW: 41,\r\n      BASE_64: 42,\r\n      UNIT: 43,\r\n      DSSP: 44,\r\n      SCALE: 45,\r\n      ROTATE: 46,\r\n      AxesList: 47,\r\n      TRANSLATE: 48,\r\n      CENTER: 49,\r\n      GetURLBranch: 50,\r\n      Screenshot: 51,\r\n      LINE: 52,\r\n      ArgList: 53,\r\n      LISTOBJ: 54,\r\n      REMOVEOBJ: 55,\r\n      URL: 56,\r\n      VIEW_KEY: 57,\r\n      SCREENSHOT: 58,\r\n      LOAD: 59,\r\n      Url: 60,\r\n      FILE_KEY: 61,\r\n      ADD: 62,\r\n      Description: 63,\r\n      REP: 64,\r\n      MODE: 65,\r\n      COLOR: 66,\r\n      Descriptor: 67,\r\n      RepresentationOwnProperty: 68,\r\n      RepresentationOwnPropertyOpts: 69,\r\n      DESC_KEY: 70,\r\n      '=': 71,\r\n      DESC_KEY_OPTS: 72,\r\n      AxesArg: 73,\r\n      DESC_KEY_AXES: 74,\r\n      Arg: 75,\r\n      PathWoDescKey: 76,\r\n      HEX: 77,\r\n      BOOL: 78,\r\n      Word: 79,\r\n      CommandSetWoDESC_KEY: 80,\r\n      DescKeys: 81,\r\n      CLEAR: 82,\r\n      FILE_LIST: 83,\r\n      FILE_REGISTER: 84,\r\n      FILE_DELETE: 85,\r\n      PRESET_ADD: 86,\r\n      PRESET_DELETE: 87,\r\n      PRESET_UPDATE: 88,\r\n      PRESET_RENAME: 89,\r\n      PRESET_OPEN: 90,\r\n      CREATE_SCENARIO: 91,\r\n      RESET_SCENARIO: 92,\r\n      DELETE_SCENARIO: 93,\r\n      ADD_SCENARIO_ITEM: 94,\r\n      LIST_SCENARIO: 95,\r\n      PDB_KEY: 96,\r\n      DELAY_KEY: 97,\r\n      PRST_KEY: 98,\r\n      DESCRIPTION_KEY: 99,\r\n      CommandSet: 100,\r\n      '.': 101,\r\n      PresetPath: 102,\r\n      '/': 103,\r\n      HexOrNumber: 104,\r\n      $accept: 0,\r\n      $end: 1\r\n    },\r\n    terminals_: {\r\n      2: 'error',\r\n      5: 'EOF',\r\n      6: 'RESET',\r\n      7: 'BUILD',\r\n      8: 'ALL',\r\n      9: 'HELP',\r\n      11: 'MOTM',\r\n      13: 'GET',\r\n      14: 'STRING',\r\n      15: 'SET',\r\n      17: 'SET_SAVE',\r\n      18: 'SET_RESTORE',\r\n      19: 'SET_RESET',\r\n      20: 'PRESET',\r\n      23: 'REMOVE',\r\n      25: 'HIDE',\r\n      26: 'SHOW',\r\n      27: 'LIST',\r\n      28: 'EXPAND_KEY',\r\n      29: 'SELECTOR_KEY',\r\n      30: 'SELECT',\r\n      31: 'AS',\r\n      33: 'SELECTOR',\r\n      34: 'WITHIN',\r\n      35: 'NUMBER',\r\n      36: 'OF',\r\n      37: 'MATERIAL',\r\n      38: 'IDENTIFIER',\r\n      41: 'VIEW',\r\n      42: 'BASE_64',\r\n      43: 'UNIT',\r\n      44: 'DSSP',\r\n      45: 'SCALE',\r\n      46: 'ROTATE',\r\n      48: 'TRANSLATE',\r\n      49: 'CENTER',\r\n      52: 'LINE',\r\n      54: 'LISTOBJ',\r\n      55: 'REMOVEOBJ',\r\n      56: 'URL',\r\n      57: 'VIEW_KEY',\r\n      58: 'SCREENSHOT',\r\n      59: 'LOAD',\r\n      61: 'FILE_KEY',\r\n      62: 'ADD',\r\n      64: 'REP',\r\n      65: 'MODE',\r\n      66: 'COLOR',\r\n      70: 'DESC_KEY',\r\n      71: '=',\r\n      72: 'DESC_KEY_OPTS',\r\n      74: 'DESC_KEY_AXES',\r\n      77: 'HEX',\r\n      78: 'BOOL',\r\n      82: 'CLEAR',\r\n      83: 'FILE_LIST',\r\n      84: 'FILE_REGISTER',\r\n      85: 'FILE_DELETE',\r\n      86: 'PRESET_ADD',\r\n      87: 'PRESET_DELETE',\r\n      88: 'PRESET_UPDATE',\r\n      89: 'PRESET_RENAME',\r\n      90: 'PRESET_OPEN',\r\n      91: 'CREATE_SCENARIO',\r\n      92: 'RESET_SCENARIO',\r\n      93: 'DELETE_SCENARIO',\r\n      94: 'ADD_SCENARIO_ITEM',\r\n      95: 'LIST_SCENARIO',\r\n      96: 'PDB_KEY',\r\n      97: 'DELAY_KEY',\r\n      98: 'PRST_KEY',\r\n      99: 'DESCRIPTION_KEY',\r\n      101: '.',\r\n      103: '/'\r\n    },\r\n    productions_: [\r\n      0,\r\n      [3, 2],\r\n      [3, 1],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 3],\r\n      [4, 3],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 4],\r\n      [4, 2],\r\n      [4, 6],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 3],\r\n      [4, 3],\r\n      [4, 4],\r\n      [4, 4],\r\n      [4, 1],\r\n      [4, 2],\r\n      [50, 1],\r\n      [50, 2],\r\n      [50, 2],\r\n      [50, 3],\r\n      [50, 3],\r\n      [51, 1],\r\n      [51, 2],\r\n      [51, 3],\r\n      [12, 2],\r\n      [12, 2],\r\n      [12, 2],\r\n      [21, 1],\r\n      [21, 2],\r\n      [21, 2],\r\n      [21, 3],\r\n      [22, 2],\r\n      [22, 3],\r\n      [39, 2],\r\n      [39, 3],\r\n      [40, 2],\r\n      [40, 3],\r\n      [24, 1],\r\n      [24, 1],\r\n      [63, 1],\r\n      [63, 2],\r\n      [63, 3],\r\n      [63, 4],\r\n      [67, 1],\r\n      [67, 1],\r\n      [67, 2],\r\n      [68, 3],\r\n      [69, 3],\r\n      [47, 1],\r\n      [47, 2],\r\n      [73, 2],\r\n      [53, 1],\r\n      [53, 2],\r\n      [75, 3],\r\n      [16, 1],\r\n      [16, 1],\r\n      [16, 1],\r\n      [16, 1],\r\n      [16, 1],\r\n      [79, 1],\r\n      [79, 1],\r\n      [32, 1],\r\n      [32, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [81, 1],\r\n      [81, 1],\r\n      [81, 1],\r\n      [81, 1],\r\n      [81, 1],\r\n      [81, 1],\r\n      [81, 1],\r\n      [100, 1],\r\n      [100, 1],\r\n      [76, 1],\r\n      [76, 3],\r\n      [76, 3],\r\n      [10, 1],\r\n      [10, 1],\r\n      [10, 3],\r\n      [10, 3],\r\n      [10, 3],\r\n      [60, 1],\r\n      [102, 1],\r\n      [102, 3],\r\n      [104, 1],\r\n      [104, 1]\r\n    ],\r\n    performAction: function anonymous(\r\n      yytext,\r\n      yyleng,\r\n      yylineno,\r\n      yy,\r\n      yystate /* action[1] */,\r\n      $$ /* vstack */,\r\n      _$ /* lstack */\r\n    ) {\r\n      /* this == yyval */\r\n\r\n      var $0 = $$.length - 1\r\n      switch (yystate) {\r\n        case 1:\r\n          return $$[$0 - 1]\r\n          break\r\n        case 3:\r\n          this.$ = yy.miew.reset(false)\r\n          yy.ClearContext()\r\n          yy.miew.resetReps('empty')\r\n          break\r\n        case 4:\r\n          this.$ = yy.miew.rebuild()\r\n          break\r\n        case 5:\r\n          this.$ = yy.miew.rebuildAll()\r\n          yy.miew.rebuild()\r\n          break\r\n        case 6:\r\n          this.$ = yy.echo(yy.utils.help().toString())\r\n          break\r\n        case 7:\r\n          this.$ = yy.echo(yy.utils.help($$[$0]).toString())\r\n          break\r\n        case 8:\r\n          this.$ = yy.miew.motm()\r\n          break\r\n        case 10:\r\n        case 11:\r\n          this.$ = yy.utils.propagateProp($$[$0])\r\n          yy.echo(yy.miew.get($$[$0]).toString())\r\n          break\r\n        case 12:\r\n        case 13:\r\n          this.$ = yy.miew.set(\r\n            $$[$0 - 1],\r\n            yy.utils.propagateProp($$[$0 - 1], $$[$0])\r\n          )\r\n          break\r\n        case 14:\r\n          this.$ = yy.miew.saveSettings()\r\n          break\r\n        case 15:\r\n          this.$ = yy.miew.restoreSettings()\r\n          break\r\n        case 16:\r\n          this.$ = yy.miew.resetSettings()\r\n          break\r\n        case 17:\r\n          this.$ = yy.miew.resetReps()\r\n          break\r\n        case 18:\r\n          this.$ = yy.miew.applyPreset($$[$0])\r\n          break\r\n        case 21:\r\n          this.$ = yy.miew.repRemove($$[$0])\r\n          yy.representations.remove($$[$0])\r\n          break\r\n        case 22:\r\n          this.$ = yy.miew.repHide($$[$0])\r\n          break\r\n        case 23:\r\n          this.$ = yy.miew.repHide($$[$0], false)\r\n          break\r\n        case 24:\r\n          this.$ = yy.echo(\r\n            yy.utils.listRep(yy.miew, yy.representations, $$[$0], '-e')\r\n          )\r\n          break\r\n        case 25:\r\n          this.$ = yy.echo(yy.utils.list(yy.miew, yy.representations))\r\n          break\r\n        case 26:\r\n          this.$ = yy.echo(yy.utils.list(yy.miew, yy.representations, $$[$0]))\r\n          break\r\n        case 27:\r\n          this.$ = yy.echo(yy.utils.listSelector(yy.miew, yy.Context))\r\n          break\r\n        case 28:\r\n          this.$ = yy.miew.select(\r\n            yy.utils.checkArg($$[$0 - 1].toLowerCase(), $$[$0], true)\r\n          )\r\n          break\r\n        case 29:\r\n          this.$ = yy.Context[$$[$0].toLowerCase()] = yy.utils.checkArg(\r\n            $$[$0 - 3].toLowerCase(),\r\n            $$[$0 - 2],\r\n            true\r\n          )\r\n          yy.miew.select(yy.Context[$$[$0].toLowerCase()])\r\n          break\r\n        case 30:\r\n          this.$ = yy.miew.rep(yy.miew.repCurrent(), {\r\n            selector: yy.utils.checkArg($$[$0 - 1].toLowerCase(), $$[$0])\r\n          })\r\n          break\r\n        case 31:\r\n          this.$ = yy.Context[$$[$0].toLowerCase()] = yy.miew.within(\r\n            yy.utils.checkArg('select', $$[$0 - 2], true),\r\n            Number($$[$0 - 4])\r\n          )\r\n          break\r\n        case 32:\r\n          this.$ = yy.miew.rep(yy.miew.repCurrent(), {\r\n            material: yy.utils.checkArg(\r\n              $$[$0 - 1].toLowerCase(),\r\n              $$[$0].toUpperCase()\r\n            )\r\n          })\r\n          break\r\n        case 35:\r\n          this.$ = yy.echo(yy.miew.view())\r\n          break\r\n        case 36:\r\n        case 37:\r\n          this.$ = yy.miew.view($$[$0])\r\n          break\r\n        case 38:\r\n          this.$ = yy.echo(yy.miew.changeUnit())\r\n          break\r\n        case 39:\r\n          this.$ = yy.echo(yy.miew.changeUnit($$[$0]))\r\n          break\r\n        case 40:\r\n          this.$ = yy.miew.dssp()\r\n          break\r\n        case 41:\r\n          this.$ = yy.miew.scale($$[$0])\r\n          break\r\n        case 42:\r\n          for (var i = 0, n = $$[$0].length; i < n; i++) {\r\n            yy.miew.rotate(\r\n              ($$[$0][i]['x'] * Math.PI) / 180.0,\r\n              ($$[$0][i]['y'] * Math.PI) / 180.0,\r\n              ($$[$0][i]['z'] * Math.PI) / 180.0\r\n            )\r\n          }\r\n          break\r\n        case 43:\r\n          for (var i = 0, n = $$[$0].length; i < n; i++) {\r\n            yy.miew.translate(\r\n              $$[$0][i]['x'] || 0,\r\n              $$[$0][i]['y'] || 0,\r\n              $$[$0][i]['z'] || 0\r\n            )\r\n          }\r\n          break\r\n        case 44:\r\n          this.$ = yy.miew.center()\r\n          break\r\n        case 45:\r\n          this.$ = yy.miew.center($$[$0])\r\n          break\r\n        case 48:\r\n        case 49:\r\n          this.$ = yy.miew.addObject(\r\n            { type: 'line', params: [$$[$0 - 1], $$[$0]] },\r\n            true\r\n          )\r\n          break\r\n        case 50:\r\n        case 51:\r\n          this.$ = yy.miew.addObject(\r\n            {\r\n              type: 'line',\r\n              params: [$$[$0 - 2], $$[$0 - 1]],\r\n              opts: $$[$0].toJSO(yy.utils, 'objects', 'line')\r\n            },\r\n            true\r\n          )\r\n          break\r\n        case 52:\r\n          this.$ = yy.echo(yy.utils.listObjs(yy.miew))\r\n          break\r\n        case 53:\r\n          this.$ = yy.miew.removeObject($$[$0])\r\n          break\r\n        case 54:\r\n          this.$ = yy.echo(yy.miew.getURL({ view: false, settings: false }))\r\n          break\r\n        case 55:\r\n          this.$ = yy.echo(yy.miew.getURL({ view: false, settings: true }))\r\n          break\r\n        case 56:\r\n          this.$ = yy.echo(yy.miew.getURL({ view: true, settings: false }))\r\n          break\r\n        case 57:\r\n        case 58:\r\n          this.$ = yy.echo(yy.miew.getURL({ view: true, settings: true }))\r\n          break\r\n        case 59:\r\n          this.$ = yy.miew.screenshotSave()\r\n          break\r\n        case 60:\r\n          this.$ = yy.miew.screenshotSave('', Number($$[$0]))\r\n          break\r\n        case 61:\r\n          this.$ = yy.miew.screenshotSave(\r\n            '',\r\n            Number($$[$0 - 1]),\r\n            Number($$[$0])\r\n          )\r\n          break\r\n        case 62:\r\n        case 63:\r\n        case 64:\r\n          this.$ = yy.utils.load(yy.miew, $$[$0])\r\n          yy.representations.clear()\r\n          break\r\n        case 65:\r\n          this.$ = yy.echo(yy.representations.add(yy.miew.repAdd()))\r\n          break\r\n        case 66:\r\n          this.$ = yy.echo(yy.representations.add($$[$0], yy.miew.repAdd()))\r\n          break\r\n        case 67:\r\n          this.$ = yy.echo(yy.representations.add(yy.miew.repAdd($$[$0])))\r\n          break\r\n        case 68:\r\n          this.$ = yy.echo(\r\n            yy.representations.add($$[$0 - 1], yy.miew.repAdd($$[$0]))\r\n          )\r\n          break\r\n        case 69:\r\n          this.$ = yy.miew.rep($$[$0])\r\n          yy.miew.repCurrent($$[$0])\r\n          break\r\n        case 70:\r\n          this.$ = yy.miew.rep($$[$0 - 1], $$[$0])\r\n          yy.miew.repCurrent($$[$0 - 1])\r\n          break\r\n        case 71:\r\n          this.$ = yy.miew.rep(yy.miew.repCurrent(), {\r\n            mode: yy.utils.checkArg(\r\n              $$[$0 - 1].toLowerCase(),\r\n              $$[$0].toUpperCase()\r\n            )\r\n          })\r\n          break\r\n        case 72:\r\n          this.$ = yy.miew.rep(yy.miew.repCurrent(), {\r\n            mode: new Array(\r\n              yy.utils.checkArg(\r\n                $$[$0 - 2].toLowerCase(),\r\n                $$[$0 - 1].toUpperCase()\r\n              ),\r\n              $$[$0].toJSO(yy.utils, $$[$0 - 2], $$[$0 - 1].toUpperCase())\r\n            )\r\n          })\r\n          break\r\n        case 73:\r\n          this.$ = yy.miew.rep(yy.miew.repCurrent(), {\r\n            colorer: yy.utils.checkArg(\r\n              $$[$0 - 1].toLowerCase(),\r\n              $$[$0].toUpperCase()\r\n            )\r\n          })\r\n          break\r\n        case 74:\r\n          this.$ = yy.miew.rep(yy.miew.repCurrent(), {\r\n            colorer: new Array(\r\n              yy.utils.checkArg(\r\n                $$[$0 - 2].toLowerCase(),\r\n                $$[$0 - 1].toUpperCase()\r\n              ),\r\n              $$[$0].toJSO(yy.utils, $$[$0 - 2], $$[$0 - 1].toUpperCase())\r\n            )\r\n          })\r\n          break\r\n        case 75:\r\n          this.$ = Number(yy.representations.get($$[$0]))\r\n          break\r\n        case 76:\r\n        case 92:\r\n          this.$ = Number($$[$0])\r\n          break\r\n        case 77:\r\n          this.$ = $$[$0]\r\n          break\r\n        case 78:\r\n          this.$ = yy.assign($$[$0 - 1], $$[$0])\r\n          break\r\n        case 79:\r\n          this.$ = yy.assign($$[$0 - 2], $$[$0 - 1], $$[$0])\r\n          break\r\n        case 80:\r\n          this.$ = yy.assign($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0])\r\n          break\r\n        case 81:\r\n        case 82:\r\n          this.$ = yy.CreateObjectPair($$[$0].key, $$[$0].val)\r\n          break\r\n        case 83:\r\n          this.$ = yy.CreateObjectPair(\r\n            $$[$0 - 1].key,\r\n            new Array(\r\n              $$[$0 - 1].val,\r\n              $$[$0].toJSO(yy.utils, $$[$0 - 1].key, $$[$0 - 1].val)\r\n            )\r\n          )\r\n          break\r\n        case 84:\r\n        case 85:\r\n          this.$ = Object.create({\r\n            key: yy.keyRemap($$[$0 - 2]),\r\n            val: yy.utils.checkArg($$[$0 - 2], $$[$0])\r\n          })\r\n          break\r\n        case 86:\r\n          this.$ = [$$[$0]]\r\n          break\r\n        case 87:\r\n          this.$ = $$[$0 - 1].concat($$[$0])\r\n          break\r\n        case 88:\r\n          this.$ = yy.CreateObjectPair($$[$0 - 1].toLowerCase(), Number($$[$0]))\r\n          break\r\n        case 89:\r\n          this.$ = new yy.ArgList($$[$0])\r\n          break\r\n        case 90:\r\n          this.$ = $$[$0 - 1].append($$[$0])\r\n          break\r\n        case 91:\r\n          this.$ = new yy.Arg($$[$0 - 2], $$[$0])\r\n          break\r\n        case 93:\r\n          this.$ = parseInt($$[$0])\r\n          break\r\n        case 94:\r\n          this.$ = JSON.parse($$[$0])\r\n          break\r\n        case 95:\r\n        case 96:\r\n          this.$ = String($$[$0])\r\n          break\r\n        case 157:\r\n        case 158:\r\n        case 161:\r\n        case 162:\r\n        case 163:\r\n          this.$ = $$[$0 - 2] + $$[$0 - 1] + $$[$0] //cause of could be color word in path;\r\n          break\r\n        case 166:\r\n          this.$ = $$[$0 - 2] = $$[$0 - 2] + $$[$0 - 1] + $$[$0]\r\n          break\r\n      }\r\n    },\r\n    table: [\r\n      {\r\n        3: 1,\r\n        4: 2,\r\n        5: [1, 3],\r\n        6: [1, 4],\r\n        7: [1, 5],\r\n        9: [1, 6],\r\n        11: [1, 7],\r\n        12: 8,\r\n        13: [1, 9],\r\n        15: [1, 10],\r\n        17: [1, 11],\r\n        18: [1, 12],\r\n        19: [1, 13],\r\n        20: [1, 14],\r\n        21: 15,\r\n        22: 16,\r\n        23: [1, 17],\r\n        25: [1, 18],\r\n        26: [1, 19],\r\n        27: [1, 20],\r\n        30: [1, 21],\r\n        33: [1, 22],\r\n        34: [1, 23],\r\n        37: [1, 24],\r\n        39: 25,\r\n        40: 26,\r\n        41: [1, 27],\r\n        43: [1, 28],\r\n        44: [1, 29],\r\n        45: [1, 30],\r\n        46: [1, 31],\r\n        48: [1, 32],\r\n        49: [1, 33],\r\n        50: 34,\r\n        51: 35,\r\n        52: [1, 36],\r\n        54: [1, 37],\r\n        55: [1, 38],\r\n        56: [1, 44],\r\n        58: [1, 45],\r\n        59: [1, 39],\r\n        62: [1, 40],\r\n        64: [1, 41],\r\n        65: [1, 42],\r\n        66: [1, 43]\r\n      },\r\n      { 1: [3] },\r\n      { 5: [1, 46] },\r\n      { 1: [2, 2] },\r\n      { 5: [2, 3] },\r\n      { 5: [2, 4], 8: [1, 47] },\r\n      {\r\n        5: [2, 6],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        10: 48,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 49,\r\n        80: 52,\r\n        81: 50,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      { 5: [2, 8] },\r\n      { 5: [2, 9] },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        10: 106,\r\n        13: $V3,\r\n        14: [1, 107],\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 49,\r\n        80: 52,\r\n        81: 50,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        10: 108,\r\n        13: $V3,\r\n        14: [1, 109],\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 49,\r\n        80: 52,\r\n        81: 50,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      { 5: [2, 14] },\r\n      { 5: [2, 15] },\r\n      { 5: [2, 16] },\r\n      { 5: [2, 17], 14: $VS, 16: 110, 35: $VT, 38: $VU, 77: $VV, 78: $VW },\r\n      { 5: [2, 19] },\r\n      { 5: [2, 20] },\r\n      { 24: 116, 35: $VX, 38: $VY },\r\n      { 24: 119, 35: $VX, 38: $VY },\r\n      { 24: 120, 35: $VX, 38: $VY },\r\n      { 5: [2, 25], 24: 121, 28: [1, 122], 29: [1, 123], 35: $VX, 38: $VY },\r\n      { 14: [1, 124] },\r\n      { 14: [1, 125] },\r\n      { 35: [1, 126] },\r\n      { 38: [1, 127] },\r\n      { 5: [2, 33] },\r\n      { 5: [2, 34] },\r\n      { 5: [2, 35], 14: [1, 128], 42: [1, 129] },\r\n      { 5: [2, 38], 35: [1, 130] },\r\n      { 5: [2, 40] },\r\n      { 35: [1, 131] },\r\n      { 47: 132, 73: 133, 74: $VZ },\r\n      { 47: 135, 73: 133, 74: $VZ },\r\n      { 5: [2, 44], 14: [1, 136] },\r\n      { 5: [2, 46] },\r\n      { 5: [2, 47] },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        10: 138,\r\n        13: $V3,\r\n        14: [1, 137],\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 49,\r\n        80: 52,\r\n        81: 50,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      { 5: [2, 52] },\r\n      { 35: [1, 139] },\r\n      { 14: [1, 143], 38: [1, 141], 60: 140, 61: [1, 142] },\r\n      {\r\n        5: [2, 65],\r\n        38: [1, 144],\r\n        63: 145,\r\n        67: 146,\r\n        68: 147,\r\n        69: 148,\r\n        70: $V_,\r\n        72: $V$\r\n      },\r\n      { 24: 151, 35: $VX, 38: $VY },\r\n      { 38: [1, 152] },\r\n      { 38: [1, 153] },\r\n      { 5: [2, 54], 29: [1, 154], 57: [1, 155] },\r\n      { 5: [2, 59], 35: [1, 156] },\r\n      { 1: [2, 1] },\r\n      { 5: [2, 5] },\r\n      { 5: [2, 7], 101: $V01 },\r\n      o($V11, [2, 159]),\r\n      o($V11, [2, 160]),\r\n      o($V21, [2, 97]),\r\n      o($V21, [2, 98]),\r\n      o($V11, [2, 147]),\r\n      o($V11, [2, 148]),\r\n      o($V11, [2, 149]),\r\n      o($V11, [2, 150]),\r\n      o($V11, [2, 151]),\r\n      o($V11, [2, 152]),\r\n      o($V11, [2, 153]),\r\n      o($V21, [2, 101]),\r\n      o($V21, [2, 102]),\r\n      o($V21, [2, 103]),\r\n      o($V21, [2, 104]),\r\n      o($V21, [2, 105]),\r\n      o($V21, [2, 106]),\r\n      o($V21, [2, 107]),\r\n      o($V21, [2, 108]),\r\n      o($V21, [2, 109]),\r\n      o($V21, [2, 110]),\r\n      o($V21, [2, 111]),\r\n      o($V21, [2, 112]),\r\n      o($V21, [2, 113]),\r\n      o($V21, [2, 114]),\r\n      o($V21, [2, 115]),\r\n      o($V21, [2, 116]),\r\n      o($V21, [2, 117]),\r\n      o($V21, [2, 118]),\r\n      o($V21, [2, 119]),\r\n      o($V21, [2, 120]),\r\n      o($V21, [2, 121]),\r\n      o($V21, [2, 122]),\r\n      o($V21, [2, 123]),\r\n      o($V21, [2, 124]),\r\n      o($V21, [2, 125]),\r\n      o($V21, [2, 126]),\r\n      o($V21, [2, 127]),\r\n      o($V21, [2, 128]),\r\n      o($V21, [2, 129]),\r\n      o($V21, [2, 130]),\r\n      o($V21, [2, 131]),\r\n      o($V21, [2, 132]),\r\n      o($V21, [2, 133]),\r\n      o($V21, [2, 134]),\r\n      o($V21, [2, 135]),\r\n      o($V21, [2, 136]),\r\n      o($V21, [2, 137]),\r\n      o($V21, [2, 138]),\r\n      o($V21, [2, 139]),\r\n      o($V21, [2, 140]),\r\n      o($V21, [2, 141]),\r\n      o($V21, [2, 142]),\r\n      o($V21, [2, 143]),\r\n      o($V21, [2, 144]),\r\n      o($V21, [2, 145]),\r\n      o($V21, [2, 146]),\r\n      { 5: [2, 10], 101: $V01 },\r\n      { 5: [2, 11] },\r\n      { 14: $VS, 16: 158, 35: $VT, 38: $VU, 77: $VV, 78: $VW, 101: $V01 },\r\n      { 14: $VS, 16: 159, 35: $VT, 38: $VU, 77: $VV, 78: $VW },\r\n      { 5: [2, 18] },\r\n      o($V31, [2, 92]),\r\n      o($V31, [2, 93]),\r\n      o($V31, [2, 94]),\r\n      o($V31, [2, 95]),\r\n      o($V31, [2, 96]),\r\n      { 5: [2, 21] },\r\n      o($V41, [2, 75]),\r\n      o($V41, [2, 76]),\r\n      { 5: [2, 22] },\r\n      { 5: [2, 23] },\r\n      { 5: [2, 24] },\r\n      { 5: [2, 26] },\r\n      { 5: [2, 27] },\r\n      { 5: [2, 28], 31: [1, 160] },\r\n      { 5: [2, 30] },\r\n      { 36: [1, 161] },\r\n      { 5: [2, 32] },\r\n      { 5: [2, 36] },\r\n      { 5: [2, 37] },\r\n      { 5: [2, 39] },\r\n      { 5: [2, 41] },\r\n      { 5: [2, 42], 73: 162, 74: $VZ },\r\n      o($V51, [2, 86]),\r\n      { 35: [1, 163] },\r\n      { 5: [2, 43], 73: 162, 74: $VZ },\r\n      { 5: [2, 45] },\r\n      { 14: [1, 164] },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        10: 165,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 49,\r\n        80: 52,\r\n        81: 50,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR,\r\n        101: $V01\r\n      },\r\n      { 5: [2, 53] },\r\n      { 5: [2, 62] },\r\n      { 5: [2, 63] },\r\n      { 5: [2, 64] },\r\n      { 5: [2, 164] },\r\n      { 5: [2, 66], 63: 166, 67: 146, 68: 147, 69: 148, 70: $V_, 72: $V$ },\r\n      { 5: [2, 67] },\r\n      { 5: [2, 77], 67: 167, 68: 147, 69: 148, 70: $V_, 72: $V$ },\r\n      o($V41, [2, 81]),\r\n      o($V41, [2, 82], {\r\n        80: 52,\r\n        53: 168,\r\n        75: 169,\r\n        76: 170,\r\n        79: 171,\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      }),\r\n      { 71: [1, 172] },\r\n      { 71: [1, 173] },\r\n      { 5: [2, 69], 63: 174, 67: 146, 68: 147, 69: 148, 70: $V_, 72: $V$ },\r\n      {\r\n        5: [2, 71],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        53: 175,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 169,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      {\r\n        5: [2, 73],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        53: 176,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 169,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      { 5: [2, 55], 57: [1, 177] },\r\n      { 5: [2, 56], 29: [1, 178] },\r\n      { 5: [2, 60], 35: [1, 179] },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        35: [1, 181],\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 180,\r\n        80: 52,\r\n        81: 182,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      { 5: [2, 12] },\r\n      { 5: [2, 13] },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        32: 183,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 184,\r\n        80: 52,\r\n        81: 185,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      { 14: [1, 186] },\r\n      o($V51, [2, 87]),\r\n      o($V51, [2, 88]),\r\n      {\r\n        5: [2, 48],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        53: 187,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 169,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      {\r\n        5: [2, 49],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        53: 188,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 169,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        101: $V01\r\n      },\r\n      { 5: [2, 68] },\r\n      { 5: [2, 78], 67: 189, 68: 147, 69: 148, 70: $V_, 72: $V$ },\r\n      o($V41, [2, 83], {\r\n        80: 52,\r\n        76: 170,\r\n        79: 171,\r\n        75: 190,\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      }),\r\n      o($V31, [2, 89]),\r\n      { 71: [1, 191], 101: [1, 192] },\r\n      o($V61, [2, 156]),\r\n      { 14: $VS, 16: 193, 35: $VT, 38: $VU, 77: $VV, 78: $VW },\r\n      { 14: $VS, 16: 194, 35: $VT, 38: $VU, 77: $VV, 78: $VW },\r\n      { 5: [2, 70] },\r\n      {\r\n        5: [2, 72],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 190,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      {\r\n        5: [2, 74],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 190,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      { 5: [2, 57] },\r\n      { 5: [2, 58] },\r\n      { 5: [2, 61] },\r\n      o($V11, [2, 161]),\r\n      o($V11, [2, 162]),\r\n      o($V11, [2, 163]),\r\n      { 5: [2, 29] },\r\n      { 5: [2, 99] },\r\n      { 5: [2, 100] },\r\n      { 31: [1, 195] },\r\n      {\r\n        5: [2, 50],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 190,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      {\r\n        5: [2, 51],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 190,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      { 5: [2, 79], 67: 196, 68: 147, 69: 148, 70: $V_, 72: $V$ },\r\n      o($V31, [2, 90]),\r\n      { 14: $VS, 16: 197, 35: $VT, 38: $VU, 77: $VV, 78: $VW },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        35: [1, 199],\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        79: 198,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      o($V41, [2, 84]),\r\n      o($V31, [2, 85]),\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        32: 200,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 184,\r\n        80: 52,\r\n        81: 185,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      { 5: [2, 80] },\r\n      o($V31, [2, 91]),\r\n      o($V61, [2, 157]),\r\n      o($V61, [2, 158]),\r\n      { 5: [2, 31] }\r\n    ],\r\n    defaultActions: {\r\n      3: [2, 2],\r\n      4: [2, 3],\r\n      7: [2, 8],\r\n      8: [2, 9],\r\n      11: [2, 14],\r\n      12: [2, 15],\r\n      13: [2, 16],\r\n      15: [2, 19],\r\n      16: [2, 20],\r\n      25: [2, 33],\r\n      26: [2, 34],\r\n      29: [2, 40],\r\n      34: [2, 46],\r\n      35: [2, 47],\r\n      37: [2, 52],\r\n      46: [2, 1],\r\n      47: [2, 5],\r\n      107: [2, 11],\r\n      110: [2, 18],\r\n      116: [2, 21],\r\n      119: [2, 22],\r\n      120: [2, 23],\r\n      121: [2, 24],\r\n      122: [2, 26],\r\n      123: [2, 27],\r\n      125: [2, 30],\r\n      127: [2, 32],\r\n      128: [2, 36],\r\n      129: [2, 37],\r\n      130: [2, 39],\r\n      131: [2, 41],\r\n      136: [2, 45],\r\n      139: [2, 53],\r\n      140: [2, 62],\r\n      141: [2, 63],\r\n      142: [2, 64],\r\n      143: [2, 164],\r\n      145: [2, 67],\r\n      158: [2, 12],\r\n      159: [2, 13],\r\n      166: [2, 68],\r\n      174: [2, 70],\r\n      177: [2, 57],\r\n      178: [2, 58],\r\n      179: [2, 61],\r\n      183: [2, 29],\r\n      184: [2, 99],\r\n      185: [2, 100],\r\n      196: [2, 80],\r\n      200: [2, 31]\r\n    },\r\n    parseError: function parseError(str, hash) {\r\n      if (hash.recoverable) {\r\n        this.trace(str)\r\n      } else {\r\n        var error = new Error(str)\r\n        error.hash = hash\r\n        throw error\r\n      }\r\n    },\r\n    parse: function parse(input) {\r\n      var self = this,\r\n        stack = [0],\r\n        tstack = [],\r\n        vstack = [null],\r\n        lstack = [],\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1\r\n      var args = lstack.slice.call(arguments, 1)\r\n      var lexer = Object.create(this.lexer)\r\n      var sharedState = { yy: {} }\r\n      for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n          sharedState.yy[k] = this.yy[k]\r\n        }\r\n      }\r\n      lexer.setInput(input, sharedState.yy)\r\n      sharedState.yy.lexer = lexer\r\n      sharedState.yy.parser = this\r\n      if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {}\r\n      }\r\n      var yyloc = lexer.yylloc\r\n      lstack.push(yyloc)\r\n      var ranges = lexer.options && lexer.options.ranges\r\n      if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError\r\n      } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError\r\n      }\r\n      function popStack(n) {\r\n        stack.length = stack.length - 2 * n\r\n        vstack.length = vstack.length - n\r\n        lstack.length = lstack.length - n\r\n      }\r\n      function lex() {\r\n        var token\r\n        token = tstack.pop() || lexer.lex() || EOF\r\n        if (typeof token !== 'number') {\r\n          if (token instanceof Array) {\r\n            tstack = token\r\n            token = tstack.pop()\r\n          }\r\n          token = self.symbols_[token] || token\r\n        }\r\n        return token\r\n      }\r\n      var symbol,\r\n        preErrorSymbol,\r\n        state,\r\n        action,\r\n        a,\r\n        r,\r\n        yyval = {},\r\n        p,\r\n        len,\r\n        newState,\r\n        expected\r\n      while (true) {\r\n        state = stack[stack.length - 1]\r\n        if (this.defaultActions[state]) {\r\n          action = this.defaultActions[state]\r\n        } else {\r\n          if (symbol === null || typeof symbol == 'undefined') {\r\n            symbol = lex()\r\n          }\r\n          action = table[state] && table[state][symbol]\r\n        }\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n          var errStr = ''\r\n          expected = []\r\n          for (p in table[state]) {\r\n            if (this.terminals_[p] && p > TERROR) {\r\n              expected.push(\"'\" + this.terminals_[p] + \"'\")\r\n            }\r\n          }\r\n          if (lexer.showPosition) {\r\n            errStr =\r\n              'Parse error on line ' +\r\n              (yylineno + 1) +\r\n              ':\\n' +\r\n              lexer.showPosition() +\r\n              '\\nExpecting ' +\r\n              expected.join(', ') +\r\n              \", got '\" +\r\n              (this.terminals_[symbol] || symbol) +\r\n              \"'\"\r\n          } else {\r\n            errStr =\r\n              'Parse error on line ' +\r\n              (yylineno + 1) +\r\n              ': Unexpected ' +\r\n              (symbol == EOF\r\n                ? 'end of input'\r\n                : \"'\" + (this.terminals_[symbol] || symbol) + \"'\")\r\n          }\r\n          this.parseError(errStr, {\r\n            text: lexer.match,\r\n            token: this.terminals_[symbol] || symbol,\r\n            line: lexer.yylineno,\r\n            loc: yyloc,\r\n            expected: expected\r\n          })\r\n        }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n          throw new Error(\r\n            'Parse Error: multiple actions possible at state: ' +\r\n              state +\r\n              ', token: ' +\r\n              symbol\r\n          )\r\n        }\r\n        switch (action[0]) {\r\n          case 1:\r\n            stack.push(symbol)\r\n            vstack.push(lexer.yytext)\r\n            lstack.push(lexer.yylloc)\r\n            stack.push(action[1])\r\n            symbol = null\r\n            if (!preErrorSymbol) {\r\n              yyleng = lexer.yyleng\r\n              yytext = lexer.yytext\r\n              yylineno = lexer.yylineno\r\n              yyloc = lexer.yylloc\r\n              if (recovering > 0) {\r\n                recovering--\r\n              }\r\n            } else {\r\n              symbol = preErrorSymbol\r\n              preErrorSymbol = null\r\n            }\r\n            break\r\n          case 2:\r\n            len = this.productions_[action[1]][1]\r\n            yyval.$ = vstack[vstack.length - len]\r\n            yyval._$ = {\r\n              first_line: lstack[lstack.length - (len || 1)].first_line,\r\n              last_line: lstack[lstack.length - 1].last_line,\r\n              first_column: lstack[lstack.length - (len || 1)].first_column,\r\n              last_column: lstack[lstack.length - 1].last_column\r\n            }\r\n            if (ranges) {\r\n              yyval._$.range = [\r\n                lstack[lstack.length - (len || 1)].range[0],\r\n                lstack[lstack.length - 1].range[1]\r\n              ]\r\n            }\r\n            r = this.performAction.apply(\r\n              yyval,\r\n              [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n              ].concat(args)\r\n            )\r\n            if (typeof r !== 'undefined') {\r\n              return r\r\n            }\r\n            if (len) {\r\n              stack = stack.slice(0, -1 * len * 2)\r\n              vstack = vstack.slice(0, -1 * len)\r\n              lstack = lstack.slice(0, -1 * len)\r\n            }\r\n            stack.push(this.productions_[action[1]][0])\r\n            vstack.push(yyval.$)\r\n            lstack.push(yyval._$)\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]]\r\n            stack.push(newState)\r\n            break\r\n          case 3:\r\n            return true\r\n        }\r\n      }\r\n      return true\r\n    }\r\n  }\r\n\r\n  /* generated by jison-lex 0.3.4 */\r\n  var lexer = (function () {\r\n    var lexer = {\r\n      EOF: 1,\r\n\r\n      parseError: function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n          this.yy.parser.parseError(str, hash)\r\n        } else {\r\n          throw new Error(str)\r\n        }\r\n      },\r\n\r\n      // resets the lexer, sets new input\r\n      setInput: function (input, yy) {\r\n        this.yy = yy || this.yy || {}\r\n        this._input = input\r\n        this._more = this._backtrack = this.done = false\r\n        this.yylineno = this.yyleng = 0\r\n        this.yytext = this.matched = this.match = ''\r\n        this.conditionStack = ['INITIAL']\r\n        this.yylloc = {\r\n          first_line: 1,\r\n          first_column: 0,\r\n          last_line: 1,\r\n          last_column: 0\r\n        }\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [0, 0]\r\n        }\r\n        this.offset = 0\r\n        return this\r\n      },\r\n\r\n      // consumes and returns one char from the input\r\n      input: function () {\r\n        var ch = this._input[0]\r\n        this.yytext += ch\r\n        this.yyleng++\r\n        this.offset++\r\n        this.match += ch\r\n        this.matched += ch\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g)\r\n        if (lines) {\r\n          this.yylineno++\r\n          this.yylloc.last_line++\r\n        } else {\r\n          this.yylloc.last_column++\r\n        }\r\n        if (this.options.ranges) {\r\n          this.yylloc.range[1]++\r\n        }\r\n\r\n        this._input = this._input.slice(1)\r\n        return ch\r\n      },\r\n\r\n      // unshifts one char (or a string) into the input\r\n      unput: function (ch) {\r\n        var len = ch.length\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g)\r\n\r\n        this._input = ch + this._input\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len)\r\n        //this.yyleng -= len;\r\n        this.offset -= len\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g)\r\n        this.match = this.match.substr(0, this.match.length - 1)\r\n        this.matched = this.matched.substr(0, this.matched.length - 1)\r\n\r\n        if (lines.length - 1) {\r\n          this.yylineno -= lines.length - 1\r\n        }\r\n        var r = this.yylloc.range\r\n\r\n        this.yylloc = {\r\n          first_line: this.yylloc.first_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.first_column,\r\n          last_column: lines\r\n            ? (lines.length === oldLines.length\r\n                ? this.yylloc.first_column\r\n                : 0) +\r\n              oldLines[oldLines.length - lines.length].length -\r\n              lines[0].length\r\n            : this.yylloc.first_column - len\r\n        }\r\n\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len]\r\n        }\r\n        this.yyleng = this.yytext.length\r\n        return this\r\n      },\r\n\r\n      // When called from action, caches matched text and appends it on next action\r\n      more: function () {\r\n        this._more = true\r\n        return this\r\n      },\r\n\r\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n      reject: function () {\r\n        if (this.options.backtrack_lexer) {\r\n          this._backtrack = true\r\n        } else {\r\n          return this.parseError(\r\n            'Lexical error on line ' +\r\n              (this.yylineno + 1) +\r\n              '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' +\r\n              this.showPosition(),\r\n            {\r\n              text: '',\r\n              token: null,\r\n              line: this.yylineno\r\n            }\r\n          )\r\n        }\r\n        return this\r\n      },\r\n\r\n      // retain first n characters of the match\r\n      less: function (n) {\r\n        this.unput(this.match.slice(n))\r\n      },\r\n\r\n      // displays already matched input, i.e. for error messages\r\n      pastInput: function () {\r\n        var past = this.matched.substr(\r\n          0,\r\n          this.matched.length - this.match.length\r\n        )\r\n        return (\r\n          (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, '')\r\n        )\r\n      },\r\n\r\n      // displays upcoming input, i.e. for error messages\r\n      upcomingInput: function () {\r\n        var next = this.match\r\n        if (next.length < 20) {\r\n          next += this._input.substr(0, 20 - next.length)\r\n        }\r\n        return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(\r\n          /\\n/g,\r\n          ''\r\n        )\r\n      },\r\n\r\n      // displays the character position where the lexing error occurred, i.e. for error messages\r\n      showPosition: function () {\r\n        var pre = this.pastInput()\r\n        var c = new Array(pre.length + 1).join('-')\r\n        return pre + this.upcomingInput() + '\\n' + c + '^'\r\n      },\r\n\r\n      // test the lexed token: return FALSE when not a match, otherwise return token\r\n      test_match: function (match, indexed_rule) {\r\n        var token, lines, backup\r\n\r\n        if (this.options.backtrack_lexer) {\r\n          // save context\r\n          backup = {\r\n            yylineno: this.yylineno,\r\n            yylloc: {\r\n              first_line: this.yylloc.first_line,\r\n              last_line: this.last_line,\r\n              first_column: this.yylloc.first_column,\r\n              last_column: this.yylloc.last_column\r\n            },\r\n            yytext: this.yytext,\r\n            match: this.match,\r\n            matches: this.matches,\r\n            matched: this.matched,\r\n            yyleng: this.yyleng,\r\n            offset: this.offset,\r\n            _more: this._more,\r\n            _input: this._input,\r\n            yy: this.yy,\r\n            conditionStack: this.conditionStack.slice(0),\r\n            done: this.done\r\n          }\r\n          if (this.options.ranges) {\r\n            backup.yylloc.range = this.yylloc.range.slice(0)\r\n          }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g)\r\n        if (lines) {\r\n          this.yylineno += lines.length\r\n        }\r\n        this.yylloc = {\r\n          first_line: this.yylloc.last_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.last_column,\r\n          last_column: lines\r\n            ? lines[lines.length - 1].length -\r\n              lines[lines.length - 1].match(/\\r?\\n?/)[0].length\r\n            : this.yylloc.last_column + match[0].length\r\n        }\r\n        this.yytext += match[0]\r\n        this.match += match[0]\r\n        this.matches = match\r\n        this.yyleng = this.yytext.length\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [this.offset, (this.offset += this.yyleng)]\r\n        }\r\n        this._more = false\r\n        this._backtrack = false\r\n        this._input = this._input.slice(match[0].length)\r\n        this.matched += match[0]\r\n        token = this.performAction.call(\r\n          this,\r\n          this.yy,\r\n          this,\r\n          indexed_rule,\r\n          this.conditionStack[this.conditionStack.length - 1]\r\n        )\r\n        if (this.done && this._input) {\r\n          this.done = false\r\n        }\r\n        if (token) {\r\n          return token\r\n        } else if (this._backtrack) {\r\n          // recover context\r\n          for (var k in backup) {\r\n            this[k] = backup[k]\r\n          }\r\n          return false // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false\r\n      },\r\n\r\n      // return next match in input\r\n      next: function () {\r\n        if (this.done) {\r\n          return this.EOF\r\n        }\r\n        if (!this._input) {\r\n          this.done = true\r\n        }\r\n\r\n        var token, match, tempMatch, index\r\n        if (!this._more) {\r\n          this.yytext = ''\r\n          this.match = ''\r\n        }\r\n        var rules = this._currentRules()\r\n        for (var i = 0; i < rules.length; i++) {\r\n          tempMatch = this._input.match(this.rules[rules[i]])\r\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n            match = tempMatch\r\n            index = i\r\n            if (this.options.backtrack_lexer) {\r\n              token = this.test_match(tempMatch, rules[i])\r\n              if (token !== false) {\r\n                return token\r\n              } else if (this._backtrack) {\r\n                match = false\r\n                continue // rule action called reject() implying a rule MISmatch.\r\n              } else {\r\n                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                return false\r\n              }\r\n            } else if (!this.options.flex) {\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (match) {\r\n          token = this.test_match(match, rules[index])\r\n          if (token !== false) {\r\n            return token\r\n          }\r\n          // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n          return false\r\n        }\r\n        if (this._input === '') {\r\n          return this.EOF\r\n        } else {\r\n          return this.parseError(\r\n            'Lexical error on line ' +\r\n              (this.yylineno + 1) +\r\n              '. Unrecognized text.\\n' +\r\n              this.showPosition(),\r\n            {\r\n              text: '',\r\n              token: null,\r\n              line: this.yylineno\r\n            }\r\n          )\r\n        }\r\n      },\r\n\r\n      // return next match that has a token\r\n      lex: function lex() {\r\n        var r = this.next()\r\n        if (r) {\r\n          return r\r\n        } else {\r\n          return this.lex()\r\n        }\r\n      },\r\n\r\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n      begin: function begin(condition) {\r\n        this.conditionStack.push(condition)\r\n      },\r\n\r\n      // pop the previously active lexer condition state off the condition stack\r\n      popState: function popState() {\r\n        var n = this.conditionStack.length - 1\r\n        if (n > 0) {\r\n          return this.conditionStack.pop()\r\n        } else {\r\n          return this.conditionStack[0]\r\n        }\r\n      },\r\n\r\n      // produce the lexer rule set which is active for the currently active lexer condition state\r\n      _currentRules: function _currentRules() {\r\n        if (\r\n          this.conditionStack.length &&\r\n          this.conditionStack[this.conditionStack.length - 1]\r\n        ) {\r\n          return this.conditions[\r\n            this.conditionStack[this.conditionStack.length - 1]\r\n          ].rules\r\n        } else {\r\n          return this.conditions['INITIAL'].rules\r\n        }\r\n      },\r\n\r\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n      topState: function topState(n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0)\r\n        if (n >= 0) {\r\n          return this.conditionStack[n]\r\n        } else {\r\n          return 'INITIAL'\r\n        }\r\n      },\r\n\r\n      // alias for begin(condition)\r\n      pushState: function pushState(condition) {\r\n        this.begin(condition)\r\n      },\r\n\r\n      // return the number of states currently on the stack\r\n      stateStackSize: function stateStackSize() {\r\n        return this.conditionStack.length\r\n      },\r\n      options: { 'case-insensitive': true },\r\n      performAction: function anonymous(\r\n        yy,\r\n        yy_,\r\n        $avoiding_name_collisions,\r\n        YY_START\r\n      ) {\r\n        var YYSTATE = YY_START\r\n        switch ($avoiding_name_collisions) {\r\n          case 0 /* ignore whitespace */:\r\n            break\r\n          case 1:\r\n            return ''\r\n            break\r\n          case 2:\r\n            return ''\r\n            break\r\n          case 3:\r\n            return 42\r\n            break\r\n          case 4:\r\n            return 35\r\n            break\r\n          case 5:\r\n            return 77\r\n            break\r\n          case 6:\r\n            return 78\r\n            break\r\n          case 7:\r\n            return 78\r\n            break\r\n          case 8:\r\n            return 8\r\n            break\r\n          case 9:\r\n            return 6\r\n            break\r\n          case 10:\r\n            return 82\r\n            break\r\n          case 11:\r\n            return 7\r\n            break\r\n          case 12:\r\n            return 9\r\n            break\r\n          case 13:\r\n            return 59\r\n            break\r\n          case 14:\r\n            return 13\r\n            break\r\n          case 15:\r\n            return 15\r\n            break\r\n          case 16:\r\n            return 17\r\n            break\r\n          case 17:\r\n            return 18\r\n            break\r\n          case 18:\r\n            return 19\r\n            break\r\n          case 19:\r\n            return 20\r\n            break\r\n          case 20:\r\n            return 11\r\n            break\r\n          case 21:\r\n            return 62\r\n            break\r\n          case 22:\r\n            return 64\r\n            break\r\n          case 23:\r\n            return 23\r\n            break\r\n          case 24:\r\n            return 25\r\n            break\r\n          case 25:\r\n            return 26\r\n            break\r\n          case 26:\r\n            return 27\r\n            break\r\n          case 27:\r\n            return 30\r\n            break\r\n          case 28:\r\n            return 34\r\n            break\r\n          case 29:\r\n            return 33\r\n            break\r\n          case 30:\r\n            return 65\r\n            break\r\n          case 31:\r\n            return 66\r\n            break\r\n          case 32:\r\n            return 37\r\n            break\r\n          case 33:\r\n            return 41\r\n            break\r\n          case 34:\r\n            return 43\r\n            break\r\n          case 35:\r\n            return 52\r\n            break\r\n          case 36:\r\n            return 54\r\n            break\r\n          case 37:\r\n            return 55\r\n            break\r\n          case 38:\r\n            return 46\r\n            break\r\n          case 39:\r\n            return 48\r\n            break\r\n          case 40:\r\n            return 45\r\n            break\r\n          case 41:\r\n            return 49\r\n            break\r\n          case 42:\r\n            return 56\r\n            break\r\n          case 43:\r\n            return 58\r\n            break\r\n          case 44:\r\n            return 44\r\n            break\r\n          case 45:\r\n            return 83\r\n            break\r\n          case 46:\r\n            return 84\r\n            break\r\n          case 47:\r\n            return 85\r\n            break\r\n          case 48:\r\n            return 86\r\n            break\r\n          case 49:\r\n            return 87\r\n            break\r\n          case 50:\r\n            return 88\r\n            break\r\n          case 51:\r\n            return 89\r\n            break\r\n          case 52:\r\n            return 90\r\n            break\r\n          case 53:\r\n            return 91\r\n            break\r\n          case 54:\r\n            return 92\r\n            break\r\n          case 55:\r\n            return 93\r\n            break\r\n          case 56:\r\n            return 94\r\n            break\r\n          case 57:\r\n            return 95\r\n            break\r\n          case 58:\r\n            return 70\r\n            break\r\n          case 59:\r\n            return 70\r\n            break\r\n          case 60:\r\n            return 72\r\n            break\r\n          case 61:\r\n            return 72\r\n            break\r\n          case 62:\r\n            return 74\r\n            break\r\n          case 63:\r\n            return 74\r\n            break\r\n          case 64:\r\n            return 74\r\n            break\r\n          case 65:\r\n            return 31\r\n            break\r\n          case 66:\r\n            return 36\r\n            break\r\n          case 67:\r\n            return 96\r\n            break\r\n          case 68:\r\n            return 97\r\n            break\r\n          case 69:\r\n            return 98\r\n            break\r\n          case 70:\r\n            return 99\r\n            break\r\n          case 71:\r\n            yy_.yytext = yy.utils.unquoteString(yy_.yytext)\r\n            return 14\r\n            break\r\n          case 72:\r\n            return 38\r\n            break\r\n          case 73:\r\n            return 5\r\n            break\r\n          case 74:\r\n            return 101\r\n            break\r\n          case 75:\r\n            return 103\r\n            break\r\n          case 76:\r\n            return '\\\\'\r\n            break\r\n          case 77:\r\n            return 28\r\n            break\r\n          case 78:\r\n            return 61\r\n            break\r\n          case 79:\r\n            return 29\r\n            break\r\n          case 80:\r\n            return 57\r\n            break\r\n          case 81:\r\n            return 71\r\n            break\r\n        }\r\n      },\r\n      rules: [\r\n        /^(?:\\s+)/i,\r\n        /^(?:[#].*)/i,\r\n        /^(?:\\/\\/.*)/i,\r\n        /^(?:([_A-Z0-9\\/\\+]+==))/i,\r\n        /^(?:-?[0-9]+(\\.[0-9]+)?\\b)/i,\r\n        /^(?:0[xX][0-9A-F]+\\b)/i,\r\n        /^(?:false\\b)/i,\r\n        /^(?:true\\b)/i,\r\n        /^(?:all\\b)/i,\r\n        /^(?:reset\\b)/i,\r\n        /^(?:clear\\b)/i,\r\n        /^(?:build\\b)/i,\r\n        /^(?:help\\b)/i,\r\n        /^(?:load\\b)/i,\r\n        /^(?:get\\b)/i,\r\n        /^(?:set\\b)/i,\r\n        /^(?:set_save\\b)/i,\r\n        /^(?:set_restore\\b)/i,\r\n        /^(?:set_reset\\b)/i,\r\n        /^(?:preset\\b)/i,\r\n        /^(?:motm\\b)/i,\r\n        /^(?:add\\b)/i,\r\n        /^(?:rep\\b)/i,\r\n        /^(?:remove\\b)/i,\r\n        /^(?:hide\\b)/i,\r\n        /^(?:show\\b)/i,\r\n        /^(?:list\\b)/i,\r\n        /^(?:select\\b)/i,\r\n        /^(?:within\\b)/i,\r\n        /^(?:selector\\b)/i,\r\n        /^(?:mode\\b)/i,\r\n        /^(?:color\\b)/i,\r\n        /^(?:material\\b)/i,\r\n        /^(?:view\\b)/i,\r\n        /^(?:unit\\b)/i,\r\n        /^(?:line\\b)/i,\r\n        /^(?:listobj\\b)/i,\r\n        /^(?:removeobj\\b)/i,\r\n        /^(?:rotate\\b)/i,\r\n        /^(?:translate\\b)/i,\r\n        /^(?:scale\\b)/i,\r\n        /^(?:center\\b)/i,\r\n        /^(?:url\\b)/i,\r\n        /^(?:screenshot\\b)/i,\r\n        /^(?:dssp\\b)/i,\r\n        /^(?:file_list\\b)/i,\r\n        /^(?:file_register\\b)/i,\r\n        /^(?:file_delete\\b)/i,\r\n        /^(?:preset_add\\b)/i,\r\n        /^(?:preset_delete\\b)/i,\r\n        /^(?:preset_update\\b)/i,\r\n        /^(?:preset_rename\\b)/i,\r\n        /^(?:preset_open\\b)/i,\r\n        /^(?:create_scenario\\b)/i,\r\n        /^(?:reset_scenario\\b)/i,\r\n        /^(?:delete_scenario\\b)/i,\r\n        /^(?:add_scenario_item\\b)/i,\r\n        /^(?:list_scenario\\b)/i,\r\n        /^(?:s\\b)/i,\r\n        /^(?:mt\\b)/i,\r\n        /^(?:m\\b)/i,\r\n        /^(?:c\\b)/i,\r\n        /^(?:x\\b)/i,\r\n        /^(?:y\\b)/i,\r\n        /^(?:z\\b)/i,\r\n        /^(?:as\\b)/i,\r\n        /^(?:of\\b)/i,\r\n        /^(?:pdb\\b)/i,\r\n        /^(?:delay\\b)/i,\r\n        /^(?:prst\\b)/i,\r\n        /^(?:desc\\b)/i,\r\n        /^(?:((?:\"(?:\\\\.|[^\\\\\"])*\"|'(?:\\\\.|[^\\\\'])*')))/i,\r\n        /^(?:([_A-Z0-9]+))/i,\r\n        /^(?:$)/i,\r\n        /^(?:\\.)/i,\r\n        /^(?:\\/)/i,\r\n        /^(?:\\\\)/i,\r\n        /^(?:-e\\b)/i,\r\n        /^(?:-f\\b)/i,\r\n        /^(?:-s\\b)/i,\r\n        /^(?:-v\\b)/i,\r\n        /^(?:=)/i\r\n      ],\r\n      conditions: {\r\n        INITIAL: {\r\n          rules: [\r\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\r\n            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\r\n            36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,\r\n            53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,\r\n            70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81\r\n          ],\r\n          inclusive: true\r\n        }\r\n      }\r\n    }\r\n    return lexer\r\n  })()\r\n  parser.lexer = lexer\r\n  function Parser() {\r\n    this.yy = {}\r\n  }\r\n  Parser.prototype = parser\r\n  parser.Parser = Parser\r\n  return new Parser()\r\n})()\r\n\r\nmodule.exports = { parser: parser }\r\n",
		"import palettes from '../gfx/palettes'\r\nimport settings from '../settings'\r\n\r\nconst modeIdDesc = {\r\n  $help: [\r\n    'Rendering mode shortcut',\r\n    '    BS - balls and sticks mode',\r\n    '    LN - lines mode',\r\n    '    LC - licorice mode',\r\n    '    VW - van der waals mode',\r\n    '    TR - trace mode',\r\n    '    TU - tube mode',\r\n    '    CA - cartoon mode',\r\n    '    SA - isosurface mode',\r\n    '    QS - quick surface mode',\r\n    '    SE - solvent excluded mode',\r\n    '    TX - text mode'\r\n  ],\r\n  BS: {\r\n    $help: [\r\n      '   Balls and sticks',\r\n      '      aromrad = <number> #aromatic radius',\r\n      '      atom = <number>    #atom radius',\r\n      '      bond = <number>    #bond radius',\r\n      '      multibond = <bool> #use multibond',\r\n      '      showarom = <bool>  #show aromatic',\r\n      '      space = <number>   #space value\\n'\r\n    ]\r\n  },\r\n  CA: {\r\n    $help: [\r\n      '   Cartoon',\r\n      '      arrow = <number>   #arrow size',\r\n      '      depth = <number>   #depth of surface',\r\n      '      heightSegmentsRatio = <number>',\r\n      '      radius = <number>  #tube radius',\r\n      '      tension = <number> #',\r\n      '      width = <number>  #secondary width\\n'\r\n    ]\r\n  },\r\n  LN: {\r\n    $help: [\r\n      '   Lines',\r\n      '      atom = <number>    #atom radius',\r\n      '      chunkarom = <number>',\r\n      '      multibond = <bool> #use multibond',\r\n      '      showarom = <bool>  #show aromatic',\r\n      '      offsarom = <number>\\n'\r\n    ]\r\n  },\r\n  LC: {\r\n    $help: [\r\n      '   Licorice',\r\n      '      aromrad = <number> #aromatic radius',\r\n      '      bond = <number>    #bond radius',\r\n      '      multibond = <bool> #use multibond',\r\n      '      showarom = <bool>  #show aromatic',\r\n      '      space = <number>   #space value\\n'\r\n    ]\r\n  },\r\n  VW: {\r\n    $help: ['   Van der Waals', '      nothing\\n']\r\n  },\r\n  TR: {\r\n    $help: ['   Trace', '      radius = <number>  #tube radius\\n']\r\n  },\r\n  TU: {\r\n    $help: [\r\n      '   Tube',\r\n      '      heightSegmentsRatio = <number>',\r\n      '      radius = <number>  #tube radius',\r\n      '      tension = <number> \\n'\r\n    ]\r\n  },\r\n  SA: {\r\n    $help: ['   Surface', '      zClip = <bool> #clip z plane\\n']\r\n  },\r\n  QS: {\r\n    $help: [\r\n      '   Quick surface',\r\n      '      isoValue = <number>',\r\n      '      scale = <number>',\r\n      '      wireframe = <bool>',\r\n      '      zClip = <bool> #clip z plane\\n'\r\n    ]\r\n  },\r\n  SE: {\r\n    $help: [\r\n      '   Solvent excluded surface',\r\n      '      zClip = <bool> #clip z plane\\n'\r\n    ]\r\n  },\r\n  TX: {\r\n    $help: [\r\n      '   Text mode',\r\n      '      template = <format string> string that can include \"{{ id }}\"',\r\n      '          it will be replaced by value, id can be one of next:',\r\n      '          serial, name, type, sequence, residue, chain, hetatm, water\\n',\r\n      '      horizontalAlign = <string> {\"left\", \"right\", \"center\"}',\r\n      '      verticalAlign = <string> {\"top\", \"bottom\", \"middle\"}',\r\n      '      dx = <number> #offset along x',\r\n      '      dy = <number> #offset along y',\r\n      '      dz = <number> #offset along z',\r\n      '      fg = <string> #text color modificator',\r\n      '           could be keyword, named color or hex',\r\n      '      fg = <string> #back color modificator',\r\n      '           could be keyword, named color or hex',\r\n      '      showBg = <bool> #if set show background',\r\n      '           plate under text'\r\n    ]\r\n  }\r\n}\r\n\r\nconst colorDesc = {\r\n  $help: [\r\n    'Coloring mode shortcut',\r\n    '    EL - color by element',\r\n    '    CH - color by chain',\r\n    '    SQ - color by sequence',\r\n    '    RT - color by residue type',\r\n    '    SS - color by secondary structure',\r\n    '    UN - uniform'\r\n  ],\r\n  UN: {\r\n    $help: [\r\n      'Parameters of coloring modes customization',\r\n      '   Uniform',\r\n      '      color = <number|color> #RGB->HEX->dec\\n'\r\n    ],\r\n    color: {\r\n      $help: Object.keys(palettes.get(settings.now.palette).namedColors)\r\n        .sort()\r\n        .join('\\n')\r\n    }\r\n  }\r\n}\r\n\r\nconst materialDesc = {\r\n  $help: [\r\n    'Material shortcut',\r\n    '    DF - diffuse',\r\n    '    TR - transparent',\r\n    '    SF - soft plastic',\r\n    '    PL - glossy plastic',\r\n    '    ME - metal',\r\n    '    GL - glass'\r\n  ]\r\n}\r\n\r\nconst addRepDesc = {\r\n  $help: [\r\n    'Short (packed) representation description as a set of variables',\r\n    '    s=<EXPRESSION>',\r\n    '        selector property',\r\n    '    m=<MODE_ID>[!<PARAMETER>:<VALUE>[,...]]',\r\n    '        render mode property',\r\n    '    c=<COLORER_ID>[!<PARAMETER>:<VALUE>[,...]]',\r\n    '        color mode property',\r\n    '    mt=<MATERIAL_ID>',\r\n    '        material property'\r\n  ],\r\n  s: {\r\n    $help:\r\n      'Selection expression string as it is in menu->representations->selection'\r\n  },\r\n  m: modeIdDesc,\r\n  c: colorDesc,\r\n  mt: materialDesc\r\n}\r\n\r\nconst setGetParameterDesc = {\r\n  $help: [\r\n    'Parameters of rendering modes customization: modes',\r\n    'Parameters of colorer customization: colorers',\r\n    'Autobuild: autobuild = (<number>|<bool>)'\r\n  ],\r\n  modes: modeIdDesc,\r\n  colorers: colorDesc\r\n}\r\n\r\nconst help = {\r\n  $help: [\r\n    'help (<cmd name>| <path to property>)',\r\n    'You can get detailed information about command options',\r\n    '   using \"help cmd.opt.opt.[...]\"\\n',\r\n    '   you can use one line comments',\r\n    '   everything started from (#|//) will be skipped',\r\n    '   Example: >build //some comment\\n',\r\n    'List of available commands:'\r\n  ],\r\n  reset: {\r\n    $help: [\r\n      'Reload current object, delete all representations',\r\n      '    Nothing will work until load new object'\r\n    ]\r\n  },\r\n  load: {\r\n    $help: [\r\n      'load (<PDBID>|<URL>|-f [<*.NC FILE URL STRING>])',\r\n      '    Load new pdb object from selected source'\r\n    ],\r\n    PDBID: {\r\n      $help: 'pdb id in remote molecule database'\r\n    },\r\n    URL: {\r\n      $help: 'url to source file'\r\n    },\r\n    f: {\r\n      $help: [\r\n        'open file system dialog to fetch local file',\r\n        'optionally you can determine trajectory file',\r\n        'via URL for *.top model'\r\n      ]\r\n    }\r\n  },\r\n  clear: {\r\n    $help: 'No args. Clear terminal'\r\n  },\r\n  add: {\r\n    $help: [\r\n      'add [<REP_NAME>] [<DESCRIPTION>]',\r\n      '    Add new item to representation set with',\r\n      '    default or <DESCRIPTION> params'\r\n    ],\r\n    REP_NAME: {\r\n      $help: 'Identifier string [_,a-z,A-Z,0-9] can not start from digit'\r\n    },\r\n    DESCRIPTION: addRepDesc\r\n  },\r\n  rep: {\r\n    $help: [\r\n      'rep [<REP_NAME>|<REP_INDEX>] [<DESCRIPTION>]',\r\n      '    set current representation by name or index',\r\n      '    edit current representation by <DESCRIPTION>'\r\n    ],\r\n    REP_NAME: {\r\n      $help: [\r\n        'Identifier string [_,a-z,A-Z,0-9] can not start from digit',\r\n        'Must be declared before'\r\n      ]\r\n    },\r\n    REP_INDEX: {\r\n      $help: 'Index of available representation'\r\n    },\r\n    DESCRIPTION: addRepDesc\r\n  },\r\n  remove: {\r\n    $help: [\r\n      'remove (<REP_NAME>|<REP_INDEX>)',\r\n      'Remove representation by name or index'\r\n    ],\r\n    REP_NAME: {\r\n      $help: [\r\n        'Identifier string [_,a-z,A-Z,0-9] can not start from digit',\r\n        'Must be declared before'\r\n      ]\r\n    },\r\n    REP_INDEX: {\r\n      $help: 'Index of available representation'\r\n    }\r\n  },\r\n  selector: {\r\n    $help: [\r\n      'selector <EXPRESSION>',\r\n      '   set selector from EXPRESSION to current representation'\r\n    ],\r\n    EXPRESSION: {\r\n      $help:\r\n        'Selection expression string as it is in menu->representations->selection'\r\n    }\r\n  },\r\n  mode: {\r\n    $help: [\r\n      'mode <MODE_ID> [<PARAMETER>=<VALUE>...]',\r\n      '   set rendering mode and apply parameters to current representation'\r\n    ],\r\n    MODE_ID: modeIdDesc\r\n  },\r\n  color: {\r\n    $help: [\r\n      'color <COLORER_ID> [<PARAMETER>=<VALUE>...]',\r\n      '   set colorer and apply parameters to current representation'\r\n    ],\r\n    COLORER_ID: colorDesc\r\n  },\r\n  material: {\r\n    $help: [\r\n      'material <MATERIAL_ID>',\r\n      '   set material to current representation'\r\n    ],\r\n    MATERIAL_ID: materialDesc\r\n  },\r\n  build: {\r\n    $help: 'build help str',\r\n    add: {\r\n      $help: 'build.add',\r\n      new: {\r\n        $help: [\r\n          'add.new',\r\n          'add.new new line 1',\r\n          'add.new new line 2',\r\n          'add.new new line 3'\r\n        ]\r\n      }\r\n    },\r\n    del: {\r\n      $help: 'build.del'\r\n    }\r\n  },\r\n  list: {\r\n    $help: [\r\n      'list [-e|-s|<REP_NAME>|<REP_INDEX>]',\r\n      'Print representations if no args print list of representations',\r\n      '    -e expand list and show all representations',\r\n      '    -s show all user-registered selectors',\r\n      '    <REP_NAME>|<REP_INDEX> show only current representation'\r\n    ]\r\n  },\r\n  hide: {\r\n    $help: [\r\n      'hide (<REP_NAME>|<REP_INDEX>)',\r\n      'Hide representation referenced in args'\r\n    ]\r\n  },\r\n  show: {\r\n    $help: [\r\n      'show (<REP_NAME>|<REP_INDEX>)',\r\n      'Show representation referenced in args'\r\n    ]\r\n  },\r\n  get: {\r\n    $help: [\r\n      'get <PARAMETER>',\r\n      'Print <PARAMETER> value',\r\n      '    <PARAMETER> - path to option use get.PARAMETER to get more info'\r\n    ],\r\n    PARAMETER: setGetParameterDesc\r\n  },\r\n  set: {\r\n    $help: [\r\n      'set <PARAMETER> <VALUE>',\r\n      'Set <PARAMETER> with <VALUE>',\r\n      '    <PARAMETER> - path to option use set.PARAMETER to get more info'\r\n    ],\r\n    PARAMETER: setGetParameterDesc\r\n  },\r\n  set_save: {\r\n    $help: ['set_save', 'Save current settings to cookie']\r\n  },\r\n  set_restore: {\r\n    $help: ['set_restore', 'Load and apply settings from cookie']\r\n  },\r\n  set_reset: {\r\n    $help: ['set_reset', 'Reset current settings to the defaults']\r\n  },\r\n  preset: {\r\n    $help: [\r\n      'preset [<PRESET>]',\r\n      'Reset current representation or set preset to <PRESET>'\r\n    ],\r\n    PRESET: {\r\n      $help: ['default', 'wire', 'small', 'macro']\r\n    }\r\n  },\r\n  unit: {\r\n    $help: [\r\n      'unit [<unit_id>]',\r\n      'Change current biological structure view. Zero <unit_id> value means asymmetric unit,',\r\n      'positive values set an assembly with corresponding number.',\r\n      'Being called with no parameters command prints current unit information.'\r\n    ]\r\n  },\r\n  view: {\r\n    $help: [\r\n      'view [<ENCODED_VIEW>]',\r\n      'Get current encoded view or set if ENCODED_VIEW placed as argument'\r\n    ],\r\n    ENCODED_VIEW: {\r\n      $help: ['encoded view matrix string (binary code)']\r\n    }\r\n  },\r\n  rotate: {\r\n    $help: [\r\n      'rotate (x|y|z) [<DEGREES>] [(x|y|z) [<DEGREES>]]...',\r\n      'Rotate scene'\r\n    ]\r\n  },\r\n  scale: {\r\n    $help: ['scale <SCALE>', 'Scale scene']\r\n  },\r\n  select: {\r\n    $help: [\r\n      'select <SELECTOR_STRING> [as <SELECTOR_NAME>]',\r\n      'Select atoms using selector defined in SELECTOR_STRING',\r\n      '    and if SELECTOR_NAME is defined register it in viewer',\r\n      '    you can use it later as a complex selector'\r\n    ]\r\n  },\r\n  within: {\r\n    $help: [\r\n      'within <DISTANCE> of <SELECTOR_STRING> as <SELECTOR_NAME>',\r\n      'Build within named selector',\r\n      '    DISTANCE        <number>',\r\n      '    SELECTOR_STRING <string(selection language)>',\r\n      '    SELECTOR_NAME   <identifier>'\r\n    ]\r\n  },\r\n  url: {\r\n    $help: [\r\n      'url [-s] [-v]',\r\n      'Report URL encoded scene',\r\n      '    if -s set that include settings in the URL',\r\n      '    if -v set that include view in the URL'\r\n    ]\r\n  },\r\n  screenshot: {\r\n    $help: [\r\n      'screenshot [<WIDTH> [<HEIGHT>]]',\r\n      'Make a screenshot of the scene',\r\n      '    WIDTH  <number> in pixels',\r\n      '    HEIGHT <number> in pixels, equal to WIDTH by default'\r\n    ]\r\n  },\r\n  line: {\r\n    $help: [\r\n      'line <first_atom_path> <second_atom_path> [<PARAMETER>=<VALUE>]',\r\n      'Draw dashed line between two specified atoms'\r\n    ]\r\n  },\r\n  removeobj: {\r\n    $help: [\r\n      'removeobj <id>',\r\n      'Remove scene object by its index. Indices could be obtained by <listobj> command'\r\n    ]\r\n  },\r\n  listobj: {\r\n    $help: ['listobj', 'Display the list of all existing scene objects']\r\n  }\r\n}\r\n\r\nexport default help\r\n",
		"import { Miew } from './Miew'\r\nimport { parser as parsercli } from './utils/MiewCLIParser'\r\nimport clihelp from './utils/MiewCLIHelp'\r\nimport logger from './utils/logger'\r\nimport utils from './utils'\r\nimport { slice, sortBy, get, keys, isUndefined, set, assign } from 'lodash'\r\n\r\nconst {\r\n  chem: { selectors },\r\n  modes,\r\n  colorers,\r\n  materials,\r\n  palettes,\r\n  options,\r\n  settings\r\n} = Miew\r\n\r\nfunction None() {}\r\n\r\nconst NULL = (function () {\r\n  const obj = new None()\r\n  return function () {\r\n    return obj\r\n  }\r\n})()\r\n\r\nclass RepresentationMap {\r\n  constructor() {\r\n    this.representationMap = {}\r\n    this.representationID = {}\r\n  }\r\n\r\n  get(strId) {\r\n    return (\r\n      this.representationMap[strId] ||\r\n      this.representationID[strId] ||\r\n      '<no name>'\r\n    )\r\n  }\r\n\r\n  add(strId, index) {\r\n    if (strId === -1) {\r\n      return 'Can not create representation: there is no data'\r\n    }\r\n\r\n    if (index !== undefined) {\r\n      if (!this.representationMap.hasOwnProperty(strId)) {\r\n        this.representationMap[strId.toString()] = index\r\n        this.representationID[index] = strId.toString()\r\n      } else {\r\n        return 'This name has already existed, registered without name'\r\n      }\r\n    }\r\n    return `Representation ${strId} successfully added`\r\n  }\r\n\r\n  remove(index) {\r\n    if (index && this.representationID.hasOwnProperty(index)) {\r\n      delete this.representationMap[this.representationID[index]]\r\n      delete this.representationID[index]\r\n    }\r\n\r\n    const sortedKeys = Object.keys(this.representationID).sort()\r\n    for (const i in sortedKeys) {\r\n      if (sortedKeys.hasOwnProperty(i)) {\r\n        const id = sortedKeys[i]\r\n        if (id > index) {\r\n          this.representationID[id - 1] = this.representationID[id]\r\n          this.representationMap[this.representationID[id]] -= 1\r\n          delete this.representationID[id]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.representationMap = {}\r\n    this.representationID = {}\r\n  }\r\n}\r\n\r\nconst representationsStorage = new RepresentationMap()\r\n\r\nfunction keyRemap(key) {\r\n  const keys = {\r\n    s: 'selector',\r\n    m: 'mode',\r\n    c: 'colorer',\r\n    mt: 'material',\r\n    mode: 'modes',\r\n    color: 'colorers',\r\n    colorer: 'colorers',\r\n    select: 'selector',\r\n    material: 'materials',\r\n    selector: 'selector'\r\n  }\r\n  const ans = keys[key]\r\n  return ans === undefined ? key : ans\r\n}\r\n\r\nclass CLIUtils {\r\n  list(miew, repMap, key) {\r\n    let ret = ''\r\n    if (miew && repMap !== undefined) {\r\n      if (key === undefined || key === '-e') {\r\n        const count = miew.repCount()\r\n\r\n        for (let i = 0; i < count; i++) {\r\n          ret += this.listRep(miew, repMap, i, key)\r\n        }\r\n      }\r\n    }\r\n    return ret\r\n  }\r\n\r\n  listRep(miew, repMap, repIndex, key) {\r\n    let ret = ''\r\n    const rep = miew.repGet(repIndex)\r\n    if (!rep) {\r\n      logger.warn(`Rep ${repIndex} does not exist!`)\r\n      return ret\r\n    }\r\n    const index = repIndex\r\n    const repName = repMap.get(index)\r\n\r\n    const { mode, colorer } = rep\r\n    const selectionStr = rep.selectorString\r\n    const material = rep.materialPreset\r\n\r\n    ret += `#${index} : ${mode.name}${\r\n      repName === '<no name>' ? '' : `, ${repName}`\r\n    }\\n`\r\n\r\n    if (key !== undefined) {\r\n      ret += `    selection : \"${selectionStr}\"\\n`\r\n      ret += `    mode      : (${mode.id}), ${mode.name}\\n`\r\n      ret += `    colorer   : (${colorer.id}), ${colorer.name}\\n`\r\n      ret += `    material  : (${material.id}), ${material.name}\\n`\r\n    }\r\n\r\n    return ret\r\n  }\r\n\r\n  listSelector(miew, context) {\r\n    let ret = ''\r\n\r\n    for (const k in context) {\r\n      if (context.hasOwnProperty(k)) {\r\n        ret += `${k} : \"${context[k]}\"\\n`\r\n      }\r\n    }\r\n\r\n    return ret\r\n  }\r\n\r\n  listObjs(miew) {\r\n    const objs = miew._objects\r\n\r\n    if (!objs || !Array.isArray(objs) || objs.length === 0) {\r\n      return 'There are no objects on the scene'\r\n    }\r\n\r\n    const strList = []\r\n    for (let i = 0, n = objs.length; i < n; ++i) {\r\n      strList[i] = `${i}: ${objs[i].toString()}`\r\n    }\r\n\r\n    return strList.join('\\n')\r\n  }\r\n\r\n  joinHelpStr(helpData) {\r\n    if (helpData instanceof Array) {\r\n      return helpData.join('\\n')\r\n    }\r\n    return helpData\r\n  }\r\n\r\n  help(path) {\r\n    if (isUndefined(path)) {\r\n      return `${this.joinHelpStr(clihelp.$help)}\\n${slice(\r\n        sortBy(keys(clihelp)),\r\n        1\r\n      ).join(', ')}\\n`\r\n    }\r\n\r\n    const helpItem = get(clihelp, path)\r\n    return isUndefined(helpItem)\r\n      ? this.help()\r\n      : `${this.joinHelpStr(helpItem.$help)}\\n`\r\n  }\r\n\r\n  load(miew, arg) {\r\n    if (miew === undefined || arg === undefined || arg === '-f') {\r\n      return\r\n    }\r\n    miew.awaitWhileCMDisInProcess()\r\n    const finish = () => miew.finishAwaitingCMDInProcess()\r\n    miew.load(arg).then(finish, finish)\r\n  }\r\n\r\n  checkArg(key, arg, modificate) {\r\n    if (key !== undefined && arg !== undefined) {\r\n      if (keyRemap(key) === 'selector') {\r\n        const res = selectors.parse(arg)\r\n\r\n        if (res.error !== undefined) {\r\n          const selExc = { message: res.error }\r\n          throw selExc\r\n        }\r\n\r\n        if (modificate !== undefined && modificate) {\r\n          return res.selector\r\n        }\r\n        return arg\r\n      }\r\n\r\n      const modificators = {\r\n        colorers,\r\n        modes,\r\n        materials\r\n      }\r\n\r\n      let modificator = key\r\n      let temp\r\n      while (modificator !== temp) {\r\n        temp = modificator\r\n        modificator = keyRemap(temp)\r\n      }\r\n\r\n      if (modificators[modificator].get(arg) === undefined) {\r\n        const exc = { message: `${arg} is not existed in ${modificator}` }\r\n        throw exc\r\n      }\r\n      return arg\r\n    }\r\n    return NULL\r\n  }\r\n\r\n  propagateProp(path, arg) {\r\n    if (path !== undefined) {\r\n      let argExc = {}\r\n      const adapter = options.adapters[typeof get(settings.defaults, path)]\r\n      if (adapter === undefined) {\r\n        const pathExc = { message: `${path} is not existed` }\r\n        throw pathExc\r\n      }\r\n\r\n      if (\r\n        (path.endsWith('.color') ||\r\n          path.endsWith('.baseColor') ||\r\n          path.endsWith('.EL.carbon')) &&\r\n        typeof arg !== 'number'\r\n      ) {\r\n        arg = palettes.get(settings.now.palette).getNamedColor(arg)\r\n      }\r\n\r\n      if (path.endsWith('.fg') || path.endsWith('.bg')) {\r\n        if (typeof arg !== 'number') {\r\n          const val = palettes\r\n            .get(settings.now.palette)\r\n            .getNamedColor(arg, true)\r\n          if (val !== undefined) {\r\n            arg = `0x${val.toString(16)}`\r\n          }\r\n        } else {\r\n          arg = `0x${arg.toString(16)}`\r\n        }\r\n      }\r\n\r\n      if (path.endsWith('.template')) {\r\n        arg = arg.replace(/\\\\n/g, '\\n') // NOSONAR\r\n      }\r\n\r\n      if (\r\n        arg !== undefined &&\r\n        adapter(arg) !== arg &&\r\n        adapter(arg) !== arg > 0\r\n      ) {\r\n        argExc = {\r\n          message: `${path} must be a \"${typeof get(settings.defaults, path)}\"`\r\n        }\r\n        throw argExc\r\n      }\r\n    }\r\n    return arg\r\n  }\r\n\r\n  unquoteString(value) {\r\n    return utils.unquoteString(value)\r\n  }\r\n}\r\n// repIndexOrRepMap could be RepresentationMap or index\r\n\r\nconst utilFunctions = new CLIUtils()\r\n\r\nfunction CreateObjectPair(a, b) {\r\n  const obj = {}\r\n  obj[a] = b\r\n  return obj\r\n}\r\n\r\nfunction ArgList(arg) {\r\n  if (arg instanceof this.constructor) {\r\n    return arg\r\n  }\r\n  if (arg instanceof Array) {\r\n    this._values = arg.slice(0)\r\n  } else if (arg) {\r\n    this._values = [arg]\r\n  } else {\r\n    this._values = []\r\n  }\r\n}\r\n\r\nArgList.prototype.append = function (value) {\r\n  const values = this._values\r\n  values[values.length] = value\r\n  return this\r\n}\r\n\r\nArgList.prototype.remove = function (value) {\r\n  const values = this._values\r\n  const index = values.indexOf(value)\r\n  if (index >= 0) {\r\n    values.splice(index, 1)\r\n  }\r\n  return this\r\n}\r\n\r\nArgList.prototype.toJSO = function (cliUtils, cmd, arg) {\r\n  const res = {}\r\n\r\n  const list = this._values\r\n  for (let i = 0, n = list.length; i < n; ++i) {\r\n    set(\r\n      res,\r\n      list[i].id,\r\n      cliUtils.propagateProp(\r\n        `${keyRemap(cmd)}.${arg}.${list[i].id}`,\r\n        list[i].val\r\n      )\r\n    )\r\n  }\r\n\r\n  return res\r\n}\r\n\r\nfunction Arg(_id, _val) {\r\n  this.id = _id\r\n  this.val = _val\r\n}\r\n\r\nconst cliutils = Object.create({})\r\n\r\ncliutils.Arg = Arg\r\ncliutils.ArgList = ArgList\r\n\r\ncliutils.miew = null\r\ncliutils.echo = null\r\ncliutils.representations = representationsStorage\r\ncliutils.utils = utilFunctions\r\n\r\ncliutils.assign = assign\r\ncliutils.CreateObjectPair = CreateObjectPair\r\ncliutils.keyRemap = keyRemap\r\ncliutils.Context = selectors.Context\r\ncliutils.ClearContext = selectors.ClearContext\r\n\r\ncliutils.NULL = NULL\r\n\r\ncliutils.notimplemented = function () {\r\n  return this.NULL\r\n}\r\n\r\nMiew.prototype.script = function (script, _printCallback, _errorCallback) {\r\n  parsercli.yy.miew = this\r\n  parsercli.yy.echo = _printCallback\r\n  parsercli.yy.error = _errorCallback\r\n  if (this.cmdQueue === undefined) {\r\n    this.cmdQueue = []\r\n  }\r\n\r\n  if (this.commandInAction === undefined) {\r\n    this.commandInAction = false\r\n  }\r\n\r\n  this.cmdQueue = this.cmdQueue.concat(script.split('\\n'))\r\n}\r\n\r\nMiew.prototype.awaitWhileCMDisInProcess = function () {\r\n  this.commandInAction = true\r\n}\r\n\r\nMiew.prototype.finishAwaitingCMDInProcess = function () {\r\n  this.commandInAction = false\r\n}\r\n\r\nMiew.prototype.isScriptingCommandAvailable = function () {\r\n  return (\r\n    this.commandInAction !== undefined &&\r\n    !this.commandInAction &&\r\n    this.cmdQueue !== undefined &&\r\n    this.cmdQueue.length > 0\r\n  )\r\n}\r\n\r\nMiew.prototype.callNextCmd = function () {\r\n  if (this.isScriptingCommandAvailable()) {\r\n    const cmd = this.cmdQueue.shift()\r\n\r\n    const res = {}\r\n    res.success = false\r\n    try {\r\n      parsercli.parse(cmd)\r\n      res.success = true\r\n    } catch (e) {\r\n      res.error = e.message\r\n      parsercli.yy.error(res.error)\r\n      this.finishAwaitingCMDInProcess()\r\n    }\r\n    return res\r\n  }\r\n  return ''\r\n}\r\n\r\nparsercli.yy = cliutils\r\n// workaround for incorrect JISON parser generator for AMD module\r\nparsercli.yy.parseError = parsercli.parseError\r\n"
	],
	"names": [
		"setPrototypeOf",
		"assertThisInitialized",
		"_arrayLikeToArray",
		"_unsupportedIterableToArray",
		"arrayLikeToArray",
		"arrayWithHoles",
		"iterableToArrayLimit",
		"unsupportedIterableToArray",
		"nonIterableRest",
		"this",
		"defaults",
		"Timer",
		"startTime",
		"oldTime",
		"elapsedTime",
		"running",
		"now",
		"getElapsedTime",
		"update",
		"delta",
		"newTime",
		"p",
		"window",
		"performance",
		"bind",
		"Date",
		"createElement",
		"tag",
		"id",
		"css",
		"element",
		"document",
		"style",
		"cssText",
		"Stats",
		"domElement",
		"_text",
		"appendChild",
		"_startTime",
		"_prevTime",
		"_deltas",
		"Array",
		"_index",
		"_total",
		"_count",
		"time",
		"length",
		"ms",
		"fps",
		"textContent",
		"toPrecision",
		"end",
		"on",
		"undefined",
		"display",
		"_isNativeReflectConstruct",
		"isNativeReflectConstruct",
		"isNativeFunction",
		"construct",
		"getPrototypeOf",
		"isUndefOrEqual",
		"param",
		"value",
		"EventDispatcher",
		"_handlers",
		"prototype",
		"addEventListener",
		"type",
		"callback",
		"context",
		"handlers",
		"params",
		"_checkPar",
		"par",
		"find",
		"push",
		"removeEventListener",
		"self",
		"forEach",
		"handler",
		"ev",
		"remove",
		"values",
		"omitBy",
		"dispatchEvent",
		"event",
		"apply",
		"priorities",
		"debug",
		"info",
		"report",
		"warn",
		"error",
		"Logger",
		"call",
		"console",
		"_priority",
		"Object",
		"create",
		"constructor",
		"instantiate",
		"verify",
		"number",
		"isNumber",
		"Error",
		"defineProperty",
		"get",
		"findKey",
		"set",
		"level",
		"levels",
		"keys",
		"message",
		"priority",
		"_message",
		"String",
		"output",
		"log",
		"browserType",
		"DEFAULT",
		"SAFARI",
		"encodeQueryComponent",
		"text",
		"excludeExp",
		"encode",
		"code",
		"fromCharCode",
		"parseInt",
		"substr",
		"encodeURIComponent",
		"replace",
		"decodeQueryComponent",
		"decodeURIComponent",
		"getUrlParameters",
		"url",
		"location",
		"search",
		"query",
		"substring",
		"indexOf",
		"result",
		"match",
		"exec",
		"getUrlParametersAsDict",
		"a",
		"i",
		"key",
		"resolveURL",
		"str",
		"URL",
		"href",
		"anchor",
		"generateRegExp",
		"symbolStr",
		"symbolList",
		"n",
		"charCodeAt",
		"toString",
		"listStr",
		"join",
		"RegExp",
		"attrs",
		"content",
		"setAttribute",
		"child",
		"createTextNode",
		"HTMLElement",
		"deriveClass",
		"cls",
		"base",
		"members",
		"statics",
		"assign",
		"deriveDeep",
		"obj",
		"needZeroOwnProperties",
		"res",
		"copy",
		"hexColor",
		"color",
		"hex",
		"DebugTracer",
		"namespace",
		"enabled",
		"enable",
		"indent",
		"methods",
		"wrap",
		"method_",
		"name_",
		"spaces",
		"logger",
		"args",
		"name",
		"method",
		"Function",
		"OutOfMemoryError",
		"allocateTyped",
		"TypedArrayName",
		"size",
		"e",
		"RangeError",
		"bytesToBase64",
		"buffer",
		"bytes",
		"Uint8Array",
		"binary",
		"byteLength",
		"btoa",
		"bytesFromBase64",
		"atob",
		"arrayToBase64",
		"array",
		"TypedArrayClass",
		"arrayFromBase64",
		"slice",
		"compareOptionsWithDefaults",
		"opts",
		"defOpts",
		"optsStr",
		"isAlmostPlainObject",
		"o",
		"isPlainObject",
		"proto",
		"hasOwnProperty",
		"objectsDiff",
		"src",
		"dst",
		"diff",
		"forIn",
		"srcValue",
		"dstValue",
		"deepDiff",
		"isEmpty",
		"isEqual",
		"forInRecursive",
		"object",
		"iterateThrough",
		"prefix",
		"newPref",
		"enquoteString",
		"isString",
		"unquoteString",
		"SyntaxError",
		"getFileExtension",
		"fileName",
		"Math",
		"max",
		"lastIndexOf",
		"Infinity",
		"splitFileName",
		"ext",
		"dataUrlToBlob",
		"parts",
		"split",
		"partsCount",
		"Blob",
		"getBrowser",
		"navigator",
		"vendor",
		"userAgent",
		"shotOpen",
		"open",
		"write",
		"shotDownload",
		"dataUrl",
		"filename",
		"msSaveBlob",
		"link",
		"download",
		"innerHTML",
		"createObjectURL",
		"body",
		"click",
		"removeChild",
		"data",
		"blobData",
		"copySubArrays",
		"indices",
		"itemSize",
		"j",
		"shallowCloneNode",
		"node",
		"newNode",
		"cloneNode",
		"worldPos",
		"unquotedStringRE",
		"enquoteHelper",
		"correctSelectorIdentifier",
		"test",
		"concatTypedArraysUnsafe",
		"first",
		"second",
		"mergeTypedArraysUnsafe",
		"reduce",
		"acc",
		"cur",
		"start",
		"count",
		"JobHandle",
		"_shouldCancel",
		"slaveEvent",
		"VERSION",
		"modes",
		"BS",
		"atom",
		"bond",
		"space",
		"multibond",
		"aromrad",
		"showarom",
		"polyComplexity",
		"poor",
		"low",
		"medium",
		"high",
		"ultra",
		"VW",
		"LN",
		"offsarom",
		"chunkarom",
		"lineWidth",
		"LC",
		"SA",
		"zClip",
		"probeRadius",
		"subset",
		"wireframe",
		"SE",
		"QS",
		"isoValue",
		"gaussLim",
		"scale",
		"gridSpacing",
		"CS",
		"probePositions",
		"TR",
		"radius",
		"TU",
		"heightSegmentsRatio",
		"tension",
		"CA",
		"depth",
		"ss",
		"helix",
		"width",
		"arrow",
		"strand",
		"TX",
		"template",
		"horizontalAlign",
		"verticalAlign",
		"dx",
		"dy",
		"dz",
		"fg",
		"bg",
		"showBg",
		"VD",
		"kSigma",
		"kSigmaMed",
		"kSigmaMax",
		"frame",
		"isoMode",
		"colorers",
		"EL",
		"carbon",
		"UN",
		"CO",
		"baseColor",
		"CB",
		"factor",
		"SQ",
		"gradient",
		"TM",
		"min",
		"OC",
		"HY",
		"MO",
		"antialias",
		"camFov",
		"camNear",
		"camFar",
		"camDistance",
		"radiusToFit",
		"fogNearFactor",
		"fogFarFactor",
		"fogAlpha",
		"fogColor",
		"fogColorEnable",
		"palette",
		"resolution",
		"autoResolution",
		"autoPreset",
		"preset",
		"presets",
		"default",
		"mode",
		"colorer",
		"selector",
		"material",
		"empty",
		"wire",
		"small",
		"macro",
		"objects",
		"line",
		"dashSize",
		"gapSize",
		"transparent",
		"draft",
		"clipPlane",
		"clipPlaneFactor",
		"clipPlaneSpeed",
		"plugins",
		"axes",
		"fog",
		"zSprites",
		"isoSurfaceFakeOpacity",
		"suspendRender",
		"nowater",
		"autobuild",
		"fxaa",
		"outline",
		"threshold",
		"thickness",
		"ao",
		"shadow",
		"autoRotation",
		"maxfps",
		"fbxprec",
		"autoRotationAxisFixed",
		"zooming",
		"picking",
		"pick",
		"editing",
		"aromatic",
		"singleUnit",
		"stereo",
		"interpolateViews",
		"transparency",
		"translationSpeed",
		"example",
		"good",
		"ssaoKernelRadius",
		"ssaoFactor",
		"stereoBarrel",
		"use",
		"multiFile",
		"Settings",
		"old",
		"_changed",
		"reset",
		"utils",
		"path",
		"oldValue",
		"_notifyChange",
		"merge",
		"_notifyChanges",
		"defaultValue",
		"cloneDeep",
		"checkpoint",
		"deepValue",
		"deepPath",
		"changed",
		"filter",
		"applyDiffs",
		"diffs",
		"getDiffs",
		"versioned",
		"setPluginOpts",
		"plugin",
		"repIndex",
		"asBoolean",
		"toLowerCase",
		"adapters",
		"string",
		"Number",
		"boolean",
		"cL1Ass",
		"cOptsSep",
		"cL2Ass",
		"cLSep",
		"cCommonIgnoreSymbols",
		"getLevel1ExcludedExpr",
		"cLevel1Ignores",
		"getLevel2ExcludedExpr",
		"cLevel2Ignores",
		"cL1ExclExpr",
		"encodeQueryComponentL1",
		"cL2ExclExpr",
		"encodeQueryComponentL2",
		"ensureRepList",
		"reps",
		"settings",
		"ensureRepAssign",
		"prop",
		"rep",
		"addObject",
		"options",
		"_objects",
		"newOpts",
		"newObj",
		"parseParams",
		"sep",
		"extractArgs",
		"input",
		"defaultsDict",
		"bang",
		"inputVal",
		"arg",
		"pair",
		"adapter",
		"actions",
		"l",
		"load",
		"t",
		"v",
		"view",
		"u",
		"unit",
		"menu",
		"isArray",
		"r",
		"s",
		"select",
		"m",
		"c",
		"mt",
		"materials",
		"dup",
		"ar",
		"_fromArray",
		"entries",
		"entry",
		"action",
		"fromAttr",
		"attr",
		"fromURL",
		"_processOptsForURL",
		"_processArgsForURL",
		"_processObjForURL",
		"objOpts",
		"toURL",
		"stringList",
		"idx",
		"checkAndAdd",
		"addReps",
		"repList",
		"addObjects",
		"objList",
		"protocol",
		"host",
		"pathname",
		"_processOptsForScript",
		"_processArgsForScript",
		"_processObjForScript",
		"map",
		"_processRepsForScript",
		"index",
		"repString",
		"strIdx",
		"localAdd",
		"toScript",
		"commandsList",
		"command",
		"saveQuotes",
		"quote",
		"trim",
		"Atom",
		"residue",
		"position",
		"role",
		"het",
		"serial",
		"occupancy",
		"temperature",
		"charge",
		"mask",
		"hydrogenCount",
		"radicalCount",
		"valence",
		"bonds",
		"flags",
		"Flags",
		"HYDROGEN",
		"CARBON",
		"process",
		"_chain",
		"getName",
		"_sequence",
		"NONPOLARH",
		"Element",
		"fullName",
		"weight",
		"radiusBonding",
		"hValency",
		"hydrogenValency",
		"U1",
		"Lead",
		"U2",
		"Wing",
		"U18",
		"N",
		"Constants",
		"C",
		"O",
		"SG",
		"D",
		"T",
		"byAtomicNumber",
		"ByAtomicNumber",
		"byName",
		"ByName",
		"getByName",
		"cBondTypes",
		"UNKNOWN",
		"COVALENT",
		"AROMATIC",
		"getAtomPos",
		"Bond",
		"left",
		"right",
		"order",
		"fixed",
		"_left",
		"_right",
		"_fixed",
		"_order",
		"_type",
		"distanceTo",
		"currAtom",
		"_forEachNeighbour",
		"l2Atom",
		"refPoint",
		"currDir",
		"posGetter",
		"rightCount",
		"leftCount",
		"tmpVec",
		"clone",
		"checkDir",
		"sub",
		"dotProd",
		"dot",
		"checkCarbon",
		"stages",
		"forEachLevelOne",
		"forEachLevelTwo",
		"stageId",
		"multiplyScalar",
		"third",
		"maxNeibs",
		"another",
		"secondPos",
		"firstV",
		"secondV",
		"crossVectors",
		"lengthSq",
		"normalize",
		"_fixDir",
		"BondType",
		"cNucleicControlNames",
		"cNucleicWing1Names",
		"cNucleicWing2Names",
		"cCylinderSource",
		"cCylinderTarget",
		"types",
		"atoms",
		"Residue",
		"chain",
		"sequence",
		"icode",
		"_component",
		"_icode",
		"_mask",
		"_atoms",
		"_secondary",
		"_firstAtom",
		"_leadAtom",
		"_wingAtom",
		"_lastAtom",
		"_controlPoint",
		"_midPoint",
		"_wingVector",
		"_cylinders",
		"_isValid",
		"_het",
		"_molecule",
		"xyz",
		"altLoc",
		"tempFactor",
		"complex",
		"getComplex",
		"addAtom",
		"forEachAtom",
		"names",
		"_findAtomByName",
		"_name",
		"next",
		"getAtomPosition",
		"leadAtom",
		"_findFirstAtomInList",
		"wingStart",
		"wingEnd",
		"cylSource",
		"targetList",
		"getCylinderTargetList",
		"cylTarget",
		"prevLeadPos",
		"currLeadPos",
		"prevWingPos",
		"prevWing",
		"vectorA",
		"vectorB",
		"needToNegate",
		"abs",
		"angleTo",
		"PI",
		"negate",
		"prevRes",
		"prev",
		"nextRes",
		"chainAsNucleic",
		"bFirstInChain",
		"lp",
		"Vector3",
		"x",
		"y",
		"z",
		"_detectLeadWing",
		"lerp",
		"calcWing",
		"asNucleic",
		"_innerFinalize",
		"anotherResidue",
		"tempCount",
		"occupCount",
		"ResidueType",
		"letterCode",
		"_fullName",
		"ALA",
		"ARG",
		"ASN",
		"ASP",
		"CYS",
		"GLN",
		"GLU",
		"GLY",
		"HIS",
		"ILE",
		"LEU",
		"LYS",
		"MET",
		"PHE",
		"PRO",
		"PYL",
		"SEC",
		"SER",
		"THR",
		"TRP",
		"TYR",
		"VAL",
		"A",
		"G",
		"I",
		"U",
		"DA",
		"DC",
		"DG",
		"DI",
		"DT",
		"DU",
		"WAT",
		"H2O",
		"HOH",
		"DOD",
		"UNK",
		"UNL",
		"PROTEIN",
		"BASIC",
		"ACIDIC",
		"POLAR",
		"NONPOLAR",
		"NUCLEIC",
		"PURINE",
		"PYRIMIDINE",
		"DNA",
		"RNA",
		"WATER",
		"_addFlag",
		"flag",
		"list",
		"StandardTypes",
		"hydro",
		"_addParam",
		"ChainType",
		"Chain",
		"_complex",
		"_residues",
		"minSequence",
		"POSITIVE_INFINITY",
		"maxSequence",
		"NEGATIVE_INFINITY",
		"residues",
		"seqNum",
		"iCode",
		"_determineType",
		"curr",
		"_finalize2",
		"frameData",
		"prevData",
		"frameRes",
		"currData",
		"getResidueType",
		"addResidueType",
		"addResidue",
		"StructuralElement",
		"init",
		"term",
		"generic",
		"genericByType",
		"serialAtomMap",
		"residueHash",
		"splitUnifiedSerial",
		"chainId",
		"serialId",
		"hashCode",
		"getUnifiedSerial",
		"Type",
		"STRAND",
		"BRIDGE",
		"HELIX_310",
		"HELIX_ALPHA",
		"HELIX_PI",
		"HELIX",
		"TURN_310",
		"TURN_ALPHA",
		"TURN_PI",
		"TURN",
		"BEND",
		"COIL",
		"Generic",
		"LOOP",
		"StructuralElementType",
		"StructuralElementGeneric",
		"typeByPDBHelixClass",
		"Helix",
		"helixClass",
		"comment",
		"superPropBase",
		"Strand",
		"sheet",
		"sense",
		"atomCur",
		"atomPrev",
		"as",
		"isNaN",
		"Sheet",
		"_width",
		"_strands",
		"_finalize",
		"SGroup",
		"saveNode",
		"_id",
		"_position",
		"_charge",
		"_repeat",
		"_center",
		"xmlNodeRef",
		"nLimon",
		"bLow",
		"bHight",
		"aPos",
		"addVectors",
		"parser",
		"k",
		"$V0",
		"$V1",
		"$V2",
		"$V3",
		"$V4",
		"$V5",
		"$V6",
		"$V7",
		"$V8",
		"$V9",
		"$Va",
		"$Vb",
		"$Vc",
		"$Vd",
		"trace",
		"yy",
		"symbols_",
		"Program",
		"Expression",
		"EOF",
		"Selector",
		"OR",
		"AND",
		"NOT",
		"SELECTOR",
		"NAMED_SELECTOR",
		"SELECTOR_RANGED",
		"RangeList",
		"SELECTOR_NAMED",
		"NameList",
		"Range",
		"NUMBER",
		"Name",
		"IDENTIFIER",
		"STRING",
		"$accept",
		"$end",
		"terminals_",
		"productions_",
		"performAction",
		"anonymous",
		"yytext",
		"yyleng",
		"yylineno",
		"yystate",
		"$$",
		"_$",
		"$0",
		"$",
		"keyword",
		"GetSelector",
		"append",
		"ValueList",
		"table",
		"defaultActions",
		"parseError",
		"hash",
		"recoverable",
		"parse",
		"stack",
		"tstack",
		"vstack",
		"lstack",
		"TERROR",
		"arguments",
		"lexer",
		"sharedState",
		"setInput",
		"yylloc",
		"yyloc",
		"ranges",
		"lex",
		"token",
		"pop",
		"symbol",
		"state",
		"yyval",
		"len",
		"newState",
		"expected",
		"errStr",
		"showPosition",
		"loc",
		"first_line",
		"last_line",
		"first_column",
		"last_column",
		"range",
		"concat",
		"_input",
		"_more",
		"_backtrack",
		"done",
		"matched",
		"conditionStack",
		"offset",
		"ch",
		"lines",
		"unput",
		"oldLines",
		"more",
		"reject",
		"backtrack_lexer",
		"less",
		"pastInput",
		"past",
		"upcomingInput",
		"pre",
		"test_match",
		"indexed_rule",
		"backup",
		"matches",
		"tempMatch",
		"rules",
		"_currentRules",
		"flex",
		"begin",
		"condition",
		"popState",
		"conditions",
		"topState",
		"pushState",
		"stateStackSize",
		"yy_",
		"$avoiding_name_collisions",
		"YY_START",
		"INITIAL",
		"inclusive",
		"Parser",
		"SelectionParser",
		"List",
		"_values",
		"splice",
		"toJSON",
		"includes",
		"valuesArray",
		"upperOnly",
		"toUpperCase",
		"_validate",
		"ListSelector",
		"RangeListSelector",
		"ValueListSelector",
		"caseSensitive",
		"NoneSelector",
		"_atom",
		"AllSelector",
		"none",
		"PrefixOperator",
		"rhs",
		"InfixOperator",
		"lhs",
		"keywords",
		"defineSelector",
		"SelectorClass",
		"factory",
		"NULL_SELECTOR",
		"defineOperator",
		"OperatorClass",
		"includesAtom",
		"byResidueTypeFlag",
		"selectors",
		"Context",
		"exc",
		"ClearContext",
		"BiologicalUnit",
		"_selector",
		"_boundaries",
		"boundingBox",
		"Box3",
		"boundingSphere",
		"Sphere",
		"makeEmpty",
		"expandByPoint",
		"bbc",
		"getCenter",
		"setFromCenterAndSize",
		"radiusSquared",
		"center",
		"pos",
		"lengthSquared",
		"distanceToSquared",
		"sqrt",
		"Assembly",
		"chains",
		"matrices",
		"oldCenter",
		"oldRad",
		"applyMatrix4",
		"newRad",
		"addScalar",
		"subScalar",
		"matrix",
		"Component",
		"_residueIndices",
		"_cycles",
		"_subDivs",
		"_residueCount",
		"resIdc",
		"idIdc",
		"idCount",
		"last",
		"subDivs",
		"resCnt",
		"_bonds",
		"forEachCycle",
		"cycle",
		"forEachResidue",
		"cycles",
		"subs",
		"currRes",
		"endRes",
		"_forEachSubChain",
		"_subIdx",
		"currIdx",
		"lastSubIdx",
		"subIdx",
		"arr",
		"boundaries",
		"cMaxPairsForHashCode",
		"cHashTableSize",
		"cNumbersPerPair",
		"cMaxNeighbours",
		"cInvalidVal",
		"cBigPrime",
		"AtomPairs",
		"maxPairsEstimate",
		"numPairs",
		"numMaxPairs",
		"intBuffer",
		"Int32Array",
		"hashBuffer",
		"indexA",
		"indexB",
		"ia",
		"ib",
		"codeToAdd",
		"apI",
		"cEstBondsMultiplier",
		"cSpaceCode",
		"cBondTolerance",
		"cEpsilon",
		"_getBondingRadius",
		"_isAtomEligible",
		"isHet",
		"AutoBond",
		"_maxRad",
		"bBox",
		"getDefaultBoundaries",
		"_vBoxMin",
		"_vBoxMax",
		"_pairCollection",
		"getAtoms",
		"numAtoms",
		"aInd",
		"collection",
		"numBondsForAtom",
		"bInd",
		"indTo",
		"addPair",
		"vw",
		"getVoxelWorld",
		"atomsNum",
		"rA",
		"isHydrogenA",
		"posA",
		"locationA",
		"atomA",
		"processAtom",
		"atomB",
		"isHydrogen",
		"locationB",
		"dist2",
		"rB",
		"maxAcceptable",
		"forEachAtomWithinRadius",
		"iA",
		"iB",
		"_addPair",
		"bondsA",
		"numBonds",
		"newBond",
		"addBond",
		"_buildInner",
		"_calcBoundingBox",
		"_addExistingPairs",
		"_findPairs",
		"_addPairs",
		"nAtoms",
		"maxRad",
		"destroy",
		"cCrossThresh",
		"cAromaticType",
		"cAromaticAtoms",
		"_coDirVectors",
		"v1Tmp",
		"v2Tmp",
		"cp",
		"v1",
		"v2",
		"_insertAscending",
		"val",
		"_anotherAtom",
		"_cosBetween",
		"theta",
		"MathUtils",
		"clamp",
		"_markAromatic",
		"Cycle",
		"atomsList",
		"nA",
		"add",
		"nextAtom",
		"checkBond",
		"forEachBond",
		"_isAromatic",
		"_isPossibleAromatic",
		"rightIdx",
		"leftIdx",
		"_checkCycleSimple",
		"_checkCycleComplex",
		"assert",
		"AromaticLoopsMarker",
		"bondsData",
		"bondMarks",
		"_bondsData",
		"_bondMarks",
		"_resetCycles",
		"_currIdx",
		"bond1",
		"bond2",
		"arr1",
		"arr2",
		"n1",
		"n2",
		"i1",
		"i2",
		"prevBond",
		"currRight",
		"bondsOrder",
		"currLeft",
		"currVec",
		"startAtomRef",
		"_currStart",
		"checkAromatic",
		"_checkBond",
		"_haveSameCycle",
		"anotherAtom",
		"anotherVec",
		"newDir",
		"cross",
		"dir",
		"newRight",
		"_tryBond",
		"checkCycle",
		"forEachComponent",
		"component",
		"_startCycle",
		"newCycle",
		"addCycle",
		"_findLoops",
		"_getSphereSliceRadiusRange",
		"zMin",
		"zMax",
		"dzMin",
		"dzMax",
		"rzMin",
		"rzMax",
		"rMin",
		"rMax",
		"_getCircleSliceRadiusRange",
		"yMin",
		"yMax",
		"dyMin",
		"dyMax",
		"ryMin",
		"ryMax",
		"VoxelWorld",
		"box",
		"vCellSizeHint",
		"_box",
		"getSize",
		"divide",
		"floor",
		"_last",
		"_cellSize",
		"_cellInnerR",
		"_cellOuterR",
		"numVoxels",
		"_voxels",
		"getAtomCount",
		"voxelIdx",
		"_findVoxel",
		"point",
		"zero",
		"_zero",
		"voxel",
		"_voxel",
		"xRange",
		"_xRange",
		"yRange",
		"_yRange",
		"zRange",
		"_zRange",
		"_forEachVoxelWithinRadiusSimple",
		"rRangeXY",
		"rRangeX",
		"xVal",
		"yVal",
		"zVal",
		"isInsideX",
		"isInsideY",
		"isInsideZ",
		"divideScalar",
		"clampScalar",
		"vCenter",
		"_vCenter",
		"distTouch2",
		"distInside2",
		"d2",
		"r2",
		"_forEachVoxelWithinRadius",
		"isInside",
		"_forEachAtomInVoxel",
		"dist",
		"_forEachAtomWithinDistFromGroup",
		"atomProc",
		"voxels",
		"processIfWithin",
		"Vector2",
		"MINIMAL_DISTANCE",
		"MIN_HBOND_ENERGY",
		"MAX_HBOND_ENERGY",
		"COUPLING_CONSTANT",
		"MAX_COUPLING_DISTANCE",
		"MAX_RESIDUES_THRESHOLD",
		"HBondInfo",
		"_hbonds",
		"_buildVW",
		"_build",
		"from",
		"to",
		"acceptor",
		"acc0",
		"acc1",
		"energy",
		"ri",
		"getType",
		"preri",
		"rj",
		"prerj",
		"_calcHBondEnergy",
		"pairs",
		"PairCollection",
		"_residueGetCAlpha",
		"_residueGetCO",
		"h",
		"predonor",
		"donor",
		"_residueGetNH",
		"distanceHO",
		"distanceHC",
		"distanceNC",
		"distanceNO",
		"round",
		"donorInfo",
		"accInfo",
		"BridgeType",
		"freeze",
		"NO_BRIDGE",
		"PARALLEL",
		"ANTI_PARALLEL",
		"HelixFlag",
		"START",
		"MIDDLE",
		"END",
		"START_AND_END",
		"StructureType",
		"SecondaryStructureMap",
		"_ss",
		"_sheet",
		"_betaPartners",
		"_bend",
		"getResidues",
		"_helixFlags",
		"_chainLengths",
		"_chains",
		"_buildBetaSheets",
		"_buildAlphaHelices",
		"inResidues",
		"chainLength",
		"inPreferPiHelices",
		"stride",
		"isBond",
		"kappa",
		"_kappa",
		"_isHelixStart",
		"isTurn",
		"p1",
		"p2",
		"p3",
		"p4",
		"v12",
		"v34",
		"prevPrev",
		"nextNext",
		"curCA",
		"ppCA",
		"nnCA",
		"ckap",
		"_cosinusAngle",
		"skap",
		"atan2",
		"bridges",
		"lenA",
		"chainA",
		"b",
		"lenB",
		"chainB",
		"_testBridge",
		"found",
		"bridge",
		"unshift",
		"chainI",
		"getChain",
		"chainJ",
		"sort",
		"ibi",
		"iei",
		"jbi",
		"jei",
		"ibj",
		"iej",
		"jbj",
		"jej",
		"_hasChainBreak",
		"bulge",
		"ladderset",
		"Set",
		"ladder",
		"delete",
		"sheetset",
		"toMove",
		"_areBridgesLinked",
		"betai",
		"betaj",
		"parallel",
		"d",
		"f",
		"ai",
		"aj",
		"has",
		"VOXEL_SIZE",
		"helixClassMap",
		"loopMap",
		"Complex",
		"_components",
		"_helices",
		"_sheets",
		"structures",
		"_residueTypes",
		"_sgroups",
		"_molecules",
		"_maskNeedsUpdate",
		"metadata",
		"symmetry",
		"units",
		"_currentUnit",
		"forEachChain",
		"updateToFrame",
		"resName",
		"rt",
		"chainName",
		"resId",
		"atomName",
		"localeCompare",
		"molecules",
		"groups",
		"components",
		"maxSerial",
		"chainShift",
		"uniSerial",
		"remnant",
		"insCode",
		"ser",
		"addComp",
		"comp",
		"resCount",
		"currStart",
		"isConnected",
		"setSubDivs",
		"currSubDivs",
		"enableEditing",
		"_fillCmpEdit",
		"_fillCmpNoedit",
		"getBoundaries",
		"getTransforms",
		"getSelector",
		"setCurrentUnit",
		"newUnit",
		"computeBoundaries",
		"_computeBounds",
		"_finalizeBonds",
		"forEachSGroup",
		"_rebuildSGroupOnAtomChange",
		"updateStructuresMask",
		"getBonds",
		"finalize",
		"getSequence",
		"getICode",
		"helices",
		"sheets",
		"needAutoBonding",
		"autoConnector",
		"build",
		"other",
		"_fillComponents",
		"marker",
		"markCycles",
		"detectAromaticLoops",
		"detectCycles",
		"_finalizeMolecules",
		"molecule",
		"updater",
		"structure",
		"collectMask",
		"forEachMolecule",
		"setMask",
		"clearMask",
		"totalSelector",
		"reseter",
		"_atomNames",
		"dict",
		"_elements",
		"_residueNames",
		"_chainNames",
		"_altlocNames",
		"_voxelWorld",
		"addAtoms",
		"srcArray",
		"dstArray",
		"functor",
		"elem",
		"complexes",
		"atomBias",
		"bondBias",
		"residueBias",
		"chainBias",
		"componentBias",
		"bias",
		"processBond",
		"processResidue",
		"processChain",
		"processComponent",
		"doNothing",
		"addElement",
		"ssMap",
		"getSheet",
		"item",
		"lastCode",
		"lastSheetIndex",
		"lastHelixIndex",
		"curStructure",
		"curCode",
		"curResidue",
		"curSheetIndex",
		"loopType",
		"curSheet",
		"addStrand",
		"pow2ceil",
		"Volume",
		"dimensions",
		"vecSize",
		"volumeInfo",
		"_dimVec",
		"_volumeInfo",
		"_dimX",
		"_dimY",
		"_dimZ",
		"_rowElements",
		"_planeElements",
		"_totalElements",
		"_data",
		"getValue",
		"setValue",
		"addValue",
		"boxSize",
		"Float32Array",
		"vl",
		"getCellSize",
		"vs",
		"xSize",
		"ySize",
		"zSize",
		"volMap",
		"_voxelValue",
		"zi",
		"zm",
		"zp",
		"yi",
		"ym",
		"yp",
		"xi",
		"xm",
		"xp",
		"tilesX",
		"ceil",
		"tilesY",
		"height",
		"tileRow",
		"row",
		"texture",
		"DataTexture",
		"LuminanceFormat",
		"UnsignedByteType",
		"UVMapping",
		"ClampToEdgeWrapping",
		"LinearFilter",
		"needsUpdate",
		"Molecule",
		"CSS2DObject",
		"_element",
		"parentNode",
		"transp",
		"el",
		"getElement",
		"op",
		"top",
		"op100",
		"opacity",
		"Object3D",
		"RCGroup",
		"raycaster",
		"intersects",
		"visible",
		"children",
		"raycast",
		"innerOnly",
		"enableSubset",
		"disableSubset",
		"totalSubset",
		"getSubset",
		"Group",
		"LAYERS",
		"VOLUME",
		"TRANSPARENT",
		"PREPASS_TRANSPARENT",
		"VOLUME_BFPLANE",
		"COLOR_FROM_POSITION",
		"SHADOWMAP",
		"SELECTION_LAYERS",
		"resetTransform",
		"quaternion",
		"updateMatrixWorldRecursive",
		"parent",
		"updateMatrixWorld",
		"addSavingWorldTransform",
		"_worldMatrixInverse",
		"Matrix4",
		"matrixWorld",
		"invert",
		"multiply",
		"decompose",
		"WebGLRenderer",
		"renderDummyQuad",
		"_material",
		"MeshBasicMaterial",
		"depthWrite",
		"_scene",
		"Scene",
		"_quad",
		"Mesh",
		"PlaneBufferGeometry",
		"_camera",
		"OrthographicCamera",
		"render",
		"renderScreenQuad",
		"isIdentity",
		"identity",
		"equals",
		"applyToPointsArray",
		"w",
		"elements",
		"persp",
		"ScreenQuadMaterial",
		"uniforms",
		"srcTex",
		"vertexShader",
		"vertexScreenQuadShader",
		"depthTest",
		"RawShaderMaterial",
		"renderScreenQuadFromTex",
		"fragmentShader",
		"fragmentScreenQuadFromTex",
		"renderScreenQuadFromTexWithDistortion",
		"coef",
		"fragmentScreenQuadFromTexWithDistortion",
		"PerspectiveCamera",
		"setMinimalFov",
		"angle",
		"aspect",
		"fov",
		"radToDeg",
		"atan",
		"tan",
		"degToRad",
		"StereoCamera",
		"updateHalfSized",
		"camera",
		"originalAspect",
		"originalFov",
		"updateProjectionMatrix",
		"setDistanceToFit",
		"sin",
		"Raycaster",
		"intersectVisibleObject",
		"gfxObj",
		"fogFarPlane",
		"intersectObject",
		"nearPlane",
		"near",
		"matrixWorldInverse",
		"farPlane",
		"far",
		"extractScale",
		"_v",
		"te",
		"det",
		"determinant",
		"_calcCylinderMatrix",
		"posBegin",
		"posEnd",
		"posCenter",
		"matScale",
		"makeScale",
		"matRotHalf",
		"makeRotationX",
		"matRotLook",
		"vUp",
		"lookAt",
		"setPosition",
		"_calcChunkMatrix",
		"eye",
		"target",
		"up",
		"rad",
		"_groupHasGeometryToRender",
		"group",
		"hasGeoms",
		"traverse",
		"_buildDistorionMesh",
		"widthSegments",
		"heightSegements",
		"calcInverseBarrel",
		"epsilon",
		"prevR2",
		"curR2",
		"dr",
		"geo",
		"getAttribute",
		"setXY",
		"BufferAttribute",
		"copyAtList",
		"attribute",
		"indexList",
		"fillArray",
		"startIndex",
		"endIndex",
		"removeChildren",
		"clearTree",
		"LineSegments",
		"Line",
		"geometry",
		"dispose",
		"destroyObject",
		"belongToSelectLayers",
		"layers",
		"processObjRenderOrder",
		"root",
		"idMaterial",
		"renderOrder",
		"isGroup",
		"applySelectionMaterial",
		"setValues",
		"depthFunc",
		"LessEqualDepth",
		"overrideColor",
		"lights",
		"shadowmap",
		"setUberOptions",
		"fixedColor",
		"Color",
		"zOffset",
		"getMiddlePoint",
		"point1",
		"point2",
		"optionalTarget",
		"addScaledVector",
		"_oldInstancedBufferGeometryCopy",
		"InstancedBufferGeometry",
		"source",
		"instanceCount",
		"calcCylinderMatrix",
		"calcChunkMatrix",
		"groupHasGeometryToRender",
		"buildDistorionMesh",
		"_defaultBoundaries",
		"Visual",
		"dataSource",
		"_dataSource",
		"gfxutils",
		"arrayWithoutHoles",
		"iterableToArray",
		"nonIterableSpread",
		"_ensureArray",
		"EntityList",
		"entities",
		"_list",
		"_dict",
		"_indices",
		"entity",
		"register",
		"registerInList",
		"registerInDict",
		"unregisterFromList",
		"unregisterFromDict",
		"makeContextDependent",
		"defineProperties",
		"CollisionSphere",
		"_radius",
		"sphere",
		"_sphere",
		"ray",
		"intersectSphere",
		"distance",
		"origin",
		"SphereCollisionGeo",
		"inters",
		"chunkIdx",
		"computeBoundingBox",
		"tmpColor",
		"OFFSET_SIZE",
		"COLOR_SIZE",
		"setArrayXYZ",
		"setArrayXYZW",
		"InstancedSpheresGeometry",
		"spheresCount",
		"sphereComplexity",
		"useZSprites",
		"_sphGeometry",
		"SphereBufferGeometry",
		"_init",
		"itemIdx",
		"itemPos",
		"itemRad",
		"_offsets",
		"setSphere",
		"colorVal",
		"_colors",
		"g",
		"finishUpdate",
		"computeBoundingSphere",
		"chunkIndices",
		"alphaArr",
		"_alpha",
		"geom",
		"sphereGeo",
		"alpha",
		"fill",
		"InstancedBufferAttribute",
		"MAX_IDC_16BIT",
		"VEC_SIZE",
		"ChunkedObjectsGeometry",
		"chunkGeo",
		"chunksCount",
		"_chunkGeo",
		"colors",
		"chunkSize",
		"_chunkSize",
		"mesh",
		"facesPerChunk",
		"faceIndex",
		"BufferGeometry",
		"srcPos",
		"_positions",
		"srcNorm",
		"_normals",
		"srcColor",
		"dstPos",
		"dstNorm",
		"dstColor",
		"dstPtOffset",
		"ptIdxBegin",
		"ptIdxEnd",
		"subarray",
		"attributes",
		"chunkIndex",
		"chunkIndexSize",
		"pointsCount",
		"use32bitIndex",
		"indexSize",
		"Uint32Array",
		"Uint16Array",
		"posOffset",
		"setIndex",
		"SimpleSpheresGeometry",
		"sphGeometry",
		"normals",
		"geoNormals",
		"normal",
		"_chunkPos",
		"_tmpPositions",
		"tmpPos",
		"geoPos",
		"centerPos",
		"tmpVector",
		"normMtx",
		"Matrix3",
		"Simple2CCylindersGeometry",
		"cylGeometry",
		"CylinderBufferGeometry",
		"_chunkNorms",
		"_tmpVector",
		"botPos",
		"topPos",
		"firstOffset",
		"secondOffset",
		"tmpArray",
		"geoNorm",
		"lerpVectors",
		"mtx1",
		"getNormalMatrix",
		"fromArray",
		"toArray",
		"applyMatrix3",
		"colorVal1",
		"colorVal2",
		"MAX_POINTS_COUNT_16BIT",
		"PTS_PER_TRIANGLE",
		"radiusTop",
		"radiusBottom",
		"radialSegments",
		"heightSegments",
		"openEnded",
		"thetaStart",
		"thetaLength",
		"parameters",
		"hasTop",
		"hasBottom",
		"vertexCount",
		"facesCount",
		"heightHalf",
		"positions",
		"Uint16BufferAttribute",
		"uvs",
		"currVtxIdx",
		"currFaceIdx",
		"tanTheta",
		"v3",
		"v4",
		"setXYZ",
		"vx",
		"vy",
		"vz",
		"cos",
		"startTIdx",
		"lastIdx",
		"fTIdx",
		"currSrcIdx",
		"getX",
		"getY",
		"getZ",
		"nextTVtx",
		"startBIdx",
		"lastBIdx",
		"fBIdx",
		"currSrcBIdx",
		"nextBVtx",
		"invMatrix",
		"sortNumber",
		"_prepareCylinderInfo",
		"chunksIdx",
		"cylinderInfo",
		"even",
		"newPar",
		"_assignOpacity",
		"color1",
		"color2",
		"Instanced2CCylindersGeometry",
		"_useZSprites",
		"_cylGeometry",
		"_collisionGeo",
		"me",
		"mtxOffset",
		"setItem",
		"_matVector1",
		"_matVector2",
		"_matVector3",
		"_invmatVector1",
		"_invmatVector2",
		"_invmatVector3",
		"colorIdx",
		"_color1",
		"_color2",
		"cylinderIndices",
		"cylinderGeo",
		"TRI_SIZE",
		"tmpPrev",
		"tmpNext",
		"tmpRes",
		"simpleNormal",
		"normalOnCut",
		"nearRingPt",
		"_createExtrudedChunkGeometry",
		"shape",
		"ringsCount",
		"ptsCount",
		"totalPts",
		"ExtrudedObjectsGeometry",
		"_ringsCount",
		"tmpShape",
		"_tmpShape",
		"hasSlope",
		"hasCut",
		"chunkStartIdx",
		"_setPoints",
		"_setSlopeNormals",
		"_setBaseNormals",
		"_addCut",
		"vtxIdx",
		"mtx",
		"nPtsInRing",
		"_countNormalsInRing",
		"isSlope",
		"shiftToExtraPt",
		"subVectors",
		"VERTEX_PER_SEGMENT",
		"POS_SIZE",
		"DIR_SIZE",
		"COL_SIZE",
		"direction",
		"startSegmentIdx",
		"segmentsCount",
		"elemSize",
		"ThickLinesGeometry",
		"_initVertices",
		"segmentIdx",
		"pos1",
		"pos2",
		"directions",
		"_directions",
		"dirIdx",
		"startSegIdx",
		"endSegIdx",
		"startPos",
		"startDir",
		"_buffersSize",
		"indexOffset",
		"pointOffset",
		"LinesGeometry",
		"posSize",
		"getPositionSize",
		"BaseLinesGeometry",
		"CylinderCollisionGeo",
		"itemOffset",
		"COLLISION_RAD",
		"ChunkedLinesGeometry",
		"enableCollision",
		"collisionGeo",
		"segCount",
		"segIdx",
		"setSegments",
		"getSubsetSegments",
		"setColors",
		"getSubsetColors",
		"TwoColorLinesGeometry",
		"segmentIndices",
		"_segCounts",
		"vectors",
		"vecCount",
		"tempPos1",
		"tempPos2",
		"CrossGeometry",
		"setSegment",
		"POS_RAD_SIZE",
		"IsoSurfaceGeometry",
		"_opts",
		"_posRad",
		"posRad",
		"IsoSurfaceMarchCube",
		"pointsValuesLinear",
		"hasIntersection",
		"bitsInside",
		"numCellsPerSide",
		"vx7000000",
		"n3",
		"striIndicesMarchCube",
		"edgeTable",
		"_voxelGradientFast",
		"grad",
		"GridCell",
		"_arrSize",
		"cubeIndex",
		"Triangle",
		"createArray",
		"arrSize",
		"IsoSurface",
		"_numTriangles",
		"_numVertices",
		"_volumetricData",
		"_xAxis",
		"_yAxis",
		"_zAxis",
		"_xDir",
		"_yDir",
		"_zDir",
		"volData",
		"cellSize",
		"xAxis",
		"yAxis",
		"zAxis",
		"xDir",
		"yDir",
		"zDir",
		"tmp",
		"notZero",
		"axe",
		"EPSILON",
		"isoLevel",
		"grid",
		"ind1",
		"ind2",
		"vertex",
		"valP1",
		"valP2",
		"isoDiffP1",
		"diffValP2P1",
		"mu",
		"triangles",
		"firstIndices",
		"_firstIndices",
		"secondIndices",
		"_secondIndices",
		"vertexList",
		"_vertexList",
		"normalList",
		"_normalList",
		"_vertexInterp",
		"triCount",
		"triTblIdx",
		"triTable",
		"_triTable",
		"step",
		"appendSimple",
		"vol",
		"getData",
		"dim",
		"getDimensions",
		"stepX",
		"getStrideX",
		"stepY",
		"getStrideY",
		"stepZ",
		"getStrideZ",
		"gc",
		"gcVal",
		"gcValSize",
		"additions",
		"tmpTriCount",
		"appendVertex",
		"axis",
		"triVertex",
		"_origin",
		"posMtx",
		"globTriCount",
		"getDirectIdx",
		"_gradient",
		"_polygonize",
		"computeGradient",
		"_doGridPosNorms",
		"_prepareAxesAndDirs",
		"vertexMap",
		"idcCount",
		"newIndices",
		"vertices",
		"newPositions",
		"newNormals",
		"norm",
		"faceVer",
		"oldVerCount",
		"vMap",
		"newVer",
		"matchedIndex",
		"_remapIndices",
		"_remapVertices",
		"colorMap",
		"atomMap",
		"atomWeightMap",
		"visibilitySelector",
		"numVerts",
		"xs",
		"ys",
		"zs",
		"colorData",
		"strideX",
		"strideY",
		"strideZ",
		"atomWeightData",
		"atomStrideX",
		"atomStrideY",
		"atomStrideZ",
		"xInv",
		"yInv",
		"zInv",
		"atomLookup",
		"atomWeights",
		"interp",
		"idx1",
		"idx2",
		"collectWeight",
		"coefX",
		"coefY",
		"coefZ",
		"newVerCount",
		"ind",
		"mux",
		"muy",
		"muz",
		"maxWeight",
		"dominantIdx",
		"atomIdx",
		"c0",
		"c1",
		"c2",
		"c3",
		"cz0",
		"cz1",
		"numTriangles",
		"newTriCount",
		"i0",
		"VolumeSurfaceGeometry",
		"_visibilitySelector",
		"_calcSurface",
		"posRadArray",
		"itemsCount",
		"maxPosRad",
		"minPosRad",
		"tmpVal",
		"minMaxValues",
		"_findMinMax",
		"minCoordRad",
		"maxCoordRad",
		"gridPadding",
		"radScale",
		"padRad",
		"bbox",
		"surface",
		"isoSurf",
		"compute",
		"vertexFusion",
		"setColorVolTex",
		"volTexMap",
		"packedArrays",
		"_findNumVoxels",
		"_computeSurface",
		"_makeSurface",
		"chem",
		"QuickSurfGeometry",
		"_shiftByOrigin",
		"gaussdensity",
		"atomicNum",
		"invIsoValue",
		"invGridSpacing",
		"maxVoxelX",
		"maxVoxelY",
		"maxVoxelZ",
		"volTexData",
		"texStrideX",
		"scaledRad",
		"atomicNumFactor",
		"radInv",
		"radLim",
		"radLim2",
		"xMin",
		"xMax",
		"dy2dz2",
		"addr",
		"texAddr",
		"expVal",
		"density",
		"exp",
		"colInd",
		"originX",
		"originY",
		"originZ",
		"AVHash",
		"maxDistance",
		"minX",
		"minY",
		"minZ",
		"maxX",
		"maxY",
		"maxZ",
		"hashFunc",
		"minW",
		"iDim",
		"jDim",
		"kDim",
		"nCells",
		"jkDim",
		"cellID",
		"preHash",
		"cid",
		"iIdx",
		"cellOffsets",
		"cellLengths",
		"maxCellLength",
		"subArray",
		"cellLength",
		"neighbourListLength",
		"withinRadii",
		"rExtra",
		"out",
		"outIdx",
		"nearI",
		"nearJ",
		"nearK",
		"loI",
		"loJ",
		"loK",
		"hiI",
		"hiJ",
		"hiK",
		"iOffset",
		"jOffset",
		"cellStart",
		"cellEnd",
		"dataIndex",
		"atomIndex",
		"baseIndex",
		"rSum",
		"ContactSurface",
		"_indexList",
		"maxRadius",
		"scaleFactor",
		"lastClip",
		"volTex",
		"weights",
		"weightsMap",
		"gridx",
		"gridy",
		"gridz",
		"sinTable",
		"cosTable",
		"neighbours",
		"mid",
		"ngTorus",
		"uniformArray",
		"TypeName",
		"innI",
		"fillGridDim",
		"initializeGrid",
		"gridSize",
		"initializeAngleTables",
		"initializeHash",
		"rExt",
		"singleAtomObscures",
		"innX",
		"innY",
		"innZ",
		"innCI",
		"ra2",
		"obscured",
		"ni",
		"projectPoints",
		"sigma",
		"sigma2Inv",
		"ax",
		"ay",
		"az",
		"ar2",
		"ng",
		"iax",
		"iay",
		"iaz",
		"minx",
		"miny",
		"minz",
		"maxx",
		"maxy",
		"maxz",
		"colIdx",
		"cr",
		"cg",
		"cb",
		"iz",
		"iy",
		"dzy2",
		"zyOffset",
		"ix",
		"cIdx",
		"ap",
		"spx",
		"spy",
		"spz",
		"dd",
		"normalToLine",
		"projectTorus",
		"aIdx",
		"bIdx",
		"xa",
		"ya",
		"za",
		"r1",
		"innR2",
		"cosA",
		"dmp",
		"rInt",
		"cost",
		"sint",
		"px",
		"py",
		"pz",
		"current",
		"projectTorii",
		"innIdx",
		"fixNegatives",
		"innInnI",
		"getVolume",
		"timeEnd",
		"ContactSurfaceGeometry",
		"contactSurface",
		"IsoSurfaceAtomColored",
		"radiusAt",
		"coord",
		"colorX",
		"colorY",
		"colorZ",
		"atomType",
		"srcAtom",
		"IsosurfaceBuildNormals",
		"vBoxMin",
		"vBoxMax",
		"_numAtoms",
		"_probeRadius",
		"_atomsList",
		"_voxelList",
		"numAtomsRefs",
		"ATOM_VOXEL_REF_SCALE",
		"aveRad",
		"numCells",
		"_numCells",
		"_aveRad",
		"side",
		"side2",
		"side3",
		"xScale",
		"_xScale",
		"yScale",
		"_yScale",
		"zScale",
		"_zScale",
		"maxAtomsRefs",
		"xNumVoxMult",
		"yNumVoxMult",
		"zNumVoxMult",
		"radAffect",
		"diaAffect",
		"numVoxX",
		"numVoxY",
		"numVoxZ",
		"xIndMin",
		"yIndMin",
		"zIndMin",
		"xIndMax",
		"yIndMax",
		"zIndMax",
		"indVoxel",
		"indexNext",
		"_vertices",
		"xInd",
		"yInd",
		"zInd",
		"ref",
		"indexAtom",
		"closest",
		"minDist2",
		"MAX_VALUE",
		"forEachRelatedAtom",
		"numVertices",
		"numCloseAtoms",
		"vNormalX",
		"vNormalY",
		"vNormalZ",
		"koef",
		"r25",
		"r01",
		"maxRadAffect",
		"maxRadAffect2",
		"expScale",
		"gatherNormals",
		"radiusColorSmoothness",
		"KOEF_ADD",
		"colorsClose",
		"weightsSum",
		"gatherColors",
		"weightNormalized",
		"IsoSurfaceGeo",
		"maxNumVertices",
		"maxNumTriangles",
		"needVertexColors",
		"_maxNumVertices",
		"_maxNumTriangles",
		"HASH_SIZE",
		"SSIsosurfaceGeometry",
		"_innerBuild",
		"geoOut",
		"getGeo",
		"_fromGeo",
		"numTri3",
		"atomsColored",
		"nm",
		"hashLines",
		"hashEntries",
		"bigNum",
		"probeRadius2",
		"atomRadiusScale",
		"radMax",
		"num",
		"numPoints",
		"vOut",
		"invNP",
		"tx",
		"ty",
		"tz",
		"sign",
		"cube",
		"indexPointValue",
		"cTwentyFour",
		"xb",
		"yb",
		"zb",
		"v0",
		"a0",
		"voxelWorld",
		"getClosestAtom",
		"a1",
		"a2",
		"isTriangleVisible",
		"indInGeo0",
		"addVertexToGeo",
		"indInGeo1",
		"indInGeo2",
		"itr",
		"meshRes",
		"corners",
		"vCellStep",
		"cNumVerts",
		"vaEdges",
		"vCorner",
		"indCell",
		"indY",
		"indZ",
		"getCornerCoord",
		"indPointValues",
		"indValues",
		"buildEdgePoint",
		"offs",
		"numTri",
		"indTri",
		"addTriangle",
		"numIntersectedCells",
		"cubeValuesIndex",
		"indCorner",
		"letter",
		"atomT",
		"probeRad",
		"vDif",
		"aLot",
		"fx",
		"fy",
		"fz",
		"indXMin",
		"indYMin",
		"indZMin",
		"indXMax",
		"indYMax",
		"indZMax",
		"distToSphere",
		"numHashEtriesAllocated",
		"numHashEntryIndex",
		"vAdd",
		"oneHynberes",
		"n815851",
		"n37633",
		"n2453543",
		"r106",
		"hashResolution",
		"marCubeResoultion",
		"iHash",
		"hLineIndex",
		"dot2",
		"iVertAdd",
		"getNewHashEntry",
		"entryFirst",
		"probeSphereRadius",
		"distToBorder",
		"r11",
		"innerBlockWorkAround",
		"probeSpRad2",
		"sideInv",
		"radEst",
		"xCorner",
		"yCorner",
		"zCorner",
		"ok",
		"expandFactor",
		"meshResolution",
		"colorMode",
		"useVertexColors",
		"excludeProbe",
		"convertToAtomsColored",
		"getBoundingBox",
		"rProbeRadius",
		"calculateGridCorners",
		"numIntersectedCellsEstim",
		"getNumIntersectedCells",
		"createVertexHash",
		"probeRadForNormalsColors",
		"createVoxels",
		"buildGeoFromCorners",
		"modifyExcludedFromGeo",
		"buildNormals",
		"buildColors",
		"destroyVoxels",
		"createLabel",
		"fieldTxt",
		"className",
		"spanText",
		"fontSize",
		"strings",
		"spanNodeP",
		"spanNodeText",
		"LabelsGeometry",
		"items",
		"xTranslation",
		"yTranslation",
		"deltaPos",
		"userData",
		"translation",
		"textAlign",
		"fColor",
		"bColor",
		"background",
		"precision",
		"renderer",
		"capabilities",
		"getMaxPrecision",
		"noiseWidth",
		"noiseHeight",
		"_noiseData",
		"_noiseWrapS",
		"RepeatWrapping",
		"_noiseWrapT",
		"_noiseMinFilter",
		"NearestFilter",
		"_noiseMagFilter",
		"_noiseMapping",
		"noiseTexture",
		"RGBFormat",
		"_samplesKernel",
		"defaultUniforms",
		"UniformsUtils",
		"UniformsLib",
		"diffuse",
		"specular",
		"shininess",
		"zClipValue",
		"clipPlaneValue",
		"nearPlaneValue",
		"invModelViewMatrix",
		"world2colorMatrix",
		"dashedLineSize",
		"dashedLinePeriod",
		"projMatrixInv",
		"viewport",
		"samplesKernel",
		"noiseTex",
		"noiseTexelSize",
		"srcTexelSize",
		"uberOptionNames",
		"uberOptions",
		"zClipCoef",
		"noise",
		"toonShading",
		"UberMaterial",
		"instancedPos",
		"instancedMatrix",
		"attrColor",
		"attrColor2",
		"attrAlphaColor",
		"sphereSprite",
		"cylinderSprite",
		"fakeOpacity",
		"prepassTransparancy",
		"colorFromPos",
		"shadowmapType",
		"colorFromDepth",
		"orthoCam",
		"dashedLine",
		"thickLine",
		"fogTransparent",
		"normalsToGBuffer",
		"precisionString",
		"DoubleSide",
		"defines",
		"extensions",
		"inst",
		"USE_FOG",
		"INSTANCED_POS",
		"INSTANCED_MATRIX",
		"ATTR_COLOR",
		"ATTR_COLOR2",
		"ATTR_ALPHA_COLOR",
		"OVERRIDE_COLOR",
		"SPHERE_SPRITE",
		"fragDepth",
		"CYLINDER_SPRITE",
		"ZCLIP",
		"CLIP_PLANE",
		"FAKE_OPACITY",
		"USE_LIGHTS",
		"COLOR_FROM_POS",
		"SHADOWMAP_PCF_SHARP",
		"SHADOWMAP_PCF_RAND",
		"SHADOWMAP_BASIC",
		"COLOR_FROM_DEPTH",
		"ORTHOGRAPHIC_CAMERA",
		"PREPASS_TRANSP",
		"DASHED_LINE",
		"THICK_LINE",
		"FOG_TRANSPARENT",
		"drawBuffers",
		"NORMALS_TO_G_BUFFER",
		"TOON_SHADING",
		"shallow",
		"Material",
		"createInstance",
		"SuperClass",
		"NewObjectType",
		"rest",
		"onBeforeRender",
		"scene",
		"_onBeforeRender",
		"_update",
		"updateUniforms",
		"OurMesh",
		"UberObject",
		"ZSpriteMesh",
		"castShadow",
		"receiveShadow",
		"_geometry",
		"_group",
		"modelViewMatrix",
		"multiplyMatrices",
		"uniformsNeedUpdate",
		"ZClippedMesh",
		"modelView",
		"_modelView",
		"mvLength",
		"_mvLength",
		"setFromMatrixColumn",
		"localToWorld",
		"TextMesh",
		"initialized",
		"srcItem",
		"label",
		"visibility",
		"SimpleMesh",
		"_viewport",
		"ThickLineMesh",
		"projectionMatrix",
		"InstancedMesh",
		"ZClipped",
		"ZSprite",
		"Text",
		"Instanced",
		"setMatParams",
		"_createInstancedCylinders",
		"Geometry",
		"geometries",
		"meshes",
		"initMaterial",
		"_createLineSegmentsGeoTriplet",
		"renderParams",
		"thickLines",
		"_createSimpleGeoTriplet",
		"geoClass",
		"_createIsoSurfaceGeoTriplet",
		"caps",
		"surfaceOpts",
		"MeshCreator",
		"_caps",
		"_settings",
		"TransformGroup",
		"geoParams",
		"transforms",
		"_geoParams",
		"mat",
		"_transforms",
		"_createMeshes",
		"_ray",
		"inverseMatrix",
		"_inverseMatrix",
		"childIntersects",
		"ciCount",
		"geos",
		"meshCnt",
		"Ray",
		"wrapper",
		"ChemGroup",
		"selection",
		"_selection",
		"_mode",
		"_colorer",
		"_chunksIdc",
		"chunks",
		"_polyComplexity",
		"_geo",
		"_makeGeoArgs",
		"_mesh",
		"chunksList",
		"_calcChunksList",
		"setOpacity",
		"_changeSubsetOpacity",
		"AtomsGroup",
		"atomsIdc",
		"AtomsSphereGroup",
		"calcAtomRadius",
		"setColor",
		"getAtomColor",
		"updateColor",
		"needsColorUpdate",
		"AtomsSurfaceGroup",
		"selectedAtoms",
		"getSurfaceOpts",
		"AtomsSASSESGroupStub",
		"adjustColor",
		"inverseColor",
		"getAtomText",
		"getNode",
		"getVisualName",
		"colorMappings",
		"adjust",
		"inverse",
		"propagateColor",
		"rule",
		"startsWith",
		"templateMappings",
		"hetatm",
		"water",
		"parseTemplate",
		"AtomsTextGroup",
		"getLabelOpts",
		"fgColor",
		"bgColor",
		"_slerp",
		"omega",
		"oSin",
		"AromaticGroup",
		"radOffset",
		"addChunk",
		"chunksToIdx",
		"prevVector",
		"currVector",
		"segmentsHeight",
		"_segmentsHeight",
		"leprStep",
		"currAtomIdx",
		"cCount",
		"cycAtoms",
		"chunkPoints",
		"tmpDir",
		"cycleRad",
		"prevPos",
		"currPos",
		"upDir",
		"currAngle",
		"_createShape",
		"pts",
		"AromaticTorusGroup",
		"torusRad",
		"getAromRadius",
		"radiusV",
		"calcStickRadius",
		"lookAtVector",
		"mtc",
		"points",
		"currPoint",
		"AromaticLinesGroup",
		"getAromaticOffset",
		"prevPt",
		"getAromaticArcChunks",
		"ResiduesGroup",
		"chunksIdc",
		"resIdx",
		"NucleicItemGroup",
		"stickRad",
		"getResidueColor",
		"_processItem",
		"NucleicCylindersGroup",
		"cyl1",
		"cyl2",
		"NucleicSpheresGroup",
		"exports",
		"AbstractInterpolator",
		"CubicInterpolator",
		"Enum",
		"LinearInterpolator",
		"NearestInterpolator",
		"SincFilterInterpolator",
		"Smooth",
		"clipClamp",
		"clipMirror",
		"clipPeriodic",
		"defaultConfig",
		"getColumn",
		"isValidNumber",
		"makeLanczosWindow",
		"makeScaledFunction",
		"makeSincKernel",
		"normalizeScaleTo",
		"shallowCopy",
		"sinc",
		"validateNumber",
		"validateVector",
		"__hasProp",
		"__extends",
		"ctor",
		"__super__",
		"METHOD_NEAREST",
		"METHOD_LINEAR",
		"METHOD_CUBIC",
		"METHOD_LANCZOS",
		"METHOD_SINC",
		"CLIP_CLAMP",
		"CLIP_ZERO",
		"CLIP_PERIODIC",
		"CLIP_MIRROR",
		"CUBIC_TENSION_DEFAULT",
		"CUBIC_TENSION_CATMULL_ROM",
		"cubicTension",
		"clip",
		"scaleTo",
		"sincFilterSize",
		"sincWindow",
		"period",
		"config",
		"clipHelper",
		"clipHelperClamp",
		"clipHelperZero",
		"periodic",
		"clipHelperPeriodic",
		"mirror",
		"clipHelperMirror",
		"getClippedInput",
		"interpolate",
		"_super",
		"tangentFactor",
		"getTangent",
		"t2",
		"t3",
		"kernel",
		"sum",
		"_ref",
		"_ref2",
		"_i",
		"_len",
		"_results",
		"baseScale",
		"scaleRange",
		"isFinite",
		"dimension",
		"invalidErr",
		"baseDomainEnd",
		"interpolator",
		"interpolatorClass",
		"interpolators",
		"properties",
		"smoothFunc",
		"lanczosFilterSize",
		"nearest",
		"linear",
		"cubic",
		"lanczos",
		"_j",
		"_len2",
		"deepValidation",
		"_k",
		"_len3",
		"domain",
		"commonjsHelpers",
		"calcMatrix",
		"_buildStructureInterpolator",
		"argTrans",
		"transformT",
		"tt",
		"newt",
		"ans",
		"_addPoints",
		"centerPoints",
		"topPoints",
		"tp",
		"_addPointsForLoneResidue",
		"nucleic",
		"nameFrom",
		"nameTo",
		"posFrom",
		"posTo",
		"shift",
		"wing",
		"cpPrev",
		"tpPrev",
		"cpNext",
		"tpNext",
		"_calcPoints",
		"firstIdx",
		"_prevIdx",
		"_nextIdx",
		"arrIdx",
		"_extrapolate2",
		"otherIdx",
		"prevIdx",
		"nextIdx",
		"CartoonHelper",
		"startIdx",
		"endIdx",
		"pointsArrays",
		"_topInterp",
		"_centerInterp",
		"_shift",
		"_valueStep",
		"_segmentsCount",
		"firstRad",
		"secondRad",
		"mtcCount",
		"outMtc",
		"currRad",
		"topInterp",
		"cenInterp",
		"currentValue",
		"mtxIdx",
		"lerpVal",
		"currTop",
		"currCenter",
		"nextCenter",
		"_loopThrough",
		"subDiv",
		"subDivI",
		"subDivN",
		"idc",
		"matrixHelper",
		"prevLast",
		"prevSecondRad",
		"getResidueRadius",
		"prepareMatrices",
		"ResiduesSubseqGroup",
		"cmpMultiplier",
		"getHeightSegmentsRatio",
		"getTension",
		"chunkIdc",
		"subdivs",
		"ResiduesTraceGroup",
		"chunk",
		"getCylinderCount",
		"bondOrder",
		"BondsGroup",
		"drawMultiple",
		"drawMultiorderBonds",
		"showAromatic",
		"showAromaticLoops",
		"bondsIdc",
		"bondsCount",
		"getBondOrder",
		"bondIdx",
		"BondsCylinderGroup",
		"emptyOffset",
		"calcSpaceFraction",
		"normDir",
		"leftPos",
		"rightPos",
		"currBondIdx",
		"atom1",
		"atom2",
		"a1Pos",
		"a2Pos",
		"calcNormalDir",
		"minRad",
		"currStickRad",
		"STEP_SIZE",
		"BondsLinesGroup",
		"bondDir",
		"a1Hangs",
		"a2Hangs",
		"AtomsProcessor",
		"atomCount",
		"_checkAtom",
		"atomsGroup",
		"meshIdx",
		"chSubset",
		"subsetEl",
		"OrphanAtomsProcessor",
		"ResiduesProcessor",
		"ResidueGroup",
		"_checkResidue",
		"residuesGroup",
		"NucleicProcessor",
		"ResidueProcessor",
		"SubseqsProcessor",
		"getMaskedSubdivSequences",
		"jEnd",
		"BondsProcessor",
		"bondsGroup",
		"AromaticProcessor",
		"cycleIdx",
		"perCycle",
		"Atoms",
		"OrphanAtoms",
		"Residues",
		"Nucleic",
		"Subseqs",
		"Bonds",
		"Aromatic",
		"_bakeGroup",
		"triplet",
		"Processor",
		"GroupsFactory",
		"gfxTriplet",
		"createSpheres",
		"processors",
		"createCrosses",
		"create2CCylinders",
		"create2CLines",
		"createExtrudedChains",
		"create2CClosedCylinders",
		"createChunkedLines",
		"createQuickSurface",
		"createContactSurface",
		"createSASSES",
		"createLabels",
		"Mode",
		"groupList",
		"depGroups",
		"groupCount",
		"currGroup",
		"newGroup",
		"getRenderParams",
		"LinesMode",
		"shortName",
		"LicoriceMode",
		"BallsAndSticksMode",
		"VanDerWaalsMode",
		"TraceMode",
		"TubeMode",
		"_residue",
		"TUBE_RADIUS",
		"buildGeometry",
		"CartoonMode",
		"secCache",
		"getSecondary",
		"secOpts",
		"ARROW_END",
		"startRad",
		"getResidueStartRadius",
		"endRad",
		"getResidueEndRadius",
		"_res",
		"tubeRad",
		"secHeight",
		"secData",
		"SurfaceMode",
		"surfaces",
		"surfaceNames",
		"isSurface",
		"QuickSurfaceMode",
		"useBeads",
		"getVisibilitySelector",
		"IsoSurfaceMode",
		"_excludeProbe",
		"_radScale",
		"IsoSurfaceSASMode",
		"IsoSurfaceSESMode",
		"ContactSurfaceMode",
		"TextMode",
		"lerpColor",
		"beta",
		"g1",
		"b1",
		"g2",
		"b2",
		"Palette",
		"asIs",
		"elementColors",
		"defaultElementColor",
		"residueColors",
		"defaultResidueColor",
		"chainColors",
		"secondaryColors",
		"defaultSecondaryColor",
		"gradientName",
		"gradients",
		"defaultNamedColor",
		"namedColors",
		"minRangeColor",
		"midRangeColor",
		"maxRangeColor",
		"defaultGradientColor",
		"namedColorsArray",
		"rainbow",
		"temp",
		"hot",
		"cold",
		"reds",
		"blues",
		"H",
		"F",
		"P",
		"S",
		"CL",
		"FE",
		"NI",
		"CU",
		"BR",
		"HE",
		"LI",
		"BE",
		"B",
		"NE",
		"NA",
		"MG",
		"AL",
		"SI",
		"AR",
		"K",
		"SC",
		"TI",
		"V",
		"CR",
		"MN",
		"ZN",
		"GA",
		"GE",
		"AS",
		"KR",
		"RB",
		"SR",
		"Y",
		"ZR",
		"NB",
		"TC",
		"RU",
		"RH",
		"PD",
		"AG",
		"CD",
		"IN",
		"SN",
		"SB",
		"TE",
		"XE",
		"BA",
		"LA",
		"CE",
		"PR",
		"ND",
		"PM",
		"SM",
		"EU",
		"GD",
		"TB",
		"DY",
		"HO",
		"ER",
		"YB",
		"LU",
		"HF",
		"TA",
		"W",
		"RE",
		"OS",
		"IR",
		"PT",
		"AU",
		"HG",
		"TL",
		"PB",
		"BI",
		"PO",
		"AT",
		"RN",
		"FR",
		"RA",
		"AC",
		"TH",
		"PA",
		"NP",
		"PU",
		"AM",
		"CM",
		"BK",
		"CF",
		"ES",
		"FM",
		"MD",
		"NO",
		"LR",
		"RF",
		"DB",
		"BH",
		"HS",
		"MT",
		"palettes",
		"cpkPalette",
		"jmolPalette",
		"vmdPalette",
		"Colorer",
		"ElementColorer",
		"getElementColor",
		"ResidueTypeColorer",
		"SequenceColorer",
		"getGradientColor",
		"ChainColorer",
		"getChainColor",
		"SecondaryStructureColorer",
		"getSecondaryColor",
		"secondary",
		"UniformColorer",
		"ConditionalColorer",
		"parsed",
		"_subsetCached",
		"ConformationColorer",
		"TemperatureColorer",
		"OccupancyColorer",
		"_getColorByOccupancy",
		"HydrophobicityColorer",
		"hydrophobicity",
		"MoleculeColorer",
		"getMoleculeCount",
		"scaleColor",
		"CarbonColorer",
		"colorCarbon",
		"colorNotCarbon",
		"neutralColor",
		"intensity",
		"materialList",
		"_gatherObjects",
		"meshTypes",
		"createDerivativeMesh",
		"layer",
		"newMesh",
		"traverseMeshes",
		"func",
		"applyTransformsToMeshes",
		"processTransparentMaterial",
		"matValues",
		"prepassTranspMesh",
		"processColFromPosMaterial",
		"colFromPosMesh",
		"createShadowmapMaterial",
		"shadowmapMesh",
		"isShadowmapMesh",
		"removeShadowmapMaterial",
		"forEachMeshInGroup",
		"processObj",
		"_countMeshTriangles",
		"attribs",
		"property",
		"currAttr",
		"faces",
		"countTriangles",
		"totalCount",
		"Representation",
		"startMaterialValues",
		"selectorString",
		"materialPreset",
		"needsRebuild",
		"setMode",
		"markAtoms",
		"clearAtomBits",
		"selectionGeo",
		"meshutils",
		"sg",
		"matrixAutoUpdate",
		"repSettings",
		"selStr",
		"valueOf",
		"modeDiff",
		"identify",
		"colorerDiff",
		"newSelectorObject",
		"newSelector",
		"newMode",
		"newColorer",
		"newMaterial",
		"setMaterialPreset",
		"_traverseComponentGroups",
		"ComplexEditor",
		"ComplexComponentEditor",
		"complexVisual",
		"_complexVisual",
		"_inProgress",
		"_componentTransforms",
		"_bakeComponentTransform",
		"onAtomPositionChanged",
		"_resetComponentTransform",
		"finalizeEdit",
		"pivot",
		"visual",
		"getSelectedComponent",
		"getSelectionGeo",
		"selectionMask",
		"getSelectionBit",
		"reprNode",
		"bbmin",
		"bbmax",
		"updateMatrix",
		"ComplexFragmentEditor",
		"_getSelectionBorderAtoms",
		"_fragmentBoundAtoms",
		"pivotPos",
		"_fragmentGeo",
		"_fragmentSelectionGeo",
		"vg",
		"smeshes",
		"sm",
		"selectionBit",
		"makeTranslation",
		"_bakeAtomTransform",
		"boundAtoms",
		"transformDirection",
		"atomHash",
		"ComponentEditor",
		"FragmentEditor",
		"lookupAndCreate",
		"entityList",
		"specs",
		"Entity",
		"ComplexVisual",
		"_reprList",
		"_repr",
		"_reprListChanged",
		"_selectionBit",
		"_reprUsedBits",
		"_selectionCount",
		"_selectionGeometry",
		"release",
		"_editor",
		"repCurrent",
		"repAdd",
		"desc",
		"status",
		"change",
		"bits",
		"NUM_REPRESENTATION_BITS",
		"newSelectionBit",
		"_getFreeReprIdx",
		"originalSelection",
		"buildSelectorFromMask",
		"def",
		"unmarkAtoms",
		"hide",
		"show",
		"markAtomsAdditionally",
		"rebuildSelectionGeometry",
		"pickedObj",
		"otherObj",
		"getMolecule",
		"resetSelectionMask",
		"tmpMask",
		"deselectionMask",
		"multiple",
		"selRule",
		"reprList",
		"repr",
		"Promise",
		"resolve",
		"errorOccured",
		"setTimeout",
		"hasGeometry",
		"buildSelectionGeometry",
		"optimizeList",
		"NaN",
		"expression",
		"all",
		"or",
		"and",
		"residx",
		"_buildSelectorFromSortedLists",
		"editor",
		"ComplexVisualEdit",
		"needTraverse",
		"forEachAtomWithinDistFromMasked",
		"countAtomsByMask",
		"volumeUniforms",
		"volumeDim",
		"tileTex",
		"tileTexSize",
		"tileStride",
		"boxAngles",
		"_isoLevel0",
		"_flipV",
		"_BFLeft",
		"_BFRight",
		"_FFLeft",
		"_FFRight",
		"_WFFLeft",
		"_WFFRight",
		"overrideUniforms",
		"defUniforms",
		"facesPosMaterialParams",
		"sideType",
		"vertexVolumeFaces",
		"fragmentVolumeFaces",
		"BackFacePosMaterial",
		"backFaceParams",
		"BackSide",
		"ShaderMaterial",
		"ShaderParams",
		"FrontSide",
		"BackFacePosMaterialFarPlane",
		"matUniforms",
		"aspectRatio",
		"farZ",
		"tanHalfFOV",
		"matWorld2Volume",
		"shaderParams",
		"vertexFarPlane",
		"fragmentFarPlane",
		"FrontFacePosMaterial",
		"frontFaceParams",
		"VolumeMaterial",
		"vertexVolume",
		"fragmentVolume",
		"updateDefines",
		"ISO_MODE",
		"STEPS_COUNT",
		"VolumeMesh",
		"Plane",
		"cullFlag",
		"_corners",
		"edges",
		"_edges",
		"edgeIntersections",
		"_edgeIntersections",
		"constant",
		"vert",
		"cornerMark",
		"edgeMark",
		"curEdge",
		"curEdgeInter",
		"CheckX",
		"CheckY",
		"CheckZ",
		"curEdgeIdx",
		"curEdgeSource",
		"face",
		"nextVertex",
		"coplanarPoint",
		"faceIdx",
		"_collectVertices",
		"vRight",
		"vDir",
		"rightProj",
		"_sortIndices",
		"numIndices",
		"vm",
		"getTiledTextureStride",
		"buildTiledTexture",
		"getBox",
		"image",
		"getVolumeInfo",
		"volInfo",
		"obtuseAngle",
		"mean",
		"dmean",
		"dmin",
		"span",
		"dmax",
		"sd",
		"nearClipPlaneOffset",
		"_nearClipPlaneOffset",
		"_pos",
		"_norm",
		"norm4D",
		"_norm4D",
		"matrixWorldToLocal",
		"_matrixWorldToLocal",
		"_clipPlane",
		"_updateIsoLevel",
		"getWorldDirection",
		"getWorldPosition",
		"setFromNormalAndCoplanarPoint",
		"_updateVertices",
		"_updateIndices",
		"Vector4",
		"_flattenArray",
		"VolumeBounds",
		"bSize",
		"offsetVert",
		"_getBaseVertices",
		"flatVertices",
		"_lines",
		"LineBasicMaterial",
		"projTable",
		"_projectionTable",
		"proj",
		"inv",
		"currDelta",
		"angleValue",
		"XY",
		"XZ",
		"YZ",
		"VolumeFarPlane",
		"volume",
		"planeGeo",
		"_initPlaneGeo",
		"_plane",
		"frustumCulled",
		"doubleSided",
		"matWorldToVolume",
		"_renderer",
		"planeCamPos",
		"normalMatrix",
		"volumeMatrix",
		"DEG2RAD",
		"VolumeVisual",
		"setDataSource",
		"_frame",
		"getMesh",
		"showFrame",
		"_farPlane",
		"getBoundingSphere",
		"needShow",
		"LoaderList",
		"someLoaders",
		"SomeLoader",
		"canProbablyLoad",
		"Loader",
		"_source",
		"_options",
		"_abort",
		"_agent",
		"abort",
		"FileLoader",
		"_binary",
		"blob",
		"reader",
		"FileReader",
		"readAsArrayBuffer",
		"readAsText",
		"File",
		"urlStartRegexp",
		"XHRLoader",
		"request",
		"XMLHttpRequest",
		"response",
		"responseType",
		"send",
		"ImmediateLoader",
		"ParserList",
		"someParsers",
		"format",
		"formats",
		"SomeParser",
		"canProbablyParse",
		"parseSync",
		"model",
		"_parseHeader",
		"Remark290",
		"_matrix",
		"_matrixIndex",
		"stream",
		"readString",
		"matrixRow",
		"readCharCode",
		"matrixData",
		"matrixIndex",
		"parseFloat",
		"Remark350",
		"assemblies",
		"_assembly",
		"assembly",
		"addMatrix",
		"addChain",
		"PDBStream",
		"_start",
		"_nextCR",
		"_nextLF",
		"_next",
		"_end",
		"TAG_LENGTH",
		"nameToElement",
		"veryLong",
		"pdbStartRegexp",
		"remarkParsers",
		"PDBParser",
		"_serialAtomMap",
		"_modelId",
		"_compaundFound",
		"_biomoleculeFound",
		"_allowedChainsIDs",
		"_lastMolId",
		"_remarks",
		"_remark",
		"_compndCurrToken",
		"fileType",
		"_fixBondsArray",
		"_fixChains",
		"remark290",
		"isUndefined",
		"remark350",
		"chainDict",
		"chainObj",
		"idChainMap",
		"nj",
		"readInt",
		"readChar",
		"chainID",
		"resSeq",
		"readFloat",
		"Role",
		"serial0",
		"serial1",
		"serial2",
		"serial3",
		"serial4",
		"tokenIdx",
		"chainStr",
		"lastChar",
		"remarkNum",
		"remark",
		"RemarkParser",
		"fields",
		"_parseSTRUCTURE",
		"addHelix",
		"addSheet",
		"pars",
		"adder",
		"startId",
		"endId",
		"codeOfS",
		"serialNumber",
		"structureName",
		"helLength",
		"shWidth",
		"shCur",
		"shPrev",
		"startChainID",
		"endChainID",
		"startSequenceNumber",
		"iCodeStr",
		"startICode",
		"endSequenceNumber",
		"endICode",
		"cs",
		"classification",
		"date",
		"title",
		"tagParsers",
		"HEADER",
		"_parseHEADER",
		"_parseTITLE",
		"_parseATOM",
		"HETATM",
		"ENDMDL",
		"_parseENDMDL",
		"CONECT",
		"_parseCONECT",
		"COMPND",
		"_parseCOMPND",
		"REMARK",
		"_parseREMARK",
		"_parseHELIX",
		"_parseSHEET",
		"cOrderCharCodes",
		"cmlStartRegexp",
		"CMLParser",
		"_readOnlyOneMolecule",
		"atomId",
		"countBonds",
		"idxs",
		"atomRefs2",
		"moleculeArr",
		"fieldData",
		"atomRefs",
		"placement",
		"fieldName",
		"_extractSGroup",
		"_createSGroup",
		"firstAtomRef",
		"sgroupRef",
		"mapEntry",
		"cycleFuncInner",
		"cycleFunc",
		"x2",
		"x3",
		"y2",
		"y3",
		"z3",
		"atomsRef",
		"dom",
		"parseNode",
		"xmlNode",
		"nodeName",
		"nodeValue",
		"jsonNode",
		"existing",
		"childNodes",
		"molSet",
		"atomArray",
		"_findSuitableMolecule",
		"DOMParser",
		"doc",
		"parseFromString",
		"traversedData",
		"_traverseData",
		"rawData",
		"prepareComponentCompound",
		"ret",
		"atomLabels",
		"labelsCount",
		"_extractSGroups",
		"localBond",
		"bondArray",
		"_rebuidBondIndexes",
		"addCurrBond",
		"orderAttr",
		"tc",
		"labels",
		"_breadWidthSearch",
		"retStruct",
		"originalCML",
		"cml",
		"retData",
		"filteredData",
		"rd",
		"compId",
		"molId",
		"molID",
		"_packLabel",
		"breadthQueue",
		"componentID",
		"labeledAtoms",
		"startID",
		"_unpackLabel",
		"eAtom",
		"mainAtom",
		"varData",
		"currentLabel",
		"addFunc",
		"complexAtom",
		"reorder",
		"atomCharge",
		"lLabel",
		"atomFullNameStruct",
		"elementType",
		"countRef",
		"currAtomComp",
		"strLabel",
		"JSON",
		"stringify",
		"atomSerial",
		"added",
		"mrvValence",
		"_parseBond",
		"getSGroupCount",
		"sGrp",
		"getSGroups",
		"moleculaSet",
		"_selectComponents",
		"_parseSet",
		"totalAtomsParsed",
		"joinedComplex",
		"joinComplexes",
		"module",
		"setUint8",
		"setUint16",
		"setUint32",
		"setFloat64",
		"setInt8",
		"setInt16",
		"setInt32",
		"ArrayBuffer",
		"DataView",
		"byteOffset",
		"Int8Array",
		"Int16Array",
		"L",
		"setFloat32",
		"getFloat32",
		"M",
		"E",
		"getInt32",
		"q",
		"R",
		"rr",
		"bondAtomList",
		"bondOrderList",
		"xCoordList",
		"yCoordList",
		"zCoordList",
		"bFactorList",
		"atomIdList",
		"altLocList",
		"occupancyList",
		"groupIdList",
		"groupTypeList",
		"secStructList",
		"insCodeList",
		"sequenceIndexList",
		"chainIdList",
		"chainNameList",
		"getInt8",
		"getUint8",
		"getUint16",
		"getUint32",
		"getFloat64",
		"getInt16",
		"X",
		"ignoreFields",
		"nr",
		"J",
		"firstModelOnly",
		"onModel",
		"onChain",
		"onGroup",
		"onAtom",
		"onBond",
		"chainsPerModel",
		"chainCount",
		"modelIndex",
		"groupsPerChain",
		"chainIndex",
		"atomNameList",
		"groupIndex",
		"groupId",
		"groupType",
		"groupName",
		"singleLetterCode",
		"chemCompType",
		"secStruct",
		"sequenceIndex",
		"elementList",
		"formalCharge",
		"formalChargeList",
		"xCoord",
		"yCoord",
		"zCoord",
		"bFactor",
		"atomIndex1",
		"atomIndex2",
		"Q",
		"Z",
		"_",
		"tr",
		"er",
		"ir",
		"decode",
		"fetch",
		"fetchReduced",
		"version",
		"fetchUrl",
		"fetchReducedUrl",
		"encodeMsgpack",
		"encodeMmtf",
		"decodeMsgpack",
		"decodeMmtf",
		"mmtfModule",
		"mmtf",
		"ArrayComparator",
		"original",
		"_original",
		"_sum",
		"candidate",
		"sorted",
		"secStructToType",
		"getFirstByte",
		"buf",
		"MMTFParser",
		"_modelData",
		"chainData",
		"groupData",
		"_updateSecStructure",
		"atomData",
		"bondData",
		"helixClasses",
		"_ssType",
		"_ssStruct",
		"_ssStart",
		"struct",
		"mmtfData",
		"chainsInModel0",
		"chainIndexList",
		"description",
		"structureId",
		"releaseDate",
		"eventCallbacks",
		"modelData",
		"_onModel",
		"_onChain",
		"_onGroup",
		"_onAtom",
		"_onBond",
		"MMTF",
		"_updateMolecules",
		"named",
		"bioAssemblyList",
		"baInfo",
		"transformList",
		"chainListCheck",
		"chainNames",
		"allChains",
		"_chainsByName",
		"compare",
		"transpose",
		"transform",
		"primaryChainsArray",
		"primaryChainsHash",
		"primary",
		"_traverse",
		"_linkAtomsToResidues",
		"_markHeteroAtoms",
		"_findSynonymousChains",
		"_parseAssemblyInfo",
		"_joinSynonymousChains",
		"isArrayBuffer",
		"ParsingError",
		"column",
		"captureStackTrace",
		"parseLine",
		"parseColumn",
		"_isWhitespace",
		"_inlineIndexOf",
		"ch0",
		"readCIF",
		"newline",
		"block",
		"keysCount",
		"valuesCount",
		"_parseValue",
		"_storeKey",
		"_storeValue",
		"keyIndex",
		"cRequiredAtomFields",
		"cSecondaryCoding",
		"helx",
		"turn",
		"strn",
		"getTypeFromId",
		"typeId",
		"arrize",
		"arrayLikeObject",
		"AtomDataError",
		"_getOperations",
		"operList",
		"vector",
		"ops",
		"_extractOperations",
		"assemblyGen",
		"opsDict",
		"groupStr",
		"gps",
		"grIdx",
		"grCount",
		"gr",
		"gp",
		"es",
		"cnt",
		"ii",
		"nn",
		"newMtx",
		"CIFParser",
		"asymDict",
		"_toComplex",
		"cifData",
		"complexData",
		"_extractAtoms",
		"_extractSecondary",
		"_extractAssemblies",
		"_extractMolecules",
		"_extractMetadata",
		"struct_keywords",
		"pdbx_keywords",
		"databaserev",
		"database_PDB_rev",
		"date_original",
		"molData",
		"pdbx_description",
		"getMolecules",
		"atom_site",
		"auth_seq_id",
		"Cartn_x",
		"Cartn_y",
		"Cartn_z",
		"label_atom_id",
		"group_PDB",
		"chainIdc",
		"auth_asym_id",
		"chainLabelIdc",
		"label_asym_id",
		"serials",
		"iCodes",
		"pdbx_PDB_ins_code",
		"resNames",
		"label_comp_id",
		"type_symbol",
		"tempFactors",
		"B_iso_or_equiv",
		"occupancies",
		"charges",
		"pdbx_formal_charge",
		"altLocs",
		"label_alt_id",
		"models",
		"pdbx_PDB_model_num",
		"label_entity_id",
		"moleculeIdx",
		"struct_conf",
		"_extractConfs",
		"struct_sheet_range",
		"_extractSheets",
		"sheetData",
		"sheet_id",
		"beg_label_seq_id",
		"end_label_seq_id",
		"beg_label_asym_id",
		"sheetNames",
		"strandNames",
		"starts",
		"beg_auth_seq_id",
		"ends",
		"end_auth_seq_id",
		"stICodes",
		"pdbx_beg_PDB_ins_code",
		"endICodes",
		"pdbx_end_PDB_ins_code",
		"findResidue",
		"helicesData",
		"conf_type_id",
		"comments",
		"details",
		"lengths",
		"pdbx_PDB_helix_length",
		"pdbx_PDB_helix_class",
		"asmGen",
		"pdbx_struct_assembly_gen",
		"asmIdx",
		"assembly_id",
		"asmOper",
		"oper_expression",
		"asmList",
		"asym_id_list",
		"pdbx_struct_oper_list",
		"asm",
		"assemblyOps",
		"valueType",
		"singular",
		"VolumeModel",
		"_header",
		"_boxSize",
		"_boxStart",
		"extent",
		"nstart",
		"crs2xyz",
		"cellDims",
		"angles",
		"isTypedArray",
		"_buff",
		"TypeError",
		"headerFormat",
		"arrays",
		"_parseArray",
		"_parseVector",
		"_buffer",
		"header",
		"gamma",
		"z1",
		"z2",
		"xaxis",
		"yaxis",
		"zaxis",
		"_xyz2crs",
		"shiftX",
		"shiftY",
		"_setOrigins",
		"_getXYZdim",
		"_getXYZbox",
		"_toXYZData",
		"_getVolumeInfo",
		"CCP4Header",
		"ispg",
		"nsymbt",
		"lksflg",
		"customData",
		"machine",
		"nlabel",
		"Ccp4Model",
		"_typedCheck",
		"u32",
		"i32",
		"f32",
		"_fillHeader",
		"xyz2crs",
		"_getAxis",
		"_setAxisIndices",
		"_setBoxParams",
		"xyzData",
		"crsIdx",
		"CCP4Parser",
		"XYZParser",
		"_atomsInf",
		"_fileName",
		"endnAtoms",
		"endComment",
		"startAtomsInf",
		"words",
		"_parseToAtomsInf",
		"_parseAtomsInf",
		"PubChemParser",
		"jsonData",
		"PC_Compounds",
		"aids",
		"aid",
		"fromPairs",
		"zip",
		"coords",
		"conformers",
		"aids1",
		"aid1",
		"aids2",
		"aid2",
		"orders",
		"SDFStream",
		"_strings",
		"_currentStart",
		"_currentStringIndx",
		"numb",
		"curStr",
		"getNextString",
		"getCurrentString",
		"setStart",
		"probablyHaveDataToParse",
		"chargeMap",
		"orderMap",
		"typeMap",
		"sdfAndMolRegexp",
		"sdfRegExp",
		"fileFormat",
		"SDF",
		"MOL",
		"possibleNameTags",
		"possibleIDTags",
		"possibleTitleTags",
		"tagsNames",
		"tags",
		"buildChainID",
		"codes",
		"trunc",
		"reverse",
		"SDFParser",
		"_format",
		"_metadata",
		"_currentMolProps",
		"_compoundIndx",
		"_assemblies",
		"_atomsParsed",
		"_atomsIndexes",
		"getStringFromStart",
		"bondsNum",
		"bondType",
		"countsLine",
		"_parseAtoms",
		"_parseBonds",
		"_parseMOL",
		"findNextDataItem",
		"_parseDataItem",
		"props",
		"_tryToUpdateMoleculeData",
		"tagsList",
		"_searchTag",
		"tagPossibleNames",
		"_tryToFind",
		"_finalizeMetadata",
		"_buildAssemblies",
		"_buildMolecules",
		"defineFormat",
		"_parseCompound",
		"findNextCompoundStart",
		"DSN6Header",
		"div",
		"DSN6Model",
		"i16",
		"byteBuffer",
		"counter",
		"zBlock",
		"yBlock",
		"xBlock",
		"inRange",
		"_pointCalculate",
		"blocks",
		"_blockCalculate",
		"_calculateInfoParams",
		"dispersion",
		"minDensity",
		"maxDensity",
		"DSN6Parser",
		"checkDataTypeOptions",
		"GROReader",
		"GROParser",
		"_time",
		"_residueNumber",
		"_residueName",
		"_atomName",
		"_atomNumber",
		"_atomPosition",
		"_atomVelocity",
		"filetype",
		"readLine",
		"getNext",
		"positionX",
		"positionY",
		"positionZ",
		"_parseTitle",
		"_parseNumberOfAtoms",
		"_parseAtom",
		"un",
		"am",
		"nc",
		"du",
		"resNumberRegex",
		"spacesRegex",
		"splitToFields",
		"MOL2Parser",
		"_currPosIdx",
		"_currStartIdx",
		"MOL2Data",
		"newPosIdx",
		"_toStringFromStart",
		"_toHeaderString",
		"_setStart",
		"_probablyHaveDataToParse",
		"parsedStr",
		"_setResidue",
		"originAtomId",
		"targetAtomId",
		"currMolecule",
		"molResidues",
		"_fixSerialAtoms",
		"_parseMolecule",
		"_toStringFromHeader",
		"_parseRawStrings",
		"_findNextCompoundStart",
		"ExporterList",
		"someExporters",
		"Exporter",
		"exportSync",
		"PDBResult",
		"_resultArray",
		"_currentStr",
		"_tag",
		"_fixedNumeration",
		"_numeration",
		"_tagStrNum",
		"writeString",
		"numeration",
		"isBoolean",
		"maxStrPos",
		"_currentStrLength",
		"newString",
		"curStrLength",
		"finish",
		"repeat",
		"cStr",
		"bondsArrays",
		"_getSubArrays",
		"subArraySize",
		"subArrays",
		"matrixIndx",
		"toFixed",
		"writeMatrix",
		"PDBExporter",
		"_tags",
		"_result",
		"_tagExtractors",
		"_extractHEADER",
		"TITLE",
		"_extractTITLE",
		"_extractATOM",
		"_extractCONECT",
		"_extractCOMPND",
		"_extractREMARK",
		"_extractHELIX",
		"SHEET",
		"_extractSHEET",
		"_stringForRemark350",
		"_stringForRemark290",
		"getResult",
		"newTag",
		"fixedBonds",
		"writeBondsArray",
		"strands",
		"startIndx",
		"_getMoleculeChains",
		"chainsString",
		"writeEntireString",
		"_Remark290",
		"_Remark350",
		"writeMatrices",
		"biomolIndx",
		"getChainName",
		"SourceClass",
		"FBX_POS_SIZE",
		"FBX_NORM_SIZE",
		"FBX_COL_SIZE",
		"copyFbxPoint3",
		"srcIdx",
		"dstIdx",
		"copyFbxPoint4",
		"vector4",
		"copyTransformedPoint3",
		"setSubArray",
		"copyFunctor",
		"functorOpts",
		"arridx",
		"FBXModel",
		"lastPos",
		"lastNorm",
		"lastCol",
		"vertsCount",
		"indsCount",
		"shifted",
		"setIndices",
		"currentCount",
		"getVerticesNumber",
		"setShiftedIndices",
		"setTransformedPositions",
		"setTransformedNormals",
		"FBXGeometry",
		"_info",
		"FBX1CGeometry",
		"cl",
		"FBX2CCylinder",
		"_cutRawStart",
		"_cutRawEnd",
		"_facesPerSlice",
		"addPerCylinder",
		"_extendVertices",
		"_extendIndices",
		"getGeoParams",
		"cutRaw",
		"indicesPerQuad",
		"startToShift",
		"colorSize",
		"part1End",
		"part2End",
		"_setColorRange",
		"capSize",
		"cap1End",
		"cap2End",
		"FBXInfoExtractor",
		"_materials",
		"_models",
		"_extractModelsAndMaterials",
		"_flattenModels",
		"layersOfInterest",
		"Layers",
		"checkExportAbility",
		"_collectInstancedGeoInfo",
		"_collectGeoInfo",
		"faceSize",
		"overallVertsCount",
		"combined",
		"_reworkIndices",
		"verticesCount",
		"vertCount",
		"setPositions",
		"setNormals",
		"_collectMaterialInfo",
		"_addToPool",
		"instCount",
		"instMatrix",
		"objMatrix",
		"sphereColor",
		"instanceIndex",
		"_getSphereInstanceMatrix",
		"addInstance",
		"oneCCylinder",
		"splittingInfo",
		"_gatherCylindersColoringInfo",
		"twoCCylinder",
		"needToSplit",
		"additionalVertsCount",
		"colorStart",
		"colorEnd",
		"is2Colored",
		"_getCylinderInstanceMatrix",
		"materialIdx",
		"_checkExistingMaterial",
		"findIndex",
		"differs",
		"_collectSpheresInfo",
		"_collectCylindersInfo",
		"instIdx",
		"matVector1",
		"matVector2",
		"matVector3",
		"idxOffset",
		"defaultDefinitions",
		"defaultProperties",
		"defaultMaterialLayer",
		"defaultLayerBlock",
		"globalSettings",
		"FBXResult",
		"_writeHeader",
		"_writeDefinitions",
		"_writeObjects",
		"_writeRelations",
		"_writeConnections",
		"FBXHeaderVersion",
		"FBXVersion",
		"timeStampVersion",
		"creator",
		"getFullYear",
		"getMonth",
		"getDate",
		"getHours",
		"getMinutes",
		"getSeconds",
		"getMilliseconds",
		"modelVersion",
		"allModels",
		"_verticesIndices",
		"_normalLayer",
		"_colorLayer",
		"materialVersion",
		"allMaterials",
		"_materialProperties",
		"modelsList",
		"colorArray",
		"layerElementColorNumber",
		"layerElementColorVersion",
		"layerElementColorName",
		"colorsStr",
		"_floatArrayToString",
		"colorIndices",
		"normalArray",
		"layerElementNormalNumber",
		"layerElementNormalVersion",
		"layerElementNormalName",
		"normalsStr",
		"multiLayer",
		"multiTake",
		"shading",
		"culling",
		"geometryVersion",
		"vertStr",
		"FBXExporter",
		"_version",
		"miewVersion",
		"_extractor",
		"loaders",
		"parsers",
		"exporters",
		"tempColor",
		"CSS2DRenderer",
		"_height",
		"_widthHalf",
		"_heightHalf",
		"_vector",
		"_viewMatrix",
		"_projectionMatrix",
		"_domElement",
		"overflow",
		"zIndex",
		"pointerEvents",
		"myNode",
		"firstChild",
		"lerpColorAsHex",
		"setHex",
		"getHexString",
		"colorAsHex",
		"setFromMatrixPosition",
		"localOffset",
		"getMaxScaleOnAxis",
		"fogFactor",
		"smoothstep",
		"WebkitTransform",
		"MozTransform",
		"oTransform",
		"_renderObject",
		"VK_LEFT",
		"VK_UP",
		"VK_RIGHT",
		"VK_DOWN",
		"STATE",
		"NONE",
		"ROTATE",
		"TRANSLATE",
		"SCALE",
		"TRANSLATE_PIVOT",
		"FULL_STOP_THRESHOLD",
		"Quaternion",
		"matrix4",
		"ObjectHandler",
		"lastRotation",
		"_rotate",
		"quat",
		"zeroPivot",
		"makeRotationFromQuaternion",
		"setObjects",
		"rotate",
		"rot",
		"mousePrevPos",
		"mouseCurPos",
		"aboutAxis",
		"mouse2rotation",
		"setFromAxisAngle",
		"translate",
		"translateOnAxis",
		"timeSinceLastUpdate",
		"timeSinceMove",
		"intertia",
		"dynamicDampingFactor",
		"intertiaThreshold",
		"stop",
		"eyeDirection",
		"cameraUpDirection",
		"cameraSidewaysDirection",
		"moveDirection",
		"mouseDelta",
		"mousePrev",
		"mouseCur",
		"axisRotateFactor",
		"setLength",
		"rotateFactor",
		"ObjectControls",
		"objectPivot",
		"getAltObj",
		"hotkeysEnabled",
		"screen",
		"_state",
		"_mousePrevPos",
		"_mouseCurPos",
		"_mainObj",
		"_altObj",
		"_affectedObj",
		"_isAltObjFreeRotationAllowed",
		"_isTranslationAllowed",
		"_isKeysTranslatingObj",
		"_pressedKeys",
		"_clock",
		"_lastUpdateTime",
		"_listeners",
		"mousedown",
		"mouseup",
		"mousemove",
		"mousewheel",
		"touchstartend",
		"touchmove",
		"getKeyBindObject",
		"keydownup",
		"handleResize",
		"resetKeys",
		"contextmenu",
		"stopPropagation",
		"preventDefault",
		"innerWidth",
		"innerHeight",
		"getBoundingClientRect",
		"ownerDocument",
		"documentElement",
		"pageXOffset",
		"clientLeft",
		"pageYOffset",
		"clientTop",
		"enableHotkeys",
		"allowTranslation",
		"allow",
		"allowAltObjFreeRotation",
		"keysTranslateObj",
		"isEditingAltObj",
		"convertMouseToOnCircle",
		"pageX",
		"pageY",
		"screenSize",
		"convertMouseToViewport",
		"rotateByMouse",
		"aboutZAxis",
		"getOrientation",
		"setOrientation",
		"getScale",
		"setScale",
		"curTime",
		"_lastMouseMoveTime",
		"speedX",
		"speedY",
		"altObj",
		"button",
		"workWithAltObj",
		"altKey",
		"ctrlKey",
		"shiftKey",
		"translatePivotByMouse",
		"wheelDelta",
		"detail",
		"touches",
		"_touchDistanceCur",
		"_touchDistanceStart",
		"_scaleStart",
		"newScale",
		"keyCode",
		"translatePivotInWorld",
		"setX",
		"setY",
		"setZ",
		"translatePivot",
		"setPivot",
		"newPivot",
		"Picker",
		"_lastMousePos",
		"_mouseTotalDist",
		"_lastClickBeginTime",
		"_lastClickPos",
		"_clickBeginTime",
		"touchstart",
		"touchend",
		"picked",
		"pickObject",
		"screenPos",
		"rayCaster",
		"unproject",
		"fogFarValue",
		"getMouseInViewport",
		"curPos",
		"timeSinceLastClickBegin",
		"clickDist",
		"_lastTouchdownPos",
		"changedTouches",
		"Axes",
		"targetCamera",
		"_target",
		"_targetCamera",
		"_object",
		"AxesHelper",
		"_full",
		"autoClear",
		"setViewport",
		"clear",
		"cDataOffset",
		"cFirstMask",
		"cFirstShift",
		"cSecMask1",
		"cSecShift1",
		"cSecMask2",
		"cSecShift2",
		"cThirdMask",
		"cStrMask",
		"cStrShift",
		"c219",
		"c220",
		"cHelixIdx",
		"cSheetIdx",
		"secTypes",
		"cSecNames",
		"_createSecondary",
		"strArray",
		"nRes",
		"resid",
		"rIdx",
		"fromUInt20ToInt20",
		"uint20",
		"FrameInfo",
		"payload",
		"callbacks",
		"isLoading",
		"_framesRange",
		"frameIsReady",
		"_frameRequest",
		"_callbacks",
		"_framesRequestLength",
		"_downloadDataFn",
		"parseBinaryData",
		"setFrame",
		"framesStart",
		"framesEnd",
		"_framesCount",
		"onDone",
		"onLoadStatusChanged",
		"onFail",
		"onError",
		"_bufferRequestStart",
		"_prepareBuffer",
		"arrayBuffer",
		"dataView",
		"atomsCount",
		"framesCount",
		"_atomsCount",
		"maxSize",
		"chunkedFramesCount",
		"timeStep",
		"iName",
		"_timeStep",
		"posData",
		"coordIdx",
		"secondaryArr",
		"hiWord",
		"loWord",
		"_secondaryData",
		"_currFrame",
		"myResidues",
		"sec",
		"oldSec",
		"nSec",
		"compRes",
		"getSec",
		"frameIdx",
		"_cachedResidues",
		"_updateSecondary",
		"_parseBuffer",
		"vec",
		"_vec",
		"SceneObject",
		"paramsStr",
		"LinesObj",
		"_id1",
		"_id2",
		"err",
		"getAtomByFullname",
		"_atom1",
		"_getAtomFromName",
		"_atom2",
		"_line",
		"computeLineDistances",
		"_raycaster",
		"_intersects",
		"verticesNeedUpdate",
		"OutlineMaterial",
		"srcDepthTex",
		"srcTexSize",
		"DEPTH_OUTLINE",
		"FXAAMaterial",
		"bgTransparent",
		"BG_TRANSPARENT",
		"AOMaterial",
		"diffuseTexture",
		"normalTexture",
		"depthTexture",
		"camNearFar",
		"projMatrix",
		"kernelRadius",
		"depthThreshold",
		"_kernelOffsets",
		"AOHorBlurMaterial",
		"aoMap",
		"samplesOffsets",
		"AOVertBlurWithBlendMaterial",
		"fogNearFar",
		"useFog",
		"AnaglyphMaterial",
		"srcL",
		"srcR",
		"View",
		"orientation",
		"_transitionTime",
		"ViewInterpolator",
		"startView",
		"endView",
		"_endTime",
		"_isPaused",
		"_srcView",
		"_dstView",
		"_isMoving",
		"transTime",
		"wasStarted",
		"success",
		"createView",
		"slerp",
		"setup",
		"getCurrentView",
		"MAX_COOKIE_LEN",
		"COUNT_SUFFIX",
		"_chunkString",
		"chunkLen",
		"lc",
		"Cookies",
		"removeCookie",
		"cntKey",
		"_toCount",
		"cntVal",
		"_getSimpleCookie",
		"_removeSimpleCookie",
		"setCookie",
		"_setSimpleCookie",
		"getCookie",
		"cookie",
		"_getExpirationDate",
		"today",
		"EXP_PERIOD_YEARS",
		"setFullYear",
		"toUTCString",
		"_exists",
		"webVRPoC",
		"showEnterVR",
		"cursor",
		"currentSession",
		"onSessionEnded",
		"onSessionStarted",
		"session",
		"_gfx",
		"xr",
		"setReferenceSpaceType",
		"setSession",
		"onmouseenter",
		"onmouseleave",
		"onclick",
		"sessionInit",
		"optionalFeatures",
		"requestSession",
		"then",
		"moveSceneBehindHeadset",
		"showWebXRNotFound",
		"stylizeElement",
		"bottom",
		"padding",
		"border",
		"borderRadius",
		"font",
		"isSessionSupported",
		"supported",
		"textDecoration",
		"WebVRPoC",
		"onToggle",
		"_mainCamera",
		"_button",
		"_onToggle",
		"_molContainer",
		"_user",
		"_scalingPivot",
		"_controller1",
		"_controller2",
		"_pressedGripsCounter",
		"_distance",
		"startScalingByControllers",
		"stopScalingByControllers",
		"anotherController",
		"gfx",
		"createWebVRButton",
		"_mainFog",
		"_plugVRNodesIntoScene",
		"_setControllersListeners",
		"getController",
		"_createControllerMesh",
		"handleGripsDown",
		"handleGripsUp",
		"setAnimationLoop",
		"getSession",
		"_unplugVRNodesFromScene",
		"CylinderGeometry",
		"cylinder",
		"rotateX",
		"scaler",
		"container",
		"EDIT_MODE",
		"COMPLEX",
		"COMPONENT",
		"FRAGMENT",
		"LOADER_NOT_FOUND",
		"PARSER_NOT_FOUND",
		"updateFogRange",
		"removeExtension",
		"hasValidResidues",
		"hasValidRes",
		"reportProgress",
		"percent",
		"TOTAL_PERCENT",
		"chooseFogColor",
		"_setContainerContents",
		"arezSpritesSupported",
		"getExtension",
		"isAOSupported",
		"rePdbId",
		"rePubchem",
		"reUrlScheme",
		"resolveSourceShortcut",
		"matchesPdbId",
		"sourceType",
		"matchesPubchem",
		"compound",
		"updateBinaryMode",
		"TheParser",
		"head",
		"io",
		"fileExt",
		"animation",
		"_fetchData",
		"job",
		"shouldCancel",
		"notify",
		"TheLoader",
		"extractName",
		"newOptions",
		"keyCount",
		"loader",
		"lengthComputable",
		"total",
		"loaded",
		"promise",
		"catch",
		"_parseData",
		"dataSet",
		"_includesInCurSelection",
		"_includesInSelector",
		"Miew",
		"settingsCookie",
		"cookiePath",
		"_interpolator",
		"_container",
		"getElementById",
		"getElementsByClassName",
		"_containerRoot",
		"_running",
		"_halting",
		"_building",
		"_needRender",
		"_hotKeysEnabled",
		"_cookies",
		"restoreSettings",
		"_spinner",
		"_loading",
		"_animInterval",
		"_visuals",
		"_curVisualName",
		"_sourceWindow",
		"registeredPlugins",
		"_initOnSettingsChanged",
		"shadowMatrix",
		"OBB",
		"halfSize",
		"_bSphereForOneVisual",
		"_bBoxForOneVisual",
		"_bBox",
		"_invMatrix",
		"_points",
		"_anaglyphMat",
		"_size",
		"aberration",
		"fragmentScreenQuadFromDistTex",
		"_outlineMaterial",
		"minFilter",
		"magFilter",
		"RGBAFormat",
		"light",
		"getOBB",
		"class",
		"frag",
		"createDocumentFragment",
		"_msgMode",
		"_msgAtomInfo",
		"_showMessage",
		"_initGfx",
		"_initListeners",
		"Spinner",
		"_onKeyDown",
		"_onKeyUp",
		"_objectControls",
		"_getAltObj",
		"_updateShadowCamera",
		"_picker",
		"_onPick",
		"file",
		"keepRepsInfo",
		"cancel",
		"halt",
		"msg",
		"requestAnimationFrame",
		"clientWidth",
		"clientHeight",
		"webGLOptions",
		"preserveDrawingBuffer",
		"premultipliedAlpha",
		"renderer2d",
		"WebGL1Renderer",
		"shadowMap",
		"autoUpdate",
		"PCFShadowMap",
		"getContext",
		"setPixelRatio",
		"devicePixelRatio",
		"setSize",
		"setClearColor",
		"clearColor",
		"stereoCam",
		"Fog",
		"selectionScene",
		"selectionRoot",
		"selectionPivot",
		"light12",
		"DirectionalLight",
		"pixelRatio",
		"getPixelRatio",
		"shadowMapSize",
		"mapSize",
		"light3",
		"AmbientLight",
		"deviceWidth",
		"deviceHeight",
		"offscreenBuf",
		"WebGLRenderTarget",
		"depthBuffer",
		"DepthTexture",
		"UnsignedShortType",
		"offscreenBuf2",
		"offscreenBuf3",
		"offscreenBuf4",
		"volBFTex",
		"volFFTex",
		"volWFFTex",
		"offscreenBuf5",
		"FloatType",
		"offscreenBuf6",
		"offscreenBuf7",
		"stereoBufL",
		"stereoBufR",
		"_showCanvas",
		"_embedWebXR",
		"stats",
		"_fps",
		"_onResize",
		"baseName",
		"random",
		"suffix",
		"_makeUniqueVisualName",
		"any",
		"_forEachComplexVisual",
		"_forEachVisual",
		"resume",
		"_requestAnimationFrame",
		"_onTick",
		"_discardComponentEdit",
		"_discardFragmentEdit",
		"pause",
		"isAnaglyph",
		"multi",
		"_onUpdate",
		"_onRender",
		"union",
		"_setUberMaterialValues",
		"_getBSphereRadius",
		"isScriptingCommandAvailable",
		"callNextCmd",
		"_needRebuild",
		"rebuild",
		"_updateView",
		"_updateFog",
		"webVR",
		"updateMoleculeScale",
		"_clipPlaneUpdateValue",
		"_fogFarUpdateValue",
		"setRenderTarget",
		"_renderFrame",
		"focus",
		"_resizeOffscreenBuffers",
		"_renderShadowMap",
		"_renderScene",
		"setScissorTest",
		"setScissor",
		"cameraL",
		"cameraR",
		"renderBuffer",
		"textureBuffer",
		"gl",
		"drawBuffersWEBGL",
		"COLOR_ATTACHMENT0",
		"tx8",
		"__webglTexture",
		"bindTexture",
		"TEXTURE_2D",
		"fb",
		"__webglFramebuffer",
		"bindFramebuffer",
		"FRAMEBUFFER",
		"framebufferTexture2D",
		"COLOR_ATTACHMENT1_WEBGL",
		"distortion",
		"bHaveComplexes",
		"_getComplexVisual",
		"volumeVisual",
		"_getVolumeVisual",
		"ssao",
		"_enableMRT",
		"_renderWithPrepassTransparency",
		"dstBuffer",
		"srcBuffer",
		"_performAO",
		"_renderOutline",
		"_renderSelection",
		"_renderVolume",
		"_performFXAA",
		"_performDistortion",
		"targetBuffer",
		"srcDepthBuffer",
		"srcColorBuffer",
		"currentRenderTarget",
		"getRenderTarget",
		"activeCubeFace",
		"getActiveCubeFace",
		"activeMipmapLevel",
		"getActiveMipmapLevel",
		"setBlending",
		"NoBlending",
		"buffers",
		"setClear",
		"setTest",
		"updateMatrices",
		"selPivot",
		"selPivotChild",
		"_hasSelectionToRender",
		"renderTarget",
		"oldRT",
		"checkFramebufferStatus",
		"FRAMEBUFFER_COMPLETE",
		"dstBuf",
		"tmpBuf1",
		"tmpBuf2",
		"tmpBuf3",
		"volumeBFMat",
		"volumeFFMat",
		"cubeOffsetMat",
		"world2colorMat",
		"volumeRenderingSupported",
		"_checkVolumeRenderingSupport",
		"overrideMaterial",
		"colorMask",
		"_fxaaMaterial",
		"normalBuffer",
		"srcDepthTexture",
		"tempBuffer",
		"tempBuffer1",
		"_aoMaterial",
		"_horBlurMaterial",
		"_vertBlurMaterial",
		"_scale",
		"_lastPick",
		"_releaseAllVisuals",
		"_setEditMode",
		"_resetObjects",
		"setNeedRender",
		"resetReps",
		"resetPivot",
		"rebuildAll",
		"_resetScene",
		"updateSelectionMask",
		"TheExporter",
		"exporter",
		"export",
		"spin",
		"onLoadEnd",
		"anything",
		"jobIndex",
		"_refreshTitle",
		"_onLoad",
		"_removeVisual",
		"getCurrentVisual",
		"fileData",
		"_stopAnimation",
		"_frameInfo",
		"isPlaying",
		"_isAnimating",
		"_continueAnimation",
		"clearInterval",
		"minFrameTime",
		"setInterval",
		"_updateObjsToFrame",
		"nextFrame",
		"disableEvents",
		"visualName",
		"_startAnimation",
		"amberFileName",
		"_addVisual",
		"resetEd",
		"_onLoadEd",
		"_tweakResolution",
		"_edLoader",
		"toRemove",
		"getGeometry",
		"unitIdx",
		"currentUnitInfo",
		"getCurrentUnit",
		"_updateInfoPanel",
		"_rebuildObjects",
		"rebuildActions",
		"setNeedsRebuild",
		"appendix",
		"repGet",
		"getSelectionCount",
		"defPreset",
		"repCount",
		"presList",
		"_setReps",
		"applyPreset",
		"newIdx",
		"repRemove",
		"repHide",
		"_editMode",
		"getElementsByTagName",
		"editors",
		"beginComponentEdit",
		"_editors",
		"discard",
		"selectedVisuals",
		"beginFragmentEdit",
		"isFreeRotationAllowed",
		"_updateSelection",
		"_getVisualForComplex",
		"_enterComponentEditMode",
		"_enterFragmentEditMode",
		"_applyComponentEdit",
		"_applyFragmentEdit",
		"expandSelection",
		"shrinkSelection",
		"_extractRepresentation",
		"firstLine",
		"secondLine",
		"aName",
		"coordLine",
		"nextAltObj",
		"amount",
		"_centerInVisual",
		"getSelectionCenter",
		"fov2Tan",
		"tan2Fov",
		"getDataURL",
		"dataURL",
		"currBrowser",
		"canvas",
		"canvasContext",
		"drawImage",
		"toDataURL",
		"screenshotURI",
		"originalTanFov2",
		"areaOfInterestSize",
		"areaOfInterestTanFov2",
		"shotAspect",
		"setDrawingBufferSize",
		"uri",
		"screenshot",
		"_export",
		"dataString",
		"maxPerf",
		"_gfxScore",
		"_autoChangeResolution",
		"resetCurrentUnit",
		"resetView",
		"getBondCount",
		"getResidueCount",
		"getChainCount",
		"objData",
		"bThrow",
		"Ctor",
		"LinesObject",
		"_addSceneObject",
		"sceneObject",
		"objs",
		"getState",
		"compact",
		"compareWithDefaults",
		"currPreset",
		"repsDiff",
		"emptyReps",
		"repsInfo",
		"_compareReps",
		"objectsState",
		"setMaterialValues",
		"disable",
		"_onBgColorChanged",
		"_onFogColorChanged",
		"evt",
		"_updateMaterials",
		"Boolean",
		"_updateShadowmapMeshes",
		"_fogAlphaChanged",
		"sel",
		"VIEW_VERSION",
		"eulerOrder",
		"euler",
		"Euler",
		"setFromQuaternion",
		"srcView",
		"dstView",
		"setFromEuler",
		"isMoving",
		"setPivotSubset",
		"setPivotAtom",
		"setPivotResidue",
		"None",
		"within",
		"fullAtomName",
		"complexName",
		"project",
		"dssp",
		"extractRotation",
		"extractBasis",
		"retMat",
		"makeBasis",
		"updateCMLData",
		"xml",
		"removeAttribute",
		"sGroup",
		"getPosition",
		"getCentralPoint",
		"oSerializer",
		"XMLSerializer",
		"serializeToString",
		"curChainName",
		"curChainColor",
		"$Ve",
		"$Vf",
		"$Vg",
		"$Vh",
		"$Vi",
		"$Vj",
		"$Vk",
		"$Vl",
		"$Vm",
		"$Vn",
		"$Vo",
		"$Vp",
		"$Vq",
		"$Vr",
		"$Vs",
		"$Vt",
		"$Vu",
		"$Vv",
		"$Vw",
		"$Vx",
		"$Vy",
		"$Vz",
		"$VA",
		"$VB",
		"$VC",
		"$VD",
		"$VE",
		"$VF",
		"$VG",
		"$VH",
		"$VI",
		"$VJ",
		"$VK",
		"$VL",
		"$VM",
		"$VN",
		"$VO",
		"$VP",
		"$VQ",
		"$VR",
		"$VS",
		"$VT",
		"$VU",
		"$VV",
		"$VW",
		"$VX",
		"$VY",
		"$VZ",
		"$V_",
		"$V$",
		"$V01",
		"$V11",
		"$V21",
		"$V31",
		"$V41",
		"$V51",
		"$V61",
		"Command",
		"RESET",
		"BUILD",
		"ALL",
		"HELP",
		"Path",
		"MOTM",
		"OneArgCommand",
		"GET",
		"SET",
		"Value",
		"SET_SAVE",
		"SET_RESTORE",
		"SET_RESET",
		"PRESET",
		"AddRepresentation",
		"EditRepresentation",
		"REMOVE",
		"RepresentationReference",
		"HIDE",
		"SHOW",
		"LIST",
		"EXPAND_KEY",
		"SELECTOR_KEY",
		"SELECT",
		"WordAll",
		"WITHIN",
		"OF",
		"MATERIAL",
		"ModeCMD",
		"ColorCMD",
		"VIEW",
		"BASE_64",
		"UNIT",
		"DSSP",
		"AxesList",
		"CENTER",
		"GetURLBranch",
		"Screenshot",
		"LINE",
		"ArgList",
		"LISTOBJ",
		"REMOVEOBJ",
		"VIEW_KEY",
		"SCREENSHOT",
		"LOAD",
		"Url",
		"FILE_KEY",
		"ADD",
		"Description",
		"REP",
		"MODE",
		"COLOR",
		"Descriptor",
		"RepresentationOwnProperty",
		"RepresentationOwnPropertyOpts",
		"DESC_KEY",
		"DESC_KEY_OPTS",
		"AxesArg",
		"DESC_KEY_AXES",
		"Arg",
		"PathWoDescKey",
		"HEX",
		"BOOL",
		"Word",
		"CommandSetWoDESC_KEY",
		"DescKeys",
		"CLEAR",
		"FILE_LIST",
		"FILE_REGISTER",
		"FILE_DELETE",
		"PRESET_ADD",
		"PRESET_DELETE",
		"PRESET_UPDATE",
		"PRESET_RENAME",
		"PRESET_OPEN",
		"CREATE_SCENARIO",
		"RESET_SCENARIO",
		"DELETE_SCENARIO",
		"ADD_SCENARIO_ITEM",
		"LIST_SCENARIO",
		"PDB_KEY",
		"DELAY_KEY",
		"PRST_KEY",
		"DESCRIPTION_KEY",
		"CommandSet",
		"PresetPath",
		"HexOrNumber",
		"miew",
		"echo",
		"help",
		"motm",
		"propagateProp",
		"saveSettings",
		"resetSettings",
		"representations",
		"listRep",
		"listSelector",
		"checkArg",
		"changeUnit",
		"toJSO",
		"listObjs",
		"removeObject",
		"getURL",
		"screenshotSave",
		"CreateObjectPair",
		"keyRemap",
		"MiewCLIParser",
		"modeIdDesc",
		"$help",
		"colorDesc",
		"materialDesc",
		"addRepDesc",
		"setGetParameterDesc",
		"PDBID",
		"REP_NAME",
		"DESCRIPTION",
		"REP_INDEX",
		"EXPRESSION",
		"MODE_ID",
		"COLORER_ID",
		"MATERIAL_ID",
		"new",
		"del",
		"PARAMETER",
		"set_save",
		"set_restore",
		"set_reset",
		"ENCODED_VIEW",
		"removeobj",
		"listobj",
		"NULL",
		"RepresentationMap",
		"representationMap",
		"representationID",
		"strId",
		"sortedKeys",
		"representationsStorage",
		"CLIUtils",
		"repMap",
		"repName",
		"selectionStr",
		"strList",
		"helpData",
		"joinHelpStr",
		"clihelp",
		"sortBy",
		"helpItem",
		"awaitWhileCMDisInProcess",
		"finishAwaitingCMDInProcess",
		"modificate",
		"selExc",
		"modificators",
		"modificator",
		"argExc",
		"pathExc",
		"endsWith",
		"getNamedColor",
		"utilFunctions",
		"cliUtils",
		"cmd",
		"_val",
		"cliutils",
		"notimplemented",
		"script",
		"_printCallback",
		"_errorCallback",
		"parsercli",
		"cmdQueue",
		"commandInAction"
	],
	"mappings": "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,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;AACE,mBAAO,EAAP;AAEF,eAAK,EAAL;A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"
}
