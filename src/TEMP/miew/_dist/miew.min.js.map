{
	"version": 3,
	"file": "miew.min.js",
	"sources": [
		"../../../node_modules/@babel/runtime/helpers/esm/typeof.js",
		"../../../node_modules/@babel/runtime/helpers/esm/classCallCheck.js",
		"../../../node_modules/@babel/runtime/helpers/esm/createClass.js",
		"../../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js",
		"../../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js",
		"../../../node_modules/@babel/runtime/helpers/esm/inherits.js",
		"../../../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js",
		"../../../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js",
		"../../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js",
		"../../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js",
		"../../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js",
		"../../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js",
		"../../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js",
		"../../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js",
		"../../../node_modules/spin.js/spin.js",
		"../src/Timer.js",
		"../src/gfx/Stats.js",
		"../../../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js",
		"../../../node_modules/@babel/runtime/helpers/esm/construct.js",
		"../../../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js",
		"../../../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js",
		"../src/utils/EventDispatcher.js",
		"../src/utils/logger.js",
		"../src/utils.js",
		"../src/utils/JobHandle.js",
		"../src/settings.js",
		"../src/options.js",
		"../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js",
		"../src/chem/Atom.js",
		"../src/chem/Element.js",
		"../src/chem/Bond.js",
		"../src/chem/Residue.js",
		"../src/chem/ResidueType.js",
		"../src/chem/Chain.js",
		"../src/chem/StructuralElement.js",
		"../src/chem/Helix.js",
		"../../../node_modules/@babel/runtime/helpers/esm/superPropBase.js",
		"../../../node_modules/@babel/runtime/helpers/esm/get.js",
		"../src/chem/Strand.js",
		"../src/chem/Sheet.js",
		"../src/chem/SGroup.js",
		"../src/utils/SelectionParser.js",
		"../src/chem/selectors/selectArgs.js",
		"../src/chem/selectors/selectorsBase.js",
		"../src/chem/selectors/selectOps.js",
		"../src/chem/selectors.js",
		"../src/chem/BiologicalUnit.js",
		"../src/chem/Assembly.js",
		"../src/chem/Component.js",
		"../src/chem/AtomPairs.js",
		"../src/chem/AutoBond.js",
		"../src/chem/AromaticLoopsMarker.js",
		"../src/chem/VoxelWorld.js",
		"../src/chem/HBondInfo.js",
		"../src/chem/SecondaryStructureMap.js",
		"../src/chem/Complex.js",
		"../src/chem/Volume.js",
		"../src/chem/Molecule.js",
		"../src/chem.js",
		"../src/gfx/CSS2DObject.js",
		"../src/gfx/RCGroup.js",
		"../src/gfx/gfxutils.js",
		"../src/Visual.js",
		"../../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js",
		"../../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js",
		"../../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js",
		"../../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js",
		"../src/utils/EntityList.js",
		"../src/utils/makeContextDependent.js",
		"../src/gfx/geometries/SphereCollisionGeo.js",
		"../src/gfx/geometries/InstancedSpheresGeometry.js",
		"../src/gfx/geometries/ChunkedObjectsGeometry.js",
		"../src/gfx/geometries/SimpleSpheresGeometry.js",
		"../src/gfx/geometries/Simple2CCylindersGeometry.js",
		"../src/gfx/geometries/CylinderBufferGeometry.js",
		"../src/gfx/geometries/Instanced2CCylindersGeometry.js",
		"../src/gfx/geometries/ExtrudedObjectsGeometry.js",
		"../src/gfx/geometries/ThickLinesGeometry.js",
		"../src/gfx/geometries/LinesGeometry.js",
		"../src/gfx/geometries/CylinderCollisionGeo.js",
		"../src/gfx/geometries/ChunkedLinesGeometry.js",
		"../src/gfx/geometries/TwoColorLinesGeometry.js",
		"../src/gfx/geometries/CrossGeometry.js",
		"../src/gfx/geometries/IsoSurfaceGeometry.js",
		"../src/gfx/geometries/IsoSurfaceMarchCube.js",
		"../src/gfx/geometries/IsoSurface.js",
		"../src/gfx/geometries/VolumeSurfaceGeometry.js",
		"../src/gfx/geometries/QuickSurfGeometry.js",
		"../src/gfx/geometries/ContactSurface.js",
		"../src/gfx/geometries/ContactSurfaceGeometry.js",
		"../src/gfx/geometries/IsoSurfaceAtomColored.js",
		"../src/gfx/geometries/IsosurfaceBuildNormals.js",
		"../src/gfx/geometries/IsoSurfaceGeo.js",
		"../src/gfx/geometries/SSIsosurfaceGeometry.js",
		"../src/gfx/geometries/LabelsGeometry.js",
		"../src/gfx/geometries/geometries.js",
		"../src/gfx/capabilities.js",
		"../src/gfx/noiseTexture.js",
		"../src/gfx/shaders/UberMaterial.js",
		"../src/gfx/meshes/UberObject.js",
		"../src/gfx/meshes/ZSpriteMesh.js",
		"../src/gfx/meshes/ZClippedMesh.js",
		"../src/gfx/meshes/TextMesh.js",
		"../src/gfx/meshes/SimpleMesh.js",
		"../src/gfx/meshes/ThickLineMesh.js",
		"../src/gfx/meshes/InstancedMesh.js",
		"../src/gfx/meshes/meshes.js",
		"../src/gfx/meshes/MeshCreator.js",
		"../src/gfx/meshes/TransformGroup.js",
		"../src/gfx/modes/groups/ChemGroup.js",
		"../src/gfx/modes/groups/AtomsGroup.js",
		"../src/gfx/modes/groups/AtomsSphereGroup.js",
		"../src/gfx/modes/groups/AtomsSurfaceGroup.js",
		"../src/gfx/modes/groups/AtomsSASSESGroupStub.js",
		"../src/gfx/modes/groups/AtomsTextGroup.js",
		"../src/gfx/modes/groups/AromaticGroup.js",
		"../src/gfx/modes/groups/AromaticTorusGroup.js",
		"../src/gfx/modes/groups/AromaticLinesGroup.js",
		"../src/gfx/modes/groups/ResiduesGroup.js",
		"../src/gfx/modes/groups/NucleicItemGroup.js",
		"../src/gfx/modes/groups/NucleicCylindersGroup.js",
		"../src/gfx/modes/groups/NucleicSpheresGroup.js",
		"../src/vendors/Smooth.js",
		"../src/gfx/modes/groups/CartoonHelper.js",
		"../src/gfx/modes/groups/ResiduesSubseqGroup.js",
		"../src/gfx/modes/groups/ResiduesTraceGroup.js",
		"../src/gfx/modes/groups/BondsGroup.js",
		"../src/gfx/modes/groups/BondsCylinderGroup.js",
		"../src/gfx/modes/groups/BondsLinesGroup.js",
		"../src/gfx/modes/groups/groups.js",
		"../src/gfx/modes/processors/AtomsProcessor.js",
		"../src/gfx/modes/processors/OrphanAtomsProcessor.js",
		"../src/gfx/modes/processors/ResiduesProcessor.js",
		"../src/gfx/modes/processors/NucleicProcessor.js",
		"../src/gfx/modes/processors/SubseqsProcessor.js",
		"../src/gfx/modes/processors/BondsProcessor.js",
		"../src/gfx/modes/processors/AromaticProcessor.js",
		"../src/gfx/modes/processors/processors.js",
		"../src/gfx/modes/groups/GroupsFactory.js",
		"../src/gfx/modes/Mode.js",
		"../src/gfx/modes/LinesMode.js",
		"../src/gfx/modes/LicoriceMode.js",
		"../src/gfx/modes/BallsAndSticksMode.js",
		"../src/gfx/modes/VanDerWaalsMode.js",
		"../src/gfx/modes/TraceMode.js",
		"../src/gfx/modes/TubeMode.js",
		"../src/gfx/modes/CartoonMode.js",
		"../src/gfx/modes/SurfaceMode.js",
		"../src/gfx/modes/QuickSurfaceMode.js",
		"../src/gfx/modes/IsoSurfaceMode.js",
		"../src/gfx/modes/IsoSurfaceSASMode.js",
		"../src/gfx/modes/IsoSurfaceSESMode.js",
		"../src/gfx/modes/ContactSurfaceMode.js",
		"../src/gfx/modes/TextMode.js",
		"../src/gfx/modes.js",
		"../src/gfx/palettes/Palette.js",
		"../src/gfx/palettes/cpkPalette.js",
		"../src/gfx/palettes/jmolPalette.js",
		"../src/gfx/palettes/vmdPalette.js",
		"../src/gfx/palettes.js",
		"../src/gfx/colorers/Colorer.js",
		"../src/gfx/colorers/ElementColorer.js",
		"../src/gfx/colorers/ResidueTypeColorer.js",
		"../src/gfx/colorers/SequenceColorer.js",
		"../src/gfx/colorers/ChainColorer.js",
		"../src/gfx/colorers/SecondaryStructureColorer.js",
		"../src/gfx/colorers/UniformColorer.js",
		"../src/gfx/colorers/ConditionalColorer.js",
		"../src/gfx/colorers/ConformationColorer.js",
		"../src/gfx/colorers/TemperatureColorer.js",
		"../src/gfx/colorers/OccupancyColorer.js",
		"../src/gfx/colorers/HydrophobicityColorer.js",
		"../src/gfx/colorers/MoleculeColorer.js",
		"../src/gfx/colorers/CarbonColorer.js",
		"../src/gfx/colorers.js",
		"../src/gfx/materials.js",
		"../src/gfx/meshutils.js",
		"../src/gfx/Representation.js",
		"../src/ComplexVisualEdit.js",
		"../src/ComplexVisual.js",
		"../src/gfx/shaders/VolumeMaterial.js",
		"../src/gfx/VolumeMesh.js",
		"../src/gfx/VolumeBounds.js",
		"../src/gfx/VolumeFarPlane.js",
		"../src/VolumeVisual.js",
		"../src/io/loaders/LoaderList.js",
		"../src/io/loaders/Loader.js",
		"../src/io/loaders/FileLoader.js",
		"../src/io/loaders/XHRLoader.js",
		"../src/io/loaders/ImmediateLoader.js",
		"../src/io/loaders.js",
		"../src/io/parsers/ParserList.js",
		"../src/io/parsers/Parser.js",
		"../src/io/parsers/pdb/Remark290.js",
		"../src/io/parsers/pdb/Remark350.js",
		"../src/io/parsers/PDBStream.js",
		"../src/io/parsers/PDBParser.js",
		"../src/io/parsers/CMLParser.js",
		"../src/vendors/mmtf.js",
		"../src/io/parsers/MMTFParser.js",
		"../src/io/parsers/ParsingError.js",
		"../src/io/parsers/readCIF.js",
		"../src/io/parsers/CIFParser.js",
		"../src/io/parsers/VolumeModel.js",
		"../src/io/parsers/CCP4Parser.js",
		"../src/io/parsers/XYZParser.js",
		"../src/io/parsers/PubChemParser.js",
		"../src/io/parsers/SDFStream.js",
		"../src/io/parsers/SDFParser.js",
		"../src/io/parsers/DSN6Parser.js",
		"../src/io/parsers/GROReader.js",
		"../src/io/parsers/GROParser.js",
		"../src/io/parsers/MOL2Parser.js",
		"../src/io/parsers.js",
		"../src/io/exporters/ExporterList.js",
		"../src/io/exporters/Exporter.js",
		"../src/io/exporters/PDBResult.js",
		"../src/io/exporters/PDBExporter.js",
		"../src/io/exporters/fbx/FBXModel.js",
		"../src/io/exporters/fbx/FBXGeometry.js",
		"../src/io/exporters/fbx/FBX1CGeometry.js",
		"../src/io/exporters/fbx/FBX2CCylinder.js",
		"../src/io/exporters/fbx/FBXInfoExtractor.js",
		"../src/io/exporters/fbx/FBXResult.js",
		"../src/io/exporters/FBXExporter.js",
		"../src/ui/ObjectControls.js",
		"../src/io/io.js",
		"../src/io/exporters.js",
		"../src/gfx/CSS2DRenderer.js",
		"../src/ui/Picker.js",
		"../src/gfx/Axes.js",
		"../src/gfx/FrameInfo.js",
		"../src/gfx/objects/SceneObject.js",
		"../src/gfx/objects/LinesObj.js",
		"../src/gfx/shaders/OutlineMaterial.js",
		"../src/gfx/shaders/FXAAMaterial.js",
		"../src/gfx/shaders/AOMaterial.js",
		"../src/gfx/shaders/AOHorBlurMaterial.js",
		"../src/gfx/shaders/AOVertBlurWithBlendMaterial.js",
		"../src/gfx/shaders/AnaglyphMaterial.js",
		"../src/gfx/ViewInterpolator.js",
		"../src/utils/Cookies.js",
		"../src/gfx/vr/createWebVRButton.js",
		"../src/gfx/vr/WebVRPoC.js",
		"../src/Miew.ts",
		"../src/utils/MiewCLIParser.js",
		"../src/utils/MiewCLIHelp.js",
		"../src/Miew-cli.js"
	],
	"sourcesContent": [
		"export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}",
		"export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}",
		"function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}",
		"export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}",
		"export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}",
		"import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  Object.defineProperty(subClass, \"prototype\", {\n    value: Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    }),\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}",
		"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}",
		"export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}",
		"export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}",
		"import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}",
		"import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}",
		"export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}",
		"export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}",
		"export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}",
		"var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar defaults = {\r\n    lines: 12,\r\n    length: 7,\r\n    width: 5,\r\n    radius: 10,\r\n    scale: 1.0,\r\n    corners: 1,\r\n    color: '#000',\r\n    fadeColor: 'transparent',\r\n    animation: 'spinner-line-fade-default',\r\n    rotate: 0,\r\n    direction: 1,\r\n    speed: 1,\r\n    zIndex: 2e9,\r\n    className: 'spinner',\r\n    top: '50%',\r\n    left: '50%',\r\n    shadow: '0 0 1px transparent',\r\n    position: 'absolute',\r\n};\r\nvar Spinner = /** @class */ (function () {\r\n    function Spinner(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        this.opts = __assign(__assign({}, defaults), opts);\r\n    }\r\n    /**\r\n     * Adds the spinner to the given target element. If this instance is already\r\n     * spinning, it is automatically removed from its previous target by calling\r\n     * stop() internally.\r\n     */\r\n    Spinner.prototype.spin = function (target) {\r\n        this.stop();\r\n        this.el = document.createElement('div');\r\n        this.el.className = this.opts.className;\r\n        this.el.setAttribute('role', 'progressbar');\r\n        css(this.el, {\r\n            position: this.opts.position,\r\n            width: 0,\r\n            zIndex: this.opts.zIndex,\r\n            left: this.opts.left,\r\n            top: this.opts.top,\r\n            transform: \"scale(\" + this.opts.scale + \")\",\r\n        });\r\n        if (target) {\r\n            target.insertBefore(this.el, target.firstChild || null);\r\n        }\r\n        drawLines(this.el, this.opts);\r\n        return this;\r\n    };\r\n    /**\r\n     * Stops and removes the Spinner.\r\n     * Stopped spinners may be reused by calling spin() again.\r\n     */\r\n    Spinner.prototype.stop = function () {\r\n        if (this.el) {\r\n            if (typeof requestAnimationFrame !== 'undefined') {\r\n                cancelAnimationFrame(this.animateId);\r\n            }\r\n            else {\r\n                clearTimeout(this.animateId);\r\n            }\r\n            if (this.el.parentNode) {\r\n                this.el.parentNode.removeChild(this.el);\r\n            }\r\n            this.el = undefined;\r\n        }\r\n        return this;\r\n    };\r\n    return Spinner;\r\n}());\r\nexport { Spinner };\r\n/**\r\n * Sets multiple style properties at once.\r\n */\r\nfunction css(el, props) {\r\n    for (var prop in props) {\r\n        el.style[prop] = props[prop];\r\n    }\r\n    return el;\r\n}\r\n/**\r\n * Returns the line color from the given string or array.\r\n */\r\nfunction getColor(color, idx) {\r\n    return typeof color == 'string' ? color : color[idx % color.length];\r\n}\r\n/**\r\n * Internal method that draws the individual lines.\r\n */\r\nfunction drawLines(el, opts) {\r\n    var borderRadius = (Math.round(opts.corners * opts.width * 500) / 1000) + 'px';\r\n    var shadow = 'none';\r\n    if (opts.shadow === true) {\r\n        shadow = '0 2px 4px #000'; // default shadow\r\n    }\r\n    else if (typeof opts.shadow === 'string') {\r\n        shadow = opts.shadow;\r\n    }\r\n    var shadows = parseBoxShadow(shadow);\r\n    for (var i = 0; i < opts.lines; i++) {\r\n        var degrees = ~~(360 / opts.lines * i + opts.rotate);\r\n        var backgroundLine = css(document.createElement('div'), {\r\n            position: 'absolute',\r\n            top: -opts.width / 2 + \"px\",\r\n            width: (opts.length + opts.width) + 'px',\r\n            height: opts.width + 'px',\r\n            background: getColor(opts.fadeColor, i),\r\n            borderRadius: borderRadius,\r\n            transformOrigin: 'left',\r\n            transform: \"rotate(\" + degrees + \"deg) translateX(\" + opts.radius + \"px)\",\r\n        });\r\n        var delay = i * opts.direction / opts.lines / opts.speed;\r\n        delay -= 1 / opts.speed; // so initial animation state will include trail\r\n        var line = css(document.createElement('div'), {\r\n            width: '100%',\r\n            height: '100%',\r\n            background: getColor(opts.color, i),\r\n            borderRadius: borderRadius,\r\n            boxShadow: normalizeShadow(shadows, degrees),\r\n            animation: 1 / opts.speed + \"s linear \" + delay + \"s infinite \" + opts.animation,\r\n        });\r\n        backgroundLine.appendChild(line);\r\n        el.appendChild(backgroundLine);\r\n    }\r\n}\r\nfunction parseBoxShadow(boxShadow) {\r\n    var regex = /^\\s*([a-zA-Z]+\\s+)?(-?\\d+(\\.\\d+)?)([a-zA-Z]*)\\s+(-?\\d+(\\.\\d+)?)([a-zA-Z]*)(.*)$/;\r\n    var shadows = [];\r\n    for (var _i = 0, _a = boxShadow.split(','); _i < _a.length; _i++) {\r\n        var shadow = _a[_i];\r\n        var matches = shadow.match(regex);\r\n        if (matches === null) {\r\n            continue; // invalid syntax\r\n        }\r\n        var x = +matches[2];\r\n        var y = +matches[5];\r\n        var xUnits = matches[4];\r\n        var yUnits = matches[7];\r\n        if (x === 0 && !xUnits) {\r\n            xUnits = yUnits;\r\n        }\r\n        if (y === 0 && !yUnits) {\r\n            yUnits = xUnits;\r\n        }\r\n        if (xUnits !== yUnits) {\r\n            continue; // units must match to use as coordinates\r\n        }\r\n        shadows.push({\r\n            prefix: matches[1] || '',\r\n            x: x,\r\n            y: y,\r\n            xUnits: xUnits,\r\n            yUnits: yUnits,\r\n            end: matches[8],\r\n        });\r\n    }\r\n    return shadows;\r\n}\r\n/**\r\n * Modify box-shadow x/y offsets to counteract rotation\r\n */\r\nfunction normalizeShadow(shadows, degrees) {\r\n    var normalized = [];\r\n    for (var _i = 0, shadows_1 = shadows; _i < shadows_1.length; _i++) {\r\n        var shadow = shadows_1[_i];\r\n        var xy = convertOffset(shadow.x, shadow.y, degrees);\r\n        normalized.push(shadow.prefix + xy[0] + shadow.xUnits + ' ' + xy[1] + shadow.yUnits + shadow.end);\r\n    }\r\n    return normalized.join(', ');\r\n}\r\nfunction convertOffset(x, y, degrees) {\r\n    var radians = degrees * Math.PI / 180;\r\n    var sin = Math.sin(radians);\r\n    var cos = Math.cos(radians);\r\n    return [\r\n        Math.round((x * cos + y * sin) * 1000) / 1000,\r\n        Math.round((-x * sin + y * cos) * 1000) / 1000,\r\n    ];\r\n}\r\n",
		"// ----------------------------------------------------------------------------\r\n// Timer\r\n\r\nexport default class Timer {\r\n  constructor() {\r\n    this.startTime = 0\r\n    this.oldTime = 0\r\n    this.elapsedTime = 0\r\n    this.running = false\r\n  }\r\n\r\n  start() {\r\n    this.startTime = Timer.now()\r\n    this.oldTime = this.startTime\r\n    this.running = true\r\n  }\r\n\r\n  stop() {\r\n    this.getElapsedTime()\r\n    this.running = false\r\n  }\r\n\r\n  getElapsedTime() {\r\n    this.update()\r\n    return this.elapsedTime\r\n  }\r\n\r\n  update() {\r\n    let delta = 0\r\n    if (this.running) {\r\n      const newTime = Timer.now()\r\n      delta = 0.001 * (newTime - this.oldTime)\r\n      this.oldTime = newTime\r\n      this.elapsedTime += delta\r\n    }\r\n\r\n    return delta\r\n  }\r\n}\r\n\r\nTimer.now = (function () {\r\n  const p = typeof window !== 'undefined' && window.performance\r\n  return p && p.now ? p.now.bind(p) : Date.now\r\n})()\r\n",
		"import Timer from '../Timer'\r\n\r\nconst { now } = Timer\r\n\r\nfunction createElement(tag, id, css) {\r\n  const element = document.createElement(tag)\r\n  element.id = id\r\n  element.style.cssText = css\r\n  return element\r\n}\r\n\r\nclass Stats {\r\n  constructor() {\r\n    this.domElement = createElement('div', 'stats', 'padding:8px')\r\n    this._text = createElement(\r\n      'p',\r\n      'fps',\r\n      'margin:0;color:silver;font-size:large'\r\n    )\r\n    this.domElement.appendChild(this._text)\r\n\r\n    this._startTime = now()\r\n    this._prevTime = this._startTime\r\n\r\n    this._deltas = new Array(20)\r\n    this._index = 0\r\n    this._total = 0.0\r\n    this._count = 0\r\n  }\r\n\r\n  end() {\r\n    const time = now()\r\n    const delta = time - this._startTime\r\n\r\n    if (this._count < this._deltas.length) {\r\n      this._count++\r\n    } else {\r\n      this._total -= this._deltas[this._index]\r\n    }\r\n    this._total += delta\r\n    this._deltas[this._index] = delta\r\n    this._index = (this._index + 1) % this._deltas.length\r\n\r\n    this.ms = this._total / this._count\r\n    this.fps = 1000 / this.ms\r\n\r\n    if (time > this._prevTime + 1000) {\r\n      this._text.textContent = this.fps.toPrecision(2)\r\n      this._prevTime = time\r\n    }\r\n\r\n    return time\r\n  }\r\n\r\n  update() {\r\n    this._startTime = this.end()\r\n  }\r\n\r\n  show(on) {\r\n    if (on === undefined) {\r\n      on = true\r\n    }\r\n    this.domElement.style.display = on ? 'block' : 'none'\r\n  }\r\n}\r\n\r\nexport default Stats\r\n",
		"export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}",
		"import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}",
		"import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}",
		"export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}",
		"/**\r\n * This class introduces the simplest event system.\r\n */\r\n\r\nimport { remove, find, forEach, omitBy } from 'lodash'\r\n\r\nfunction isUndefOrEqual(param, value) {\r\n  return !param || param === value\r\n}\r\n\r\n/**\r\n * Creates empty dispatcher.\r\n *\r\n * @exports EventDispatcher\r\n * @constructor\r\n */\r\nfunction EventDispatcher() {\r\n  this._handlers = {}\r\n}\r\n\r\n/**\r\n * Binds callback on specific event type. Optional `context` parameter\r\n * could be used as 'this' for the `callback`.\r\n * @param {string}   type       Event name.\r\n * @param {function} callback   Callback function.\r\n * @param {Object}   [context] 'This' object for the callback.\r\n */\r\nEventDispatcher.prototype.addEventListener = function (\r\n  type,\r\n  callback,\r\n  context\r\n) {\r\n  let handlers = this._handlers[type]\r\n\r\n  if (!handlers) {\r\n    this._handlers[type] = []\r\n    handlers = this._handlers[type]\r\n  }\r\n\r\n  const params = [callback, context]\r\n  function _checkPar(par) {\r\n    return par[0] === params[0] && par[1] === params[1]\r\n  }\r\n\r\n  if (find(handlers, _checkPar) === undefined) {\r\n    handlers.push(params)\r\n  }\r\n}\r\n\r\n/**\r\n * Removes a previously-bound callback function from an object.\r\n * If no `context` is specified, all versions of the `callback` with different\r\n * contexts will be removed.\r\n * If no `callback` is specified, all callbacks of the `type` will be removed.\r\n * If no `type` is specified, callbacks for all events will be removed.\r\n * @param {?string}  [type]      Event type.\r\n * @param {function} [callback]  Callback function.\r\n * @param {Object}   [context]  'This' object for the callback.\r\n */\r\nEventDispatcher.prototype.removeEventListener = function (\r\n  type,\r\n  callback,\r\n  context\r\n) {\r\n  const self = this\r\n  forEach(self._handlers, (handler, ev) => {\r\n    remove(\r\n      handler,\r\n      (values) =>\r\n        isUndefOrEqual(type, ev) &&\r\n        isUndefOrEqual(callback, values[0]) &&\r\n        isUndefOrEqual(context, values[1] || self)\r\n    )\r\n  })\r\n\r\n  this._handlers = omitBy(self._handlers, (handler) => handler.length === 0)\r\n}\r\n\r\n/**\r\n * Makes all the callbacks for the specific `event` to trigger.\r\n * @param {Object} event      Event.\r\n * @param {string} event.type Type of the event.\r\n */\r\nEventDispatcher.prototype.dispatchEvent = function (event) {\r\n  const self = this\r\n\r\n  forEach(this._handlers[event.type], (callback) => {\r\n    const context = callback[1] || self\r\n    callback[0].apply(context, [event])\r\n  })\r\n}\r\n\r\nexport default EventDispatcher\r\n",
		"/**\r\n * This module contains class for logging.\r\n * Returns an instance of a logger that have already been created.\r\n * Allows users to log messages for five different levels,\r\n * enable console output and catch signal on each message.\r\n */\r\nimport { findKey, isNumber } from 'lodash'\r\nimport EventDispatcher from './EventDispatcher'\r\n\r\nconst priorities = {\r\n  debug: 0,\r\n  info: 1,\r\n  report: 2,\r\n  warn: 3,\r\n  error: 4\r\n}\r\n\r\n/**\r\n * Create new Logger.\r\n *\r\n * @exports Logger\r\n * @extends EventDispatcher\r\n * @constructor\r\n */\r\nfunction Logger() {\r\n  EventDispatcher.call(this)\r\n  /** Boolean flag that toggles output to browser console.\r\n   * @type {boolean}\r\n   */\r\n  this.console = false\r\n  this._priority = priorities.warn\r\n}\r\n\r\nLogger.prototype = Object.create(EventDispatcher.prototype)\r\nLogger.prototype.constructor = Logger\r\n\r\n/**\r\n * Create new clean instance of the logger.\r\n * @returns {Logger}\r\n */\r\nLogger.prototype.instantiate = function () {\r\n  return new Logger()\r\n}\r\n\r\nfunction verify(number) {\r\n  if (!isNumber(number)) {\r\n    throw new Error('Wrong log level specified!')\r\n  }\r\n  return number\r\n}\r\n\r\n/**\r\n * @property {string} current threshold for signals and console output.\r\n * @name Logger#level\r\n */\r\nObject.defineProperty(Logger.prototype, 'level', {\r\n  get() {\r\n    return findKey(priorities, (value) => value === this._priority)\r\n  },\r\n  set(level) {\r\n    this._priority = verify(priorities[level])\r\n  }\r\n})\r\n\r\n/**\r\n * Returns the list of all possible level values.\r\n * @returns {Array}\r\n */\r\nLogger.prototype.levels = function () {\r\n  return Object.keys(priorities)\r\n}\r\n\r\n/**\r\n * Add new message with specified level.\r\n * @param {string} level - level of the message, must be one of the\r\n * {'debug' | 'info' | 'report' | 'warn' | 'error'}\r\n * @param {string} message\r\n */\r\nLogger.prototype.message = function (level, message) {\r\n  const priority = verify(priorities[level])\r\n  this._message(priority, message)\r\n}\r\n\r\n/**\r\n * Shortcut for message('debug', ...);\r\n * @param message\r\n */\r\nLogger.prototype.debug = function (message) {\r\n  this._message(priorities.debug, message)\r\n}\r\n\r\n/**\r\n * Shortcut for message('info', ...);\r\n * @param message\r\n */\r\nLogger.prototype.info = function (message) {\r\n  this._message(priorities.info, message)\r\n}\r\n\r\n/**\r\n * Shortcut for message('report', ...);\r\n * @param message\r\n */\r\nLogger.prototype.report = function (message) {\r\n  this._message(priorities.report, message)\r\n}\r\n\r\n/**\r\n * Shortcut for message('warn', ...);\r\n * @param message\r\n */\r\nLogger.prototype.warn = function (message) {\r\n  this._message(priorities.warn, message)\r\n}\r\n\r\n/**\r\n * Shortcut for message('error', ...);\r\n * @param message\r\n */\r\nLogger.prototype.error = function (message) {\r\n  this._message(priorities.error, message)\r\n}\r\n\r\n/**\r\n * Add new message with specified priority.\r\n * @param {number} priority - priority of the message\r\n * @param {string} message\r\n * @private\r\n */\r\nLogger.prototype._message = function (priority, message) {\r\n  if (priority < this._priority) {\r\n    return\r\n  }\r\n  const level = findKey(priorities, (value) => value === priority)\r\n  message = String(message)\r\n  if (this.console) {\r\n    const output = `miew:${level}: ${message}`\r\n    if (level === 'error') {\r\n      console.error(output) // NOSONAR\r\n    } else if (level === 'warn') {\r\n      console.warn(output) // NOSONAR\r\n    } else {\r\n      console.log(output) // NOSONAR\r\n    }\r\n  }\r\n  this.dispatchEvent({ type: 'message', level, message })\r\n}\r\n\r\nexport default new Logger()\r\n",
		"import logger from './utils/logger'\r\nimport {\r\n  assign,\r\n  isPlainObject,\r\n  forIn,\r\n  isEqual,\r\n  isEmpty,\r\n  isString\r\n} from 'lodash'\r\n\r\nconst browserType = {\r\n  DEFAULT: 0,\r\n  SAFARI: 1\r\n}\r\n// ----------------------------------------------------------------------------\r\n// Query string\r\n\r\n/**\r\n * Escape only dangerous chars in a query string component, use a plus instead of a space.\r\n *\r\n * [RFC 3986](https://tools.ietf.org/html/rfc3986) allows the following chars in the query (see 3.4):\r\n *\r\n *       A-Z a-z 0-9 - _ . ~ ! $ & ' ( ) * + , ; = : @ / ?\r\n *\r\n * For query string elements we need to escape ampersand, equal sign, and plus,\r\n * but encodeURIComponent() function encodes anything except for the following:\r\n *\r\n *       A-Z a-z 0-9 - _ . ~ ! ' ( ) *\r\n *\r\n * @param {string} text - key or value to encode\r\n * @param {string} excludeExp - regexp for symbols to exclude from encoding\r\n * @returns {string} encoded string\r\n */\r\nfunction encodeQueryComponent(text, excludeExp) {\r\n  const encode = (code) => String.fromCharCode(parseInt(code.substr(1), 16))\r\n  return encodeURIComponent(text)\r\n    .replace(excludeExp, encode)\r\n    .replace(/%20/g, '+')\r\n}\r\n\r\n/**\r\n * Unescape dangerous chars in a query string component.\r\n *\r\n * @param {string} text - encoded key or value\r\n * @returns {string} decoded string\r\n * @see {@link encodeQueryComponent}\r\n */\r\nfunction decodeQueryComponent(text) {\r\n  return decodeURIComponent(text.replace(/\\+/g, ' '))\r\n}\r\n\r\n/**\r\n * Parse URL and extract an array of parameters.\r\n * @param {string?} url - URL or query string to parse\r\n * @returns {Array} array of (key, value) pairs.\r\n */\r\nfunction getUrlParameters(url) {\r\n  url = url || window.location.search\r\n\r\n  const query = url.substring(url.indexOf('?') + 1)\r\n  const search = /([^&=]+)=?([^&]*)/g\r\n  const result = []\r\n  let match\r\n\r\n  while ((match = search.exec(query)) !== null) {\r\n    // eslint-disable-line no-cond-assign\r\n    result.push([\r\n      decodeQueryComponent(match[1]),\r\n      decodeQueryComponent(match[2])\r\n    ])\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Parse URL and extract an array of parameters as a hash.\r\n * @param {string?} url - URL or query string to parse\r\n * @returns {Object}\r\n */\r\nfunction getUrlParametersAsDict(url) {\r\n  const result = {}\r\n  const a = getUrlParameters(url)\r\n  for (let i = 0; i < a.length; ++i) {\r\n    const [key, value] = a[i]\r\n    result[key] = value\r\n  }\r\n  return result\r\n}\r\n\r\nfunction resolveURL(str) {\r\n  if (typeof URL !== 'undefined') {\r\n    try {\r\n      if (typeof window !== 'undefined') {\r\n        return new URL(str, window.location).href\r\n      }\r\n      return new URL(str).href\r\n    } catch (error) {\r\n      // IE 11 has a URL object with no constructor available so just try a different approach instead\r\n    }\r\n  }\r\n  if (typeof document !== 'undefined') {\r\n    const anchor = document.createElement('a')\r\n    anchor.href = str\r\n    return anchor.href\r\n  }\r\n  return str\r\n}\r\n\r\n/**\r\n * Generates regular expression object that includes all symbols\r\n * listed in the argument\r\n * @param symbolStr {string} - String containing characters list.\r\n * @returns {RegExp} - Regular expression.\r\n */\r\nfunction generateRegExp(symbolStr) {\r\n  const symbolList = []\r\n\r\n  for (let i = 0, n = symbolStr.length; i < n; ++i) {\r\n    symbolList[symbolList.length] = symbolStr[i].charCodeAt(0).toString(16)\r\n  }\r\n\r\n  const listStr = symbolList.join('|')\r\n\r\n  return new RegExp(`%(?:${listStr})`, 'gi')\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Create HTML element\r\n\r\nfunction createElement(tag, attrs, content) {\r\n  const element = document.createElement(tag)\r\n  let i\r\n  let n\r\n  if (attrs) {\r\n    const keys = Object.keys(attrs)\r\n    for (i = 0, n = keys.length; i < n; ++i) {\r\n      const key = keys[i]\r\n      element.setAttribute(key, attrs[key])\r\n    }\r\n  }\r\n  if (content) {\r\n    if (!(content instanceof Array)) {\r\n      content = [content]\r\n    }\r\n    for (i = 0, n = content.length; i < n; ++i) {\r\n      const child = content[i]\r\n      if (typeof child === 'string') {\r\n        element.appendChild(document.createTextNode(child))\r\n      } else if (child instanceof HTMLElement) {\r\n        element.appendChild(child)\r\n      }\r\n    }\r\n  }\r\n  return element\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Easy inheritance\r\n\r\n/**\r\n * Derive the class from the base.\r\n * @param cls {function} - Class (constructor) to derive.\r\n * @param base {function} - Class (constructor) to derive from.\r\n * @param members {object=} - Optional instance members to add.\r\n * @param statics {object=} - Optional static class members to add.\r\n * @returns {function} Original class.\r\n */\r\nfunction deriveClass(cls, base, members, statics) {\r\n  cls.prototype = assign(\r\n    Object.create(base.prototype),\r\n    { constructor: cls },\r\n    members\r\n  )\r\n  if (statics) {\r\n    assign(cls, statics)\r\n  }\r\n  return cls\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Deep prototyping\r\n\r\nfunction deriveDeep(obj, needZeroOwnProperties) {\r\n  let res = obj\r\n  let i\r\n  let n\r\n  if (obj instanceof Array) {\r\n    res = new Array(obj.length)\r\n    for (i = 0, n = obj.length; i < n; ++i) {\r\n      res[i] = deriveDeep(obj[i])\r\n    }\r\n  } else if (obj instanceof Object) {\r\n    res = Object.create(obj)\r\n    const keys = Object.keys(obj)\r\n    for (i = 0, n = keys.length; i < n; ++i) {\r\n      const key = keys[i]\r\n      const value = obj[key]\r\n      const copy = deriveDeep(value)\r\n      if (copy !== value) {\r\n        res[key] = copy\r\n      }\r\n    }\r\n    if (needZeroOwnProperties && Object.keys(res).length > 0) {\r\n      res = Object.create(res)\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Colors\r\n\r\nfunction hexColor(color) {\r\n  const hex = `0000000${color.toString(16)}`.substr(-6)\r\n  return `#${hex}`\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Debug tracing\r\n\r\nfunction DebugTracer(namespace) {\r\n  let enabled = false\r\n\r\n  this.enable = function (on) {\r\n    enabled = on\r\n  }\r\n\r\n  let indent = 0\r\n  const methods = Object.keys(namespace)\r\n\r\n  function wrap(method_, name_) {\r\n    return function (...args) {\r\n      const spaces = DebugTracer.spaces.substr(0, indent * 2)\r\n      if (enabled) {\r\n        logger.debug(`${spaces + name_} {`)\r\n      }\r\n      indent++\r\n      const result = method_.apply(this, args) // eslint-disable-line no-invalid-this\r\n      indent--\r\n      if (enabled) {\r\n        logger.debug(`${spaces}} // ${name_}`)\r\n      }\r\n      return result\r\n    }\r\n  }\r\n\r\n  for (let i = 0, n = methods.length; i < n; ++i) {\r\n    const name = methods[i]\r\n    const method = namespace[name]\r\n    if (method instanceof Function && name !== 'constructor') {\r\n      namespace[name] = wrap(method, name)\r\n    }\r\n  }\r\n}\r\n\r\nDebugTracer.spaces =\r\n  '                                                                                          '\r\n\r\nclass OutOfMemoryError extends Error {\r\n  constructor(message) {\r\n    super()\r\n    this.name = 'OutOfMemoryError'\r\n    this.message = message\r\n  }\r\n}\r\n\r\nfunction allocateTyped(TypedArrayName, size) {\r\n  let result = null\r\n  try {\r\n    result = new TypedArrayName(size)\r\n  } catch (e) {\r\n    if (e instanceof RangeError) {\r\n      throw new OutOfMemoryError(e.message)\r\n    } else {\r\n      throw e\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Float array conversion\r\n\r\nfunction bytesToBase64(/** ArrayBuffer */ buffer) {\r\n  const bytes = new Uint8Array(buffer)\r\n  let binary = ''\r\n  for (let i = 0; i < bytes.byteLength; i++) {\r\n    binary += String.fromCharCode(bytes[i])\r\n  }\r\n  return window.btoa(binary)\r\n}\r\n\r\nfunction bytesFromBase64(/** string */ str) {\r\n  const binary = window.atob(str)\r\n  const bytes = new Uint8Array(binary.length)\r\n  for (let i = 0; i < bytes.length; ++i) {\r\n    bytes[i] = binary[i].charCodeAt(0)\r\n  }\r\n  return bytes.buffer\r\n}\r\n\r\nfunction arrayToBase64(/** number[] */ array, /** function */ TypedArrayClass) {\r\n  return bytesToBase64(new TypedArrayClass(array).buffer)\r\n}\r\n\r\nfunction arrayFromBase64(/** string */ str, /** function */ TypedArrayClass) {\r\n  return Array.prototype.slice.call(new TypedArrayClass(bytesFromBase64(str)))\r\n}\r\n\r\n// NOTE: this is 1-level comparison\r\nfunction compareOptionsWithDefaults(opts, defOpts) {\r\n  const optsStr = []\r\n  if (defOpts && opts) {\r\n    const keys = Object.keys(opts)\r\n    for (let p = 0; p < keys.length; ++p) {\r\n      const key = keys[p]\r\n      const value = opts[key]\r\n      // TODO add processing for tree structure\r\n      if (\r\n        !(value instanceof Object) &&\r\n        typeof defOpts[key] !== 'undefined' &&\r\n        defOpts[key] !== value\r\n      ) {\r\n        optsStr.push(`${key}:${value}`)\r\n      }\r\n    }\r\n    if (optsStr.length > 0) {\r\n      return `!${optsStr.join()}`\r\n    }\r\n  }\r\n  return ''\r\n}\r\n\r\nfunction isAlmostPlainObject(o) {\r\n  if (isPlainObject(o)) {\r\n    return true\r\n  }\r\n  const proto = o && Object.getPrototypeOf(o)\r\n  return (\r\n    !!proto &&\r\n    !proto.hasOwnProperty('constructor') &&\r\n    isAlmostPlainObject(proto)\r\n  )\r\n}\r\n\r\n/**\r\n * Build an object that contains properties (and subproperties) of `src` different from those\r\n * in `dst`. Objects are parsed recursively, other values (including arrays) are compared for\r\n * equality using `isEqual()`.\r\n * @param {!object} src - a new object to compare, may contain changed or new properties\r\n * @param {!object} dst - an old reference object\r\n */\r\nfunction objectsDiff(src, dst) {\r\n  const diff = {}\r\n  forIn(src, (srcValue, key) => {\r\n    const dstValue = dst[key]\r\n    if (isAlmostPlainObject(srcValue) && isAlmostPlainObject(dstValue)) {\r\n      const deepDiff = objectsDiff(srcValue, dstValue)\r\n      if (!isEmpty(deepDiff)) {\r\n        diff[key] = deepDiff\r\n      }\r\n    } else if (!isEqual(srcValue, dstValue)) {\r\n      diff[key] = srcValue\r\n    }\r\n  })\r\n  return diff\r\n}\r\n\r\nfunction forInRecursive(object, callback) {\r\n  function iterateThrough(obj, prefix) {\r\n    forIn(obj, (value, key) => {\r\n      const newPref = prefix + (prefix.length > 0 ? '.' : '')\r\n      if (value instanceof Object) {\r\n        iterateThrough(value, newPref + key)\r\n      } else if (value !== undefined) {\r\n        callback(value, newPref + key)\r\n      }\r\n    })\r\n  }\r\n  iterateThrough(object, '')\r\n}\r\n\r\nfunction enquoteString(value) {\r\n  if (isString(value)) {\r\n    return `\"${value.replace(/\"/g, '\\\\\"')}\"`\r\n  }\r\n  return value\r\n}\r\n\r\nfunction unquoteString(value) {\r\n  if (!isString(value)) {\r\n    return value\r\n  }\r\n  if (value[0] === '\"' && value[value.length - 1] === '\"') {\r\n    value = value.slice(1, value.length - 1)\r\n    return value.replace(/\\\\\"/g, '\"')\r\n  }\r\n  if (value[0] === \"'\" && value[value.length - 1] === \"'\") {\r\n    value = value.slice(1, value.length - 1)\r\n    return value.replace(/\\\\'/g, \"'\")\r\n  }\r\n  throw new SyntaxError(\"Incorrect string format, can't unqute it\")\r\n}\r\n\r\nfunction getFileExtension(fileName) {\r\n  return fileName.slice(Math.max(0, fileName.lastIndexOf('.')) || Infinity)\r\n}\r\n\r\nfunction splitFileName(fileName) {\r\n  const ext = getFileExtension(fileName)\r\n  const name = fileName.slice(0, fileName.length - ext.length)\r\n  return [name, ext]\r\n}\r\n\r\nfunction dataUrlToBlob(url) {\r\n  const parts = url.split(/[:;,]/)\r\n  const partsCount = parts.length\r\n  if (partsCount >= 3 && parts[partsCount - 2] === 'base64') {\r\n    return new Blob([bytesFromBase64(parts[partsCount - 1])])\r\n  }\r\n  return null\r\n}\r\n\r\nfunction getBrowser() {\r\n  if (\r\n    navigator.vendor &&\r\n    navigator.vendor.indexOf('Apple') > -1 &&\r\n    navigator.userAgent &&\r\n    navigator.userAgent.indexOf('CriOS') === -1 &&\r\n    navigator.userAgent.indexOf('FxiOS') === -1\r\n  ) {\r\n    return browserType.SAFARI\r\n  }\r\n  return browserType.DEFAULT\r\n}\r\n\r\nfunction shotOpen(url) {\r\n  if (typeof window !== 'undefined') {\r\n    window\r\n      .open()\r\n      .document.write(`<body style=\"margin:0\"><img src=\"${url}\" /></body>`)\r\n  }\r\n}\r\n\r\nfunction shotDownload(dataUrl, filename) {\r\n  if (!dataUrl || dataUrl.substr(0, 5) !== 'data:') {\r\n    return\r\n  }\r\n  if (!filename) {\r\n    filename = ['screenshot-', +new Date(), '.png'].join('')\r\n  }\r\n  if (\r\n    typeof window !== 'undefined' &&\r\n    window.navigator &&\r\n    window.navigator.msSaveBlob\r\n  ) {\r\n    window.navigator.msSaveBlob(dataUrlToBlob(dataUrl), filename)\r\n  } else if (typeof document !== 'undefined') {\r\n    const link = document.createElement('a')\r\n    link.download = filename\r\n    link.innerHTML = 'download'\r\n    link.href = window.URL.createObjectURL(dataUrlToBlob(dataUrl))\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    document.body.removeChild(link)\r\n  }\r\n}\r\n\r\nfunction download(data, filename, type) {\r\n  const blobData = new Blob([data])\r\n\r\n  if (!filename) {\r\n    filename = ['data', +new Date()].join('')\r\n  }\r\n\r\n  if (!type) {\r\n    filename += blobData.type || '.bin'\r\n  } else {\r\n    filename += `.${type}`\r\n  }\r\n\r\n  if (\r\n    typeof window !== 'undefined' &&\r\n    window.navigator &&\r\n    window.navigator.msSaveBlob\r\n  ) {\r\n    window.navigator.msSaveBlob(blobData, filename)\r\n  } else if (typeof document !== 'undefined') {\r\n    const link = document.createElement('a')\r\n    link.download = filename\r\n    link.innerHTML = 'download'\r\n    link.href = window.URL.createObjectURL(blobData)\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    document.body.removeChild(link)\r\n  }\r\n}\r\n\r\nfunction copySubArrays(src, dst, indices, itemSize) {\r\n  for (let i = 0, n = indices.length; i < n; ++i) {\r\n    for (let j = 0; j < itemSize; ++j) {\r\n      dst[i * itemSize + j] = src[indices[i] * itemSize + j]\r\n    }\r\n  }\r\n}\r\n\r\nfunction shallowCloneNode(node) {\r\n  const newNode = node.cloneNode(true)\r\n  newNode.worldPos = node.worldPos\r\n  // .style property is readonly, so \"newNode.style = node.style;\" won't work (and we don't need it, right?)\r\n  return newNode\r\n}\r\n\r\nconst unquotedStringRE = /^[a-zA-Z0-9_]*$/\r\nconst enquoteHelper = ['\"', '', '\"']\r\n\r\n// verify and correct if needed selctor identifier\r\nfunction correctSelectorIdentifier(value) {\r\n  if (unquotedStringRE.test(value)) {\r\n    return value\r\n  }\r\n  // quote incorrect identifier\r\n  enquoteHelper[1] = value\r\n  return enquoteHelper.join('')\r\n}\r\n\r\n/**\r\n * Concatenates two TypedArray. Doesn't check null refs o type equality\r\n * Attention! It must be use very rarely because requires memory reallocation every time. Use MergeTypedArraysUnsafe to\r\n * unite array of subarrays.\r\n * @param{TypedArray} first  - destination array\r\n * @param{TypedArray} second - source array\r\n * @returns{TypedArray} resulting concatenated array\r\n */\r\nfunction concatTypedArraysUnsafe(first, second) {\r\n  const result = new first.constructor(first.length + second.length)\r\n  result.set(first)\r\n  result.set(second, first.length)\r\n  return result\r\n}\r\n\r\n/**\r\n * Merges array of TypedArray into TypedArray. Doesn't check null refs o type equality\r\n * @param{array} array  - source array of subarrays\r\n * @returns{TypedArray} resulting merged array\r\n */\r\nfunction mergeTypedArraysUnsafe(array) {\r\n  if (array.length <= 0) {\r\n    return null\r\n  }\r\n  // count the size\r\n  const size = array.reduce((acc, cur) => acc + cur.length, 0)\r\n  // create combined array\r\n  const result = new array[0].constructor(size)\r\n  for (let i = 0, start = 0; i < array.length; i++) {\r\n    const count = array[i].length\r\n    result.set(array[i], start)\r\n    start += count\r\n  }\r\n  return result\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Exports\r\n\r\nexport default {\r\n  browserType,\r\n  encodeQueryComponent,\r\n  decodeQueryComponent,\r\n  getUrlParameters,\r\n  getUrlParametersAsDict,\r\n  resolveURL,\r\n  generateRegExp,\r\n  createElement,\r\n  deriveClass,\r\n  deriveDeep,\r\n  hexColor,\r\n  DebugTracer,\r\n  OutOfMemoryError,\r\n  allocateTyped,\r\n  bytesFromBase64,\r\n  bytesToBase64,\r\n  arrayFromBase64,\r\n  arrayToBase64,\r\n  compareOptionsWithDefaults,\r\n  objectsDiff,\r\n  forInRecursive,\r\n  enquoteString,\r\n  unquoteString,\r\n  getBrowser,\r\n  shotOpen,\r\n  shotDownload,\r\n  copySubArrays,\r\n  shallowCloneNode,\r\n  correctSelectorIdentifier,\r\n  getFileExtension,\r\n  splitFileName,\r\n  download,\r\n  concatTypedArraysUnsafe,\r\n  mergeTypedArraysUnsafe\r\n}\r\n",
		"import EventDispatcher from './EventDispatcher'\r\n\r\nexport default class JobHandle extends EventDispatcher {\r\n  constructor() {\r\n    super()\r\n    this._shouldCancel = false\r\n  }\r\n\r\n  cancel() {\r\n    this._shouldCancel = true\r\n    this.dispatchEvent({ type: 'cancel' })\r\n  }\r\n\r\n  shouldCancel() {\r\n    return this._shouldCancel\r\n  }\r\n\r\n  // slaves use this to notify master about their events\r\n  // master routes these notifications to a single event slot\r\n  notify(event) {\r\n    this.dispatchEvent({ type: 'notification', slaveEvent: event })\r\n  }\r\n}\r\n",
		"import utils from './utils'\r\nimport EventDispatcher from './utils/EventDispatcher'\r\nimport { isEmpty, isString, get, set, merge, cloneDeep, filter } from 'lodash'\r\n\r\nconst VERSION = 0\r\n\r\n// ----------------------------------------------------------------------------\r\n// DEFAULT SETTINGS\r\n// ----------------------------------------------------------------------------\r\n\r\n/**\r\n * Polygonal complexity settings.\r\n *\r\n * @typedef PolyComplexity\r\n * @property {number} poor\r\n * @property {number} low\r\n * @property {number} medium\r\n * @property {number} high\r\n * @property {number} ultra\r\n */\r\n\r\n/**\r\n * @alias SettingsObject\r\n * @namespace\r\n */\r\nconst defaults = {\r\n  /**\r\n   * Default options for all available modes.\r\n   * Use {@link Mode.id} as a dictionary key to access mode options.\r\n   *\r\n   * Usually you don't need to override these settings. You may specify mode options as a parameter during\r\n   * {@link Mode} construction.\r\n   *\r\n   * @memberof SettingsObject#\r\n   * @type {Object.<string, object>}\r\n   *\r\n   * @property {LinesModeOptions} LN - Lines mode options.\r\n   * @property {LicoriceModeOptions} LC - Licorice mode options.\r\n   * @property {BallsAndSticksModeOptions} BS - Balls and Sticks mode options.\r\n   * @property {VanDerWaalsModeOptions} VW - Van der Waals mode options.\r\n   * @property {TraceModeOptions} TR - Trace mode options.\r\n   * @property {TubeModeOptions} TU - Tube mode options.\r\n   * @property {CartoonModeOptions} CA - Cartoon mode options.\r\n   * @property {QuickSurfaceModeOptions} QS - Contact Surface mode options.\r\n   * @property {IsoSurfaceSASModeOptions} SA - Solvent Accessible Surface mode options.\r\n   * @property {IsoSurfaceSESModeOptions} SE - Solvent Excluded Surface mode options.\r\n   * @property {ContactSurfaceModeOptions} CS - Contact Surface mode options.\r\n   * @property {TextModeOptions} TX - Text mode options.\r\n   * @property {VolumeDensityModeOptions} VD - Volume Density mode options.\r\n   */\r\n  modes: {\r\n    // ----------------------------------------------------------------------------\r\n    // BALLS AND STICKS\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Balls and Sticks mode options.\r\n     *\r\n     * @typedef BallsAndSticksModeOptions\r\n     *\r\n     * @property {number} atom - Sphere radius as a fraction of Van der Waals atom radius.\r\n     * @property {number} bond - Cylinder radius in angstroms.\r\n     * @property {number} space - Fraction of the space around one cylinder. Zero means that cylinder fills all\r\n     *   available space.\r\n     * @property {boolean} multibond - Toggles rendering of multiple ordered bonds.\r\n     * @property {number} aromrad - Minor radius of a torus for aromatic loops.\r\n     * @property {boolean} showarom - Toggles rendering of aromatic loops.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    BS: {\r\n      atom: 0.23,\r\n      bond: 0.15,\r\n      space: 0.5,\r\n      multibond: true,\r\n      aromrad: 0.1,\r\n      showarom: true,\r\n      polyComplexity: {\r\n        poor: 3,\r\n        low: 4,\r\n        medium: 6,\r\n        high: 12,\r\n        ultra: 32\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // VAN DER WAALS\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Van der Waals mode options.\r\n     *\r\n     * @typedef VanDerWaalsModeOptions\r\n     *\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    VW: {\r\n      polyComplexity: {\r\n        poor: 4,\r\n        low: 6,\r\n        medium: 8,\r\n        high: 16,\r\n        ultra: 32\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // LINES\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Lines mode options.\r\n     *\r\n     * @typedef LinesModeOptions\r\n     *\r\n     * @property {boolean} multibond - Flag, that toggles rendering of multiple ordered bonds.\r\n     * @property {boolean} showarom - Flag, that toggles rendering of aromatic loops.\r\n     * @property {number} offsarom - Offset between bonds and aromatic cycle.\r\n     * @property {number} chunkarom - Number of pieces in a-loop arc, corresponding to atom.\r\n     * @property {number} atom - Collision radius for atoms picking.\r\n     * @property {number} lineWidth - Line width in pixels (not used in thin lines).\r\n     */\r\n    LN: {\r\n      multibond: true,\r\n      showarom: true,\r\n      offsarom: 0.2,\r\n      chunkarom: 10,\r\n      atom: 0.23,\r\n      lineWidth: 2\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // LICORICE\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Licorice mode options.\r\n     *\r\n     * @typedef LicoriceModeOptions\r\n     *\r\n     * @property {number} bond - Bond cylinder radius.\r\n     * @property {number} space - Fraction of the space around one cylinder. Zero means that cylinder fills all\r\n     *   available space.\r\n     * @property {boolean} multibond - Flag, that toggles rendering of multiple ordered bonds.\r\n     * @property {number} aromrad - Minor radius of a torus for aromatic loops.\r\n     * @property {boolean} showarom - Flag, that toggles rendering of aromatic loops.\r\n     * @property {PolyComplexity} polyComplexity - Poly complexity values for render modes.\r\n     */\r\n    LC: {\r\n      bond: 0.2,\r\n      space: 0.0,\r\n      multibond: true,\r\n      aromrad: 0.1,\r\n      showarom: true,\r\n      polyComplexity: {\r\n        poor: 3,\r\n        low: 4,\r\n        medium: 6,\r\n        high: 12,\r\n        ultra: 32\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // SURFACE SAS\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Solvent Accessible Surface mode options.\r\n     *\r\n     * @typedef IsoSurfaceSASModeOptions\r\n     *\r\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\r\n     * @property {number} probeRadius - Radius of the probe.\r\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\r\n     *   Empty string means whole surface is visible.\r\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    SA: {\r\n      zClip: false,\r\n      probeRadius: 1.5,\r\n      subset: '',\r\n      wireframe: false,\r\n      polyComplexity: {\r\n        poor: 6,\r\n        low: 8,\r\n        medium: 16,\r\n        high: 30,\r\n        ultra: 60\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // SURFACE SES\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Solvent Excluded Surface mode options.\r\n     *\r\n     * @typedef IsoSurfaceSESModeOptions\r\n     *\r\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\r\n     * @property {number} probeRadius - Radius of the probe.\r\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\r\n     *   Empty string means whole surface is visible.\r\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    SE: {\r\n      zClip: false,\r\n      probeRadius: 1.5,\r\n      subset: '',\r\n      wireframe: false,\r\n      polyComplexity: {\r\n        poor: 6,\r\n        low: 8,\r\n        medium: 16,\r\n        high: 30,\r\n        ultra: 60\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // QUICK SURFACE\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Quick Surface mode options.\r\n     *\r\n     * @typedef QuickSurfaceModeOptions\r\n     *\r\n     * @property {number} isoValue - Isovalue of the surface to extract.\r\n     * @property {number} scale - Radius scale for the surface being built.\r\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\r\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\r\n     *   Empty string means whole surface is visible.\r\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\r\n     * @property {PolyComplexity} gaussLim - Gauss lim for coloring the bigger the value, the smoother our colors are.\r\n     * @property {PolyComplexity} gridSpacing - Poly complexity values for render modes. In this case the value\r\n     *   corresponds to the grid density.\r\n     */\r\n    QS: {\r\n      isoValue: 0.5,\r\n      gaussLim: {\r\n        poor: 1.5,\r\n        low: 2.0,\r\n        medium: 2.5,\r\n        high: 3.0,\r\n        ultra: 4.0\r\n      },\r\n      scale: 1.0,\r\n      wireframe: false,\r\n      gridSpacing: {\r\n        poor: 2,\r\n        low: 1.5,\r\n        medium: 1,\r\n        high: 0.5,\r\n        ultra: 0.25\r\n      },\r\n      subset: '',\r\n      zClip: false\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // CONTACT SURFACE\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Contact Surface mode options.\r\n     *\r\n     * @typedef ContactSurfaceModeOptions\r\n     *\r\n     * @property {number} isoValue - Isovalue of the surface to extract.\r\n     * @property {number} probeRadius - Probe radius.\r\n     * @property {number} probePositions\r\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\r\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\r\n     *   Empty string means whole surface is visible.\r\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\r\n     * @property {PolyComplexity} polyComplexity - Radius scale for the surface being built.\r\n     *   Poly complexity values for render modes. In this case the value corresponds to the grid density.\r\n     */\r\n    CS: {\r\n      probeRadius: 1.4,\r\n      isoValue: 1.5,\r\n      wireframe: false,\r\n      probePositions: 30,\r\n      polyComplexity: {\r\n        poor: 0.5,\r\n        low: 1.0,\r\n        medium: 1.5,\r\n        high: 1.75,\r\n        ultra: 2.0\r\n      },\r\n      subset: '',\r\n      zClip: false\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // TRACE\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Trace mode options.\r\n     *\r\n     * @typedef TraceModeOptions\r\n     *\r\n     * @property {number} radius - Cylinder radius.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    TR: {\r\n      radius: 0.3,\r\n      polyComplexity: {\r\n        poor: 12,\r\n        low: 16,\r\n        medium: 32,\r\n        high: 64,\r\n        ultra: 64\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // TUBE\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Tube mode options.\r\n     *\r\n     * @typedef TubeModeOptions\r\n     *\r\n     * @property {number} radius - Cylinder radius.\r\n     * @property {number} tension - Tension for interpolation.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     * @property {number} heightSegmentsRatio - Poly complexity multiplier for height segments.\r\n     */\r\n    TU: {\r\n      radius: 0.3,\r\n      heightSegmentsRatio: 1.5,\r\n      tension: -0.7,\r\n      polyComplexity: {\r\n        poor: 4,\r\n        low: 6,\r\n        medium: 10,\r\n        high: 18,\r\n        ultra: 34\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // CARTOON\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Cartoon mode options.\r\n     *\r\n     * @typedef CartoonModeOptions\r\n     *\r\n     * @property {number} radius - Standard tube radius.\r\n     * @property {number} depth - Height of the secondary structure ribbon.\r\n     * @property {number} tension - Tension for interpolation.\r\n     * @proprety {object} ss - Secondary structure parameters.\r\n     * @proprety {object} ss.helix - Options for helices render.\r\n     * @proprety {number} ss.helix.width - Width of the secondary structure ribbon.\r\n     * @proprety {number} ss.helix.arrow - Secondary structure's arrow width.\r\n     * @proprety {object} ss.strand - Options for strands render.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     * polyComplexity must be even for producing symmetric arrows.\r\n     * @property {number} heightSegmentsRatio - Poly complexity multiplier for height segments.\r\n     */\r\n    CA: {\r\n      radius: 0.3,\r\n      depth: 0.25,\r\n      ss: {\r\n        helix: {\r\n          width: 1.0,\r\n          arrow: 2.0\r\n        },\r\n        strand: {\r\n          width: 1.0,\r\n          arrow: 2.0\r\n        }\r\n      },\r\n      heightSegmentsRatio: 1.5,\r\n      tension: -0.7,\r\n      polyComplexity: {\r\n        poor: 4,\r\n        low: 6,\r\n        medium: 10,\r\n        high: 18,\r\n        ultra: 34\r\n      }\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // TEXT\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Text mode options.\r\n     *\r\n     * @typedef TextModeOptions\r\n     *\r\n     * @property {string} template - Format string for building output text.\r\n     * @property {string} horizontalAlign - Text alignment ('left', 'right', 'center').\r\n     * @property {string} verticalAlign - Vertical text box alignment ('top', 'bottom', 'middle').\r\n     * @property {number} dx - Text offset x in angstroms.\r\n     * @property {number} dy - Text offset y in angstroms.\r\n     * @property {number} dz - Text offset z in angstroms.\r\n     * @property {string} fg - Color rule for foreground.\r\n     * @property {string} bg - Color rule for background.\r\n     * @property {boolean} showBg - Flag, that toggles background rendering.\r\n     *\r\n     */\r\n    TX: {\r\n      template: '{{Chain}}.{{Residue}}{{Sequence}}.{{Name}}',\r\n      horizontalAlign: 'center',\r\n      verticalAlign: 'middle',\r\n      dx: 0,\r\n      dy: 0,\r\n      dz: 1,\r\n      fg: 'none',\r\n      bg: '0x202020',\r\n      showBg: true\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // VOLUME DENSITY\r\n    // ----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Volume density mode options.\r\n     *\r\n     * @typedef VolumeDensityModeOptions\r\n     *\r\n     * @property {number} kSigma - Noise threshold coefficient.\r\n     * @property {boolean} frame - flag, that turns on box frame painting.\r\n     * @property {boolean} isoMode - flag, that turns on IsoSurface mode instead of Volume Rendering.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    VD: {\r\n      kSigma: 1.0,\r\n      kSigmaMed: 2.0,\r\n      kSigmaMax: 4.0,\r\n      frame: true,\r\n      isoMode: false,\r\n      polyComplexity: {\r\n        poor: 2,\r\n        low: 3,\r\n        medium: 4,\r\n        high: 8,\r\n        ultra: 10\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Default options for all available colorers.\r\n   * Use {@link Colorer.id} as a dictionary key to access colorer options.\r\n   *\r\n   * Usually you don't need to override these settings. You may specify colorer options as a parameter during\r\n   * {@link Colorer} construction.\r\n   *\r\n   * Not all colorers have options.\r\n   *\r\n   * @memberof SettingsObject#\r\n   * @type {Object.<string, object>}\r\n   *\r\n   * @property {ElementColorerOptions} EL - Element colorer options.\r\n   * @property {SequenceColorerOptions} SQ - Sequence colorer options.\r\n   * @property {MoleculeColorerOptions} MO - Molecule colorer options.\r\n   * @property {UniformColorerOptions} UN - Uniform colorer options.\r\n   * @property {ConditionalColorerOptions} CO - Conditional colorer options.\r\n   * @property {TemperatureColorerOptions} TM - Temperature colorer options.\r\n   * @property {OccupancyColorerOptions} OC - Occupancy colorer options.\r\n   * @property {HydrophobicityColorerOptions} HY - Hydrophobicity colorer options.\r\n   */\r\n  colorers: {\r\n    /**\r\n     * Element colorer options.\r\n     *\r\n     * @typedef ElementColorerOptions\r\n     *\r\n     * @property {number} carbon - Carbon color or -1 to use default.\r\n     */\r\n    EL: {\r\n      carbon: -1\r\n    },\r\n\r\n    /**\r\n     * Uniform colorer options.\r\n     *\r\n     * @typedef UniformColorerOptions\r\n     *\r\n     * @property {number} color - Single color to paint with.\r\n     */\r\n    UN: {\r\n      color: 0xffffff\r\n    },\r\n\r\n    /**\r\n     * Conditional colorer options.\r\n     *\r\n     * @typedef ConditionalColorerOptions\r\n     *\r\n     * @property {string} subset - Selector string.\r\n     * @property {number} color - Color of selected atoms.\r\n     * @property {number} baseColor - Color of other atoms.\r\n     */\r\n    CO: {\r\n      subset: 'charged',\r\n      color: 0xff0000,\r\n      baseColor: 0xffffff\r\n    },\r\n\r\n    /**\r\n     * Carbon colorer options.\r\n     *\r\n     * @typedef CarbonColorerOptions\r\n     *\r\n     * @property {number} color - Single color to paint carbons\r\n     * @property {number} factor - Color factor for not carbon atoms.\r\n     */\r\n    CB: {\r\n      color: 0x909090,\r\n      factor: 0.6\r\n    },\r\n\r\n    /**\r\n     * Sequence colorer options.\r\n     *\r\n     * @typedef SequenceColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     */\r\n    SQ: {\r\n      gradient: 'rainbow'\r\n    },\r\n\r\n    /**\r\n     * Temperature colorer options.\r\n     *\r\n     * @typedef TemperatureColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     * @property {number} min - Minimal temperature.\r\n     * @property {number} max - Maximal temperature.\r\n     */\r\n    TM: {\r\n      gradient: 'temp',\r\n      min: 5,\r\n      max: 40\r\n    },\r\n\r\n    /**\r\n     * Occupancy colorer options.\r\n     *\r\n     * @typedef OccupancyColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     */\r\n    OC: {\r\n      gradient: 'reds'\r\n    },\r\n\r\n    /**\r\n     * Hydrophobicity colorer options.\r\n     *\r\n     * @typedef HydrophobicityColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     */\r\n    HY: {\r\n      gradient: 'blue-red'\r\n    },\r\n\r\n    /**\r\n     * Molecule colorer options.\r\n     *\r\n     * @typedef MoleculeColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     */\r\n    MO: {\r\n      gradient: 'rainbow'\r\n    }\r\n  },\r\n\r\n  /*\r\n   * Use antialiasing in WebGL.\r\n   * @type {boolean}\r\n   */\r\n  antialias: true,\r\n\r\n  /*\r\n   * Camera field of view in degrees.\r\n   * @type {number}\r\n   */\r\n  camFov: 45.0,\r\n\r\n  /*\r\n   * Camera near plane distance.\r\n   * @type {number}\r\n   */\r\n  camNear: 0.5,\r\n\r\n  /*\r\n   * Camera far plane distance.\r\n   * @type {number}\r\n   */\r\n  camFar: 100.0,\r\n\r\n  camDistance: 2.5,\r\n\r\n  radiusToFit: 1.0,\r\n\r\n  /**\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  fogNearFactor: 0.5, // [0, 1]\r\n\r\n  /**\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  fogFarFactor: 1, // [0, 1]\r\n  fogAlpha: 1.0,\r\n  fogColor: 0x000000,\r\n  fogColorEnable: false,\r\n\r\n  /**\r\n   * Palette used for molecule coloring.\r\n   * @type {string}\r\n   */\r\n  palette: 'JM',\r\n\r\n  /*\r\n   * Geometry resolution.\r\n   * @type {string}\r\n   */\r\n  resolution: 'medium',\r\n\r\n  autoResolution: false /* true */,\r\n\r\n  autoPreset: true,\r\n\r\n  preset: 'default', // TODO: remove 'preset' from settings, implement autodetection\r\n\r\n  presets: {\r\n    // Default\r\n    default: [\r\n      {\r\n        mode: 'BS',\r\n        colorer: 'EL',\r\n        selector: 'all',\r\n        material: 'SF'\r\n      }\r\n    ],\r\n\r\n    empty: [],\r\n\r\n    // Wireframe\r\n    wire: [\r\n      {\r\n        mode: 'LN',\r\n        colorer: 'EL',\r\n        selector: 'all',\r\n        material: 'SF'\r\n      }\r\n    ],\r\n\r\n    // Small molecules\r\n    small: [\r\n      {\r\n        mode: 'BS',\r\n        colorer: 'EL',\r\n        selector: 'all',\r\n        material: 'SF'\r\n      }\r\n    ],\r\n\r\n    // Proteins, nucleic acids etc.\r\n    macro: [\r\n      {\r\n        mode: 'CA',\r\n        colorer: 'SS',\r\n        selector: 'not hetatm',\r\n        material: 'SF'\r\n      },\r\n      {\r\n        mode: 'BS',\r\n        colorer: 'EL',\r\n        selector: 'hetatm and not water',\r\n        material: 'SF'\r\n      }\r\n    ]\r\n  },\r\n\r\n  objects: {\r\n    line: {\r\n      color: 0xffffffff,\r\n      dashSize: 0.3,\r\n      gapSize: 0.05\r\n    }\r\n  },\r\n\r\n  // ----------------------------------------------------------------------------\r\n\r\n  bg: {\r\n    color: 0x202020,\r\n    transparent: false\r\n  },\r\n\r\n  draft: {\r\n    clipPlane: false,\r\n    clipPlaneFactor: 0.5,\r\n    clipPlaneSpeed: 0.00003\r\n  },\r\n\r\n  /*\r\n   * Separate group for plugins.\r\n   * Each plugin handles its field by itself.\r\n   */\r\n  plugins: {},\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  axes: true,\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  fog: true,\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  fps: true,\r\n\r\n  /**\r\n   * Switch using of z-sprites for sphere and cylinder geometry\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  zSprites: true,\r\n\r\n  isoSurfaceFakeOpacity: true,\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  suspendRender: true,\r\n\r\n  nowater: false,\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  autobuild: true,\r\n\r\n  /**\r\n   * Anti-aliasing.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  fxaa: true,\r\n  /**\r\n   * Outline depths\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  outline: {\r\n    on: false,\r\n    color: 0x000000,\r\n    threshold: 0.1,\r\n    thickness: 1\r\n  },\r\n\r\n  /**\r\n   * Ambient Occlusion special effect.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  ao: false,\r\n\r\n  /**\r\n   * Shadows options.\r\n   *\r\n   * @property {boolean} shadowMap - enable/disable.\r\n   * @property {string} basic/percentage-closer filtering/non-uniform randomizing pcf.\r\n   * @property {number} radius for percentage-closer filtering.\r\n   */\r\n  shadow: {\r\n    on: false,\r\n    type: 'random' /* basic, pcf, random */,\r\n    radius: 1.0\r\n  },\r\n\r\n  /**\r\n   * Auto-rotation with constant speed.\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  autoRotation: 0.0,\r\n\r\n  /**\r\n   * Set maximum fps for animation.\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  maxfps: 30,\r\n\r\n  /**\r\n   * Set fbx output precision.\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  fbxprec: 4,\r\n\r\n  /**\r\n   * Auto-rotation axis.\r\n   *\r\n   * - true:  complex auto-rotation is about vertical axis\r\n   * - false: rotation axis is defined by last user rotation\r\n   *\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  autoRotationAxisFixed: true,\r\n\r\n  /**\r\n   * Enable zooming with mouse wheel or pinch gesture.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  zooming: true,\r\n\r\n  /**\r\n   * Enable picking atoms & residues with left mouse button or touch.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  picking: true,\r\n\r\n  /**\r\n   * Set picking mode ('atom', 'residue', 'chain', 'molecule').\r\n   * @type {string}\r\n   * @instance\r\n   */\r\n  pick: 'atom',\r\n\r\n  /**\r\n   * Make \"component\" and \"fragment\" editing modes available.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  editing: false,\r\n\r\n  /**\r\n   * Detect aromatic loops.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  aromatic: false,\r\n\r\n  /**\r\n   * Load only one biological unit from all those described in PDB file.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  singleUnit: true,\r\n\r\n  /**\r\n   * Set stereo mode ('NONE', 'SIMPLE', 'DISTORTED', 'ANAGLYPH', 'WEBVR').\r\n   * @type {string}\r\n   * @instance\r\n   */\r\n  stereo: 'NONE',\r\n\r\n  /**\r\n   * Enable smooth transition between views\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  interpolateViews: true,\r\n\r\n  /**\r\n   * Set transparency mode ('standard', 'prepass').\r\n   * @type {string}\r\n   * @instance\r\n   */\r\n  transparency: 'prepass',\r\n\r\n  /**\r\n   * Mouse translation speed.\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  translationSpeed: 2,\r\n\r\n  debug: {\r\n    example: 3.5,\r\n    text: 'hello!',\r\n    good: true,\r\n    ssaoKernelRadius: 0.7,\r\n    ssaoFactor: 0.7,\r\n    stereoBarrel: 0.25\r\n  },\r\n  use: {\r\n    multiFile: false\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// SETTINGS CLASS\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction Settings() {\r\n  EventDispatcher.call(this)\r\n\r\n  this.old = null\r\n  this.now = {}\r\n  this._changed = {}\r\n\r\n  this.reset()\r\n}\r\n\r\nutils.deriveClass(Settings, EventDispatcher, {\r\n  defaults,\r\n\r\n  set(path, value) {\r\n    if (isString(path)) {\r\n      const oldValue = get(this.now, path)\r\n      if (oldValue !== value) {\r\n        set(this.now, path, value)\r\n        this._notifyChange(path, value)\r\n      }\r\n    } else {\r\n      const diff = utils.objectsDiff(path, this.now)\r\n      if (!isEmpty(diff)) {\r\n        merge(this.now, diff)\r\n        this._notifyChanges(diff)\r\n      }\r\n    }\r\n  },\r\n\r\n  get(path, defaultValue) {\r\n    return get(this.now, path, defaultValue)\r\n  },\r\n\r\n  reset() {\r\n    const diff = utils.objectsDiff(defaults, this.now)\r\n    this.now = cloneDeep(defaults)\r\n    this.old = null\r\n    this._notifyChanges(diff)\r\n    this._changed = {}\r\n  },\r\n\r\n  checkpoint() {\r\n    this.old = cloneDeep(this.now)\r\n    this._changed = {}\r\n  },\r\n\r\n  _notifyChange(path, value) {\r\n    this._changed[path] = true\r\n    this.dispatchEvent({ type: `change:${path}`, value })\r\n  },\r\n\r\n  _notifyChanges(diff) {\r\n    utils.forInRecursive(diff, (deepValue, deepPath) => {\r\n      this._notifyChange(deepPath, deepValue)\r\n    })\r\n  },\r\n\r\n  changed() {\r\n    if (!this.old) {\r\n      return []\r\n    }\r\n    const { old, now } = this\r\n    const keys = filter(\r\n      Object.keys(this._changed),\r\n      (key) => get(old, key) !== get(now, key)\r\n    )\r\n    return keys\r\n  },\r\n\r\n  applyDiffs(diffs) {\r\n    if (diffs.hasOwnProperty('VERSION') && diffs.VERSION !== VERSION) {\r\n      throw new Error('Settings version does not match!')\r\n    }\r\n    // VERSION shouldn't be presented inside settings structure\r\n    delete diffs.VERSION\r\n    this.reset()\r\n    this.set(diffs)\r\n  },\r\n\r\n  getDiffs(versioned) {\r\n    const diffs = utils.objectsDiff(this.now, defaults)\r\n    if (versioned) {\r\n      diffs.VERSION = VERSION\r\n    }\r\n    return diffs\r\n  },\r\n\r\n  setPluginOpts(plugin, opts) {\r\n    defaults.plugins[plugin] = cloneDeep(opts)\r\n    this.now.plugins[plugin] = cloneDeep(opts)\r\n  }\r\n})\r\n\r\nexport default new Settings()\r\n",
		"import settings from './settings'\r\nimport utils from './utils'\r\nimport logger from './utils/logger'\r\nimport { isString, set, get, isArray, isEmpty } from 'lodash'\r\n\r\nlet repIndex = 0\r\n\r\nfunction asBoolean(value) {\r\n  return !(\r\n    !value ||\r\n    value === '0' ||\r\n    (isString(value) && value.toLowerCase() === 'false')\r\n  )\r\n}\r\n\r\nconst adapters = {\r\n  string: String,\r\n  number: Number,\r\n  boolean: asBoolean\r\n}\r\n\r\n// Level 1 assignment symbol\r\nconst cL1Ass = '='\r\n\r\nconst cOptsSep = '!'\r\n// Level 2 (options) assignment symbol\r\nconst cL2Ass = ':'\r\n// Level 2 (options) separator symbol\r\nconst cLSep = ','\r\n\r\nconst cCommonIgnoreSymbols = '$;@/?'\r\n/**\r\n * We may (and should) leave as is for better readability:\r\n *\r\n *        $ , ; : @ / ?\r\n */\r\n/**\r\n * Generate regular expression for symbols excluded for first level encryption\r\n */\r\nfunction getLevel1ExcludedExpr() {\r\n  const cLevel1Ignores = ':,'\r\n  return utils.generateRegExp(cCommonIgnoreSymbols + cLevel1Ignores)\r\n}\r\n\r\n/**\r\n * Generate regular expression for symbols excluded for first level encryption\r\n * (options, etc, ..)\r\n */\r\nfunction getLevel2ExcludedExpr() {\r\n  const cLevel2Ignores = ' '\r\n  return utils.generateRegExp(cCommonIgnoreSymbols + cLevel2Ignores)\r\n}\r\n\r\nconst cL1ExclExpr = getLevel1ExcludedExpr()\r\nfunction encodeQueryComponentL1(value) {\r\n  return utils.encodeQueryComponent(value, cL1ExclExpr)\r\n}\r\n\r\nconst cL2ExclExpr = getLevel2ExcludedExpr()\r\nfunction encodeQueryComponentL2(value) {\r\n  return utils.encodeQueryComponent(value, cL2ExclExpr)\r\n}\r\n\r\nfunction ensureRepList(opts) {\r\n  let { reps } = opts\r\n  if (!reps) {\r\n    const { presets } = settings.now\r\n    let preset = opts.preset || settings.now.preset\r\n    reps = presets[preset]\r\n    if (!reps) {\r\n      logger.warn(`Unknown preset \"${preset}\"`)\r\n      ;[preset] = Object.keys(presets)\r\n      reps = presets[preset] // fall back to any preset\r\n    }\r\n    opts.preset = preset\r\n    opts.reps = utils.deriveDeep(reps, true)\r\n  }\r\n}\r\n\r\nfunction ensureRepAssign(opts, prop, value) {\r\n  ensureRepList(opts)\r\n  const rep = opts.reps[repIndex]\r\n  // prop specified twice therefore start new rep by cloning the current\r\n  if (rep.hasOwnProperty(prop)) {\r\n    repIndex = opts.reps.length\r\n    opts.reps[repIndex] = utils.deriveDeep(rep, true)\r\n  }\r\n  if (value !== undefined) {\r\n    opts.reps[repIndex][prop] = value\r\n  }\r\n}\r\n\r\nfunction addObject(opts, params, options) {\r\n  if (opts._objects === undefined) {\r\n    opts._objects = []\r\n  }\r\n\r\n  const [type, newOpts] = options\r\n  const newObj = {\r\n    type,\r\n    params\r\n  }\r\n\r\n  if (newOpts !== undefined) {\r\n    newObj.opts = newOpts\r\n  }\r\n\r\n  opts._objects[opts._objects.length] = newObj\r\n}\r\n\r\nfunction parseParams(str, params) {\r\n  const sep = str.indexOf(',')\r\n  if (sep >= 0) {\r\n    params.push(str.substr(sep + 1).split(','))\r\n    return str.substr(0, sep)\r\n  }\r\n  // keep this untouched if no params were extracted\r\n  return str\r\n}\r\n\r\nfunction extractArgs(input, defaultsDict, params) {\r\n  if (input) {\r\n    const bang = input.indexOf(cOptsSep)\r\n    const inputVal = parseParams(\r\n      input.substr(0, bang >= 0 ? bang : undefined),\r\n      params\r\n    )\r\n    if (bang >= 0) {\r\n      const args = input.substr(bang + 1).split(cLSep)\r\n      input = inputVal\r\n      if (defaultsDict) {\r\n        const defaults = defaultsDict[input]\r\n        const opts = utils.deriveDeep(defaults, true)\r\n        args.forEach((arg) => {\r\n          const pair = arg.split(cL2Ass, 2)\r\n          const key = decodeURIComponent(pair[0])\r\n          const value = decodeURIComponent(pair[1])\r\n          const adapter = adapters[typeof get(defaults, key)]\r\n          if (adapter) {\r\n            set(opts, key, adapter(value))\r\n          } else {\r\n            logger.warn(`Unknown argument \"${key}\" for option \"${input}\"`)\r\n          }\r\n        })\r\n        if (Object.keys(opts).length > 0) {\r\n          input = [input, opts]\r\n        }\r\n      }\r\n    } else {\r\n      input = inputVal\r\n    }\r\n  }\r\n  return input\r\n}\r\n\r\nconst actions = {\r\n  l: 'load',\r\n  load: String,\r\n  t: 'type',\r\n  type: String,\r\n  v: 'view',\r\n  view: String,\r\n  u: 'unit',\r\n  unit: Number,\r\n  menu: asBoolean,\r\n\r\n  // Commands\r\n\r\n  o: 'object',\r\n  object(value, opts) {\r\n    const params = []\r\n    let options = extractArgs(value, settings.defaults.objects, params)\r\n    if (!Array.isArray(options)) {\r\n      options = [options]\r\n    }\r\n    addObject(opts, params[0], options)\r\n  },\r\n\r\n  p: 'preset',\r\n  preset(value, opts) {\r\n    opts.preset = value\r\n    opts.reps = null\r\n    ensureRepList(opts)\r\n  },\r\n\r\n  r: 'rep',\r\n  rep(value, opts) {\r\n    ensureRepList(opts)\r\n    repIndex = Number(value)\r\n    // clamp the index to one greater than the last\r\n    repIndex =\r\n      repIndex <= opts.reps.length\r\n        ? repIndex < 0\r\n          ? 0\r\n          : repIndex\r\n        : opts.reps.length\r\n    // create a new rep if it is adjacent to the existing ones\r\n    if (repIndex === opts.reps.length) {\r\n      // if there is no rep to derive from, derive from the first rep of the default\r\n      opts.reps[repIndex] =\r\n        repIndex > 0\r\n          ? utils.deriveDeep(opts.reps[repIndex - 1], true)\r\n          : utils.deriveDeep(settings.defaults.presets.default[0], true)\r\n    }\r\n  },\r\n\r\n  s: 'select',\r\n  select(value, opts) {\r\n    ensureRepAssign(opts, 'selector', value)\r\n  },\r\n\r\n  m: 'mode',\r\n  mode(value, opts) {\r\n    ensureRepAssign(opts, 'mode', extractArgs(value, settings.defaults.modes))\r\n  },\r\n\r\n  c: 'color',\r\n  color(value, opts) {\r\n    ensureRepAssign(\r\n      opts,\r\n      'colorer',\r\n      extractArgs(value, settings.defaults.colorers)\r\n    )\r\n  },\r\n\r\n  mt: 'material',\r\n  material(value, opts) {\r\n    ensureRepAssign(\r\n      opts,\r\n      'material',\r\n      extractArgs(value, settings.defaults.materials)\r\n    )\r\n  },\r\n\r\n  dup(value, opts) {\r\n    ensureRepList(opts)\r\n    const { reps } = opts\r\n    const rep = reps[repIndex]\r\n    repIndex = reps.length\r\n    reps[repIndex] = utils.deriveDeep(rep, true)\r\n  },\r\n\r\n  // Settings shortcuts\r\n\r\n  ar: 'autoResolution'\r\n}\r\n\r\nfunction _fromArray(entries) {\r\n  repIndex = 0\r\n  const opts = {}\r\n  for (let i = 0, n = entries.length; i < n; ++i) {\r\n    const /** string[] */ entry = entries[i]\r\n    let /** string? */ key = entry[0]\r\n    const /** string? */ value = entry[1]\r\n    if (actions.hasOwnProperty(key)) {\r\n      let /** function|string? */ action = actions[key]\r\n      while (isString(action)) {\r\n        key = action\r\n        action = actions[key]\r\n      }\r\n      if (typeof action === 'function') {\r\n        const result = action(value, opts)\r\n        if (result !== undefined) opts[key] = result\r\n      }\r\n    } else {\r\n      const adapter = adapters[typeof get(settings.defaults, key)]\r\n      if (adapter) {\r\n        set(opts, `settings.${key}`, adapter(value))\r\n      } else {\r\n        logger.warn(`Unknown option \"${key}\"`)\r\n      }\r\n    }\r\n  }\r\n  return opts\r\n}\r\n\r\nfunction fromAttr(attr) {\r\n  return _fromArray(utils.getUrlParameters(`?${attr || ''}`))\r\n}\r\n\r\nfunction fromURL(url) {\r\n  return _fromArray(utils.getUrlParameters(url))\r\n}\r\n\r\nfunction _processOptsForURL(opts) {\r\n  const str = []\r\n  let i = 0\r\n  utils.forInRecursive(opts, (value, key) => {\r\n    str[i++] =\r\n      encodeQueryComponentL2(key) + cL2Ass + encodeQueryComponentL2(value)\r\n  })\r\n  return str.join(cLSep)\r\n}\r\n\r\nfunction _processArgsForURL(args) {\r\n  if (!isArray(args)) {\r\n    return args\r\n  }\r\n  if (args.length < 2) {\r\n    return args[0]\r\n  }\r\n  return `${args[0]}${cOptsSep}${_processOptsForURL(args[1])}`\r\n}\r\n\r\nfunction _processObjForURL(objOpts) {\r\n  if (!objOpts || !objOpts.type) {\r\n    return undefined\r\n  }\r\n  let res = objOpts.type\r\n  if (isArray(objOpts.params) && objOpts.params.length > 0) {\r\n    res += `,${objOpts.params.join(',')}`\r\n  }\r\n  if (objOpts.opts) {\r\n    res += cOptsSep + _processOptsForURL(objOpts.opts)\r\n  }\r\n  return res\r\n}\r\n\r\nfunction toURL(opts) {\r\n  const stringList = []\r\n  let idx = 0\r\n\r\n  function checkAndAdd(prefix, value) {\r\n    if (value !== null && value !== undefined) {\r\n      stringList[idx++] =\r\n        encodeQueryComponentL1(prefix) + cL1Ass + encodeQueryComponentL1(value)\r\n    }\r\n  }\r\n\r\n  function addReps(repList) {\r\n    if (!repList) {\r\n      return\r\n    }\r\n    for (let i = 0, n = repList.length; i < n; ++i) {\r\n      if (isEmpty(repList[i])) {\r\n        continue\r\n      }\r\n      checkAndAdd('r', i)\r\n      checkAndAdd('s', repList[i].selector)\r\n      checkAndAdd('m', _processArgsForURL(repList[i].mode))\r\n      checkAndAdd('c', _processArgsForURL(repList[i].colorer))\r\n      checkAndAdd('mt', _processArgsForURL(repList[i].material))\r\n    }\r\n  }\r\n\r\n  function addObjects(objList) {\r\n    if (!objList) {\r\n      return\r\n    }\r\n    for (let i = 0, n = objList.length; i < n; ++i) {\r\n      checkAndAdd('o', _processObjForURL(objList[i]))\r\n    }\r\n  }\r\n\r\n  checkAndAdd('l', opts.load)\r\n  checkAndAdd('u', opts.unit)\r\n  checkAndAdd('p', opts.preset)\r\n  addReps(opts.reps)\r\n  addObjects(opts._objects)\r\n\r\n  checkAndAdd('v', opts.view)\r\n\r\n  utils.forInRecursive(opts.settings, (value, key) => {\r\n    // I heard these lines in the whispers of the Gods\r\n    // Handle preset setting in reps\r\n    if (key === 'preset') {\r\n      return\r\n    }\r\n    checkAndAdd(key, value)\r\n  })\r\n\r\n  let url = ''\r\n  if (typeof window !== 'undefined') {\r\n    const { location } = window\r\n    url = `${location.protocol}//${location.host}${location.pathname}`\r\n  }\r\n  if (stringList.length > 0) {\r\n    url += `?${stringList.join('&')}`\r\n  }\r\n\r\n  return url\r\n}\r\n\r\nfunction _processOptsForScript(opts) {\r\n  const str = []\r\n  let i = 0\r\n  utils.forInRecursive(opts, (value, key) => {\r\n    str[i++] = `${key}=${utils.enquoteString(value)}`\r\n  })\r\n  return str.join(' ')\r\n}\r\n\r\nfunction _processArgsForScript(args) {\r\n  if (!isArray(args)) {\r\n    return args\r\n  }\r\n  if (args.length < 2) {\r\n    return args[0]\r\n  }\r\n  return `${args[0]} ${_processOptsForScript(args[1])}`\r\n}\r\n\r\nfunction _processObjForScript(objOpts) {\r\n  if (!objOpts || !objOpts.type) {\r\n    return undefined\r\n  }\r\n  let res = objOpts.type\r\n  if (isArray(objOpts.params) && objOpts.params.length > 0) {\r\n    res += ` ${objOpts.params.map(utils.enquoteString).join(' ')}`\r\n  }\r\n  if (objOpts.opts) {\r\n    res += ` ${_processOptsForScript(objOpts.opts)}`\r\n  }\r\n  return res\r\n}\r\n\r\nfunction _processRepsForScript(rep, index) {\r\n  const repString = []\r\n  let strIdx = 0\r\n  function localAdd(prefix, value) {\r\n    if (value !== null && value !== undefined) {\r\n      repString[strIdx++] = prefix + value\r\n    }\r\n  }\r\n  if (isEmpty(rep)) {\r\n    return null\r\n  }\r\n  localAdd('', index)\r\n  localAdd('s=', utils.enquoteString(rep.selector))\r\n  localAdd('m=', _processArgsForScript(rep.mode))\r\n  localAdd('c=', _processArgsForScript(rep.colorer))\r\n  localAdd('mt=', _processArgsForScript(rep.material))\r\n  return repString.join(' ')\r\n}\r\n\r\nfunction toScript(opts) {\r\n  const commandsList = []\r\n  let idx = 0\r\n  function checkAndAdd(command, value, saveQuotes) {\r\n    if (value !== null && value !== undefined) {\r\n      const quote = typeof value === 'string' && saveQuotes ? '\"' : ''\r\n      commandsList[idx++] = `${command} ${quote}${value}${quote}`.trim()\r\n    }\r\n  }\r\n\r\n  function addReps(repList) {\r\n    if (!repList) {\r\n      return\r\n    }\r\n\r\n    for (let i = 0, n = repList.length; i < n; ++i) {\r\n      checkAndAdd('rep', _processRepsForScript(repList[i], i))\r\n    }\r\n  }\r\n\r\n  function addObjects(objList) {\r\n    if (!objList) {\r\n      return\r\n    }\r\n    for (let i = 0, n = objList.length; i < n; ++i) {\r\n      checkAndAdd('', _processObjForScript(objList[i]))\r\n    }\r\n  }\r\n\r\n  checkAndAdd('set', 'autobuild false')\r\n  checkAndAdd('load', opts.load, true)\r\n  checkAndAdd('unit', opts.unit)\r\n  checkAndAdd('preset', opts.preset)\r\n  addReps(opts.reps)\r\n  addObjects(opts._objects)\r\n\r\n  utils.forInRecursive(opts.settings, (value, key) => {\r\n    // I heard these lines in the whispers of the Gods\r\n    // Handle preset setting in reps\r\n    if (key === 'preset') {\r\n      return\r\n    }\r\n    checkAndAdd(`set ${key}`, value, true)\r\n  })\r\n  checkAndAdd('view', opts.view)\r\n  checkAndAdd('set', 'autobuild true')\r\n  return commandsList.join('\\n')\r\n}\r\n\r\nexport default {\r\n  fromURL,\r\n  fromAttr,\r\n  adapters,\r\n  toURL,\r\n  toScript\r\n}\r\n",
		"export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}",
		"/**\r\n * Atom measurements.\r\n *\r\n * @param {Residue} residue    - (required) Residue containing the atom\r\n * @param {string} name        - (required) Name, unique in the residue\r\n * @param {Element} type       - (required) Chemical element reference\r\n * @param {Vector3} position - Registered coordinates\r\n *\r\n * @param {number} role        - Role of atom inside monomer: Lead and wing are particularity interesting\r\n * @param {boolean} het        - Non-standard residue indicator\r\n *\r\n * @param {number} serial      - Serial number, unique in the model\r\n * @param {string} location    - Alternative location indicator (usually space or A-Z)\r\n * @param {number} occupancy   - Occupancy percentage, from 0 to 1\r\n * @param {number} temperature - Temperature\r\n * @param {number} charge      - Charge\r\n *\r\n * @exports Atom\r\n * @constructor\r\n */\r\n\r\nclass Atom {\r\n  constructor(\r\n    residue,\r\n    name,\r\n    type,\r\n    position,\r\n    role,\r\n    het,\r\n    serial,\r\n    location,\r\n    occupancy,\r\n    temperature,\r\n    charge\r\n  ) {\r\n    this.index = -1\r\n    this.residue = residue\r\n    this.name = name\r\n    this.element = type\r\n    this.position = position\r\n    this.role = role\r\n    this.mask = 1 | 0\r\n\r\n    this.het = het\r\n\r\n    this.serial = serial\r\n    this.location = (location || ' ').charCodeAt(0)\r\n    this.occupancy = occupancy || 1\r\n    this.temperature = temperature\r\n    this.charge = charge\r\n    this.hydrogenCount = -1 // explicitly invalid\r\n    this.radicalCount = 0\r\n    this.valence = -1 // explicitly invalid\r\n\r\n    this.bonds = []\r\n\r\n    this.flags = 0x0000\r\n    if (type.name === 'H') {\r\n      this.flags |= Atom.Flags.HYDROGEN\r\n    } else if (type.name === 'C') {\r\n      this.flags |= Atom.Flags.CARBON\r\n    }\r\n  }\r\n\r\n  isHet() {\r\n    return this.het\r\n  }\r\n\r\n  isHydrogen() {\r\n    return this.element.number === 1\r\n  }\r\n\r\n  getVisualName() {\r\n    const { name } = this\r\n    if (name.length > 0) {\r\n      return name\r\n    }\r\n    return this.element.name.trim()\r\n  }\r\n\r\n  forEachBond(process) {\r\n    const { bonds } = this\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      process(bonds[i])\r\n    }\r\n  }\r\n\r\n  getFullName() {\r\n    let name = ''\r\n    if (this.residue !== null) {\r\n      if (this.residue._chain !== null) {\r\n        name += `${this.residue._chain.getName()}.`\r\n      }\r\n      name += `${this.residue._sequence}.`\r\n    }\r\n    name += this.name\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Enumeration of atom flag values.\r\n   *\r\n   * @enum {number}\r\n   * @readonly\r\n   */\r\n  static Flags = {\r\n    CARBON: 0x0001,\r\n    // OXYGEN: 0x0002,\r\n    // NITROGEN: 0x0004,\r\n    HYDROGEN: 0x0008,\r\n    /** Non-polar hydrogen (it is also a HYDROGEN) */\r\n    NONPOLARH: 0x1008\r\n  }\r\n}\r\n\r\nexport default Atom\r\n",
		"class Element {\r\n  constructor(number, name, fullName, weight, radius, radiusBonding, hValency) {\r\n    this.number = number\r\n    this.name = name\r\n    this.fullName = fullName\r\n    this.weight = weight\r\n    this.radius = radius\r\n    this.radiusBonding = radiusBonding\r\n    this.hydrogenValency = hValency\r\n  }\r\n\r\n  static Constants = {\r\n    /* eslint-disable no-magic-numbers */\r\n    U1: 1,\r\n    Lead: 2,\r\n    U2: 3,\r\n    Wing: 4,\r\n    U18: 18\r\n    /* eslint-enable no-magic-numbers */\r\n  }\r\n\r\n  static Role = {\r\n    /* eslint-disable no-magic-numbers */\r\n    N: Element.Constants.U1,\r\n    CA: Element.Constants.Lead,\r\n    C: Element.Constants.U2,\r\n    O: Element.Constants.Wing,\r\n    SG: Element.Constants.U18\r\n    /* eslint-enable no-magic-numbers */\r\n  }\r\n\r\n  // DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\n  static ByAtomicNumber = [\r\n    /* eslint-disable no-magic-numbers */\r\n    null,\r\n    new Element(1, 'H', 'Hydrogen', 1.008, 1.2, 0.23, [1]),\r\n    new Element(2, 'HE', 'Helium', 4.003, 1.4, 0.93, [0]),\r\n    new Element(3, 'LI', 'Lithium', 6.941, 1.82, 0.68, [1]),\r\n    new Element(4, 'BE', 'Beryllium', 9.012, 1.7, 0.35, [2]),\r\n    new Element(5, 'B', 'Boron', 10.81, 2.08, 0.83, [3]),\r\n    new Element(6, 'C', 'Carbon', 12.011, 1.95, 0.68, [4]),\r\n    new Element(7, 'N', 'Nitrogen', 14.007, 1.85, 0.68, [3, 5]),\r\n    new Element(8, 'O', 'Oxygen', 15.999, 1.7, 0.68, [2, 4]),\r\n    new Element(9, 'F', 'Fluorine', 18.998, 1.73, 0.64, [1]),\r\n    new Element(10, 'NE', 'Neon', 20.18, 1.54, 1.12, [0]),\r\n    new Element(11, 'NA', 'Sodium', 22.99, 2.27, 0.97, [1]),\r\n    new Element(12, 'MG', 'Magnesium', 24.305, 1.73, 1.1, [2]),\r\n    new Element(13, 'AL', 'Aluminum', 26.981, 2.05, 1.35, [3]),\r\n    new Element(14, 'SI', 'Silicon', 28.086, 2.1, 1.2, [4]),\r\n    new Element(15, 'P', 'Phosphorus', 30.974, 2.08, 0.75, [3, 5]),\r\n    new Element(16, 'S', 'Sulfur', 32.07, 2, 1.02, [2, 4, 6]),\r\n    new Element(17, 'CL', 'Chlorine', 35.453, 1.97, 0.99, [1, 3, 5, 7]),\r\n    new Element(18, 'AR', 'Argon', 39.948, 1.88, 1.57, [0]),\r\n    new Element(19, 'K', 'Potassium', 39.1, 2.75, 1.33, [1]),\r\n    new Element(20, 'CA', 'Calcium', 40.08, 1.973, 0.99, [2]),\r\n    new Element(21, 'SC', 'Scandium', 44.956, 1.7, 1.44, [0]),\r\n    new Element(22, 'TI', 'Titanium', 47.88, 1.7, 1.47, [0]),\r\n    new Element(23, 'V', 'Vanadium', 50.941, 1.7, 1.33, [0]),\r\n    new Element(24, 'CR', 'Chromium', 52, 1.7, 1.35, [0]),\r\n    new Element(25, 'MN', 'Manganese', 54.938, 1.7, 1.35, [0]),\r\n    new Element(26, 'FE', 'Iron', 55.847, 1.7, 1.34, [0]),\r\n    new Element(27, 'CO', 'Cobalt', 58.93, 1.7, 1.33, [0]),\r\n    new Element(28, 'NI', 'Nickel', 58.69, 1.63, 1.5, [0]),\r\n    new Element(29, 'CU', 'Copper', 63.55, 1.4, 1.52, [0]),\r\n    new Element(30, 'ZN', 'Zinc', 65.39, 1.39, 1.45, [0]),\r\n    new Element(31, 'GA', 'Gallium', 69.72, 1.87, 1.22, [3]),\r\n    new Element(32, 'GE', 'Germanium', 72.61, 1.7, 1.17, [4]),\r\n    new Element(33, 'AS', 'Arsenic', 74.92, 1.85, 1.21, [3, 5]),\r\n    new Element(34, 'SE', 'Selenium', 78.96, 1.9, 1.22, [2, 4, 6]),\r\n    new Element(35, 'BR', 'Bromine', 79.9, 2.1, 1.21, [1, 3, 5, 7]),\r\n    new Element(36, 'KR', 'Krypton', 83.8, 2.02, 1.91, [0]),\r\n    new Element(37, 'RB', 'Rubidium', 85.47, 1.7, 1.47, [1]),\r\n    new Element(38, 'SR', 'Strontium', 87.62, 1.7, 1.12, [2]),\r\n    new Element(39, 'Y', 'Yttrium', 88.91, 1.7, 1.78, [0]),\r\n    new Element(40, 'ZR', 'Zirconium', 91.22, 1.7, 1.56, [0]),\r\n    new Element(41, 'NB', 'Niobium', 92.91, 1.7, 1.48, [0]),\r\n    new Element(42, 'MO', 'Molybdenum', 95.94, 1.7, 1.47, [0]),\r\n    new Element(43, 'TC', 'Technetium', 98.91, 1.7, 1.35, [0]),\r\n    new Element(44, 'RU', 'Ruthenium', 101.07, 1.7, 1.4, [0]),\r\n    new Element(45, 'RH', 'Rhodium', 102.91, 1.7, 1.45, [0]),\r\n    new Element(46, 'PD', 'Palladium', 106.42, 1.63, 1.5, [0]),\r\n    new Element(47, 'AG', 'Silver', 107.87, 1.72, 1.59, [0]),\r\n    new Element(48, 'CD', 'Cadmium', 112.41, 1.58, 1.69, [0]),\r\n    new Element(49, 'IN', 'Indium', 114.82, 1.93, 1.63, [3]),\r\n    new Element(50, 'SN', 'Tin', 118.71, 2.17, 1.46, [2, 4]),\r\n    new Element(51, 'SB', 'Antimony', 121.75, 2.2, 1.46, [3, 5]),\r\n    new Element(52, 'TE', 'Tellurium', 127.6, 2.06, 1.47, [2, 4, 6]),\r\n    new Element(53, 'I', 'Iodine', 126.91, 2.15, 1.4, [1, 3, 5, 7]),\r\n    new Element(54, 'XE', 'Xenon', 131.29, 2.16, 1.98, [0]),\r\n    new Element(55, 'CS', 'Cesium', 132.91, 1.7, 1.67, [1]),\r\n    new Element(56, 'BA', 'Barium', 137.33, 1.7, 1.34, [2]),\r\n    new Element(57, 'LA', 'Lanthanum', 138.91, 1.7, 1.87, [0]),\r\n    new Element(58, 'CE', 'Cerium', 140.12, 1.7, 1.83, [0]),\r\n    new Element(59, 'PR', 'Praseodymium', 140.91, 1.7, 1.82, [0]),\r\n    new Element(60, 'ND', 'Neodymium', 144.24, 1.7, 1.81, [0]),\r\n    new Element(61, 'PM', 'Promethium', 144.9, 1.7, 1.8, [0]),\r\n    new Element(62, 'SM', 'Samarium', 150.36, 1.7, 1.8, [0]),\r\n    new Element(63, 'EU', 'Europium', 151.96, 1.7, 1.99, [0]),\r\n    new Element(64, 'GD', 'Gadolinium', 157.25, 1.7, 1.79, [0]),\r\n    new Element(65, 'TB', 'Terbium', 158.93, 1.7, 1.76, [0]),\r\n    new Element(66, 'DY', 'Dysprosium', 162.5, 1.7, 1.75, [0]),\r\n    new Element(67, 'HO', 'Holmium', 164.93, 1.7, 1.74, [0]),\r\n    new Element(68, 'ER', 'Erbium', 167.26, 1.7, 1.73, [0]),\r\n    new Element(69, 'TM', 'Thulium', 168.93, 1.7, 1.72, [0]),\r\n    new Element(70, 'YB', 'Ytterbium', 173.04, 1.7, 1.94, [0]),\r\n    new Element(71, 'LU', 'Lutetium', 174.97, 1.7, 1.72, [0]),\r\n    new Element(72, 'HF', 'Hafnium', 178.49, 1.7, 1.57, [0]),\r\n    new Element(73, 'TA', 'Tantalum', 180.95, 1.7, 1.43, [0]),\r\n    new Element(74, 'W', 'Tungsten', 183.85, 1.7, 1.37, [0]),\r\n    new Element(75, 'RE', 'Rhenium', 186.21, 1.7, 1.35, [0]),\r\n    new Element(76, 'OS', 'Osmium', 190.2, 1.7, 1.37, [0]),\r\n    new Element(77, 'IR', 'Iridium', 192.22, 1.7, 1.32, [0]),\r\n    new Element(78, 'PT', 'Platinum', 195.08, 1.72, 1.5, [0]),\r\n    new Element(79, 'AU', 'Gold', 196.97, 1.66, 1.5, [0]),\r\n    new Element(80, 'HG', 'Mercury', 200.59, 1.55, 1.7, [0]),\r\n    new Element(81, 'TL', 'Thallium', 204.38, 1.96, 1.55, [1, 3]),\r\n    new Element(82, 'PB', 'Lead', 207.2, 2.02, 1.54, [2, 4]),\r\n    new Element(83, 'BI', 'Bismuth', 208.98, 1.7, 1.54, [3, 5]),\r\n    new Element(84, 'PO', 'Polonium', 210, 1.7, 1.68, [2, 4, 6]),\r\n    new Element(85, 'AT', 'Astatine', 210, 1.7, 1.7, [1, 3, 5, 7]),\r\n    new Element(86, 'RN', 'Radon', 222, 1.7, 2.4, [0]),\r\n    new Element(87, 'FR', 'Francium', 223, 1.7, 2, [1]),\r\n    new Element(88, 'RA', 'Radium', 226.03, 1.7, 1.9, [2]),\r\n    new Element(89, 'AC', 'Actinium', 227.03, 1.7, 1.88, [0]),\r\n    new Element(90, 'TH', 'Thorium', 232.04, 1.7, 1.79, [0]),\r\n    new Element(91, 'PA', 'Protactinium', 231.04, 1.7, 1.61, [0]),\r\n    new Element(92, 'U', 'Uranium', 238.03, 1.86, 1.58, [0]),\r\n    new Element(93, 'NP', 'Neptunium', 237.05, 1.7, 1.55, [0]),\r\n    new Element(94, 'PU', 'Plutonium', 239.1, 1.7, 1.53, [0]),\r\n    new Element(95, 'AM', 'Americium', 243.1, 1.7, 1.51, [0]),\r\n    new Element(96, 'CM', 'Curium', 247.1, 1.7, 1.5, [0]),\r\n    new Element(97, 'BK', 'Berkelium', 247.1, 1.7, 1.5, [0]),\r\n    new Element(98, 'CF', 'Californium', 252.1, 1.7, 1.5, [0]),\r\n    new Element(99, 'ES', 'Einsteinium', 252.1, 1.7, 1.5, [0]),\r\n    new Element(100, 'FM', 'Fermium', 257.1, 1.7, 1.5, [0]),\r\n    new Element(101, 'MD', 'Mendelevium', 256.1, 1.7, 1.5, [0]),\r\n    new Element(102, 'NO', 'Nobelium', 259.1, 1.7, 1.5, [0]),\r\n    new Element(103, 'LR', 'Lawrencium', 260.1, 1.7, 1.5, [0]),\r\n    new Element(104, 'RF', 'Rutherfordium', 261, 1.7, 1.6, [0]),\r\n    new Element(105, 'DB', 'Dubnium', 262, 1.7, 1.6, [0]),\r\n    new Element(106, 'SG', 'Seaborgium', 263, 1.7, 1.6, [0]),\r\n    new Element(107, 'BH', 'Bohrium', 262, 1.7, 1.6, [0]),\r\n    new Element(108, 'HS', 'Hassium', 265, 1.7, 1.6, [0]),\r\n    new Element(109, 'MT', 'Meitnerium', 268, 1.7, 1.6, [0])\r\n    /* eslint-enable no-magic-numbers */\r\n  ]\r\n\r\n  // DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\n  static ByName = {\r\n    // Duplicate atomic numbers (isotopes)\r\n    /* eslint-disable no-magic-numbers */\r\n    D: new Element(1, 'D', 'Deuterium', 2.014, 1.2, 0.23, [1]),\r\n    T: new Element(1, 'T', 'Tritium', 3.016, 1.2, 0.23, [1])\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    // All regular elements will be added later, automatically\r\n  }\r\n}\r\n\r\n;(function () {\r\n  const byAtomicNumber = Element.ByAtomicNumber\r\n  const byName = Element.ByName\r\n  for (let i = 0, n = byAtomicNumber.length; i < n; ++i) {\r\n    const element = byAtomicNumber[i]\r\n    if (element) {\r\n      byName[element.name] = element\r\n    }\r\n  }\r\n})()\r\n\r\n// find atom type by chemical element (or create if missing)\r\nElement.getByName = function (element) {\r\n  let type = Element.ByName[element]\r\n  if (!type) {\r\n    type = Element.ByName[element] = new Element(\r\n      0,\r\n      element,\r\n      'Unknown',\r\n      0,\r\n      1.0,\r\n      0.01,\r\n      [0]\r\n    )\r\n  }\r\n  return type\r\n}\r\n\r\nexport default Element\r\n",
		"const cBondTypes = {\r\n  /** Was generated manually */\r\n  UNKNOWN: 0,\r\n  /** Simple covalent bond */\r\n  COVALENT: 1,\r\n  /** Aromatic bond */\r\n  AROMATIC: 2\r\n}\r\n\r\nfunction getAtomPos(atom) {\r\n  return atom.position\r\n}\r\n\r\n/**\r\n * Bond between atoms.\r\n *\r\n * @param {Atom} left     - The first atom.\r\n * @param {Atom} right    - The second atom.\r\n * @param {number} order - Order of current bond.\r\n * @param {number} type - Bond type.\r\n * @param {boolean} fixed - Indicator of a pre-specified connection (in contrast with guessed one).\r\n *\r\n * @exports Bond\r\n * @constructor\r\n */\r\nclass Bond {\r\n  constructor(left, right, order, type, fixed) {\r\n    this._left = left\r\n    this._right = right\r\n    this._fixed = fixed\r\n    this._index = -1\r\n    if (left > right) {\r\n      throw new Error('In a bond atom indices must be in increasing order')\r\n    }\r\n    this._order = order\r\n    this._type = type\r\n  }\r\n\r\n  getLeft() {\r\n    return this._left\r\n  }\r\n\r\n  getRight() {\r\n    return this._right\r\n  }\r\n\r\n  getOrder() {\r\n    return this._order\r\n  }\r\n\r\n  calcLength() {\r\n    return this._left.position.distanceTo(this._right.position)\r\n  }\r\n\r\n  _forEachNeighbour(currAtom, process) {\r\n    const { bonds } = currAtom\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      process(bonds[i]._left !== currAtom ? bonds[i]._left : bonds[i]._right)\r\n    }\r\n  }\r\n\r\n  forEachLevelOne(process) {\r\n    const left = this._left\r\n    const right = this._right\r\n    this._forEachNeighbour(left, (atom) => {\r\n      if (atom === right) {\r\n        return\r\n      }\r\n      process(atom)\r\n    })\r\n    this._forEachNeighbour(right, (atom) => {\r\n      if (atom === left) {\r\n        return\r\n      }\r\n      process(atom)\r\n    })\r\n  }\r\n\r\n  forEachLevelTwo(process) {\r\n    // TODO refactor this piece of an art?\r\n    const left = this._left\r\n    const right = this._right\r\n    const self = this\r\n    self._forEachNeighbour(left, (atom) => {\r\n      if (atom === right) {\r\n        return\r\n      }\r\n      self._forEachNeighbour(atom, (l2Atom) => {\r\n        if (l2Atom === left) {\r\n          return\r\n        }\r\n        process(l2Atom)\r\n      })\r\n    })\r\n    self._forEachNeighbour(right, (atom) => {\r\n      if (atom === left) {\r\n        return\r\n      }\r\n      self._forEachNeighbour(atom, (l2Atom) => {\r\n        if (l2Atom === right) {\r\n          return\r\n        }\r\n        process(l2Atom)\r\n      })\r\n    })\r\n  }\r\n\r\n  _fixDir(refPoint, currDir, posGetter) {\r\n    // count atoms to the right and to the left of the current plane\r\n    let rightCount = 0\r\n    let leftCount = 0\r\n    const tmpVec = refPoint.clone()\r\n    function checkDir(atom) {\r\n      tmpVec.copy(posGetter(atom))\r\n      tmpVec.sub(refPoint)\r\n      const dotProd = currDir.dot(tmpVec)\r\n      if (dotProd > 0) {\r\n        ++rightCount\r\n      } else {\r\n        ++leftCount\r\n      }\r\n    }\r\n    function checkCarbon(atom) {\r\n      if (atom.element.name === 'C') {\r\n        checkDir(atom)\r\n      }\r\n    }\r\n    // count all atoms to the left and right of our plane, start from level 1 and carbons\r\n    const stages = [\r\n      [this.forEachLevelOne, checkCarbon],\r\n      [this.forEachLevelOne, checkDir],\r\n      [this.forEachLevelTwo, checkCarbon],\r\n      [this.forEachLevelTwo, checkDir]\r\n    ]\r\n\r\n    for (let stageId = 0; stageId < stages.length; ++stageId) {\r\n      stages[stageId][0].call(this, stages[stageId][1])\r\n      if (leftCount > rightCount) {\r\n        return currDir.multiplyScalar(-1)\r\n      }\r\n      if (leftCount < rightCount) {\r\n        return currDir\r\n      }\r\n    }\r\n    return currDir\r\n  }\r\n\r\n  calcNormalDir(posGetter) {\r\n    const left = this._left\r\n    const right = this._right\r\n    let first = left\r\n    let second = right\r\n    posGetter = posGetter === undefined ? getAtomPos : posGetter\r\n    if (left.bonds.length > right.bonds.length) {\r\n      first = right\r\n      second = left\r\n    }\r\n    let third = first\r\n    let maxNeibs = 0\r\n    const { bonds } = second\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      let another = bonds[i]._left\r\n      if (bonds[i]._left === second) {\r\n        another = bonds[i]._right\r\n      }\r\n      if (another.bonds.length > maxNeibs && another !== first) {\r\n        third = another\r\n        maxNeibs = another.bonds.length\r\n      }\r\n    }\r\n    const secondPos = posGetter(second)\r\n    const firstV = posGetter(first).clone().sub(secondPos)\r\n    const secondV = posGetter(third).clone().sub(secondPos)\r\n    secondV.crossVectors(firstV, secondV)\r\n    if (secondV.lengthSq() < 0.0001) {\r\n      secondV.set(0, 1, 0)\r\n    }\r\n    firstV.normalize()\r\n    secondV.normalize()\r\n    firstV.crossVectors(secondV, firstV)\r\n    if (firstV.lengthSq() < 0.0001) {\r\n      firstV.set(0, 1, 0)\r\n    }\r\n    firstV.normalize()\r\n    return this._fixDir(secondPos, firstV, posGetter)\r\n  }\r\n\r\n  static BondType = cBondTypes\r\n}\r\n\r\nBond.prototype.BondType = cBondTypes\r\n\r\nexport default Bond\r\n",
		"import Atom from './Atom'\r\nimport Element from './Element'\r\nimport { Vector3 } from 'three'\r\n\r\nconst cNucleicControlNames = [\"C3'\", 'C3*', 'P', 'H5T', 'H3T']\r\nconst cNucleicWing1Names = ['OP1', 'O1P']\r\nconst cNucleicWing2Names = ['OP2', 'O2P']\r\n\r\nconst cCylinderSource = [\"C3'\", 'C3*', 'C1', \"C1'\", 'C1*', 'P']\r\nconst cCylinderTarget = [\r\n  {\r\n    types: ['A', 'DA', 'G', 'DG'],\r\n    atoms: ['N1']\r\n  },\r\n  {\r\n    types: ['C', 'DC'],\r\n    atoms: ['N3']\r\n  },\r\n  {\r\n    types: ['T', 'DT', 'U', 'DU'],\r\n    atoms: ['O4']\r\n  }\r\n]\r\n\r\n/**\r\n * Residue instance.\r\n *\r\n * @param {Chain} chain      - Chain this residue belongs to.\r\n * @param {ResidueType} type - Generic residue instance type.\r\n * @param {number} sequence  - Sequence ID.\r\n * @param {string} icode     - One character insertion code (usually space or A-Z).\r\n *\r\n * @exports Residue\r\n * @constructor\r\n */\r\nclass Residue {\r\n  constructor(chain, type, sequence, icode) {\r\n    this._chain = chain\r\n    this._component = null\r\n    this._type = type\r\n    this._sequence = sequence\r\n    this._icode = icode\r\n    this._mask = 1 | 0\r\n    this._index = -1\r\n\r\n    this._atoms = []\r\n    this._secondary = null\r\n    this._firstAtom = null\r\n    this._leadAtom = null\r\n    this._wingAtom = null\r\n    this._lastAtom = null\r\n    this._controlPoint = null\r\n    this._midPoint = null\r\n    this._wingVector = null\r\n    this._cylinders = null\r\n    this._isValid = true\r\n    this._het = false\r\n    this._molecule = null\r\n    this.temperature = null\r\n    this.occupancy = null\r\n  }\r\n\r\n  // Getters and setters\r\n  getChain() {\r\n    return this._chain\r\n  }\r\n\r\n  getMolecule() {\r\n    return this._molecule\r\n  }\r\n\r\n  getType() {\r\n    return this._type\r\n  }\r\n\r\n  getSequence() {\r\n    return this._sequence\r\n  }\r\n\r\n  getSecondary() {\r\n    return this._secondary\r\n  }\r\n\r\n  getICode() {\r\n    return this._icode\r\n  }\r\n\r\n  // Other methods\r\n\r\n  addAtom(\r\n    name,\r\n    type,\r\n    xyz,\r\n    role,\r\n    het,\r\n    serial,\r\n    altLoc,\r\n    occupancy,\r\n    tempFactor,\r\n    charge\r\n  ) {\r\n    const atom = new Atom(\r\n      this,\r\n      name,\r\n      type,\r\n      xyz,\r\n      role,\r\n      het,\r\n      serial,\r\n      altLoc,\r\n      occupancy,\r\n      tempFactor,\r\n      charge\r\n    )\r\n    const complex = this._chain.getComplex()\r\n    complex.addAtom(atom)\r\n    this._atoms.push(atom)\r\n    this._het = this._het || het\r\n    return atom\r\n  }\r\n\r\n  getAtomCount() {\r\n    return this._atoms.length\r\n  }\r\n\r\n  forEachAtom(process) {\r\n    const atoms = this._atoms\r\n    for (let i = 0, n = atoms.length; i < n; ++i) {\r\n      if (process(atoms[i])) {\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  _findAtomByName(name) {\r\n    let res = null\r\n    this.forEachAtom((atom) => {\r\n      if (atom.name === name) {\r\n        res = atom\r\n        return true\r\n      }\r\n      return false\r\n    })\r\n    return res\r\n  }\r\n\r\n  _findFirstAtomInList(names) {\r\n    let res = null\r\n    for (let i = 0; i < names.length; ++i) {\r\n      res = this._findAtomByName(names[i])\r\n      if (res !== null) {\r\n        return res\r\n      }\r\n    }\r\n    return res\r\n  }\r\n\r\n  collectMask() {\r\n    let mask = 0xffffffff\r\n    const atoms = this._atoms\r\n    for (let i = 0, n = atoms.length; i < n; ++i) {\r\n      mask &= atoms[i].mask\r\n    }\r\n    this._mask = mask\r\n  }\r\n\r\n  getCylinderTargetList() {\r\n    const type = this._type._name\r\n    for (let i = 0, n = cCylinderTarget.length; i < n; ++i) {\r\n      for (let j = 0, m = cCylinderTarget[i].types.length; j < m; ++j) {\r\n        if (type === cCylinderTarget[i].types[j]) {\r\n          return cCylinderTarget[i].atoms\r\n        }\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  _detectLeadWing(dst, next, getAtomPosition) {\r\n    const leadAtom = this._findFirstAtomInList(cNucleicControlNames)\r\n    let wingStart = this._findFirstAtomInList(cNucleicWing1Names)\r\n    let wingEnd = this._findFirstAtomInList(cNucleicWing2Names)\r\n\r\n    if (wingStart === null && next !== null) {\r\n      wingStart = next._findFirstAtomInList(cNucleicWing1Names)\r\n    }\r\n\r\n    if (wingEnd === null && next !== null) {\r\n      wingEnd = next._findFirstAtomInList(cNucleicWing2Names)\r\n    }\r\n\r\n    if (leadAtom === null || wingStart === null || wingEnd === null) {\r\n      return\r\n    }\r\n\r\n    dst._leadAtom = leadAtom\r\n    dst._controlPoint = getAtomPosition(leadAtom)\r\n    dst._wingVector = getAtomPosition(wingEnd)\r\n      .clone()\r\n      .sub(getAtomPosition(wingStart))\r\n    dst._isValid = true\r\n\r\n    const cylSource = this._findFirstAtomInList(cCylinderSource)\r\n    const targetList = this.getCylinderTargetList()\r\n    const cylTarget =\r\n      targetList !== null ? this._findFirstAtomInList(targetList) : null\r\n    if (cylSource === null || cylTarget === null) {\r\n      return\r\n    }\r\n    dst._cylinders = [getAtomPosition(cylSource), getAtomPosition(cylTarget)]\r\n  }\r\n\r\n  calcWing(prevLeadPos, currLeadPos, prevWingPos, prevWing) {\r\n    const vectorA = currLeadPos.clone().sub(prevLeadPos)\r\n    const vectorB = prevLeadPos.clone().sub(prevWingPos)\r\n    vectorB.crossVectors(vectorA, vectorB)\r\n    vectorB.crossVectors(vectorA, vectorB).normalize()\r\n    if (prevWing !== null && prevWing.length() > 0.0001) {\r\n      const needToNegate =\r\n        vectorB.length() > 0.0001 &&\r\n        Math.abs(prevWing.angleTo(vectorB)) > Math.PI / 2\r\n      if (needToNegate) {\r\n        vectorB.negate()\r\n      }\r\n    }\r\n    return vectorB\r\n  }\r\n\r\n  _innerFinalize(prevRes, prev, nextRes, dst, chainAsNucleic, getAtomPosition) {\r\n    const bFirstInChain = prev === null\r\n\r\n    const lp = getAtomPosition(this._leadAtom)\r\n    const currLeadPos = new Vector3(lp.x, lp.y, lp.z)\r\n    if (chainAsNucleic) {\r\n      this._detectLeadWing(dst, nextRes, getAtomPosition)\r\n      return\r\n    }\r\n\r\n    if (bFirstInChain) {\r\n      // for first one in chain\r\n      dst._midPoint = getAtomPosition(this._firstAtom).clone()\r\n    } else {\r\n      const prevLeadPos = prev._controlPoint // lead point of previous monomer\r\n      dst._midPoint = prevLeadPos.clone().lerp(currLeadPos, 0.5)\r\n      dst._wingVector = this.calcWing(\r\n        prevLeadPos,\r\n        currLeadPos,\r\n        getAtomPosition(prevRes._wingAtom),\r\n        prev._wingVector\r\n      )\r\n    }\r\n    dst._controlPoint = currLeadPos\r\n  }\r\n\r\n  _finalize2(prev, next, asNucleic) {\r\n    // Should be called AFTER first finalize\r\n    this._innerFinalize(\r\n      prev,\r\n      prev,\r\n      next,\r\n      this,\r\n      asNucleic,\r\n      (atom) => atom.position\r\n    )\r\n  }\r\n\r\n  isConnected(anotherResidue) {\r\n    if (this._chain !== anotherResidue._chain) {\r\n      return false\r\n    }\r\n    if (this === anotherResidue) {\r\n      return true\r\n    }\r\n    let res = false\r\n    this.forEachAtom((atom) => {\r\n      const { bonds } = atom\r\n      for (let i = 0, n = bonds.length; i < n; ++i) {\r\n        const bond = bonds[i]\r\n        if (\r\n          bond._left.residue === anotherResidue ||\r\n          bond._right.residue === anotherResidue\r\n        ) {\r\n          res = true\r\n          return true\r\n        }\r\n      }\r\n      return false\r\n    })\r\n    return res\r\n  }\r\n\r\n  _finalize() {\r\n    const self = this\r\n    ;[this._firstAtom] = this._atoms\r\n    this._lastAtom = this._atoms[this._atoms.length - 1]\r\n\r\n    this._leadAtom = null\r\n    this._wingAtom = null\r\n\r\n    let tempCount = 0\r\n    let temperature = 0 // average temperature\r\n    let occupCount = 0\r\n    let occupancy = 0 // average occupancy\r\n    this.forEachAtom((a) => {\r\n      if (self._leadAtom === null) {\r\n        if (a.role === Element.Constants.Lead) {\r\n          self._leadAtom = a\r\n        }\r\n      }\r\n      if (self._wingAtom === null) {\r\n        if (a.role === Element.Constants.Wing) {\r\n          self._wingAtom = a\r\n        }\r\n      }\r\n      if (a.temperature) {\r\n        temperature += a.temperature\r\n        tempCount++\r\n      }\r\n      if (a.occupancy) {\r\n        occupancy += a.occupancy\r\n        occupCount++\r\n      }\r\n      return self._leadAtom !== null && self._wingAtom !== null\r\n    })\r\n\r\n    if (tempCount > 0) {\r\n      this.temperature = temperature / tempCount\r\n    }\r\n    if (occupCount > 0) {\r\n      this.occupancy = occupancy / occupCount\r\n    }\r\n\r\n    // Still try to make monomer look valid\r\n    if (this._leadAtom === null || this._wingAtom === null) {\r\n      this._isValid = false\r\n    }\r\n    if (this._leadAtom === null) {\r\n      this._leadAtom = this._firstAtom\r\n    }\r\n    if (this._wingAtom === null) {\r\n      this._wingAtom = this._lastAtom\r\n    }\r\n  }\r\n}\r\n\r\nexport default Residue\r\n",
		"/**\r\n * Residue type.\r\n *\r\n * Predefined acid or created with HET, HETNAM, etc.\r\n *\r\n * @param {string} name            - Short name, either standard (ALA, MET, etc.) or non-standard one.\r\n * @param {string} fullName        - Full residue name.\r\n * @param {string} letterCode      - 1-letter symbol.\r\n *\r\n * @exports ResidueType\r\n * @constructor\r\n */\r\nclass ResidueType {\r\n  constructor(name, fullName, letterCode) {\r\n    this._name = name\r\n    this._fullName = fullName\r\n    this.letterCode = letterCode\r\n    this.flags = 0x0000\r\n  }\r\n\r\n  getName() {\r\n    return this._name\r\n  }\r\n\r\n  // DO NOT EDIT MANUALLY! Autogenerated from residue_types.csv by residue_types.py.\r\n  static StandardTypes = {\r\n    /* eslint-disable no-magic-numbers */\r\n    ALA: new ResidueType('ALA', 'Alanine', 'A'),\r\n    ARG: new ResidueType('ARG', 'Arginine', 'R'),\r\n    ASN: new ResidueType('ASN', 'Asparagine', 'N'),\r\n    ASP: new ResidueType('ASP', 'Aspartic Acid', 'D'),\r\n    CYS: new ResidueType('CYS', 'Cysteine', 'C'),\r\n    GLN: new ResidueType('GLN', 'Glutamine', 'Q'),\r\n    GLU: new ResidueType('GLU', 'Glutamic Acid', 'E'),\r\n    GLY: new ResidueType('GLY', 'Glycine', 'G'),\r\n    HIS: new ResidueType('HIS', 'Histidine', 'H'),\r\n    ILE: new ResidueType('ILE', 'Isoleucine', 'I'),\r\n    LEU: new ResidueType('LEU', 'Leucine', 'L'),\r\n    LYS: new ResidueType('LYS', 'Lysine', 'K'),\r\n    MET: new ResidueType('MET', 'Methionine', 'M'),\r\n    PHE: new ResidueType('PHE', 'Phenylalanine', 'F'),\r\n    PRO: new ResidueType('PRO', 'Proline', 'P'),\r\n    PYL: new ResidueType('PYL', 'Pyrrolysine', 'O'),\r\n    SEC: new ResidueType('SEC', 'Selenocysteine', 'U'),\r\n    SER: new ResidueType('SER', 'Serine', 'S'),\r\n    THR: new ResidueType('THR', 'Threonine', 'T'),\r\n    TRP: new ResidueType('TRP', 'Tryptophan', 'W'),\r\n    TYR: new ResidueType('TYR', 'Tyrosine', 'Y'),\r\n    VAL: new ResidueType('VAL', 'Valine', 'V'),\r\n    A: new ResidueType('A', 'Adenine', 'A'),\r\n    C: new ResidueType('C', 'Cytosine', 'C'),\r\n    G: new ResidueType('G', 'Guanine', 'G'),\r\n    I: new ResidueType('I', 'Inosine', 'I'),\r\n    T: new ResidueType('T', 'Thymine', 'T'),\r\n    U: new ResidueType('U', 'Uracil', 'U'),\r\n    DA: new ResidueType('DA', 'Adenine', 'A'),\r\n    DC: new ResidueType('DC', 'Cytosine', 'C'),\r\n    DG: new ResidueType('DG', 'Guanine', 'G'),\r\n    DI: new ResidueType('DI', 'Inosine', 'I'),\r\n    DT: new ResidueType('DT', 'Thymine', 'T'),\r\n    DU: new ResidueType('DU', 'Uracil', 'U'),\r\n    '+A': new ResidueType('+A', 'Adenine', 'A'),\r\n    '+C': new ResidueType('+C', 'Cytosine', 'C'),\r\n    '+G': new ResidueType('+G', 'Guanine', 'G'),\r\n    '+I': new ResidueType('+I', 'Inosine', 'I'),\r\n    '+T': new ResidueType('+T', 'Thymine', 'T'),\r\n    '+U': new ResidueType('+U', 'Uracil', 'U'),\r\n    WAT: new ResidueType('WAT', 'Water', ''),\r\n    H2O: new ResidueType('H2O', 'Water', ''),\r\n    HOH: new ResidueType('HOH', 'Water', ''),\r\n    DOD: new ResidueType('DOD', 'Water', ''),\r\n    UNK: new ResidueType('UNK', 'Unknown', ''),\r\n    UNL: new ResidueType('UNL', 'Unknown Ligand', '')\r\n    /* eslint-enable no-magic-numbers */\r\n  }\r\n\r\n  /**\r\n   * Enumeration of residue flag values.\r\n   *\r\n   * @enum {number}\r\n   * @readonly\r\n   */\r\n  static Flags = {\r\n    // Amino acids\r\n    /** Amino acid residue */\r\n    PROTEIN: 0x0001,\r\n    /** Basic amino acid residue */\r\n    BASIC: 0x0002,\r\n    /** Acidic amino acid residue */\r\n    ACIDIC: 0x0004,\r\n    /** Polar uncharged side chain amino acid residue */\r\n    POLAR: 0x0008,\r\n    /** Non-polar hydrophobic side chain amino acid residue */\r\n    NONPOLAR: 0x0010,\r\n    /** Aromatic amino acid residue */\r\n    AROMATIC: 0x0020,\r\n\r\n    // Nucleic acids\r\n\r\n    /** Nucleic residue */\r\n    NUCLEIC: 0x0100,\r\n    /** Purine nucleic residue */\r\n    PURINE: 0x0200,\r\n    /** Pyrimidine nucleic residue */\r\n    PYRIMIDINE: 0x0400,\r\n    /** DNA */\r\n    DNA: 0x0800,\r\n    /** RNA */\r\n    RNA: 0x1000,\r\n\r\n    /** Water */\r\n    WATER: 0x10000\r\n  }\r\n}\r\n\r\n// Flag combinations\r\nfunction _addFlag(flag, list) {\r\n  for (let i = 0, n = list.length; i < n; ++i) {\r\n    const res = ResidueType.StandardTypes[list[i]]\r\n    if (res) {\r\n      res.flags |= flag\r\n    }\r\n  }\r\n}\r\n\r\nconst { Flags } = ResidueType\r\n_addFlag(Flags.WATER, ['WAT', 'H2O', 'HOH', 'DOD'])\r\n\r\n_addFlag(Flags.PROTEIN, [\r\n  'ALA',\r\n  'ARG',\r\n  'ASN',\r\n  'ASP',\r\n  'CYS',\r\n  'GLY',\r\n  'GLU',\r\n  'GLN',\r\n  'HIS',\r\n  'ILE',\r\n  'LEU',\r\n  'LYS',\r\n  'MET',\r\n  'PHE',\r\n  'PRO',\r\n  'PYL',\r\n  'SEC',\r\n  'SER',\r\n  'THR',\r\n  'TRP',\r\n  'TYR',\r\n  'VAL'\r\n])\r\n_addFlag(Flags.BASIC, ['ARG', 'HIS', 'LYS'])\r\n_addFlag(Flags.ACIDIC, ['ASP', 'GLU'])\r\n_addFlag(Flags.POLAR, ['ASN', 'CYS', 'GLN', 'SER', 'THR', 'TYR'])\r\n_addFlag(Flags.NONPOLAR, [\r\n  'ALA',\r\n  'ILE',\r\n  'LEU',\r\n  'MET',\r\n  'PHE',\r\n  'PRO',\r\n  'TRP',\r\n  'VAL',\r\n  'GLY'\r\n])\r\n_addFlag(Flags.AROMATIC, ['PHE', 'TRP', 'TYR'])\r\n\r\n_addFlag(Flags.NUCLEIC, [\r\n  'A',\r\n  'G',\r\n  'I',\r\n  'DA',\r\n  'DG',\r\n  'DI',\r\n  '+A',\r\n  '+G',\r\n  '+I',\r\n  'C',\r\n  'T',\r\n  'U',\r\n  'DC',\r\n  'DT',\r\n  'DU',\r\n  '+C',\r\n  '+T',\r\n  '+U'\r\n])\r\n_addFlag(Flags.PURINE, ['A', 'G', 'I', 'DA', 'DG', 'DI', '+A', '+G', '+I'])\r\n_addFlag(Flags.PYRIMIDINE, ['C', 'T', 'U', 'DC', 'DT', 'DU', '+C', '+T', '+U'])\r\n_addFlag(Flags.DNA, ['DA', 'DG', 'DI', 'DC', 'DT', 'DU'])\r\n_addFlag(Flags.RNA, ['A', 'G', 'I', 'C', 'T', 'U'])\r\n// Table of kdHydrophobicity\r\nconst hydro = {\r\n  ILE: 4.5,\r\n  VAL: 4.2,\r\n  LEU: 3.8,\r\n  PHE: 2.8,\r\n  CYS: 2.5,\r\n  MET: 1.9,\r\n  ALA: 1.8,\r\n  GLY: -0.4,\r\n  THR: -0.7,\r\n  SER: -0.8,\r\n  TRP: -0.9,\r\n  TYR: -1.3,\r\n  PRO: -1.6,\r\n  HIS: -3.2,\r\n  GLU: -3.5,\r\n  GLN: -3.5,\r\n  ASP: -3.5,\r\n  ASN: -3.5,\r\n  LYS: -3.9,\r\n  ARG: -4.5\r\n}\r\n\r\nfunction _addParam(param, list) {\r\n  const keys = Object.keys(list)\r\n  for (let i = 0, n = keys.length; i < n; ++i) {\r\n    const key = keys[i]\r\n    const value = list[key]\r\n    ResidueType.StandardTypes[key][param] = value\r\n  }\r\n}\r\n\r\n_addParam('hydrophobicity', hydro)\r\n\r\nexport default ResidueType\r\n",
		"import Residue from './Residue'\r\nimport ResidueType from './ResidueType'\r\nimport { Vector3 } from 'three'\r\n\r\n/**\r\n * Residues in chain are either amino acid either nucleic acid (and water)\r\n * There might be some modified/mutated residues, which type could not be determined by their name (nucleic or amino); In this\r\n * case firstly program definites the chain type (by well-known residues) and then definites modified/mutated residues\r\n */\r\nconst ChainType = {\r\n  UNKNOWN: 0,\r\n  PROTEIN: 1,\r\n  NUCLEIC: 2\r\n}\r\n\r\n/**\r\n * Residue chain.\r\n *\r\n * @param {Complex} complex - Molecular complex this chain belongs to.\r\n * @param {string} name - One character identifier (usually space, A-Z, 0-9, or a-z).\r\n *\r\n * @exports Chain\r\n * @constructor\r\n */\r\nclass Chain {\r\n  constructor(complex, name) {\r\n    this._complex = complex\r\n    this._name = name\r\n    this._mask = 1 | 0\r\n    this._index = -1\r\n    this._residues = []\r\n\r\n    this.minSequence = Number.POSITIVE_INFINITY\r\n    this.maxSequence = Number.NEGATIVE_INFINITY\r\n  }\r\n\r\n  getComplex() {\r\n    return this._complex\r\n  }\r\n\r\n  getName() {\r\n    return this._name\r\n  }\r\n\r\n  getResidues() {\r\n    return this._residues\r\n  }\r\n\r\n  _determineType() {\r\n    const residues = this._residues\r\n\r\n    const { PROTEIN, NUCLEIC } = ResidueType.Flags\r\n\r\n    this.type = ChainType.UNKNOWN\r\n\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      const { flags } = residues[i]._type\r\n\r\n      if ((flags & NUCLEIC) !== 0) {\r\n        this.type = ChainType.NUCLEIC\r\n        break\r\n      } else if ((flags & PROTEIN) !== 0) {\r\n        this.type = ChainType.PROTEIN\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds thre residue with specified sequence number and inserion code\r\n   * @param {Number} seqNum sequence number\r\n   * @param {string} iCode insertion code\r\n   * @returns {*} Residue or null if not found\r\n   */\r\n  findResidue(seqNum, iCode) {\r\n    const residues = this._residues\r\n\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      const res = residues[i]\r\n      if (res._sequence === seqNum && res._icode === iCode) {\r\n        return [res, i]\r\n      }\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  _finalize() {\r\n    this._determineType()\r\n\r\n    const residues = this._residues\r\n\r\n    let prev = null\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      const next = i + 1 < n ? residues[i + 1] : null\r\n      const curr = residues[i]\r\n      // TODO: skip invalid residues\r\n      // eslint-disable-next-line no-constant-condition\r\n      if (1 /* curr._isValid */) {\r\n        curr._finalize2(prev, next, this.type === ChainType.NUCLEIC)\r\n        prev = curr\r\n      }\r\n    }\r\n\r\n    // fix very first wing\r\n    if (residues.length > 1 && residues[1]._wingVector) {\r\n      const p = residues[1]._wingVector\r\n      residues[0]._wingVector = new Vector3(p.x, p.y, p.z)\r\n    } else if (residues.length > 0) {\r\n      residues[0]._wingVector = new Vector3(1, 0, 0)\r\n    }\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    const residues = this._residues\r\n    let prev = null\r\n    let prevData = null\r\n    const frameRes = frameData._residues\r\n    const n = residues.length\r\n    function getAtomPos(atom) {\r\n      return frameData.getAtomPos(atom.index)\r\n    }\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const curr = residues[i]\r\n      const currData = frameRes[curr._index]\r\n      const nextRes = i + 1 < n ? residues[i + 1] : null\r\n      curr._innerFinalize(\r\n        prev,\r\n        prevData,\r\n        nextRes,\r\n        currData,\r\n        this.type === ChainType.NUCLEIC,\r\n        getAtomPos\r\n      )\r\n      prev = curr\r\n      prevData = currData\r\n    }\r\n\r\n    frameRes[residues[0]._index]._wingVector =\r\n      n > 1 ? frameRes[residues[1]._index]._wingVector : new Vector3(1, 0, 0)\r\n  }\r\n\r\n  /**\r\n   * Create a new residue.\r\n   *\r\n   * @param {string} name - Residue name.\r\n   * @param {number} sequence - Residue sequence number.\r\n   * @param {string} iCode - Insertion code.\r\n   * @returns {Residue} - Newly created residue instance.\r\n   */\r\n  addResidue(name, sequence, iCode) {\r\n    let type = this._complex.getResidueType(name)\r\n    if (type === null) {\r\n      type = this._complex.addResidueType(name)\r\n    }\r\n    const residue = new Residue(this, type, sequence, iCode)\r\n    this._complex.addResidue(residue)\r\n    this._residues.push(residue)\r\n\r\n    if (type.flags & (ResidueType.Flags.NUCLEIC | ResidueType.Flags.PROTEIN)) {\r\n      if (this.maxSequence < sequence) {\r\n        this.maxSequence = sequence\r\n      }\r\n      if (this.minSequence > sequence) {\r\n        this.minSequence = sequence\r\n      }\r\n    }\r\n\r\n    return residue\r\n  }\r\n\r\n  getResidueCount() {\r\n    return this._residues.length\r\n  }\r\n\r\n  forEachResidue(process) {\r\n    const residues = this._residues\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      process(residues[i])\r\n    }\r\n  }\r\n\r\n  collectMask() {\r\n    let mask = 0xffffffff\r\n    const residues = this._residues\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      mask &= residues[i]._mask\r\n    }\r\n    this._mask = mask\r\n  }\r\n}\r\n\r\nexport default Chain\r\n",
		"import Residue from './Residue'\r\n\r\n/** An element of protein secondary structure. */\r\nclass StructuralElement {\r\n  /**\r\n   * Create a secondary structural element of the specified type.\r\n   *\r\n   * @param {StructuralElement.Type} type Secondary structure type.\r\n   * @param {Residue} init Initial residue.\r\n   * @param {Residue} term Terminal residue.\r\n   */\r\n  constructor(type, init, term) {\r\n    /**\r\n     * Secondary structure type.\r\n     * @type {StructuralElement.Type}\r\n     */\r\n    this.type = type\r\n    /**\r\n     * Generic secondary structure type.\r\n     * @type {StructuralElement.Generic}\r\n     */\r\n    this.generic = StructuralElement.genericByType[this.type] || 'loop'\r\n    /**\r\n     * Initial residue.\r\n     * @type Residue\r\n     */\r\n    this.init = init\r\n    /**\r\n     * Terminal residue.\r\n     * @type Residue\r\n     */\r\n    this.term = term\r\n  }\r\n\r\n  /**\r\n   * An internal method for making a final pass over the complex to set all required references.\r\n   *\r\n   * **NOTE:** I'm sorry. It's a legacy code waiting for refactoring.\r\n   * Just copying it as-is right now and hoping for the best.\r\n   *\r\n   * @param {object} serialAtomMap A dictionary of atoms\r\n   * @param {object} residueHash A dictionary of hashed residues to check.\r\n   * @param {Complex} complex The molecular complex this element belongs to.\r\n   */\r\n  _finalize(serialAtomMap, residueHash, complex) {\r\n    if (this.init instanceof Residue && this.term instanceof Residue) {\r\n      return\r\n    }\r\n\r\n    // Link all intermediate residues to this structural element\r\n    const start = complex.splitUnifiedSerial(this.init)\r\n    const end = complex.splitUnifiedSerial(this.term)\r\n    for (let chainId = start.chain; chainId <= end.chain; chainId++) {\r\n      for (let serialId = start.serial; serialId <= end.serial; serialId++) {\r\n        for (let { iCode } = start; iCode <= end.iCode; iCode++) {\r\n          const hashCode = complex.getUnifiedSerial(chainId, serialId, iCode)\r\n          if (residueHash[hashCode]) {\r\n            residueHash[hashCode]._secondary = this\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Replace unfined serials by objects\r\n    this.init = residueHash[this.init]\r\n    this.term = residueHash[this.term]\r\n  }\r\n}\r\n\r\n/**\r\n * Specific type of a secondary structural element.\r\n * @enum {string}\r\n * @see StructuralElement.Generic\r\n */\r\nStructuralElement.Type = {\r\n  /** A strand of a [beta-sheet](https://en.wikipedia.org/wiki/Beta_sheet). */\r\n  STRAND: 'E',\r\n  /** An isolated beta-bridge (too small for a beta-sheet). */\r\n  BRIDGE: 'B',\r\n\r\n  /** A [3/10 helix](https://en.wikipedia.org/wiki/310_helix) (hydrogen bonding is 3 residues apart). */\r\n  HELIX_310: 'G',\r\n  /** An [alpha-helix](https://en.wikipedia.org/wiki/Alpha_helix) (hydrogen bonding is 4 residues apart). */\r\n  HELIX_ALPHA: 'H',\r\n  /** A [pi-helix](https://en.wikipedia.org/wiki/Pi_helix) (hydrogen bonding is 5 residues apart). */\r\n  HELIX_PI: 'I',\r\n  /** A generic helix of unspecified bonding distance. */\r\n  HELIX: 'X',\r\n\r\n  /** An isolated 3/10-like helical turn. */\r\n  TURN_310: '3',\r\n  /** An isolated alpha-like helical turn. */\r\n  TURN_ALPHA: '4',\r\n  /** An isolated pi-like helical turn. */\r\n  TURN_PI: '5',\r\n  /** An isolated helical [turn](https://en.wikipedia.org/wiki/Turn_(biochemistry)) of unspecified bonding distance. */\r\n  TURN: 'T',\r\n\r\n  /** A bend (a region of high curvature). */\r\n  BEND: 'S',\r\n  /** Just a protein section with no particular conformation. */\r\n  COIL: 'C'\r\n}\r\n\r\n/**\r\n * Generic type of a secondary structural element.\r\n * @enum {string}\r\n * @see StructuralElement.Type\r\n */\r\nStructuralElement.Generic = {\r\n  /** A strand of a sheet. */\r\n  STRAND: 'strand',\r\n  /** A helix. */\r\n  HELIX: 'helix',\r\n  /** Just a protein section with no particular conformation. */\r\n  LOOP: 'loop'\r\n}\r\n\r\nconst StructuralElementType = StructuralElement.Type\r\nconst StructuralElementGeneric = StructuralElement.Generic\r\n\r\n/**\r\n * A mapping from specific types to generic ones.\r\n * @type {Object<StructuralElement.Type, StructuralElement.Generic>}\r\n */\r\nStructuralElement.genericByType = {\r\n  [StructuralElementType.STRAND]: StructuralElementGeneric.STRAND,\r\n  [StructuralElementType.HELIX_310]: StructuralElementGeneric.HELIX,\r\n  [StructuralElementType.HELIX_ALPHA]: StructuralElementGeneric.HELIX,\r\n  [StructuralElementType.HELIX_PI]: StructuralElementGeneric.HELIX,\r\n  [StructuralElementType.HELIX]: StructuralElementGeneric.HELIX\r\n}\r\n\r\nexport default StructuralElement\r\n",
		"import StructuralElement from './StructuralElement'\r\n\r\nconst StructuralElementType = StructuralElement.Type\r\n\r\nexport const typeByPDBHelixClass = {\r\n  1: StructuralElementType.HELIX_ALPHA,\r\n  3: StructuralElementType.HELIX_PI,\r\n  5: StructuralElementType.HELIX_310\r\n}\r\n\r\n/**\r\n * Helical secondary structure of a protein.\r\n * @extends StructuralElement\r\n */\r\nclass Helix extends StructuralElement {\r\n  /**\r\n   * Create a helix.\r\n   *\r\n   * @param {number} helixClass A helix class according to the\r\n   *   [PDB Format](http://www.wwpdb.org/documentation/file-format-content/format33/sect5.html#HELIX).\r\n   * @param {Residue} init Initial residue.\r\n   * @param {Residue} term Terminal residue.\r\n   * @param {number} serial Serial number of the helix (see PDB Format).\r\n   * @param {string} name Helix identifier (see PDB Format).\r\n   * @param {string} comment Comment about this helix (see PDB Format).\r\n   * @param {number} length Length of this helix, in residues (see PDB Format).\r\n   */\r\n  constructor(helixClass, init, term, serial, name, comment, length) {\r\n    super(\r\n      typeByPDBHelixClass[helixClass] || StructuralElement.Type.HELIX,\r\n      init,\r\n      term\r\n    )\r\n\r\n    /**\r\n     * Serial number of the helix (see PDB Format).\r\n     * @type {number}\r\n     */\r\n    this.serial = serial\r\n    /**\r\n     * Helix identifier (see PDB Format).\r\n     * @type {string}\r\n     */\r\n    this.name = name\r\n    /**\r\n     * Comment about this helix (see PDB Format).\r\n     * @type {string}\r\n     */\r\n    this.comment = comment\r\n    /**\r\n     * Length of this helix, in residues (see PDB Format).\r\n     * @type {number}\r\n     */\r\n    this.length = length\r\n  }\r\n}\r\n\r\nexport default Helix\r\n",
		"import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}",
		"import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}",
		"import StructuralElement from './StructuralElement'\r\n\r\n/**\r\n * A single strand of a sheet in a protein secondary structure.\r\n * @extends StructuralElement\r\n */\r\nclass Strand extends StructuralElement {\r\n  /**\r\n   * Create a strand.\r\n   *\r\n   * @param {Sheet} sheet Parent sheet this strand belongs to.\r\n   * @param {Residue} init Initial residue.\r\n   * @param {Residue} term Terminal residue.\r\n   * @param {number} sense Sense of strand with respect to previous strand in the sheet.\r\n   *   - 0 if the first strand,\r\n   *   - 1 if parallel, and\r\n   *   - -1 if anti-parallel.\r\n   * @param {Atom} atomCur Atom in current strand (see PDB Format).\r\n   * @param {Atom} atomPrev Atom in previous strand (see PDB Format).\r\n   */\r\n  constructor(sheet, init, term, sense, atomCur, atomPrev) {\r\n    super(StructuralElement.Type.STRAND, init, term)\r\n\r\n    /**\r\n     * Parent sheet this strand belongs to.\r\n     * @type {Sheet}\r\n     */\r\n    this.sheet = sheet\r\n    /**\r\n     * Sense of strand with respect to previous strand in the sheet.\r\n     * - 0 if the first strand,\r\n     * - 1 if parallel, and\r\n     * - -1 if anti-parallel.\r\n     * @type {number}\r\n     */\r\n    this.sense = sense\r\n    /**\r\n     * Atom in current strand (see PDB Format).\r\n     * @type {Atom}\r\n     */\r\n    this.atomCur = atomCur\r\n    /**\r\n     * Atom in previous strand (see PDB Format).\r\n     * @type {Atom}\r\n     */\r\n    this.atomPrev = atomPrev\r\n  }\r\n\r\n  /**\r\n   * An internal method for making a final pass over the complex to set all required references.\r\n   *\r\n   * **NOTE:** I'm sorry. It's a legacy code waiting for refactoring.\r\n   * Just copying it as-is right now and hoping for the best.\r\n   *\r\n   * @param {object} serialAtomMap A dictionary of atoms\r\n   * @param {object} residueHash A dictionary of hashed residues to check.\r\n   * @param {Complex} complex The molecular complex this element belongs to.\r\n   *\r\n   * @override\r\n   */\r\n  _finalize(serialAtomMap, residueHash, complex) {\r\n    super._finalize(serialAtomMap, residueHash, complex)\r\n\r\n    let as = this.atomCur\r\n    if (as !== null && !Number.isNaN(as)) {\r\n      this.atomCur = serialAtomMap[as]\r\n    }\r\n    as = this.atomPrev\r\n    if (as !== null && !Number.isNaN(as)) {\r\n      this.atomPrev = serialAtomMap[as]\r\n    }\r\n  }\r\n}\r\n\r\nexport default Strand\r\n",
		"import Strand from './Strand'\r\n\r\n/**\r\n * Sheet secondary structure of a protein.\r\n *\r\n * @param {string} name -\r\n * @param {number} width -\r\n *\r\n * @exports Sheet\r\n * @constructor\r\n */\r\nclass Sheet {\r\n  constructor(name, width) {\r\n    this._name = name\r\n    this._width = width\r\n\r\n    this._strands = []\r\n  }\r\n\r\n  // Getters and setters\r\n  getName() {\r\n    return this._name\r\n  }\r\n\r\n  getWidth() {\r\n    return this._width\r\n  }\r\n\r\n  addStrand(strand) {\r\n    this._strands.push(strand)\r\n    this._width = this._strands.length\r\n  }\r\n\r\n  addEmptyStrand() {\r\n    this._strands.push(new Strand(null, null, null, null, null, null))\r\n  }\r\n\r\n  _finalize(serialAtomMap, residueHash, complex) {\r\n    const s = this._strands\r\n    for (let i = 0, n = s.length; i < n; ++i) {\r\n      s[i]._finalize(serialAtomMap, residueHash, complex)\r\n    }\r\n    if (!this._width) {\r\n      this._width = s.length\r\n    }\r\n    if (s.length !== this._width) {\r\n      throw new Error(`Sheet ${this._name} is inconsistent.`)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Sheet\r\n",
		"import { Vector3 } from 'three'\r\n\r\n/**\r\n * Atom measurements.\r\n *\r\n * @param {string} id              - SGroup id\r\n * @param {string} name            - Name of the group\r\n * @param {Vector3} position - Registered coordinates\r\n * @param {array} atoms            - Atoms group consists of\r\n * @param {object} saveNode        - XML node from file for saving\r\n *\r\n * @exports SGroup\r\n * @constructor\r\n */\r\nclass SGroup {\r\n  constructor(id, name, position, atoms, saveNode) {\r\n    this._id = id\r\n    this._name = name\r\n    this._position = position || new Vector3()\r\n    this._atoms = atoms || []\r\n    this._charge = 0 // default group charge\r\n    this._repeat = 1 // how many times group repeated: always > 0\r\n    this._center = null\r\n    this.xmlNodeRef = saveNode || null\r\n  }\r\n\r\n  /**\r\n   * Get atom full name.\r\n   * @returns {string} Atom full name.\r\n   */\r\n  getName() {\r\n    return this._name\r\n  }\r\n\r\n  getPosition() {\r\n    return this._position\r\n  }\r\n\r\n  getCentralPoint() {\r\n    return this._center\r\n  }\r\n\r\n  _rebuildSGroupOnAtomChange() {\r\n    const nLimon = 100000000\r\n    if (this._center === null) {\r\n      return // nothing to do if we are not relative\r\n    }\r\n\r\n    const bLow = new Vector3(nLimon, nLimon, nLimon)\r\n    const bHight = new Vector3(-nLimon, -nLimon, -nLimon)\r\n    for (let j = 0, n = this._atoms.length; j < n; j++) {\r\n      const aPos = this._atoms[j].position\r\n      bLow.set(\r\n        Math.min(bLow.x, aPos.x),\r\n        Math.min(bLow.y, aPos.y),\r\n        Math.min(bLow.z, aPos.z)\r\n      )\r\n      bHight.set(\r\n        Math.max(bHight.x, aPos.x),\r\n        Math.max(bHight.y, aPos.y),\r\n        Math.max(bHight.z, aPos.z)\r\n      )\r\n    }\r\n    this._center.addVectors(bLow, bHight)\r\n    this._center.multiplyScalar(0.5)\r\n  }\r\n}\r\n\r\nexport default SGroup\r\n",
		"/* eslint-disable */\r\n// DO NOT EDIT! Automatically generated from .jison\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar parser = (function () {\r\n  var o = function (k, v, o, l) {\r\n      for (o = o || {}, l = k.length; l--; o[k[l]] = v);\r\n      return o\r\n    },\r\n    $V0 = [1, 4],\r\n    $V1 = [1, 5],\r\n    $V2 = [1, 6],\r\n    $V3 = [1, 7],\r\n    $V4 = [1, 8],\r\n    $V5 = [1, 9],\r\n    $V6 = [1, 11],\r\n    $V7 = [1, 12],\r\n    $V8 = [5, 7, 8, 11],\r\n    $V9 = [1, 17],\r\n    $Va = [1, 22],\r\n    $Vb = [1, 20],\r\n    $Vc = [1, 21],\r\n    $Vd = [5, 7, 8, 11, 19]\r\n  var parser = {\r\n    trace: function trace() {},\r\n    yy: {},\r\n    symbols_: {\r\n      error: 2,\r\n      Program: 3,\r\n      Expression: 4,\r\n      EOF: 5,\r\n      Selector: 6,\r\n      OR: 7,\r\n      AND: 8,\r\n      NOT: 9,\r\n      '(': 10,\r\n      ')': 11,\r\n      SELECTOR: 12,\r\n      NAMED_SELECTOR: 13,\r\n      SELECTOR_RANGED: 14,\r\n      RangeList: 15,\r\n      SELECTOR_NAMED: 16,\r\n      NameList: 17,\r\n      Range: 18,\r\n      ',': 19,\r\n      NUMBER: 20,\r\n      ':': 21,\r\n      Name: 22,\r\n      IDENTIFIER: 23,\r\n      STRING: 24,\r\n      $accept: 0,\r\n      $end: 1\r\n    },\r\n    terminals_: {\r\n      2: 'error',\r\n      5: 'EOF',\r\n      7: 'OR',\r\n      8: 'AND',\r\n      9: 'NOT',\r\n      10: '(',\r\n      11: ')',\r\n      12: 'SELECTOR',\r\n      13: 'NAMED_SELECTOR',\r\n      14: 'SELECTOR_RANGED',\r\n      16: 'SELECTOR_NAMED',\r\n      19: ',',\r\n      20: 'NUMBER',\r\n      21: ':',\r\n      23: 'IDENTIFIER',\r\n      24: 'STRING'\r\n    },\r\n    productions_: [\r\n      0,\r\n      [3, 2],\r\n      [4, 1],\r\n      [4, 3],\r\n      [4, 3],\r\n      [4, 2],\r\n      [4, 3],\r\n      [6, 1],\r\n      [6, 1],\r\n      [6, 2],\r\n      [6, 2],\r\n      [15, 1],\r\n      [15, 3],\r\n      [18, 1],\r\n      [18, 3],\r\n      [17, 1],\r\n      [17, 3],\r\n      [22, 1],\r\n      [22, 1],\r\n      [22, 1]\r\n    ],\r\n    performAction: function anonymous(\r\n      yytext,\r\n      yyleng,\r\n      yylineno,\r\n      yy,\r\n      yystate /* action[1] */,\r\n      $$ /* vstack */,\r\n      _$ /* lstack */\r\n    ) {\r\n      /* this == yyval */\r\n\r\n      var $0 = $$.length - 1\r\n      switch (yystate) {\r\n        case 1:\r\n          return $$[$0 - 1]\r\n          break\r\n        case 3:\r\n          this.$ = yy.keyword('or')($$[$0 - 2], $$[$0])\r\n          break\r\n        case 4:\r\n          this.$ = yy.keyword('and')($$[$0 - 2], $$[$0])\r\n          break\r\n        case 5:\r\n          this.$ = yy.keyword('not')($$[$0])\r\n          break\r\n        case 6:\r\n          this.$ = $$[$0 - 1]\r\n          break\r\n        case 7:\r\n          this.$ = yy.keyword($$[$0])()\r\n          break\r\n        case 8:\r\n          this.$ = yy.GetSelector($$[$0].toLowerCase().slice(1, $$[$0].length))\r\n          break\r\n        case 9:\r\n        case 10:\r\n          this.$ = yy.keyword($$[$0 - 1])($$[$0])\r\n          break\r\n        case 11:\r\n          this.$ = new yy.RangeList($$[$0])\r\n          break\r\n        case 12:\r\n        case 16:\r\n          this.$ = $$[$0 - 2].append($$[$0])\r\n          break\r\n        case 13:\r\n          this.$ = new yy.Range(Number($$[$0]))\r\n          break\r\n        case 14:\r\n          this.$ = new yy.Range(Number($$[$0 - 2]), Number($$[$0]))\r\n          break\r\n        case 15:\r\n          this.$ = new yy.ValueList($$[$0])\r\n          break\r\n      }\r\n    },\r\n    table: [\r\n      { 3: 1, 4: 2, 6: 3, 9: $V0, 10: $V1, 12: $V2, 13: $V3, 14: $V4, 16: $V5 },\r\n      { 1: [3] },\r\n      { 5: [1, 10], 7: $V6, 8: $V7 },\r\n      o($V8, [2, 2]),\r\n      { 4: 13, 6: 3, 9: $V0, 10: $V1, 12: $V2, 13: $V3, 14: $V4, 16: $V5 },\r\n      { 4: 14, 6: 3, 9: $V0, 10: $V1, 12: $V2, 13: $V3, 14: $V4, 16: $V5 },\r\n      o($V8, [2, 7]),\r\n      o($V8, [2, 8]),\r\n      { 15: 15, 18: 16, 20: $V9 },\r\n      { 17: 18, 20: $Va, 22: 19, 23: $Vb, 24: $Vc },\r\n      { 1: [2, 1] },\r\n      { 4: 23, 6: 3, 9: $V0, 10: $V1, 12: $V2, 13: $V3, 14: $V4, 16: $V5 },\r\n      { 4: 24, 6: 3, 9: $V0, 10: $V1, 12: $V2, 13: $V3, 14: $V4, 16: $V5 },\r\n      o($V8, [2, 5]),\r\n      { 7: $V6, 8: $V7, 11: [1, 25] },\r\n      o($V8, [2, 9], { 19: [1, 26] }),\r\n      o($Vd, [2, 11]),\r\n      o($Vd, [2, 13], { 21: [1, 27] }),\r\n      o($V8, [2, 10], { 19: [1, 28] }),\r\n      o($Vd, [2, 15]),\r\n      o($Vd, [2, 17]),\r\n      o($Vd, [2, 18]),\r\n      o($Vd, [2, 19]),\r\n      o([5, 7, 11], [2, 3], { 8: $V7 }),\r\n      o($V8, [2, 4]),\r\n      o($V8, [2, 6]),\r\n      { 18: 29, 20: $V9 },\r\n      { 20: [1, 30] },\r\n      { 20: $Va, 22: 31, 23: $Vb, 24: $Vc },\r\n      o($Vd, [2, 12]),\r\n      o($Vd, [2, 14]),\r\n      o($Vd, [2, 16])\r\n    ],\r\n    defaultActions: { 10: [2, 1] },\r\n    parseError: function parseError(str, hash) {\r\n      if (hash.recoverable) {\r\n        this.trace(str)\r\n      } else {\r\n        var error = new Error(str)\r\n        error.hash = hash\r\n        throw error\r\n      }\r\n    },\r\n    parse: function parse(input) {\r\n      var self = this,\r\n        stack = [0],\r\n        tstack = [],\r\n        vstack = [null],\r\n        lstack = [],\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1\r\n      var args = lstack.slice.call(arguments, 1)\r\n      var lexer = Object.create(this.lexer)\r\n      var sharedState = { yy: {} }\r\n      for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n          sharedState.yy[k] = this.yy[k]\r\n        }\r\n      }\r\n      lexer.setInput(input, sharedState.yy)\r\n      sharedState.yy.lexer = lexer\r\n      sharedState.yy.parser = this\r\n      if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {}\r\n      }\r\n      var yyloc = lexer.yylloc\r\n      lstack.push(yyloc)\r\n      var ranges = lexer.options && lexer.options.ranges\r\n      if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError\r\n      } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError\r\n      }\r\n      function popStack(n) {\r\n        stack.length = stack.length - 2 * n\r\n        vstack.length = vstack.length - n\r\n        lstack.length = lstack.length - n\r\n      }\r\n      function lex() {\r\n        var token\r\n        token = tstack.pop() || lexer.lex() || EOF\r\n        if (typeof token !== 'number') {\r\n          if (token instanceof Array) {\r\n            tstack = token\r\n            token = tstack.pop()\r\n          }\r\n          token = self.symbols_[token] || token\r\n        }\r\n        return token\r\n      }\r\n      var symbol,\r\n        preErrorSymbol,\r\n        state,\r\n        action,\r\n        a,\r\n        r,\r\n        yyval = {},\r\n        p,\r\n        len,\r\n        newState,\r\n        expected\r\n      while (true) {\r\n        state = stack[stack.length - 1]\r\n        if (this.defaultActions[state]) {\r\n          action = this.defaultActions[state]\r\n        } else {\r\n          if (symbol === null || typeof symbol == 'undefined') {\r\n            symbol = lex()\r\n          }\r\n          action = table[state] && table[state][symbol]\r\n        }\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n          var errStr = ''\r\n          expected = []\r\n          for (p in table[state]) {\r\n            if (this.terminals_[p] && p > TERROR) {\r\n              expected.push(\"'\" + this.terminals_[p] + \"'\")\r\n            }\r\n          }\r\n          if (lexer.showPosition) {\r\n            errStr =\r\n              'Parse error on line ' +\r\n              (yylineno + 1) +\r\n              ':\\n' +\r\n              lexer.showPosition() +\r\n              '\\nExpecting ' +\r\n              expected.join(', ') +\r\n              \", got '\" +\r\n              (this.terminals_[symbol] || symbol) +\r\n              \"'\"\r\n          } else {\r\n            errStr =\r\n              'Parse error on line ' +\r\n              (yylineno + 1) +\r\n              ': Unexpected ' +\r\n              (symbol == EOF\r\n                ? 'end of input'\r\n                : \"'\" + (this.terminals_[symbol] || symbol) + \"'\")\r\n          }\r\n          this.parseError(errStr, {\r\n            text: lexer.match,\r\n            token: this.terminals_[symbol] || symbol,\r\n            line: lexer.yylineno,\r\n            loc: yyloc,\r\n            expected: expected\r\n          })\r\n        }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n          throw new Error(\r\n            'Parse Error: multiple actions possible at state: ' +\r\n              state +\r\n              ', token: ' +\r\n              symbol\r\n          )\r\n        }\r\n        switch (action[0]) {\r\n          case 1:\r\n            stack.push(symbol)\r\n            vstack.push(lexer.yytext)\r\n            lstack.push(lexer.yylloc)\r\n            stack.push(action[1])\r\n            symbol = null\r\n            if (!preErrorSymbol) {\r\n              yyleng = lexer.yyleng\r\n              yytext = lexer.yytext\r\n              yylineno = lexer.yylineno\r\n              yyloc = lexer.yylloc\r\n              if (recovering > 0) {\r\n                recovering--\r\n              }\r\n            } else {\r\n              symbol = preErrorSymbol\r\n              preErrorSymbol = null\r\n            }\r\n            break\r\n          case 2:\r\n            len = this.productions_[action[1]][1]\r\n            yyval.$ = vstack[vstack.length - len]\r\n            yyval._$ = {\r\n              first_line: lstack[lstack.length - (len || 1)].first_line,\r\n              last_line: lstack[lstack.length - 1].last_line,\r\n              first_column: lstack[lstack.length - (len || 1)].first_column,\r\n              last_column: lstack[lstack.length - 1].last_column\r\n            }\r\n            if (ranges) {\r\n              yyval._$.range = [\r\n                lstack[lstack.length - (len || 1)].range[0],\r\n                lstack[lstack.length - 1].range[1]\r\n              ]\r\n            }\r\n            r = this.performAction.apply(\r\n              yyval,\r\n              [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n              ].concat(args)\r\n            )\r\n            if (typeof r !== 'undefined') {\r\n              return r\r\n            }\r\n            if (len) {\r\n              stack = stack.slice(0, -1 * len * 2)\r\n              vstack = vstack.slice(0, -1 * len)\r\n              lstack = lstack.slice(0, -1 * len)\r\n            }\r\n            stack.push(this.productions_[action[1]][0])\r\n            vstack.push(yyval.$)\r\n            lstack.push(yyval._$)\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]]\r\n            stack.push(newState)\r\n            break\r\n          case 3:\r\n            return true\r\n        }\r\n      }\r\n      return true\r\n    }\r\n  }\r\n\r\n  /* generated by jison-lex 0.3.4 */\r\n  var lexer = (function () {\r\n    var lexer = {\r\n      EOF: 1,\r\n\r\n      parseError: function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n          this.yy.parser.parseError(str, hash)\r\n        } else {\r\n          throw new Error(str)\r\n        }\r\n      },\r\n\r\n      // resets the lexer, sets new input\r\n      setInput: function (input, yy) {\r\n        this.yy = yy || this.yy || {}\r\n        this._input = input\r\n        this._more = this._backtrack = this.done = false\r\n        this.yylineno = this.yyleng = 0\r\n        this.yytext = this.matched = this.match = ''\r\n        this.conditionStack = ['INITIAL']\r\n        this.yylloc = {\r\n          first_line: 1,\r\n          first_column: 0,\r\n          last_line: 1,\r\n          last_column: 0\r\n        }\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [0, 0]\r\n        }\r\n        this.offset = 0\r\n        return this\r\n      },\r\n\r\n      // consumes and returns one char from the input\r\n      input: function () {\r\n        var ch = this._input[0]\r\n        this.yytext += ch\r\n        this.yyleng++\r\n        this.offset++\r\n        this.match += ch\r\n        this.matched += ch\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g)\r\n        if (lines) {\r\n          this.yylineno++\r\n          this.yylloc.last_line++\r\n        } else {\r\n          this.yylloc.last_column++\r\n        }\r\n        if (this.options.ranges) {\r\n          this.yylloc.range[1]++\r\n        }\r\n\r\n        this._input = this._input.slice(1)\r\n        return ch\r\n      },\r\n\r\n      // unshifts one char (or a string) into the input\r\n      unput: function (ch) {\r\n        var len = ch.length\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g)\r\n\r\n        this._input = ch + this._input\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len)\r\n        //this.yyleng -= len;\r\n        this.offset -= len\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g)\r\n        this.match = this.match.substr(0, this.match.length - 1)\r\n        this.matched = this.matched.substr(0, this.matched.length - 1)\r\n\r\n        if (lines.length - 1) {\r\n          this.yylineno -= lines.length - 1\r\n        }\r\n        var r = this.yylloc.range\r\n\r\n        this.yylloc = {\r\n          first_line: this.yylloc.first_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.first_column,\r\n          last_column: lines\r\n            ? (lines.length === oldLines.length\r\n                ? this.yylloc.first_column\r\n                : 0) +\r\n              oldLines[oldLines.length - lines.length].length -\r\n              lines[0].length\r\n            : this.yylloc.first_column - len\r\n        }\r\n\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len]\r\n        }\r\n        this.yyleng = this.yytext.length\r\n        return this\r\n      },\r\n\r\n      // When called from action, caches matched text and appends it on next action\r\n      more: function () {\r\n        this._more = true\r\n        return this\r\n      },\r\n\r\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n      reject: function () {\r\n        if (this.options.backtrack_lexer) {\r\n          this._backtrack = true\r\n        } else {\r\n          return this.parseError(\r\n            'Lexical error on line ' +\r\n              (this.yylineno + 1) +\r\n              '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' +\r\n              this.showPosition(),\r\n            {\r\n              text: '',\r\n              token: null,\r\n              line: this.yylineno\r\n            }\r\n          )\r\n        }\r\n        return this\r\n      },\r\n\r\n      // retain first n characters of the match\r\n      less: function (n) {\r\n        this.unput(this.match.slice(n))\r\n      },\r\n\r\n      // displays already matched input, i.e. for error messages\r\n      pastInput: function () {\r\n        var past = this.matched.substr(\r\n          0,\r\n          this.matched.length - this.match.length\r\n        )\r\n        return (\r\n          (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, '')\r\n        )\r\n      },\r\n\r\n      // displays upcoming input, i.e. for error messages\r\n      upcomingInput: function () {\r\n        var next = this.match\r\n        if (next.length < 20) {\r\n          next += this._input.substr(0, 20 - next.length)\r\n        }\r\n        return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(\r\n          /\\n/g,\r\n          ''\r\n        )\r\n      },\r\n\r\n      // displays the character position where the lexing error occurred, i.e. for error messages\r\n      showPosition: function () {\r\n        var pre = this.pastInput()\r\n        var c = new Array(pre.length + 1).join('-')\r\n        return pre + this.upcomingInput() + '\\n' + c + '^'\r\n      },\r\n\r\n      // test the lexed token: return FALSE when not a match, otherwise return token\r\n      test_match: function (match, indexed_rule) {\r\n        var token, lines, backup\r\n\r\n        if (this.options.backtrack_lexer) {\r\n          // save context\r\n          backup = {\r\n            yylineno: this.yylineno,\r\n            yylloc: {\r\n              first_line: this.yylloc.first_line,\r\n              last_line: this.last_line,\r\n              first_column: this.yylloc.first_column,\r\n              last_column: this.yylloc.last_column\r\n            },\r\n            yytext: this.yytext,\r\n            match: this.match,\r\n            matches: this.matches,\r\n            matched: this.matched,\r\n            yyleng: this.yyleng,\r\n            offset: this.offset,\r\n            _more: this._more,\r\n            _input: this._input,\r\n            yy: this.yy,\r\n            conditionStack: this.conditionStack.slice(0),\r\n            done: this.done\r\n          }\r\n          if (this.options.ranges) {\r\n            backup.yylloc.range = this.yylloc.range.slice(0)\r\n          }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g)\r\n        if (lines) {\r\n          this.yylineno += lines.length\r\n        }\r\n        this.yylloc = {\r\n          first_line: this.yylloc.last_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.last_column,\r\n          last_column: lines\r\n            ? lines[lines.length - 1].length -\r\n              lines[lines.length - 1].match(/\\r?\\n?/)[0].length\r\n            : this.yylloc.last_column + match[0].length\r\n        }\r\n        this.yytext += match[0]\r\n        this.match += match[0]\r\n        this.matches = match\r\n        this.yyleng = this.yytext.length\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [this.offset, (this.offset += this.yyleng)]\r\n        }\r\n        this._more = false\r\n        this._backtrack = false\r\n        this._input = this._input.slice(match[0].length)\r\n        this.matched += match[0]\r\n        token = this.performAction.call(\r\n          this,\r\n          this.yy,\r\n          this,\r\n          indexed_rule,\r\n          this.conditionStack[this.conditionStack.length - 1]\r\n        )\r\n        if (this.done && this._input) {\r\n          this.done = false\r\n        }\r\n        if (token) {\r\n          return token\r\n        } else if (this._backtrack) {\r\n          // recover context\r\n          for (var k in backup) {\r\n            this[k] = backup[k]\r\n          }\r\n          return false // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false\r\n      },\r\n\r\n      // return next match in input\r\n      next: function () {\r\n        if (this.done) {\r\n          return this.EOF\r\n        }\r\n        if (!this._input) {\r\n          this.done = true\r\n        }\r\n\r\n        var token, match, tempMatch, index\r\n        if (!this._more) {\r\n          this.yytext = ''\r\n          this.match = ''\r\n        }\r\n        var rules = this._currentRules()\r\n        for (var i = 0; i < rules.length; i++) {\r\n          tempMatch = this._input.match(this.rules[rules[i]])\r\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n            match = tempMatch\r\n            index = i\r\n            if (this.options.backtrack_lexer) {\r\n              token = this.test_match(tempMatch, rules[i])\r\n              if (token !== false) {\r\n                return token\r\n              } else if (this._backtrack) {\r\n                match = false\r\n                continue // rule action called reject() implying a rule MISmatch.\r\n              } else {\r\n                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                return false\r\n              }\r\n            } else if (!this.options.flex) {\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (match) {\r\n          token = this.test_match(match, rules[index])\r\n          if (token !== false) {\r\n            return token\r\n          }\r\n          // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n          return false\r\n        }\r\n        if (this._input === '') {\r\n          return this.EOF\r\n        } else {\r\n          return this.parseError(\r\n            'Lexical error on line ' +\r\n              (this.yylineno + 1) +\r\n              '. Unrecognized text.\\n' +\r\n              this.showPosition(),\r\n            {\r\n              text: '',\r\n              token: null,\r\n              line: this.yylineno\r\n            }\r\n          )\r\n        }\r\n      },\r\n\r\n      // return next match that has a token\r\n      lex: function lex() {\r\n        var r = this.next()\r\n        if (r) {\r\n          return r\r\n        } else {\r\n          return this.lex()\r\n        }\r\n      },\r\n\r\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n      begin: function begin(condition) {\r\n        this.conditionStack.push(condition)\r\n      },\r\n\r\n      // pop the previously active lexer condition state off the condition stack\r\n      popState: function popState() {\r\n        var n = this.conditionStack.length - 1\r\n        if (n > 0) {\r\n          return this.conditionStack.pop()\r\n        } else {\r\n          return this.conditionStack[0]\r\n        }\r\n      },\r\n\r\n      // produce the lexer rule set which is active for the currently active lexer condition state\r\n      _currentRules: function _currentRules() {\r\n        if (\r\n          this.conditionStack.length &&\r\n          this.conditionStack[this.conditionStack.length - 1]\r\n        ) {\r\n          return this.conditions[\r\n            this.conditionStack[this.conditionStack.length - 1]\r\n          ].rules\r\n        } else {\r\n          return this.conditions['INITIAL'].rules\r\n        }\r\n      },\r\n\r\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n      topState: function topState(n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0)\r\n        if (n >= 0) {\r\n          return this.conditionStack[n]\r\n        } else {\r\n          return 'INITIAL'\r\n        }\r\n      },\r\n\r\n      // alias for begin(condition)\r\n      pushState: function pushState(condition) {\r\n        this.begin(condition)\r\n      },\r\n\r\n      // return the number of states currently on the stack\r\n      stateStackSize: function stateStackSize() {\r\n        return this.conditionStack.length\r\n      },\r\n      options: { 'case-insensitive': true },\r\n      performAction: function anonymous(\r\n        yy,\r\n        yy_,\r\n        $avoiding_name_collisions,\r\n        YY_START\r\n      ) {\r\n        var YYSTATE = YY_START\r\n        switch ($avoiding_name_collisions) {\r\n          case 0 /* skip whitespace */:\r\n            break\r\n          case 1:\r\n            return 20\r\n            break\r\n          case 2:\r\n            return 7\r\n            break\r\n          case 3:\r\n            return 8\r\n            break\r\n          case 4:\r\n            return 9\r\n            break\r\n          case 5:\r\n            return 12\r\n            break\r\n          case 6:\r\n            return 16\r\n            break\r\n          case 7:\r\n            return 14\r\n            break\r\n          case 8:\r\n            return 10\r\n            break\r\n          case 9:\r\n            return 11\r\n            break\r\n          case 10:\r\n            return 19\r\n            break\r\n          case 11:\r\n            return 21\r\n            break\r\n          case 12:\r\n            return '<='\r\n            break\r\n          case 13:\r\n            return '>='\r\n            break\r\n          case 14:\r\n            return '<'\r\n            break\r\n          case 15:\r\n            return '>'\r\n            break\r\n          case 16:\r\n            yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2)\r\n            return 24\r\n            break\r\n          case 17:\r\n            return 13\r\n            break\r\n          case 18:\r\n            return 23\r\n            break\r\n          case 19:\r\n            return 5\r\n            break\r\n          case 20:\r\n            return 'INVALID'\r\n            break\r\n        }\r\n      },\r\n      rules: [\r\n        /^(?:\\s+)/i,\r\n        /^(?:(-?(?:[1-9][0-9]+|[0-9]))\\b)/i,\r\n        /^(?:OR\\b)/i,\r\n        /^(?:AND\\b)/i,\r\n        /^(?:NOT\\b)/i,\r\n        /^(?:((ALL|NONE|HETATM|PROTEIN|BASIC|ACIDIC|CHARGED|POLAR|NONPOLAR|AROMATIC|NUCLEIC|PURINE|PYRIMIDINE|WATER|POLARH|NONPOLARH))\\b)/i,\r\n        /^(?:((NAME|ELEM|TYPE|RESIDUE|ICODE|CHAIN|ALTLOC))\\b)/i,\r\n        /^(?:((SERIAL|SEQUENCE|RESIDX))\\b)/i,\r\n        /^(?:\\()/i,\r\n        /^(?:\\))/i,\r\n        /^(?:,)/i,\r\n        /^(?::)/i,\r\n        /^(?:<=)/i,\r\n        /^(?:>=)/i,\r\n        /^(?:<)/i,\r\n        /^(?:>)/i,\r\n        /^(?:((?:\"(?:\\\\.|[^\\\\\"])*\"|'(?:\\\\.|[^\\\\'])*')))/i,\r\n        /^(?:(@[_A-Z0-9]+))/i,\r\n        /^(?:([_A-Z0-9]+))/i,\r\n        /^(?:$)/i,\r\n        /^(?:.)/i\r\n      ],\r\n      conditions: {\r\n        INITIAL: {\r\n          rules: [\r\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\r\n            19, 20\r\n          ],\r\n          inclusive: true\r\n        }\r\n      }\r\n    }\r\n    return lexer\r\n  })()\r\n  parser.lexer = lexer\r\n  function Parser() {\r\n    this.yy = {}\r\n  }\r\n  Parser.prototype = parser\r\n  parser.Parser = Parser\r\n  return new Parser()\r\n})()\r\n\r\nmodule.exports = { parser: parser }\r\n",
		"import utils from '../../utils'\r\n\r\n// ----------------------------------------------------------------------------\r\nclass Range {\r\n  constructor(min, max) {\r\n    this.min = min\r\n    this.max = typeof max === 'undefined' ? min : max\r\n  }\r\n\r\n  includes(value) {\r\n    return this.min <= value && value <= this.max\r\n  }\r\n\r\n  toString() {\r\n    const { min, max } = this\r\n    return min === max ? String(min) : [min, max].join(':')\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.min, this.max]\r\n  }\r\n}\r\n\r\n// ////////////////////////////////////////////////////////////////////////////\r\n\r\nclass List {\r\n  constructor(arg) {\r\n    if (arg instanceof this.constructor) {\r\n      return arg\r\n    }\r\n    if (arg instanceof Array) {\r\n      this._values = arg.slice(0)\r\n    } else if (arg) {\r\n      this._values = [arg]\r\n    } else {\r\n      this._values = []\r\n    }\r\n  }\r\n\r\n  append(value) {\r\n    const values = this._values\r\n    values[values.length] = value\r\n    return this\r\n  }\r\n\r\n  remove(value) {\r\n    const values = this._values\r\n    const index = values.indexOf(value)\r\n    if (index >= 0) {\r\n      values.splice(index, 1)\r\n    }\r\n    return this\r\n  }\r\n\r\n  toString() {\r\n    return this._values.join(',')\r\n  }\r\n\r\n  toJSON() {\r\n    const values = this._values\r\n    const result = []\r\n    for (let i = 0, n = values.length; i < n; ++i) {\r\n      const value = values[i]\r\n      result[i] = value.toJSON ? value.toJSON() : value\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nclass RangeList extends List {\r\n  includes(value) {\r\n    const list = this._values\r\n    for (let i = 0, n = list.length; i < n; ++i) {\r\n      if (list[i].includes(value)) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst valuesArray = []\r\n\r\nclass ValueList extends List {\r\n  constructor(arg, upperOnly) {\r\n    const list = super(arg)\r\n    if (upperOnly) {\r\n      this.upperOnly = true\r\n      const values = list._values\r\n      for (let i = 0, n = values.length; i < n; ++i) {\r\n        const value = values[i]\r\n        if (typeof value === 'string') {\r\n          values[i] = value.toUpperCase()\r\n        }\r\n      }\r\n    } else {\r\n      this.upperOnly = false\r\n    }\r\n    return list\r\n  }\r\n\r\n  includes(value) {\r\n    // we do not convert to upper case here for perfomance reasons\r\n    // if list is upper case only, value must be converted before it is sent up to  here\r\n    return this._values.indexOf(value) !== -1\r\n  }\r\n\r\n  toString() {\r\n    // Quote values that are not correct identifiers\r\n    const values = this._values\r\n    valuesArray.length = 0\r\n    for (let i = 0, n = values.length; i < n; ++i) {\r\n      valuesArray[i] = utils.correctSelectorIdentifier(String(values[i]))\r\n    }\r\n    return valuesArray.join(',')\r\n  }\r\n\r\n  _validate(value) {\r\n    return this.upperOnly && typeof value === 'string'\r\n      ? value.toUpperCase()\r\n      : value\r\n  }\r\n\r\n  append(value) {\r\n    super.append(this._validate(value))\r\n    return this\r\n  }\r\n\r\n  remove(value) {\r\n    super.remove(this._validate(value))\r\n    return this\r\n  }\r\n}\r\n\r\nexport { Range, List, RangeList, ValueList }\r\n",
		"import { RangeList, ValueList } from './selectArgs'\r\n\r\n/** Base class for atom selectors. */\r\nclass Selector {\r\n  toString() {\r\n    return this.keyword\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.name]\r\n  }\r\n}\r\n\r\nSelector.prototype.name = 'Error'\r\nSelector.prototype.keyword = 'error'\r\n\r\n/** Base class for list-based atom selectors. */\r\nclass ListSelector extends Selector {\r\n  constructor(list) {\r\n    super()\r\n    this.list = list\r\n  }\r\n\r\n  toString() {\r\n    return `${this.keyword} ${this.list}`\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.name, this.list.toJSON()]\r\n  }\r\n}\r\n\r\nclass RangeListSelector extends ListSelector {\r\n  constructor(arg) {\r\n    super(new RangeList(arg))\r\n  }\r\n}\r\n\r\nclass ValueListSelector extends ListSelector {\r\n  constructor(arg, caseSensitive) {\r\n    super(new ValueList(arg, !caseSensitive))\r\n  }\r\n}\r\n\r\nclass NoneSelector extends Selector {\r\n  includesAtom(_atom) {\r\n    return false\r\n  }\r\n}\r\n\r\nNoneSelector.prototype.name = 'None'\r\nNoneSelector.prototype.keyword = 'none'\r\n\r\nclass AllSelector extends Selector {\r\n  includesAtom(_atom) {\r\n    return true\r\n  }\r\n}\r\n\r\nAllSelector.prototype.name = 'All'\r\nAllSelector.prototype.keyword = 'all'\r\n\r\nexport {\r\n  Selector,\r\n  ListSelector,\r\n  RangeListSelector,\r\n  ValueListSelector,\r\n  NoneSelector,\r\n  AllSelector\r\n}\r\n",
		"import { Selector, NoneSelector } from './selectorsBase'\r\n\r\n// ----------------------------------------------------------------------------\r\n// Operators\r\n// ----------------------------------------------------------------------------\r\nconst none = new NoneSelector()\r\n\r\nclass PrefixOperator extends Selector {\r\n  constructor(rhs) {\r\n    super()\r\n    this.rhs = rhs || none\r\n  }\r\n\r\n  toString() {\r\n    const rhs =\r\n      this.rhs.priority && this.rhs.priority > this.priority\r\n        ? `(${this.rhs})`\r\n        : this.rhs\r\n    return `${this.keyword} ${rhs}`\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.name, this.rhs.toJSON()]\r\n  }\r\n}\r\n\r\nPrefixOperator.prototype.priority = 1\r\n\r\nclass InfixOperator extends Selector {\r\n  constructor(lhs, rhs) {\r\n    super()\r\n    this.lhs = lhs || none\r\n    this.rhs = rhs || none\r\n  }\r\n\r\n  toString() {\r\n    const lhs =\r\n      this.lhs.priority && this.lhs.priority > this.priority\r\n        ? `(${this.lhs})`\r\n        : this.lhs\r\n    const rhs =\r\n      this.rhs.priority && this.rhs.priority > this.priority\r\n        ? `(${this.rhs})`\r\n        : this.rhs\r\n    return `${lhs} ${this.keyword} ${rhs}`\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.name, this.lhs.toJSON(), this.rhs.toJSON()]\r\n  }\r\n}\r\n\r\nInfixOperator.prototype.priority = 1000\r\n\r\nexport { PrefixOperator, InfixOperator }\r\n",
		"import Atom from './Atom'\r\nimport ResidueType from './ResidueType'\r\nimport { parser } from '../utils/SelectionParser'\r\nimport { Range, RangeList, ValueList } from './selectors/selectArgs'\r\nimport { PrefixOperator, InfixOperator } from './selectors/selectOps'\r\nimport {\r\n  Selector,\r\n  RangeListSelector,\r\n  ValueListSelector,\r\n  NoneSelector,\r\n  AllSelector\r\n} from './selectors/selectorsBase'\r\n\r\nconst keywords = {}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Named selectors\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction defineSelector(name, SelectorClass) {\r\n  const keyword = name.toLowerCase()\r\n  SelectorClass.prototype.keyword = keyword\r\n  SelectorClass.prototype.name = name\r\n\r\n  const factory = (...args) => new SelectorClass(...args)\r\n  factory.SelectorClass = SelectorClass\r\n  keywords[keyword] = factory\r\n\r\n  return SelectorClass\r\n}\r\n\r\ndefineSelector(\r\n  'Serial',\r\n  class SerialSelector extends RangeListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.serial)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'Name',\r\n  class NameSelector extends ValueListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.name)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'AltLoc',\r\n  class AltLocSelector extends ValueListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(String.fromCharCode(atom.location))\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'Elem',\r\n  class ElemSelector extends ValueListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.element.name)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'Residue',\r\n  class ResidueSelector extends ValueListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.residue._type._name)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'Sequence',\r\n  class SequenceSelector extends RangeListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.residue._sequence)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'ICode',\r\n  class ICodeSelector extends ValueListSelector {\r\n    constructor(arg) {\r\n      super(arg, true)\r\n    }\r\n\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.residue._icode)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'ResIdx',\r\n  class ResIdxSelector extends RangeListSelector {\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.residue._index)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'Chain',\r\n  class ChainSelector extends ValueListSelector {\r\n    constructor(arg) {\r\n      super(arg, true)\r\n    }\r\n\r\n    includesAtom(atom) {\r\n      return this.list.includes(atom.residue._chain._name)\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'Hetatm',\r\n  class HetatmSelector extends Selector {\r\n    includesAtom(atom) {\r\n      return atom.het\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'PolarH',\r\n  class PolarHSelector extends Selector {\r\n    includesAtom(atom) {\r\n      return (atom.flags & Atom.Flags.NONPOLARH) === Atom.Flags.HYDROGEN\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector(\r\n  'NonPolarH',\r\n  class NonPolarHSelector extends Selector {\r\n    includesAtom(atom) {\r\n      return (atom.flags & Atom.Flags.NONPOLARH) === Atom.Flags.NONPOLARH\r\n    }\r\n  }\r\n)\r\n\r\ndefineSelector('All', AllSelector)\r\n\r\ndefineSelector('None', NoneSelector)\r\n\r\nconst NULL_SELECTOR = keywords.none()\r\n\r\n// ----------------------------------------------------------------------------\r\n// Named operators\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction defineOperator(name, priority, OperatorClass) {\r\n  OperatorClass.prototype.priority = priority\r\n  return defineSelector(name, OperatorClass)\r\n}\r\ndefineOperator(\r\n  'Not',\r\n  1,\r\n  class NotOperator extends PrefixOperator {\r\n    includesAtom(atom) {\r\n      return !this.rhs.includesAtom(atom)\r\n    }\r\n  }\r\n)\r\n\r\ndefineOperator(\r\n  'And',\r\n  2,\r\n  class AndOperator extends InfixOperator {\r\n    includesAtom(atom) {\r\n      return this.lhs.includesAtom(atom) && this.rhs.includesAtom(atom)\r\n    }\r\n  }\r\n)\r\n\r\ndefineOperator(\r\n  'Or',\r\n  3,\r\n  class OrOperator extends InfixOperator {\r\n    includesAtom(atom) {\r\n      return this.lhs.includesAtom(atom) || this.rhs.includesAtom(atom)\r\n    }\r\n  }\r\n)\r\n\r\n// ----------------------------------------------------------------------------\r\n// Flag selectors\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction byResidueTypeFlag(flag, name) {\r\n  return defineSelector(\r\n    name,\r\n    class extends Selector {\r\n      includesAtom(atom) {\r\n        return (atom.residue._type.flags & flag) !== 0\r\n      }\r\n    }\r\n  )\r\n}\r\n\r\nbyResidueTypeFlag(ResidueType.Flags.PROTEIN, 'Protein')\r\nbyResidueTypeFlag(ResidueType.Flags.BASIC, 'Basic')\r\nbyResidueTypeFlag(ResidueType.Flags.ACIDIC, 'Acidic')\r\nbyResidueTypeFlag(ResidueType.Flags.BASIC | ResidueType.Flags.ACIDIC, 'Charged')\r\nbyResidueTypeFlag(ResidueType.Flags.POLAR, 'Polar')\r\nbyResidueTypeFlag(ResidueType.Flags.NONPOLAR, 'NonPolar')\r\nbyResidueTypeFlag(ResidueType.Flags.AROMATIC, 'Aromatic')\r\nbyResidueTypeFlag(ResidueType.Flags.NUCLEIC, 'Nucleic')\r\nbyResidueTypeFlag(ResidueType.Flags.PURINE, 'Purine')\r\nbyResidueTypeFlag(ResidueType.Flags.PYRIMIDINE, 'Pyrimidine')\r\nbyResidueTypeFlag(ResidueType.Flags.WATER, 'Water')\r\n\r\n// ----------------------------------------------------------------------------\r\nconst selectors = Object.create(keywords)\r\n\r\nselectors.Selector = Selector\r\nselectors.RangeListSelector = RangeListSelector\r\nselectors.ValueListSelector = ValueListSelector\r\nselectors.Range = Range\r\nselectors.RangeList = RangeList\r\nselectors.ValueList = ValueList\r\nselectors.PrefixOperator = PrefixOperator\r\nselectors.InfixOperator = InfixOperator\r\nselectors.Context = Object.create({})\r\n\r\nselectors.GetSelector = function (key) {\r\n  if (!selectors.Context.hasOwnProperty(key)) {\r\n    const exc = { message: `selector ${key} is not registered` }\r\n    throw exc\r\n  }\r\n  return selectors.Context[key] || NULL_SELECTOR\r\n}\r\n\r\nselectors.ClearContext = function () {\r\n  Object.keys(selectors.Context).forEach((k) => {\r\n    delete selectors.Context[k]\r\n  })\r\n}\r\n\r\nselectors.keyword = function (key) {\r\n  return keywords[key.toLowerCase()] || keywords.none\r\n}\r\n\r\nselectors.parse = function (str) {\r\n  const res = {}\r\n  try {\r\n    res.selector = parser.parse(str)\r\n  } catch (e) {\r\n    res.selector = NULL_SELECTOR\r\n    res.error = e.message\r\n  }\r\n  return res\r\n}\r\n\r\nparser.yy = selectors\r\nparser.yy.parseError = parser.parseError // workaround for incorrect JISON parser generator for AMD module\r\n\r\nexport default selectors\r\n",
		"import selectors from './selectors'\r\nimport { Box3, Sphere, Vector3 } from 'three'\r\n\r\n/**\r\n * Basic biological unit class.\r\n *\r\n * @exports BiologicalUnit\r\n * @constructor\r\n */\r\nclass BiologicalUnit {\r\n  constructor(complex) {\r\n    this._complex = complex\r\n    this._selector = selectors.keyword('All')()\r\n    this._boundaries = {\r\n      boundingBox: new Box3(),\r\n      boundingSphere: new Sphere()\r\n    }\r\n  }\r\n\r\n  computeBoundaries() {\r\n    const atoms = this._complex._atoms\r\n    const n = atoms.length\r\n    const selector = this._selector\r\n\r\n    const { boundingBox } = this._boundaries\r\n    boundingBox.makeEmpty()\r\n    if (n === 1) {\r\n      boundingBox.expandByPoint(atoms[0].position)\r\n      const bbc = new Vector3()\r\n      boundingBox.getCenter(bbc)\r\n      const s = 2 * atoms[0].element.radius\r\n      boundingBox.setFromCenterAndSize(bbc, new Vector3(s, s, s))\r\n    } else {\r\n      for (let i = 0; i < n; ++i) {\r\n        if (selector.includesAtom(atoms[i])) {\r\n          boundingBox.expandByPoint(atoms[i].position)\r\n        }\r\n      }\r\n    }\r\n\r\n    // Build bounding sphere\r\n    let radiusSquared = 0.0\r\n    const center = new Vector3()\r\n    boundingBox.getCenter(center)\r\n    if (n === 1) {\r\n      this._boundaries.boundingSphere.set(center, atoms[0].element.radius)\r\n    } else {\r\n      for (let i = 0; i < n; ++i) {\r\n        if (!selector.includesAtom(atoms[i])) {\r\n          continue\r\n        }\r\n        const pos = atoms[i].position\r\n        const lengthSquared = center.distanceToSquared(pos)\r\n        if (radiusSquared < lengthSquared) {\r\n          radiusSquared = lengthSquared\r\n        }\r\n      }\r\n      this._boundaries.boundingSphere.set(center, Math.sqrt(radiusSquared))\r\n    }\r\n  }\r\n\r\n  getTransforms() {\r\n    return []\r\n  }\r\n\r\n  getSelector() {\r\n    return this._selector\r\n  }\r\n\r\n  getBoundaries() {\r\n    return this._boundaries\r\n  }\r\n\r\n  finalize() {}\r\n}\r\n\r\nexport default BiologicalUnit\r\n",
		"import selectors from './selectors'\r\nimport BiologicalUnit from './BiologicalUnit'\r\nimport { Box3, Sphere, Vector3 } from 'three'\r\n\r\n/**\r\n * Biological assembly.\r\n *\r\n * @exports Assembly\r\n * @constructor\r\n */\r\n\r\nclass Assembly extends BiologicalUnit {\r\n  constructor(complex) {\r\n    super(complex)\r\n    this.chains = []\r\n    this.matrices = []\r\n  }\r\n\r\n  computeBoundaries() {\r\n    super.computeBoundaries()\r\n    // fix up the boundaries\r\n    const { matrices } = this\r\n    const oldCenter = this._boundaries.boundingSphere.center\r\n    const oldRad = this._boundaries.boundingSphere.radius\r\n    const boundingBox = (this._boundaries.boundingBox = new Box3())\r\n    boundingBox.makeEmpty()\r\n    for (let i = 0, n = matrices.length; i < n; ++i) {\r\n      boundingBox.expandByPoint(oldCenter.clone().applyMatrix4(matrices[i]))\r\n    }\r\n\r\n    const newRad = boundingBox.max.distanceTo(boundingBox.min) / 2 + oldRad\r\n    const center = new Vector3()\r\n    boundingBox.getCenter(center)\r\n    this._boundaries.boundingSphere = new Sphere().set(center, newRad)\r\n    boundingBox.max.addScalar(oldRad)\r\n    boundingBox.min.subScalar(oldRad)\r\n  }\r\n\r\n  /**\r\n   * Mark a chain as belonging to this biological assembly.\r\n   * @param {string} chain - chain identifier, usually a single letter\r\n   */\r\n  addChain(chain) {\r\n    this.chains[this.chains.length] = chain\r\n  }\r\n\r\n  /**\r\n   * Add a transformation matrix.\r\n   * @param {Matrix4} matrix - transformation matrix\r\n   */\r\n  addMatrix(matrix) {\r\n    this.matrices[this.matrices.length] = matrix\r\n  }\r\n\r\n  getTransforms() {\r\n    return this.matrices\r\n  }\r\n\r\n  finalize() {\r\n    if (this.chains.length > 0) {\r\n      this._selector = selectors.keyword('Chain')(this.chains)\r\n    } else {\r\n      this._selector = selectors.keyword('None')()\r\n    }\r\n  }\r\n}\r\n\r\nexport default Assembly\r\n",
		"/**\r\n * This class represents connected component as a part of a complex.\r\n * WARNING! The whole component entity is build under the assumption that residues\r\n * are placed in the chains and complex in ascending order of indices\r\n *\r\n * @param {Complex} complex - Molecular complex this chain belongs to.\r\n *\r\n * @exports Component\r\n * @constructor\r\n */\r\nclass Component {\r\n  constructor(complex) {\r\n    this._complex = complex\r\n    this._index = -1\r\n    this._residueIndices = []\r\n    this._cycles = []\r\n    this._subDivs = []\r\n    this._residueCount = 0\r\n  }\r\n\r\n  getResidues() {\r\n    return this._complex._residues\r\n  }\r\n\r\n  getResidueCount() {\r\n    return this._residueCount\r\n  }\r\n\r\n  forEachResidue(process) {\r\n    const residues = this._complex._residues\r\n    const resIdc = this._residueIndices\r\n    for (let idIdc = 0, idCount = resIdc.length; idIdc < idCount; ++idIdc) {\r\n      for (\r\n        let idx = resIdc[idIdc].start, last = resIdc[idIdc].end;\r\n        idx <= last;\r\n        ++idx\r\n      ) {\r\n        process(residues[idx])\r\n      }\r\n    }\r\n  }\r\n\r\n  setSubDivs(subDivs) {\r\n    this._subDivs = subDivs\r\n    let curr = 0\r\n    const resIdc = []\r\n    let resCnt = 0\r\n    for (let i = 0, n = subDivs.length; i < n; ++i) {\r\n      if (i === n - 1 || subDivs[i].end + 1 !== subDivs[i + 1].start) {\r\n        const { start } = subDivs[curr]\r\n        const { end } = subDivs[i]\r\n        resIdc[resIdc.length] = {\r\n          start,\r\n          end\r\n        }\r\n        resCnt += end - start + 1\r\n        curr = i + 1\r\n      }\r\n    }\r\n\r\n    this._residueIndices = resIdc\r\n    this._residueCount = resCnt\r\n  }\r\n\r\n  getComplex() {\r\n    return this._complex\r\n  }\r\n\r\n  forEachBond(process) {\r\n    const bonds = this._complex._bonds\r\n\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      const bond = bonds[i]\r\n      if (bond._left.residue._component === this) {\r\n        process(bond)\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.forEachCycle((cycle) => {\r\n      cycle.update()\r\n    })\r\n  }\r\n\r\n  forEachAtom(process) {\r\n    this.forEachResidue((residue) => {\r\n      residue.forEachAtom(process)\r\n    })\r\n  }\r\n\r\n  addCycle(cycle) {\r\n    this._cycles.push(cycle)\r\n  }\r\n\r\n  forEachCycle(process) {\r\n    const cycles = this._cycles\r\n    for (let i = 0, n = cycles.length; i < n; ++i) {\r\n      process(cycles[i])\r\n    }\r\n  }\r\n\r\n  markResidues() {\r\n    const self = this\r\n    self.forEachResidue((residue) => {\r\n      residue._component = self\r\n    })\r\n  }\r\n\r\n  _forEachSubChain(mask, process) {\r\n    const residues = this._complex._residues\r\n    const subs = this._subDivs\r\n    for (let i = 0, n = subs.length; i < n; ++i) {\r\n      for (let idx = subs[i].start, last = subs[i].end; idx <= last; ++idx) {\r\n        const currRes = residues[idx]\r\n        if (mask & currRes._mask && currRes._isValid) {\r\n          let end = idx + 1\r\n          for (; end <= last; ++end) {\r\n            const endRes = residues[end]\r\n            if (!(mask & endRes._mask && endRes._isValid)) {\r\n              break\r\n            }\r\n          }\r\n          process(i, idx, end - 1)\r\n          idx = end\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getMaskedSequences(mask) {\r\n    const subs = []\r\n    let idx = 0\r\n    this._forEachSubChain(mask, (_subIdx, start, end) => {\r\n      subs[idx++] = { start, end }\r\n    })\r\n\r\n    return subs\r\n  }\r\n\r\n  getMaskedSubdivSequences(mask) {\r\n    const subs = []\r\n    let currIdx = -1\r\n    let lastSubIdx = -1\r\n    const subDivs = this._subDivs\r\n\r\n    this._forEachSubChain(mask, (subIdx, start, end) => {\r\n      if (lastSubIdx !== subIdx) {\r\n        ++currIdx\r\n        subs[currIdx] = {\r\n          arr: [],\r\n          boundaries: subDivs[subIdx]\r\n        }\r\n        lastSubIdx = subIdx\r\n      }\r\n      subs[currIdx].arr[subs[currIdx].arr.length] = { start, end }\r\n    })\r\n\r\n    return subs\r\n  }\r\n}\r\n\r\nexport default Component\r\n",
		"import utils from '../utils'\r\n\r\nconst cMaxPairsForHashCode = 32\r\nconst cHashTableSize = 1024 * 1024\r\nconst cNumbersPerPair = 4\r\nconst cMaxNeighbours = 14\r\nconst cInvalidVal = -1\r\n// 89237 is a large simple number, can be used for pseudo random hash code create\r\nconst cBigPrime = 89237\r\n\r\nclass AtomPairs {\r\n  constructor(maxPairsEstimate) {\r\n    this.numPairs = 0\r\n    this.numMaxPairs = maxPairsEstimate\r\n    this.intBuffer = utils.allocateTyped(\r\n      Int32Array,\r\n      maxPairsEstimate * cNumbersPerPair\r\n    )\r\n    for (let i = 0; i < maxPairsEstimate * cNumbersPerPair; i++) {\r\n      this.intBuffer[i] = cInvalidVal\r\n    }\r\n    this.hashBuffer = utils.allocateTyped(\r\n      Int32Array,\r\n      cHashTableSize * cMaxPairsForHashCode\r\n    )\r\n    for (let i = 0; i < cHashTableSize * cMaxPairsForHashCode; i++) {\r\n      this.hashBuffer[i] = cInvalidVal\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy all pairs memory\r\n   */\r\n  destroy() {\r\n    this.intBuffer = null\r\n    this.hashBuffer = null\r\n  }\r\n\r\n  /**\r\n   * Add pair of atoms to collection\r\n   * @param {number} indexA - Index of the 1st vertex.\r\n   * @param {number} indexB - Index of the 2nd vertex.\r\n   */\r\n  addPair(indexA, indexB) {\r\n    const ia = indexA < indexB ? indexA : indexB\r\n    const ib = indexA > indexB ? indexA : indexB\r\n    const codeToAdd = ia + (ib << cMaxNeighbours)\r\n\r\n    const hashCode = (ia + ib * cBigPrime) & (cHashTableSize - 1)\r\n    let j = hashCode * cMaxPairsForHashCode\r\n    let apI = 0\r\n    for (; apI < cMaxPairsForHashCode; apI++) {\r\n      const code = this.hashBuffer[j + apI]\r\n      if (code === cInvalidVal) {\r\n        break\r\n      }\r\n      if (code === codeToAdd) {\r\n        return false\r\n      }\r\n    }\r\n    // add this new hash code\r\n    if (apI >= cMaxPairsForHashCode) {\r\n      throw new Error('addPair: increase cMaxPairsForHashCode')\r\n    }\r\n    this.hashBuffer[j + apI] = codeToAdd\r\n\r\n    // actually add\r\n    if (this.numPairs >= this.numMaxPairs) {\r\n      throw new Error('addPair: increase num pairs')\r\n    }\r\n    j = this.numPairs * cNumbersPerPair\r\n    this.intBuffer[j] = ia\r\n    this.intBuffer[j + 1] = ib\r\n    this.intBuffer[j + 2] = codeToAdd\r\n    this.numPairs++\r\n    return true\r\n  }\r\n}\r\n\r\nexport default AtomPairs\r\n",
		"import AtomPairs from './AtomPairs'\r\nimport Bond from './Bond'\r\n\r\nconst cProfileBondBuilder = false\r\nconst cEstBondsMultiplier = 4\r\nconst cSpaceCode = 32\r\nconst cBondTolerance = 0.45\r\nconst cVMDTolerance = 0.6\r\nconst cBondRadInJMOL = true\r\nconst cEpsilon = 0.001\r\n\r\n/**\r\n * Get radius used for building bonds.\r\n *\r\n * @param {Atom} atom - Atom object.\r\n * @returns {number} special value for bonding radius for this atom\r\n */\r\nfunction _getBondingRadius(atom) {\r\n  const { element } = atom\r\n  if (element) {\r\n    return element.radiusBonding\r\n  }\r\n  throw new Error('_getBondingRadius: Logic error.')\r\n}\r\n\r\nfunction _isAtomEligible(atom) {\r\n  // build for all non-hetatm and for hetatm without bonds\r\n  return !atom.isHet() || (atom.bonds && atom.bonds.length === 0)\r\n}\r\n\r\n/**\r\n * Bond between atoms.\r\n *\r\n * @param {Complex} complex molecular complex\r\n\r\n * @exports AutoBond\r\n * @constructor\r\n */\r\nclass AutoBond {\r\n  constructor(complex) {\r\n    this._complex = complex\r\n    this._maxRad = 1.8\r\n    const bBox = this._complex.getDefaultBoundaries().boundingBox\r\n    this._vBoxMin = bBox.min.clone()\r\n    this._vBoxMax = bBox.max.clone()\r\n\r\n    this._pairCollection = null\r\n  }\r\n\r\n  /**\r\n   * Add existing pairs of connectors (from pdb file after its reading)\r\n   * @returns {number} 0\r\n   */\r\n  _addExistingPairs() {\r\n    const atoms = this._complex.getAtoms()\r\n    const numAtoms = atoms.length\r\n    let aInd = 0\r\n    const collection = this._pairCollection\r\n\r\n    for (; aInd < numAtoms; aInd++) {\r\n      const { bonds } = atoms[aInd]\r\n      const numBondsForAtom = bonds.length\r\n      for (let bInd = 0; bInd < numBondsForAtom; bInd++) {\r\n        const bond = bonds[bInd]\r\n        const indTo = bond._left.index\r\n        if (indTo === aInd) {\r\n          collection.addPair(aInd, bond._right.index)\r\n        }\r\n      } // for (b) all bonds in atom\r\n    } // for (a)\r\n    return 0\r\n  }\r\n\r\n  _findPairs() {\r\n    const vw = this._complex.getVoxelWorld()\r\n    if (vw === null) {\r\n      return\r\n    }\r\n\r\n    const atoms = this._complex._atoms\r\n    const atomsNum = atoms.length\r\n    const self = this\r\n\r\n    let rA\r\n    let isHydrogenA\r\n    let posA\r\n    let locationA\r\n    let atomA\r\n\r\n    const processAtom = function (atomB) {\r\n      if (isHydrogenA && atomB.isHydrogen()) {\r\n        return\r\n      }\r\n\r\n      const locationB = atomB.location\r\n      if (\r\n        locationA !== cSpaceCode &&\r\n        locationB !== cSpaceCode &&\r\n        locationA !== locationB\r\n      ) {\r\n        return\r\n      }\r\n\r\n      const dist2 = posA.distanceToSquared(atomB.position)\r\n      const rB = atomB.element.radiusBonding\r\n      const maxAcceptable = cBondRadInJMOL\r\n        ? rA + rB + cBondTolerance\r\n        : cVMDTolerance * (rA + rB)\r\n\r\n      if (dist2 > maxAcceptable * maxAcceptable) {\r\n        return\r\n      }\r\n\r\n      if (dist2 < cEpsilon) {\r\n        return\r\n      }\r\n\r\n      self._pairCollection.addPair(atomA.index, atomB.index)\r\n    }\r\n\r\n    for (let i = 0; i < atomsNum; ++i) {\r\n      atomA = atoms[i]\r\n      if (!_isAtomEligible(atomA)) {\r\n        continue\r\n      }\r\n\r\n      rA = atomA.element.radiusBonding\r\n      isHydrogenA = atomA.isHydrogen()\r\n      posA = atomA.position\r\n      locationA = atomA.location\r\n\r\n      vw.forEachAtomWithinRadius(\r\n        posA,\r\n        2 * this._maxRad + cBondTolerance,\r\n        processAtom\r\n      )\r\n    }\r\n  }\r\n\r\n  _addPairs() {\r\n    const atoms = this._complex._atoms\r\n\r\n    for (let i = 0, k = 0; i < this._pairCollection.numPairs; i++, k += 4) {\r\n      const iA = this._pairCollection.intBuffer[k]\r\n      const iB = this._pairCollection.intBuffer[k + 1]\r\n      this._addPair(atoms[iA], atoms[iB])\r\n    }\r\n  }\r\n\r\n  _addPair(atomA, atomB) {\r\n    const bondsA = atomA.bonds\r\n    const indexA = atomA.index\r\n    const indexB = atomB.index\r\n    for (let j = 0, numBonds = bondsA.length; j < numBonds; ++j) {\r\n      const bond = bondsA[j]\r\n      if (bond._left.index === indexB || bond._right.index === indexB) {\r\n        return\r\n      }\r\n    }\r\n    const left = indexA < indexB ? atomA : atomB\r\n    const right = indexA < indexB ? atomB : atomA\r\n    const newBond = this._complex.addBond(\r\n      left,\r\n      right,\r\n      0,\r\n      Bond.BondType.UNKNOWN,\r\n      false\r\n    )\r\n    bondsA.push(newBond)\r\n    atomB.bonds.push(newBond)\r\n  }\r\n\r\n  build() {\r\n    if (cProfileBondBuilder) {\r\n      console.time('Bonds Builder')\r\n    }\r\n    this._buildInner()\r\n\r\n    if (cProfileBondBuilder) {\r\n      console.timeEnd('Bonds Builder')\r\n    }\r\n  }\r\n\r\n  _buildInner() {\r\n    const atoms = this._complex._atoms\r\n    if (atoms.length < 2) {\r\n      return\r\n    }\r\n    if (atoms[0].index < 0) {\r\n      throw new Error('AutoBond: Atoms in complex were not indexed.')\r\n    }\r\n\r\n    this._calcBoundingBox()\r\n    this._pairCollection = new AtomPairs(atoms.length * cEstBondsMultiplier)\r\n    this._addExistingPairs()\r\n    this._findPairs()\r\n    this._addPairs()\r\n  }\r\n\r\n  _calcBoundingBox() {\r\n    const atoms = this._complex._atoms\r\n    const nAtoms = atoms.length\r\n    let maxRad = _getBondingRadius(atoms[0])\r\n    for (let i = 1; i < nAtoms; ++i) {\r\n      maxRad = Math.max(maxRad, _getBondingRadius(atoms[i]))\r\n    }\r\n    this._vBoxMax.addScalar(maxRad)\r\n    this._vBoxMin.addScalar(-maxRad)\r\n    this._maxRad = maxRad * 1.2\r\n  }\r\n\r\n  destroy() {\r\n    if (this._pairCollection) {\r\n      this._pairCollection.destroy()\r\n    }\r\n  }\r\n}\r\n\r\nexport default AutoBond\r\n",
		"import Bond from './Bond'\r\nimport Element from './Element'\r\nimport { MathUtils, Vector3 } from 'three'\r\n\r\nconst cCrossThresh = 0.1\r\nconst cAromaticType = Bond.BondType.AROMATIC\r\nconst cAromaticAtoms = [\r\n  Element.ByName.C.number,\r\n  Element.ByName.N.number\r\n  // Element.ByName.O.number,\r\n  // Element.ByName.S.number,\r\n]\r\n\r\n/** Conditions for bonds:\r\n *   - Cross product with each subsequent bond to add is collinear and point to the same direction\r\n *   - Each pair of a adjacent bonds belong to not more than one cycle\r\n *   - If there is more than one candidates we try them in ascending order of angle values\r\n */\r\n\r\nconst _coDirVectors = (function () {\r\n  const v1Tmp = new Vector3()\r\n  const v2Tmp = new Vector3()\r\n  const cp = new Vector3()\r\n  return function (v1, v2) {\r\n    v1Tmp.copy(v1).normalize()\r\n    v2Tmp.copy(v2).normalize()\r\n    cp.crossVectors(v1Tmp, v2Tmp)\r\n    if (cp.length() > cCrossThresh) {\r\n      return false\r\n    }\r\n    // zero vector in out terms must be collinear to any\r\n    return v1Tmp.dot(v2Tmp) >= 0\r\n  }\r\n})()\r\n\r\nfunction _insertAscending(arr, val) {\r\n  let idx = 0\r\n  while (idx < arr.length && arr[idx] < val) {\r\n    ++idx\r\n  }\r\n  arr.splice(idx, 0, val)\r\n}\r\n\r\nfunction _anotherAtom(bond, currAtom) {\r\n  return bond._left === currAtom ? bond._right : bond._left\r\n}\r\n\r\nfunction _cosBetween(v1, v2) {\r\n  const theta = v1.dot(v2) / Math.sqrt(v1.lengthSq() * v2.lengthSq())\r\n  return MathUtils.clamp(theta, -1, 1)\r\n}\r\n\r\nfunction _markAromatic(bond) {\r\n  bond._type = cAromaticType\r\n}\r\n\r\nclass Cycle {\r\n  constructor(atomsList) {\r\n    this.atoms = atomsList\r\n    this.update()\r\n  }\r\n\r\n  update() {\r\n    const { atoms } = this\r\n    const center = new Vector3()\r\n    const nA = atoms.length\r\n    for (let j = 0; j < nA; ++j) {\r\n      center.add(atoms[j].position)\r\n    }\r\n    center.multiplyScalar(1.0 / nA)\r\n    this.center = center\r\n    this.radius = center.distanceTo(\r\n      atoms[0].position.clone().lerp(atoms[1].position, 0.5)\r\n    )\r\n  }\r\n\r\n  forEachBond(process) {\r\n    const { atoms } = this\r\n    const nA = atoms.length\r\n    let currAtom = atoms[0]\r\n    let nextAtom\r\n\r\n    function checkBond(bond) {\r\n      if (bond._left === nextAtom || bond._right === nextAtom) {\r\n        process(bond)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < nA; ++i) {\r\n      nextAtom = atoms[(i + 1) % nA]\r\n      currAtom.forEachBond(checkBond)\r\n      currAtom = nextAtom\r\n    }\r\n  }\r\n}\r\n\r\nfunction _isAromatic(bond) {\r\n  return bond._type === cAromaticType\r\n}\r\n\r\nfunction _isPossibleAromatic(bond) {\r\n  if (bond.type === cAromaticType) {\r\n    return true\r\n  }\r\n  const rightIdx = cAromaticAtoms.indexOf(bond._right.element.number)\r\n  const leftIdx = cAromaticAtoms.indexOf(bond._left.element.number)\r\n  return rightIdx !== -1 && leftIdx !== -1\r\n}\r\n\r\nfunction _checkCycleSimple(cycle) {\r\n  return cycle.length > 3\r\n}\r\n\r\nfunction _checkCycleComplex(cycle) {\r\n  console.assert(cycle.length > 2)\r\n  return true\r\n}\r\n\r\nclass AromaticLoopsMarker {\r\n  constructor(complex) {\r\n    this._complex = complex\r\n    const bondsData = new Array(complex._bonds.length)\r\n    const bondMarks = new Array(complex._bonds.length)\r\n    for (let i = 0, n = bondsData.length; i < n; ++i) {\r\n      bondsData[i] = []\r\n      bondMarks[i] = false\r\n    }\r\n    this._bondsData = bondsData\r\n    this._bondMarks = bondMarks\r\n    this._resetCycles()\r\n  }\r\n\r\n  _resetCycles() {\r\n    this._cycles = []\r\n    this._currIdx = -1\r\n  }\r\n\r\n  _haveSameCycle(bondsData, bond1, bond2) {\r\n    const arr1 = bondsData[bond1._index]\r\n    const arr2 = bondsData[bond2._index]\r\n    const n1 = arr1.length\r\n    const n2 = arr2.length\r\n    let i1 = 0\r\n    let i2 = 0\r\n    while (i1 < n1 && i2 < n2) {\r\n      if (arr1[i1] === arr2[i2]) {\r\n        return true\r\n      }\r\n      if (arr1[i1] > arr2[i2]) {\r\n        ++i2\r\n      } else {\r\n        ++i1\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  _tryBond(prevBond, currRight, currDir) {\r\n    const bondsOrder = []\r\n    const bondsData = this._bondsData\r\n    const currLeft = _anotherAtom(prevBond, currRight)\r\n    const currVec = currRight.position.clone().sub(currLeft.position)\r\n    const startAtomRef = this._currStart\r\n    const self = this\r\n    const bondMarks = this._bondMarks\r\n    let checkAromatic = this._checkBond\r\n    bondMarks[prevBond._index] = true\r\n    checkAromatic = checkAromatic === undefined ? _isAromatic : checkAromatic\r\n    currRight.forEachBond((newBond) => {\r\n      if (\r\n        !checkAromatic(newBond) ||\r\n        newBond === prevBond ||\r\n        bondMarks[newBond._index] ||\r\n        self._haveSameCycle(bondsData, prevBond, newBond)\r\n      ) {\r\n        return\r\n      }\r\n      const anotherAtom = _anotherAtom(newBond, currRight)\r\n      const anotherVec = anotherAtom.position.clone().sub(currRight.position)\r\n      const val =\r\n        anotherAtom === startAtomRef\r\n          ? -2.0\r\n          : 1 - _cosBetween(currVec, anotherVec)\r\n      const newDir = anotherVec.cross(currVec)\r\n      if (!_coDirVectors(newDir, currDir)) {\r\n        return\r\n      }\r\n      let idx = 0\r\n      while (idx < bondsOrder.length && bondsOrder[idx].val < val) {\r\n        ++idx\r\n      }\r\n      bondsOrder.splice(idx, 0, { bond: newBond, val, dir: newDir })\r\n    })\r\n\r\n    for (let i = 0, n = bondsOrder.length; i < n; ++i) {\r\n      const { bond } = bondsOrder[i]\r\n      const newRight = bond._left === currRight ? bond._right : bond._left\r\n      if (newRight === startAtomRef) {\r\n        ++this._currIdx\r\n        this._cycles.push([currRight])\r\n        bondMarks[prevBond._index] = false\r\n        return true\r\n      }\r\n      if (this._tryBond(bond, newRight, bondsOrder[i].dir)) {\r\n        _insertAscending(bondsData[bond._index], this._currIdx)\r\n        this._cycles[this._currIdx].push(currRight)\r\n        bondMarks[prevBond._index] = false\r\n        return true\r\n      }\r\n    }\r\n    bondMarks[prevBond._index] = false\r\n    return false\r\n  }\r\n\r\n  _startCycle(bond) {\r\n    // start from left to right\r\n    this._currStart = bond._left\r\n    if (this._tryBond(bond, bond._right, new Vector3())) {\r\n      _insertAscending(this._bondsData[bond._index], this._currIdx)\r\n      this._cycles[this._currIdx].push(bond._left)\r\n    }\r\n  }\r\n\r\n  _findLoops(checkBond, checkCycle) {\r\n    this._checkBond = checkBond\r\n    const complex = this._complex\r\n    const self = this\r\n\r\n    complex.forEachComponent((component) => {\r\n      self._resetCycles()\r\n      component.forEachBond((bond) => {\r\n        if (checkBond(bond)) {\r\n          self._startCycle(bond)\r\n        }\r\n      })\r\n      const cycles = self._cycles\r\n      for (let i = 0, n = cycles.length; i < n; ++i) {\r\n        const cycle = cycles[i]\r\n        if (!checkCycle(cycle)) {\r\n          continue\r\n        }\r\n        const newCycle = new Cycle(cycle)\r\n        newCycle.forEachBond(_markAromatic)\r\n        component.addCycle(newCycle)\r\n      }\r\n    })\r\n  }\r\n\r\n  markCycles() {\r\n    this._findLoops(_isAromatic, _checkCycleSimple)\r\n  }\r\n\r\n  detectCycles() {\r\n    this._findLoops(_isPossibleAromatic, _checkCycleComplex)\r\n  }\r\n}\r\n\r\nexport default AromaticLoopsMarker\r\n",
		"import utils from '../utils'\r\nimport { Vector2, Vector3 } from 'three'\r\n\r\n/**\r\n * Calculate min & max radius of a sphere slice between zMin & zMax\r\n *\r\n * @param {Vector3} center - center of the sphere\r\n * @param {number} radius  - sphere radius\r\n * @param {number} zMin - lower bound of the slice\r\n * @param {number} zMax - upper bound of the slice\r\n */\r\nfunction _getSphereSliceRadiusRange(center, radius, zMin, zMax) {\r\n  const dzMin = zMin - center.z\r\n  const dzMax = zMax - center.z\r\n  const rzMin = Math.sqrt(Math.max(radius * radius - dzMin * dzMin, 0.0))\r\n  const rzMax = Math.sqrt(Math.max(radius * radius - dzMax * dzMax, 0.0))\r\n\r\n  const rMin = Math.min(rzMin, rzMax)\r\n  let rMax\r\n\r\n  if (zMin <= center.z && zMax >= center.z) {\r\n    // sphere's main diameter is inside slice\r\n    rMax = radius\r\n  } else {\r\n    rMax = Math.max(rzMin, rzMax)\r\n  }\r\n\r\n  return [rMin, rMax]\r\n}\r\n\r\n/**\r\n * Calculate min & max radius of a circle slice between yMin & yMax.\r\n *\r\n * To maintain analogy with _getSphereSliceRadiusRange we call radius what in fact is\r\n * half-width (along X axis) of the slice, i.e. 1D-sphere radius.\r\n *\r\n * @param {Vector3} center - center of the circle (z can be ignored)\r\n * @param {number} radius  - circle radius\r\n * @param {number} yMin - lower bound of the slice\r\n * @param {number} yMax - upper bound of the slice\r\n * @returns {Array} - array of two numbers (min & max radius, or half-width)\r\n */\r\nfunction _getCircleSliceRadiusRange(center, radius, yMin, yMax) {\r\n  const dyMin = yMin - center.y\r\n  const dyMax = yMax - center.y\r\n  const ryMin = Math.sqrt(Math.max(radius * radius - dyMin * dyMin, 0.0))\r\n  const ryMax = Math.sqrt(Math.max(radius * radius - dyMax * dyMax, 0.0))\r\n\r\n  const rMin = Math.min(ryMin, ryMax)\r\n  let rMax\r\n\r\n  if (yMin <= center.y && yMax >= center.y) {\r\n    // slice's main diameter is inside slice\r\n    rMax = radius\r\n  } else {\r\n    rMax = Math.max(ryMin, ryMax)\r\n  }\r\n\r\n  return [rMin, rMax]\r\n}\r\n\r\n/**\r\n * VoxelWorld constructor\r\n *\r\n * @param {Box3} box - bounding box of the volume to be partitioned\r\n * @param {Vector3} vCellSizeHint - target voxel size (actual voxel size may differ from this)\r\n */\r\nclass VoxelWorld {\r\n  constructor(box, vCellSizeHint) {\r\n    this._box = box.clone()\r\n    const size = new Vector3()\r\n    box.getSize(size)\r\n    this._count = size\r\n      .clone()\r\n      .divide(vCellSizeHint)\r\n      .floor()\r\n      .max(new Vector3(1, 1, 1))\r\n    this._last = this._count.clone().subScalar(1)\r\n    this._cellSize = size.clone().divide(this._count)\r\n    this._cellInnerR =\r\n      0.5 *\r\n      Math.min(Math.min(this._cellSize.x, this._cellSize.y), this._cellSize.z)\r\n    this._cellOuterR = 0.5 * Math.sqrt(this._cellSize.dot(this._cellSize))\r\n\r\n    // array of voxels, each element contains index of first atom in voxel\r\n    const numVoxels = this._count.x * this._count.y * this._count.z\r\n    this._voxels = utils.allocateTyped(Int32Array, numVoxels)\r\n    for (let i = 0; i < numVoxels; ++i) {\r\n      this._voxels[i] = -1\r\n    }\r\n\r\n    // array of atoms that stores multiple single-linked lists\r\n    // two elements for each atom: Atom ref, index of next atom (in this array\r\n    this._atoms = []\r\n  }\r\n\r\n  /**\r\n   * Add all atoms from a complex to voxel world\r\n   *\r\n   * @param {Complex} complex - complex\r\n   */\r\n  addAtoms(complex) {\r\n    const self = this\r\n\r\n    let idx = this._atoms.length\r\n\r\n    // resize array of atoms\r\n    this._atoms.length += 2 * complex.getAtomCount()\r\n\r\n    complex.forEachAtom((atom) => {\r\n      // find which voxel contains this atom\r\n      const voxelIdx = self._findVoxel(atom.position)\r\n\r\n      // push current atom to the head of voxel's atom list\r\n      self._atoms[idx] = atom\r\n      self._atoms[idx + 1] = self._voxels[voxelIdx]\r\n      self._voxels[voxelIdx] = idx\r\n\r\n      idx += 2\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Get voxel that contains specified 3D point (we use clamp at the edges)\r\n   *\r\n   * @param {Vector3} point - a point in 3D\r\n   * @returns {number} - index of voxel\r\n   */\r\n  static _zero = new Vector3(0, 0, 0)\r\n\r\n  static _voxel = new Vector3()\r\n\r\n  _findVoxel(point) {\r\n    const zero = VoxelWorld._zero\r\n    const voxel = VoxelWorld._voxel\r\n    voxel\r\n      .copy(point)\r\n      .sub(this._box.min)\r\n      .divide(this._cellSize)\r\n      .floor()\r\n      .clamp(zero, this._last)\r\n    return voxel.x + this._count.x * (voxel.y + this._count.y * voxel.z)\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom in voxel\r\n   *\r\n   * @param {number} voxel - index of voxel\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  _forEachAtomInVoxel(voxel, process) {\r\n    for (let i = this._voxels[voxel]; i >= 0; i = this._atoms[i + 1]) {\r\n      process(this._atoms[i])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call a function for each voxel that is touched by given sphere. Callback also takes flag\r\n   * isInside specifying whether voxel lies inside the sphere entirely.\r\n   *\r\n   * @param {Vector3} center - center of the sphere\r\n   * @param {number} radius  - sphere radius\r\n   * @param {function(number,bool)} process - function to call that takes voxel index and boolean isInside\r\n   */\r\n\r\n  static _xRange = new Vector2()\r\n\r\n  static _yRange = new Vector2()\r\n\r\n  static _zRange = new Vector2()\r\n\r\n  _forEachVoxelWithinRadius(center, radius, process) {\r\n    const xRange = VoxelWorld._xRange\r\n    const yRange = VoxelWorld._yRange\r\n    const zRange = VoxelWorld._zRange\r\n\r\n    // switch to a faster method unless cell size is much smaller than sphere radius\r\n    if (radius / this._cellInnerR < 10) {\r\n      this._forEachVoxelWithinRadiusSimple(center, radius, process)\r\n      return\r\n    }\r\n\r\n    let rRangeXY\r\n    let rRangeX\r\n    let xVal\r\n    let yVal\r\n    let zVal\r\n    let isInsideX\r\n    let isInsideY\r\n    let isInsideZ\r\n\r\n    zRange.set(center.z - radius, center.z + radius)\r\n    zRange\r\n      .subScalar(this._box.min.z)\r\n      .divideScalar(this._cellSize.z)\r\n      .floor()\r\n      .clampScalar(0, this._count.z - 1)\r\n\r\n    for (let z = zRange.x; z <= zRange.y; ++z) {\r\n      zVal = [\r\n        this._box.min.z + z * this._cellSize.z,\r\n        this._box.min.z + (z + 1) * this._cellSize.z\r\n      ]\r\n\r\n      isInsideZ = center.z - radius <= zVal[0] && zVal[1] <= center.z + radius\r\n\r\n      rRangeXY = _getSphereSliceRadiusRange(center, radius, zVal[0], zVal[1])\r\n\r\n      yRange.set(center.y - rRangeXY[1], center.y + rRangeXY[1])\r\n      yRange\r\n        .subScalar(this._box.min.y)\r\n        .divideScalar(this._cellSize.y)\r\n        .floor()\r\n        .clampScalar(0, this._count.y - 1)\r\n\r\n      for (let y = yRange.x; y <= yRange.y; ++y) {\r\n        yVal = [\r\n          this._box.min.y + y * this._cellSize.y,\r\n          this._box.min.y + (y + 1) * this._cellSize.y\r\n        ]\r\n\r\n        isInsideY =\r\n          center.y - rRangeXY[0] <= yVal[0] && yVal[1] <= center.y + rRangeXY[0]\r\n\r\n        rRangeX = _getCircleSliceRadiusRange(\r\n          center,\r\n          rRangeXY[1],\r\n          yVal[0],\r\n          yVal[1]\r\n        )\r\n\r\n        xRange.set(center.x - rRangeX[1], center.x + rRangeX[1])\r\n        xRange\r\n          .subScalar(this._box.min.x)\r\n          .divideScalar(this._cellSize.x)\r\n          .floor()\r\n          .clampScalar(0, this._count.x - 1)\r\n\r\n        for (let { x } = xRange; x <= xRange.y; ++x) {\r\n          xVal = [\r\n            this._box.min.x + x * this._cellSize.x,\r\n            this._box.min.x + (x + 1) * this._cellSize.x\r\n          ]\r\n          isInsideX =\r\n            center.x - rRangeX[0] <= xVal[0] && xVal[1] <= center.x + rRangeX[0]\r\n\r\n          process(\r\n            x + this._count.x * (y + this._count.y * z),\r\n            isInsideX && isInsideY && isInsideZ\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call a function for each voxel that is touched by given sphere. Callback also takes flag\r\n   * isInside specifying whether voxel lies inside the sphere entirely.\r\n   * This is a version of method that doesn't try to \"calculate\" what voxels fall inside radius\r\n   * but instead just checks all voxels inside sphere's bounding box. This should be faster\r\n   * unless cell size is much smaller than sphere radius.\r\n   *\r\n   * @param {Vector3} center - center of the sphere\r\n   * @param {number} radius  - sphere radius\r\n   * @param {function(number,bool)} process - function to call that takes voxel index and boolean isInside\r\n   */\r\n\r\n  static _vCenter = new Vector3()\r\n\r\n  _forEachVoxelWithinRadiusSimple(center, radius, process) {\r\n    const xRange = VoxelWorld._xRange\r\n    const yRange = VoxelWorld._yRange\r\n    const zRange = VoxelWorld._zRange\r\n    const vCenter = VoxelWorld._vCenter\r\n\r\n    const distTouch2 = (radius + this._cellOuterR) * (radius + this._cellOuterR)\r\n    let distInside2 = -1.0\r\n    if (radius > this._cellOuterR) {\r\n      distInside2 = (radius - this._cellOuterR) * (radius - this._cellOuterR)\r\n    }\r\n\r\n    // calculate bounding box for the sphere\r\n    xRange.set(center.x - radius, center.x + radius)\r\n    xRange.subScalar(this._box.min.x).divideScalar(this._cellSize.x).floor()\r\n    xRange.x = Math.min(Math.max(xRange.x, 0), this._count.x - 1)\r\n    xRange.y = Math.min(Math.max(xRange.y, 0), this._count.x - 1)\r\n\r\n    yRange.set(center.y - radius, center.y + radius)\r\n    yRange.subScalar(this._box.min.y).divideScalar(this._cellSize.y).floor()\r\n    yRange.x = Math.min(Math.max(yRange.x, 0), this._count.y - 1)\r\n    yRange.y = Math.min(Math.max(yRange.y, 0), this._count.y - 1)\r\n\r\n    zRange.set(center.z - radius, center.z + radius)\r\n    zRange.subScalar(this._box.min.z).divideScalar(this._cellSize.z).floor()\r\n    zRange.x = Math.min(Math.max(zRange.x, 0), this._count.z - 1)\r\n    zRange.y = Math.min(Math.max(zRange.y, 0), this._count.z - 1)\r\n\r\n    for (let z = zRange.x; z <= zRange.y; ++z) {\r\n      const zVal = [\r\n        this._box.min.z + z * this._cellSize.z,\r\n        this._box.min.z + (z + 1) * this._cellSize.z\r\n      ]\r\n      vCenter.z = 0.5 * (zVal[0] + zVal[1])\r\n\r\n      for (let y = yRange.x; y <= yRange.y; ++y) {\r\n        const yVal = [\r\n          this._box.min.y + y * this._cellSize.y,\r\n          this._box.min.y + (y + 1) * this._cellSize.y\r\n        ]\r\n        vCenter.y = 0.5 * (yVal[0] + yVal[1])\r\n\r\n        for (let { x } = xRange; x <= xRange.y; ++x) {\r\n          const xVal = [\r\n            this._box.min.x + x * this._cellSize.x,\r\n            this._box.min.x + (x + 1) * this._cellSize.x\r\n          ]\r\n          vCenter.x = 0.5 * (xVal[0] + xVal[1])\r\n\r\n          const d2 = center.distanceToSquared(vCenter)\r\n          if (d2 <= distTouch2) {\r\n            process(\r\n              x + this._count.x * (y + this._count.y * z),\r\n              d2 <= distInside2\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom within given sphere\r\n   *\r\n   * @param {Vector3} center - center of the sphere\r\n   * @param {number} radius  - sphere radius\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  forEachAtomWithinRadius(center, radius, process) {\r\n    const self = this\r\n    const r2 = radius * radius\r\n\r\n    self._forEachVoxelWithinRadius(center, radius, (voxel, isInside) => {\r\n      if (isInside) {\r\n        self._forEachAtomInVoxel(voxel, process)\r\n      } else {\r\n        self._forEachAtomInVoxel(voxel, (atom) => {\r\n          if (center.distanceToSquared(atom.position) <= r2) {\r\n            process(atom)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom of given complex within given distance from group of atoms defined by mask\r\n   *\r\n   * @param {Complex} complex - complex\r\n   * @param {number} mask - bit mask\r\n   * @param {number} dist - distance\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  forEachAtomWithinDistFromMasked(complex, mask, dist, process) {\r\n    this._forEachAtomWithinDistFromGroup(\r\n      (atomProc) => {\r\n        complex.forEachAtom((atom) => {\r\n          if ((atom.mask & mask) !== 0) {\r\n            atomProc(atom)\r\n          }\r\n        })\r\n      },\r\n      dist,\r\n      process\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom of given complex within given distance from group of atoms defined by selector\r\n   *\r\n   * @param {Complex} complex - complex\r\n   * @param {number} selector - selector\r\n   * @param {number} dist - distance\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  forEachAtomWithinDistFromSelected(complex, selector, dist, process) {\r\n    this._forEachAtomWithinDistFromGroup(\r\n      (atomProc) => {\r\n        complex.forEachAtom((atom) => {\r\n          if (selector.includesAtom(atom)) {\r\n            atomProc(atom)\r\n          }\r\n        })\r\n      },\r\n      dist,\r\n      process\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom of given complex within given distance from group of atoms\r\n   *\r\n   * @param {function} forEachAtom - enumerator of atoms in the group\r\n   * @param {number} dist - distance\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  _forEachAtomWithinDistFromGroup(forEachAtom, dist, process) {\r\n    const self = this\r\n    const r2 = dist * dist\r\n\r\n    const voxels = []\r\n    const atoms = []\r\n    let idx = 0\r\n\r\n    // build \"within radius\" atom list for each voxel\r\n    forEachAtom((atom) => {\r\n      self._forEachVoxelWithinRadius(atom.position, dist, (voxel, isInside) => {\r\n        if (isInside) {\r\n          // this voxel is inside circle -- no check will be required\r\n          voxels[voxel] = -1\r\n        } else if (typeof voxels[voxel] === 'undefined') {\r\n          // this voxel isn't covered yet -- start building list of atoms\r\n          atoms.push(atom)\r\n          atoms.push(-1)\r\n          voxels[voxel] = idx\r\n          idx += 2\r\n        } else if (voxels[voxel] !== -1) {\r\n          // this voxel has a list of atoms required for distance check -- add atom to the list\r\n          atoms.push(atom)\r\n          atoms.push(voxels[voxel])\r\n          voxels[voxel] = idx\r\n          idx += 2\r\n        }\r\n      })\r\n    })\r\n\r\n    let voxel\r\n\r\n    const processIfWithin = function (atom) {\r\n      if (typeof voxels[voxel] === 'undefined') {\r\n        return\r\n      }\r\n\r\n      idx = voxels[voxel]\r\n      if (idx === -1) {\r\n        // this voxel is fully covered\r\n        process(atom)\r\n        return\r\n      }\r\n\r\n      // check distance to each atom within radius from this voxel\r\n      for (; idx >= 0; idx = atoms[idx + 1]) {\r\n        if (atom.position.distanceToSquared(atoms[idx].position) < r2) {\r\n          process(atom)\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    // for each marked voxel\r\n    for (voxel in voxels) {\r\n      if (voxels.hasOwnProperty(voxel)) {\r\n        self._forEachAtomInVoxel(voxel, processIfWithin)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default VoxelWorld\r\n",
		"import ResidueType from './ResidueType'\r\nimport PairCollection from './AtomPairs'\r\n\r\nconst MINIMAL_DISTANCE = 0.5\r\nconst MIN_HBOND_ENERGY = -9.9\r\nconst MAX_HBOND_ENERGY = -0.5\r\nconst COUPLING_CONSTANT = -27.888 // = -332 * 0.42 * 0.2\r\nconst MAX_COUPLING_DISTANCE = 5.0 // how far is the closest atom of a potential partner residue from CA atom\r\nconst MAX_RESIDUES_THRESHOLD = 1000\r\n\r\nexport default class HBondInfo {\r\n  constructor(complex) {\r\n    this._complex = complex\r\n    this._hbonds = [] // array of bond info for each residue\r\n    if (this._complex._residues.length > MAX_RESIDUES_THRESHOLD) {\r\n      this._buildVW() // optimized version using voxel grid\r\n    } else {\r\n      this._build() // test all pairs of residues\r\n    }\r\n  }\r\n\r\n  isBond(from, to) {\r\n    if (this._hbonds[from]) {\r\n      const [acc0, acc1] = this._hbonds[from].acceptor\r\n      if (acc0 && acc0.residue === to && acc0.energy < MAX_HBOND_ENERGY) {\r\n        return true\r\n      }\r\n      if (acc1 && acc1.residue === to && acc1.energy < MAX_HBOND_ENERGY) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  _build() {\r\n    const self = this\r\n\r\n    for (let i = 0; i < this._complex._residues.length - 1; ++i) {\r\n      const ri = this._complex._residues[i]\r\n      if ((ri.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n        continue\r\n      }\r\n\r\n      // get predecessor in chain\r\n      let preri = null\r\n      if (\r\n        i > 0 &&\r\n        this._complex._residues[i - 1].getType().flags &\r\n          ResidueType.Flags.PROTEIN &&\r\n        ri._sequence === this._complex._residues[i - 1]._sequence + 1\r\n      ) {\r\n        preri = this._complex._residues[i - 1]\r\n      }\r\n\r\n      for (let j = i + 1; j < this._complex._residues.length; ++j) {\r\n        const rj = this._complex._residues[j]\r\n        if ((rj.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n          continue\r\n        }\r\n\r\n        // get predecessor in chain\r\n        let prerj = null\r\n        if (\r\n          this._complex._residues[j - 1].getType().flags &\r\n            ResidueType.Flags.PROTEIN &&\r\n          rj._sequence === this._complex._residues[j - 1]._sequence + 1\r\n        ) {\r\n          prerj = this._complex._residues[j - 1]\r\n        }\r\n\r\n        self._calcHBondEnergy(preri, ri, rj)\r\n        if (j !== i + 1) {\r\n          self._calcHBondEnergy(prerj, rj, ri)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _buildVW() {\r\n    const self = this\r\n    const residues = this._complex._residues\r\n    let ri\r\n    let preri\r\n\r\n    const vw = this._complex.getVoxelWorld()\r\n    if (vw === null) {\r\n      return\r\n    }\r\n\r\n    const pairs = new PairCollection(\r\n      (this._complex._residues.length * this._complex._residues.length) / 2\r\n    )\r\n\r\n    function processAtom(atom) {\r\n      const rj = atom.residue\r\n\r\n      if (rj._index === ri._index) {\r\n        return\r\n      }\r\n\r\n      if ((rj.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n        return\r\n      }\r\n\r\n      if (!pairs.addPair(ri._index, rj._index)) {\r\n        // we've seen this pair\r\n        return\r\n      }\r\n\r\n      // get predecessor in chain\r\n      let prerj = rj._index > 0 ? residues[rj._index - 1] : null\r\n      if (\r\n        prerj &&\r\n        ((prerj.getType().flags & ResidueType.Flags.PROTEIN) === 0 ||\r\n          rj._sequence !== prerj._sequence + 1)\r\n      ) {\r\n        prerj = null\r\n      }\r\n\r\n      self._calcHBondEnergy(preri, ri, rj)\r\n      if (rj._index !== ri._index + 1) {\r\n        self._calcHBondEnergy(prerj, rj, ri)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < residues.length - 1; ++i) {\r\n      ri = residues[i]\r\n      if ((ri.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n        continue\r\n      }\r\n\r\n      // get predecessor in chain\r\n      preri = i > 0 ? residues[i - 1] : null\r\n      if (\r\n        preri &&\r\n        ((preri.getType().flags & ResidueType.Flags.PROTEIN) === 0 ||\r\n          ri._sequence !== preri._sequence + 1)\r\n      ) {\r\n        preri = null\r\n      }\r\n\r\n      vw.forEachAtomWithinRadius(\r\n        this._residueGetCAlpha(ri),\r\n        MAX_COUPLING_DISTANCE,\r\n        processAtom\r\n      )\r\n    }\r\n  }\r\n\r\n  _residueGetCAlpha(res) {\r\n    for (let i = 0; i < res._atoms.length; ++i) {\r\n      const { name } = res._atoms[i]\r\n      if (name === 'CA' || name === 'C1') {\r\n        return res._atoms[i].position\r\n      }\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  _residueGetCO(res) {\r\n    let c = null\r\n    let o = null\r\n\r\n    res.forEachAtom((a) => {\r\n      if (a.name === 'C') {\r\n        c = a.position\r\n      } else if (a.name === 'O') {\r\n        o = a.position\r\n      }\r\n    })\r\n\r\n    return [c, o]\r\n  }\r\n\r\n  // TODO Support hydrogen defined in complex\r\n  _residueGetNH(prev, res) {\r\n    const [c, o] = this._residueGetCO(prev)\r\n\r\n    let n\r\n    res.forEachAtom((a) => {\r\n      if (a.name === 'N') {\r\n        n = a.position\r\n      }\r\n    })\r\n\r\n    if (c && o && n) {\r\n      // calculate hydrogen position\r\n      const h = c.clone()\r\n      h.sub(o)\r\n      h.multiplyScalar(1.0 / h.length())\r\n      h.add(n)\r\n\r\n      return [n, h]\r\n    }\r\n\r\n    return [null, null]\r\n  }\r\n\r\n  _calcHBondEnergy(predonor, donor, acceptor) {\r\n    let result = 0\r\n\r\n    if (predonor === null) {\r\n      return result\r\n    }\r\n\r\n    if (donor.getType().getName() !== 'PRO') {\r\n      const [n, h] = this._residueGetNH(predonor, donor)\r\n      const [c, o] = this._residueGetCO(acceptor)\r\n\r\n      if (n === null || h === null || c === null || o === null) {\r\n        return result\r\n      }\r\n\r\n      const distanceHO = h.distanceTo(o)\r\n      const distanceHC = h.distanceTo(c)\r\n      const distanceNC = n.distanceTo(c)\r\n      const distanceNO = n.distanceTo(o)\r\n\r\n      if (\r\n        distanceHO < MINIMAL_DISTANCE ||\r\n        distanceHC < MINIMAL_DISTANCE ||\r\n        distanceNC < MINIMAL_DISTANCE ||\r\n        distanceNO < MINIMAL_DISTANCE\r\n      ) {\r\n        result = MIN_HBOND_ENERGY\r\n      } else {\r\n        result =\r\n          COUPLING_CONSTANT / distanceHO -\r\n          COUPLING_CONSTANT / distanceHC +\r\n          COUPLING_CONSTANT / distanceNC -\r\n          COUPLING_CONSTANT / distanceNO\r\n      }\r\n\r\n      // DSSP compatibility mode:\r\n      result = Math.round(result * 1000) / 1000\r\n\r\n      if (result < MIN_HBOND_ENERGY) {\r\n        result = MIN_HBOND_ENERGY\r\n      }\r\n    }\r\n\r\n    // update donor\r\n    if (typeof this._hbonds[donor._index] === 'undefined') {\r\n      this._hbonds[donor._index] = {\r\n        donor: [],\r\n        acceptor: []\r\n      }\r\n    }\r\n    const donorInfo = this._hbonds[donor._index]\r\n\r\n    if (donorInfo.acceptor.length < 2) {\r\n      donorInfo.acceptor.push({\r\n        residue: acceptor._index,\r\n        energy: result\r\n      })\r\n    }\r\n\r\n    if (donorInfo.acceptor.length > 1) {\r\n      if (result < donorInfo.acceptor[0].energy) {\r\n        donorInfo.acceptor[1].residue = donorInfo.acceptor[0].residue\r\n        donorInfo.acceptor[1].energy = donorInfo.acceptor[0].energy\r\n        donorInfo.acceptor[0].residue = acceptor._index\r\n        donorInfo.acceptor[0].energy = result\r\n      } else if (result < donorInfo.acceptor[1].energy) {\r\n        donorInfo.acceptor[1].residue = acceptor._index\r\n        donorInfo.acceptor[1].energy = result\r\n      }\r\n    }\r\n\r\n    // update acceptor\r\n    if (typeof this._hbonds[acceptor._index] === 'undefined') {\r\n      this._hbonds[acceptor._index] = {\r\n        donor: [],\r\n        acceptor: []\r\n      }\r\n    }\r\n    const accInfo = this._hbonds[acceptor._index]\r\n\r\n    if (accInfo.donor.length < 2) {\r\n      accInfo.donor.push({\r\n        residue: donor._index,\r\n        energy: result\r\n      })\r\n    }\r\n\r\n    if (accInfo.donor.length > 1) {\r\n      if (result < accInfo.donor[0].energy) {\r\n        accInfo.donor[1].residue = accInfo.donor[0].residue\r\n        accInfo.donor[1].energy = accInfo.donor[0].energy\r\n        accInfo.donor[0].residue = donor._index\r\n        accInfo.donor[0].energy = result\r\n      } else if (result < accInfo.donor[1].energy) {\r\n        accInfo.donor[1].residue = donor._index\r\n        accInfo.donor[1].energy = result\r\n      }\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n",
		"import HBondInfo from './HBondInfo'\r\nimport ResidueType from './ResidueType'\r\n\r\nconst BridgeType = Object.freeze({\r\n  NO_BRIDGE: 0,\r\n  PARALLEL: 1,\r\n  ANTI_PARALLEL: 2\r\n})\r\n\r\nconst HelixFlag = Object.freeze({\r\n  START: 1,\r\n  MIDDLE: 2,\r\n  END: 3,\r\n  START_AND_END: 4\r\n})\r\n\r\nconst StructureType = Object.freeze({\r\n  STRAND: 'E',\r\n  BRIDGE: 'B',\r\n  HELIX_310: 'G',\r\n  HELIX_ALPHA: 'H',\r\n  HELIX_PI: 'I',\r\n  TURN: 'T',\r\n  BEND: 'S',\r\n  LOOP: ' '\r\n})\r\n\r\nexport default class SecondaryStructureMap {\r\n  constructor(complex) {\r\n    this._complex = complex\r\n    this._build()\r\n  }\r\n\r\n  _build() {\r\n    const self = this\r\n    this._hbonds = new HBondInfo(this._complex)\r\n    this._ss = [] // DSSP map by residue\r\n\r\n    // auxilliary data\r\n    this._sheet = []\r\n    this._betaPartners = []\r\n    this._bend = []\r\n    for (let i = 0; i < this._complex.getResidues().length; ++i) {\r\n      this._betaPartners[i] = []\r\n    }\r\n    this._helixFlags = []\r\n    this._helixFlags[3] = []\r\n    this._helixFlags[4] = []\r\n    this._helixFlags[5] = []\r\n\r\n    // calculate peptide chain lengths\r\n    this._chainLengths = []\r\n    for (let i = 0; i < this._complex._chains.length; ++i) {\r\n      const chain = this._complex._chains[i].getResidues()\r\n      let len = 0\r\n      for (; len < chain.length; ++len) {\r\n        if ((chain[len].getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n          break\r\n        }\r\n      }\r\n      this._chainLengths[i] = len\r\n    }\r\n\r\n    this._buildBetaSheets()\r\n\r\n    for (let i = 0; i < this._complex._chains.length; ++i) {\r\n      self._buildAlphaHelices(\r\n        this._complex._chains[i].getResidues(),\r\n        this._chainLengths[i],\r\n        false\r\n      )\r\n    }\r\n  }\r\n\r\n  _buildAlphaHelices(inResidues, chainLength, inPreferPiHelices) {\r\n    // Helix and Turn\r\n    for (let stride = 3; stride <= 5; ++stride) {\r\n      if (inResidues.length < stride) {\r\n        break\r\n      }\r\n\r\n      for (let i = 0; i + stride < chainLength; ++i) {\r\n        if (\r\n          this._hbonds.isBond(\r\n            inResidues[i + stride]._index,\r\n            inResidues[i]._index\r\n          )\r\n          /* && NoChainBreak(res[i], res[i + stride]) */\r\n        ) {\r\n          this._helixFlags[stride][inResidues[i + stride]._index] =\r\n            HelixFlag.END\r\n          for (let j = i + 1; j < i + stride; ++j) {\r\n            if (\r\n              typeof this._helixFlags[stride][inResidues[j]._index] ===\r\n              'undefined'\r\n            ) {\r\n              this._helixFlags[stride][inResidues[j]._index] = HelixFlag.MIDDLE\r\n            }\r\n          }\r\n\r\n          if (\r\n            this._helixFlags[stride][inResidues[i]._index] === HelixFlag.END\r\n          ) {\r\n            this._helixFlags[stride][inResidues[i]._index] =\r\n              HelixFlag.START_AND_END\r\n          } else {\r\n            this._helixFlags[stride][inResidues[i]._index] = HelixFlag.START\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 2; i < chainLength - 2; ++i) {\r\n      const kappa = this._kappa(\r\n        inResidues[i - 2],\r\n        inResidues[i],\r\n        inResidues[i + 2]\r\n      )\r\n      this._bend[inResidues[i]._index] = kappa !== 360 && kappa > 70\r\n    }\r\n\r\n    for (let i = 1; i + 4 < chainLength; ++i) {\r\n      if (\r\n        this._isHelixStart(inResidues[i]._index, 4) &&\r\n        this._isHelixStart(inResidues[i - 1]._index, 4)\r\n      ) {\r\n        for (let j = i; j <= i + 3; ++j) {\r\n          this._ss[inResidues[j]._index] = StructureType.HELIX_ALPHA\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 1; i + 3 < chainLength; ++i) {\r\n      if (\r\n        this._isHelixStart(inResidues[i]._index, 3) &&\r\n        this._isHelixStart(inResidues[i - 1]._index, 3)\r\n      ) {\r\n        let empty = true\r\n        for (let j = i; empty && j <= i + 2; ++j) {\r\n          empty =\r\n            typeof this._ss[inResidues[j]._index] === 'undefined' ||\r\n            this._ss[inResidues[j]._index] === StructureType.HELIX_310\r\n        }\r\n        if (empty) {\r\n          for (let j = i; j <= i + 2; ++j) {\r\n            this._ss[inResidues[j]._index] = StructureType.HELIX_310\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 1; i + 5 < chainLength; ++i) {\r\n      if (\r\n        this._isHelixStart(inResidues[i]._index, 5) &&\r\n        this._isHelixStart(inResidues[i - 1]._index, 5)\r\n      ) {\r\n        let empty = true\r\n        for (let j = i; empty && j <= i + 4; ++j) {\r\n          empty =\r\n            typeof this._ss[inResidues[j]._index] === 'undefined' ||\r\n            this._ss[inResidues[j]._index] === StructureType.HELIX_PI ||\r\n            (inPreferPiHelices &&\r\n              this._ss[inResidues[j]._index] === StructureType.HELIX_ALPHA)\r\n        }\r\n        if (empty) {\r\n          for (let j = i; j <= i + 4; ++j) {\r\n            this._ss[inResidues[j]._index] = StructureType.HELIX_PI\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 1; i + 1 < chainLength; ++i) {\r\n      if (typeof this._ss[inResidues[i]._index] === 'undefined') {\r\n        let isTurn = false\r\n        for (let stride = 3; stride <= 5 && !isTurn; ++stride) {\r\n          for (let k = 1; k < stride && !isTurn; ++k) {\r\n            isTurn =\r\n              i >= k && this._isHelixStart(inResidues[i - k]._index, stride)\r\n          }\r\n        }\r\n\r\n        if (isTurn) {\r\n          this._ss[inResidues[i]._index] = StructureType.TURN\r\n        } else if (this._bend[inResidues[i]._index]) {\r\n          this._ss[inResidues[i]._index] = StructureType.BEND\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _residueGetCAlpha(res) {\r\n    for (let i = 0; i < res._atoms.length; ++i) {\r\n      const { name } = res._atoms[i]\r\n      if (name === 'CA' || name === 'C1') {\r\n        return res._atoms[i].position\r\n      }\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  _cosinusAngle(p1, p2, p3, p4) {\r\n    const v12 = p1.clone().sub(p2)\r\n    const v34 = p3.clone().sub(p4)\r\n\r\n    let result = 0\r\n\r\n    const x = v12.dot(v12) * v34.dot(v34)\r\n    if (x > 0) {\r\n      result = v12.dot(v34) / Math.sqrt(x)\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  _kappa(prevPrev, res, nextNext) {\r\n    const curCA = this._residueGetCAlpha(res)\r\n    const ppCA = this._residueGetCAlpha(prevPrev)\r\n    const nnCA = this._residueGetCAlpha(nextNext)\r\n    if (curCA === null || ppCA === null || nnCA === null) {\r\n      return 180\r\n    }\r\n\r\n    const ckap = this._cosinusAngle(curCA, ppCA, nnCA, curCA)\r\n    const skap = Math.sqrt(1 - ckap * ckap)\r\n    return (Math.atan2(skap, ckap) * 180) / Math.PI\r\n  }\r\n\r\n  _isHelixStart(res, stride) {\r\n    return (\r\n      this._helixFlags[stride][res] === HelixFlag.START ||\r\n      this._helixFlags[stride][res] === HelixFlag.START_AND_END\r\n    )\r\n  }\r\n\r\n  _buildBetaSheets() {\r\n    // find bridges\r\n    // check each chain against each other chain, and against itself\r\n    const bridges = []\r\n    for (let a = 0; a < this._complex._chains.length; ++a) {\r\n      const lenA = this._chainLengths[a]\r\n      if (lenA <= 4) {\r\n        continue\r\n      }\r\n\r\n      const chainA = this._complex._chains[a].getResidues()\r\n\r\n      for (let b = a; b < this._complex._chains.length; ++b) {\r\n        const lenB = this._chainLengths[b]\r\n        if (lenB <= 4) {\r\n          continue\r\n        }\r\n\r\n        const chainB = this._complex._chains[b].getResidues()\r\n\r\n        for (let i = 1; i + 1 < lenA; ++i) {\r\n          const ri = chainA[i]\r\n\r\n          let j = 1\r\n          if (b === a) {\r\n            j = i + 3 // check for self-bridges forward down the chain\r\n          }\r\n\r\n          for (; j + 1 < lenB; ++j) {\r\n            const rj = chainB[j]\r\n\r\n            const type = this._testBridge(chainA, i, chainB, j)\r\n            if (type === BridgeType.NO_BRIDGE) {\r\n              continue\r\n            }\r\n\r\n            // there is a bridge, try to attach it to previously found sequence\r\n            let found = false\r\n            for (const bridge of bridges) {\r\n              if (\r\n                type !== bridge.type ||\r\n                ri._index !== bridge.i[bridge.i.length - 1] + 1\r\n              ) {\r\n                continue\r\n              }\r\n\r\n              if (\r\n                type === BridgeType.PARALLEL &&\r\n                bridge.j[bridge.j.length - 1] + 1 === rj._index\r\n              ) {\r\n                bridge.i.push(ri._index)\r\n                bridge.j.push(rj._index)\r\n                found = true\r\n                break\r\n              }\r\n\r\n              if (\r\n                type === BridgeType.ANTI_PARALLEL &&\r\n                bridge.j[0] - 1 === rj._index\r\n              ) {\r\n                bridge.i.push(ri._index)\r\n                bridge.j.unshift(rj._index)\r\n                found = true\r\n                break\r\n              }\r\n            }\r\n\r\n            // this bridge cannot be attached anywhere, start a new sequence\r\n            if (!found) {\r\n              bridges.push({\r\n                type,\r\n                i: [ri._index],\r\n                chainI: ri.getChain()._index,\r\n                j: [rj._index],\r\n                chainJ: rj.getChain()._index\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // extend ladders\r\n    bridges.sort((a, b) => {\r\n      if (a.chainI < b.chainI || (a.chainI === b.chainI && a.i[0] < b.i[0])) {\r\n        return -1\r\n      }\r\n      return 1\r\n    })\r\n\r\n    for (let i = 0; i < bridges.length; ++i) {\r\n      for (let j = i + 1; j < bridges.length; ++j) {\r\n        const ibi = bridges[i].i[0]\r\n        const iei = bridges[i].i[bridges[i].i.length - 1]\r\n        const jbi = bridges[i].j[0]\r\n        const jei = bridges[i].j[bridges[i].j.length - 1]\r\n        const ibj = bridges[j].i[0]\r\n        const iej = bridges[j].i[bridges[j].i.length - 1]\r\n        const jbj = bridges[j].j[0]\r\n        const jej = bridges[j].j[bridges[j].j.length - 1]\r\n\r\n        if (\r\n          bridges[i].type !== bridges[j].type ||\r\n          this._hasChainBreak(Math.min(ibi, ibj), Math.max(iei, iej)) ||\r\n          this._hasChainBreak(Math.min(jbi, jbj), Math.max(jei, jej)) ||\r\n          ibj - iei >= 6 ||\r\n          (iei >= ibj && ibi <= iej)\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        let bulge = false\r\n        if (bridges[i].type === BridgeType.PARALLEL) {\r\n          bulge = (jbj - jei < 6 && ibj - iei < 3) || jbj - jei < 3\r\n        } else {\r\n          bulge = (jbi - jej < 6 && ibj - iei < 3) || jbi - jej < 3\r\n        }\r\n\r\n        if (bulge) {\r\n          bridges[i].i = bridges[i].i.concat(bridges[j].i)\r\n          if (bridges[i].type === BridgeType.PARALLEL) {\r\n            bridges[i].j = bridges[i].j.concat(bridges[j].j)\r\n          } else {\r\n            bridges[i].j = bridges[j].j.concat(bridges[i].j)\r\n          }\r\n          bridges.splice(j--, 1)\r\n        }\r\n      }\r\n    }\r\n\r\n    // Sheet\r\n    const ladderset = new Set()\r\n    for (let i = 0; i < bridges.length; ++i) {\r\n      ladderset.add(bridges[i])\r\n    }\r\n\r\n    let sheet = 1\r\n    let ladder = 0\r\n    while (ladderset.size > 0) {\r\n      let bridge = ladderset.values().next().value\r\n      ladderset.delete(bridge)\r\n\r\n      const sheetset = new Set()\r\n      sheetset.add(bridge)\r\n\r\n      let toMove\r\n      do {\r\n        toMove = new Set()\r\n        for (const a of sheetset.values()) {\r\n          for (const b of ladderset.values()) {\r\n            if (this._areBridgesLinked(a, b)) {\r\n              toMove.add(b)\r\n            }\r\n          }\r\n        }\r\n        for (bridge of toMove.values()) {\r\n          sheetset.add(bridge)\r\n          ladderset.delete(bridge)\r\n        }\r\n      } while (toMove.size > 0)\r\n\r\n      for (bridge of sheetset.values()) {\r\n        bridge.ladder = ladder\r\n        bridge.sheet = sheet\r\n        bridge.link = sheetset\r\n        ++ladder\r\n      }\r\n\r\n      ++sheet\r\n    }\r\n\r\n    for (let i = 0; i < bridges.length; ++i) {\r\n      const bridge = bridges[i]\r\n\r\n      // find out if any of the i and j set members already have\r\n      // a bridge assigned, if so, we're assigning bridge 2\r\n\r\n      let betai = 0\r\n      let betaj = 0\r\n\r\n      for (let l = 0; l < bridge.i.length; ++l) {\r\n        if (this._betaPartners[bridge.i[l]][0]) {\r\n          betai = 1\r\n          break\r\n        }\r\n      }\r\n\r\n      for (let l = 0; l < bridge.j.length; ++l) {\r\n        if (this._betaPartners[bridge.j[l]][0]) {\r\n          betaj = 1\r\n          break\r\n        }\r\n      }\r\n\r\n      let ss = StructureType.BRIDGE\r\n      if (bridge.i.length > 1) {\r\n        ss = StructureType.STRAND\r\n      }\r\n\r\n      if (bridge.type === BridgeType.PARALLEL) {\r\n        let j = 0\r\n        for (let k = 0; k < bridge.i.length; ++k) {\r\n          this._betaPartners[bridge.i[k]][betai] = {\r\n            residue: bridge.j[j++],\r\n            ladder: bridge.ladder,\r\n            parallel: true\r\n          }\r\n        }\r\n\r\n        j = 0\r\n        for (let k = 0; k < bridge.j.length; ++k) {\r\n          this._betaPartners[bridge.j[k]][betaj] = {\r\n            residue: bridge.i[j++],\r\n            ladder: bridge.ladder,\r\n            parallel: true\r\n          }\r\n        }\r\n      } else {\r\n        let j = bridge.j.length - 1\r\n        for (let k = 0; k < bridge.i.length; ++k) {\r\n          this._betaPartners[bridge.i[k]][betai] = {\r\n            residue: bridge.j[j--],\r\n            ladder: bridge.ladder,\r\n            parallel: false\r\n          }\r\n        }\r\n\r\n        j = bridge.i.length - 1\r\n        for (let k = 0; k < bridge.j.length; ++k) {\r\n          this._betaPartners[bridge.j[k]][betaj] = {\r\n            residue: bridge.i[j--],\r\n            ladder: bridge.ladder,\r\n            parallel: false\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let k = bridge.i[0]; k <= bridge.i[bridge.i.length - 1]; ++k) {\r\n        if (this._ss[k] !== StructureType.STRAND) {\r\n          this._ss[k] = ss\r\n          this._sheet[k] = bridge.sheet\r\n        }\r\n      }\r\n\r\n      for (let k = bridge.j[0]; k <= bridge.j[bridge.j.length - 1]; ++k) {\r\n        if (this._ss[k] !== StructureType.STRAND) {\r\n          this._ss[k] = ss\r\n          this._sheet[k] = bridge.sheet\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _testBridge(chainA, from, chainB, to) {\r\n    let result = BridgeType.NO_BRIDGE\r\n\r\n    const a = chainA[from - 1]._index\r\n    const b = chainA[from]._index\r\n    const c = chainA[from + 1]._index\r\n    const d = chainB[to - 1]._index\r\n    const e = chainB[to]._index\r\n    const f = chainB[to + 1]._index\r\n\r\n    const isBond = this._hbonds.isBond.bind(this._hbonds)\r\n    if ((isBond(c, e) && isBond(e, a)) || (isBond(f, b) && isBond(b, d))) {\r\n      result = BridgeType.PARALLEL\r\n    } else if (\r\n      (isBond(c, d) && isBond(f, a)) ||\r\n      (isBond(e, b) && isBond(b, e))\r\n    ) {\r\n      result = BridgeType.ANTI_PARALLEL\r\n    }\r\n    return result\r\n  }\r\n\r\n  // return true if any of the residues in bridge a is identical to any of the residues in bridge b\r\n  _areBridgesLinked(a, b) {\r\n    const ai = new Set(a.i)\r\n    const aj = new Set(a.j)\r\n\r\n    for (const i of b.i) {\r\n      if (ai.has(i) || aj.has(i)) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    for (const i of b.j) {\r\n      if (ai.has(i) || aj.has(i)) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  _hasChainBreak(from, to) {\r\n    for (let i = from + 1; i <= to; ++i) {\r\n      if (\r\n        this._complex._residues[i]._sequence !==\r\n        this._complex._residues[i - 1]._sequence + 1\r\n      ) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\nSecondaryStructureMap.StructureType = StructureType\r\n",
		"import logger from '../utils/logger'\r\nimport Atom from './Atom'\r\nimport Chain from './Chain'\r\nimport Helix from './Helix'\r\nimport Strand from './Strand'\r\nimport Sheet from './Sheet'\r\nimport Component from './Component'\r\nimport ResidueType from './ResidueType'\r\nimport Bond from './Bond'\r\nimport AutoBond from './AutoBond'\r\nimport AromaticLoopsMarker from './AromaticLoopsMarker'\r\nimport BiologicalUnit from './BiologicalUnit'\r\nimport selectors from './selectors'\r\nimport VoxelWorld from './VoxelWorld'\r\nimport SecondaryStructureMap from './SecondaryStructureMap'\r\nimport StructuralElement from './StructuralElement'\r\nimport { Vector3 } from 'three'\r\n\r\nconst VOXEL_SIZE = 5.0\r\n\r\nconst { StructureType } = SecondaryStructureMap\r\nconst StructuralElementType = StructuralElement.Type\r\n\r\n// see http://www.wwpdb.org/documentation/file-format-content/format33/sect5.html#HELIX\r\nconst helixClassMap = {\r\n  [StructureType.HELIX_ALPHA]: 1,\r\n  [StructureType.HELIX_PI]: 3,\r\n  [StructureType.HELIX_310]: 5\r\n}\r\n\r\nconst loopMap = {\r\n  [StructureType.BRIDGE]: StructuralElementType.BRIDGE,\r\n  [StructureType.TURN]: StructuralElementType.TURN,\r\n  [StructureType.BEND]: StructuralElementType.BEND,\r\n  [StructureType.LOOP]: StructuralElementType.COIL\r\n}\r\n\r\n/**\r\n * The entire complex of the molecules under study.\r\n *\r\n * @exports Complex\r\n * @constructor\r\n */\r\nclass Complex {\r\n  constructor() {\r\n    this._chains = []\r\n    this._components = []\r\n    this._helices = []\r\n    this._sheets = []\r\n    this.structures = []\r\n\r\n    this._residueTypes = Object.create(ResidueType.StandardTypes)\r\n    this._atoms = []\r\n    this._residues = []\r\n    this._bonds = []\r\n    this._sgroups = []\r\n    this._molecules = []\r\n    this._maskNeedsUpdate = false\r\n\r\n    this.metadata = {}\r\n\r\n    this.symmetry = []\r\n    this.units = [new BiologicalUnit(this)]\r\n    this._currentUnit = 0 // default biological unit is the asymmetric unit\r\n  }\r\n\r\n  addAtom(atom) {\r\n    const index = this._atoms.length\r\n    this._atoms.push(atom)\r\n    return index\r\n  }\r\n\r\n  addSheet(sheet) {\r\n    const index = this._sheets.length\r\n    this._sheets.push(sheet)\r\n    return index\r\n  }\r\n\r\n  addHelix(helix) {\r\n    const index = this._helices.length\r\n    this._helices.push(helix)\r\n    return index\r\n  }\r\n\r\n  getAtoms() {\r\n    return this._atoms\r\n  }\r\n\r\n  getBonds() {\r\n    return this._bonds\r\n  }\r\n\r\n  getAtomCount() {\r\n    return this._atoms.length\r\n  }\r\n\r\n  addResidue(residue) {\r\n    const index = this._residues.length\r\n    this._residues.push(residue)\r\n    return index\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    this.forEachChain((chain) => {\r\n      chain.updateToFrame(frameData)\r\n    })\r\n  }\r\n\r\n  addResidueType(resName) {\r\n    const rt = (this._residueTypes[resName] = new ResidueType(\r\n      resName,\r\n      'Unknown',\r\n      ''\r\n    ))\r\n    return rt\r\n  }\r\n\r\n  getResidueCount() {\r\n    return this._residues.length\r\n  }\r\n\r\n  getResidues() {\r\n    return this._residues\r\n  }\r\n\r\n  getSGroupCount() {\r\n    return this._sgroups.length\r\n  }\r\n\r\n  getSGroups() {\r\n    return this._sgroups\r\n  }\r\n\r\n  /*\r\n     Extract atom by its fullname: #chainName#.#residueId#.#atomName#\r\n     */\r\n  getAtomByFullname(fullName) {\r\n    const parts = fullName.split('.')\r\n    if (parts.length !== 3) {\r\n      return null\r\n    }\r\n\r\n    const chainName = parts[0]\r\n    const resId = parseInt(parts[1], 10)\r\n    if (Number.isNaN(resId)) {\r\n      return null\r\n    }\r\n    const atomName = parts[2].toUpperCase()\r\n\r\n    let currAtom = null\r\n    this.forEachChain((chain) => {\r\n      if (currAtom) {\r\n        return\r\n      }\r\n      if (chain._name.localeCompare(chainName) === 0) {\r\n        chain.forEachResidue((residue) => {\r\n          if (currAtom) {\r\n            return\r\n          }\r\n          if (residue._sequence === resId) {\r\n            residue.forEachAtom((atom) => {\r\n              if (currAtom) {\r\n                return\r\n              }\r\n              if (atomName.localeCompare(atom.name) === 0) {\r\n                currAtom = atom\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    return currAtom\r\n  }\r\n\r\n  /**\r\n   * Create a new chain.\r\n   *\r\n   * @param {string} name - Chain name.\r\n   * @returns {Chain} - Newly created chain.\r\n   */\r\n  addChain(name) {\r\n    const result = new Chain(this, name)\r\n    this._chains.push(result)\r\n    return result\r\n  }\r\n\r\n  getChain(name) {\r\n    for (let i = 0, n = this._chains.length; i < n; ++i) {\r\n      const chain = this._chains[i]\r\n      if (chain.getName() === name) {\r\n        return chain\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  getChainCount() {\r\n    return this._chains.length\r\n  }\r\n\r\n  getMolecules() {\r\n    return this._molecules\r\n  }\r\n\r\n  getMoleculeCount() {\r\n    return this._molecules.length\r\n  }\r\n\r\n  forEachAtom(process) {\r\n    const atoms = this._atoms\r\n    for (let i = 0, n = atoms.length; i < n; ++i) {\r\n      process(atoms[i])\r\n    }\r\n  }\r\n\r\n  forEachBond(process) {\r\n    const bonds = this._bonds\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      process(bonds[i])\r\n    }\r\n  }\r\n\r\n  forEachResidue(process) {\r\n    const residues = this._residues\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      process(residues[i])\r\n    }\r\n  }\r\n\r\n  forEachChain(process) {\r\n    const chains = this._chains\r\n    for (let i = 0, n = chains.length; i < n; ++i) {\r\n      process(chains[i])\r\n    }\r\n  }\r\n\r\n  forEachMolecule(process) {\r\n    const molecules = this._molecules\r\n    const n = molecules.length\r\n    for (let i = 0; i < n; ++i) {\r\n      process(molecules[i])\r\n    }\r\n  }\r\n\r\n  forEachSGroup(process) {\r\n    const groups = this._sgroups\r\n    for (let i = 0, n = groups.length; i < n; ++i) {\r\n      process(groups[i])\r\n    }\r\n  }\r\n\r\n  forEachComponent(process) {\r\n    const components = this._components\r\n    for (let i = 0, n = components.length; i < n; ++i) {\r\n      process(components[i])\r\n    }\r\n  }\r\n\r\n  forEachVisibleComponent(process) {\r\n    const components = this._components\r\n    for (let i = 0, n = components.length; i < n; ++i) {\r\n      process(components[i])\r\n    }\r\n  }\r\n\r\n  addBond(left, right, order, type, fixed) {\r\n    const bond = new Bond(left, right, order, type, fixed)\r\n    this._bonds.push(bond)\r\n    return bond\r\n  }\r\n\r\n  getBondCount() {\r\n    return this._bonds.length\r\n  }\r\n\r\n  getResidueType(name) {\r\n    return this._residueTypes[name] || null\r\n  }\r\n\r\n  getUnifiedSerial(chain, serial, iCode) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const maxSerial = 65536\r\n    const chainShift = maxSerial * 256\r\n    /* eslint-enable no-magic-numbers */\r\n    return serial + iCode * maxSerial + chain * chainShift\r\n  }\r\n\r\n  splitUnifiedSerial(uniSerial) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const maxSerial = 65536\r\n    const chainShift = maxSerial * 256\r\n    /* eslint-enable no-magic-numbers */\r\n    const chainId = Math.floor(uniSerial / chainShift)\r\n    const remnant = uniSerial - chainId * chainShift\r\n    const insCode = Math.floor(remnant / maxSerial)\r\n    const ser = remnant - insCode * maxSerial\r\n    return { chain: chainId, serial: ser, iCode: insCode }\r\n  }\r\n\r\n  _fillCmpEdit() {\r\n    const self = this\r\n    const components = this._components\r\n\r\n    function addComp() {\r\n      const comp = new Component(self)\r\n      comp._index = components.length\r\n      components[comp._index] = comp\r\n      return comp\r\n    }\r\n\r\n    this.forEachChain((chain) => {\r\n      const residues = chain._residues\r\n      const resCount = residues.length\r\n      if (resCount < 1) {\r\n        return\r\n      }\r\n      let comp = addComp()\r\n      let currStart = residues[0]._index\r\n\r\n      for (let i = 0; i < resCount; ++i) {\r\n        const currRes = residues[i]\r\n        currRes._component = comp\r\n\r\n        const nextRes = i === resCount - 1 ? null : residues[i + 1]\r\n        if (\r\n          !nextRes ||\r\n          !currRes.isConnected(nextRes) ||\r\n          currRes._index !== nextRes._index - 1\r\n        ) {\r\n          // the last condition is broken and incorrect\r\n          // the refactoring of the Component is required in order to fix this issue\r\n          comp.setSubDivs([\r\n            {\r\n              start: currStart,\r\n              end: currRes._index\r\n            }\r\n          ])\r\n          if (nextRes) {\r\n            currStart = nextRes._index\r\n            comp = addComp()\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  // This function was added in the moment of despair\r\n  // It was the dark times for miew\r\n  _fillCmpNoedit() {\r\n    const comp = new Component(this)\r\n    comp._index = 0\r\n\r\n    const residues = this._residues\r\n    const resCount = residues.length\r\n    if (resCount === 0) {\r\n      return\r\n    }\r\n\r\n    const currSubDivs = []\r\n    let currStart = 0\r\n    for (let i = 0; i < resCount; ++i) {\r\n      const currRes = residues[i]\r\n      currRes._component = comp\r\n\r\n      const nextRes = i === resCount - 1 ? null : residues[i + 1]\r\n      if (!nextRes || !currRes.isConnected(nextRes)) {\r\n        // wrap up this interval\r\n        currSubDivs[currSubDivs.length] = {\r\n          start: currStart,\r\n          end: i\r\n        }\r\n        if (nextRes) {\r\n          currStart = i + 1\r\n        }\r\n      }\r\n    }\r\n\r\n    comp.setSubDivs(currSubDivs)\r\n    this._components[comp._index] = comp\r\n  }\r\n\r\n  /**\r\n   * Fill components information.\r\n   * @param {boolean} enableEditing - Restructure Complex to enable per-component editing.\r\n   */\r\n  _fillComponents(enableEditing) {\r\n    if (enableEditing) {\r\n      this._fillCmpEdit()\r\n    } else {\r\n      this._fillCmpNoedit()\r\n    }\r\n  }\r\n\r\n  getCurrentUnit() {\r\n    return this._currentUnit\r\n  }\r\n\r\n  getDefaultBoundaries() {\r\n    return this.units[0].getBoundaries()\r\n  }\r\n\r\n  getBoundaries() {\r\n    return this.units[this._currentUnit].getBoundaries()\r\n  }\r\n\r\n  getTransforms() {\r\n    return this.units[this._currentUnit].getTransforms()\r\n  }\r\n\r\n  getSelector() {\r\n    return this.units[this._currentUnit].getSelector()\r\n  }\r\n\r\n  resetCurrentUnit() {\r\n    this._currentUnit = 0\r\n    this.setCurrentUnit(1)\r\n  }\r\n\r\n  setCurrentUnit(newUnit) {\r\n    if (\r\n      newUnit !== null &&\r\n      newUnit !== undefined &&\r\n      newUnit !== this._currentUnit &&\r\n      newUnit >= 0 &&\r\n      newUnit < this.units.length\r\n    ) {\r\n      this._currentUnit = newUnit\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  _computeBounds() {\r\n    const { units } = this\r\n    for (let i = 0, n = units.length; i < n; ++i) {\r\n      units[i].computeBoundaries()\r\n    }\r\n  }\r\n\r\n  onAtomPositionChanged() {\r\n    this.forEachChain((a) => {\r\n      a._finalize()\r\n    })\r\n    this.forEachComponent((c) => {\r\n      c.update()\r\n    })\r\n    // Update bounding sphere and box\r\n    this._computeBounds()\r\n    this._finalizeBonds()\r\n    this.forEachSGroup((s) => {\r\n      s._rebuildSGroupOnAtomChange()\r\n    })\r\n  }\r\n\r\n  update() {\r\n    if (this._maskNeedsUpdate) {\r\n      this.updateStructuresMask()\r\n      this._maskNeedsUpdate = false\r\n    }\r\n  }\r\n\r\n  _finalizeBonds() {\r\n    const bonds = this.getBonds()\r\n    const n = bonds.length\r\n    for (let i = 0; i < n; ++i) {\r\n      bonds[i]._index = i\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finalizes complex's inner data(i.e. after parsing).\r\n   * @param {objects} opts - Build bonds automatically.\r\n   * @param {boolean} opts.needAutoBonding     - Build bonds automatically.\r\n   * @param {boolean} opts.detectAromaticLoops - Find/mark aromatic loops.\r\n   * @param {boolean} opts.enableEditing       - Restructure Complex to enable per-component editing.\r\n   * @param {Array<Atom>} [opts.serialAtomMap] - Array of atoms ordered by their serials.\r\n   */\r\n  finalize(opts) {\r\n    opts = opts || {}\r\n    // Put bonds into atoms\r\n    const bonds = this._bonds\r\n    let i\r\n    let n\r\n    // remove invalid bonds\r\n    for (i = bonds.length - 1; i >= 0; i--) {\r\n      const bond = bonds[i]\r\n      if (bond._left === null || bond._right === null) {\r\n        bonds.splice(i, 1)\r\n      } else {\r\n        bond._left.bonds.push(bond)\r\n        bond._right.bonds.push(bond)\r\n      }\r\n    }\r\n\r\n    const residues = this._residues\r\n    for (i = 0, n = residues.length; i < n; ++i) {\r\n      residues[i]._finalize()\r\n    }\r\n\r\n    this.forEachChain((a) => {\r\n      a._finalize()\r\n    })\r\n\r\n    // WARNING! this MUST be done BEFORE computeBounds is called\r\n    const { units } = this\r\n    for (i = 0, n = units.length; i < n; ++i) {\r\n      units[i].finalize()\r\n    }\r\n    // try setting first biomolecule by defaults\r\n    this.setCurrentUnit(1)\r\n\r\n    const residueHash = {}\r\n    for (i = 0, n = residues.length; i < n; ++i) {\r\n      const res = residues[i]\r\n      // This code is extremely dangerous for non-PDB formats\r\n      residueHash[\r\n        this.getUnifiedSerial(\r\n          res.getChain().getName().charCodeAt(0),\r\n          res.getSequence(),\r\n          res.getICode().charCodeAt(0)\r\n        )\r\n      ] = res\r\n    }\r\n\r\n    const { structures } = this\r\n    for (i = 0, n = structures.length; i < n; ++i) {\r\n      structures[i]._finalize(opts.serialAtomMap, residueHash, this)\r\n    }\r\n\r\n    const helices = this._helices\r\n    for (i = 0, n = helices.length; i < n; ++i) {\r\n      helices[i]._finalize(opts.serialAtomMap, residueHash, this)\r\n    }\r\n\r\n    const sheets = this._sheets\r\n    for (i = 0, n = sheets.length; i < n; ++i) {\r\n      sheets[i]._finalize(opts.serialAtomMap, residueHash, this)\r\n    }\r\n\r\n    // Update bounding sphere and box\r\n    this._computeBounds()\r\n\r\n    const atoms = this._atoms\r\n    for (i = 0, n = atoms.length; i < n; ++i) {\r\n      const currAtom = atoms[i]\r\n      currAtom.index = i\r\n    }\r\n\r\n    if (opts.needAutoBonding) {\r\n      const autoConnector = new AutoBond(this)\r\n      autoConnector.build()\r\n      autoConnector.destroy()\r\n    }\r\n\r\n    const chains = this._chains\r\n    for (i = 0, n = chains.length; i < n; ++i) {\r\n      chains[i]._index = i\r\n    }\r\n\r\n    for (i = 0, n = residues.length; i < n; ++i) {\r\n      residues[i]._index = i\r\n    }\r\n\r\n    // mark non-polar hydrogens\r\n    for (i = 0, n = atoms.length; i < n; ++i) {\r\n      const atom = atoms[i]\r\n      if (atom.flags & Atom.Flags.HYDROGEN && atom.bonds.length === 1) {\r\n        const bond = atom.bonds[0]\r\n        const other = (bond._left !== atom && bond._left) || bond._right\r\n        if (other.flags & Atom.Flags.CARBON) {\r\n          atom.flags |= Atom.Flags.NONPOLARH\r\n        }\r\n      }\r\n    }\r\n\r\n    this._finalizeBonds()\r\n    this._fillComponents(opts.enableEditing)\r\n\r\n    const marker = new AromaticLoopsMarker(this)\r\n    marker.markCycles()\r\n    if (opts.detectAromaticLoops) {\r\n      // TODO remove this condition clause, it is for debug purposes only!\r\n      marker.detectCycles() // TODO add conditional detection\r\n    }\r\n\r\n    this._finalizeMolecules()\r\n  }\r\n\r\n  _finalizeMolecules() {\r\n    // add reference to molecule into residue\r\n    for (let i = 0; i < this._molecules.length; i++) {\r\n      const molecule = this._molecules[i]\r\n      const count = molecule.residues.length\r\n      for (let j = 0; j < count; j++) {\r\n        const residue = molecule.residues[j]\r\n        residue._molecule = molecule\r\n      }\r\n    }\r\n  }\r\n\r\n  updateStructuresMask() {\r\n    const updater = (structure) => structure.collectMask()\r\n    this.forEachResidue(updater)\r\n    this.forEachChain(updater)\r\n    this.forEachMolecule(updater)\r\n  }\r\n\r\n  countAtomsByMask(mask) {\r\n    let count = 0\r\n\r\n    this.forEachAtom((atom) => {\r\n      if ((atom.mask & mask) !== 0) {\r\n        count++\r\n      }\r\n    })\r\n\r\n    return count\r\n  }\r\n\r\n  getNumAtomsBySelector(selector) {\r\n    let count = 0\r\n\r\n    this.forEachAtom((atom) => {\r\n      if (selector.includesAtom(atom)) {\r\n        count++\r\n      }\r\n    })\r\n\r\n    return count\r\n  }\r\n\r\n  resetAtomMask(mask) {\r\n    this.forEachAtom((atom) => {\r\n      atom.mask = mask\r\n    })\r\n  }\r\n\r\n  markAtoms(selector, mask) {\r\n    const setMask = mask\r\n    const clearMask = ~setMask\r\n    let count = 0\r\n    const totalSelector = selectors.keyword('And')(selector, this.getSelector())\r\n\r\n    this.forEachAtom((atom) => {\r\n      if (totalSelector.includesAtom(atom)) {\r\n        atom.mask |= setMask\r\n        count++\r\n      } else {\r\n        atom.mask &= clearMask\r\n      }\r\n    })\r\n    this._maskNeedsUpdate = true\r\n\r\n    return count\r\n  }\r\n\r\n  markAtomsAdditionally(selector, mask) {\r\n    const setMask = mask\r\n    let count = 0\r\n\r\n    this.forEachAtom((atom) => {\r\n      if (selector.includesAtom(atom) && (atom.mask & mask) !== mask) {\r\n        atom.mask |= setMask\r\n        count++\r\n      }\r\n    })\r\n\r\n    return count\r\n  }\r\n\r\n  clearAtomBits(mask) {\r\n    const clearMask = ~mask\r\n    this.forEachAtom((atom) => {\r\n      atom.mask &= clearMask\r\n    })\r\n    const reseter = (a) => {\r\n      a._mask &= clearMask\r\n    }\r\n    this.forEachAtom(reseter)\r\n    this.forEachResidue(reseter)\r\n    this.forEachChain(reseter)\r\n    this.forEachMolecule(reseter)\r\n  }\r\n\r\n  getAtomNames() {\r\n    if (this.hasOwnProperty('_atomNames')) {\r\n      return this._atomNames\r\n    }\r\n\r\n    const dict = {}\r\n    this.forEachAtom((atom) => {\r\n      dict[atom.name] = 1\r\n    })\r\n    this._atomNames = Object.keys(dict)\r\n\r\n    return this._atomNames\r\n  }\r\n\r\n  getElements() {\r\n    if (this.hasOwnProperty('_elements')) {\r\n      return this._elements\r\n    }\r\n\r\n    const dict = {}\r\n    this.forEachAtom((atom) => {\r\n      dict[atom.element.name] = 1\r\n    })\r\n    this._elements = Object.keys(dict)\r\n\r\n    return this._elements\r\n  }\r\n\r\n  getResidueNames() {\r\n    if (this.hasOwnProperty('_residueNames')) {\r\n      return this._residueNames\r\n    }\r\n\r\n    const dict = {}\r\n    this.forEachResidue((res) => {\r\n      dict[res._type._name] = 1\r\n    })\r\n    this._residueNames = Object.keys(dict)\r\n\r\n    return this._residueNames\r\n  }\r\n\r\n  getChainNames() {\r\n    if (this.hasOwnProperty('_chainNames')) {\r\n      return this._chainNames\r\n    }\r\n\r\n    const dict = {}\r\n    this.forEachChain((chain) => {\r\n      dict[chain._name] = 1\r\n    })\r\n    this._chainNames = Object.keys(dict)\r\n\r\n    return this._chainNames\r\n  }\r\n\r\n  getAltLocNames() {\r\n    if (this.hasOwnProperty('_altlocNames')) {\r\n      return this._altlocNames\r\n    }\r\n\r\n    const dict = {}\r\n    this.forEachAtom((atom) => {\r\n      dict[String.fromCharCode(atom.location)] = 1\r\n    })\r\n    this._altlocNames = Object.keys(dict)\r\n\r\n    return this._altlocNames\r\n  }\r\n\r\n  getVoxelWorld() {\r\n    if (!this.hasOwnProperty('_voxelWorld')) {\r\n      try {\r\n        this._voxelWorld = new VoxelWorld(\r\n          this.getDefaultBoundaries().boundingBox,\r\n          new Vector3(VOXEL_SIZE, VOXEL_SIZE, VOXEL_SIZE)\r\n        )\r\n        this._voxelWorld.addAtoms(this)\r\n      } catch (e) {\r\n        logger.warn('Unable to create voxel world')\r\n        this._voxelWorld = null\r\n      }\r\n    }\r\n\r\n    return this._voxelWorld\r\n  }\r\n\r\n  /**\r\n   * Simple function to make unified routine procedure without code duplication.\r\n   * @param {Array} srcArray   - Source chemical structure array (will be part of resulting chemical structure array).\r\n   * @param {Array} dstArray   - Resulting chemical structure array.\r\n   * @param {number} param     - Parameter for processor.\r\n   * @param {function} functor - Processor for every element in array.\r\n   */\r\n  addElement(srcArray, dstArray, param, functor) {\r\n    const { length } = srcArray\r\n    for (let i = 0; i < length; ++i) {\r\n      const elem = srcArray[i]\r\n      functor(elem, param)\r\n      dstArray.push(elem)\r\n    }\r\n  }\r\n\r\n  // this function joins multiple complexes into one (this)\r\n  // atom, bond, ... objects are reused -- so input complexes are no longer valid\r\n  joinComplexes(complexes) {\r\n    // clear target complex\r\n    this._chains = []\r\n    this._components = []\r\n    this._helices = []\r\n    this._sheets = []\r\n    this.structures = []\r\n    this._atoms = []\r\n    this._residues = []\r\n    this._bonds = []\r\n    this._sgroups = []\r\n\r\n    const self = this\r\n    let atomBias = 0\r\n    let bondBias = 0\r\n    let residueBias = 0\r\n    let chainBias = 0\r\n    let componentBias = 0\r\n\r\n    function processAtom(atom, bias) {\r\n      atom.serial += bias\r\n      atom.index += bias\r\n    }\r\n\r\n    function processBond(bond, bias) {\r\n      bond._index += bias\r\n    }\r\n\r\n    function processResidue(residue, bias) {\r\n      residue._index += bias\r\n    }\r\n\r\n    function processChain(chain, bias) {\r\n      chain._complex = self\r\n      chain._index += bias\r\n    }\r\n\r\n    function processComponent(component, bias) {\r\n      component._complex = self\r\n      component._index += bias\r\n    }\r\n\r\n    /**\r\n     * Simple function to do nothing.\r\n     */\r\n    function doNothing() {}\r\n\r\n    for (let i = 0; i < complexes.length; ++i) {\r\n      const c = complexes[i]\r\n      this.addElement(c._atoms, this._atoms, atomBias, processAtom)\r\n      this.addElement(c._bonds, this._bonds, bondBias, processBond)\r\n      this.addElement(c._residues, this._residues, residueBias, processResidue)\r\n      this.addElement(c._chains, this._chains, chainBias, processChain)\r\n      this.addElement(c._sheets, this._sheets, 0, doNothing)\r\n      this.addElement(c._helices, this._helices, 0, doNothing)\r\n      this.addElement(c._sgroups, this._sgroups, 0, doNothing)\r\n      this.addElement(\r\n        c._components,\r\n        this._components,\r\n        componentBias,\r\n        processComponent\r\n      )\r\n      this.addElement(c.structures, this.structures, 0, doNothing)\r\n      // merge residue types\r\n      for (const rt in c._residueTypes) {\r\n        if (c._residueTypes.hasOwnProperty(rt)) {\r\n          this._residueTypes[rt] = c._residueTypes[rt]\r\n        }\r\n      }\r\n\r\n      atomBias += c._atoms.length\r\n      bondBias += c._bonds.length\r\n      residueBias += c._residues.length\r\n      chainBias += c._chains.length\r\n      componentBias += c._components.length\r\n    }\r\n\r\n    this._computeBounds()\r\n  }\r\n\r\n  /**\r\n   * Replace secondary structure with calculated one.\r\n   *\r\n   * DSSP algorithm implementation is used.\r\n   *\r\n   * Kabsch W, Sander C. 1983. Dictionary of protein secondary structure: pattern recognition of hydrogen-bonded and\r\n   * geometrical features. Biopolymers. 22(12):2577-2637. doi:10.1002/bip.360221211.\r\n   */\r\n  dssp() {\r\n    const ssMap = new SecondaryStructureMap(this)\r\n\r\n    const structures = (this.structures = [])\r\n    const helices = (this._helices = [])\r\n    const sheets = (this._sheets = [])\r\n\r\n    const getSheet = (index) => {\r\n      let item = sheets[index]\r\n      if (!item) {\r\n        item = sheets[index] = new Sheet(String(index), 0)\r\n      }\r\n      return item\r\n    }\r\n\r\n    let lastCode\r\n    let lastSheetIndex\r\n    let lastHelixIndex = 0\r\n    let curStructure = null\r\n    for (let i = 0, n = this._residues.length; i < n; ++i) {\r\n      const curCode = ssMap._ss[i]\r\n      const curResidue = this._residues[i]\r\n      const curSheetIndex = ssMap._sheet[i]\r\n\r\n      // expand the last structure\r\n      if (curCode === lastCode && curSheetIndex === lastSheetIndex) {\r\n        curResidue._secondary = curStructure\r\n        if (curStructure) {\r\n          curStructure.term = curResidue\r\n        }\r\n        if (curStructure instanceof Helix) {\r\n          curStructure.length++\r\n        }\r\n        continue\r\n      }\r\n\r\n      // create a new structure\r\n      const helixClass = helixClassMap[curCode]\r\n      const loopType = loopMap[curCode]\r\n      if (curCode === StructureType.STRAND) {\r\n        const curSheet = getSheet(curSheetIndex)\r\n        curStructure = new Strand(\r\n          curSheet,\r\n          curResidue,\r\n          curResidue,\r\n          0,\r\n          null,\r\n          null\r\n        )\r\n        curSheet.addStrand(curStructure)\r\n      } else if (helixClass !== undefined) {\r\n        lastHelixIndex++\r\n        curStructure = new Helix(\r\n          helixClass,\r\n          curResidue,\r\n          curResidue,\r\n          lastHelixIndex,\r\n          String(lastHelixIndex),\r\n          '',\r\n          1\r\n        )\r\n        helices.push(curStructure)\r\n      } else if (loopType !== undefined) {\r\n        curStructure = new StructuralElement(loopType, curResidue, curResidue)\r\n      } else {\r\n        curStructure = null\r\n      }\r\n\r\n      if (curStructure) {\r\n        structures.push(curStructure)\r\n      }\r\n\r\n      curResidue._secondary = curStructure\r\n\r\n      lastCode = curCode\r\n      lastSheetIndex = curSheetIndex\r\n    }\r\n\r\n    this._sheets = sheets.filter((_sheet) => true) // squeeze sheets array\r\n  }\r\n}\r\n\r\nComplex.prototype.id = 'Complex'\r\nComplex.prototype.name = ''\r\n\r\nexport default Complex\r\n",
		"import utils from '../utils'\r\nimport {\r\n  ClampToEdgeWrapping,\r\n  DataTexture,\r\n  LinearFilter,\r\n  LuminanceFormat,\r\n  UnsignedByteType,\r\n  UVMapping,\r\n  Vector3\r\n} from 'three'\r\n\r\nfunction pow2ceil(v) {\r\n  let p = 2\r\n  v = (v - 1) >> 1\r\n  while (v) {\r\n    p <<= 1\r\n    v >>= 1\r\n  }\r\n  return p\r\n}\r\n\r\n/**\r\n * Volume constructor\r\n *\r\n * @param {Object} type - Float32Array, Int8Array, etc...\r\n * @param {Object|Array} dimensions - number of data points on each axis (x, y, z)\r\n * @param {Box3} box - bounding box defining data place in metric space,\r\n *                     it's corners correspond to extreme data points\r\n * @param {Number} vecSize - dimension of the field data point (1 = scalar, 3 = 3D vector)\r\n * @param {Object} data - typed array of the same type as specified by the 1st parameter,\r\n *                        layout: point by point along X,\r\n *                                row by row along Y,\r\n *                                plane by plane along Z\r\n * @param {Number} volumeInfo - volume info values to define threshold to filter the noise\r\n */\r\n\r\nclass Volume {\r\n  constructor(type, dimensions, box, vecSize, data, volumeInfo) {\r\n    this._box = box.clone()\r\n    this._dimVec = Math.max(Math.floor(vecSize || 1), 1)\r\n    this._volumeInfo = volumeInfo\r\n\r\n    if (dimensions instanceof Array) {\r\n      ;[this._dimX, this._dimY, this._dimZ] = dimensions\r\n    } else {\r\n      this._dimX = dimensions.x\r\n      this._dimY = dimensions.y\r\n      this._dimZ = dimensions.z\r\n    }\r\n    this._dimX = Math.max(Math.floor(this._dimX), 1)\r\n    this._dimY = Math.max(Math.floor(this._dimY), 1)\r\n    this._dimZ = Math.max(Math.floor(this._dimZ), 1)\r\n\r\n    this._rowElements = this._dimVec * this._dimX\r\n    this._planeElements = this._rowElements * this._dimY\r\n    this._totalElements = this._planeElements * this._dimZ\r\n\r\n    this._data = data || utils.allocateTyped(type, this._totalElements)\r\n\r\n    // override getter/setter for vector fields\r\n    switch (this._dimVec) {\r\n      case 1:\r\n        break\r\n\r\n      case 2:\r\n        this.getValue = function (x, y, z) {\r\n          const idx =\r\n            x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n          return [this._data[idx], this._data[idx + 1]]\r\n        }\r\n\r\n        this.setValue = function (x, y, z, a, b) {\r\n          const idx =\r\n            x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n          this._data[idx] = a\r\n          this._data[idx + 1] = b\r\n        }\r\n\r\n        this.addValue = function (x, y, z, a, b) {\r\n          const idx =\r\n            x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n          this._data[idx] += a\r\n          this._data[idx + 1] += b\r\n        }\r\n        break\r\n\r\n      case 3:\r\n        this.getValue = function (x, y, z) {\r\n          const idx =\r\n            x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n          return [this._data[idx], this._data[idx + 1], this._data[idx + 2]]\r\n        }\r\n\r\n        this.setValue = function (x, y, z, a, b, c) {\r\n          const idx =\r\n            x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n          this._data[idx] = a\r\n          this._data[idx + 1] = b\r\n          this._data[idx + 2] = c\r\n        }\r\n\r\n        this.addValue = function (x, y, z, a, b, c) {\r\n          const idx =\r\n            x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n          this._data[idx] += a\r\n          this._data[idx + 1] += b\r\n          this._data[idx + 2] += c\r\n        }\r\n        break\r\n\r\n      default:\r\n        throw new Error('Volume: invalid vector dimension')\r\n    }\r\n  }\r\n\r\n  // default getter assumes it's a scalar field\r\n  getValue(x, y, z) {\r\n    return this._data[x + y * this._rowElements + z * this._planeElements]\r\n  }\r\n\r\n  // default setter assumes it's a scalar field\r\n  setValue(x, y, z, val) {\r\n    this._data[x + y * this._rowElements + z * this._planeElements] = val\r\n  }\r\n\r\n  // default adder assumes it's a scalar field\r\n  addValue(x, y, z, val) {\r\n    this._data[x + y * this._rowElements + z * this._planeElements] += val\r\n  }\r\n\r\n  getDimensions() {\r\n    return [this._dimX, this._dimY, this._dimZ]\r\n  }\r\n\r\n  getBox() {\r\n    return this._box\r\n  }\r\n\r\n  getVolumeInfo() {\r\n    return this._volumeInfo\r\n  }\r\n\r\n  getCellSize() {\r\n    const boxSize = new Vector3()\r\n    this._box.getSize(boxSize)\r\n    const res = new Vector3()\r\n    res.x = this._dimX > 1 ? boxSize.x / (this._dimX - 1) : 0\r\n    res.y = this._dimY > 1 ? boxSize.y / (this._dimY - 1) : 0\r\n    res.z = this._dimZ > 1 ? boxSize.z / (this._dimZ - 1) : 0\r\n    return res\r\n  }\r\n\r\n  computeGradient() {\r\n    if (this._dimVec !== 1) {\r\n      // gradient can only be computed for scalar fields\r\n      return null\r\n    }\r\n\r\n    // create a 3D vector field of gradients\r\n    const gradient = new Volume(\r\n      Float32Array,\r\n      [this._dimX, this._dimY, this._dimZ],\r\n      this._box,\r\n      3\r\n    )\r\n\r\n    // calculate cell side lengths\r\n    const vl = this.getCellSize()\r\n\r\n    // gradient axis scaling values and averaging factors, to correctly\r\n    // calculate the gradient for volumes with irregular cell spacing\r\n    const vs = new Vector3(-0.5 / vl.x, -0.5 / vl.y, -0.5 / vl.z)\r\n\r\n    // TODO Check for intended bug in VMD (min is zero)\r\n    function clamp(val, min, max) {\r\n      return Math.min(max, Math.max(min, val))\r\n    }\r\n\r\n    const xSize = this._dimX\r\n    const ySize = this._dimY\r\n    const zSize = this._dimZ\r\n    const volMap = this._data\r\n\r\n    function _voxelValue(x, y, z) {\r\n      return volMap[z * xSize * ySize + y * xSize + x]\r\n    }\r\n\r\n    for (let zi = 0; zi < zSize; ++zi) {\r\n      const zm = clamp(zi - 1, 0, zSize - 1)\r\n      const zp = clamp(zi + 1, 0, zSize - 1)\r\n\r\n      for (let yi = 0; yi < ySize; ++yi) {\r\n        const ym = clamp(yi - 1, 0, ySize - 1)\r\n        const yp = clamp(yi + 1, 0, ySize - 1)\r\n\r\n        for (let xi = 0; xi < xSize; ++xi) {\r\n          const xm = clamp(xi - 1, 0, xSize - 1)\r\n          const xp = clamp(xi + 1, 0, xSize - 1)\r\n\r\n          // Calculate the volume gradient at each grid cell.\r\n          // Gradients are now stored unnormalized, since we need them in pure\r\n          // form in order to draw field lines etc.  Shading code will now have\r\n          // to do renormalization for itself on-the-fly.\r\n\r\n          // XXX this gradient is only correct for orthogonal grids, since\r\n          // we're using the array index offsets rather to calculate the gradient\r\n          // rather than voxel coordinate offsets.  This will have to be\r\n          // re-worked for non-orthogonal datasets.\r\n\r\n          gradient.setValue(\r\n            xi,\r\n            yi,\r\n            zi,\r\n            (_voxelValue(xp, yi, zi) - _voxelValue(xm, yi, zi)) * vs.x,\r\n            (_voxelValue(xi, yp, zi) - _voxelValue(xi, ym, zi)) * vs.y,\r\n            (_voxelValue(xi, yi, zp) - _voxelValue(xi, yi, zm)) * vs.z\r\n          )\r\n        }\r\n      }\r\n    }\r\n\r\n    return gradient\r\n  }\r\n\r\n  normalize() {\r\n    const data = this._data\r\n\r\n    // get min/max\r\n    let min = data[0]\r\n    let max = data[0]\r\n    for (let i = 1; i < data.length; ++i) {\r\n      min = Math.min(min, data[i])\r\n      max = Math.max(max, data[i])\r\n    }\r\n\r\n    const d = 1.0 / (max - min)\r\n    if (d === 0) {\r\n      return\r\n    }\r\n\r\n    // normalize\r\n    for (let i = 0; i < data.length; ++i) {\r\n      data[i] = d * (data[i] - min)\r\n    }\r\n  }\r\n\r\n  getTiledTextureStride() {\r\n    return [this._dimX + 2, this._dimY + 2]\r\n  }\r\n\r\n  buildTiledTexture() {\r\n    let tilesX = Math.ceil(Math.sqrt((this._dimZ * this._dimY) / this._dimX))\r\n\r\n    let width = tilesX * (this._dimX + 2) - 1\r\n    width = pow2ceil(width)\r\n    tilesX = Math.floor(width / (this._dimX + 2))\r\n\r\n    const tilesY = Math.ceil(this._dimZ / tilesX)\r\n    let height = tilesY * (this._dimY + 2) - 1\r\n    height = pow2ceil(height)\r\n\r\n    const data = new Uint8Array(width * height)\r\n\r\n    let src\r\n    let dst\r\n    for (let tileRow = 0; tileRow < tilesY; ++tileRow) {\r\n      // process each pixel row of this tile row\r\n      for (let row = 0; row < this._dimY; ++row) {\r\n        src = tileRow * tilesX * this._planeElements + row * this._rowElements\r\n        dst = width * (tileRow * (this._dimY + 2) + row)\r\n        // copy a series of rows through several XY planes\r\n        for (let t = 0; t < tilesX; ++t) {\r\n          // copy one row of one XY plane\r\n          for (let x = 0; x < this._dimX; ++x) {\r\n            data[dst++] = 255.0 * this._data[src++]\r\n          }\r\n\r\n          // repeat last pixel of previous tile\r\n          data[dst++] = 255.0 * this._data[src - 1]\r\n\r\n          if (t < tilesX - 1) {\r\n            // skip to the same row of next XY plane\r\n            src += this._planeElements - this._rowElements\r\n            // repeat first pixel of next tile\r\n            data[dst++] = 255.0 * this._data[src]\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // fill pixels between tile rows with copy of edge pixels\r\n    for (let tileRow = 0; tileRow < tilesY; ++tileRow) {\r\n      // copy last pixel row of this tile row to the following pixel row of the texture\r\n      src = width * (tileRow * (this._dimY + 2) + this._dimY - 1)\r\n      dst = src + width\r\n      for (let x = 0; x < width; ++x) {\r\n        data[dst++] = data[src++]\r\n      }\r\n      if (tileRow < tilesY - 1) {\r\n        // copy first pixel row of next tile row to the preceding pixel row of the texture\r\n        src = width * (tileRow + 1) * (this._dimY + 2)\r\n        dst = src - width\r\n        for (let x = 0; x < width; ++x) {\r\n          data[dst++] = data[src++]\r\n        }\r\n      }\r\n    }\r\n\r\n    const texture = new DataTexture(\r\n      data,\r\n      width,\r\n      height,\r\n      LuminanceFormat,\r\n      UnsignedByteType,\r\n      UVMapping,\r\n      ClampToEdgeWrapping,\r\n      ClampToEdgeWrapping,\r\n      LinearFilter,\r\n      LinearFilter\r\n    )\r\n    texture.needsUpdate = true\r\n    return texture\r\n  }\r\n\r\n  /* ********************************************************************************\r\n   *\r\n   * Methods that provide direct access to internal array (for better performance)\r\n   *\r\n   ******************************************************************************** */\r\n\r\n  getData() {\r\n    return this._data\r\n  }\r\n\r\n  getDirectIdx(x, y, z) {\r\n    return x * this._dimVec + y * this._rowElements + z * this._planeElements\r\n  }\r\n\r\n  getStrideX() {\r\n    return this._dimVec\r\n  }\r\n\r\n  getStrideY() {\r\n    return this._rowElements\r\n  }\r\n\r\n  getStrideZ() {\r\n    return this._planeElements\r\n  }\r\n}\r\n\r\nVolume.prototype.id = 'Volume'\r\n\r\nexport default Volume\r\n",
		"/**\r\n * Residue Molecule.\r\n *\r\n * @param {Complex} complex - Molecular complex this Molecule belongs to.\r\n * @param {String} name - Molecule's name.\r\n * @param {Integer} index - Molecule's index in file.\r\n *\r\n * @exports Molecule\r\n * @constructor\r\n */\r\nclass Molecule {\r\n  constructor(complex, name, index) {\r\n    this.complex = complex\r\n    this.name = name || ''\r\n    this.residues = []\r\n    this.mask = 1 | 0\r\n    this.index = index || -1 // start with 1\r\n  }\r\n\r\n  forEachResidue(process) {\r\n    const { residues } = this\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      process(residues[i])\r\n    }\r\n  }\r\n\r\n  collectMask() {\r\n    let mask = 0xffffffff\r\n    const { residues } = this\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      mask &= residues[i]._mask\r\n    }\r\n    this.mask = mask\r\n  }\r\n}\r\n\r\nexport default Molecule\r\n",
		"import Atom from './chem/Atom'\r\nimport Element from './chem/Element'\r\nimport Bond from './chem/Bond'\r\nimport Residue from './chem/Residue'\r\nimport ResidueType from './chem/ResidueType'\r\nimport Chain from './chem/Chain'\r\nimport Helix from './chem/Helix'\r\nimport Strand from './chem/Strand'\r\nimport Sheet from './chem/Sheet'\r\nimport SGroup from './chem/SGroup'\r\nimport Assembly from './chem/Assembly'\r\nimport Complex from './chem/Complex'\r\nimport Volume from './chem/Volume'\r\nimport VoxelWorld from './chem/VoxelWorld'\r\nimport selectors from './chem/selectors'\r\nimport Molecule from './chem/Molecule'\r\n\r\nexport default {\r\n  Atom,\r\n  Element,\r\n  Bond,\r\n  Residue,\r\n  ResidueType,\r\n  Chain,\r\n  Helix,\r\n  Strand,\r\n  Sheet,\r\n  SGroup,\r\n  Assembly,\r\n  Complex,\r\n  Volume,\r\n  VoxelWorld,\r\n  selectors,\r\n  Molecule\r\n}\r\n",
		"/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nimport { Object3D } from 'three'\r\n\r\nclass CSS2DObject extends Object3D {\r\n  constructor(element) {\r\n    super()\r\n    const self = this\r\n    this._element = element\r\n    this._element.style.position = 'absolute'\r\n    this.addEventListener('removed', () => {\r\n      if (self._element.parentNode !== null) {\r\n        self._element.parentNode.removeChild(self._element)\r\n      }\r\n    })\r\n  }\r\n\r\n  getElement() {\r\n    return this._element\r\n  }\r\n\r\n  /**\r\n   * Sets label transparency.\r\n   *\r\n   * @param {number} transp    - in [0; 1] 1 means fully transparent\r\n   */\r\n  setTransparency(transp) {\r\n    const el = this.getElement()\r\n    if (el === null) {\r\n      return\r\n    }\r\n    if (transp === 1.0) {\r\n      el.style.display = 'none'\r\n      return\r\n    }\r\n    el.style.display = 'inline'\r\n    const op = 1.0 - transp\r\n    const top = op.toString()\r\n    const op100 = op * 100\r\n    el.style.opacity = top\r\n    el.style.filter = `alpha(opacity=${op100})` // IE fallback\r\n  }\r\n\r\n  clone() {\r\n    const obj = new CSS2DObject(this._element)\r\n    obj.copy(this)\r\n    return obj\r\n  }\r\n}\r\n\r\nexport default CSS2DObject\r\n",
		"import { Group } from 'three'\r\n\r\nclass RCGroup extends Group {\r\n  raycast(raycaster, intersects) {\r\n    if (!this.visible) {\r\n      return\r\n    }\r\n\r\n    const { children } = this\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      children[i].raycast(raycaster, intersects)\r\n    }\r\n  }\r\n\r\n  enableSubset(mask, innerOnly) {\r\n    const { children } = this\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].enableSubset) {\r\n        children[i].enableSubset(mask, innerOnly)\r\n      }\r\n    }\r\n  }\r\n\r\n  disableSubset(mask, innerOnly) {\r\n    const { children } = this\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].disableSubset) {\r\n        children[i].disableSubset(mask, innerOnly)\r\n      }\r\n    }\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.children.length === 0\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    const { children } = this\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].updateToFrame) {\r\n        children[i].updateToFrame(frameData)\r\n      }\r\n    }\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = []\r\n    const { children } = this\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        Array.prototype.push.apply(\r\n          totalSubset,\r\n          children[i].getSubset(mask, innerOnly)\r\n        )\r\n      }\r\n    }\r\n    return totalSubset\r\n  }\r\n}\r\n\r\nexport default RCGroup\r\n",
		"/* eslint-disable no-magic-numbers */\r\n\r\nimport logger from '../utils/logger'\r\nimport CSS2DObject from './CSS2DObject'\r\nimport RCGroup from './RCGroup'\r\nimport vertexScreenQuadShader from './shaders/ScreenQuad.vert'\r\nimport fragmentScreenQuadFromTex from './shaders/ScreenQuadFromTex.frag'\r\nimport fragmentScreenQuadFromTexWithDistortion from './shaders/ScreenQuadFromTexWithDistortion.frag'\r\nimport {\r\n  BufferAttribute,\r\n  InstancedBufferGeometry,\r\n  LessEqualDepth,\r\n  Line,\r\n  LineSegments,\r\n  MathUtils,\r\n  Matrix4,\r\n  Mesh,\r\n  MeshBasicMaterial,\r\n  Object3D,\r\n  OrthographicCamera,\r\n  PerspectiveCamera,\r\n  PlaneBufferGeometry,\r\n  RawShaderMaterial,\r\n  Raycaster,\r\n  Scene,\r\n  StereoCamera,\r\n  Vector3,\r\n  WebGLRenderer,\r\n  Color\r\n} from 'three'\r\n\r\nconst LAYERS = {\r\n  DEFAULT: 0,\r\n  VOLUME: 1,\r\n  TRANSPARENT: 2,\r\n  PREPASS_TRANSPARENT: 3,\r\n  VOLUME_BFPLANE: 4,\r\n  COLOR_FROM_POSITION: 5,\r\n  SHADOWMAP: 6\r\n}\r\n\r\nconst SELECTION_LAYERS = [\r\n  // These layers, that are used in the selection by ray casting\r\n  LAYERS.DEFAULT,\r\n  LAYERS.TRANSPARENT\r\n]\r\n\r\nObject3D.prototype.resetTransform = function () {\r\n  this.position.set(0, 0, 0)\r\n  this.quaternion.set(0, 0, 0, 1)\r\n  this.scale.set(1, 1, 1)\r\n}\r\n\r\n// update world matrix of this object and all its ancestors\r\nObject3D.prototype.updateMatrixWorldRecursive = function () {\r\n  if (this.parent != null) {\r\n    this.parent.updateMatrixWorldRecursive()\r\n  }\r\n  this.updateMatrixWorld()\r\n}\r\n// add object to parent, saving objects' world transform\r\nObject3D.prototype.addSavingWorldTransform = (function () {\r\n  const _worldMatrixInverse = new Matrix4()\r\n\r\n  return function (object) {\r\n    if (object instanceof Object3D) {\r\n      _worldMatrixInverse.copy(this.matrixWorld).invert()\r\n      _worldMatrixInverse.multiply(object.matrixWorld)\r\n      object.matrix.copy(_worldMatrixInverse)\r\n      object.matrix.decompose(object.position, object.quaternion, object.scale)\r\n      this.add(object)\r\n    }\r\n  }\r\n})()\r\n\r\n// render a tiny transparent quad in the center of the screen\r\nWebGLRenderer.prototype.renderDummyQuad = (function () {\r\n  const _material = new MeshBasicMaterial({\r\n    transparent: true,\r\n    opacity: 0.0,\r\n    depthWrite: false\r\n  })\r\n\r\n  const _scene = new Scene()\r\n  const _quad = new Mesh(new PlaneBufferGeometry(0.01, 0.01), _material)\r\n  _scene.add(_quad)\r\n\r\n  const _camera = new OrthographicCamera(-0.5, 0.5, 0.5, -0.5, -10000, 10000)\r\n  _camera.position.z = 100\r\n\r\n  return function () {\r\n    this.render(_scene, _camera)\r\n  }\r\n})()\r\n\r\nWebGLRenderer.prototype.renderScreenQuad = (function () {\r\n  const _scene = new Scene()\r\n  const _quad = new Mesh(new PlaneBufferGeometry(1.0, 1.0))\r\n  _scene.add(_quad)\r\n\r\n  const _camera = new OrthographicCamera(-0.5, 0.5, 0.5, -0.5, -10000, 10000)\r\n  _camera.position.z = 100\r\n\r\n  return function (material) {\r\n    _quad.material = material\r\n    this.render(_scene, _camera)\r\n  }\r\n})()\r\n\r\nMatrix4.prototype.isIdentity = (function () {\r\n  const identity = new Matrix4()\r\n  return function () {\r\n    return identity.equals(this)\r\n  }\r\n})()\r\n\r\nMatrix4.prototype.applyToPointsArray = function (array, stride, w) {\r\n  if (!array || !stride || stride < 3) {\r\n    return array\r\n  }\r\n  w = w || 0 // use point as normal by default\r\n  const e = this.elements\r\n  for (let i = 0; i < array.length; i += stride) {\r\n    const x = array[i]\r\n    const y = array[i + 1]\r\n    const z = array[i + 2]\r\n\r\n    const persp = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15])\r\n\r\n    array[i] = (e[0] * x + e[4] * y + e[8] * z + e[12] * w) * persp\r\n    array[i + 1] = (e[1] * x + e[5] * y + e[9] * z + e[13] * w) * persp\r\n    array[i + 2] = (e[2] * x + e[6] * y + e[10] * z + e[14] * w) * persp\r\n  }\r\n  return array\r\n}\r\n\r\nclass ScreenQuadMaterial extends RawShaderMaterial {\r\n  constructor(params) {\r\n    if (params.uniforms === undefined) {\r\n      params.uniforms = {}\r\n    }\r\n    params.uniforms.srcTex = { type: 't', value: null }\r\n    params.vertexShader = vertexScreenQuadShader\r\n    params.transparent = false\r\n    params.depthTest = false\r\n    params.depthWrite = false\r\n    super(params)\r\n  }\r\n}\r\n\r\nWebGLRenderer.prototype.renderScreenQuadFromTex = (function () {\r\n  const _material = new ScreenQuadMaterial({\r\n    uniforms: { opacity: { type: 'f', value: 1.0 } },\r\n    fragmentShader: fragmentScreenQuadFromTex,\r\n    transparent: true\r\n  })\r\n\r\n  return function (srcTex, opacity) {\r\n    _material.uniforms.srcTex.value = srcTex\r\n    _material.transparent = opacity < 1.0\r\n    _material.uniforms.opacity.value = opacity\r\n    this.renderScreenQuad(_material)\r\n  }\r\n})()\r\n\r\nWebGLRenderer.prototype.renderScreenQuadFromTexWithDistortion = (function () {\r\n  const _material = new ScreenQuadMaterial({\r\n    uniforms: { coef: { type: 'f', value: 1.0 } },\r\n    fragmentShader: fragmentScreenQuadFromTexWithDistortion\r\n  })\r\n\r\n  return function (srcTex, coef) {\r\n    _material.uniforms.srcTex.value = srcTex\r\n    _material.uniforms.coef.value = coef\r\n    this.renderScreenQuad(_material)\r\n  }\r\n})()\r\n\r\n/**\r\n * @param {number} angle - Field of view in degrees.\r\n */\r\nPerspectiveCamera.prototype.setMinimalFov = function (angle) {\r\n  if (this.aspect >= 1.0) {\r\n    this.fov = angle\r\n  } else {\r\n    this.fov = MathUtils.radToDeg(\r\n      2 * Math.atan(Math.tan(MathUtils.degToRad(angle) * 0.5) / this.aspect)\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * @param {PerspectiveCamera} camera - Base camera for this stereo camera.\r\n * @param {number} angle - Field of view in degrees.\r\n */\r\nStereoCamera.prototype.updateHalfSized = function (camera, angle) {\r\n  const originalAspect = camera.aspect\r\n  const originalFov = camera.fov\r\n\r\n  camera.aspect = originalAspect / 2.0\r\n  camera.setMinimalFov(angle)\r\n  camera.updateProjectionMatrix()\r\n\r\n  this.update(camera)\r\n\r\n  camera.aspect = originalAspect\r\n  camera.fov = originalFov\r\n  camera.updateProjectionMatrix()\r\n}\r\n\r\n/**\r\n * @param {number} radius - Radius of bounding sphere in angstroms to fit on screen.\r\n * @param {number} angle - Field of view in degrees.\r\n */\r\nPerspectiveCamera.prototype.setDistanceToFit = function (radius, angle) {\r\n  this.position.z = radius / Math.sin(0.5 * MathUtils.degToRad(angle))\r\n}\r\n\r\n/**\r\n * @param {RCGroup} gfxObj - All objects on scene.\r\n * @param {PerspectiveCamera} camera - Camera used for rendering.\r\n * @param {number} clipPlane - Distance to clip plane.\r\n * @param {number} fogFarPlane - Distance to fog far plane.\r\n */\r\nRaycaster.prototype.intersectVisibleObject = function (\r\n  gfxObj,\r\n  camera,\r\n  clipPlane,\r\n  fogFarPlane\r\n) {\r\n  const intersects = this.intersectObject(gfxObj, false)\r\n  if (intersects.length === 0) {\r\n    return null\r\n  }\r\n\r\n  // find point closest to camera that doesn't get clipped by camera near plane or clipPlane (if it exists)\r\n  const nearPlane = Math.min(camera.near, clipPlane)\r\n  let i\r\n  let p = intersects[0]\r\n  const v = new Vector3()\r\n  for (i = 0; i < intersects.length; ++i) {\r\n    p = intersects[i]\r\n    v.copy(p.point)\r\n    v.applyMatrix4(camera.matrixWorldInverse)\r\n    if (v.z <= -nearPlane) {\r\n      break\r\n    }\r\n  }\r\n  if (i === intersects.length) {\r\n    return null\r\n  }\r\n\r\n  // check that selected intersection point is not clipped by camera far plane or occluded by fog (if it exists)\r\n  const farPlane = Math.min(camera.far, fogFarPlane)\r\n  v.copy(p.point)\r\n  v.applyMatrix4(camera.matrixWorldInverse)\r\n  if (v.z <= -farPlane) {\r\n    return null\r\n  }\r\n  return p\r\n}\r\n\r\nMatrix4.prototype.extractScale = (function () {\r\n  const _v = new Vector3()\r\n\r\n  return function (scale) {\r\n    if (scale === undefined) {\r\n      logger.debug(\r\n        'extractScale(): new is too expensive operation to do it on-the-fly'\r\n      )\r\n      scale = _v.clone()\r\n    }\r\n\r\n    const te = this.elements\r\n    scale.x = _v.set(te[0], te[1], te[2]).length()\r\n    scale.y = _v.set(te[4], te[5], te[6]).length()\r\n    scale.z = _v.set(te[8], te[9], te[10]).length()\r\n\r\n    // if determine is negative, we need to invert one scale\r\n    const det = this.determinant()\r\n    if (det < 0) {\r\n      scale.x = -scale.x\r\n    }\r\n    return scale\r\n  }\r\n})()\r\n\r\nfunction _calcCylinderMatrix(posBegin, posEnd, radius) {\r\n  const posCenter = posBegin.clone().lerp(posEnd, 0.5)\r\n  const matScale = new Matrix4()\r\n  matScale.makeScale(radius, posBegin.distanceTo(posEnd), radius)\r\n\r\n  const matRotHalf = new Matrix4()\r\n  matRotHalf.makeRotationX(Math.PI / 2)\r\n\r\n  const matRotLook = new Matrix4()\r\n  const vUp = new Vector3(0, 1, 0)\r\n  matRotLook.lookAt(posCenter, posEnd, vUp)\r\n\r\n  matRotLook.multiply(matRotHalf)\r\n  matRotLook.multiply(matScale)\r\n  matRotLook.setPosition(posCenter)\r\n  return matRotLook\r\n}\r\n\r\nfunction _calcChunkMatrix(eye, target, up, rad) {\r\n  const matScale = new Matrix4()\r\n  matScale.makeScale(rad.x, rad.y, 0)\r\n\r\n  const matRotLook = new Matrix4()\r\n  matRotLook.lookAt(eye, target, up)\r\n  matRotLook.multiply(matScale)\r\n  matRotLook.setPosition(eye)\r\n\r\n  return matRotLook\r\n}\r\n\r\nfunction _groupHasGeometryToRender(group) {\r\n  let hasGeoms = false\r\n  group.traverse((node) => {\r\n    if (node.hasOwnProperty('geometry') || node instanceof CSS2DObject) {\r\n      hasGeoms = true\r\n    }\r\n  })\r\n  return hasGeoms\r\n}\r\n\r\nfunction _buildDistorionMesh(widthSegments, heightSegements, coef) {\r\n  // solve equation r_u = r_d * (1 + k * r_d^2)\r\n  // for r_d using iterations\r\n  // takes: r_u^2\r\n  // returns: r_d / r_u  factor that can be used to distort point coords\r\n  function calcInverseBarrel(r2) {\r\n    const epsilon = 1e-5\r\n    let prevR2 = 0.0\r\n    let curR2 = r2\r\n    let dr = 1.0\r\n    while (Math.abs(curR2 - prevR2) > epsilon) {\r\n      dr = 1.0 + coef * curR2\r\n      prevR2 = curR2\r\n      curR2 = r2 / (dr * dr)\r\n    }\r\n\r\n    return 1.0 / dr\r\n  }\r\n\r\n  const geo = new PlaneBufferGeometry(2.0, 2.0, widthSegments, heightSegements)\r\n\r\n  const pos = geo.getAttribute('position')\r\n  for (let i = 0; i < pos.count; ++i) {\r\n    const x = pos.array[3 * i]\r\n    const y = pos.array[3 * i + 1]\r\n    const c = calcInverseBarrel(x * x + y * y)\r\n    pos.setXY(i, c * x, c * y)\r\n  }\r\n\r\n  return geo\r\n}\r\n\r\nBufferAttribute.prototype.copyAtList = function (attribute, indexList) {\r\n  console.assert(\r\n    this.itemSize === attribute.itemSize,\r\n    'DEBUG: BufferAttribute.copyAtList buffers have different item size.'\r\n  )\r\n  const { itemSize } = this\r\n  for (let i = 0, n = indexList.length; i < n; ++i) {\r\n    for (let j = 0; j < itemSize; ++j) {\r\n      this.array[i * itemSize + j] =\r\n        attribute.array[indexList[i] * itemSize + j]\r\n    }\r\n  }\r\n  return this\r\n}\r\n\r\nfunction fillArray(array, value, startIndex, endIndex) {\r\n  startIndex = typeof startIndex !== 'undefined' ? startIndex : 0\r\n  endIndex = typeof endIndex !== 'undefined' ? endIndex : array.length\r\n  for (let i = startIndex; i < endIndex; ++i) {\r\n    array[i] = value\r\n  }\r\n}\r\n\r\n/** @param {Object3D} object - Parent object. */\r\nfunction removeChildren(object) {\r\n  const { children } = object\r\n  for (let i = 0, n = children.length; i < n; ++i) {\r\n    const child = children[i]\r\n    child.parent = null\r\n    child.dispatchEvent({ type: 'removed' })\r\n  }\r\n  object.children = []\r\n}\r\n\r\nfunction clearTree(object) {\r\n  object.traverse((obj) => {\r\n    if (\r\n      obj instanceof Mesh ||\r\n      obj instanceof LineSegments ||\r\n      obj instanceof Line\r\n    ) {\r\n      obj.geometry.dispose()\r\n    }\r\n  })\r\n  removeChildren(object)\r\n}\r\n\r\nfunction destroyObject(object) {\r\n  clearTree(object)\r\n  if (object.parent) {\r\n    object.parent.remove(object)\r\n  } else {\r\n    object.dispatchEvent({ type: 'removed' })\r\n  }\r\n}\r\n\r\nfunction belongToSelectLayers(object) {\r\n  for (let i = 0; i < SELECTION_LAYERS.length; i++) {\r\n    if (((object.layers.mask >> SELECTION_LAYERS[i]) & 1) === 1) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction processObjRenderOrder(root, idMaterial) {\r\n  // set renderOrder to 0 for Backdrop and to 1 in other cases to render Backdrop earlier all other materials\r\n  const renderOrder = +(idMaterial !== 'BA')\r\n  root.traverse((object) => {\r\n    if (object.isGroup) {\r\n      object.renderOrder = renderOrder\r\n    }\r\n  })\r\n}\r\n\r\nfunction applySelectionMaterial(geo) {\r\n  geo.traverse((node) => {\r\n    if ('material' in node) {\r\n      node.material = node.material.clone(true)\r\n      // using z-offset to magically fix selection rendering artifact (on z-sprites)\r\n      node.material.setValues({\r\n        depthFunc: LessEqualDepth,\r\n        overrideColor: true,\r\n        fog: false,\r\n        lights: false,\r\n        shadowmap: false\r\n      })\r\n      node.material.setUberOptions({\r\n        fixedColor: new Color(0xffff00),\r\n        zOffset: -1e-6\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nfunction getMiddlePoint(point1, point2, optionalTarget) {\r\n  const result = optionalTarget || new Vector3()\r\n\r\n  result.set(0, 0, 0)\r\n  result.addScaledVector(point1, 0.5)\r\n  result.addScaledVector(point2, 0.5)\r\n\r\n  return result\r\n}\r\n\r\n// Monkey-patch for \"InstancedBufferGeometry.instanceCount becomes undefined after copy()\"\r\n// https://github.com/mrdoob/three.js/issues/22151\r\nconst _oldInstancedBufferGeometryCopy = InstancedBufferGeometry.prototype.copy\r\n\r\nInstancedBufferGeometry.prototype.copy = function (source) {\r\n  _oldInstancedBufferGeometryCopy.call(this, source)\r\n  if (this.instanceCount === undefined) {\r\n    this.instanceCount = Infinity\r\n  }\r\n}\r\n\r\nexport default {\r\n  calcCylinderMatrix: _calcCylinderMatrix,\r\n  calcChunkMatrix: _calcChunkMatrix,\r\n  groupHasGeometryToRender: _groupHasGeometryToRender,\r\n  buildDistorionMesh: _buildDistorionMesh,\r\n  RCGroup,\r\n  fillArray,\r\n  clearTree,\r\n  destroyObject,\r\n  belongToSelectLayers,\r\n  processObjRenderOrder,\r\n  applySelectionMaterial,\r\n  getMiddlePoint,\r\n  LAYERS\r\n}\r\n",
		"import gfxutils from './gfx/gfxutils'\r\nimport { Box3, Sphere, Vector3 } from 'three'\r\n\r\nconst _defaultBoundaries = {\r\n  boundingBox: new Box3(new Vector3(-1, -1, -1), new Vector3(1, 1, 1)),\r\n  boundingSphere: new Sphere(new Vector3(0, 0, 0), 1)\r\n}\r\n\r\nclass Visual extends gfxutils.RCGroup {\r\n  constructor(name, dataSource) {\r\n    super(name, dataSource)\r\n    this.name = name\r\n    this._dataSource = dataSource\r\n  }\r\n\r\n  release() {\r\n    if (this.parent) {\r\n      this.parent.remove(this)\r\n    }\r\n  }\r\n\r\n  getDataSource() {\r\n    return this._dataSource\r\n  }\r\n\r\n  getBoundaries() {\r\n    return _defaultBoundaries\r\n  }\r\n}\r\n\r\nexport default Visual\r\n",
		"import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}",
		"import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}",
		"export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}",
		"export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}",
		"function _ensureArray(x) {\r\n  if (x === null || x === undefined || Array.isArray(x)) {\r\n    return x\r\n  }\r\n  return [x]\r\n}\r\n\r\n/** An indexed list of objects or classes. */\r\nclass EntityList {\r\n  /**\r\n   * Create a list of objects.\r\n   * The objects can be indexed by one or more properties for the later retrieval.\r\n   *\r\n   * @param {!Array<Object>=} entities A list of objects to automatically register at creation time.\r\n   * @param {!Array<string>=} indices A list of property names to use for case-insensitive indexing.\r\n   *   By default, a single `.id` property is used.\r\n   * @see EntityList#register\r\n   */\r\n  constructor(entities = [], indices = ['id']) {\r\n    this._list = []\r\n    this._dict = {}\r\n    this._indices = [...indices]\r\n    this._indices.forEach((index) => {\r\n      this._dict[index] = {}\r\n    })\r\n\r\n    entities.forEach((entity) => this.register(entity))\r\n  }\r\n\r\n  /**\r\n   * Add a value to the end of a list.\r\n   * The list will contain only one copy of the value.\r\n   *\r\n   * @param {!Array} list An array.\r\n   * @param {*} value A value to add.\r\n   * @see EntityList.unregisterFromList\r\n   * @see EntityList.registerInDict\r\n   */\r\n  static registerInList(list, value) {\r\n    if (!list.includes(value)) {\r\n      list.push(value)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a value from a list if it is there.\r\n   *\r\n   * @param {!Array} list An array.\r\n   * @param {*} value A value to remove.\r\n   * @see EntityList.registerInList\r\n   */\r\n  static unregisterFromList(list, value) {\r\n    const pos = list.indexOf(value)\r\n    if (pos !== -1) {\r\n      list.splice(pos, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a value to a dictionary.\r\n   * The value may be stored under multiple different keys (aliases).\r\n   * There might be multiples values stored under the same key.\r\n   *\r\n   * @param {!Object<string,*>} dict A dictionary.\r\n   * @param {!Array<string>} keys An array of keys.\r\n   * @param {*} value A value to add.\r\n   * @see EntityList.unregisterFromDict\r\n   * @see EntityList.registerInList\r\n   */\r\n  static registerInDict(dict, keys, value) {\r\n    keys.forEach((key) => {\r\n      key = key.toLowerCase()\r\n      const list = (dict[key] = dict[key] || [])\r\n      if (!list.includes(value)) {\r\n        list.push(value)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Remove a value from a dictionary.\r\n   * The value may be stored under multiple different keys (aliases).\r\n   * There might be multiples values stored under the same key.\r\n   *\r\n   * @param {!Object<string,*>} dict A dictionary.\r\n   * @param {!Array<string>} keys An array of keys.\r\n   * @param {*} value A value to add.\r\n   * @see EntityList.registerInDict\r\n   */\r\n  static unregisterFromDict(dict, keys, value) {\r\n    keys.forEach((key) => {\r\n      key = key.toLowerCase()\r\n      const list = dict[key]\r\n      if (list) {\r\n        const pos = list.indexOf(value)\r\n        if (pos !== -1) {\r\n          list.splice(pos, 1)\r\n        }\r\n        if (list.length === 0) {\r\n          delete dict[key]\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Add an entity to this list.\r\n   *\r\n   * @param {!Object} entity An object or a class to register. The object must include all\r\n   *   properties specified as indices on construction.\r\n   * @see EntityList#unregister\r\n   */\r\n  register(entity) {\r\n    EntityList.registerInList(this._list, entity)\r\n    this._indices.forEach((index) => {\r\n      EntityList.registerInDict(\r\n        this._dict[index],\r\n        _ensureArray(entity[index]),\r\n        entity\r\n      )\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Remove an entity from this list.\r\n   *\r\n   * @param {!Object} entity An object or a class to unregister. The object may be\r\n   *   missing from the list but it must include all properties specified as indices\r\n   *   on construction.\r\n   * @see EntityList#register\r\n   */\r\n  unregister(entity) {\r\n    EntityList.unregisterFromList(this._list, entity)\r\n    this._indices.forEach((index) => {\r\n      EntityList.unregisterFromDict(\r\n        this._dict[index],\r\n        _ensureArray(entity[index]),\r\n        entity\r\n      )\r\n    })\r\n  }\r\n\r\n  /**\r\n   * An ordered list of all registered entities.\r\n   * It is a read-only copy, use {@link EntityList#register} and {@link EntityList#unregister}\r\n   * to modify it.\r\n   *\r\n   * @type {!Array<Object>}\r\n   */\r\n  get all() {\r\n    return [...this._list]\r\n  }\r\n\r\n  /**\r\n   * The first registered entity.\r\n   * Use it if you do not care which entity you are referring to.\r\n   *\r\n   * @type {Object=}\r\n   */\r\n  get first() {\r\n    return this._list[0]\r\n  }\r\n\r\n  /**\r\n   * Retrieve a list of keys for the index.\r\n   *\r\n   * @param {string=} index One of the indices specified during the list construction. If omitted,\r\n   *   the first of the indices is used.\r\n   * @returns {!Array<string>} An unordered list of keys in the index, i.e. particular property\r\n   *   values for all registered entities.\r\n   */\r\n  keys(index) {\r\n    return Object.keys(this._dict[index || this._indices[0]])\r\n  }\r\n\r\n  /**\r\n   * Retrieve an entity by its key.\r\n   *\r\n   * @param {string} key A case-insensitive property value to look-up.\r\n   * @param {string=} index One of the indices specified during the list construction. If omitted,\r\n   *   the first of the indices is used.\r\n   * @returns {Object=} An object registered in the index under the key. If there are multiple\r\n   *   objects under the same key, the first one is returned.\r\n   */\r\n  get(key, index) {\r\n    const dict = this._dict[index || this._indices[0]]\r\n    if (dict) {\r\n      const values = dict[key && key.toLowerCase()]\r\n      return values && values.length > 0 ? values[0] : undefined\r\n    }\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport default EntityList\r\n",
		"import settings from '../settings'\r\nimport logger from './logger'\r\n\r\nfunction makeContextDependent(prototype) {\r\n  Object.defineProperties(prototype, {\r\n    logger: {\r\n      get() {\r\n        return this.context && this.context.logger\r\n          ? this.context.logger\r\n          : logger\r\n      }\r\n    },\r\n    settings: {\r\n      get() {\r\n        return this.context && this.context.settings\r\n          ? this.context.settings\r\n          : settings\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport default makeContextDependent\r\n",
		"import { Box3, Sphere, Vector3 } from 'three'\r\n\r\nclass CollisionSphere {\r\n  constructor(position, radius) {\r\n    this._position = position\r\n    this._radius = radius\r\n  }\r\n\r\n  static _sphere = new Sphere()\r\n\r\n  raycast(raycaster) {\r\n    const sphere = CollisionSphere._sphere\r\n    sphere.set(this._position, this._radius)\r\n\r\n    const p = new Vector3()\r\n    if (raycaster.ray.intersectSphere(sphere, p)) {\r\n      return {\r\n        distance: raycaster.ray.origin.distanceTo(p),\r\n        point: p\r\n      }\r\n    }\r\n    return null\r\n  }\r\n}\r\n\r\nconst SphereCollisionGeo = (base) =>\r\n  class extends base {\r\n    constructor(count, ...args) {\r\n      super(...args)\r\n      this._objects = new Array(count)\r\n      this.boundingSphere = null\r\n      this.boundingBox = null\r\n    }\r\n\r\n    setSphere(idx, position, radius) {\r\n      this._objects[idx] = new CollisionSphere(position, radius)\r\n    }\r\n\r\n    raycast(raycaster, intersects) {\r\n      // TODO raycast with bounding sphere? How to deal with updates?\r\n      for (let i = 0, n = this._objects.length; i < n; ++i) {\r\n        const inters = this._objects[i].raycast(raycaster)\r\n        if (inters) {\r\n          inters.chunkIdx = i\r\n          intersects.push(inters)\r\n        }\r\n      }\r\n    }\r\n\r\n    computeBoundingBox() {\r\n      const objects = this._objects\r\n      let { boundingBox } = this\r\n      if (boundingBox === null) {\r\n        this.boundingBox = boundingBox = new Box3()\r\n      }\r\n      boundingBox.makeEmpty()\r\n      for (let i = 0, n = objects.length; i < n; ++i) {\r\n        boundingBox.expandByPoint(objects[i]._position)\r\n      }\r\n    }\r\n\r\n    computeBoundingSphere() {\r\n      this.computeBoundingBox()\r\n      const objects = this._objects\r\n      const { boundingBox } = this\r\n      // Build bounding sphere\r\n      let radiusSquared = 0.0\r\n      const center = new Vector3()\r\n      boundingBox.getCenter(center)\r\n      for (let i = 0, n = objects.length; i < n; ++i) {\r\n        const pos = objects[i]._position\r\n        const lengthSquared = center.distanceToSquared(pos)\r\n        if (radiusSquared < lengthSquared) {\r\n          radiusSquared = lengthSquared\r\n        }\r\n      }\r\n      if (this.boundingSphere === null) {\r\n        this.boundingSphere = new Sphere()\r\n      }\r\n      this.boundingSphere.set(center, Math.sqrt(radiusSquared))\r\n    }\r\n  }\r\nexport default SphereCollisionGeo\r\n",
		"import {\r\n  Color,\r\n  InstancedBufferAttribute,\r\n  InstancedBufferGeometry,\r\n  PlaneBufferGeometry,\r\n  SphereBufferGeometry\r\n} from 'three'\r\nimport utils from '../../utils'\r\nimport SphereCollisionGeo from './SphereCollisionGeo'\r\nimport { fill } from 'lodash'\r\n\r\nconst tmpColor = new Color()\r\n\r\nconst OFFSET_SIZE = 4\r\nconst COLOR_SIZE = 3\r\nconst { copySubArrays } = utils\r\n\r\nfunction setArrayXYZ(arr, idx, x, y, z) {\r\n  arr[idx] = x\r\n  arr[idx + 1] = y\r\n  arr[idx + 2] = z\r\n}\r\n\r\nfunction setArrayXYZW(arr, idx, x, y, z, w) {\r\n  arr[idx] = x\r\n  arr[idx + 1] = y\r\n  arr[idx + 2] = z\r\n  arr[idx + 3] = w\r\n}\r\nclass InstancedSpheresGeometry extends SphereCollisionGeo(\r\n  InstancedBufferGeometry\r\n) {\r\n  constructor(spheresCount, sphereComplexity, useZSprites) {\r\n    super(spheresCount)\r\n    this._sphGeometry = useZSprites\r\n      ? new PlaneBufferGeometry(2, 2, 1, 1)\r\n      : new SphereBufferGeometry(\r\n          1,\r\n          sphereComplexity * 2,\r\n          sphereComplexity,\r\n          0,\r\n          Math.PI * 2,\r\n          0,\r\n          Math.PI\r\n        )\r\n    this._init(spheresCount, this._sphGeometry)\r\n  }\r\n\r\n  setItem(itemIdx, itemPos, itemRad) {\r\n    setArrayXYZW(\r\n      this._offsets,\r\n      itemIdx * OFFSET_SIZE,\r\n      itemPos.x,\r\n      itemPos.y,\r\n      itemPos.z,\r\n      itemRad\r\n    )\r\n    this.setSphere(itemIdx, itemPos, itemRad)\r\n  }\r\n\r\n  setColor(itemIdx, colorVal) {\r\n    tmpColor.set(colorVal)\r\n    setArrayXYZ(\r\n      this._colors,\r\n      itemIdx * COLOR_SIZE,\r\n      tmpColor.r,\r\n      tmpColor.g,\r\n      tmpColor.b\r\n    )\r\n  }\r\n\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.getAttribute('offset').needsUpdate = true\r\n    this.getAttribute('color').needsUpdate = true\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n    this.computeBoundingSphere()\r\n  }\r\n\r\n  setOpacity(chunkIndices, value) {\r\n    const alphaArr = this._alpha\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      alphaArr[chunkIndices[i]] = value\r\n    }\r\n    this.getAttribute('alphaColor').needsUpdate = true\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const instanceCount = chunkIndices.length\r\n    const geom = new InstancedBufferGeometry()\r\n    this._init.call(geom, instanceCount, this._sphGeometry)\r\n\r\n    copySubArrays(this._offsets, geom._offsets, chunkIndices, OFFSET_SIZE)\r\n    copySubArrays(this._colors, geom._colors, chunkIndices, COLOR_SIZE)\r\n    geom.boundingSphere = this.boundingSphere\r\n    geom.boundingBox = this.boundingBox\r\n    return [geom]\r\n  }\r\n\r\n  _init(spheresCount, sphereGeo) {\r\n    this.copy(sphereGeo)\r\n\r\n    this._offsets = utils.allocateTyped(\r\n      Float32Array,\r\n      spheresCount * OFFSET_SIZE\r\n    )\r\n    this._colors = utils.allocateTyped(Float32Array, spheresCount * COLOR_SIZE)\r\n    const alpha = (this._alpha = utils.allocateTyped(\r\n      Float32Array,\r\n      spheresCount\r\n    ))\r\n    fill(alpha, 1.0)\r\n\r\n    this.setAttribute(\r\n      'offset',\r\n      new InstancedBufferAttribute(this._offsets, OFFSET_SIZE, false, 1)\r\n    )\r\n    this.setAttribute(\r\n      'color',\r\n      new InstancedBufferAttribute(this._colors, COLOR_SIZE, false, 1)\r\n    )\r\n    this.setAttribute(\r\n      'alphaColor',\r\n      new InstancedBufferAttribute(alpha, 1, false, 1)\r\n    )\r\n  }\r\n}\r\nexport default InstancedSpheresGeometry\r\n",
		"import utils from '../../utils'\r\nimport { BufferAttribute, BufferGeometry, Color, Mesh } from 'three'\r\nimport { fill } from 'lodash'\r\n\r\nconst MAX_IDC_16BIT = 65535\r\nconst VEC_SIZE = 3\r\nconst tmpColor = new Color()\r\n\r\n/**\r\n * This class represents geometry which consists of separate chunks.\r\n * Each chunk has same index and similar geometry with equal points and faces count.\r\n * Each chunk has by default only one color.\r\n * @constructor\r\n */\r\n\r\nclass ChunkedObjectsGeometry extends BufferGeometry {\r\n  constructor(chunkGeo, chunksCount) {\r\n    super()\r\n\r\n    if (this.constructor === ChunkedObjectsGeometry) {\r\n      throw new Error('Can not instantiate abstract class!')\r\n    }\r\n\r\n    this._chunkGeo = chunkGeo\r\n\r\n    this._init(chunkGeo, chunksCount)\r\n  }\r\n\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.getAttribute('position').needsUpdate = true\r\n    this.getAttribute('normal').needsUpdate = true\r\n    this.getAttribute('color').needsUpdate = true\r\n  }\r\n\r\n  setColor(chunkIdx, colorVal) {\r\n    tmpColor.set(colorVal)\r\n    const colors = this._colors\r\n    const chunkSize = this._chunkSize\r\n    for (let i = chunkIdx * chunkSize, end = i + chunkSize; i < end; ++i) {\r\n      const idx = i * VEC_SIZE\r\n      colors[idx] = tmpColor.r\r\n      colors[idx + 1] = tmpColor.g\r\n      colors[idx + 2] = tmpColor.b\r\n    }\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n    this.computeBoundingSphere()\r\n  }\r\n\r\n  setOpacity(chunkIndices, value) {\r\n    const alphaArr = this._alpha\r\n    const chunkSize = this._chunkSize\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      const left = chunkIndices[i] * chunkSize\r\n      fill(alphaArr, value, left, left + chunkSize)\r\n    }\r\n    this.getAttribute('alphaColor').needsUpdate = true\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const inters = []\r\n    const mesh = new Mesh()\r\n    mesh.geometry = this\r\n    mesh.raycast(raycaster, inters)\r\n    const facesPerChunk = this._chunkGeo.index.count / 3\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('faceIndex')) {\r\n        continue\r\n      }\r\n      inters[i].chunkIdx = Math.floor(inters[i].faceIndex / facesPerChunk)\r\n      intersects.push(inters[i])\r\n    }\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const instanceCount = chunkIndices.length\r\n    const geom = new BufferGeometry()\r\n    this._init.call(geom, this._chunkGeo, instanceCount)\r\n\r\n    const srcPos = this._positions\r\n    const srcNorm = this._normals\r\n    const srcColor = this._colors\r\n\r\n    const dstPos = geom._positions\r\n    const dstNorm = geom._normals\r\n    const dstColor = geom._colors\r\n\r\n    const chunkSize = this._chunkSize * VEC_SIZE\r\n\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      const dstPtOffset = i * chunkSize\r\n      const ptIdxBegin = chunkIndices[i] * chunkSize\r\n      const ptIdxEnd = ptIdxBegin + chunkSize\r\n      dstPos.set(srcPos.subarray(ptIdxBegin, ptIdxEnd), dstPtOffset)\r\n      dstNorm.set(srcNorm.subarray(ptIdxBegin, ptIdxEnd), dstPtOffset)\r\n      dstColor.set(srcColor.subarray(ptIdxBegin, ptIdxEnd), dstPtOffset)\r\n    }\r\n\r\n    geom.boundingSphere = this.boundingSphere\r\n    geom.boundingBox = this.boundingBox\r\n    return [geom]\r\n  }\r\n\r\n  _init(chunkGeo, chunksCount) {\r\n    const chunkSize = (this._chunkSize = chunkGeo.attributes.position.count)\r\n    const chunkIndex = chunkGeo.index.array\r\n    const chunkIndexSize = chunkIndex.length\r\n    const pointsCount = this._chunkSize * chunksCount\r\n    const use32bitIndex = pointsCount > MAX_IDC_16BIT\r\n    const indexSize = chunkIndexSize * chunksCount\r\n    const index = (this._index = utils.allocateTyped(\r\n      use32bitIndex ? Uint32Array : Uint16Array,\r\n      indexSize\r\n    ))\r\n    this._positions = utils.allocateTyped(Float32Array, pointsCount * VEC_SIZE)\r\n    this._normals = utils.allocateTyped(Float32Array, pointsCount * VEC_SIZE)\r\n    this._colors = utils.allocateTyped(Float32Array, pointsCount * VEC_SIZE)\r\n    const alpha = (this._alpha = utils.allocateTyped(Float32Array, pointsCount))\r\n    fill(alpha, 1.0)\r\n\r\n    for (let i = 0; i < chunksCount; ++i) {\r\n      const offset = i * chunkIndexSize\r\n      const posOffset = i * chunkSize\r\n      index.set(chunkIndex, offset)\r\n      for (let j = 0; j < chunkIndexSize; ++j) {\r\n        index[offset + j] += posOffset\r\n      }\r\n    }\r\n\r\n    this.setIndex(new BufferAttribute(this._index, 1))\r\n    this.setAttribute(\r\n      'position',\r\n      new BufferAttribute(this._positions, VEC_SIZE)\r\n    )\r\n    this.setAttribute('normal', new BufferAttribute(this._normals, VEC_SIZE))\r\n    this.setAttribute('color', new BufferAttribute(this._colors, VEC_SIZE))\r\n    this.setAttribute('alphaColor', new BufferAttribute(alpha, 1))\r\n  }\r\n}\r\nexport default ChunkedObjectsGeometry\r\n",
		"import utils from '../../utils'\r\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry'\r\nimport SphereCollisionGeo from './SphereCollisionGeo'\r\nimport { SphereBufferGeometry } from 'three'\r\n\r\nconst VEC_SIZE = 3\r\n\r\nclass SimpleSpheresGeometry extends SphereCollisionGeo(ChunkedObjectsGeometry) {\r\n  constructor(spheresCount, sphereComplexity) {\r\n    const sphGeometry = new SphereBufferGeometry(\r\n      1,\r\n      sphereComplexity * 2,\r\n      sphereComplexity,\r\n      0,\r\n      Math.PI * 2,\r\n      0,\r\n      Math.PI\r\n    )\r\n    super(spheresCount, sphGeometry, spheresCount)\r\n\r\n    const normals = this._normals\r\n    const geoNormals = sphGeometry.attributes.normal.array\r\n    const chunkSize = this._chunkSize\r\n    this._chunkPos = this._chunkGeo.attributes.position.array\r\n    this._tmpPositions = utils.allocateTyped(Float32Array, chunkSize * VEC_SIZE)\r\n    for (let i = 0; i < spheresCount; ++i) {\r\n      normals.set(geoNormals, chunkSize * VEC_SIZE * i)\r\n    }\r\n  }\r\n\r\n  setItem(itemIdx, itemPos, itemRad) {\r\n    const tmpPos = this._tmpPositions\r\n    const chunkSize = this._chunkSize\r\n    const geoPos = this._chunkPos\r\n\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      const idx = i * 3\r\n      tmpPos[idx] = itemPos.x + geoPos[idx] * itemRad\r\n      tmpPos[idx + 1] = itemPos.y + geoPos[idx + 1] * itemRad\r\n      tmpPos[idx + 2] = itemPos.z + geoPos[idx + 2] * itemRad\r\n    }\r\n\r\n    this._positions.set(tmpPos, chunkSize * itemIdx * VEC_SIZE)\r\n    this.setSphere(itemIdx, itemPos, itemRad)\r\n  }\r\n}\r\nexport default SimpleSpheresGeometry\r\n",
		"import utils from '../../utils'\r\nimport gfxutils from '../gfxutils'\r\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry'\r\nimport { CylinderBufferGeometry, Matrix3, Vector3 } from 'three'\r\n\r\nconst VEC_SIZE = 3\r\nconst centerPos = new Vector3()\r\nconst tmpVector = new Vector3()\r\nconst normMtx = new Matrix3()\r\n\r\nclass Simple2CCylindersGeometry extends ChunkedObjectsGeometry {\r\n  constructor(instanceCount, polyComplexity) {\r\n    const cylGeometry = new CylinderBufferGeometry(\r\n      1,\r\n      1,\r\n      1.0,\r\n      Math.max(3, polyComplexity),\r\n      2,\r\n      true\r\n    )\r\n    super(cylGeometry, 2 * instanceCount)\r\n\r\n    const chunkSize = this._chunkSize\r\n    this._chunkPos = this._chunkGeo.attributes.position.array\r\n    this._chunkNorms = this._chunkGeo.attributes.normal.array\r\n    this._tmpVector = utils.allocateTyped(Float32Array, chunkSize * VEC_SIZE)\r\n  }\r\n\r\n  setItem(itemIdx, botPos, topPos, itemRad) {\r\n    const chunkSize = this._chunkSize\r\n    const firstOffset = chunkSize * 2 * itemIdx * VEC_SIZE\r\n    const secondOffset = firstOffset + chunkSize * VEC_SIZE\r\n\r\n    const tmpArray = this._tmpVector\r\n    const geoPos = this._chunkPos\r\n    const geoNorm = this._chunkNorms\r\n\r\n    centerPos.lerpVectors(botPos, topPos, 0.5)\r\n    const mtx1 = gfxutils.calcCylinderMatrix(botPos, centerPos, itemRad)\r\n    normMtx.getNormalMatrix(mtx1)\r\n\r\n    let idx\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE\r\n      tmpVector.fromArray(geoPos, idx)\r\n      tmpVector.applyMatrix4(mtx1)\r\n      tmpVector.toArray(tmpArray, idx)\r\n    }\r\n    this._positions.set(tmpArray, firstOffset)\r\n\r\n    // now shift center to get another part of the cylinder\r\n    centerPos.sub(botPos)\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE\r\n      tmpArray[idx] += centerPos.x\r\n      tmpArray[idx + 1] += centerPos.y\r\n      tmpArray[idx + 2] += centerPos.z\r\n    }\r\n    this._positions.set(tmpArray, secondOffset)\r\n\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE\r\n      tmpVector.fromArray(geoNorm, idx)\r\n      tmpVector.applyMatrix3(normMtx)\r\n      tmpVector.toArray(tmpArray, idx)\r\n    }\r\n    this._normals.set(tmpArray, firstOffset)\r\n    this._normals.set(tmpArray, secondOffset)\r\n  }\r\n\r\n  setColor(itemIdx, colorVal1, colorVal2) {\r\n    const first = 2 * itemIdx\r\n    super.setColor(first, colorVal1)\r\n\r\n    const second = first + 1\r\n    super.setColor(second, colorVal2)\r\n  }\r\n}\r\n\r\nexport default Simple2CCylindersGeometry\r\n",
		"import utils from '../../utils'\r\nimport {\r\n  BufferAttribute,\r\n  BufferGeometry,\r\n  Uint16BufferAttribute,\r\n  Vector3\r\n} from 'three'\r\n\r\nconst MAX_POINTS_COUNT_16BIT = 65536\r\nconst PTS_PER_TRIANGLE = 3\r\n\r\nclass CylinderBufferGeometry extends BufferGeometry {\r\n  constructor(\r\n    radiusTop,\r\n    radiusBottom,\r\n    height,\r\n    radialSegments,\r\n    heightSegments,\r\n    openEnded\r\n  ) {\r\n    super()\r\n\r\n    const thetaStart = 0\r\n    const thetaLength = 2 * Math.PI\r\n\r\n    this.type = 'CylinderBufferGeometry'\r\n\r\n    this.parameters = {\r\n      radiusTop,\r\n      radiusBottom,\r\n      height,\r\n      radialSegments,\r\n      heightSegments,\r\n      openEnded\r\n    }\r\n\r\n    const hasTop = openEnded === false && radiusTop > 0\r\n    const hasBottom = openEnded === false && radiusBottom > 0\r\n    const vertexCount =\r\n      (heightSegments + 1) * radialSegments +\r\n      hasTop * (radialSegments + 1) +\r\n      hasBottom * (radialSegments + 1)\r\n    const facesCount =\r\n      (2 * heightSegments + hasTop + hasBottom) * radialSegments\r\n\r\n    const heightHalf = height / 2\r\n\r\n    /* eslint-disable no-magic-numbers */\r\n    const positions = new BufferAttribute(\r\n      utils.allocateTyped(Float32Array, vertexCount * 3),\r\n      3\r\n    )\r\n    const normals = new BufferAttribute(\r\n      utils.allocateTyped(Float32Array, vertexCount * 3),\r\n      3\r\n    )\r\n    const indices = new Uint16BufferAttribute(\r\n      utils.allocateTyped(Uint16Array, facesCount * PTS_PER_TRIANGLE),\r\n      1\r\n    )\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    const uvs = new BufferAttribute(\r\n      utils.allocateTyped(Float32Array, vertexCount * 2),\r\n      2\r\n    )\r\n    console.assert(\r\n      vertexCount < MAX_POINTS_COUNT_16BIT,\r\n      'DEBUG: Cylinder Geometry has too many vertices (65536 max).'\r\n    )\r\n\r\n    let currVtxIdx = 0\r\n    let currFaceIdx = 0\r\n    const tanTheta = -(radiusBottom - radiusTop) / height\r\n\r\n    // setup cylinder data\r\n    for (let y = 0; y <= heightSegments; y++) {\r\n      // faces\r\n      if (y !== heightSegments) {\r\n        for (let i = 0; i < radialSegments; i++) {\r\n          const v1 = currVtxIdx + i\r\n          const v2 = currVtxIdx + radialSegments + i\r\n          const v3 = currVtxIdx + radialSegments + ((i + 1) % radialSegments)\r\n          const v4 = currVtxIdx + ((i + 1) % radialSegments)\r\n\r\n          indices.setXYZ(currFaceIdx * PTS_PER_TRIANGLE, v1, v4, v2)\r\n          currFaceIdx++\r\n          indices.setXYZ(currFaceIdx * PTS_PER_TRIANGLE, v2, v4, v3)\r\n          currFaceIdx++\r\n        }\r\n      }\r\n\r\n      // vertices\r\n      const v = y / heightSegments\r\n      const radius = v * (radiusBottom - radiusTop) + radiusTop\r\n\r\n      for (let x = 0; x < radialSegments; x++) {\r\n        const u = x / radialSegments\r\n\r\n        const vx = radius * Math.sin(u * thetaLength + thetaStart)\r\n        const vy = v * height - heightHalf\r\n        const vz = radius * Math.cos(u * thetaLength + thetaStart)\r\n\r\n        const normal = new Vector3(\r\n          vx,\r\n          Math.sqrt(vx * vx + vz * vz) * tanTheta,\r\n          vz\r\n        ).normalize()\r\n\r\n        positions.setXYZ(currVtxIdx, vx, vy, vz)\r\n        normals.setXYZ(currVtxIdx, normal.x, normal.y, normal.z)\r\n        uvs.setXY(currVtxIdx, u, v)\r\n        ++currVtxIdx\r\n      }\r\n    }\r\n\r\n    // top cap\r\n    if (hasTop) {\r\n      const startTIdx = currVtxIdx\r\n      const lastIdx = currVtxIdx + radialSegments\r\n      for (let fTIdx = 0; fTIdx < radialSegments; ++fTIdx) {\r\n        const currSrcIdx = currVtxIdx - radialSegments\r\n        positions.setXYZ(\r\n          currVtxIdx,\r\n          positions.getX(currSrcIdx),\r\n          positions.getY(currSrcIdx),\r\n          positions.getZ(currSrcIdx)\r\n        )\r\n        normals.setXYZ(currVtxIdx, 0, 1, 0)\r\n        uvs.setXY(currVtxIdx, 1, 1)\r\n\r\n        const nextTVtx = startTIdx + ((fTIdx + 1) % radialSegments)\r\n        indices.setXYZ(\r\n          currFaceIdx * PTS_PER_TRIANGLE,\r\n          currVtxIdx,\r\n          nextTVtx,\r\n          lastIdx\r\n        )\r\n        currFaceIdx++\r\n        currVtxIdx++\r\n      }\r\n\r\n      positions.setXYZ(currVtxIdx, 0, heightHalf, 0)\r\n      normals.setXYZ(currVtxIdx, 0, 1, 0)\r\n      uvs.setXY(currVtxIdx, 1, 1)\r\n      ++currVtxIdx\r\n    }\r\n\r\n    // bottom cap\r\n    if (hasBottom) {\r\n      const startBIdx = currVtxIdx\r\n      const lastBIdx = currVtxIdx + radialSegments\r\n      for (let fBIdx = 0; fBIdx < radialSegments; ++fBIdx) {\r\n        const currSrcBIdx = fBIdx\r\n        positions.setXYZ(\r\n          currVtxIdx,\r\n          positions.getX(currSrcBIdx),\r\n          positions.getY(currSrcBIdx),\r\n          positions.getZ(currSrcBIdx)\r\n        )\r\n        normals.setXYZ(currVtxIdx, 0, -1, 0)\r\n        uvs.setXY(currVtxIdx, 0, 0)\r\n\r\n        const nextBVtx = startBIdx + ((fBIdx + 1) % radialSegments)\r\n        indices.setXYZ(\r\n          currFaceIdx * PTS_PER_TRIANGLE,\r\n          nextBVtx,\r\n          currVtxIdx,\r\n          lastBIdx\r\n        )\r\n        currFaceIdx++\r\n        currVtxIdx++\r\n      }\r\n\r\n      positions.setXYZ(currVtxIdx, 0, -heightHalf, 0)\r\n      normals.setXYZ(currVtxIdx, 0, -1, 0)\r\n      uvs.setXY(currVtxIdx, 0, 0)\r\n    }\r\n\r\n    this.setIndex(indices)\r\n    this.setAttribute('position', positions)\r\n    this.setAttribute('normal', normals)\r\n    this.setAttribute('uv', uvs)\r\n  }\r\n\r\n  clone() {\r\n    const { parameters } = this\r\n\r\n    return new CylinderBufferGeometry(\r\n      parameters.radiusTop,\r\n      parameters.radiusBottom,\r\n      parameters.height,\r\n      parameters.radialSegments,\r\n      parameters.heightSegments,\r\n      parameters.openEnded\r\n    )\r\n  }\r\n}\r\n\r\nexport default CylinderBufferGeometry\r\n",
		"import {\r\n  Color,\r\n  InstancedBufferAttribute,\r\n  InstancedBufferGeometry,\r\n  Matrix4,\r\n  PlaneBufferGeometry\r\n} from 'three'\r\nimport utils from '../../utils'\r\nimport gfxutils from '../gfxutils'\r\nimport Simple2CCylindersGeometry from './Simple2CCylindersGeometry'\r\nimport CylinderBufferGeometry from './CylinderBufferGeometry'\r\nimport { fill } from 'lodash'\r\n\r\nconst tmpColor = new Color()\r\nconst invMatrix = new Matrix4()\r\n\r\nconst OFFSET_SIZE = 4\r\nconst COLOR_SIZE = 3\r\nconst { copySubArrays } = utils\r\n\r\nfunction setArrayXYZ(arr, idx, x, y, z) {\r\n  arr[idx] = x\r\n  arr[idx + 1] = y\r\n  arr[idx + 2] = z\r\n}\r\n\r\nfunction setArrayXYZW(arr, idx, x, y, z, w) {\r\n  arr[idx] = x\r\n  arr[idx + 1] = y\r\n  arr[idx + 2] = z\r\n  arr[idx + 3] = w\r\n}\r\n\r\nfunction sortNumber(a, b) {\r\n  return a - b\r\n}\r\n\r\nfunction _prepareCylinderInfo(chunkIndices) {\r\n  chunkIndices.sort(sortNumber)\r\n  const chunksIdx = []\r\n  const cylinderInfo = []\r\n  for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n    const val = chunkIndices[i]\r\n    const even = (val | 0) % 2 === 0\r\n    const newPar = {\r\n      first: false,\r\n      second: false\r\n    }\r\n    if (even) {\r\n      newPar.first = true\r\n      newPar.second = i + 1 < n && chunkIndices[i + 1] === chunkIndices[i] + 1\r\n      if (newPar.second) {\r\n        ++i\r\n      }\r\n    } else {\r\n      newPar.second = true\r\n    }\r\n    chunksIdx.push(Math.floor(val / 2))\r\n    cylinderInfo.push(newPar)\r\n  }\r\n  return { indices: chunksIdx, cylinderInfo }\r\n}\r\n\r\nfunction _assignOpacity(cylinderInfo, color1, color2) {\r\n  for (let i = 0, n = cylinderInfo.length; i < n; ++i) {\r\n    const info = cylinderInfo[i]\r\n    if (!info.first) {\r\n      color1[COLOR_SIZE * i] = -0.5\r\n    }\r\n    if (!info.second) {\r\n      color2[COLOR_SIZE * i] = -0.5\r\n    }\r\n  }\r\n}\r\nclass Instanced2CCylindersGeometry extends InstancedBufferGeometry {\r\n  constructor(instanceCount, polyComplexity, useZSprites, openEnded) {\r\n    super()\r\n    this._useZSprites = useZSprites\r\n    this._cylGeometry = useZSprites\r\n      ? new PlaneBufferGeometry(2, 2, 1, 1)\r\n      : new CylinderBufferGeometry(\r\n          1,\r\n          1,\r\n          1.0,\r\n          Math.max(3, polyComplexity),\r\n          2,\r\n          openEnded\r\n        )\r\n    this._init(instanceCount, this._cylGeometry, this._useZSprites)\r\n\r\n    this._collisionGeo = new Simple2CCylindersGeometry(instanceCount, 3)\r\n  }\r\n\r\n  setItem(itemIdx, botPos, topPos, itemRad) {\r\n    const matrix = gfxutils.calcCylinderMatrix(botPos, topPos, itemRad)\r\n    let me = matrix.elements\r\n    const mtxOffset = itemIdx * OFFSET_SIZE\r\n\r\n    this._collisionGeo.setItem(itemIdx, botPos, topPos, itemRad)\r\n    setArrayXYZW(this._matVector1, mtxOffset, me[0], me[4], me[8], me[12])\r\n    setArrayXYZW(this._matVector2, mtxOffset, me[1], me[5], me[9], me[13])\r\n    setArrayXYZW(this._matVector3, mtxOffset, me[2], me[6], me[10], me[14])\r\n\r\n    if (this._useZSprites) {\r\n      invMatrix.copy(matrix).invert()\r\n      me = invMatrix.elements\r\n      setArrayXYZW(this._invmatVector1, mtxOffset, me[0], me[4], me[8], me[12])\r\n      setArrayXYZW(this._invmatVector2, mtxOffset, me[1], me[5], me[9], me[13])\r\n      setArrayXYZW(this._invmatVector3, mtxOffset, me[2], me[6], me[10], me[14])\r\n    }\r\n  }\r\n\r\n  setColor(itemIdx, colorVal1, colorVal2) {\r\n    const colorIdx = itemIdx * COLOR_SIZE\r\n    tmpColor.set(colorVal1)\r\n    setArrayXYZ(this._color1, colorIdx, tmpColor.r, tmpColor.g, tmpColor.b)\r\n    tmpColor.set(colorVal2)\r\n    setArrayXYZ(this._color2, colorIdx, tmpColor.r, tmpColor.g, tmpColor.b)\r\n  }\r\n\r\n  computeBoundingSphere() {\r\n    this._collisionGeo.computeBoundingSphere()\r\n    this.boundingSphere = this._collisionGeo.boundingSphere\r\n  }\r\n\r\n  computeBoundingBox() {\r\n    this._collisionGeo.computeBoundingBox()\r\n    this.boundingBox = this._collisionGeo.boundingBox\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    this._collisionGeo.raycast(raycaster, intersects)\r\n  }\r\n\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.getAttribute('matVector1').needsUpdate = true\r\n    this.getAttribute('matVector2').needsUpdate = true\r\n    this.getAttribute('matVector3').needsUpdate = true\r\n    this.getAttribute('color').needsUpdate = true\r\n    this.getAttribute('color2').needsUpdate = true\r\n    this.getAttribute('alphaColor').needsUpdate = true\r\n    if (this._useZSprites) {\r\n      this.getAttribute('invmatVector1').needsUpdate = true\r\n      this.getAttribute('invmatVector2').needsUpdate = true\r\n      this.getAttribute('invmatVector3').needsUpdate = true\r\n    }\r\n\r\n    this._collisionGeo.finishUpdate()\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n    this.computeBoundingSphere()\r\n  }\r\n\r\n  setOpacity(chunkIndices, value) {\r\n    const alphaArr = this._alpha\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      alphaArr[Math.floor(chunkIndices[i] / 2)] = value\r\n    }\r\n    this.getAttribute('alphaColor').needsUpdate = true\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const info = _prepareCylinderInfo(chunkIndices)\r\n    const cylinderIndices = info.indices\r\n    const instanceCount = cylinderIndices.length\r\n    const geom = new InstancedBufferGeometry()\r\n    this._init.call(geom, instanceCount, this._cylGeometry, this._useZSprites)\r\n\r\n    copySubArrays(\r\n      this._matVector1,\r\n      geom._matVector1,\r\n      cylinderIndices,\r\n      OFFSET_SIZE\r\n    )\r\n    copySubArrays(\r\n      this._matVector2,\r\n      geom._matVector2,\r\n      cylinderIndices,\r\n      OFFSET_SIZE\r\n    )\r\n    copySubArrays(\r\n      this._matVector3,\r\n      geom._matVector3,\r\n      cylinderIndices,\r\n      OFFSET_SIZE\r\n    )\r\n\r\n    if (this._useZSprites) {\r\n      copySubArrays(\r\n        this._invmatVector1,\r\n        geom._invmatVector1,\r\n        cylinderIndices,\r\n        OFFSET_SIZE\r\n      )\r\n      copySubArrays(\r\n        this._invmatVector2,\r\n        geom._invmatVector2,\r\n        cylinderIndices,\r\n        OFFSET_SIZE\r\n      )\r\n      copySubArrays(\r\n        this._invmatVector3,\r\n        geom._invmatVector3,\r\n        cylinderIndices,\r\n        OFFSET_SIZE\r\n      )\r\n    }\r\n\r\n    copySubArrays(this._color1, geom._color1, cylinderIndices, COLOR_SIZE)\r\n    copySubArrays(this._color2, geom._color2, cylinderIndices, COLOR_SIZE)\r\n    _assignOpacity(info.cylinderInfo, geom._color1, geom._color2)\r\n    geom.boundingSphere = this.boundingSphere\r\n    geom.boundingBox = this.boundingBox\r\n    return [geom]\r\n  }\r\n\r\n  getGeoParams() {\r\n    return this._cylGeometry.parameters\r\n  }\r\n\r\n  _init(instanceCount, cylinderGeo, useZSprites) {\r\n    this.copy(cylinderGeo)\r\n    this._matVector1 = utils.allocateTyped(\r\n      Float32Array,\r\n      instanceCount * OFFSET_SIZE\r\n    )\r\n    this._matVector2 = utils.allocateTyped(\r\n      Float32Array,\r\n      instanceCount * OFFSET_SIZE\r\n    )\r\n    this._matVector3 = utils.allocateTyped(\r\n      Float32Array,\r\n      instanceCount * OFFSET_SIZE\r\n    )\r\n    this._color1 = utils.allocateTyped(Float32Array, instanceCount * COLOR_SIZE)\r\n    this._color2 = utils.allocateTyped(Float32Array, instanceCount * COLOR_SIZE)\r\n    const alpha = (this._alpha = utils.allocateTyped(\r\n      Float32Array,\r\n      instanceCount\r\n    ))\r\n    fill(alpha, 1.0)\r\n\r\n    this.setAttribute(\r\n      'matVector1',\r\n      new InstancedBufferAttribute(this._matVector1, OFFSET_SIZE, false, 1)\r\n    )\r\n    this.setAttribute(\r\n      'matVector2',\r\n      new InstancedBufferAttribute(this._matVector2, OFFSET_SIZE, false, 1)\r\n    )\r\n    this.setAttribute(\r\n      'matVector3',\r\n      new InstancedBufferAttribute(this._matVector3, OFFSET_SIZE, false, 1)\r\n    )\r\n    this.setAttribute(\r\n      'color',\r\n      new InstancedBufferAttribute(this._color1, COLOR_SIZE, false, 1)\r\n    )\r\n    this.setAttribute(\r\n      'color2',\r\n      new InstancedBufferAttribute(this._color2, COLOR_SIZE, false, 1)\r\n    )\r\n\r\n    this.setAttribute(\r\n      'alphaColor',\r\n      new InstancedBufferAttribute(this._alpha, 1, false, 1)\r\n    )\r\n\r\n    if (useZSprites) {\r\n      this._invmatVector1 = utils.allocateTyped(\r\n        Float32Array,\r\n        instanceCount * OFFSET_SIZE\r\n      )\r\n      this._invmatVector2 = utils.allocateTyped(\r\n        Float32Array,\r\n        instanceCount * OFFSET_SIZE\r\n      )\r\n      this._invmatVector3 = utils.allocateTyped(\r\n        Float32Array,\r\n        instanceCount * OFFSET_SIZE\r\n      )\r\n\r\n      this.setAttribute(\r\n        'invmatVector1',\r\n        new InstancedBufferAttribute(this._invmatVector1, OFFSET_SIZE, false, 1)\r\n      )\r\n      this.setAttribute(\r\n        'invmatVector2',\r\n        new InstancedBufferAttribute(this._invmatVector2, OFFSET_SIZE, false, 1)\r\n      )\r\n      this.setAttribute(\r\n        'invmatVector3',\r\n        new InstancedBufferAttribute(this._invmatVector3, OFFSET_SIZE, false, 1)\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Instanced2CCylindersGeometry\r\n",
		"import utils from '../../utils'\r\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry'\r\nimport { BufferAttribute, BufferGeometry, Vector3 } from 'three'\r\n\r\nconst VEC_SIZE = 3\r\nconst TRI_SIZE = 3\r\nconst tmpPrev = new Vector3()\r\nconst tmpNext = new Vector3()\r\nconst tmpRes = new Vector3()\r\nconst simpleNormal = new Vector3(1.0, 0.0, 0.0)\r\nconst normalOnCut = new Vector3()\r\nconst nearRingPt = new Vector3()\r\n\r\nfunction _createExtrudedChunkGeometry(shape, ringsCount) {\r\n  const geo = new BufferGeometry()\r\n  const ptsCount = shape.length\r\n  const totalPts = ptsCount * ringsCount\r\n  const type = totalPts <= 65536 ? Uint16Array : Uint32Array\r\n  const facesPerChunk = (ringsCount - 1) * ptsCount * 2\r\n  const indices = new BufferAttribute(\r\n    utils.allocateTyped(type, facesPerChunk * TRI_SIZE),\r\n    1\r\n  )\r\n\r\n  let currVtxIdx = 0\r\n  let currFaceIdx = 0\r\n  for (let y = 0; y < ringsCount; y++) {\r\n    // faces\r\n    if (y !== ringsCount - 1) {\r\n      for (let i = 0; i < ptsCount; i++) {\r\n        const v1 = currVtxIdx + i\r\n        const v2 = currVtxIdx + ptsCount + i\r\n        const v3 = currVtxIdx + ptsCount + ((i + 1) % ptsCount)\r\n        const v4 = currVtxIdx + ((i + 1) % ptsCount)\r\n\r\n        indices.setXYZ(currFaceIdx * TRI_SIZE, v1, v4, v2)\r\n        currFaceIdx++\r\n        indices.setXYZ(currFaceIdx * TRI_SIZE, v2, v4, v3)\r\n        currFaceIdx++\r\n      }\r\n    }\r\n\r\n    currVtxIdx += ptsCount\r\n  }\r\n\r\n  geo.setIndex(indices)\r\n  const pos = utils.allocateTyped(Float32Array, totalPts * VEC_SIZE)\r\n  geo.setAttribute('position', new BufferAttribute(pos, VEC_SIZE))\r\n\r\n  geo._positions = shape\r\n\r\n  return geo\r\n}\r\n\r\nclass ExtrudedObjectsGeometry extends ChunkedObjectsGeometry {\r\n  constructor(shape, ringsCount, chunksCount) {\r\n    const chunkGeo = _createExtrudedChunkGeometry(shape, ringsCount)\r\n    super(chunkGeo, chunksCount)\r\n    this._ringsCount = ringsCount\r\n\r\n    const tmpShape = (this._tmpShape = [])\r\n    for (let i = 0; i < shape.length; ++i) {\r\n      tmpShape[i] = new Vector3()\r\n    }\r\n  }\r\n\r\n  setItem(itemIdx, matrices, hasSlope = false, hasCut = false) {\r\n    const ptsCount = this._chunkGeo._positions.length\r\n    const ringsCount = this._ringsCount\r\n    const chunkStartIdx = ptsCount * this._ringsCount * itemIdx * VEC_SIZE\r\n\r\n    this._setPoints(matrices, ptsCount, ringsCount, chunkStartIdx)\r\n\r\n    if (hasSlope) {\r\n      this._setSlopeNormals(ptsCount, ringsCount, chunkStartIdx)\r\n    } else {\r\n      this._setBaseNormals(ptsCount, ringsCount, chunkStartIdx)\r\n    }\r\n\r\n    if (hasCut) {\r\n      this._addCut(ptsCount, ringsCount, chunkStartIdx)\r\n    }\r\n  }\r\n\r\n  _setPoints(matrices, ptsCount, ringsCount, chunkStartIdx) {\r\n    const tmpShape = this._tmpShape\r\n    const positions = this._positions\r\n    const shape = this._chunkGeo._positions\r\n\r\n    for (let i = 0, vtxIdx = chunkStartIdx; i < ringsCount; ++i) {\r\n      const mtx = matrices[i]\r\n\r\n      for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n        tmpShape[j].copy(shape[j]).applyMatrix4(mtx).toArray(positions, vtxIdx)\r\n      }\r\n    }\r\n  }\r\n\r\n  _setBaseNormals(ptsCount, ringsCount, chunkStartIdx) {\r\n    const nPtsInRing = ptsCount * VEC_SIZE\r\n\r\n    for (\r\n      let i = 0, vtxIdx = chunkStartIdx;\r\n      i < ringsCount;\r\n      ++i, vtxIdx += nPtsInRing\r\n    ) {\r\n      this._countNormalsInRing(ptsCount, vtxIdx, false)\r\n    }\r\n  }\r\n\r\n  _setSlopeNormals(ptsCount, ringsCount, chunkStartIdx) {\r\n    const normals = this._normals\r\n    const nPtsInRing = ptsCount * VEC_SIZE\r\n\r\n    let vtxIdx = chunkStartIdx\r\n    // First ring\r\n    // In all cases, besides cut, second ring is coincident to first. So values of first ring's normals doesn't\r\n    // matter (In the cut case special handler will be applied later and will set them to correct values)\r\n    for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n      simpleNormal.toArray(normals, vtxIdx)\r\n    }\r\n    // second ring\r\n    // If it isn't first Item we take normals' values from the last ring of the previous item (these rings are coincident)\r\n    // else we count normals' values based on next ring information\r\n    if (vtxIdx - 2 * nPtsInRing > 0) {\r\n      for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n        tmpRes\r\n          .fromArray(normals, vtxIdx - 2 * nPtsInRing)\r\n          .toArray(normals, vtxIdx)\r\n      }\r\n    } else {\r\n      this._countNormalsInRing(ptsCount, vtxIdx, true, +nPtsInRing)\r\n      vtxIdx += nPtsInRing\r\n    }\r\n    // other rings\r\n    // we count normals' values based on previous ring information\r\n    for (let i = 2; i < ringsCount; ++i, vtxIdx += nPtsInRing) {\r\n      this._countNormalsInRing(ptsCount, vtxIdx, true, -nPtsInRing)\r\n    }\r\n  }\r\n\r\n  // Counting normals:\r\n  // - Slope\r\n  //   Radius changes throught part => normals aren't parallel with the plane contains section points\r\n  //   normal = vTangentInSectionPlane x vToSuchPointInPrevSection (all vectors are scaled for being 1 in length)\r\n  // - No slope\r\n  //   Radius doesn't change throught part => normals are parallel with the plane contains section points\r\n  //   normal = vToPrevPointInSection + vToNextPointInSection (all vectors are scaled for being 1 in length)\r\n  _countNormalsInRing(ptsCount, vtxIdx, isSlope, shiftToExtraPt) {\r\n    const tmpShape = this._tmpShape\r\n    const normals = this._normals\r\n\r\n    tmpShape[0].fromArray(this._positions, vtxIdx)\r\n    tmpShape[ptsCount - 1].fromArray(\r\n      this._positions,\r\n      vtxIdx + (ptsCount - 1) * VEC_SIZE\r\n    )\r\n\r\n    for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n      if (j < ptsCount - 1) {\r\n        tmpShape[j + 1].fromArray(this._positions, vtxIdx + VEC_SIZE)\r\n      }\r\n\r\n      if (isSlope) {\r\n        nearRingPt.fromArray(this._positions, vtxIdx + shiftToExtraPt)\r\n\r\n        tmpPrev\r\n          .subVectors(\r\n            tmpShape[(j + ptsCount - 1) % ptsCount],\r\n            tmpShape[(j + 1) % ptsCount]\r\n          )\r\n          .normalize()\r\n        tmpNext.subVectors(tmpShape[j], nearRingPt).normalize()\r\n        tmpRes\r\n          .crossVectors(tmpNext, tmpPrev)\r\n          .normalize()\r\n          .toArray(normals, vtxIdx)\r\n      } else {\r\n        tmpPrev\r\n          .subVectors(tmpShape[j], tmpShape[(j + ptsCount - 1) % ptsCount])\r\n          .normalize()\r\n        tmpNext\r\n          .subVectors(tmpShape[j], tmpShape[(j + 1) % ptsCount])\r\n          .normalize()\r\n        tmpRes.addVectors(tmpPrev, tmpNext).normalize().toArray(normals, vtxIdx)\r\n      }\r\n    }\r\n  }\r\n\r\n  _addCut(ptsCount, ringsCount, chunkStartIdx) {\r\n    // Nothing to do if item is flat or only line\r\n    if (ptsCount < 3 || ringsCount < 2) {\r\n      return\r\n    }\r\n    const positions = this._positions\r\n    const normals = this._normals\r\n    const tmpShape = this._tmpShape\r\n    const nPtsInRing = ptsCount * VEC_SIZE\r\n\r\n    // Normal to the cut plane is equal to cross product of two vectors which are lying in it\r\n    tmpShape[0].fromArray(positions, chunkStartIdx)\r\n    tmpShape[1].fromArray(positions, chunkStartIdx + VEC_SIZE)\r\n    tmpShape[2].fromArray(positions, chunkStartIdx + 2 * VEC_SIZE)\r\n\r\n    tmpPrev.subVectors(tmpShape[1], tmpShape[0]).normalize()\r\n    tmpNext.subVectors(tmpShape[1], tmpShape[2]).normalize()\r\n    normalOnCut.crossVectors(tmpPrev, tmpNext).normalize()\r\n\r\n    let vtxIdx = chunkStartIdx\r\n    // First and second rings normals' values are equal to value of normal to the cutting plane\r\n    for (let j = 0; j < ptsCount * 2; ++j, vtxIdx += VEC_SIZE) {\r\n      normalOnCut.toArray(normals, vtxIdx)\r\n    }\r\n    if (ringsCount > 2) {\r\n      // Third ring points are coincident to first ring points, but have different normals. It makes sharp angle near cut\r\n      for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n        tmpRes\r\n          .fromArray(positions, vtxIdx - nPtsInRing)\r\n          .toArray(positions, vtxIdx)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ExtrudedObjectsGeometry\r\n",
		"import utils from '../../utils'\r\nimport { Vector3, Color, BufferGeometry, BufferAttribute } from 'three'\r\nimport { fill } from 'lodash'\r\n\r\nconst MAX_IDC_16BIT = 65535\r\nconst VERTEX_PER_SEGMENT = 4\r\nconst POS_SIZE = 4\r\nconst DIR_SIZE = 3\r\nconst COL_SIZE = 3\r\nconst tmpColor = new Color()\r\nconst direction = new Vector3()\r\n\r\nfunction setArrayXYZ(arr, idx, x, y, z) {\r\n  arr[idx] = x\r\n  arr[idx + 1] = y\r\n  arr[idx + 2] = z\r\n}\r\n\r\nfunction setArrayXYZW(arr, idx, x, y, z, w) {\r\n  arr[idx] = x\r\n  arr[idx + 1] = y\r\n  arr[idx + 2] = z\r\n  arr[idx + 3] = w\r\n}\r\n\r\nfunction getSubset(arr, startSegmentIdx, segmentsCount, elemSize) {\r\n  const start = startSegmentIdx * VERTEX_PER_SEGMENT\r\n  const end = start + segmentsCount * VERTEX_PER_SEGMENT\r\n  return arr.subarray(start * elemSize, end * elemSize)\r\n}\r\n\r\n/**\r\n * This class represents lines geometry which consists of screen-aligned narrow quad of variable width.\r\n *\r\n * @constructor\r\n *\r\n * @param {number}  segmentsCount   Number of segments per chunk.\r\n * collision geometry.\r\n */\r\n\r\nclass ThickLinesGeometry extends BufferGeometry {\r\n  constructor(segmentsCount) {\r\n    super()\r\n    this._initVertices(segmentsCount)\r\n  }\r\n\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.getAttribute('position').needsUpdate = true\r\n    this.getAttribute('color').needsUpdate = true\r\n    this.getAttribute('alphaColor').needsUpdate = true\r\n    this.getAttribute('direction').needsUpdate = true\r\n  }\r\n\r\n  setColor(segmentIdx, colorVal) {\r\n    tmpColor.set(colorVal)\r\n    let idx = segmentIdx * VERTEX_PER_SEGMENT * COL_SIZE\r\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b)\r\n    idx += COL_SIZE\r\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b)\r\n    idx += COL_SIZE\r\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b)\r\n    idx += COL_SIZE\r\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b)\r\n  }\r\n\r\n  setSegment(segmentIdx, pos1, pos2) {\r\n    direction.subVectors(pos1, pos2)\r\n    direction.normalize()\r\n    const positions = this._positions\r\n    const directions = this._directions\r\n    let idx = segmentIdx * VERTEX_PER_SEGMENT * POS_SIZE\r\n    let dirIdx = segmentIdx * VERTEX_PER_SEGMENT * DIR_SIZE\r\n    setArrayXYZW(positions, idx, pos1.x, pos1.y, pos1.z, 0.5)\r\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z)\r\n    idx += POS_SIZE\r\n    dirIdx += DIR_SIZE\r\n    setArrayXYZW(positions, idx, pos1.x, pos1.y, pos1.z, -0.5)\r\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z)\r\n    idx += POS_SIZE\r\n    dirIdx += DIR_SIZE\r\n    setArrayXYZW(positions, idx, pos2.x, pos2.y, pos2.z, 0.5)\r\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z)\r\n    idx += POS_SIZE\r\n    dirIdx += DIR_SIZE\r\n    setArrayXYZW(positions, idx, pos2.x, pos2.y, pos2.z, -0.5)\r\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z)\r\n  }\r\n\r\n  setOpacity(startSegIdx, endSegIdx, value) {\r\n    const start = startSegIdx * VERTEX_PER_SEGMENT\r\n    const end = endSegIdx * VERTEX_PER_SEGMENT\r\n    fill(this.alpha, value, end, start)\r\n    this.getAttribute('alphaColor').needsUpdate = true\r\n  }\r\n\r\n  getSubsetSegments(startSegmentIdx, segmentsCount) {\r\n    return [\r\n      getSubset(this._positions, startSegmentIdx, segmentsCount, POS_SIZE),\r\n      getSubset(this._directions, startSegmentIdx, segmentsCount, DIR_SIZE)\r\n    ]\r\n  }\r\n\r\n  getSubsetColors(startSegmentIdx, segmentsCount) {\r\n    return getSubset(this._colors, startSegmentIdx, segmentsCount, COL_SIZE)\r\n  }\r\n\r\n  getSubsetOpacities(startSegmentIdx, segmentsCount) {\r\n    return getSubset(this._alpha, startSegmentIdx, segmentsCount, 1)\r\n  }\r\n\r\n  getNumVertexPerSegment() {\r\n    return VERTEX_PER_SEGMENT\r\n  }\r\n\r\n  getPositionSize() {\r\n    return POS_SIZE\r\n  }\r\n\r\n  setSegments(startSegmentIdx, positions) {\r\n    const startPos = startSegmentIdx * VERTEX_PER_SEGMENT * POS_SIZE\r\n    if (positions instanceof Array && positions.length === 2) {\r\n      this._positions.set(positions[0], startPos)\r\n      const startDir = startSegmentIdx * VERTEX_PER_SEGMENT * DIR_SIZE\r\n      this._directions.set(positions[1], startDir) // dirs are geo part of vertex\r\n    } else {\r\n      this._positions.set(positions, startPos)\r\n    }\r\n  }\r\n\r\n  setColors(startSegmentIdx, colors) {\r\n    const start = startSegmentIdx * VERTEX_PER_SEGMENT * COL_SIZE\r\n    this._colors.set(colors, start)\r\n  }\r\n\r\n  _initVertices(segmentsCount) {\r\n    this._buffersSize = segmentsCount * VERTEX_PER_SEGMENT\r\n    const pointsCount = this._buffersSize\r\n    const use32bitIndex = pointsCount > MAX_IDC_16BIT\r\n    this._index = utils.allocateTyped(\r\n      use32bitIndex ? Uint32Array : Uint16Array,\r\n      segmentsCount * 6\r\n    )\r\n    this._positions = utils.allocateTyped(Float32Array, pointsCount * POS_SIZE)\r\n    this._colors = utils.allocateTyped(Float32Array, pointsCount * COL_SIZE)\r\n    this._directions = utils.allocateTyped(Float32Array, pointsCount * DIR_SIZE)\r\n    const alpha = (this._alpha = utils.allocateTyped(Float32Array, pointsCount))\r\n    fill(alpha, 1.0)\r\n\r\n    const index = this._index\r\n    let indexOffset = 0\r\n    let pointOffset = 0\r\n    for (\r\n      let j = 0;\r\n      j < segmentsCount;\r\n      j++, indexOffset += 6, pointOffset += VERTEX_PER_SEGMENT\r\n    ) {\r\n      index[indexOffset] = pointOffset\r\n      index[indexOffset + 1] = pointOffset + 1\r\n      index[indexOffset + 2] = pointOffset + 3\r\n      index[indexOffset + 3] = pointOffset\r\n      index[indexOffset + 4] = pointOffset + 2\r\n      index[indexOffset + 5] = pointOffset + 3\r\n    }\r\n    this.setIndex(new BufferAttribute(this._index, 1))\r\n\r\n    this.setAttribute(\r\n      'position',\r\n      new BufferAttribute(this._positions, POS_SIZE)\r\n    )\r\n    this.setAttribute('color', new BufferAttribute(this._colors, COL_SIZE))\r\n    this.setAttribute('alphaColor', new BufferAttribute(alpha, 1))\r\n    this.setAttribute(\r\n      'direction',\r\n      new BufferAttribute(this._directions, DIR_SIZE)\r\n    )\r\n  }\r\n}\r\n\r\nexport default ThickLinesGeometry\r\n",
		"import BaseLinesGeometry from './ThickLinesGeometry'\r\nimport { Box3, Sphere, Vector3 } from 'three'\r\n\r\n/**\r\n * This class represents geometry which consists lines. This can build bounding volumes\r\n * @constructor\r\n *\r\n * @param {number}  segmentsCount   Number of segments per chunk.\r\n */\r\nclass LinesGeometry extends BaseLinesGeometry {\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  computeBoundingSphere() {\r\n    const { boundingBox } = this\r\n    // Build bounding sphere\r\n    let radiusSquared = 0.0\r\n    const center = new Vector3()\r\n    if (boundingBox) {\r\n      boundingBox.getCenter(center)\r\n    }\r\n    const positions = this._positions\r\n    const sphere = this.boundingSphere || new Sphere()\r\n    const size = this._positions.length\r\n    const pos = new Vector3()\r\n    const posSize = this.getPositionSize()\r\n    for (let i = 0; i < size; i += posSize) {\r\n      pos.set(positions[i], positions[i + 1], positions[i + 2])\r\n      const lengthSquared = center.distanceToSquared(pos)\r\n      if (radiusSquared < lengthSquared) {\r\n        radiusSquared = lengthSquared\r\n      }\r\n    }\r\n    sphere.set(center, Math.sqrt(radiusSquared))\r\n    this.boundingSphere = sphere\r\n  }\r\n\r\n  computeBoundingBox() {\r\n    const positions = this._positions\r\n    const box = new Box3()\r\n    const size = this._positions.length\r\n    const tmpVec = new Vector3()\r\n    const posSize = this.getPositionSize()\r\n    for (let i = 0; i < size; i += posSize) {\r\n      tmpVec.set(positions[i], positions[i + 1], positions[i + 2])\r\n      box.expandByPoint(tmpVec)\r\n    }\r\n    this.boundingBox = box\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n    this.computeBoundingSphere()\r\n  }\r\n}\r\n\r\nexport default LinesGeometry\r\n",
		"import utils from '../../utils'\r\nimport gfxutils from '../gfxutils'\r\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry'\r\nimport { CylinderBufferGeometry, Matrix3, Vector3 } from 'three'\r\n\r\nconst VEC_SIZE = 3\r\nconst tmpVector = new Vector3()\r\nconst normMtx = new Matrix3()\r\n\r\nclass CylinderCollisionGeo extends ChunkedObjectsGeometry {\r\n  constructor(instanceCount, polyComplexity) {\r\n    const cylGeometry = new CylinderBufferGeometry(\r\n      1,\r\n      1,\r\n      1.0,\r\n      Math.max(3, polyComplexity),\r\n      2,\r\n      true\r\n    )\r\n    super(cylGeometry, instanceCount)\r\n\r\n    const chunkSize = this._chunkSize\r\n    this._chunkPos = this._chunkGeo.attributes.position.array\r\n    this._chunkNorms = this._chunkGeo.attributes.normal.array\r\n    this._tmpVector = utils.allocateTyped(Float32Array, chunkSize * VEC_SIZE)\r\n  }\r\n\r\n  setItem(itemIdx, botPos, topPos, itemRad) {\r\n    const chunkSize = this._chunkSize\r\n    const itemOffset = chunkSize * itemIdx * VEC_SIZE\r\n\r\n    const tmpArray = this._tmpVector\r\n    const geoPos = this._chunkPos\r\n    const geoNorm = this._chunkNorms\r\n\r\n    const mtx1 = gfxutils.calcCylinderMatrix(botPos, topPos, itemRad)\r\n    normMtx.getNormalMatrix(mtx1)\r\n    let idx\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE\r\n      tmpVector.fromArray(geoPos, idx)\r\n      tmpVector.applyMatrix4(mtx1)\r\n      tmpVector.toArray(tmpArray, idx)\r\n    }\r\n    this._positions.set(tmpArray, itemOffset)\r\n\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE\r\n      tmpVector.fromArray(geoNorm, idx)\r\n      tmpVector.applyMatrix3(normMtx)\r\n      tmpVector.toArray(tmpArray, idx)\r\n    }\r\n    this._normals.set(tmpArray, itemOffset)\r\n  }\r\n}\r\nexport default CylinderCollisionGeo\r\n",
		"import LinesGeometry from './LinesGeometry'\r\nimport CylinderCollisionGeo from './CylinderCollisionGeo'\r\n\r\nconst COLLISION_RAD = 0.1\r\n\r\n/**\r\n * This class represents geometry which consists of separate chunks.\r\n * Each chunk has same index and similar geometry with equal points and faces count.\r\n * Each chunk has by default only one color.\r\n * @constructor\r\n *\r\n * @param {number}  chunksCount     Total chunks count.\r\n * @param {number}  segmentsCount   Number of segments per chunk.\r\n * @param {boolean} enableCollision Enable or disable collision where each segment is\r\n *                                  a collidable cylinder.\r\n * collision geometry.\r\n */\r\nclass ChunkedLinesGeometry extends LinesGeometry {\r\n  constructor(chunksCount, segmentsCount, enableCollision) {\r\n    super(chunksCount * segmentsCount)\r\n    this._init(segmentsCount)\r\n    this._collisionGeo = enableCollision\r\n      ? new CylinderCollisionGeo(chunksCount * segmentsCount, 3)\r\n      : null\r\n  }\r\n\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  computeBoundingSphere() {\r\n    const collisionGeo = this._collisionGeo\r\n    if (collisionGeo) {\r\n      collisionGeo.computeBoundingSphere()\r\n      this.boundingSphere = collisionGeo.boundingSphere\r\n      return\r\n    }\r\n    super.computeBoundingSphere()\r\n  }\r\n\r\n  computeBoundingBox() {\r\n    const collisionGeo = this._collisionGeo\r\n    if (collisionGeo) {\r\n      collisionGeo.computeBoundingBox()\r\n      this.boundingBox = collisionGeo.boundingBox\r\n      return\r\n    }\r\n    super.computeBoundingBox()\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const collisionGeo = this._collisionGeo\r\n    if (!collisionGeo) {\r\n      return\r\n    }\r\n    const segCount = this._chunkSize\r\n    this._collisionGeo.raycast(raycaster, intersects)\r\n    for (let i = 0, n = intersects.length; i < n; ++i) {\r\n      let { chunkIdx } = intersects[i]\r\n      if (chunkIdx === undefined) {\r\n        continue\r\n      }\r\n      chunkIdx = (chunkIdx / segCount) | 0\r\n      intersects[i].chunkIdx = chunkIdx\r\n    }\r\n  }\r\n\r\n  setColor(chunkIdx, colorVal) {\r\n    const chunkSize = this._chunkSize\r\n    for (let i = chunkIdx * chunkSize, end = i + chunkSize; i < end; ++i) {\r\n      super.setColor(i, colorVal)\r\n    }\r\n  }\r\n\r\n  setSegment(chunkIdx, segIdx, pos1, pos2) {\r\n    const chunkSize = this._chunkSize\r\n    const idx = chunkIdx * chunkSize + segIdx\r\n    super.setSegment(idx, pos1, pos2)\r\n    if (this._collisionGeo) {\r\n      this._collisionGeo.setItem(\r\n        chunkIdx * chunkSize + segIdx,\r\n        pos1,\r\n        pos2,\r\n        COLLISION_RAD\r\n      )\r\n    }\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n    this.computeBoundingSphere()\r\n  }\r\n\r\n  setOpacity(chunkIndices, value) {\r\n    const chunkSize = this._chunkSize\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      const left = chunkIndices[i] * chunkSize\r\n      super.setOpacity(left, left + chunkSize - 1, value)\r\n    }\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const instanceCount = chunkIndices.length\r\n    const chunkSize = this._chunkSize\r\n    const subset = new ChunkedLinesGeometry(instanceCount, chunkSize, false)\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      const dstPtOffset = i * chunkSize\r\n      const startSegIdx = chunkIndices[i] * chunkSize\r\n      subset.setSegments(\r\n        dstPtOffset,\r\n        this.getSubsetSegments(startSegIdx, chunkSize)\r\n      )\r\n      subset.setColors(\r\n        dstPtOffset,\r\n        this.getSubsetColors(startSegIdx, chunkSize)\r\n      )\r\n    }\r\n\r\n    subset.boundingSphere = this.boundingSphere\r\n    subset.boundingBox = this.boundingBox\r\n    return [subset]\r\n  }\r\n\r\n  _init(chunkSize) {\r\n    this._chunkSize = chunkSize\r\n  }\r\n}\r\n\r\nexport default ChunkedLinesGeometry\r\n",
		"import LinesGeometry from './LinesGeometry'\r\nimport Simple2CCylindersGeometry from './Simple2CCylindersGeometry'\r\nimport { Vector3 } from 'three'\r\n\r\nconst COLLISION_RAD = 0.3\r\nconst tmpVector = new Vector3()\r\n\r\nclass TwoColorLinesGeometry extends LinesGeometry {\r\n  constructor(segmentsCount) {\r\n    super(segmentsCount * 2)\r\n    this._init(segmentsCount)\r\n    this._collisionGeo = new Simple2CCylindersGeometry(segmentsCount, 3)\r\n  }\r\n\r\n  setItem(itemIdx, botPos, topPos) {\r\n    this._collisionGeo.setItem(itemIdx, botPos, topPos, COLLISION_RAD)\r\n    const offset = 2 * itemIdx // there are two points per segment\r\n    tmpVector.lerpVectors(botPos, topPos, 0.5)\r\n    super.setSegment(offset, botPos, tmpVector)\r\n    super.setSegment(offset + 1, tmpVector, topPos)\r\n  }\r\n\r\n  setColor(itemIdx, colorVal1, colorVal2) {\r\n    const offset = 2 * itemIdx // there are two points per segment\r\n    super.setColor(offset, colorVal1)\r\n    super.setColor(offset + 1, colorVal2)\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    if (this._collisionGeo) {\r\n      this._collisionGeo.raycast(raycaster, intersects)\r\n    }\r\n  }\r\n\r\n  getSubset(segmentIndices) {\r\n    const instanceCount = segmentIndices.length\r\n    const subset = new TwoColorLinesGeometry(instanceCount, false)\r\n    for (let i = 0, n = instanceCount; i < n; ++i) {\r\n      const startSegIdx = segmentIndices[i]\r\n      subset.setSegments(i, this.getSubsetSegments(startSegIdx, 1))\r\n      subset.setColors(i, this.getSubsetColors(startSegIdx, 1))\r\n    }\r\n\r\n    subset.boundingSphere = this.boundingSphere\r\n    subset.boundingBox = this.boundingBox\r\n    return [subset]\r\n  }\r\n\r\n  _init(segmentsCount) {\r\n    this._segCounts = segmentsCount * 2\r\n  }\r\n}\r\n// (???)parent = LinesGeometry.prototype;\r\n\r\nexport default TwoColorLinesGeometry\r\n",
		"import ChunkedLinesGeometry from './ChunkedLinesGeometry'\r\nimport SphereCollisionGeo from './SphereCollisionGeo'\r\nimport { Vector3 } from 'three'\r\n\r\nconst vectors = [\r\n  new Vector3(1, 0, 0),\r\n  new Vector3(-1, 0, 0),\r\n  new Vector3(0, 1, 0),\r\n  new Vector3(0, -1, 0),\r\n  new Vector3(0, 0, 1),\r\n  new Vector3(0, 0, -1)\r\n]\r\nconst vecCount = vectors.length\r\nconst tempPos1 = new Vector3()\r\nconst tempPos2 = new Vector3()\r\n\r\nclass CrossGeometry extends SphereCollisionGeo(ChunkedLinesGeometry) {\r\n  constructor(chunksCount) {\r\n    super(chunksCount, chunksCount, (vecCount / 2) | 0, false)\r\n  }\r\n\r\n  setItem(itemIdx, itemPos, itemRad) {\r\n    this.setSphere(itemIdx, itemPos, itemRad)\r\n\r\n    for (let i = 0; i < vecCount / 2; ++i) {\r\n      const first = i * 2\r\n      tempPos1.x = itemPos.x + vectors[first].x * itemRad\r\n      tempPos1.y = itemPos.y + vectors[first].y * itemRad\r\n      tempPos1.z = itemPos.z + vectors[first].z * itemRad\r\n      const second = first + 1\r\n      tempPos2.x = itemPos.x + vectors[second].x * itemRad\r\n      tempPos2.y = itemPos.y + vectors[second].y * itemRad\r\n      tempPos2.z = itemPos.z + vectors[second].z * itemRad\r\n      this.setSegment(itemIdx, i, tempPos1, tempPos2)\r\n    }\r\n  }\r\n}\r\nexport default CrossGeometry\r\n",
		"import { BufferGeometry, Color } from 'three'\r\nimport utils from '../../utils'\r\n\r\nconst POS_RAD_SIZE = 4\r\nconst COLOR_SIZE = 3\r\nconst tmpColor = new Color()\r\n\r\n/**\r\n * This is a base class for isosurface algorithms.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\nclass IsoSurfaceGeometry extends BufferGeometry {\r\n  constructor(spheresCount, opts) {\r\n    super()\r\n\r\n    this._opts = opts\r\n    this.zClip = this._opts.zClip\r\n    this._posRad = utils.allocateTyped(\r\n      Float32Array,\r\n      spheresCount * POS_RAD_SIZE\r\n    )\r\n    this._colors = utils.allocateTyped(Float32Array, spheresCount * COLOR_SIZE)\r\n  }\r\n\r\n  setItem(chunkIdx, pos, radius) {\r\n    const posRad = this._posRad\r\n    let idx = POS_RAD_SIZE * chunkIdx\r\n    posRad[idx++] = pos.x\r\n    posRad[idx++] = pos.y\r\n    posRad[idx++] = pos.z\r\n    posRad[idx] = radius\r\n  }\r\n\r\n  setColor(chunkIdx, colorVal) {\r\n    tmpColor.set(colorVal)\r\n    const colors = this._colors\r\n    let idx = COLOR_SIZE * chunkIdx\r\n    colors[idx++] = tmpColor.r\r\n    colors[idx++] = tmpColor.g\r\n    colors[idx] = tmpColor.b\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n    this.computeBoundingSphere()\r\n  }\r\n\r\n  finishUpdate() {\r\n    this._build()\r\n  }\r\n\r\n  setOpacity() {\r\n    // not implemented\r\n  }\r\n\r\n  raycast() {}\r\n\r\n  getSubset() {\r\n    return []\r\n  }\r\n}\r\nexport default IsoSurfaceGeometry\r\n",
		"import utils from '../../utils'\r\n\r\n/**\r\n * Class for marching cube\r\n * Stores 8 points and 8 float values are stored together in linear array\r\n * Int values for has intersection or not - in integer32 linear array\r\n * Int values for bits flags - in integer32 linear array\r\n *\r\n */\r\nclass IsoSurfaceMarchCube {\r\n  constructor() {\r\n    this.pointsValuesLinear = null\r\n    this.hasIntersection = null\r\n    this.bitsInside = null\r\n  }\r\n\r\n  create(numCellsPerSide) {\r\n    const vx7000000 = 0x7000000\r\n    const n3 = numCellsPerSide * numCellsPerSide * numCellsPerSide\r\n    if (n3 > vx7000000) {\r\n      throw new Error('Too large cube dimension: lead to memory huge uasge')\r\n    }\r\n    this.pointsValuesLinear = utils.allocateTyped(\r\n      Float32Array,\r\n      (2 << (2 + 2)) * n3\r\n    )\r\n    this.hasIntersection = utils.allocateTyped(Int32Array, n3)\r\n    this.bitsInside = utils.allocateTyped(Int32Array, n3)\r\n    return 0\r\n  }\r\n\r\n  destroy() {\r\n    this.bitsInside = null\r\n    this.hasIntersection = null\r\n    this.pointsValuesLinear = null\r\n  }\r\n}\r\n\r\n/* eslint-disable no-magic-numbers */\r\nIsoSurfaceMarchCube.prototype.striIndicesMarchCube = [\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, 1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,\r\n  8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 2, 10, 0, 2, 9, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1,\r\n  -1, -1, -1, -1, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 2, 3, 11,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1,\r\n  -1, -1, -1, -1, -1, 3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, 0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1, 3, 9, 0, 3, 11,\r\n  9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1, 9, 8, 10, 10, 8, 11, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, 4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 8,\r\n  4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 1, 9, 4, 7, 1, 7, 3, 1, -1,\r\n  -1, -1, -1, -1, -1, -1, 1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, 3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, 9, 2, 10, 9, 0, 2,\r\n  8, 4, 7, -1, -1, -1, -1, -1, -1, -1, 2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1,\r\n  -1, -1, -1, 8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 4,\r\n  7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1, 9, 0, 1, 8, 4, 7, 2, 3, 11,\r\n  -1, -1, -1, -1, -1, -1, -1, 4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1,\r\n  -1, 3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1, 1, 11, 10, 1, 4,\r\n  11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1, 4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3,\r\n  -1, -1, -1, -1, 4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1, 9,\r\n  5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, 0, 8, 3,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, 8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1, 1,\r\n  2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 1, 2, 10, 4,\r\n  9, 5, -1, -1, -1, -1, -1, -1, -1, 5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1,\r\n  -1, -1, -1, 2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1, 9, 5, 4, 2,\r\n  3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 11, 2, 0, 8, 11, 4, 9, 5,\r\n  -1, -1, -1, -1, -1, -1, -1, 0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1,\r\n  -1, -1, 2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1, 10, 3, 11, 10, 1,\r\n  3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, 4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10,\r\n  -1, -1, -1, -1, 5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1, 5, 4,\r\n  8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, 9, 7, 8, 5, 7, 9, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, 9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1,\r\n  -1, -1, 0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1, 1, 5, 3, 3, 5,\r\n  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1,\r\n  -1, -1, -1, -1, -1, 10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1, 8, 0,\r\n  2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1, 2, 10, 5, 2, 5, 3, 3, 5, 7, -1,\r\n  -1, -1, -1, -1, -1, -1, 7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1,\r\n  -1, 9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1, 2, 3, 11, 0, 1, 8, 1,\r\n  7, 8, 1, 5, 7, -1, -1, -1, -1, 11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1,\r\n  -1, -1, -1, 9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1, 5, 7, 0, 5,\r\n  0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1, 11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0,\r\n  7, 5, 7, 0, -1, 11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 5, 10,\r\n  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 0, 1, 5, 10, 6, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, 1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1,\r\n  -1, 1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 6, 5, 1, 2,\r\n  6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1, 9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1,\r\n  -1, -1, -1, -1, 5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1, 2, 3, 11,\r\n  10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 0, 8, 11, 2, 0, 10, 6,\r\n  5, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1,\r\n  -1, -1, -1, 5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1, 6, 3, 11,\r\n  6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1, 0, 8, 11, 0, 11, 5, 0, 5, 1, 5,\r\n  11, 6, -1, -1, -1, -1, 3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1, 6,\r\n  5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 4, 7, 8, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1,\r\n  -1, -1, -1, -1, 1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, 10, 6,\r\n  5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1, 6, 1, 2, 6, 5, 1, 4, 7, 8, -1,\r\n  -1, -1, -1, -1, -1, -1, 1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1, 8,\r\n  4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1, 7, 3, 9, 7, 9, 4, 3, 2, 9, 5,\r\n  9, 6, 2, 6, 9, -1, 3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, 5,\r\n  10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1, 0, 1, 9, 4, 7, 8, 2, 3, 11,\r\n  5, 10, 6, -1, -1, -1, -1, 9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1,\r\n  8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1, 5, 1, 11, 5, 11, 6, 1,\r\n  0, 11, 7, 11, 4, 0, 4, 11, -1, 0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7,\r\n  -1, 6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1, 10, 4, 9, 6, 4, 10,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1,\r\n  -1, -1, -1, -1, -1, 10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1,\r\n  8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1, 1, 4, 9, 1, 2, 4, 2, 6,\r\n  4, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1,\r\n  -1, 0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 3, 2, 8, 2,\r\n  4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, 10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1,\r\n  -1, -1, -1, -1, -1, 0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1, 3,\r\n  11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1, 6, 4, 1, 6, 1, 10, 4, 8, 1,\r\n  2, 1, 11, 8, 11, 1, -1, 9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1,\r\n  8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1, 3, 11, 6, 3, 6, 0, 0, 6, 4,\r\n  -1, -1, -1, -1, -1, -1, -1, 6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, 7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1, 0, 7, 3, 0,\r\n  10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1, 10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8,\r\n  0, -1, -1, -1, -1, 10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1, 1,\r\n  2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1, 2, 6, 9, 2, 9, 1, 6, 7, 9, 0,\r\n  9, 3, 7, 3, 9, -1, 7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1, 7,\r\n  3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 11, 10, 6, 8, 10,\r\n  8, 9, 8, 6, 7, -1, -1, -1, -1, 2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7,\r\n  -1, 1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1, 11, 2, 1, 11, 1, 7,\r\n  10, 6, 1, 6, 7, 1, -1, -1, -1, -1, 8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3,\r\n  6, -1, 0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 8, 0, 7,\r\n  0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1, 7, 11, 6, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, 3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1,\r\n  9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 1, 9, 8, 3, 1, 11, 7,\r\n  6, -1, -1, -1, -1, -1, -1, -1, 10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, 1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, 2, 9, 0,\r\n  2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, 6, 11, 7, 2, 10, 3, 10, 8, 3,\r\n  10, 9, 8, -1, -1, -1, -1, 7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, 7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1, 2, 7, 6, 2, 3,\r\n  7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1, 1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6,\r\n  -1, -1, -1, -1, 10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1, 10,\r\n  7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1, 0, 3, 7, 0, 7, 10, 0, 10, 9,\r\n  6, 10, 7, -1, -1, -1, -1, 7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1,\r\n  -1, -1, 6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 6, 11,\r\n  3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1, 8, 6, 11, 8, 4, 6, 9, 0, 1, -1,\r\n  -1, -1, -1, -1, -1, -1, 9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1,\r\n  6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 3, 0, 11,\r\n  0, 6, 11, 0, 4, 6, -1, -1, -1, -1, 4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1,\r\n  -1, -1, -1, 10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1, 8, 2, 3, 8, 4,\r\n  2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, 0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, 1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1, 1, 9,\r\n  4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1, 8, 1, 3, 8, 6, 1, 8, 4, 6, 6,\r\n  10, 1, -1, -1, -1, -1, 10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1,\r\n  -1, 4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1, 10, 9, 4, 6, 10, 4, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, 0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, 5, 0,\r\n  1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, 11, 7, 6, 8, 3, 4, 3, 5, 4,\r\n  3, 1, 5, -1, -1, -1, -1, 9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1,\r\n  -1, 6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1, 7, 6, 11, 5, 4, 10,\r\n  4, 2, 10, 4, 0, 2, -1, -1, -1, -1, 3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7,\r\n  6, -1, 7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, 0, 8,\r\n  6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1, 3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1,\r\n  -1, -1, -1, 6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1, 9, 5, 4, 10, 1,\r\n  6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1, 1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9,\r\n  5, 4, -1, 4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1, 7, 6, 10, 7,\r\n  10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1, 6, 9, 5, 6, 11, 9, 11, 8, 9, -1,\r\n  -1, -1, -1, -1, -1, -1, 3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1,\r\n  0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1, 6, 11, 3, 6, 3, 5, 5,\r\n  3, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1,\r\n  -1, -1, -1, 0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1, 11, 8, 5, 11,\r\n  5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1, 6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3,\r\n  -1, -1, -1, -1, 5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1, 9, 5, 6,\r\n  9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1, 1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8,\r\n  2, 6, 2, 8, -1, 1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1,\r\n  3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1, 10, 1, 0, 10, 0, 6, 9, 5, 0, 5,\r\n  6, 0, -1, -1, -1, -1, 0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, 10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 5, 10,\r\n  7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 5, 10, 11, 7, 5, 8, 3,\r\n  0, -1, -1, -1, -1, -1, -1, -1, 5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1,\r\n  -1, -1, -1, 10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1, 11, 1, 2,\r\n  11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 1, 2, 7, 1, 7, 5, 7,\r\n  2, 11, -1, -1, -1, -1, 9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1, 7,\r\n  5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1, 2, 5, 10, 2, 3, 5, 3, 7, 5, -1,\r\n  -1, -1, -1, -1, -1, -1, 8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1,\r\n  9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1, 9, 8, 2, 9, 2, 1, 8, 7,\r\n  2, 10, 2, 5, 7, 5, 2, -1, 1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, 0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1, 9, 0, 3, 9, 3,\r\n  5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1, 9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, 5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1,\r\n  5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1, 0, 1, 9, 8, 4, 10, 8,\r\n  10, 11, 10, 4, 5, -1, -1, -1, -1, 10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3,\r\n  1, 4, -1, 2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1, 0, 4, 11, 0,\r\n  11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1, 0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8,\r\n  11, 8, 5, -1, 9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 5,\r\n  10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1, 5, 10, 2, 5, 2, 4, 4, 2, 0, -1,\r\n  -1, -1, -1, -1, -1, -1, 3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1, 5,\r\n  10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1, 8, 4, 5, 8, 5, 3, 3, 5, 1,\r\n  -1, -1, -1, -1, -1, -1, -1, 0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, 8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1, 9, 4, 5, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 11, 7, 4, 9, 11, 9, 10, 11, -1,\r\n  -1, -1, -1, -1, -1, -1, 0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1,\r\n  1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1, 3, 1, 4, 3, 4, 8, 1,\r\n  10, 4, 7, 4, 11, 10, 11, 4, -1, 4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1,\r\n  -1, -1, 9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1, 11, 7, 4, 11, 4,\r\n  2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1, 11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4,\r\n  -1, -1, -1, -1, 2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1, 9, 10, 7,\r\n  9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1, 3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10,\r\n  0, 4, 0, 10, -1, 1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4,\r\n  9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1, 4, 9, 1, 4, 1, 7, 0, 8, 1,\r\n  8, 7, 1, -1, -1, -1, -1, 4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, 4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 10, 8, 10,\r\n  11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 9, 3, 9, 11, 11, 9, 10,\r\n  -1, -1, -1, -1, -1, -1, -1, 0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1,\r\n  -1, -1, 3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 11,\r\n  1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1, 3, 0, 9, 3, 9, 11, 1, 2, 9, 2,\r\n  11, 9, -1, -1, -1, -1, 0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, 3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 8, 2,\r\n  8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1, 9, 10, 2, 0, 9, 2, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, 2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1,\r\n  -1, 1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 3, 8, 9,\r\n  1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 9, 1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, 0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1\r\n]\r\n/* eslint-enable no-magic-numbers */\r\n\r\nexport default IsoSurfaceMarchCube\r\n",
		"import IsoSurfaceMarchCube from './IsoSurfaceMarchCube'\r\nimport utils from '../../utils'\r\nimport { BufferAttribute, BufferGeometry, Matrix3, Vector3 } from 'three'\r\n\r\nconst edgeTable = [\r\n  0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c, 0x80c, 0x905, 0xa0f,\r\n  0xb06, 0xc0a, 0xd03, 0xe09, 0xf00, 0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f,\r\n  0x795, 0x69c, 0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90, 0x230,\r\n  0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c, 0xa3c, 0xb35, 0x83f, 0x936,\r\n  0xe3a, 0xf33, 0xc39, 0xd30, 0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5,\r\n  0x4ac, 0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0, 0x460, 0x569,\r\n  0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c, 0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a,\r\n  0x963, 0xa69, 0xb60, 0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc,\r\n  0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0, 0x650, 0x759, 0x453,\r\n  0x55a, 0x256, 0x35f, 0x55, 0x15c, 0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53,\r\n  0x859, 0x950, 0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc, 0xfcc,\r\n  0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0, 0x8c0, 0x9c9, 0xac3, 0xbca,\r\n  0xcc6, 0xdcf, 0xec5, 0xfcc, 0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9,\r\n  0x7c0, 0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c, 0x15c, 0x55,\r\n  0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650, 0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6,\r\n  0xfff, 0xcf5, 0xdfc, 0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\r\n  0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c, 0x36c, 0x265, 0x16f,\r\n  0x66, 0x76a, 0x663, 0x569, 0x460, 0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af,\r\n  0xaa5, 0xbac, 0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0, 0xd30,\r\n  0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c, 0x53c, 0x435, 0x73f, 0x636,\r\n  0x13a, 0x33, 0x339, 0x230, 0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895,\r\n  0x99c, 0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190, 0xf00, 0xe09,\r\n  0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c, 0x70c, 0x605, 0x50f, 0x406, 0x30a,\r\n  0x203, 0x109, 0x0\r\n]\r\n\r\nfunction _voxelGradientFast(v, point, grad) {\r\n  const g = v.getValue(point.x, point.y, point.z)\r\n  grad.set(g[0], g[1], g[2])\r\n}\r\n\r\n// Helper class GridCell\r\nclass GridCell {\r\n  constructor() {\r\n    this._arrSize = 8\r\n    this.p = new Array(this._arrSize)\r\n    this.g = new Array(this._arrSize)\r\n    this.val = new Array(this._arrSize)\r\n    for (let i = 0; i < this._arrSize; ++i) {\r\n      this.p[i] = new Vector3()\r\n      this.g[i] = new Vector3()\r\n    }\r\n    this.cubeIndex = 0\r\n  }\r\n}\r\n\r\n// Helper class Triangle\r\nclass Triangle {\r\n  constructor() {\r\n    this.a = {\r\n      p: new Vector3(),\r\n      n: new Vector3()\r\n    }\r\n\r\n    this.b = {\r\n      p: new Vector3(),\r\n      n: new Vector3()\r\n    }\r\n\r\n    this.c = {\r\n      p: new Vector3(),\r\n      n: new Vector3()\r\n    }\r\n  }\r\n}\r\n\r\nfunction createArray(arrSize) {\r\n  const arr = new Array(arrSize)\r\n  for (let i = 0; i < arrSize; ++i) {\r\n    arr[i] = new Vector3()\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nclass IsoSurface {\r\n  constructor() {\r\n    this._numTriangles = 0\r\n    this._numVertices = 0\r\n    this._position = []\r\n    this._normals = []\r\n    this._colors = null\r\n    this._indices = []\r\n    this._volumetricData = null\r\n    this._xAxis = new Vector3()\r\n    this._yAxis = new Vector3()\r\n    this._zAxis = new Vector3()\r\n    this._xDir = new Vector3()\r\n    this._yDir = new Vector3()\r\n    this._zDir = new Vector3()\r\n  }\r\n\r\n  _prepareAxesAndDirs() {\r\n    const volData = this._volumetricData\r\n\r\n    const cellSize = volData.getCellSize()\r\n\r\n    // calculate cell axes\r\n    const xAxis = this._xAxis\r\n    const yAxis = this._yAxis\r\n    const zAxis = this._zAxis\r\n    const xDir = this._xDir\r\n    const yDir = this._yDir\r\n    const zDir = this._zDir\r\n\r\n    xAxis.set(cellSize.x, 0, 0)\r\n    yAxis.set(0, cellSize.y, 0)\r\n    zAxis.set(0, 0, cellSize.z)\r\n\r\n    xDir.set(1, 0, 0)\r\n    yDir.set(0, 1, 0)\r\n    zDir.set(0, 0, 1)\r\n\r\n    // flip normals if coordinate system is in the wrong handedness\r\n    const tmp = new Vector3()\r\n    tmp.crossVectors(xDir, yDir)\r\n    if (tmp.dot(zDir) < 0) {\r\n      xDir.negate()\r\n      yDir.negate()\r\n      zDir.negate()\r\n    }\r\n\r\n    // check that the grid is in the all-positive octant of the coordinate system\r\n    if (\r\n      xDir.x < 0 ||\r\n      xDir.y < 0 ||\r\n      xDir.z < 0 ||\r\n      yDir.x < 0 ||\r\n      yDir.y < 0 ||\r\n      yDir.z < 0 ||\r\n      zDir.x < 0 ||\r\n      zDir.y < 0 ||\r\n      zDir.z < 0\r\n    ) {\r\n      return false\r\n    }\r\n\r\n    // check that the grid is axis-aligned\r\n    const notZero = (axe) => Math.abs(axe) > Number.EPSILON\r\n    return !(\r\n      notZero(xAxis.y) ||\r\n      notZero(xAxis.z) ||\r\n      notZero(yAxis.x) ||\r\n      notZero(yAxis.z) ||\r\n      notZero(zAxis.x) ||\r\n      notZero(zAxis.y)\r\n    )\r\n  }\r\n\r\n  _vertexInterp(isoLevel, grid, ind1, ind2, vertex, normal) {\r\n    const p1 = grid.p[ind1]\r\n    const p2 = grid.p[ind2]\r\n    const n1 = grid.g[ind1]\r\n    const n2 = grid.g[ind2]\r\n    const valP1 = grid.val[ind1]\r\n    const valP2 = grid.val[ind2]\r\n    const isoDiffP1 = isoLevel - valP1\r\n    const diffValP2P1 = valP2 - valP1\r\n\r\n    let mu = 0.0\r\n\r\n    if (Math.abs(diffValP2P1) > 0.0) {\r\n      mu = isoDiffP1 / diffValP2P1\r\n    }\r\n    mu = mu > 1.0 ? 1.0 : mu\r\n    vertex.lerpVectors(p1, p2, mu)\r\n    normal.lerpVectors(n1, n2, mu)\r\n  }\r\n\r\n  static _triTable = IsoSurfaceMarchCube.prototype.striIndicesMarchCube\r\n\r\n  static _arrSize = 12\r\n\r\n  static _firstIndices = [0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3]\r\n\r\n  static _secondIndices = [1, 2, 3, 0, 5, 6, 7, 4, 4, 5, 6, 7]\r\n\r\n  static _vertexList = createArray(IsoSurface._arrSize)\r\n\r\n  static _normalList = createArray(IsoSurface._arrSize)\r\n\r\n  _polygonize(grid, isoLevel, triangles) {\r\n    const { cubeIndex } = grid\r\n    let i = 0\r\n    const arrSize = IsoSurface._arrSize\r\n    const firstIndices = IsoSurface._firstIndices\r\n    const secondIndices = IsoSurface._secondIndices\r\n    const vertexList = IsoSurface._vertexList\r\n    const normalList = IsoSurface._normalList\r\n\r\n    for (; i < arrSize; ++i) {\r\n      if (edgeTable[cubeIndex] & (1 << i)) {\r\n        this._vertexInterp(\r\n          isoLevel,\r\n          grid,\r\n          firstIndices[i],\r\n          secondIndices[i],\r\n          vertexList[i],\r\n          normalList[i]\r\n        )\r\n      }\r\n    }\r\n\r\n    let triCount = 0\r\n    const triTblIdx = cubeIndex * 16\r\n    const triTable = IsoSurface._triTable\r\n\r\n    for (i = 0; triTable[triTblIdx + i] !== -1; i += 3) {\r\n      triangles[triCount].a.p.copy(vertexList[triTable[triTblIdx + i]])\r\n      triangles[triCount].a.n.copy(normalList[triTable[triTblIdx + i]])\r\n\r\n      triangles[triCount].b.p.copy(vertexList[triTable[triTblIdx + i + 1]])\r\n      triangles[triCount].b.n.copy(normalList[triTable[triTblIdx + i + 1]])\r\n\r\n      triangles[triCount].c.p.copy(vertexList[triTable[triTblIdx + i + 2]])\r\n      triangles[triCount].c.n.copy(normalList[triTable[triTblIdx + i + 2]])\r\n      ++triCount\r\n    }\r\n\r\n    return triCount\r\n  }\r\n\r\n  _doGridPosNorms(isoValue, step, appendSimple) {\r\n    const vol = this._volumetricData\r\n    const volData = this._volumetricData.getData()\r\n    const dim = vol.getDimensions()\r\n    const xSize = dim[0]\r\n    const ySize = dim[1]\r\n    const zSize = dim[2]\r\n    const stepX = step * vol.getStrideX()\r\n    const stepY = step * vol.getStrideY()\r\n    const stepZ = step * vol.getStrideZ()\r\n\r\n    const gc = new GridCell()\r\n    const gcVal = gc.val\r\n    const gcValSize = gc.val.length\r\n    const additions = [\r\n      new Vector3(0, 0, 0), // 0\r\n      new Vector3(step, 0, 0), // 1\r\n      new Vector3(step, step, 0), // 2\r\n      new Vector3(0, step, 0), // 3\r\n      new Vector3(0, 0, step), // 4\r\n      new Vector3(step, 0, step), // 5\r\n      new Vector3(step, step, step), // 6\r\n      new Vector3(0, step, step) // 7\r\n    ]\r\n\r\n    const tmpTriCount = 5\r\n    const triangles = new Array(tmpTriCount)\r\n    for (let j = 0; j < tmpTriCount; ++j) {\r\n      triangles[j] = new Triangle()\r\n    }\r\n\r\n    let appendVertex\r\n    const self = this\r\n    const positions = this._position\r\n    const normals = this._normals\r\n    if (appendSimple) {\r\n      // Special case for axis-aligned grid with positive unit vector normals\r\n      appendVertex = (function () {\r\n        const axis = new Vector3(self._xAxis.x, self._yAxis.y, self._zAxis.z)\r\n        return function (triVertex) {\r\n          const vertex = triVertex.p.clone()\r\n          vertex.multiply(axis)\r\n          positions.push(vertex.add(self._origin))\r\n          normals.push(triVertex.n.clone())\r\n        }\r\n      })()\r\n    } else {\r\n      appendVertex = (function () {\r\n        const posMtx = new Matrix3()\r\n        posMtx.set(\r\n          self._xAxis.x,\r\n          self._yAxis.x,\r\n          self._zAxis.x,\r\n          self._xAxis.y,\r\n          self._yAxis.y,\r\n          self._zAxis.y,\r\n          self._xAxis.z,\r\n          self._yAxis.z,\r\n          self._zAxis.z\r\n        )\r\n        const normMtx = new Matrix3()\r\n        normMtx.set(\r\n          self._xDir.x,\r\n          self._yDir.x,\r\n          self._zDir.x,\r\n          self._xDir.y,\r\n          self._yDir.y,\r\n          self._zDir.y,\r\n          self._xDir.z,\r\n          self._yDir.z,\r\n          self._zDir.z\r\n        )\r\n\r\n        return function (triVertex) {\r\n          positions.push(\r\n            triVertex.p.clone().applyMatrix3(posMtx).add(self._origin)\r\n          )\r\n          normals.push(triVertex.n.clone().applyMatrix3(normMtx))\r\n        }\r\n      })()\r\n    }\r\n    const indices = this._indices\r\n\r\n    let globTriCount = 0\r\n\r\n    for (let z = 0; z < zSize - step; z += step) {\r\n      for (let y = 0; y < ySize - step; y += step) {\r\n        let idx = vol.getDirectIdx(0, y, z)\r\n        for (let x = 0; x < xSize - step; x += step, idx += stepX) {\r\n          /* eslint-disable no-multi-spaces */\r\n          /* eslint-disable computed-property-spacing */\r\n          gcVal[0] = volData[idx]\r\n          gcVal[1] = volData[idx + stepX]\r\n          gcVal[3] = volData[idx + stepY]\r\n          gcVal[2] = volData[idx + stepX + stepY]\r\n          gcVal[4] = volData[idx + stepZ]\r\n          gcVal[5] = volData[idx + stepX + stepZ]\r\n          gcVal[7] = volData[idx + stepY + stepZ]\r\n          gcVal[6] = volData[idx + stepX + stepY + stepZ]\r\n          /* eslint-enable no-multi-spaces */\r\n          /* eslint-enable computed-property-spacing */\r\n\r\n          // Determine the index into the edge table which\r\n          // tells us which vertices are inside of the surface\r\n          let cubeIndex = 0\r\n          let i = 0\r\n          for (; i < gcValSize; ++i) {\r\n            if (gcVal[i] < isoValue) {\r\n              cubeIndex |= 1 << i\r\n            }\r\n          }\r\n\r\n          if (edgeTable[cubeIndex] === 0) {\r\n            continue\r\n          }\r\n\r\n          gc.cubeIndex = cubeIndex\r\n          for (i = 0; i < gcValSize; ++i) {\r\n            gc.p[i].set(\r\n              x + additions[i].x,\r\n              y + additions[i].y,\r\n              z + additions[i].z\r\n            )\r\n            _voxelGradientFast(this._gradient, gc.p[i], gc.g[i])\r\n          }\r\n\r\n          // calculate vertices and facets for this cube,\r\n          // calculate normals by interpolating between the negated\r\n          // normalized volume gradients for the 8 reference voxels\r\n          const triCount = this._polygonize(gc, isoValue, triangles)\r\n          globTriCount += triCount\r\n\r\n          // append triangles using different techniques\r\n          for (i = 0; i < triCount; ++i) {\r\n            indices.push(this._numTriangles * 3)\r\n            indices.push(this._numTriangles * 3 + 1)\r\n            indices.push(this._numTriangles * 3 + 2)\r\n            ++this._numTriangles\r\n\r\n            appendVertex(triangles[i].a)\r\n            appendVertex(triangles[i].b)\r\n            appendVertex(triangles[i].c)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return globTriCount\r\n  }\r\n\r\n  compute(volData, origin, isoValue, step) {\r\n    this._volumetricData = volData\r\n    this._origin = origin\r\n\r\n    this._gradient = volData.computeGradient()\r\n\r\n    this._doGridPosNorms(isoValue, step, this._prepareAxesAndDirs())\r\n  }\r\n\r\n  _remapIndices(vertexMap, idcCount) {\r\n    const indices = this._indices\r\n    const newIndices = utils.allocateTyped(Uint32Array, idcCount)\r\n    for (let i = 0; i < idcCount; ++i) {\r\n      indices[i] = vertexMap[indices[i]]\r\n      newIndices[i] = indices[i]\r\n    }\r\n    this._indices = newIndices\r\n  }\r\n\r\n  _remapVertices(vertices, normals, count) {\r\n    const newPositions = utils.allocateTyped(Float32Array, count * 3)\r\n    const newNormals = utils.allocateTyped(Float32Array, count * 3)\r\n    for (let i = 0; i < count; ++i) {\r\n      const pos = vertices[i]\r\n      newPositions[i * 3] = pos.x\r\n      newPositions[i * 3 + 1] = pos.y\r\n      newPositions[i * 3 + 2] = pos.z\r\n      const norm = normals[i].normalize()\r\n      newNormals[i * 3] = norm.x\r\n      newNormals[i * 3 + 1] = norm.y\r\n      newNormals[i * 3 + 2] = norm.z\r\n    }\r\n    this._position = newPositions\r\n    this._normals = newNormals\r\n  }\r\n\r\n  vertexFusion(offset, len) {\r\n    const faceVer = this._indices.length\r\n    const vertices = this._position\r\n    const normals = this._normals\r\n    const oldVerCount = vertices.length | 0\r\n    if (faceVer === 0 || oldVerCount === 0) {\r\n      return\r\n    }\r\n    const vMap = utils.allocateTyped(Uint32Array, oldVerCount)\r\n    vMap[0] = 0\r\n    let newVer = 1\r\n\r\n    let i = 1\r\n    for (; i < oldVerCount; ++i) {\r\n      const start = newVer - offset < 0 ? 0 : newVer - offset\r\n      const end = start + len > newVer ? newVer : start + len\r\n      let matchedIndex = -1\r\n\r\n      for (let j = start; j < end; ++j) {\r\n        if (Math.abs(vertices[i] - vertices[j]) < Number.EPSILON) {\r\n          matchedIndex = j\r\n          break\r\n        }\r\n      }\r\n\r\n      if (matchedIndex !== -1) {\r\n        vMap[i] = matchedIndex\r\n      } else {\r\n        vertices[newVer].copy(vertices[i])\r\n        normals[newVer].copy(normals[i])\r\n        vMap[i] = newVer\r\n        ++newVer\r\n      }\r\n    }\r\n\r\n    this._remapIndices(vMap, faceVer)\r\n    this._remapVertices(vertices, normals, newVer)\r\n  }\r\n\r\n  // Assign per-vertex colors from a volumetric texture map (same dimensions as the original volumetric data).\r\n  // Along with color dominating atom is determined for each vertex\r\n  // and vertices with atom out of \"visible\" subset get filtered out.\r\n  // XXX only handles orthogonal volumes currently\r\n  setColorVolTex(colorMap, atomMap, atomWeightMap, visibilitySelector) {\r\n    let i\r\n    let idx\r\n    const numVerts = this._position.length / 3\r\n    const vertices = this._position\r\n    const origin = this._origin\r\n    const dim = this._volumetricData.getDimensions()\r\n    const xs = dim[0] - 1\r\n    const ys = dim[1] - 1\r\n    const zs = dim[2] - 1\r\n\r\n    const colorData = colorMap.getData()\r\n    const strideX = colorMap.getStrideX()\r\n    const strideY = colorMap.getStrideY()\r\n    const strideZ = colorMap.getStrideZ()\r\n\r\n    let atomWeightData\r\n    let atomStrideX\r\n    let atomStrideY\r\n    let atomStrideZ\r\n\r\n    if (visibilitySelector !== null) {\r\n      atomWeightData = atomWeightMap.getData()\r\n      atomStrideX = atomWeightMap.getStrideX()\r\n      atomStrideY = atomWeightMap.getStrideY()\r\n      atomStrideZ = atomWeightMap.getStrideZ()\r\n    }\r\n\r\n    const xInv = 1.0 / this._xAxis.x\r\n    const yInv = 1.0 / this._yAxis.y\r\n    const zInv = 1.0 / this._zAxis.z\r\n\r\n    let atomLookup = []\r\n    let atomWeights = []\r\n    const colors = utils.allocateTyped(Float32Array, numVerts * 3)\r\n\r\n    function interp(mu, idx1, idx2, c) {\r\n      c[0] = (1 - mu) * colorData[idx1] + mu * colorData[idx2]\r\n      c[1] = (1 - mu) * colorData[idx1 + 1] + mu * colorData[idx2 + 1]\r\n      c[2] = (1 - mu) * colorData[idx1 + 2] + mu * colorData[idx2 + 2]\r\n    }\r\n\r\n    function collectWeight(ai, coefX, coefY, coefZ) {\r\n      const a = atomMap[ai] // atomWeightMap is a scalar field, so index into atom map should be the same\r\n      if (a != null) {\r\n        atomLookup[a.index] = a\r\n        const w = coefX * coefY * coefZ * atomWeightData[ai]\r\n        if (typeof atomWeights[a.index] === 'undefined') {\r\n          atomWeights[a.index] = w\r\n        } else {\r\n          atomWeights[a.index] += w\r\n        }\r\n      }\r\n    }\r\n\r\n    const vMap = utils.allocateTyped(Int32Array, numVerts)\r\n    let newVerCount = 0\r\n\r\n    for (i = 0; i < numVerts; i++) {\r\n      const ind = i * 3\r\n      const vx = (vertices[ind] - origin.x) * xInv\r\n      const vy = (vertices[ind + 1] - origin.y) * yInv\r\n      const vz = (vertices[ind + 2] - origin.z) * zInv\r\n      const x = Math.min(Math.max(vx, 0), xs) | 0\r\n      const y = Math.min(Math.max(vy, 0), ys) | 0\r\n      const z = Math.min(Math.max(vz, 0), zs) | 0\r\n\r\n      const mux = vx - x\r\n      const muy = vy - y\r\n      const muz = vz - z\r\n\r\n      if (visibilitySelector != null) {\r\n        // collect atom weights\r\n        atomLookup = []\r\n        atomWeights = []\r\n        idx = atomWeightMap.getDirectIdx(x, y, z)\r\n        collectWeight(idx, 1 - mux, 1 - muy, 1 - muz)\r\n        collectWeight(idx + atomStrideX, mux, 1 - muy, 1 - muz)\r\n        collectWeight(idx + atomStrideY, 1 - mux, muy, 1 - muz)\r\n        collectWeight(idx + atomStrideX + atomStrideY, mux, muy, 1 - muz)\r\n        collectWeight(idx + atomStrideZ, 1 - mux, 1 - muy, muz)\r\n        collectWeight(idx + atomStrideX + atomStrideZ, mux, 1 - muy, muz)\r\n        collectWeight(idx + atomStrideY + atomStrideZ, 1 - mux, muy, muz)\r\n        collectWeight(\r\n          idx + atomStrideX + atomStrideY + atomStrideZ,\r\n          mux,\r\n          muy,\r\n          muz\r\n        )\r\n\r\n        // find dominant atom\r\n        let maxWeight = 0.0\r\n        let dominantIdx = -1\r\n        for (const atomIdx in atomWeights) {\r\n          if (atomWeights[atomIdx] > maxWeight) {\r\n            dominantIdx = atomIdx\r\n            maxWeight = atomWeights[atomIdx]\r\n          }\r\n        }\r\n\r\n        if (\r\n          dominantIdx < 0 ||\r\n          !visibilitySelector.includesAtom(atomLookup[dominantIdx])\r\n        ) {\r\n          // this vertex doesn't belong to visible subset and will be skipped\r\n          vMap[i] = -1\r\n          continue\r\n        }\r\n      }\r\n\r\n      vMap[i] = newVerCount++\r\n\r\n      // color tri-linear interpolation\r\n      const dx = x < xs ? strideX : 0\r\n      const dy = y < ys ? strideY : 0\r\n      const dz = z < zs ? strideZ : 0\r\n\r\n      const c0 = [0, 0, 0]\r\n      const c1 = [0, 0, 0]\r\n      const c2 = [0, 0, 0]\r\n      const c3 = [0, 0, 0]\r\n\r\n      idx = colorMap.getDirectIdx(x, y, z)\r\n      interp(mux, idx, idx + dx, c0)\r\n      interp(mux, idx + dy, idx + dx + dy, c1)\r\n      interp(mux, idx + dz, idx + dx + dz, c2)\r\n      interp(mux, idx + dy + dz, idx + dx + dy + dz, c3)\r\n\r\n      const cz0 = [0, 0, 0]\r\n      cz0[0] = (1 - muy) * c0[0] + muy * c1[0]\r\n      cz0[1] = (1 - muy) * c0[1] + muy * c1[1]\r\n      cz0[2] = (1 - muy) * c0[2] + muy * c1[2]\r\n\r\n      const cz1 = [0, 0, 0]\r\n      cz1[0] = (1 - muy) * c2[0] + muy * c3[0]\r\n      cz1[1] = (1 - muy) * c2[1] + muy * c3[1]\r\n      cz1[2] = (1 - muy) * c2[2] + muy * c3[2]\r\n\r\n      colors[ind] = (1 - muz) * cz0[0] + muz * cz1[0]\r\n      colors[ind + 1] = (1 - muz) * cz0[1] + muz * cz1[1]\r\n      colors[ind + 2] = (1 - muz) * cz0[2] + muz * cz1[2]\r\n    }\r\n    this._colors = colors\r\n\r\n    if (visibilitySelector != null) {\r\n      // shift visible vertices towards beginning of array\r\n      for (i = 0; i < numVerts; ++i) {\r\n        const j = vMap[i]\r\n        if (j < 0) {\r\n          continue\r\n        }\r\n\r\n        // assert: j <= i\r\n        this._position[j * 3] = this._position[i * 3]\r\n        this._position[j * 3 + 1] = this._position[i * 3 + 1]\r\n        this._position[j * 3 + 2] = this._position[i * 3 + 2]\r\n        this._normals[j * 3] = this._normals[i * 3]\r\n        this._normals[j * 3 + 1] = this._normals[i * 3 + 1]\r\n        this._normals[j * 3 + 2] = this._normals[i * 3 + 2]\r\n        this._colors[j * 3] = this._colors[i * 3]\r\n        this._colors[j * 3 + 1] = this._colors[i * 3 + 1]\r\n        this._colors[j * 3 + 2] = this._colors[i * 3 + 2]\r\n      }\r\n\r\n      // rebuild index list\r\n      const numTriangles = this._indices.length / 3\r\n      let newTriCount = 0\r\n      for (i = 0; i < numTriangles; ++i) {\r\n        const i0 = vMap[this._indices[3 * i]]\r\n        const i1 = vMap[this._indices[3 * i + 1]]\r\n        const i2 = vMap[this._indices[3 * i + 2]]\r\n        if (i0 >= 0 && i1 >= 0 && i2 >= 0) {\r\n          this._indices[3 * newTriCount] = i0\r\n          this._indices[3 * newTriCount + 1] = i1\r\n          this._indices[3 * newTriCount + 2] = i2\r\n          ++newTriCount\r\n        }\r\n      }\r\n\r\n      // shrink arrays to data size\r\n      this._position = new Float32Array(\r\n        this._position.buffer.slice(0, newVerCount * 3 * 4)\r\n      )\r\n      this._normals = new Float32Array(\r\n        this._normals.buffer.slice(0, newVerCount * 3 * 4)\r\n      )\r\n      this._colors = new Float32Array(\r\n        this._colors.buffer.slice(0, newVerCount * 3 * 4)\r\n      )\r\n      this._indices = new Uint32Array(\r\n        this._indices.buffer.slice(0, newTriCount * 3 * 4)\r\n      )\r\n    }\r\n  }\r\n\r\n  toMesh() {\r\n    const geo = new BufferGeometry()\r\n    geo.setIndex(new BufferAttribute(this._indices, 1))\r\n    geo.setAttribute('position', new BufferAttribute(this._position, 3))\r\n    geo.setAttribute('normal', new BufferAttribute(this._normals, 3))\r\n    geo.setAttribute('color', new BufferAttribute(this._colors, 3))\r\n    geo.computeBoundingSphere()\r\n    return geo\r\n  }\r\n}\r\nexport default IsoSurface\r\n",
		"import IsoSurfaceGeometry from './IsoSurfaceGeometry'\r\nimport IsoSurface from './IsoSurface'\r\nimport utils from '../../utils'\r\nimport { Box3, BufferAttribute, Vector3 } from 'three'\r\n\r\n/**\r\n * This is a base class for volumetric maps based isosurface algorithms.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\n\r\nclass VolumeSurfaceGeometry extends IsoSurfaceGeometry {\r\n  _build() {\r\n    const params = this._opts\r\n    this.numVoxels = [128, 128, 128]\r\n    this.xAxis = new Vector3(1.0, 0.0, 0.0)\r\n    this.yAxis = new Vector3(0.0, 1.0, 0.0)\r\n    this.zAxis = new Vector3(0.0, 0.0, 1.0)\r\n\r\n    this.origin = new Vector3(0.0, 0.0, 0.0)\r\n    this._visibilitySelector = params.visibilitySelector\r\n\r\n    this._calcSurface(params)\r\n  }\r\n\r\n  _findMinMax(posRadArray) {\r\n    const itemSize = 4\r\n    const itemsCount = posRadArray.length / itemSize\r\n    const maxPosRad = [\r\n      posRadArray[0],\r\n      posRadArray[1],\r\n      posRadArray[2],\r\n      posRadArray[3]\r\n    ]\r\n    const minPosRad = [\r\n      posRadArray[0],\r\n      posRadArray[1],\r\n      posRadArray[2],\r\n      posRadArray[3]\r\n    ]\r\n    for (let i = 1; i < itemsCount; ++i) {\r\n      const ind = i * itemSize\r\n\r\n      for (let itemIdx = 0; itemIdx < itemSize; ++itemIdx) {\r\n        const tmpVal = posRadArray[ind + itemIdx]\r\n        maxPosRad[itemIdx] = Math.max(tmpVal, maxPosRad[itemIdx])\r\n        minPosRad[itemIdx] = Math.min(tmpVal, minPosRad[itemIdx])\r\n      }\r\n    }\r\n    return { maxPosRad, minPosRad }\r\n  }\r\n\r\n  _findNumVoxels(posRadArray, params) {\r\n    const { numVoxels } = this\r\n    const minMaxValues = this._findMinMax(posRadArray)\r\n    const minCoordRad = minMaxValues.minPosRad\r\n    const maxCoordRad = minMaxValues.maxPosRad\r\n\r\n    // minrad\r\n    if (minCoordRad[3] > 4.0) {\r\n      params.gridSpacing *= minCoordRad[3]\r\n    }\r\n\r\n    let gridPadding = params.radScale * maxCoordRad[3] * 1.7\r\n    let padRad = gridPadding\r\n    padRad = 0.65 * Math.sqrt((4.0 / 3.0) * Math.PI * padRad * padRad * padRad)\r\n    gridPadding = Math.max(gridPadding, padRad)\r\n\r\n    let i = 0\r\n    for (; i < 3; ++i) {\r\n      minCoordRad[i] -= gridPadding\r\n      maxCoordRad[i] += gridPadding\r\n    }\r\n\r\n    for (i = 0; i < 3; ++i) {\r\n      numVoxels[i] = Math.ceil(\r\n        (maxCoordRad[i] - minCoordRad[i]) / params.gridSpacing\r\n      )\r\n    }\r\n    this.xAxis.x = (numVoxels[0] - 1) * params.gridSpacing\r\n    this.yAxis.y = (numVoxels[1] - 1) * params.gridSpacing\r\n    this.zAxis.z = (numVoxels[2] - 1) * params.gridSpacing\r\n    ;[this.origin.x, this.origin.y, this.origin.z] = minCoordRad\r\n\r\n    return { bbox: minMaxValues, dim: numVoxels }\r\n  }\r\n\r\n  _makeSurface(surface, params) {\r\n    const isoSurf = new IsoSurface()\r\n    isoSurf.compute(surface.volMap, this.origin, params.isoValue, 1)\r\n    isoSurf.vertexFusion(9, 9) // normalization is included\r\n\r\n    if (isoSurf._numTriangles > 0) {\r\n      isoSurf.setColorVolTex(\r\n        surface.volTexMap,\r\n        surface.atomMap,\r\n        surface.atomWeightMap,\r\n        this._visibilitySelector\r\n      )\r\n      this.setIndex(new BufferAttribute(isoSurf._indices, 1))\r\n      this.setAttribute('position', new BufferAttribute(isoSurf._position, 3))\r\n      this.setAttribute('normal', new BufferAttribute(isoSurf._normals, 3))\r\n      this.setAttribute('color', new BufferAttribute(isoSurf._colors, 3))\r\n    } else {\r\n      // geometry should have at least empty position attributes to be processed in wireframe mode by three.js\r\n      this.setAttribute(\r\n        'position',\r\n        new BufferAttribute(utils.allocateTyped(Float32Array, 0), 3)\r\n      )\r\n    }\r\n  }\r\n\r\n  _calcSurface(params) {\r\n    const packedArrays = {\r\n      posRad: this._posRad,\r\n      colors: this._colors,\r\n      atoms: this._opts.atoms\r\n    }\r\n\r\n    if (packedArrays.posRad.length === 0) {\r\n      return\r\n    }\r\n    const boundaries = this._findNumVoxels(packedArrays.posRad, params)\r\n\r\n    const box = new Box3(\r\n      this.origin,\r\n      new Vector3(this.xAxis.x, this.yAxis.y, this.zAxis.z).add(this.origin)\r\n    )\r\n    const surface = this._computeSurface(packedArrays, box, boundaries, params)\r\n\r\n    this._makeSurface(surface, params)\r\n  }\r\n}\r\n\r\nexport default VolumeSurfaceGeometry\r\n",
		"import VolumeSurfaceGeometry from './VolumeSurfaceGeometry'\r\nimport chem from '../../chem'\r\n\r\nconst { Volume } = chem\r\n\r\n/**\r\n * This class implements 'quick' isosurface geometry generation algorithm.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\n\r\nclass QuickSurfGeometry extends VolumeSurfaceGeometry {\r\n  _computeSurface(packedArrays, box, boundaries, params) {\r\n    // beware of shifting this multiple times!\r\n    this._shiftByOrigin(packedArrays.posRad)\r\n\r\n    const surface = {\r\n      volMap: new Volume(Float32Array, this.numVoxels, box),\r\n      volTexMap: new Volume(Float32Array, this.numVoxels, box, 3)\r\n    }\r\n\r\n    if (this._visibilitySelector != null) {\r\n      surface.atomMap = []\r\n      surface.atomWeightMap = new Volume(Float32Array, this.numVoxels, box)\r\n    }\r\n\r\n    this.gaussdensity(surface, packedArrays, null, params)\r\n    return surface\r\n  }\r\n\r\n  gaussdensity(surface, packedArrays, atomicNum, params) {\r\n    const numAtoms = packedArrays.posRad.length / 4\r\n    const { posRad, colors } = packedArrays\r\n    const { numVoxels } = this\r\n    const { radScale, gaussLim, gridSpacing } = params\r\n    const invIsoValue = 1.0 / params.isoValue\r\n    const invGridSpacing = 1.0 / gridSpacing\r\n    const maxVoxelX = numVoxels[0] - 1\r\n    const maxVoxelY = numVoxels[1] - 1\r\n    const maxVoxelZ = numVoxels[2] - 1\r\n    // TODO is densityMap and volTexMap initialized?\r\n\r\n    const { volMap, volTexMap } = surface\r\n    const volData = volMap.getData()\r\n    const strideX = volMap.getStrideX()\r\n\r\n    const volTexData = volTexMap.getData()\r\n    const texStrideX = volTexMap.getStrideX()\r\n\r\n    let atomWeightData\r\n    if (this._visibilitySelector != null) {\r\n      atomWeightData = surface.atomWeightMap.getData()\r\n    }\r\n\r\n    const { atomMap } = surface\r\n\r\n    for (let i = 0; i < numAtoms; ++i) {\r\n      const ind = i * 4\r\n      const scaledRad = posRad[ind + 3] * radScale\r\n      const atomicNumFactor = atomicNum === null ? 1.0 : atomicNum[i]\r\n      const radInv = 1 / (2 * scaledRad * scaledRad)\r\n      let radLim = gaussLim * scaledRad\r\n      const radLim2 = radLim * radLim\r\n      radLim *= invGridSpacing\r\n\r\n      let tmp = posRad[ind] * invGridSpacing\r\n      const xMin = Math.max((tmp - radLim) | 0, 0)\r\n      const xMax = Math.min((tmp + radLim) | 0, maxVoxelX)\r\n      tmp = posRad[ind + 1] * invGridSpacing\r\n      const yMin = Math.max((tmp - radLim) | 0, 0)\r\n      const yMax = Math.min((tmp + radLim) | 0, maxVoxelY)\r\n      tmp = posRad[ind + 2] * invGridSpacing\r\n      const zMin = Math.max((tmp - radLim) | 0, 0)\r\n      const zMax = Math.min((tmp + radLim) | 0, maxVoxelZ)\r\n\r\n      let dz = zMin * gridSpacing - posRad[ind + 2]\r\n      for (let z = zMin; z <= zMax; ++z, dz += gridSpacing) {\r\n        let dy = yMin * gridSpacing - posRad[ind + 1]\r\n        for (let y = yMin; y <= yMax; ++y, dy += gridSpacing) {\r\n          const dy2dz2 = dy * dy + dz * dz\r\n\r\n          if (dy2dz2 >= radLim2) {\r\n            continue\r\n          }\r\n\r\n          let addr = volMap.getDirectIdx(xMin, y, z)\r\n          let texAddr = volTexMap.getDirectIdx(xMin, y, z)\r\n          let dx = xMin * gridSpacing - posRad[ind]\r\n          for (\r\n            let x = xMin;\r\n            x <= xMax;\r\n            ++x, dx += gridSpacing, addr += strideX, texAddr += texStrideX\r\n          ) {\r\n            const r2 = dx * dx + dy2dz2\r\n            const expVal = -r2 * radInv\r\n\r\n            let density = Math.exp(expVal) * atomicNumFactor\r\n\r\n            // store most relevant atom (with highest density)\r\n            if (\r\n              this._visibilitySelector != null &&\r\n              density > atomWeightData[addr]\r\n            ) {\r\n              // NOSONAR\r\n              atomWeightData[addr] = density\r\n              // we use same index into atom map and atomWeightMap\r\n              atomMap[addr] = packedArrays.atoms[i]\r\n            }\r\n\r\n            volData[addr] += density\r\n\r\n            // TODO check for volTexMap routine?\r\n            density *= invIsoValue\r\n            const colInd = i * 3\r\n            volTexData[texAddr] += density * colors[colInd]\r\n            volTexData[texAddr + 1] += density * colors[colInd + 1]\r\n            volTexData[texAddr + 2] += density * colors[colInd + 2]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _shiftByOrigin(posRadArray) {\r\n    const originX = this.origin.x\r\n    const originY = this.origin.y\r\n    const originZ = this.origin.z\r\n\r\n    const itemSize = 4\r\n    const itemsCount = posRadArray.length / itemSize\r\n    for (let i = 0; i < itemsCount; ++i) {\r\n      const ind = i * itemSize\r\n\r\n      posRadArray[ind] -= originX\r\n      posRadArray[ind + 1] -= originY\r\n      posRadArray[ind + 2] -= originZ\r\n    }\r\n  }\r\n}\r\n\r\nexport default QuickSurfGeometry\r\n",
		"import utils from '../../utils'\r\nimport { Vector3 } from 'three'\r\n\r\n/**\r\n * Modifed from SpatialHash\r\n *\r\n * Main differences are:\r\n * - Optimized grid size to ensure we only ever need to look +/-1 cell\r\n * - Aware of atomic radii and will only output atoms within rAtom + rExtra\r\n *   (see withinRadii method)\r\n *\r\n * (Uses rounding rather than bitshifting as consequence of arbitrary grid size)\r\n * @class\r\n * @param {Float32Array} posRad - x, y, z coordinates and radiuses\r\n * @param {Float32Array} min - xyz min coordinates\r\n * @param {Float32Array} max - xyz max coordinates\r\n * @param {number} maxDistance - max distance\r\n */\r\nfunction AVHash(posRad, min, max, maxDistance) {\r\n  const itemSize = 4\r\n  const nAtoms = posRad.length / itemSize\r\n\r\n  const minX = min[0]\r\n  const minY = min[1]\r\n  const minZ = min[2]\r\n\r\n  const maxX = max[0]\r\n  const maxY = max[1]\r\n  const maxZ = max[2]\r\n\r\n  function hashFunc(w, minW) {\r\n    return Math.floor((w - minW) / maxDistance)\r\n  }\r\n\r\n  const iDim = hashFunc(maxX, minX) + 1\r\n  const jDim = hashFunc(maxY, minY) + 1\r\n  const kDim = hashFunc(maxZ, minZ) + 1\r\n\r\n  const nCells = iDim * jDim * kDim\r\n\r\n  const jkDim = jDim * kDim\r\n\r\n  /* Get cellID for cartesian x,y,z */\r\n  const cellID = function (x, y, z) {\r\n    return (\r\n      (hashFunc(x, minX) * jDim + hashFunc(y, minY)) * kDim + hashFunc(z, minZ)\r\n    )\r\n  }\r\n\r\n  /* Initial building, could probably be optimized further */\r\n  const preHash = []\r\n  let i\r\n  let cid\r\n  for (i = 0; i < nAtoms; i++) {\r\n    const iIdx = itemSize * i\r\n    cid = cellID(posRad[iIdx], posRad[iIdx + 1], posRad[iIdx + 2])\r\n\r\n    if (preHash[cid] === undefined) {\r\n      preHash[cid] = [i]\r\n    } else {\r\n      preHash[cid].push(i)\r\n    }\r\n  }\r\n\r\n  const cellOffsets = utils.allocateTyped(Uint32Array, nCells)\r\n  const cellLengths = utils.allocateTyped(Uint16Array, nCells)\r\n  const data = utils.allocateTyped(Uint32Array, nAtoms)\r\n\r\n  let offset = 0\r\n  let maxCellLength = 0\r\n  let j\r\n  for (i = 0; i < nCells; i++) {\r\n    const start = (cellOffsets[i] = offset)\r\n\r\n    const subArray = preHash[i]\r\n\r\n    if (subArray !== undefined) {\r\n      for (j = 0; j < subArray.length; j++) {\r\n        data[offset] = subArray[j]\r\n        offset++\r\n      }\r\n    }\r\n\r\n    const cellLength = offset - start\r\n    cellLengths[i] = cellLength\r\n\r\n    if (cellLength > maxCellLength) {\r\n      maxCellLength = cellLength\r\n    }\r\n  }\r\n\r\n  // Maximum number of neighbours we could ever produce (27 adjacent cells of equal population)\r\n  this.neighbourListLength = 27 * maxCellLength + 1\r\n\r\n  /**\r\n   * Populate the supplied out array with atom indices that are within rAtom + rExtra\r\n   * of x,y,z\r\n   *\r\n   * -1 in out array indicates the end of the list\r\n   *\r\n   * @param  {number} x - x coordinate\r\n   * @param  {number} y - y coordinate\r\n   * @param  {number} z - z coordinate\r\n   * @param  {number} rExtra - additional radius\r\n   * @param  {Float32Array} out - pre-allocated output array\r\n   * @return {undefined}\r\n   */\r\n  this.withinRadii = function (x, y, z, rExtra, out) {\r\n    let outIdx = 0\r\n\r\n    const nearI = hashFunc(x, minX)\r\n    const nearJ = hashFunc(y, minY)\r\n    const nearK = hashFunc(z, minZ)\r\n\r\n    const loI = Math.max(0, nearI - 1)\r\n    const loJ = Math.max(0, nearJ - 1)\r\n    const loK = Math.max(0, nearK - 1)\r\n\r\n    const hiI = Math.min(iDim - 1, nearI + 1)\r\n    const hiJ = Math.min(jDim - 1, nearJ + 1)\r\n    const hiK = Math.min(kDim - 1, nearK + 1)\r\n\r\n    for (i = loI; i <= hiI; ++i) {\r\n      const iOffset = i * jkDim\r\n\r\n      for (j = loJ; j <= hiJ; ++j) {\r\n        const jOffset = j * kDim\r\n\r\n        for (let k = loK; k <= hiK; ++k) {\r\n          cid = iOffset + jOffset + k\r\n\r\n          const cellStart = cellOffsets[cid]\r\n          const cellEnd = cellStart + cellLengths[cid]\r\n\r\n          for (let dataIndex = cellStart; dataIndex < cellEnd; dataIndex++) {\r\n            const atomIndex = data[dataIndex]\r\n            const baseIndex = itemSize * atomIndex\r\n            const dx = posRad[baseIndex] - x\r\n            const dy = posRad[baseIndex + 1] - y\r\n            const dz = posRad[baseIndex + 2] - z\r\n            const rSum = posRad[baseIndex + 3] + rExtra\r\n\r\n            if (dx * dx + dy * dy + dz * dz <= rSum * rSum) {\r\n              out[outIdx++] = data[dataIndex]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Add terminator\r\n    out[outIdx] = -1\r\n  }\r\n}\r\nfunction ContactSurface(packedArrays, boundaries, params, _indexList) {\r\n  // Field generation method adapted from AstexViewer (Mike Hartshorn)\r\n  // by Fred Ludlow.\r\n  // Other parts based heavily on NGL (Alexander Rose) EDT Surface class\r\n  //\r\n  // Should work as a drop-in alternative to EDTSurface (though some of\r\n  // the EDT paramters are not relevant in this method).\r\n\r\n  const itemSize = 4\r\n  const { posRad, colors, atoms } = packedArrays\r\n  const nAtoms = posRad.length / itemSize\r\n\r\n  const { bbox } = boundaries\r\n\r\n  const min = bbox.minPosRad\r\n  const max = bbox.maxPosRad\r\n\r\n  let r2 // Atom positions, expanded radii (squared)\r\n  let maxRadius\r\n\r\n  // Parameters\r\n  let probeRadius\r\n  let scaleFactor\r\n  let probePositions\r\n\r\n  // Cache last value for obscured test\r\n  let lastClip = -1\r\n\r\n  // Grid params\r\n  let dim\r\n  let grid\r\n  let volTex\r\n  let weights\r\n  let weightsMap = null\r\n  let atomMap = null\r\n  let visibilitySelector = null\r\n\r\n  // grid indices -> xyz coords\r\n  let gridx\r\n  let gridy\r\n  let gridz\r\n\r\n  // Lookup tables:\r\n  let sinTable\r\n  let cosTable\r\n\r\n  // Spatial Hash\r\n  let hash\r\n\r\n  // Neighbour array to be filled by hash\r\n  let neighbours\r\n\r\n  // Vectors for Torus Projection\r\n  const mid = new Vector3(0.0, 0.0, 0.0)\r\n  const n1 = new Vector3(0.0, 0.0, 0.0)\r\n  const n2 = new Vector3(0.0, 0.0, 0.0)\r\n\r\n  let ngTorus\r\n\r\n  function uniformArray(TypeName, n, a) {\r\n    const array = utils.allocateTyped(TypeName, n)\r\n    for (let innI = 0; innI < n; ++innI) {\r\n      array[innI] = a\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  function fillGridDim(a, start, step) {\r\n    for (let innI = 0; innI < a.length; innI++) {\r\n      a[innI] = start + step * innI\r\n    }\r\n  }\r\n\r\n  function initializeGrid() {\r\n    ;({ scaleFactor } = params)\r\n    ;({ dim } = boundaries)\r\n\r\n    ngTorus = Math.min(5, 2 + Math.floor(probeRadius * scaleFactor))\r\n\r\n    const gridSize = dim[0] * dim[1] * dim[2]\r\n    grid = uniformArray(Float32Array, gridSize, -1001.0)\r\n    volTex = utils.allocateTyped(Float32Array, gridSize * 3)\r\n    weights = utils.allocateTyped(Float32Array, gridSize)\r\n    if (visibilitySelector) {\r\n      weightsMap = utils.allocateTyped(Float32Array, gridSize)\r\n      atomMap = []\r\n    }\r\n\r\n    gridx = utils.allocateTyped(Float32Array, dim[0])\r\n    gridy = utils.allocateTyped(Float32Array, dim[1])\r\n    gridz = utils.allocateTyped(Float32Array, dim[2])\r\n\r\n    fillGridDim(gridx, min[0], 1 / scaleFactor)\r\n    fillGridDim(gridy, min[1], 1 / scaleFactor)\r\n    fillGridDim(gridz, min[2], 1 / scaleFactor)\r\n  }\r\n\r\n  function initializeAngleTables() {\r\n    let theta = 0.0\r\n    const step = (2 * Math.PI) / probePositions\r\n\r\n    cosTable = utils.allocateTyped(Float32Array, probePositions)\r\n    sinTable = utils.allocateTyped(Float32Array, probePositions)\r\n    for (let innI = 0; innI < probePositions; innI++) {\r\n      cosTable[innI] = Math.cos(theta)\r\n      sinTable[innI] = Math.sin(theta)\r\n      theta += step\r\n    }\r\n  }\r\n\r\n  function initializeHash() {\r\n    hash = new AVHash(posRad, min, max, 2.01 * maxRadius)\r\n    neighbours = new Int32Array(hash.neighbourListLength)\r\n  }\r\n\r\n  function init() {\r\n    ;({ probeRadius, scaleFactor, probePositions, visibilitySelector } = params)\r\n    r2 = utils.allocateTyped(Float32Array, nAtoms)\r\n    maxRadius = 0\r\n    for (let innI = 0; innI < nAtoms; ++innI) {\r\n      const rExt = (posRad[innI * itemSize + 3] += probeRadius)\r\n      if (rExt > maxRadius) {\r\n        maxRadius = rExt\r\n      }\r\n      r2[innI] = rExt * rExt\r\n    }\r\n\r\n    initializeGrid()\r\n    initializeAngleTables()\r\n    initializeHash()\r\n\r\n    lastClip = -1\r\n  }\r\n\r\n  function singleAtomObscures(ai, innX, innY, innZ) {\r\n    const innCI = itemSize * ai\r\n    const ra2 = r2[ai]\r\n    const dx = posRad[innCI] - innX\r\n    const dy = posRad[innCI + 1] - innY\r\n    const dz = posRad[innCI + 2] - innZ\r\n    const d2 = dx * dx + dy * dy + dz * dz\r\n\r\n    return d2 < ra2\r\n  }\r\n\r\n  function obscured(innX, innY, innZ, a, b) {\r\n    // Is the point at x,y,z obscured by any of the atoms\r\n    // specifeid by indices in neighbours. Ignore indices\r\n    // a and b (these are the relevant atoms in projectPoints/Torii)\r\n\r\n    // Cache the last clipped atom (as very often the same one in\r\n    // subsequent calls)\r\n    let ai\r\n\r\n    if (lastClip !== -1) {\r\n      ai = lastClip\r\n      if (ai !== a && ai !== b && singleAtomObscures(ai, innX, innY, innZ)) {\r\n        return ai\r\n      }\r\n      lastClip = -1\r\n    }\r\n\r\n    let ni = 0\r\n    ai = neighbours[ni]\r\n    while (ai >= 0) {\r\n      if (ai !== a && ai !== b && singleAtomObscures(ai, innX, innY, innZ)) {\r\n        lastClip = ai\r\n        return ai\r\n      }\r\n      ai = neighbours[++ni]\r\n    }\r\n\r\n    lastClip = -1\r\n\r\n    return -1\r\n  }\r\n\r\n  function projectPoints() {\r\n    // For each atom:\r\n    //     Iterate over a subsection of the grid, for each point:\r\n    //         If current value < 0.0, unvisited, set positive\r\n    //\r\n    //         In any case: Project this point onto surface of the atomic sphere\r\n    //         If this projected point is not obscured by any other atom\r\n    //             Calcualte delta distance and set grid value to minimum of\r\n    //             itself and delta\r\n\r\n    // Should we alias frequently accessed closure constiables??\r\n    // Assume JS engine capable of optimizing this\r\n    // anyway...\r\n    const maxRad = 4.0\r\n    const sigma = maxRad / 3\r\n    const sigma2Inv = 1 / (2 * sigma * sigma)\r\n\r\n    for (let innI = 0; innI < nAtoms; innI++) {\r\n      const innCI = itemSize * innI\r\n      const ax = posRad[innCI]\r\n      const ay = posRad[innCI + 1]\r\n      const az = posRad[innCI + 2]\r\n      const ar = posRad[innCI + 3]\r\n      const ar2 = r2[innI]\r\n\r\n      hash.withinRadii(ax, ay, az, ar, neighbours)\r\n\r\n      // Number of grid points, round this up...\r\n      const ng = Math.ceil(ar * scaleFactor)\r\n\r\n      // Center of the atom, mapped to grid points (take floor)\r\n      const iax = Math.floor(scaleFactor * (ax - min[0]))\r\n      const iay = Math.floor(scaleFactor * (ay - min[1]))\r\n      const iaz = Math.floor(scaleFactor * (az - min[2]))\r\n\r\n      // Extents of grid to consider for this atom\r\n      const minx = Math.max(0, iax - ng)\r\n      const miny = Math.max(0, iay - ng)\r\n      const minz = Math.max(0, iaz - ng)\r\n\r\n      // Add two to these points:\r\n      // - iax are floor'd values so this ensures coverage\r\n      // - these are loop limits (exclusive)\r\n      const maxx = Math.min(dim[0], iax + ng + 2)\r\n      const maxy = Math.min(dim[1], iay + ng + 2)\r\n      const maxz = Math.min(dim[2], iaz + ng + 2)\r\n\r\n      const colIdx = innI * 3\r\n      const cr = colors[colIdx]\r\n      const cg = colors[colIdx + 1]\r\n      const cb = colors[colIdx + 2]\r\n\r\n      for (let iz = minz; iz < maxz; iz++) {\r\n        const dz = gridz[iz] - az\r\n        const zOffset = dim[1] * dim[0] * iz\r\n\r\n        for (let iy = miny; iy < maxy; iy++) {\r\n          const dy = gridy[iy] - ay\r\n          const dzy2 = dz * dz + dy * dy\r\n          const zyOffset = zOffset + dim[0] * iy\r\n\r\n          for (let ix = minx; ix < maxx; ix++) {\r\n            const idx = ix + zyOffset\r\n            const dx = gridx[ix] - ax\r\n            const d2 = dzy2 + dx * dx\r\n\r\n            if (d2 < ar2) {\r\n              const w = Math.exp(-d2 * sigma2Inv)\r\n              const cIdx = idx * 3\r\n              volTex[cIdx] += cr * w\r\n              volTex[cIdx + 1] += cg * w\r\n              volTex[cIdx + 2] += cb * w\r\n              weights[idx] += w\r\n              if (visibilitySelector !== null && w > weightsMap[idx]) {\r\n                weightsMap[idx] = w\r\n                atomMap[idx] = atoms[innI]\r\n              }\r\n\r\n              if (grid[idx] < 0.0) {\r\n                // Unvisited, make positive\r\n                grid[idx] = -grid[idx]\r\n              }\r\n              // Project on to the surface of the sphere\r\n              // sp is the projected point ( dx, dy, dz ) * ( ra / d )\r\n              const d = Math.sqrt(d2)\r\n              const ap = ar / d\r\n              let spx = dx * ap\r\n              let spy = dy * ap\r\n              let spz = dz * ap\r\n\r\n              spx += ax\r\n              spy += ay\r\n              spz += az\r\n\r\n              if (obscured(spx, spy, spz, innI, -1) === -1) {\r\n                const dd = ar - d\r\n                if (dd < grid[idx]) {\r\n                  grid[idx] = dd\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function normalToLine(out, p) {\r\n    out.x = out.y = out.z = 1.0\r\n    if (p.x !== 0) {\r\n      out.x = (p.y + p.z) / -p.x\r\n    } else if (p.y !== 0) {\r\n      out.y = (p.x + p.z) / -p.y\r\n    } else if (p.z !== 0) {\r\n      out.z = (p.x + p.y) / -p.z\r\n    }\r\n    return out\r\n  }\r\n\r\n  function projectTorus(a, b) {\r\n    const aIdx = itemSize * a\r\n    const bIdx = itemSize * b\r\n    const xa = posRad[aIdx]\r\n    const ya = posRad[aIdx + 1]\r\n    const za = posRad[aIdx + 2]\r\n    const r1 = posRad[aIdx + 3]\r\n    let dx = (mid.x = posRad[bIdx] - xa)\r\n    let dy = (mid.y = posRad[bIdx + 1] - ya)\r\n    let dz = (mid.z = posRad[bIdx + 2] - za)\r\n    const innR2 = posRad[bIdx + 3]\r\n    let d2 = dx * dx + dy * dy + dz * dz\r\n\r\n    // This check now redundant as already done in AVHash.withinRadii\r\n    // if( d2 > (( r1 + r2 ) * ( r1 + r2 )) ){ return; }\r\n\r\n    const d = Math.sqrt(d2)\r\n\r\n    // Find angle between a->b vector and the circle\r\n    // of their intersection by cosine rule\r\n    const cosA = (r1 * r1 + d * d - innR2 * innR2) / (2.0 * r1 * d)\r\n\r\n    // distance along a->b at intersection\r\n    const dmp = r1 * cosA\r\n\r\n    mid.normalize()\r\n\r\n    // Create normal to line\r\n    normalToLine(n1, mid)\r\n    n1.normalize()\r\n\r\n    // Cross together for second normal vector\r\n    n2.crossVectors(mid, n1)\r\n    n2.normalize()\r\n\r\n    // r is radius of circle of intersection\r\n    const rInt = Math.sqrt(r1 * r1 - dmp * dmp)\r\n\r\n    n1.multiplyScalar(rInt)\r\n    n2.multiplyScalar(rInt)\r\n    mid.multiplyScalar(dmp)\r\n\r\n    mid.x += xa\r\n    mid.y += ya\r\n    mid.z += za\r\n\r\n    lastClip = -1\r\n\r\n    const ng = ngTorus\r\n\r\n    for (let innI = 0; innI < probePositions; innI++) {\r\n      const cost = cosTable[innI]\r\n      const sint = sinTable[innI]\r\n\r\n      const px = mid.x + cost * n1.x + sint * n2.x\r\n      const py = mid.y + cost * n1.y + sint * n2.y\r\n      const pz = mid.z + cost * n1.z + sint * n2.z\r\n\r\n      if (obscured(px, py, pz, a, b) === -1) {\r\n        // As above, iterate over our grid...\r\n        // px, py, pz in grid coords\r\n        const iax = Math.floor(scaleFactor * (px - min[0]))\r\n        const iay = Math.floor(scaleFactor * (py - min[1]))\r\n        const iaz = Math.floor(scaleFactor * (pz - min[2]))\r\n\r\n        const minx = Math.max(0, iax - ng)\r\n        const miny = Math.max(0, iay - ng)\r\n        const minz = Math.max(0, iaz - ng)\r\n\r\n        const maxx = Math.min(dim[0], iax + ng + 2)\r\n        const maxy = Math.min(dim[1], iay + ng + 2)\r\n        const maxz = Math.min(dim[2], iaz + ng + 2)\r\n\r\n        for (let iz = minz; iz < maxz; iz++) {\r\n          dz = pz - gridz[iz]\r\n          const zOffset = dim[1] * dim[0] * iz\r\n          for (let iy = miny; iy < maxy; iy++) {\r\n            dy = py - gridy[iy]\r\n            const dzy2 = dz * dz + dy * dy\r\n            const zyOffset = zOffset + dim[0] * iy\r\n            for (let ix = minx; ix < maxx; ix++) {\r\n              dx = px - gridx[ix]\r\n              d2 = dzy2 + dx * dx\r\n              const idx = ix + zyOffset\r\n              const current = grid[idx]\r\n\r\n              if (current > 0.0 && d2 < current * current) {\r\n                grid[idx] = Math.sqrt(d2)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function projectTorii() {\r\n    for (let innI = 0; innI < nAtoms; innI++) {\r\n      const innIdx = itemSize * innI\r\n      hash.withinRadii(\r\n        posRad[innIdx],\r\n        posRad[innIdx + 1],\r\n        posRad[innIdx + 2],\r\n        posRad[innIdx + 3],\r\n        neighbours\r\n      )\r\n      let ia = 0\r\n      let ni = neighbours[ia]\r\n      while (ni >= 0) {\r\n        if (innI < ni) {\r\n          projectTorus(innI, ni)\r\n        }\r\n        ni = neighbours[++ia]\r\n      }\r\n    }\r\n  }\r\n\r\n  function fixNegatives() {\r\n    for (let innI = 0, n = grid.length; innI < n; innI++) {\r\n      if (grid[innI] < 0) grid[innI] = 0\r\n      let w = weights[innI]\r\n      if (w > 0) {\r\n        w = 1 / w\r\n        const innInnI = innI * 3\r\n        volTex[innInnI] *= w\r\n        volTex[innInnI + 1] *= w\r\n        volTex[innInnI + 2] *= w\r\n      }\r\n    }\r\n  }\r\n\r\n  function getVolume() {\r\n    // Basic steps are:\r\n    // 1) Initialize\r\n    // 2) Project points\r\n    // 3) Project torii\r\n    console.time('ContactSurface.getVolume')\r\n\r\n    console.time('ContactSurface.init')\r\n    init()\r\n    console.timeEnd('ContactSurface.init')\r\n\r\n    console.time('ContactSurface.projectPoints')\r\n    projectPoints()\r\n    console.timeEnd('ContactSurface.projectPoints')\r\n\r\n    console.time('ContactSurface.projectTorii')\r\n    projectTorii()\r\n    console.timeEnd('ContactSurface.projectTorii')\r\n    fixNegatives()\r\n    console.timeEnd('ContactSurface.getVolume')\r\n  }\r\n\r\n  this.build = function () {\r\n    // type and cutoff left in for compatibility with EDTSurface.getSurface\r\n    // function signature\r\n    getVolume()\r\n    this.volTexMap = volTex\r\n    this.weightsMap = weightsMap\r\n    this.atomMap = atomMap\r\n    this.volMap = grid\r\n  }\r\n}\r\nexport default ContactSurface\r\n",
		"import VolumeSurfaceGeometry from './VolumeSurfaceGeometry'\r\nimport ContactSurface from './ContactSurface'\r\nimport chem from '../../chem'\r\n\r\nconst { Volume } = chem\r\n\r\n/**\r\n * This class implements 'contact' isosurface geometry generation algorithm.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\n\r\nclass ContactSurfaceGeometry extends VolumeSurfaceGeometry {\r\n  _computeSurface(packedArrays, box, boundaries, params) {\r\n    const contactSurface = new ContactSurface(packedArrays, boundaries, params)\r\n    contactSurface.build()\r\n\r\n    const surface = {\r\n      volMap: new Volume(\r\n        Float32Array,\r\n        this.numVoxels,\r\n        box,\r\n        1,\r\n        contactSurface.volMap\r\n      ),\r\n      volTexMap: new Volume(\r\n        Float32Array,\r\n        this.numVoxels,\r\n        box,\r\n        3,\r\n        contactSurface.volTexMap\r\n      ),\r\n      atomMap: contactSurface.atomMap,\r\n      atomWeightMap: new Volume(\r\n        Float32Array,\r\n        this.numVoxels,\r\n        box,\r\n        1,\r\n        contactSurface.weightsMap\r\n      )\r\n    }\r\n    return surface\r\n  }\r\n}\r\n\r\nexport default ContactSurfaceGeometry\r\n",
		"import { Vector3 } from 'three'\r\n\r\n/**\r\n * Class for colored atom. Need for atom structure clusterization\r\n *\r\n * @param {Vector3} vCenter   Center of atom\r\n * @param {number}  radiusAt  Radius of atom\r\n */\r\nclass IsoSurfaceAtomColored {\r\n  constructor(vCenter, radiusAt) {\r\n    this.coord = new Vector3()\r\n    this.coord.copy(vCenter)\r\n    this.radius = radiusAt\r\n    this.colorX = 0.99999\r\n    this.colorY = 0.0\r\n    this.colorZ = 0.0\r\n    this.atomType = 0\r\n    this.srcAtom = null\r\n  }\r\n}\r\nexport default IsoSurfaceAtomColored\r\n",
		"import utils from '../../utils'\r\nimport { Vector3 } from 'three'\r\n\r\n// suppress some JSHint warnings\r\n/* jshint bitwise: false */\r\n\r\n/**\r\n * Build normals for isosurface, using atoms information\r\n *\r\n * @param {number} numAtoms     - Number of atoms in molecule\r\n * @param {Element} atoms      - Array of atoms\r\n * @param {Vector3} vBoxMin     - Bounding box min\r\n * @param {Vector3} vBoxMax     - Bounding box max\r\n * @param {number} probeRadius     - Normals for output\r\n *\r\n */\r\nclass IsosurfaceBuildNormals {\r\n  constructor(numAtoms, atoms, vBoxMin, vBoxMax, probeRadius) {\r\n    this._numAtoms = numAtoms\r\n    this._atoms = atoms\r\n    this._vBoxMin = new Vector3()\r\n    this._vBoxMax = new Vector3()\r\n    this._vBoxMin.copy(vBoxMin)\r\n    this._vBoxMax.copy(vBoxMax)\r\n    this._probeRadius = probeRadius\r\n\r\n    this._atomsList = null\r\n    this._voxelList = null\r\n  }\r\n\r\n  createVoxels() {\r\n    let numAtomsRefs\r\n    let rad\r\n    const ATOM_VOXEL_REF_SCALE = 4.5\r\n\r\n    const numAtoms = this._numAtoms | 0\r\n    const atoms = this._atoms\r\n    const dx = this._vBoxMax.x - this._vBoxMin.x\r\n    const dy = this._vBoxMax.y - this._vBoxMin.y\r\n    const dz = this._vBoxMax.z - this._vBoxMin.z\r\n    let w = dx < dy ? dx : dy\r\n    w = dz < w ? dz : w\r\n    let maxRad = 0.0\r\n    let aveRad = 0.0\r\n\r\n    let i\r\n    for (i = 0; i < numAtoms; i++) {\r\n      rad = (atoms[i].radius + this._probeRadius) * 2.0\r\n      maxRad = rad > maxRad ? rad : maxRad\r\n      aveRad += rad\r\n    }\r\n    let numCells = Math.floor(w / maxRad)\r\n    if (numCells < 2) {\r\n      numCells = 2\r\n    }\r\n    aveRad /= numAtoms\r\n\r\n    this._numCells = numCells\r\n    this._aveRad = aveRad\r\n    this._maxRad = maxRad\r\n\r\n    const side = numCells\r\n    const side2 = numCells * numCells\r\n    const side3 = numCells * numCells * numCells\r\n\r\n    const xScale = (this._xScale = 1.0 / (this._vBoxMax.x - this._vBoxMin.x))\r\n    const yScale = (this._yScale = 1.0 / (this._vBoxMax.y - this._vBoxMin.y))\r\n    const zScale = (this._zScale = 1.0 / (this._vBoxMax.z - this._vBoxMin.z))\r\n\r\n    // estimate number of individual atom refs in each voxel list\r\n    let maxAtomsRefs = 0\r\n\r\n    const xNumVoxMult = xScale * numCells\r\n    const yNumVoxMult = yScale * numCells\r\n    const zNumVoxMult = zScale * numCells\r\n\r\n    for (i = 0; i < numAtoms; i++) {\r\n      const radAffect =\r\n        (atoms[i].radius + this._probeRadius) * ATOM_VOXEL_REF_SCALE\r\n      const diaAffect = radAffect * 2.0\r\n      let numVoxX = Math.floor(xNumVoxMult * diaAffect + 0.8)\r\n      let numVoxY = Math.floor(yNumVoxMult * diaAffect + 0.8)\r\n      let numVoxZ = Math.floor(zNumVoxMult * diaAffect + 0.8)\r\n      // avoid case numVox? == 0\r\n      // also use loop i <=\r\n      numVoxX++\r\n      numVoxY++\r\n      numVoxZ++\r\n      maxAtomsRefs += numVoxX * numVoxY * numVoxZ\r\n    } // for (i)\r\n    // maxAtomsRefs = numAtoms * MAX_ATOMS_IN_SINGLE_VOXEL;\r\n\r\n    this._voxelList = utils.allocateTyped(Int32Array, side3)\r\n    const atomsList = []\r\n    atomsList.length = maxAtomsRefs\r\n    if (this._voxelList === null || atomsList === null) {\r\n      return 0 - 1\r\n    }\r\n    // init voxel list\r\n    for (i = 0; i < side3; i++) {\r\n      this._voxelList[i] = -1\r\n    }\r\n    numAtomsRefs = 0\r\n\r\n    // create voxel lists\r\n    for (i = 0; i < numAtoms; i++) {\r\n      // use multiplier 4 to locate this atom in different voxels\r\n      rad = (atoms[i].radius + this._probeRadius) * ATOM_VOXEL_REF_SCALE\r\n      let xIndMin = Math.floor(\r\n        (atoms[i].coord.x - this._vBoxMin.x - rad) * numCells * xScale\r\n      )\r\n      let yIndMin = Math.floor(\r\n        (atoms[i].coord.y - this._vBoxMin.y - rad) * numCells * yScale\r\n      )\r\n      let zIndMin = Math.floor(\r\n        (atoms[i].coord.z - this._vBoxMin.z - rad) * numCells * zScale\r\n      )\r\n      let xIndMax = Math.floor(\r\n        (atoms[i].coord.x - this._vBoxMin.x + rad) * numCells * xScale\r\n      )\r\n      let yIndMax = Math.floor(\r\n        (atoms[i].coord.y - this._vBoxMin.y + rad) * numCells * yScale\r\n      )\r\n      let zIndMax = Math.floor(\r\n        (atoms[i].coord.z - this._vBoxMin.z + rad) * numCells * zScale\r\n      )\r\n\r\n      xIndMin = xIndMin >= 0 ? xIndMin : 0\r\n      yIndMin = yIndMin >= 0 ? yIndMin : 0\r\n      zIndMin = zIndMin >= 0 ? zIndMin : 0\r\n\r\n      xIndMax = xIndMax < numCells ? xIndMax : numCells - 1\r\n      yIndMax = yIndMax < numCells ? yIndMax : numCells - 1\r\n      zIndMax = zIndMax < numCells ? zIndMax : numCells - 1\r\n\r\n      for (let z = zIndMin; z <= zIndMax; z++) {\r\n        for (let y = yIndMin; y <= yIndMax; y++) {\r\n          for (let x = xIndMin; x <= xIndMax; x++) {\r\n            // add atom with index \"i\" to this voxel list\r\n            const indVoxel = x + y * side + z * side2\r\n            // assert indVoxel >= 0\r\n            // assert indVoxel < side3\r\n\r\n            // add first\r\n            if (this._voxelList[indVoxel] < 0) {\r\n              atomsList[numAtomsRefs * 2 + 0] = i\r\n              atomsList[numAtomsRefs * 2 + 1] = 0 - 1\r\n              this._voxelList[indVoxel] = numAtomsRefs\r\n              numAtomsRefs++\r\n              // assert numAtomsRefs < maxAtomsRefs - 1\r\n              continue\r\n            }\r\n            // insert into head of list\r\n            const indexNext = this._voxelList[indVoxel]\r\n            this._voxelList[indVoxel] = numAtomsRefs\r\n            atomsList[numAtomsRefs * 2 + 0] = i\r\n            atomsList[numAtomsRefs * 2 + 1] = indexNext\r\n            numAtomsRefs++\r\n          } // for (x)\r\n        } // for (y)\r\n      } // for (z)\r\n    } // for (i)\r\n\r\n    // convert Array to Int32Array\r\n    this._atomsList = Int32Array.from(atomsList)\r\n\r\n    return 0\r\n  }\r\n\r\n  destroyVoxels() {\r\n    this._atomsList = null\r\n    this._voxelList = null\r\n\r\n    this._atoms = null\r\n    this._vertices = null\r\n    this._vBoxMin = null\r\n    this._vBoxMax = null\r\n  }\r\n\r\n  /**\r\n   * Enumerate all atoms affecting specified point\r\n   *\r\n   * @param {Vector3}    point    - point in 3D\r\n   * @param {func(atom)} process  - function to call for each atom\r\n   */\r\n  forEachRelatedAtom(point, process) {\r\n    // find corresponding voxel\r\n    const xInd = Math.floor(\r\n      (point.x - this._vBoxMin.x) * this._numCells * this._xScale\r\n    )\r\n    const yInd = Math.floor(\r\n      (point.y - this._vBoxMin.y) * this._numCells * this._yScale\r\n    )\r\n    const zInd = Math.floor(\r\n      (point.z - this._vBoxMin.z) * this._numCells * this._zScale\r\n    )\r\n    const indVoxel =\r\n      xInd + yInd * this._numCells + zInd * this._numCells * this._numCells\r\n\r\n    // run through atoms affecting this voxel\r\n    const atoms = this._atoms\r\n    for (\r\n      let ref = this._voxelList[indVoxel];\r\n      ref >= 0;\r\n      ref = this._atomsList[ref * 2 + 1]\r\n    ) {\r\n      const indexAtom = this._atomsList[ref * 2]\r\n      process(atoms[indexAtom])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get atom closest to specified point\r\n   *\r\n   * @param {Vector3} point  - point in 3D\r\n   *\r\n   * @returns {IsoSurfaceAtomColored} atom, or null if not found\r\n   */\r\n  getClosestAtom(point) {\r\n    let closest = null\r\n    let minDist2 = Number.MAX_VALUE\r\n\r\n    this.forEachRelatedAtom(point, (atom) => {\r\n      const dist2 = point.distanceToSquared(atom.coord)\r\n      if (dist2 < minDist2) {\r\n        minDist2 = dist2\r\n        closest = atom\r\n      }\r\n    })\r\n\r\n    return closest\r\n  }\r\n\r\n  /**\r\n   * Build normals for isosurface, using atoms information\r\n   *\r\n   * @param {number} numVertices  - Number of vertices in final geometry (to render)\r\n   * @param {Vector3} vertices    - Geometry vertices (3d coordinates array)\r\n   * @param {Vector3} normals     - Normals for output\r\n   *\r\n   * @returns {number} 0, if success\r\n   */\r\n  buildNormals(numVertices, vertices, normals) {\r\n    const self = this\r\n    let numCloseAtoms = 0\r\n    let vx = 0\r\n    let vy = 0\r\n    let vz = 0\r\n    let dist2\r\n    let vNormalX = 0\r\n    let vNormalY = 0\r\n    let vNormalZ = 0\r\n    let koef = 0\r\n    let w = 0\r\n    const r25 = 2.5\r\n    const r01 = 0.1\r\n\r\n    const maxRadAffect = this._aveRad * r25\r\n    const maxRadAffect2 = maxRadAffect * maxRadAffect\r\n    const expScale = -this._aveRad * r01\r\n\r\n    // some stats\r\n    // numSlowAtoms = 0;\r\n\r\n    const gatherNormals = function (atom) {\r\n      const dx = vx - atom.coord.x\r\n      const dy = vy - atom.coord.y\r\n      const dz = vz - atom.coord.z\r\n      dist2 = dx * dx + dy * dy + dz * dz\r\n      if (dist2 > maxRadAffect2) {\r\n        return\r\n      }\r\n\r\n      // get weight for gaussian smoothing\r\n      const rad = atom.radius + self._probeRadius\r\n      koef = dist2 - rad * rad\r\n      if (koef < 0.0) {\r\n        koef = -koef\r\n      }\r\n      w = Math.exp(expScale * koef)\r\n\r\n      vNormalX += dx * w\r\n      vNormalY += dy * w\r\n      vNormalZ += dz * w\r\n      numCloseAtoms++\r\n    }\r\n\r\n    let maxClosedAtoms = 0\r\n    // process all vertices, one by one\r\n    for (let i = 0; i < numVertices; i++) {\r\n      vx = vertices[i].x\r\n      vy = vertices[i].y\r\n      vz = vertices[i].z\r\n\r\n      numCloseAtoms = 0\r\n      vNormalX = vNormalY = vNormalZ = 0.0\r\n\r\n      this.forEachRelatedAtom(vertices[i], gatherNormals)\r\n\r\n      maxClosedAtoms =\r\n        numCloseAtoms > maxClosedAtoms ? numCloseAtoms : maxClosedAtoms\r\n\r\n      // normalize vNormal\r\n      dist2 = vNormalX * vNormalX + vNormalY * vNormalY + vNormalZ * vNormalZ\r\n      if (numCloseAtoms > 0) {\r\n        koef = 1.0 / Math.sqrt(dist2)\r\n        vNormalX *= koef\r\n        vNormalY *= koef\r\n        vNormalZ *= koef\r\n      }\r\n      normals[i].x = vNormalX\r\n      normals[i].y = vNormalY\r\n      normals[i].z = vNormalZ\r\n    } // for (i) all vertices\r\n\r\n    return 0\r\n  }\r\n\r\n  /**\r\n   * Build vertex colors for isosurface, using atoms information\r\n   *\r\n   * @param {number} numVertices  - Number of vertices in final geometry (to render)\r\n   * @param {Vector3} vertices    - Geometry vertices (3d coordinates array)\r\n   * @param {Vector3} colors                - Colors for output\r\n   * @param {number} radiusColorSmoothness  - Radius of smoothness sphere\r\n   *\r\n   * @returns {number} 0, if success\r\n   */\r\n  buildColors(numVertices, vertices, colors, radiusColorSmoothness) {\r\n    const self = this\r\n    let vx = 0.0\r\n    let vy = 0.0\r\n    let vz = 0.0\r\n    let koef = 0.0\r\n    let w = 0.0\r\n    const KOEF_ADD = 0.8\r\n\r\n    const maxRadAffect = radiusColorSmoothness\r\n    const maxRadAffect2 = maxRadAffect * maxRadAffect\r\n\r\n    let colorsClose = []\r\n    let weights = []\r\n    let weightsSum = 0\r\n\r\n    const gatherColors = function (atom) {\r\n      const dx = vx - atom.coord.x\r\n      const dy = vy - atom.coord.y\r\n      const dz = vz - atom.coord.z\r\n      const dist2 = dx * dx + dy * dy + dz * dz\r\n      if (dist2 > maxRadAffect2) {\r\n        return\r\n      }\r\n\r\n      // get weight for gaussian smoothing\r\n      const rad = atom.radius + self._probeRadius\r\n      koef = dist2 - rad * rad\r\n      if (koef < 0.0) {\r\n        koef = -koef\r\n      }\r\n      w = 1.0 / (KOEF_ADD + koef)\r\n\r\n      colorsClose.push([atom.colorX, atom.colorY, atom.colorZ])\r\n      weights.push(w) // save weights for use\r\n      weightsSum += w // calc sum of weights fo further normalization\r\n    }\r\n\r\n    // process all vertices, one by one\r\n    for (let i = 0; i < numVertices; i++) {\r\n      vx = vertices[i].x\r\n      vy = vertices[i].y\r\n      vz = vertices[i].z\r\n\r\n      colorsClose = []\r\n      weights = []\r\n      weightsSum = 0\r\n\r\n      this.forEachRelatedAtom(vertices[i], gatherColors)\r\n\r\n      // normalized weighted sum of colors\r\n      for (let j = 0; j < colorsClose.length; ++j) {\r\n        const weightNormalized = weights[j] / weightsSum\r\n        colors[i].x += colorsClose[j][0] * weightNormalized\r\n        colors[i].y += colorsClose[j][1] * weightNormalized\r\n        colors[i].z += colorsClose[j][2] * weightNormalized\r\n      }\r\n    } // for (i) all vertices\r\n    return 0\r\n  }\r\n}\r\nexport default IsosurfaceBuildNormals\r\n",
		"import { Vector3 } from 'three'\r\n\r\n/**\r\n * Class for geometry (triangle mesh) representation\r\n *\r\n *\r\n * @param {number} maxNumVertices Maximum possible number of vertices in mesh\r\n * @param {number} maxNumTriangles Maximum possible number of triangles in mesh\r\n * @param {boolean} needVertexColors Obvious\r\n */\r\nclass IsoSurfaceGeo {\r\n  constructor(maxNumVertices, maxNumTriangles, needVertexColors) {\r\n    this._maxNumVertices = maxNumVertices\r\n    this._maxNumTriangles = maxNumTriangles\r\n    this._vertices = new Array(maxNumVertices)\r\n    this._normals = new Array(maxNumVertices)\r\n    this._colors = null\r\n    if (needVertexColors) {\r\n      this._colors = new Array(maxNumVertices)\r\n    }\r\n    this._indices = new Array(maxNumTriangles * (1 + 2))\r\n    this._numVertices = 0\r\n    this._numTriangles = 0\r\n\r\n    let i\r\n    for (i = 0; i < maxNumVertices; i++) {\r\n      this._vertices[i] = new Vector3()\r\n      this._normals[i] = new Vector3()\r\n    }\r\n    for (i = 0; i < maxNumTriangles * (1 + 2); i++) {\r\n      this._indices[i] = -1\r\n    }\r\n    if (needVertexColors) {\r\n      for (i = 0; i < maxNumVertices; i++) {\r\n        this._colors[i] = new Vector3()\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this._vertices = null\r\n    this._normals = null\r\n    this._indices = null\r\n  }\r\n}\r\nexport default IsoSurfaceGeo\r\n",
		"import IsoSurfaceGeometry from './IsoSurfaceGeometry'\r\nimport IsoSurfaceAtomColored from './IsoSurfaceAtomColored'\r\nimport IsosurfaceBuildNormals from './IsosurfaceBuildNormals'\r\nimport IsoSurfaceMarchCube from './IsoSurfaceMarchCube'\r\nimport IsoSurfaceGeo from './IsoSurfaceGeo'\r\nimport chem from '../../chem'\r\nimport utils from '../../utils'\r\nimport { BufferAttribute, Vector3 } from 'three'\r\n\r\nconst COLOR_SIZE = 3\r\nconst HASH_SIZE = 32768\r\nconst { Element } = chem\r\n\r\n/**\r\n * This class implements 'quick' isosurface geometry generation algorithm.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\n\r\nclass SSIsosurfaceGeometry extends IsoSurfaceGeometry {\r\n  _build() {\r\n    // convert geoOut into arrays of positions, indices, normals\r\n    this._innerBuild()\r\n    const geoOut = this.getGeo()\r\n    this.destroy()\r\n    this._fromGeo(geoOut)\r\n  }\r\n\r\n  _fromGeo(geoOut) {\r\n    let colors = null\r\n    const positions = utils.allocateTyped(\r\n      Float32Array,\r\n      (1 + 2) * geoOut._numVertices\r\n    )\r\n    const normals = utils.allocateTyped(\r\n      Float32Array,\r\n      (1 + 2) * geoOut._numVertices\r\n    )\r\n    if (geoOut._colors !== null) {\r\n      colors = utils.allocateTyped(Float32Array, (1 + 2) * geoOut._numVertices)\r\n    }\r\n    const indices = utils.allocateTyped(\r\n      Uint32Array,\r\n      (1 + 2) * geoOut._numTriangles\r\n    )\r\n\r\n    for (let i = 0, j = 0; i < geoOut._numVertices; i++) {\r\n      positions[j + 0] = geoOut._vertices[i].x\r\n      positions[j + 1] = geoOut._vertices[i].y\r\n      positions[j + 2] = geoOut._vertices[i].z\r\n      normals[j + 0] = geoOut._normals[i].x\r\n      normals[j + 1] = geoOut._normals[i].y\r\n      normals[j + 2] = geoOut._normals[i].z\r\n      j += 3\r\n    }\r\n    if (colors !== null) {\r\n      for (let i = 0, j = 0; i < geoOut._numVertices; i++, j += 3) {\r\n        colors[j + 0] = geoOut._colors[i].x\r\n        colors[j + 1] = geoOut._colors[i].y\r\n        colors[j + 2] = geoOut._colors[i].z\r\n      }\r\n    }\r\n\r\n    const numTri3 = geoOut._numTriangles * (1 + 2)\r\n    for (let i = 0; i < numTri3; i++) {\r\n      indices[i] = geoOut._indices[i]\r\n    }\r\n\r\n    this.setIndex(new BufferAttribute(indices, 1))\r\n    this.setAttribute('position', new BufferAttribute(positions, 3))\r\n    this.setAttribute('normal', new BufferAttribute(normals, 3))\r\n    this.setAttribute('color', new BufferAttribute(colors, 3))\r\n    this.computeBoundingBox()\r\n    this.computeBoundingSphere()\r\n\r\n    geoOut.destroy()\r\n  }\r\n\r\n  convertToAtomsColored(packedArrays, atomsColored) {\r\n    const { atoms, colors } = packedArrays\r\n    for (let i = 0, numAtoms = atoms.length; i < numAtoms; i++) {\r\n      const vCenter = atoms[i].position\r\n      const { radius } = atoms[i].element\r\n      atomsColored[i] = new IsoSurfaceAtomColored(vCenter, radius)\r\n      const nm = atoms[i].element.number\r\n      atomsColored[i].atomType = this.getType(nm)\r\n      let cIdx = COLOR_SIZE * i\r\n      atomsColored[i].colorX = colors[cIdx++]\r\n      atomsColored[i].colorY = colors[cIdx++]\r\n      atomsColored[i].colorZ = colors[cIdx]\r\n      atomsColored[i].srcAtom = atoms[i]\r\n    }\r\n  }\r\n\r\n  getGeo() {\r\n    return this.geoOut\r\n  }\r\n\r\n  destroy() {\r\n    this.atoms = null\r\n\r\n    this.hashLines = null\r\n    this.hashEntries = null\r\n  }\r\n\r\n  /**\r\n   * Calculates bounding box for array with spheres (atoms)\r\n   *\r\n   * @param {Object}  atoms      Atoms array\r\n   * @param {Vector3} vBoxMin    Bounding box min point\r\n   * @param {Vector3} vBoxMax    Bounding box max point\r\n   */\r\n  getBoundingBox(atoms, vBoxMin, vBoxMax) {\r\n    const bigNum = 10000000.0\r\n\r\n    vBoxMin.x = vBoxMin.y = vBoxMin.z = bigNum\r\n    vBoxMax.x = vBoxMax.y = vBoxMax.z = 0 - bigNum\r\n\r\n    const probeRadius2 = this.probeRadius * this.atomRadiusScale\r\n    let radMax = 0.0\r\n    for (let i = 0, num = atoms.length; i < num; i++) {\r\n      const vCenter = atoms[i].coord\r\n      const rad = atoms[i].radius + probeRadius2\r\n      radMax = rad > radMax ? rad : radMax\r\n      if (vCenter.x - rad < vBoxMin.x) {\r\n        vBoxMin.x = vCenter.x - rad\r\n      }\r\n      if (vCenter.y - rad < vBoxMin.y) {\r\n        vBoxMin.y = vCenter.y - rad\r\n      }\r\n      if (vCenter.z - rad < vBoxMin.z) {\r\n        vBoxMin.z = vCenter.z - rad\r\n      }\r\n      if (vCenter.x + rad > vBoxMax.x) {\r\n        vBoxMax.x = vCenter.x + rad\r\n      }\r\n      if (vCenter.y + rad > vBoxMax.y) {\r\n        vBoxMax.y = vCenter.y + rad\r\n      }\r\n      if (vCenter.z + rad > vBoxMax.z) {\r\n        vBoxMax.z = vCenter.z + rad\r\n      }\r\n    }\r\n    vBoxMin.x -= radMax\r\n    vBoxMin.y -= radMax\r\n    vBoxMin.z -= radMax\r\n    vBoxMax.x += radMax\r\n    vBoxMax.y += radMax\r\n    vBoxMax.z += radMax\r\n  }\r\n\r\n  /**\r\n   * Calculate (x,y,z) cordinate of the cell corner point\r\n   *\r\n   * @param {Vector3} vBoxMin Bounding box min point\r\n   * @param {Vector3} vBoxMax Bounding box max point\r\n   * @param {number} x Cell integer x coordinate\r\n   * @param {number} y Cell integer y coordinate\r\n   * @param {number} z Cell integer z coordinate\r\n   * @param {number} numPoints NUm points in cell on side\r\n   * @param {Vector3} vOut Output vector\r\n   */\r\n  getCornerCoord(vBoxMin, vBoxMax, x, y, z, numPoints, vOut) {\r\n    const invNP = 1.0 / (numPoints - 1.0)\r\n    const tx = x * invNP\r\n    const ty = y * invNP\r\n    const tz = z * invNP\r\n\r\n    vOut.x = vBoxMin.x * (1.0 - tx) + vBoxMax.x * tx\r\n    vOut.y = vBoxMin.y * (1.0 - ty) + vBoxMax.y * ty\r\n    vOut.z = vBoxMin.z * (1.0 - tz) + vBoxMax.z * tz\r\n  }\r\n\r\n  /**\r\n   * Calculate point of intersection of sphere surface\r\n   * and cell edge, given by [indexA, indexB] line\r\n   *\r\n   * @param {number} indexA Cell vertex index in [0..11]\r\n   * @param {number} indexB Cell vertex index in [0..11]\r\n   * @param {array}  sign   Sign array for all 8 vertices\r\n   * @param {object} cube   Cube\r\n   * @param {number} indexPointValue for value placement\r\n   * @param {Vector3} vOut  Point of intersection\r\n   */\r\n  buildEdgePoint(indexA, indexB, sign, cube, indexPointValue, vOut) {\r\n    if (sign[indexA] ^ sign[indexB]) {\r\n      const cTwentyFour = 24\r\n      const a =\r\n        0 - cube.pointsValuesLinear[indexPointValue + cTwentyFour + indexA]\r\n      const b = cube.pointsValuesLinear[indexPointValue + cTwentyFour + indexB]\r\n      const c = cube.pointsValuesLinear[indexPointValue + cTwentyFour + indexA]\r\n      const t = a / (b - c)\r\n      const xa = cube.pointsValuesLinear[indexPointValue + indexA * (2 + 1) + 0]\r\n      const ya = cube.pointsValuesLinear[indexPointValue + indexA * (2 + 1) + 1]\r\n      const za = cube.pointsValuesLinear[indexPointValue + indexA * (2 + 1) + 2]\r\n      const xb = cube.pointsValuesLinear[indexPointValue + indexB * (2 + 1) + 0]\r\n      const yb = cube.pointsValuesLinear[indexPointValue + indexB * (2 + 1) + 1]\r\n      const zb = cube.pointsValuesLinear[indexPointValue + indexB * (2 + 1) + 2]\r\n\r\n      vOut.x = xa * (1.0 - t) + xb * t\r\n      vOut.y = ya * (1.0 - t) + yb * t\r\n      vOut.z = za * (1.0 - t) + zb * t\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if triangle is visible (vertices are close to atoms included in visibility set)\r\n   *\r\n   * @param {Vector3} v0 Vertex #0\r\n   * @param {Vector3} v1 Vertex #1\r\n   * @param {Vector3} v2 Vertex #2\r\n   * @returns {boolean} true if triangle is visible\r\n   */\r\n  isTriangleVisible(v0, v1, v2) {\r\n    const a0 = this.voxelWorld.getClosestAtom(v0)\r\n    const a1 = this.voxelWorld.getClosestAtom(v1)\r\n    const a2 = this.voxelWorld.getClosestAtom(v2)\r\n    if (\r\n      a0 === null ||\r\n      a1 === null ||\r\n      a2 === null ||\r\n      a0.srcAtom === null ||\r\n      a1.srcAtom === null ||\r\n      a2.srcAtom === null\r\n    ) {\r\n      return false\r\n    }\r\n\r\n    return (\r\n      this.visibilitySelector.includesAtom(a0.srcAtom) &&\r\n      this.visibilitySelector.includesAtom(a1.srcAtom) &&\r\n      this.visibilitySelector.includesAtom(a2.srcAtom)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Add triangle to result geometry\r\n   *\r\n   * @param {Vector3} v0 Vertex #0\r\n   * @param {Vector3} v1 Vertex #1\r\n   * @param {Vector3} v2 Vertex #2\r\n   * @returns {boolean} false if no more triangles can be added\r\n   */\r\n  addTriangle(v0, v1, v2) {\r\n    if (this.visibilitySelector && !this.isTriangleVisible(v0, v1, v2)) {\r\n      return true\r\n    }\r\n\r\n    const geo = this.geoOut\r\n\r\n    if (geo._numTriangles >= this.maxNumTriangles) {\r\n      return false\r\n    }\r\n\r\n    // Add vertex with optimize\r\n    const indInGeo0 = this.addVertexToGeo(geo, v0)\r\n    const indInGeo1 = this.addVertexToGeo(geo, v1)\r\n    const indInGeo2 = this.addVertexToGeo(geo, v2)\r\n    if ((indInGeo0 | indInGeo1 | indInGeo2) < 0) {\r\n      return false\r\n    }\r\n\r\n    const itr = 3 * geo._numTriangles\r\n    geo._indices[itr + 0] = indInGeo0\r\n    geo._indices[itr + 1] = indInGeo1\r\n    geo._indices[itr + 2] = indInGeo2\r\n    geo._numTriangles++\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Build result geometry (triangle mesh) from marching cube cells\r\n   *\r\n   * @param {number} meshRes Marchnig cube vertex count on each side\r\n   * @param {Vector3} vBoxMin Bounding box point min\r\n   * @param {Vector3} vBoxMax Bounding box point max\r\n   * @param {number} corners float values array for each cube point\r\n   * @param {Vector3} vCellStep vector to next cube cell diagonal point\r\n   * @param {object} cube IsoSurfaceMarchCube object\r\n   * @returns {number} 0, if success (<0) is error\r\n   */\r\n  buildGeoFromCorners(meshRes, vBoxMin, vBoxMax, corners, vCellStep, cube) {\r\n    const arrSize = 12\r\n    const cNumVerts = 8\r\n    const numCells = meshRes - 1\r\n    const side = meshRes\r\n    const side2 = meshRes * meshRes\r\n\r\n    const vaEdges = new Array(arrSize)\r\n    for (let i = 0; i < arrSize; i++) {\r\n      vaEdges[i] = new Vector3()\r\n    }\r\n    const sign = []\r\n    for (let i = 0; i < cNumVerts; i++) {\r\n      sign[i] = 1.0\r\n    }\r\n    const vCorner = new Vector3()\r\n    let indCell = 0\r\n    let indY = 0\r\n    for (let y = 0; y < numCells; y++, indY += side2) {\r\n      let indZ = 0\r\n      for (let z = 0; z < numCells; z++, indZ += side) {\r\n        for (let x = 0; x < numCells; x++) {\r\n          if (!cube.hasIntersection[indCell]) {\r\n            // next cell\r\n            indCell++\r\n            continue\r\n          }\r\n          const bitsInside = cube.bitsInside[indCell]\r\n\r\n          this.getCornerCoord(vBoxMin, vBoxMax, x, y, z, meshRes, vCorner)\r\n\r\n          const indPointValues = indCell * (2 << (2 + 2))\r\n          for (let i = 0, j = 0; i < cNumVerts; i++) {\r\n            cube.pointsValuesLinear[indPointValues + j++] = vCorner.x\r\n            cube.pointsValuesLinear[indPointValues + j++] = vCorner.y\r\n            cube.pointsValuesLinear[indPointValues + j++] = vCorner.z\r\n          }\r\n\r\n          cube.pointsValuesLinear[indPointValues + 3] += vCellStep.x\r\n          cube.pointsValuesLinear[indPointValues + 2 * 3] += vCellStep.x\r\n          cube.pointsValuesLinear[indPointValues + 5 * 3] += vCellStep.x\r\n          cube.pointsValuesLinear[indPointValues + 6 * 3] += vCellStep.x\r\n\r\n          cube.pointsValuesLinear[indPointValues + 2 * 3 + 2] += vCellStep.z\r\n          cube.pointsValuesLinear[indPointValues + 3 * 3 + 2] += vCellStep.z\r\n          cube.pointsValuesLinear[indPointValues + 6 * 3 + 2] += vCellStep.z\r\n          cube.pointsValuesLinear[indPointValues + 7 * 3 + 2] += vCellStep.z\r\n\r\n          cube.pointsValuesLinear[indPointValues + 4 * 3 + 1] += vCellStep.y\r\n          cube.pointsValuesLinear[indPointValues + 5 * 3 + 1] += vCellStep.y\r\n          cube.pointsValuesLinear[indPointValues + 6 * 3 + 1] += vCellStep.y\r\n          cube.pointsValuesLinear[indPointValues + 7 * 3 + 1] += vCellStep.y\r\n\r\n          // now current cell has intersections (from -x to +x) on some cube edges\r\n          const indValues = indPointValues + 24\r\n          for (let i = 0; i < cNumVerts; ++i) {\r\n            sign[i] = cube.pointsValuesLinear[indValues + i] < 0.0 ? 1 : 0\r\n          }\r\n\r\n          this.buildEdgePoint(0, 1, sign, cube, indPointValues, vaEdges[0])\r\n          this.buildEdgePoint(1, 2, sign, cube, indPointValues, vaEdges[1])\r\n          this.buildEdgePoint(2, 3, sign, cube, indPointValues, vaEdges[2])\r\n          this.buildEdgePoint(3, 0, sign, cube, indPointValues, vaEdges[3])\r\n\r\n          this.buildEdgePoint(4, 5, sign, cube, indPointValues, vaEdges[4])\r\n          this.buildEdgePoint(5, 6, sign, cube, indPointValues, vaEdges[5])\r\n          this.buildEdgePoint(6, 7, sign, cube, indPointValues, vaEdges[6])\r\n          this.buildEdgePoint(7, 4, sign, cube, indPointValues, vaEdges[7])\r\n\r\n          this.buildEdgePoint(0, 4, sign, cube, indPointValues, vaEdges[8])\r\n          this.buildEdgePoint(1, 5, sign, cube, indPointValues, vaEdges[9])\r\n          this.buildEdgePoint(2, 6, sign, cube, indPointValues, vaEdges[10])\r\n          this.buildEdgePoint(3, 7, sign, cube, indPointValues, vaEdges[11])\r\n\r\n          const offs = bitsInside * (2 << (1 + 2))\r\n          for (\r\n            let numTri = 0, indTri = 0;\r\n            numTri < 2 + 2 + 2;\r\n            numTri++, indTri += 3\r\n          ) {\r\n            // s_triIndicesMarchCube is external array, defined in mold_ind.js\r\n            const i0 = cube.striIndicesMarchCube[offs + indTri]\r\n            if (i0 < 0) {\r\n              break\r\n            }\r\n            const i1 = cube.striIndicesMarchCube[offs + indTri + 1]\r\n            const i2 = cube.striIndicesMarchCube[offs + indTri + 2]\r\n\r\n            if (!this.addTriangle(vaEdges[i0], vaEdges[i1], vaEdges[i2])) {\r\n              return 0 - 2\r\n            }\r\n          } // for numTri\r\n\r\n          // next cell (cube)\r\n          indCell++\r\n        } // for (x)\r\n      } // for (z)\r\n    } // for (y)\r\n    return 0\r\n  }\r\n\r\n  /**\r\n   * Returns number of cell with intersection with at least one sphere.\r\n   * Using this number, we can estimate required number of vertices\r\n   * and triangles to build result mesh.\r\n   *\r\n   * @param {number} side Number of points in cube voxels\r\n   * @param {number} numCells Number of cells in cube voxels (per direction)\r\n   * @param {array} corners Array of float values for cube corner points\r\n   * @param {object} cube IsoSurfaceMarchCube object\r\n   * @returns {number} numIntersectedCells\r\n   */\r\n  getNumIntersectedCells(side, numCells, corners, cube) {\r\n    const side2 = side * side\r\n    const cNumVerts = 8\r\n    let numIntersectedCells = 0\r\n\r\n    let indCell = 0\r\n    let indY = 0\r\n    for (let y = 0; y < numCells; y++, indY += side2) {\r\n      let indZ = 0\r\n      for (let z = 0; z < numCells; z++, indZ += side) {\r\n        for (let x = 0; x < numCells; x++) {\r\n          const cubeValuesIndex = indCell * (2 << (2 + 2)) + 24\r\n          const indCorner = x + indZ + indY\r\n\r\n          cube.pointsValuesLinear[cubeValuesIndex] = corners[indCorner]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 1] = corners[indCorner + 1]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 2] =\r\n            corners[indCorner + side + 1]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 3] =\r\n            corners[indCorner + side]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 4] =\r\n            corners[side2 + indCorner]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 5] =\r\n            corners[side2 + indCorner + 1]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 6] =\r\n            corners[side2 + indCorner + side + 1]\r\n          cube.pointsValuesLinear[cubeValuesIndex + 7] =\r\n            corners[side2 + indCorner + side]\r\n\r\n          // check read exception\r\n          // assert(side2 + indCorner + side + 1 < side3);\r\n\r\n          // get bit flags inside\r\n          let bitsInside = 0\r\n          for (let i = 0; i < cNumVerts; ++i) {\r\n            if (cube.pointsValuesLinear[cubeValuesIndex + i] < 0.0) {\r\n              bitsInside |= 1 << i\r\n            }\r\n          }\r\n\r\n          if (bitsInside === 0 || bitsInside === (1 << cNumVerts) - 1) {\r\n            cube.hasIntersection[indCell] = false\r\n          } else {\r\n            cube.hasIntersection[indCell] = true\r\n            numIntersectedCells++\r\n          }\r\n          cube.bitsInside[indCell] = bitsInside\r\n          // next cell\r\n          indCell++\r\n        } // for (x)\r\n      } // for (z)\r\n    } // for (y)\r\n    return numIntersectedCells\r\n  }\r\n\r\n  getType(letter) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const atomT = [\r\n      0, 0, 1, 1, 2, 6, 3, 6, 4, 6, 5, 6, 6, 0, 7, 3, 8, 2, 9, 6, 10, 6, 11, 6,\r\n      12, 6, 13, 6, 14, 6, 15, 4, 16, 5, 17, 6, 18, 6, 19, 6, 20, 6, 21, 6, 22,\r\n      6, 23, 6, 24, 6, 25, 6, 26, 6, 27, 6, 28, 6, 29, 6, 30, 6, 31, 6, 32, 6,\r\n      33, 6, 34, 6, 35, 6, 36, 6, 37, 6, 38, 6, 39, 6, 40, 6, 41, 6, 42, 6, 43,\r\n      6, 44, 6, 45, 6, 46, 6, 47, 6, 48, 6, 49, 6, 50, 6, 51, 6, 52, 6, 53, 6,\r\n      54, 6, 55, 6, 56, 6, 57, 6, 58, 6, 59, 6, 60, 6, 61, 6, 62, 6, 63, 6, 64,\r\n      6, 65, 6, 66, 6, 67, 6, 68, 6, 69, 6, 70, 6, 71, 6, 72, 6, 73, 6, 74, 6,\r\n      75, 6, 76, 6, 77, 6, 78, 6, 79, 6, 80, 6, 81, 6, 82, 6, 83, 6, 84, 6, 85,\r\n      6, 86, 6, 87, 6, 88, 6, 89, 6, 90, 6, 91, 6, 92, 6, 93, 6, 94, 6, 95, 6,\r\n      96, 6, 97, 6, 98, 6, 99, 6, 100, 6, 101, 6, 102, 6, 103, 6, 104, 6, 105,\r\n      6, 106, 6, 107, 6, 108, 6, 109, 6\r\n    ]\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    if (\r\n      letter < 1 ||\r\n      letter > atomT.length / 2 ||\r\n      Object.keys(Element.ByAtomicNumber).length * 2 !== atomT.length\r\n    ) {\r\n      throw new Error(\r\n        'atomT.length  should be equal Element.ByAtomicNumber.length * 2'\r\n      )\r\n    }\r\n    return atomT[letter * 2]\r\n  }\r\n\r\n  /**\r\n   * Calculate values for marching cube grid points\r\n   * positive values are outside sphere, negative - is inside\r\n   *\r\n   * @param {array} corners array of float values\r\n   * @param {number} side Number of point in cube in 1 dimennsion\r\n   * @param {Vector3} vBoxMin Bounding box min point\r\n   * @param {Vector3} vBoxMax Bounding box max point\r\n   * @param {array} atoms Array of input atoms\r\n   * @param {number} probeRad radius for atom probing\r\n   */\r\n  calculateGridCorners(corners, side, vBoxMin, vBoxMax, atoms, probeRad) {\r\n    const side2 = side * side\r\n    const side3 = side2 * side\r\n    const vCorner = new Vector3()\r\n    const vDif = new Vector3()\r\n    /* eslint-disable no-magic-numbers */\r\n    const aLot = +1.0e12\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    for (let i = 0; i < side3; i++) {\r\n      corners[i] = aLot // to large value\r\n    }\r\n\r\n    const xScale = (side - 1) / (vBoxMax.x - vBoxMin.x)\r\n    const yScale = (side - 1) / (vBoxMax.y - vBoxMin.y)\r\n    const zScale = (side - 1) / (vBoxMax.z - vBoxMin.z)\r\n\r\n    for (let s = 0, numAtoms = atoms.length; s < numAtoms; s++) {\r\n      const atom = atoms[s]\r\n      const radius = atom.radius + probeRad\r\n\r\n      const fx = (atom.coord.x - radius - vBoxMin.x) * xScale\r\n      const fy = (atom.coord.y - radius - vBoxMin.y) * yScale\r\n      const fz = (atom.coord.z - radius - vBoxMin.z) * zScale\r\n\r\n      const indXMin = Math.floor(fx)\r\n      const indYMin = Math.floor(fy)\r\n      const indZMin = Math.floor(fz)\r\n\r\n      let indXMax = Math.floor((atom.coord.x + radius - vBoxMin.x) * xScale)\r\n      let indYMax = Math.floor((atom.coord.y + radius - vBoxMin.y) * yScale)\r\n      let indZMax = Math.floor((atom.coord.z + radius - vBoxMin.z) * zScale)\r\n\r\n      indXMax++\r\n      indYMax++\r\n      indZMax++\r\n      indXMax = indXMax <= side - 1 ? indXMax : side - 1\r\n      indYMax = indYMax <= side - 1 ? indYMax : side - 1\r\n      indZMax = indZMax <= side - 1 ? indZMax : side - 1\r\n\r\n      for (let y = indYMin; y <= indYMax; y++) {\r\n        const indY = y * side2\r\n        for (let z = indZMin; z <= indZMax; z++) {\r\n          const indZ = z * side\r\n          for (let x = indXMin; x <= indXMax; x++) {\r\n            const ind = indY + indZ + x\r\n            this.getCornerCoord(vBoxMin, vBoxMax, x, y, z, side, vCorner)\r\n            vDif.x = vCorner.x - atom.coord.x\r\n            vDif.y = vCorner.y - atom.coord.y\r\n            vDif.z = vCorner.z - atom.coord.z\r\n            const distToSphere = Math.sqrt(\r\n              vDif.x * vDif.x + vDif.y * vDif.y + vDif.z * vDif.z\r\n            )\r\n            // val: < 0, if inside sphere\r\n            // val: > 0, if outside sphere\r\n            const val = distToSphere - radius\r\n            if (val < corners[ind]) {\r\n              corners[ind] = val\r\n            }\r\n          } // for (x)\r\n        } // for (z)\r\n      } // for (y)\r\n    } // for (s)\r\n  }\r\n\r\n  /**\r\n   * Create memory pool for vertex hash management\r\n   *\r\n   * @param {number} maxNumVertices Maximum possible number of vertices (that will be build)\r\n   * @param {number} maxNumTriangles Maximum possible number of triangles (that will be build)\r\n   * @returns {number} 0, if success. (<0) is non memory\r\n   */\r\n  createVertexHash(maxNumVertices, maxNumTriangles) {\r\n    this.hashLines = utils.allocateTyped(Int32Array, HASH_SIZE * 2)\r\n    if (this.hashLines === null) {\r\n      return 0 - 1\r\n    }\r\n    for (let i = 0, j = 0; i < HASH_SIZE; i++) {\r\n      this.hashLines[j++] = 0 // num vertices in this hash line\r\n      this.hashLines[j++] = 0 - 1 // index of the first entry\r\n    }\r\n\r\n    this.maxNumVertices = maxNumVertices\r\n    this.maxNumTriangles = maxNumTriangles\r\n\r\n    this.numHashEtriesAllocated = maxNumVertices\r\n    this.hashEntries = utils.allocateTyped(\r\n      Int32Array,\r\n      2 * this.numHashEtriesAllocated\r\n    )\r\n    if (this.hashEntries === null) {\r\n      return 0 - 1\r\n    }\r\n    for (let i = 0, j = 0; i < this.numHashEtriesAllocated; i++) {\r\n      this.hashEntries[j++] = 0 - 1 // index of vertex\r\n      this.hashEntries[j++] = 0 - 1 // next hash entry index\r\n    }\r\n    this.numHashEntryIndex = 0\r\n    return 0\r\n  }\r\n\r\n  /**\r\n   * Allocate and return new hash entry. Just check possible amount.\r\n   *\r\n   * @returns {number} index of hash entry, that can be used for geometry add vertex functionality\r\n   */\r\n  getNewHashEntry() {\r\n    if (this.numHashEntryIndex < this.numHashEtriesAllocated) {\r\n      const i = this.numHashEntryIndex\r\n      this.numHashEntryIndex++\r\n      return i\r\n    }\r\n    return 0 - 1\r\n  }\r\n\r\n  /**\r\n   * Add vertex to geometry structure\r\n   * using vertex hash table to quickly check, is this vertex already exist in geometry\r\n   *\r\n   * @param {object} geoOut Geometry to build\r\n   * @param {Vector3} vAdd Vertex to add\r\n   * @returns {number} index of added (or existing) vertex in geometry.\r\n   */\r\n  addVertexToGeo(geoOut, vAdd) {\r\n    let entry\r\n    const oneHynberes = 0.01\r\n    const n815851 = 815851\r\n    const n37633 = 37633\r\n    const n2453543 = 2453543\r\n    const r106 = 1.0e-6\r\n\r\n    const hashResolution = this.marCubeResoultion << 2\r\n    const v = new Vector3()\r\n    const ix = Math.floor(\r\n      (hashResolution * (vAdd.x - this.vBoxMin.x)) /\r\n        (this.vBoxMax.x + oneHynberes - this.vBoxMin.x)\r\n    )\r\n    const iy = Math.floor(\r\n      (hashResolution * (vAdd.y - this.vBoxMin.y)) /\r\n        (this.vBoxMax.y + oneHynberes - this.vBoxMin.y)\r\n    )\r\n    const iz = Math.floor(\r\n      (hashResolution * (vAdd.z - this.vBoxMin.z)) /\r\n        (this.vBoxMax.z + oneHynberes - this.vBoxMin.z)\r\n    )\r\n    let iHash = ix * n815851 + iz * n37633 + iy * n2453543\r\n    iHash &= HASH_SIZE - 1\r\n    const hLineIndex = iHash + iHash\r\n\r\n    // search vertex via hash\r\n    // search in hash list\r\n    if (this.vBoxMin !== null && this.vBoxMax !== null) {\r\n      for (\r\n        entry = this.hashLines[hLineIndex + 1];\r\n        entry >= 0;\r\n        entry = this.hashEntries[entry * 2 + 1]\r\n      ) {\r\n        const ind = this.hashEntries[entry * 2 + 0] // vertex index\r\n        v.copy(geoOut._vertices[ind])\r\n        v.x -= vAdd.x\r\n        v.y -= vAdd.y\r\n        v.z -= vAdd.z\r\n        const dot2 = v.x * v.x + v.y * v.y + v.z * v.z\r\n        if (dot2 < r106) {\r\n          return ind\r\n        } // if (found)\r\n      } // for (entry)\r\n    } // search\r\n\r\n    // add new vertex to geometry\r\n    if (geoOut._numVertices >= this.maxNumVertices) {\r\n      return 0 - 1\r\n    }\r\n\r\n    const iVertAdd = geoOut._numVertices\r\n    geoOut._vertices[iVertAdd].copy(vAdd)\r\n\r\n    // add to hash\r\n    if (this.vBoxMin !== null && this.vBoxMax !== null) {\r\n      entry = this.getNewHashEntry()\r\n      if (entry < 0) {\r\n        return 0 - 1\r\n      }\r\n      const entryFirst = this.hashLines[hLineIndex + 1]\r\n      this.hashLines[hLineIndex + 1] = entry\r\n      this.hashEntries[entry * 2 + 0] = iVertAdd\r\n      this.hashEntries[entry * 2 + 1] = entryFirst\r\n\r\n      this.hashLines[hLineIndex + 0]++ // num vertices in line ++\r\n    }\r\n    geoOut._numVertices++\r\n    return iVertAdd\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} side some placeholder description\r\n   * @param {number} probeSphereRadius some placeholder description\r\n   * @param {object} vBoxMin some placeholder description\r\n   * @param {object} vBoxMax some placeholder description\r\n   * @param {object} geoOut some placeholder description\r\n   * @param {object} corners some placeholder description\r\n   * @returns {number} always 0\r\n   */\r\n  modifyExcludedFromGeo(\r\n    side,\r\n    probeSphereRadius,\r\n    vBoxMin,\r\n    vBoxMax,\r\n    geoOut,\r\n    corners\r\n  ) {\r\n    let ind\r\n    let distToSphere\r\n    let distToBorder\r\n    const r11 = 1.1\r\n\r\n    function innerBlockWorkAround() {\r\n      if (distToBorder > 0.0) {\r\n        // point is inside probe sphere\r\n        if (corners[ind] < 0.0) {\r\n          corners[ind] = distToBorder // was inside surface, now is oustide ( > 0)\r\n        }\r\n        if (distToBorder > corners[ind]) {\r\n          corners[ind] = distToBorder // find positive maximum\r\n        }\r\n      } else if (distToBorder > corners[ind]) {\r\n        // point is outside sphere\r\n        corners[ind] = distToBorder // find negative maximum\r\n      }\r\n    }\r\n\r\n    const side2 = side * side\r\n    const xScale = (side - 1) / (vBoxMax.x - vBoxMin.x)\r\n    const yScale = (side - 1) / (vBoxMax.y - vBoxMin.y)\r\n    const zScale = (side - 1) / (vBoxMax.z - vBoxMin.z)\r\n\r\n    const probeSpRad2 = probeSphereRadius * 2 * (probeSphereRadius * 2)\r\n    const sideInv = 1.0 / (side - 1)\r\n\r\n    for (let i = 0; i < geoOut._numVertices; i++) {\r\n      const vCenter = geoOut._vertices[i]\r\n\r\n      const radEst = probeSphereRadius * r11\r\n\r\n      let indXMin = Math.floor((vCenter.x - radEst - vBoxMin.x) * xScale)\r\n      let indYMin = Math.floor((vCenter.y - radEst - vBoxMin.y) * yScale)\r\n      let indZMin = Math.floor((vCenter.z - radEst - vBoxMin.z) * zScale)\r\n\r\n      let indXMax = Math.floor((vCenter.x + radEst - vBoxMin.x) * xScale)\r\n      let indYMax = Math.floor((vCenter.y + radEst - vBoxMin.y) * yScale)\r\n      let indZMax = Math.floor((vCenter.z + radEst - vBoxMin.z) * zScale)\r\n\r\n      indXMin = indXMin >= 0 ? indXMin : 0\r\n      indYMin = indYMin >= 0 ? indYMin : 0\r\n      indZMin = indZMin >= 0 ? indZMin : 0\r\n      indXMax = indXMax <= side - 1 ? indXMax : side - 1\r\n      indYMax = indYMax <= side - 1 ? indYMax : side - 1\r\n      indZMax = indZMax <= side - 1 ? indZMax : side - 1\r\n\r\n      for (let iy = indYMin; iy <= indYMax; iy++) {\r\n        const indY = iy * side2\r\n        for (let iz = indZMin; iz <= indZMax; iz++) {\r\n          const indZ = iz * side\r\n          for (let ix = indXMin; ix <= indXMax; ix++) {\r\n            ind = indY + indZ + ix\r\n            // getCornerCoord(vBoxMin, vBoxMax, ix, iy, iz, side, &vCorner);\r\n            let t = ix * sideInv\r\n            const xCorner = vBoxMin.x * (1.0 - t) + vBoxMax.x * t\r\n            t = iy * sideInv\r\n            const yCorner = vBoxMin.y * (1.0 - t) + vBoxMax.y * t\r\n            t = iz * sideInv\r\n            const zCorner = vBoxMin.z * (1.0 - t) + vBoxMax.z * t\r\n\r\n            const dx = xCorner - vCenter.x\r\n            const dy = yCorner - vCenter.y\r\n            const dz = zCorner - vCenter.z\r\n            const dist2 = dx * dx + dy * dy + dz * dz\r\n            if (dist2 < probeSpRad2) {\r\n              distToSphere = Math.sqrt(dist2)\r\n              distToBorder = -(distToSphere - probeSphereRadius)\r\n              innerBlockWorkAround()\r\n            } // if (dist from corner point to sphere center more 2 radiuses)\r\n          } // for (ix)\r\n        } // for (iz)\r\n      } // for (iy)\r\n    } // for (i) all geo vertices\r\n    return 0\r\n  }\r\n\r\n  _innerBuild() {\r\n    let ok\r\n    const expandFactor = 1.2\r\n\r\n    // performance test\r\n    // this.performanceTest();\r\n\r\n    // Create temporary atoms (but colored)\r\n    const packedArrays = {\r\n      posRad: this._posRad,\r\n      colors: this._colors,\r\n      atoms: this._opts.atoms\r\n    }\r\n    this.complex = this._opts.parent\r\n    this.atoms = packedArrays.atoms\r\n    this.meshResolution = this._opts.gridSpacing\r\n    this.atomRadiusScale = this._opts.radScale\r\n    this.colorMode = this._opts.colorMode\r\n    this.probeRadius = this._opts.probeRadius\r\n    this.useVertexColors = true\r\n    this.excludeProbe = this._opts.excludeProbe\r\n    this.visibilitySelector = this._opts.visibilitySelector\r\n\r\n    this.geoOut = null\r\n\r\n    this.hashLines = null\r\n    this.hashEntries = null\r\n    this.numHashEtriesAllocated = 0\r\n    this.numHashEntryIndex = 0\r\n    this.maxNumVertices = 0\r\n    this.maxNumTriangles = 0\r\n\r\n    const atomsColored = new Array(this.atoms.length)\r\n    this.convertToAtomsColored(packedArrays, atomsColored)\r\n\r\n    // find bbox for spheres scene\r\n    const vBoxMin = (this.vBoxMin = new Vector3())\r\n    const vBoxMax = (this.vBoxMax = new Vector3())\r\n    this.getBoundingBox(atomsColored, vBoxMin, vBoxMax)\r\n\r\n    const marCubeResoultion = (this.marCubeResoultion =\r\n      this.meshResolution * (2 + 2))\r\n\r\n    // build grid corners for Marching cube algorithm\r\n    const side = marCubeResoultion\r\n    const side2 = side * side\r\n    const side3 = side2 * side\r\n    const corners = utils.allocateTyped(Float32Array, side3)\r\n    const rProbeRadius = this.probeRadius * this.atomRadiusScale\r\n\r\n    this.calculateGridCorners(\r\n      corners,\r\n      side,\r\n      vBoxMin,\r\n      vBoxMax,\r\n      atomsColored,\r\n      rProbeRadius\r\n    )\r\n\r\n    const numCells = marCubeResoultion - 1\r\n    const cube = new IsoSurfaceMarchCube()\r\n    ok = cube.create(numCells)\r\n    if (ok < 0) {\r\n      return ok\r\n    }\r\n    // copy corners to cells\r\n    const vCellStep = new Vector3()\r\n    vCellStep.x = (vBoxMax.x - vBoxMin.x) / numCells\r\n    vCellStep.y = (vBoxMax.y - vBoxMin.y) / numCells\r\n    vCellStep.z = (vBoxMax.z - vBoxMin.z) / numCells\r\n\r\n    let numIntersectedCellsEstim = this.getNumIntersectedCells(\r\n      side,\r\n      numCells,\r\n      corners,\r\n      cube\r\n    )\r\n    let maxNumVertices = Math.floor(numIntersectedCellsEstim * expandFactor)\r\n    let maxNumTriangles = Math.floor(\r\n      numIntersectedCellsEstim * expandFactor * 2\r\n    )\r\n\r\n    this.geoOut = new IsoSurfaceGeo(\r\n      maxNumVertices,\r\n      maxNumTriangles,\r\n      this.useVertexColors\r\n    )\r\n\r\n    ok = this.createVertexHash(maxNumVertices, maxNumTriangles)\r\n    if (ok < 0) {\r\n      return ok\r\n    }\r\n\r\n    // build voxel world (used to check triangle-to-atom tie and to calculate normals and colors)\r\n    let probeRadForNormalsColors = rProbeRadius\r\n    if (this.excludeProbe) {\r\n      probeRadForNormalsColors = 0.01\r\n    }\r\n    this.voxelWorld = new IsosurfaceBuildNormals(\r\n      atomsColored.length,\r\n      atomsColored,\r\n      vBoxMin,\r\n      vBoxMax,\r\n      probeRadForNormalsColors\r\n    )\r\n    this.voxelWorld.createVoxels()\r\n\r\n    ok = this.buildGeoFromCorners(\r\n      marCubeResoultion,\r\n      vBoxMin,\r\n      vBoxMax,\r\n      corners,\r\n      vCellStep,\r\n      cube\r\n    )\r\n    if (this.excludeProbe) {\r\n      // using 3d mesh (geoOut) as a surface points\r\n      // move probe sphere and try to minimuze corners values\r\n      this.modifyExcludedFromGeo(\r\n        side,\r\n        rProbeRadius,\r\n        vBoxMin,\r\n        vBoxMax,\r\n        this.geoOut,\r\n        corners\r\n      )\r\n\r\n      // delete old builded geo\r\n      this.geoOut._vertices = null\r\n      this.geoOut._colors = null\r\n      this.geoOut._indices = null\r\n      this.geoOut._normals = null\r\n      this.geoOut._numVertices = 0\r\n      this.geoOut._numTriangles = 0\r\n      this.geoOut = null\r\n\r\n      // estimage geo vertices budget again\r\n      numIntersectedCellsEstim = this.getNumIntersectedCells(\r\n        side,\r\n        numCells,\r\n        corners,\r\n        cube\r\n      )\r\n      maxNumVertices = Math.floor(numIntersectedCellsEstim * expandFactor)\r\n      maxNumTriangles = Math.floor(numIntersectedCellsEstim * expandFactor * 2)\r\n\r\n      // creates empty new geometry\r\n      this.geoOut = new IsoSurfaceGeo(\r\n        maxNumVertices,\r\n        maxNumTriangles,\r\n        this.useVertexColors\r\n      )\r\n      ok = this.createVertexHash(maxNumVertices, maxNumTriangles)\r\n      if (ok < 0) {\r\n        return ok\r\n      }\r\n      // build vertices and triangles from corners values\r\n      ok = this.buildGeoFromCorners(\r\n        side,\r\n        vBoxMin,\r\n        vBoxMax,\r\n        corners,\r\n        vCellStep,\r\n        cube\r\n      )\r\n    }\r\n\r\n    // build vertex normals\r\n    this.voxelWorld.buildNormals(\r\n      this.geoOut._vertices.length,\r\n      this.geoOut._vertices,\r\n      this.geoOut._normals\r\n    )\r\n    // More value : more smooth color mixing\r\n    // value about 0.7: very rough colors borders\r\n    let radiusColorSmoothness = 6.5\r\n    if (this.excludeProbe) {\r\n      radiusColorSmoothness -= 1.5\r\n    }\r\n    if (this.useVertexColors) {\r\n      this.voxelWorld.buildColors(\r\n        this.geoOut._vertices.length,\r\n        this.geoOut._vertices,\r\n        this.geoOut._colors,\r\n        radiusColorSmoothness\r\n      )\r\n    }\r\n    this.voxelWorld.destroyVoxels()\r\n    this.voxelWorld = null\r\n\r\n    // remove objects\r\n    cube.destroy()\r\n\r\n    return ok\r\n  }\r\n}\r\n\r\n// All code below must be erased from every device and each developer's memory\r\n\r\nexport default SSIsosurfaceGeometry\r\n",
		"import EventDispatcher from '../../utils/EventDispatcher'\r\nimport { Vector3 } from 'three'\r\n\r\nfunction createLabel(fieldTxt, className) {\r\n  const text = document.createElement('div')\r\n  text.className = className\r\n\r\n  if (typeof fieldTxt === 'string') {\r\n    const spanText = document.createElement('span')\r\n    spanText.style.fontSize = '150%'\r\n    const strings = fieldTxt.split('\\n')\r\n\r\n    for (let i = 0, n = strings.length; i < n; ++i) {\r\n      const spanNodeP = document.createElement('span')\r\n      const spanNodeText = document.createTextNode(strings[i])\r\n      spanNodeP.appendChild(spanNodeText)\r\n      spanText.appendChild(spanNodeP)\r\n      if (i < n - 1) {\r\n        spanText.appendChild(document.createElement('br'))\r\n      }\r\n    }\r\n\r\n    text.appendChild(spanText)\r\n  } else {\r\n    text.appendChild(fieldTxt)\r\n  }\r\n  text.worldPos = new Vector3()\r\n  return text\r\n}\r\nclass LabelsGeometry extends EventDispatcher {\r\n  constructor(instanceCount, opts) {\r\n    super()\r\n    this._opts = opts\r\n    this.items = []\r\n    this.needsUpdate = false\r\n\r\n    let xTranslation = -50\r\n    let yTranslation = -50\r\n    switch (opts.horizontalAlign) {\r\n      case 'left':\r\n        xTranslation = 0\r\n        break\r\n      case 'right':\r\n        xTranslation = -100\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    switch (opts.verticalAlign) {\r\n      case 'top':\r\n        yTranslation = -100\r\n        break\r\n      case 'bottom':\r\n        yTranslation = 0\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    const deltaPos = new Vector3(opts.dx || 0, opts.dy || 0, opts.dz || 0)\r\n    this.userData = {\r\n      translation: `translate(${xTranslation}%, ${yTranslation}%)`,\r\n      offset: deltaPos\r\n    }\r\n  }\r\n\r\n  setItem(itemIdx, itemPos, fieldTxt) {\r\n    const opts = this._opts\r\n    const text = this.items[itemIdx] || createLabel(fieldTxt, 'label')\r\n\r\n    text.worldPos.copy(itemPos)\r\n    text.style.textAlign = opts.horizontalAlign\r\n    text.style.verticalAlign = opts.verticalAlign\r\n    this.items[itemIdx] = text\r\n  }\r\n\r\n  setColor(itemIdx, fColor, bColor) {\r\n    const text = this.items[itemIdx]\r\n    text.opts = {\r\n      color: fColor,\r\n      background: bColor\r\n    }\r\n  }\r\n\r\n  startUpdate() {\r\n    return true\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.needsUpdate = true\r\n    this.dispatchEvent({ type: 'update' })\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate()\r\n  }\r\n\r\n  // unimplemented functions\r\n  raycast() {}\r\n\r\n  setOpacity() {}\r\n\r\n  getSubset() {\r\n    return []\r\n  }\r\n}\r\n\r\nexport default LabelsGeometry\r\n",
		"import InstancedSpheresGeometry from './InstancedSpheresGeometry'\r\nimport SimpleSpheresGeometry from './SimpleSpheresGeometry'\r\nimport Simple2CCylindersGeometry from './Simple2CCylindersGeometry'\r\nimport Instanced2CCylindersGeometry from './Instanced2CCylindersGeometry'\r\nimport ExtrudedObjectsGeometry from './ExtrudedObjectsGeometry'\r\nimport ChunkedLinesGeometry from './ChunkedLinesGeometry'\r\nimport TwoColorLinesGeometry from './TwoColorLinesGeometry'\r\nimport CrossGeometry from './CrossGeometry'\r\nimport QuickSurfGeometry from './QuickSurfGeometry'\r\nimport ContactSurfaceGeometry from './ContactSurfaceGeometry'\r\nimport SSIsosurfaceGeometry from './SSIsosurfaceGeometry'\r\nimport LabelsGeometry from './LabelsGeometry'\r\n\r\nexport default {\r\n  InstancedSpheresGeometry,\r\n  SimpleSpheresGeometry,\r\n  Simple2CCylindersGeometry,\r\n  Instanced2CCylindersGeometry,\r\n  ExtrudedObjectsGeometry,\r\n  ChunkedLinesGeometry,\r\n  TwoColorLinesGeometry,\r\n  CrossGeometry,\r\n  QuickSurfGeometry,\r\n  ContactSurfaceGeometry,\r\n  SSIsosurfaceGeometry,\r\n  LabelsGeometry\r\n}\r\n",
		"export default {\r\n  precision: 'mediump',\r\n\r\n  /**\r\n   *\r\n   * @param {WebGLRenderer} renderer\r\n   */\r\n  init(renderer) {\r\n    this.precision = renderer.capabilities.getMaxPrecision('highp')\r\n  }\r\n}\r\n",
		"import {\r\n  DataTexture,\r\n  NearestFilter,\r\n  RepeatWrapping,\r\n  RGBFormat,\r\n  UnsignedByteType,\r\n  UVMapping\r\n} from 'three'\r\n\r\nconst noiseWidth = 4\r\nconst noiseHeight = 4\r\nconst _noiseData = new Uint8Array([\r\n  24, 52, 0, 254, 145, 0, 122, 0, 0, 7, 170, 0, 34, 214, 0, 173, 8, 0, 86, 249,\r\n  0, 160, 4, 0, 226, 46, 0, 224, 211, 0, 3, 157, 0, 174, 247, 0, 12, 182, 0,\r\n  220, 216, 0, 1, 109, 0, 253, 154, 0\r\n])\r\nconst _noiseWrapS = RepeatWrapping\r\nconst _noiseWrapT = RepeatWrapping\r\nconst _noiseMinFilter = NearestFilter\r\nconst _noiseMagFilter = NearestFilter\r\nconst _noiseMapping = UVMapping\r\nconst noiseTexture = new DataTexture(\r\n  _noiseData,\r\n  noiseWidth,\r\n  noiseHeight,\r\n  RGBFormat,\r\n  UnsignedByteType,\r\n  _noiseMapping,\r\n  _noiseWrapS,\r\n  _noiseWrapT,\r\n  _noiseMagFilter,\r\n  _noiseMinFilter,\r\n  1\r\n)\r\nnoiseTexture.needsUpdate = true\r\n\r\nexport default {\r\n  noiseWidth,\r\n  noiseHeight,\r\n  noiseTexture\r\n}\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './Uber.vert'\r\nimport fragmentShader from './Uber.frag'\r\nimport capabilities from '../capabilities'\r\nimport noise from '../noiseTexture'\r\nimport {\r\n  UniformsLib,\r\n  UniformsUtils,\r\n  Vector2,\r\n  Color,\r\n  Matrix4,\r\n  RawShaderMaterial,\r\n  DoubleSide,\r\n  Material\r\n} from 'three'\r\n\r\n// Length of _samplesKernel is used in Uber.frag\r\n// If you want to change length of _samplesKernel, please, remember change it in Uber.frag too.\r\n// You can easy find places for replace using word:_samplesKernel\r\nconst _samplesKernel = [\r\n  new Vector2(-0.541978, 0.840393),\r\n  new Vector2(0.125533, -0.992089),\r\n  new Vector2(0.374329, 0.927296),\r\n  new Vector2(-0.105475, 0.994422)\r\n]\r\n\r\nconst defaultUniforms = UniformsUtils.merge([\r\n  UniformsLib.fog,\r\n  UniformsLib.lights,\r\n\r\n  {\r\n    // are updated automatically by three.js (see ShaderLib.common)\r\n    diffuse: { value: new Color(0xeeeeee) },\r\n    opacity: { value: 1.0 },\r\n\r\n    specular: { type: 'c', value: new Color(0x111111) },\r\n    shininess: { type: 'f', value: 30 },\r\n    fixedColor: { type: 'c', value: new Color(0xffffff) },\r\n    zOffset: { type: 'f', value: 0.0 },\r\n    zClipValue: { type: 'f', value: 0.0 },\r\n    clipPlaneValue: { type: 'f', value: 0.0 },\r\n    nearPlaneValue: { type: 'f', value: -0.5 },\r\n    invModelViewMatrix: { type: '4fv', value: new Matrix4() },\r\n    world2colorMatrix: { type: '4fv', value: new Matrix4() },\r\n    dashedLineSize: { type: 'f', value: 0.1 },\r\n    dashedLinePeriod: { type: 'f', value: 0.2 },\r\n    projMatrixInv: { type: '4fv', value: new Matrix4() },\r\n    viewport: { type: 'v2', value: new Vector2() },\r\n    lineWidth: { type: 'f', value: 2.0 },\r\n    // default value must be the same as settings\r\n    fogAlpha: { type: 'f', value: 1.0 },\r\n    samplesKernel: { type: 'v2v', value: null },\r\n    noiseTex: { type: 't', value: null },\r\n    noiseTexelSize: { type: 'v2', value: null },\r\n    srcTexelSize: { type: 'v2', value: null }\r\n  }\r\n])\r\n\r\nconst uberOptionNames = [\r\n  'shininess',\r\n  'opacity',\r\n  'zOffset',\r\n  'diffuse',\r\n  'specular',\r\n  'fixedColor',\r\n  'zClipCoef',\r\n  'zClipValue',\r\n  'clipPlaneValue',\r\n  'world2colorMatrix',\r\n  'dashedLineSize',\r\n  'dashedLinePeriod',\r\n  'projMatrixInv',\r\n  'viewport',\r\n  'lineWidth',\r\n  'fogAlpha',\r\n  'samplesKernel',\r\n  'noiseTex',\r\n  'noiseTexelSize',\r\n  'srcTexelSize'\r\n]\r\n\r\n// properties that convert to uniforms\r\nconst uberOptions = {\r\n  diffuse: new Color(0xffffff), // used in phong lighting\r\n  specular: new Color(0x111111), // used in phong lighting\r\n  shininess: 30, // used in phong lighting\r\n  opacity: 1, // set mesh opacity\r\n  fixedColor: new Color(0xffffff), // color to override (see OVERRIDE_COLOR)\r\n  zOffset: 0.0, // used fo zsprites (see SPHERE_SPRITE CYLINDER_SPRITE)\r\n  zClipCoef: 2.0, // use for Surfs clipping (mesh param, isn't used in shader)  FIXME move to representation param\r\n  zClipValue: 0.0, //  value to clip Surfs in shader  (see ZCLIP)\r\n  clipPlaneValue: 0.0, // value to clip scene globally (see CLIPPLANE)\r\n  world2colorMatrix: new Matrix4(),\r\n  dashedLineSize: 0.1,\r\n  dashedLinePeriod: 0.3,\r\n  projMatrixInv: new Matrix4(),\r\n  viewport: new Vector2(800, 600),\r\n  lineWidth: 2.0,\r\n  fogAlpha: 1.0,\r\n  samplesKernel: _samplesKernel,\r\n  noiseTex: noise.noiseTexture,\r\n  noiseTexelSize: new Vector2(1.0 / noise.noiseWidth, 1.0 / noise.noiseHeight),\r\n  srcTexelSize: new Vector2(1.0 / 800.0, 1.0 / 600.0),\r\n\r\n  copy(source) {\r\n    this.diffuse.copy(source.diffuse)\r\n    this.specular.copy(source.specular)\r\n    this.shininess = source.shininess\r\n    this.opacity = source.opacity\r\n    this.fixedColor.copy(source.fixedColor)\r\n    this.zOffset = source.zOffset\r\n    this.zClipCoef = source.zClipCoef\r\n    this.zClipValue = source.zClipValue\r\n    this.clipPlaneValue = source.clipPlaneValue\r\n    this.world2colorMatrix.copy(source.world2colorMatrix)\r\n    this.dashedLineSize = source.dashedLineSize\r\n    this.dashedLinePeriod = source.dashedLinePeriod\r\n    this.projMatrixInv = source.projMatrixInv\r\n    this.viewport = source.viewport\r\n    this.lineWidth = source.lineWidth // used for thick lines only\r\n    this.toonShading = source.toonShading\r\n    this.fogAlpha = source.fogAlpha\r\n    this.samplesKernel = source.samplesKernel\r\n    this.noiseTex = source.noiseTex\r\n    this.noiseTexelSize = source.noiseTexelSize\r\n    this.srcTexelSize = source.srcTexelSize\r\n  }\r\n}\r\n\r\nclass UberMaterial extends RawShaderMaterial {\r\n  constructor(params) {\r\n    super(params)\r\n    // add fog\r\n    this.fog = true\r\n    // used for instanced geometry\r\n    this.instancedPos = false\r\n    this.instancedMatrix = false\r\n    // atoms and links color\r\n    this.attrColor = false\r\n    // second link color for cylinders\r\n    this.attrColor2 = false\r\n    //\r\n    this.attrAlphaColor = false\r\n    // overrides color for all vertices (used in selection)\r\n    this.overrideColor = false\r\n    // zsrpites\r\n    this.sphereSprite = false\r\n    this.cylinderSprite = false\r\n    // clip Surfs individually\r\n    this.zClip = false\r\n    // clip scene with global clip plane\r\n    this.clipPlane = false\r\n    // enable fake (chess-like) opacity\r\n    this.fakeOpacity = false\r\n    // render only depth, don't take care about the pixel color (used for transparency depth prepass)\r\n    this.prepassTransparancy = false\r\n    // used to render pixel positions\r\n    this.colorFromPos = false\r\n    // used to render shadowmap\r\n    this.shadowmap = false\r\n    // used to describe shadowmap type\r\n    this.shadowmapType = 'random'\r\n    // used to render pixel view deph\r\n    this.colorFromDepth = false\r\n    // mark that rendering is for orthographic camera\r\n    this.orthoCam = false\r\n    // used to render dashed line\r\n    this.dashedLine = false\r\n    // mark as transparent\r\n    this.transparent = true\r\n    // mark as thick lines\r\n    this.thickLine = false\r\n    // makes fog begin transparency (required for transparent background)\r\n    this.fogTransparent = false\r\n    // used to render surface normals to G buffer for ssao effect\r\n    this.normalsToGBuffer = false\r\n    // used for toon material\r\n    this.toonShading = false\r\n    this.uberOptions = uberOptions\r\n    // set default values\r\n    this.setValues({\r\n      uniforms: UniformsUtils.clone(defaultUniforms),\r\n      vertexShader: this.precisionString() + vertexShader,\r\n      fragmentShader: this.precisionString() + fragmentShader,\r\n      lights: true,\r\n      fog: true,\r\n      side: DoubleSide,\r\n      ...params\r\n    })\r\n  }\r\n\r\n  precisionString() {\r\n    const { precision } = capabilities\r\n    const str =\r\n      `precision ${precision} float;\\n` + `precision ${precision} int;\\n\\n`\r\n    return str\r\n  }\r\n\r\n  // create copy of this material\r\n  copy(source) {\r\n    super.copy(source)\r\n\r\n    this.fragmentShader = source.fragmentShader\r\n    this.vertexShader = source.vertexShader\r\n\r\n    this.uniforms = UniformsUtils.clone(source.uniforms)\r\n    this.defines = { ...source.defines }\r\n    this.extensions = source.extensions\r\n\r\n    this.fog = source.fog\r\n    this.instancedPos = source.instancedPos\r\n    this.instancedMatrix = source.instancedMatrix\r\n    this.attrColor = source.attrColor\r\n    this.attrColor2 = source.attrColor2\r\n    this.attrAlphaColor = source.attrAlphaColor\r\n    this.overrideColor = source.overrideColor\r\n    this.sphereSprite = source.sphereSprite\r\n    this.cylinderSprite = source.cylinderSprite\r\n    this.zClip = source.zClip\r\n    this.clipPlane = source.clipPlane\r\n    this.fakeOpacity = source.fakeOpacity\r\n    this.colorFromPos = source.colorFromPos\r\n    this.shadowmap = source.shadowmap\r\n    this.shadowmapType = source.shadowmapType\r\n    this.colorFromDepth = source.colorFromDepth\r\n    this.orthoCam = source.orthoCam\r\n    this.prepassTransparancy = source.prepassTransparancy\r\n    this.dashedLine = source.dashedLine\r\n    this.thickLine = source.thickLine\r\n    this.fogTransparent = source.fogTransparent\r\n    this.normalsToGBuffer = source.normalsToGBuffer\r\n    this.toonShading = source.toonShading\r\n\r\n    this.uberOptions.copy(source.uberOptions)\r\n\r\n    return this\r\n  }\r\n\r\n  // its options are prototyped after this material's options\r\n  createInstance() {\r\n    const inst = new UberMaterial()\r\n    inst.copy(this)\r\n    inst.uberOptions = Object.create(this.uberOptions)\r\n    return inst\r\n  }\r\n\r\n  setValues(values) {\r\n    if (typeof values === 'undefined') {\r\n      return\r\n    }\r\n\r\n    // set direct values\r\n    super.setValues(values)\r\n\r\n    const defines = {}\r\n    const extensions = {}\r\n\r\n    if (this.fog) {\r\n      defines.USE_FOG = 1\r\n    }\r\n    if (this.instancedPos) {\r\n      defines.INSTANCED_POS = 1\r\n    }\r\n    if (this.instancedMatrix) {\r\n      defines.INSTANCED_MATRIX = 1\r\n    }\r\n    if (this.attrColor) {\r\n      defines.ATTR_COLOR = 1\r\n    }\r\n    if (this.attrColor2) {\r\n      defines.ATTR_COLOR2 = 1\r\n    }\r\n    if (this.attrAlphaColor) {\r\n      defines.ATTR_ALPHA_COLOR = 1\r\n    }\r\n    if (this.overrideColor) {\r\n      defines.OVERRIDE_COLOR = 1\r\n    }\r\n    if (this.sphereSprite) {\r\n      defines.SPHERE_SPRITE = 1\r\n      extensions.fragDepth = 1\r\n    }\r\n    if (this.cylinderSprite) {\r\n      defines.CYLINDER_SPRITE = 1\r\n      extensions.fragDepth = 1\r\n    }\r\n    if (this.zClip) {\r\n      defines.ZCLIP = 1\r\n    }\r\n    if (this.clipPlane) {\r\n      defines.CLIP_PLANE = 1\r\n    }\r\n    if (this.fakeOpacity) {\r\n      defines.FAKE_OPACITY = 1\r\n    }\r\n    if (this.lights) {\r\n      defines.USE_LIGHTS = 1\r\n    }\r\n    if (this.colorFromPos) {\r\n      defines.COLOR_FROM_POS = 1\r\n    }\r\n    if (this.shadowmap) {\r\n      defines.SHADOWMAP = 1\r\n      if (this.shadowmapType === 'pcf') {\r\n        defines.SHADOWMAP_PCF_SHARP = 1\r\n      } else if (this.shadowmapType === 'random') {\r\n        defines.SHADOWMAP_PCF_RAND = 1\r\n      } else {\r\n        defines.SHADOWMAP_BASIC = 1\r\n      }\r\n    }\r\n    if (this.colorFromDepth) {\r\n      defines.COLOR_FROM_DEPTH = 1\r\n    }\r\n    if (this.orthoCam) {\r\n      defines.ORTHOGRAPHIC_CAMERA = 1\r\n    }\r\n    if (this.prepassTransparancy) {\r\n      defines.PREPASS_TRANSP = 1\r\n    }\r\n    if (this.dashedLine) {\r\n      defines.DASHED_LINE = 1\r\n    }\r\n    if (this.thickLine) {\r\n      defines.THICK_LINE = 1\r\n    }\r\n    if (this.fogTransparent) {\r\n      defines.FOG_TRANSPARENT = 1\r\n    }\r\n    if (this.normalsToGBuffer) {\r\n      extensions.drawBuffers = 1\r\n      defines.NORMALS_TO_G_BUFFER = 1\r\n    }\r\n    if (this.toonShading) {\r\n      defines.TOON_SHADING = 1\r\n    }\r\n    // set dependent values\r\n    this.defines = defines\r\n    this.extensions = extensions\r\n  }\r\n\r\n  setUberOptions(values) {\r\n    if (typeof values === 'undefined') {\r\n      return\r\n    }\r\n\r\n    for (const key in values) {\r\n      if (!values.hasOwnProperty(key)) {\r\n        continue\r\n      }\r\n\r\n      if (this.uberOptions[key] instanceof Color) {\r\n        this.uberOptions[key] = values[key].clone()\r\n      } else {\r\n        this.uberOptions[key] = values[key]\r\n      }\r\n    }\r\n  }\r\n\r\n  clone(shallow) {\r\n    if (!shallow) {\r\n      return Material.prototype.clone.call(this)\r\n    }\r\n    return this.createInstance()\r\n  }\r\n\r\n  updateUniforms() {\r\n    const self = this\r\n\r\n    uberOptionNames.forEach((p) => {\r\n      if (self.uniforms.hasOwnProperty(p)) {\r\n        if (\r\n          self.uberOptions[p] instanceof Color ||\r\n          self.uberOptions[p] instanceof Matrix4\r\n        ) {\r\n          self.uniforms[p].value = self.uberOptions[p].clone()\r\n        } else {\r\n          self.uniforms[p].value = self.uberOptions[p]\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default UberMaterial\r\n",
		"import UberMaterial from '../shaders/UberMaterial'\r\n\r\nexport default function (SuperClass) {\r\n  class NewObjectType extends SuperClass {\r\n    constructor(...rest) {\r\n      super(...rest)\r\n      this.onBeforeRender = NewObjectType.prototype.onBeforeRender\r\n    }\r\n\r\n    onBeforeRender(renderer, scene, camera, geometry, material, group) {\r\n      this._onBeforeRender(renderer, scene, camera, geometry, material, group)\r\n      this._update()\r\n    }\r\n\r\n    _onBeforeRender() {}\r\n\r\n    _update() {\r\n      const { material } = this\r\n      if (!material) {\r\n        return\r\n      }\r\n\r\n      if (material instanceof UberMaterial) {\r\n        material.updateUniforms()\r\n      }\r\n    }\r\n  }\r\n\r\n  return NewObjectType\r\n}\r\n",
		"import UberObject from './UberObject'\r\nimport { Mesh } from 'three'\r\n\r\nconst OurMesh = UberObject(Mesh)\r\n\r\nclass ZSpriteMesh extends OurMesh {\r\n  constructor(...rest) {\r\n    super(...rest)\r\n    this.castShadow = true\r\n    this.receiveShadow = true\r\n  }\r\n\r\n  _onBeforeRender(renderer, scene, camera, _geometry, _material, _group) {\r\n    OurMesh.prototype._onBeforeRender.call(this, renderer, scene, camera)\r\n    const { material } = this\r\n    if (!material) {\r\n      return\r\n    }\r\n\r\n    if (material.uniforms.invModelViewMatrix) {\r\n      // NOTE: update of modelViewMatrix inside threejs is done after onBeforeRender call,\r\n      // so we have to do it manually in that place\r\n      this.modelViewMatrix.multiplyMatrices(\r\n        camera.matrixWorldInverse,\r\n        this.matrixWorld\r\n      )\r\n      // get inverse matrix\r\n      material.uniforms.invModelViewMatrix.value\r\n        .copy(this.modelViewMatrix)\r\n        .invert()\r\n      material.uniforms.nearPlaneValue.value = camera.near\r\n      material.uniformsNeedUpdate = true\r\n    }\r\n  }\r\n}\r\n\r\nexport default ZSpriteMesh\r\n",
		"import UberObject from './UberObject'\r\nimport { Matrix4, Mesh, Vector3 } from 'three'\r\n\r\nconst OurMesh = UberObject(Mesh)\r\n\r\nclass ZClippedMesh extends OurMesh {\r\n  constructor(geometry, material) {\r\n    super(geometry, material)\r\n    this.castShadow = true\r\n    this.receiveShadow = true\r\n  }\r\n\r\n  static _mvLength = new Vector3()\r\n\r\n  static _center = new Vector3()\r\n\r\n  static _modelView = new Matrix4()\r\n\r\n  _onBeforeRender(renderer, scene, camera) {\r\n    OurMesh.prototype._onBeforeRender.call(this, renderer, scene, camera)\r\n\r\n    const geo = this.geometry\r\n    const { material } = this\r\n    if (!geo.zClip || !material.uberOptions) {\r\n      return\r\n    }\r\n\r\n    const zClipCoef = 0.5\r\n\r\n    const modelView = ZClippedMesh._modelView\r\n    const mvLength = ZClippedMesh._mvLength\r\n    const center = ZClippedMesh._center\r\n\r\n    modelView.multiplyMatrices(this.matrixWorld, camera.matrixWorldInverse)\r\n    const s = mvLength.setFromMatrixColumn(modelView, 0).length()\r\n    center.copy(geo.boundingSphere.center)\r\n\r\n    this.localToWorld(center)\r\n    material.uberOptions.zClipValue =\r\n      camera.position.z - center.z - s * (zClipCoef * geo.boundingSphere.radius)\r\n  }\r\n}\r\n\r\nexport default ZClippedMesh\r\n",
		"import CSS2DObject from '../CSS2DObject'\r\nimport utils from '../../utils'\r\nimport { Group } from 'three'\r\nimport { clone } from 'lodash'\r\n\r\nclass TextMesh extends Group {\r\n  constructor(geometry, _material) {\r\n    super()\r\n    this.geometry = geometry\r\n\r\n    const self = this\r\n    self.initialized = false\r\n    this.geometry.addEventListener('update', () => {\r\n      self.update()\r\n    })\r\n  }\r\n\r\n  init() {\r\n    const { children } = this\r\n    for (let i = children.length - 1; i >= 0; --i) {\r\n      this.remove(children[i])\r\n    }\r\n\r\n    const { items, userData } = this.geometry\r\n    for (let i = 0, n = items.length; i < n; ++i) {\r\n      const srcItem = items[i]\r\n      if (!srcItem) {\r\n        continue\r\n      }\r\n      const item = utils.shallowCloneNode(srcItem)\r\n      const label = new CSS2DObject(item)\r\n      label.userData = clone(userData)\r\n      const el = label.getElement()\r\n      el.style.visibility = 'visible'\r\n      label.source = srcItem\r\n      this.add(label)\r\n    }\r\n    this.initialized = true\r\n  }\r\n\r\n  update() {\r\n    const geo = this.geometry\r\n    if (!geo.needsUpdate) {\r\n      return\r\n    }\r\n    const { children } = this\r\n    if (!this.initialized) {\r\n      this.init()\r\n    }\r\n\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      const child = children[i]\r\n      const item = child.source\r\n      child.position.copy(item.worldPos)\r\n      child.userData.color = item.opts.color\r\n      child.userData.background = item.opts.background\r\n    }\r\n  }\r\n}\r\n\r\nexport default TextMesh\r\n",
		"import UberObject from './UberObject'\r\nimport { Mesh } from 'three'\r\n\r\nconst OurMesh = UberObject(Mesh)\r\n\r\nclass SimpleMesh extends OurMesh {\r\n  constructor(geometry, material) {\r\n    super(geometry, material)\r\n    this.castShadow = true\r\n    this.receiveShadow = true\r\n  }\r\n}\r\n\r\nexport default SimpleMesh\r\n",
		"import UberObject from './UberObject'\r\nimport { Mesh, Vector2 } from 'three'\r\n\r\nconst OurMesh = UberObject(Mesh)\r\nconst _viewport = new Vector2()\r\n\r\nclass ThickLineMesh extends OurMesh {\r\n  _onBeforeRender(renderer, scene, camera, _geometry, _material, _group) {\r\n    const { material } = this\r\n    if (!material.uberOptions) {\r\n      return\r\n    }\r\n\r\n    material.uberOptions.projMatrixInv.copy(camera.projectionMatrix).invert()\r\n    renderer.getSize(_viewport)\r\n    material.uberOptions.viewport.set(_viewport.width, _viewport.height)\r\n  }\r\n}\r\n\r\nexport default ThickLineMesh\r\n",
		"import UberObject from './UberObject'\r\nimport { Mesh } from 'three'\r\n\r\nconst OurMesh = UberObject(Mesh)\r\n\r\nclass InstancedMesh extends OurMesh {\r\n  constructor(...rest) {\r\n    super(...rest)\r\n    this.castShadow = true\r\n    this.receiveShadow = true\r\n  }\r\n}\r\n\r\nexport default InstancedMesh\r\n",
		"import UberObject from './UberObject'\r\nimport ZSpriteMesh from './ZSpriteMesh'\r\nimport ZClippedMesh from './ZClippedMesh'\r\nimport TextMesh from './TextMesh'\r\nimport SimpleMesh from './SimpleMesh'\r\nimport ThickLineMesh from './ThickLineMesh'\r\nimport InstancedMesh from './InstancedMesh'\r\nimport { Line, LineSegments } from 'three'\r\n\r\nexport default {\r\n  ZClipped: ZClippedMesh,\r\n  ZSprite: ZSpriteMesh,\r\n  Text: TextMesh,\r\n  Line: UberObject(Line),\r\n  LineSegments: UberObject(LineSegments),\r\n  Mesh: SimpleMesh,\r\n  ThickLineMesh,\r\n  Instanced: InstancedMesh\r\n}\r\n",
		"import geometries from '../geometries/geometries'\r\nimport meshes from './meshes'\r\nimport ThickLinesGeometry from '../geometries/ThickLinesGeometry'\r\n\r\nfunction setMatParams(params, uniforms) {\r\n  return function (material) {\r\n    material.setValues(params)\r\n    material.setUberOptions(uniforms)\r\n  }\r\n}\r\n\r\nfunction _createInstancedCylinders(useZSprites, openEnded) {\r\n  return {\r\n    Geometry(a, b) {\r\n      return new geometries.Instanced2CCylindersGeometry(\r\n        a,\r\n        b,\r\n        useZSprites,\r\n        openEnded\r\n      )\r\n    },\r\n    Object: useZSprites ? meshes.ZSprite : meshes.Instanced,\r\n    initMaterial: setMatParams({\r\n      instancedMatrix: true,\r\n      attrColor: true,\r\n      attrColor2: true,\r\n      attrAlphaColor: true,\r\n      cylinderSprite: useZSprites\r\n    })\r\n  }\r\n}\r\n\r\nfunction _createLineSegmentsGeoTriplet(geo, renderParams) {\r\n  const thickLines = geo.prototype instanceof ThickLinesGeometry\r\n  const lineWidth = renderParams.lineWidth || 0\r\n  return {\r\n    Geometry: geo,\r\n    Object: thickLines ? meshes.ThickLineMesh : meshes.LineSegments,\r\n    initMaterial: setMatParams(\r\n      {\r\n        lights: false,\r\n        attrColor: true,\r\n        attrAlphaColor: true,\r\n        thickLine: thickLines\r\n      },\r\n      {\r\n        lineWidth\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\nfunction _createSimpleGeoTriplet(geoClass) {\r\n  return {\r\n    Geometry: geoClass,\r\n    Object: meshes.Mesh,\r\n    initMaterial: setMatParams({\r\n      attrColor: true,\r\n      attrAlphaColor: true\r\n    })\r\n  }\r\n}\r\n\r\nfunction _createIsoSurfaceGeoTriplet(geoClass, caps, settings, renderParams) {\r\n  const surfaceOpts = {\r\n    wireframe: !!renderParams.wireframe,\r\n    fakeOpacity: settings.now.isoSurfaceFakeOpacity,\r\n    zClip: renderParams.zClip\r\n  }\r\n  return {\r\n    Geometry: geoClass,\r\n    Object: meshes.ZClipped,\r\n    initMaterial: setMatParams({\r\n      attrColor: true,\r\n      attrAlphaColor: false,\r\n      wireframe: surfaceOpts.wireframe,\r\n      fakeOpacity: surfaceOpts.fakeOpacity,\r\n      zClip: surfaceOpts.zClip\r\n    })\r\n  }\r\n}\r\n\r\nclass MeshCreator {\r\n  static createSpheres(caps, settings) {\r\n    const useZSprites = settings.now.zSprites\r\n    return {\r\n      Geometry(a, b) {\r\n        return new geometries.InstancedSpheresGeometry(a, b, useZSprites)\r\n      },\r\n      Object: useZSprites ? meshes.ZSprite : meshes.Instanced,\r\n      initMaterial: setMatParams({\r\n        instancedPos: true,\r\n        attrColor: true,\r\n        attrAlphaColor: true,\r\n        sphereSprite: useZSprites\r\n      })\r\n    }\r\n  }\r\n\r\n  static create2CClosedCylinders(_caps, _settings) {\r\n    return _createInstancedCylinders(false, false)\r\n  }\r\n\r\n  static create2CCylinders(caps, settings) {\r\n    return _createInstancedCylinders(settings.now.zSprites, true)\r\n  }\r\n\r\n  static create2CLines(_caps, _settings, renderParams) {\r\n    return _createLineSegmentsGeoTriplet(\r\n      geometries.TwoColorLinesGeometry,\r\n      renderParams\r\n    )\r\n  }\r\n\r\n  static createCrosses(_caps, _settings, renderParams) {\r\n    return _createLineSegmentsGeoTriplet(geometries.CrossGeometry, renderParams)\r\n  }\r\n\r\n  static createExtrudedChains(_caps, _settings) {\r\n    return _createSimpleGeoTriplet(geometries.ExtrudedObjectsGeometry)\r\n  }\r\n\r\n  static createChunkedLines(_caps, _settings, renderParams) {\r\n    return _createLineSegmentsGeoTriplet(\r\n      geometries.ChunkedLinesGeometry,\r\n      renderParams\r\n    )\r\n  }\r\n\r\n  static createQuickSurface(caps, settings, renderParams) {\r\n    return _createIsoSurfaceGeoTriplet(\r\n      geometries.QuickSurfGeometry,\r\n      caps,\r\n      settings,\r\n      renderParams\r\n    )\r\n  }\r\n\r\n  static createContactSurface(caps, settings, renderParams) {\r\n    return _createIsoSurfaceGeoTriplet(\r\n      geometries.ContactSurfaceGeometry,\r\n      caps,\r\n      settings,\r\n      renderParams\r\n    )\r\n  }\r\n\r\n  static createSASSES(caps, settings, renderParams) {\r\n    return _createIsoSurfaceGeoTriplet(\r\n      geometries.SSIsosurfaceGeometry,\r\n      caps,\r\n      settings,\r\n      renderParams\r\n    )\r\n  }\r\n\r\n  static createLabels(_caps, _settings) {\r\n    return {\r\n      Geometry: geometries.LabelsGeometry,\r\n      Object: meshes.Text,\r\n      initMaterial() {}\r\n    }\r\n  }\r\n}\r\n\r\nexport default MeshCreator\r\n",
		"import gfxutils from '../gfxutils'\r\nimport { Matrix4, Object3D, Ray } from 'three'\r\n\r\nclass TransformGroup extends Object3D {\r\n  static _inverseMatrix = new Matrix4()\r\n\r\n  static _ray = new Ray()\r\n\r\n  constructor(geometry, geoParams, material, transforms) {\r\n    super()\r\n    this._geometry = geometry\r\n    this._geoParams = geoParams\r\n    const mat = material.createInstance()\r\n    geoParams.initMaterial(mat)\r\n    this._material = mat\r\n    this._transforms = transforms.length > 0 ? transforms : [new Matrix4()]\r\n    const meshes = this._createMeshes(geometry)\r\n    for (let i = 0, n = meshes.length; i < n; ++i) {\r\n      this.add(meshes[i])\r\n    }\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const ray = TransformGroup._ray\r\n    const inverseMatrix = TransformGroup._inverseMatrix\r\n    const { children } = this\r\n    ray.copy(raycaster.ray)\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      const child = children[i]\r\n\r\n      if (!gfxutils.belongToSelectLayers(child)) {\r\n        continue\r\n      }\r\n\r\n      child.updateMatrixWorld()\r\n      const mtx = child.matrixWorld\r\n      inverseMatrix.copy(mtx).invert()\r\n      raycaster.ray.copy(ray).applyMatrix4(inverseMatrix)\r\n      const childIntersects = []\r\n      this._geometry.raycast(raycaster, childIntersects)\r\n\r\n      for (let j = 0, ciCount = childIntersects.length; j < ciCount; ++j) {\r\n        const inters = childIntersects[j]\r\n        if (inters.point) {\r\n          inters.point.applyMatrix4(mtx)\r\n          inters.distance = ray.origin.distanceTo(inters.point)\r\n        }\r\n        inters.object = child\r\n        intersects[intersects.length] = inters\r\n      }\r\n    }\r\n    raycaster.ray.copy(ray)\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const geos = this._geometry.getSubset(chunkIndices)\r\n    const subset = []\r\n    let subIdx = 0\r\n\r\n    for (let i = 0, n = geos.length; i < n; ++i) {\r\n      const meshes = this._createMeshes(geos[i])\r\n      for (let j = 0, meshCnt = meshes.length; j < meshCnt; ++j) {\r\n        subset[subIdx++] = meshes[j]\r\n      }\r\n    }\r\n\r\n    return subset\r\n  }\r\n\r\n  _createMeshes(geometry) {\r\n    const transforms = this._transforms\r\n    const Mesh = this._geoParams.Object\r\n    const material = this._material\r\n    const meshes = []\r\n    for (let i = 0, n = transforms.length; i < n; ++i) {\r\n      const mesh = new Mesh(geometry, material)\r\n      mesh.applyMatrix4(transforms[i])\r\n      meshes[i] = mesh\r\n    }\r\n\r\n    return meshes\r\n  }\r\n}\r\n\r\nexport default TransformGroup\r\n",
		"import RCGroup from '../../RCGroup'\r\nimport TransformGroup from '../../meshes/TransformGroup'\r\n\r\nfunction wrapper(Name, args) {\r\n  const params = [Name].concat(args)\r\n  return Name.bind(...params)\r\n}\r\n\r\nclass ChemGroup extends RCGroup {\r\n  constructor(\r\n    geoParams,\r\n    selection,\r\n    colorer,\r\n    mode,\r\n    transforms,\r\n    polyComplexity,\r\n    material\r\n  ) {\r\n    super()\r\n    if (this.constructor === ChemGroup) {\r\n      throw new Error('Can not instantiate abstract class!')\r\n    }\r\n    this._selection = selection\r\n    this._mode = mode\r\n    this._colorer = colorer\r\n    this._chunksIdc = selection.chunks\r\n    this._polyComplexity = polyComplexity\r\n    this._geo = new (wrapper(geoParams.Geometry, this._makeGeoArgs()))()\r\n    this._mesh = new TransformGroup(this._geo, geoParams, material, transforms)\r\n    this.add(this._mesh)\r\n    this._build()\r\n  }\r\n\r\n  _makeGeoArgs() {\r\n    throw new Error('ChemGroup subclass must override _makeGeoArgs() method')\r\n  }\r\n\r\n  /**\r\n   * Builds subset geometry by ATOMS index list\r\n   *\r\n   * @param {Number} mask - Representation mask\r\n   * @param {Boolean} innerOnly - if true returns inner bonds only - without halves\r\n   * @returns {Array} Subset geometry\r\n   */\r\n  getSubset(mask, innerOnly) {\r\n    innerOnly = innerOnly !== undefined ? innerOnly : false\r\n    const chunksList = this._calcChunksList(mask, innerOnly)\r\n    if (chunksList.length === 0) {\r\n      return []\r\n    }\r\n    return this._mesh.getSubset(chunksList)\r\n  }\r\n\r\n  _changeSubsetOpacity(mask, value, innerOnly) {\r\n    const chunksList = this._calcChunksList(mask, innerOnly)\r\n    if (chunksList.length === 0) {\r\n      return\r\n    }\r\n    this._geo.setOpacity(chunksList, value)\r\n  }\r\n\r\n  enableSubset(mask, innerOnly) {\r\n    innerOnly = innerOnly !== undefined ? innerOnly : true\r\n    this._changeSubsetOpacity(mask, 1.0, innerOnly)\r\n  }\r\n\r\n  disableSubset(mask, innerOnly) {\r\n    innerOnly = innerOnly !== undefined ? innerOnly : true\r\n    this._changeSubsetOpacity(mask, 0.0, innerOnly)\r\n  }\r\n}\r\n\r\nexport default ChemGroup\r\n",
		"import ChemGroup from './ChemGroup'\r\n\r\nclass AtomsGroup extends ChemGroup {\r\n  raycast(raycaster, intersects) {\r\n    const { atoms } = this._selection\r\n    const inters = []\r\n    this._mesh.raycast(raycaster, inters)\r\n    const atomsIdc = this._chunksIdc\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue\r\n      }\r\n      const atomIdx = atomsIdc[inters[i].chunkIdx]\r\n      if (atomIdx < atoms.length) {\r\n        inters[i].atom = atoms[atomIdx]\r\n        intersects.push(inters[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  _calcChunksList(mask) {\r\n    const chunksList = []\r\n    const { atoms } = this._selection\r\n    const atomsIdc = this._chunksIdc\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]]\r\n      if ((atom.mask & mask) !== 0) {\r\n        chunksList.push(i)\r\n      }\r\n    }\r\n    return chunksList\r\n  }\r\n}\r\n\r\nexport default AtomsGroup\r\n",
		"import AtomsGroup from './AtomsGroup'\r\n\r\nclass AtomsSphereGroup extends AtomsGroup {\r\n  _makeGeoArgs() {\r\n    return [this._selection.chunks.length, this._polyComplexity]\r\n  }\r\n\r\n  _build() {\r\n    const atomsIdc = this._selection.chunks\r\n    const { atoms, parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]]\r\n      geo.setItem(i, atom.position, mode.calcAtomRadius(atom))\r\n      geo.setColor(i, colorer.getAtomColor(atom, parent))\r\n    }\r\n    geo.finalize()\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const atomsIdc = this._selection.chunks\r\n    const { atoms } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const updateColor = frameData.needsColorUpdate(colorer)\r\n    const geo = this._geo\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]]\r\n      geo.setItem(\r\n        i,\r\n        frameData.getAtomPos(atomsIdc[i]),\r\n        mode.calcAtomRadius(atom)\r\n      )\r\n      if (updateColor) {\r\n        geo.setColor(i, frameData.getAtomColor(colorer, atom))\r\n      }\r\n    }\r\n    geo.finalize()\r\n  }\r\n}\r\n\r\nexport default AtomsSphereGroup\r\n",
		"import AtomsSphereGroup from './AtomsSphereGroup'\r\n\r\nclass AtomsSurfaceGroup extends AtomsSphereGroup {\r\n  _makeGeoArgs() {\r\n    const selectedAtoms = []\r\n    const { atoms, chunks } = this._selection\r\n    const n = chunks.length\r\n    for (let i = 0; i < n; ++i) {\r\n      selectedAtoms[i] = atoms[chunks[i]]\r\n    }\r\n    const opts = this._mode.getSurfaceOpts()\r\n    opts.atoms = selectedAtoms\r\n    return [n, opts]\r\n  }\r\n}\r\nexport default AtomsSurfaceGroup\r\n",
		"/* This is a stub class keep it until SAS/SES is refactored */\r\n\r\nimport AtomsSphereGroup from './AtomsSphereGroup'\r\n\r\nclass AtomsSASSESGroupStub extends AtomsSphereGroup {\r\n  _makeGeoArgs() {\r\n    const selectedAtoms = []\r\n    const { atoms, chunks } = this._selection\r\n    const n = chunks.length\r\n    for (let i = 0; i < n; ++i) {\r\n      selectedAtoms[i] = atoms[chunks[i]]\r\n    }\r\n    const opts = this._mode.getSurfaceOpts()\r\n    opts.atoms = selectedAtoms\r\n    opts.selection = this._selection\r\n    opts.colorMode = this._colorer\r\n    return [n, opts]\r\n  }\r\n}\r\n\r\nexport default AtomsSASSESGroupStub\r\n",
		"import AtomsGroup from './AtomsGroup'\r\nimport utils from '../../../utils'\r\n\r\nfunction adjustColor(color) {\r\n  let r = (color >> 16) & 255\r\n  let g = (color >> 8) & 255\r\n  let b = color & 255\r\n\r\n  if (0.2126 * r + 0.7152 * g + 0.0722 * b > 127) {\r\n    r = (r * 3) / 10\r\n    g = (g * 3) / 10\r\n    b = (b * 3) / 10\r\n  } else {\r\n    r = 255 - ((255 - r) * 3) / 10\r\n    g = 255 - ((255 - g) * 3) / 10\r\n    b = 255 - ((255 - b) * 3) / 10\r\n  }\r\n\r\n  return (r << 16) | (g << 8) | b\r\n}\r\n\r\nfunction inverseColor(color) {\r\n  const r = (color >> 16) & 255\r\n  const g = (color >> 8) & 255\r\n  const b = color & 255\r\n\r\n  return ((255 - r) << 16) | ((255 - g) << 8) | (255 - b)\r\n}\r\n\r\nfunction getAtomText(atom) {\r\n  if (atom.name.getNode() !== null) {\r\n    return atom.name.getNode()\r\n  }\r\n\r\n  return atom.getVisualName()\r\n}\r\n\r\nconst colorMappings = {\r\n  none(c) {\r\n    return c\r\n  },\r\n  adjust: adjustColor,\r\n  inverse: inverseColor\r\n}\r\n\r\nfunction propagateColor(color, rule) {\r\n  let result\r\n  if (colorMappings.hasOwnProperty(rule)) {\r\n    result = utils.hexColor(colorMappings[rule](color))\r\n  } else {\r\n    const val = parseInt(rule, 16)\r\n    if (!Number.isNaN(val) && rule.toLowerCase().startsWith('0x')) {\r\n      result = utils.hexColor(val)\r\n    } else {\r\n      result = '#000000'\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nconst templateMappings = {\r\n  serial(a) {\r\n    return a.serial\r\n  },\r\n  name(a) {\r\n    return a.getVisualName()\r\n  },\r\n  elem(a) {\r\n    return a.element.name\r\n  },\r\n  residue(a) {\r\n    return a.residue.getType().getName()\r\n  },\r\n  sequence(a) {\r\n    return a.residue.getSequence()\r\n  },\r\n  chain(a) {\r\n    return a.residue.getChain().getName()\r\n  },\r\n  hetatm(a) {\r\n    return a.isHet()\r\n  },\r\n  water(a) {\r\n    return (\r\n      a.residue.getType().getName() === 'HOH' ||\r\n      a.residue.getType().getName() === 'WAT'\r\n    )\r\n  }\r\n}\r\n\r\nconst parseTemplate = function (atom, str) {\r\n  return str.replace(/\\{\\{(\\s*\\w+\\s*)\\}\\}/g, (m) => {\r\n    let key = m.replace(/\\s+/g, '')\r\n    key = key.substring(2, key.length - 2).toLowerCase()\r\n\r\n    if (templateMappings.hasOwnProperty(key)) {\r\n      return templateMappings[key](atom)\r\n    }\r\n    return 'null'\r\n  })\r\n}\r\n\r\nclass AtomsTextGroup extends AtomsGroup {\r\n  _makeGeoArgs() {\r\n    const opts = this._mode.getLabelOpts()\r\n    return [this._selection.chunks.length, opts]\r\n  }\r\n\r\n  _build() {\r\n    const opts = this._mode.getLabelOpts()\r\n    const atomsIdc = this._selection.chunks\r\n    const { atoms, parent } = this._selection\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]]\r\n      const text = opts.template\r\n        ? parseTemplate(atom, opts.template)\r\n        : getAtomText(atom)\r\n      if (!text) {\r\n        continue\r\n      }\r\n      const color = colorer.getAtomColor(atom, parent)\r\n      const fgColor = parseInt(propagateColor(color, opts.fg).substring(1), 16)\r\n      const bgColor = opts.showBg\r\n        ? parseInt(propagateColor(color, opts.bg).substring(1), 16)\r\n        : 'transparent'\r\n      geo.setItem(i, atom.position, text)\r\n      geo.setColor(i, fgColor, bgColor)\r\n    }\r\n    geo.finalize()\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const opts = this._mode.getLabelOpts()\r\n    const atomsIdc = this._selection.chunks\r\n    const { atoms } = this._selection\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const updateColor = frameData.needsColorUpdate(colorer)\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]]\r\n      const text = opts.template\r\n        ? parseTemplate(atom, opts.template)\r\n        : getAtomText(atom)\r\n      if (!text) {\r\n        continue\r\n      }\r\n      const color = frameData.getAtomColor(colorer, atom)\r\n      const fgColor = parseInt(propagateColor(color, opts.fg).substring(1), 16)\r\n      const bgColor = opts.showBg\r\n        ? parseInt(propagateColor(color, opts.bg).substring(1), 16)\r\n        : 'transparent'\r\n      geo.setItem(i, frameData.getAtomPos(atomsIdc[i]), text)\r\n      if (updateColor) {\r\n        geo.setColor(i, fgColor, bgColor)\r\n      }\r\n    }\r\n    geo.finalize()\r\n  }\r\n}\r\n\r\nexport default AtomsTextGroup\r\n",
		"import AtomsGroup from './AtomsGroup'\r\nimport { Vector3 } from 'three'\r\n\r\nfunction _slerp(omega, v1, v2, t) {\r\n  const oSin = Math.sin(omega)\r\n  return v1\r\n    .clone()\r\n    .multiplyScalar(Math.sin((1 - t) * omega) / oSin)\r\n    .addScaledVector(v2, Math.sin(t * omega) / oSin)\r\n}\r\n\r\nclass AromaticGroup extends AtomsGroup {\r\n  _buildInner(radOffset, addChunk) {\r\n    const chunksToIdx = this._selection.chunks\r\n\r\n    const prevVector = new Vector3()\r\n    const currVector = new Vector3()\r\n    const segmentsHeight = this._segmentsHeight\r\n    const leprStep = 1.0 / segmentsHeight\r\n    const colorer = this._colorer\r\n\r\n    const { cycles, parent } = this._selection\r\n    let chunkIdx = 0\r\n    let currAtomIdx = chunksToIdx[chunkIdx]\r\n\r\n    for (let cIdx = 0, cCount = cycles.length; cIdx < cCount; ++cIdx) {\r\n      const cycle = cycles[cIdx]\r\n      const cycAtoms = cycle.atoms\r\n      const chunkPoints = []\r\n      const tmpDir = []\r\n      const { center } = cycle\r\n      const cycleRad = cycle.radius - radOffset\r\n      const n = cycAtoms.length\r\n      let i = 0\r\n      const prevPos = cycAtoms[n - 1].position\r\n      let currPos = cycAtoms[i].position\r\n      prevVector.subVectors(prevPos, center)\r\n      currVector.subVectors(currPos, center)\r\n      const upDir = currVector.clone().cross(prevVector).normalize()\r\n\r\n      for (; i < n; ++i) {\r\n        const omega = prevVector.angleTo(currVector)\r\n        tmpDir[i] = _slerp(omega, prevVector, currVector, 0.5).normalize()\r\n        currPos = cycAtoms[(i + 1) % n].position\r\n        prevVector.copy(currVector)\r\n        currVector.subVectors(currPos, center)\r\n      }\r\n\r\n      for (i = 0; i < n; ++i) {\r\n        if (cycAtoms[i].index !== currAtomIdx) {\r\n          continue\r\n        }\r\n        const start = tmpDir[i]\r\n        const end = tmpDir[(i + 1) % n]\r\n        const color = colorer.getAtomColor(cycAtoms[i], parent)\r\n        const currAngle = start.angleTo(end)\r\n\r\n        for (let j = 0; j <= segmentsHeight; ++j) {\r\n          chunkPoints[j] = _slerp(currAngle, start, end, j * leprStep)\r\n            .multiplyScalar(cycleRad)\r\n            .add(center)\r\n        }\r\n\r\n        addChunk(chunkIdx++, color, chunkPoints, center, upDir)\r\n        currAtomIdx = chunksToIdx[chunkIdx]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default AromaticGroup\r\n",
		"import gfxutils from '../../gfxutils'\r\nimport AromaticGroup from './AromaticGroup'\r\nimport { Vector2, Vector3 } from 'three'\r\n\r\nfunction _createShape(rad, parts) {\r\n  const pts = []\r\n  for (let i = 0; i < parts; ++i) {\r\n    const a = ((-2 * i) / parts) * Math.PI\r\n    pts.push(new Vector3(Math.cos(a) * rad, Math.sin(a) * rad, 0))\r\n  }\r\n  return pts\r\n}\r\nconst { calcChunkMatrix } = gfxutils\r\n\r\nclass AromaticTorusGroup extends AromaticGroup {\r\n  _build() {\r\n    const segmentsHeight = this._segmentsHeight\r\n    const torusRad = this._mode.getAromRadius()\r\n    const radiusV = new Vector2(torusRad, torusRad)\r\n    const radOffset = this._mode.calcStickRadius() + 2 * torusRad\r\n    const lookAtVector = new Vector3()\r\n    const mtc = []\r\n    const geo = this._geo\r\n    this._buildInner(radOffset, (chunkIdx, color, points, center, upDir) => {\r\n      for (let j = 0; j <= segmentsHeight; ++j) {\r\n        const currPoint = points[j]\r\n        const currDir = currPoint.clone().sub(center).cross(upDir)\r\n        lookAtVector.addVectors(currPoint, currDir)\r\n        mtc[j] = calcChunkMatrix(currPoint, lookAtVector, upDir, radiusV)\r\n      }\r\n      geo.setItem(chunkIdx, mtc)\r\n      geo.setColor(chunkIdx, color)\r\n    })\r\n    geo.finalize()\r\n  }\r\n\r\n  _makeGeoArgs() {\r\n    this._segmentsHeight = this._polyComplexity\r\n    return [\r\n      _createShape(1.0, this._polyComplexity),\r\n      this._segmentsHeight + 1,\r\n      this._selection.chunks.length\r\n    ]\r\n  }\r\n}\r\n\r\nexport default AromaticTorusGroup\r\n",
		"import AromaticGroup from './AromaticGroup'\r\n\r\nclass AromaticLinesGroup extends AromaticGroup {\r\n  _build() {\r\n    const geo = this._geo\r\n    const radOffset = this._mode.getAromaticOffset()\r\n    this._buildInner(radOffset, (chunkIdx, color, points) => {\r\n      let prevPt = points[0] // do not replace with start\r\n      for (let j = 1; j <= this._segmentsHeight; ++j) {\r\n        const currPoint = points[j]\r\n        geo.setSegment(chunkIdx, j - 1, prevPt, currPoint)\r\n        prevPt = currPoint\r\n      }\r\n      geo.setColor(chunkIdx, color)\r\n    })\r\n    geo.finalize()\r\n  }\r\n\r\n  _makeGeoArgs() {\r\n    this._segmentsHeight = this._mode.getAromaticArcChunks()\r\n    return [this._selection.chunks.length, this._segmentsHeight, true]\r\n  }\r\n}\r\n\r\nexport default AromaticLinesGroup\r\n",
		"import ChemGroup from './ChemGroup'\r\n\r\nclass ResiduesGroup extends ChemGroup {\r\n  raycast(raycaster, intersects) {\r\n    const { residues } = this._selection\r\n    const inters = []\r\n    this._mesh.raycast(raycaster, inters)\r\n    const chunksIdc = this._chunksIdc\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue\r\n      }\r\n      const resIdx = chunksIdc[inters[i].chunkIdx]\r\n      if (resIdx < residues.length) {\r\n        inters[i].residue = residues[resIdx]\r\n        intersects.push(inters[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  _calcChunksList(mask) {\r\n    const chunksList = []\r\n    const { residues } = this._selection\r\n    const resIdc = this._chunksIdc\r\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\r\n      const res = residues[resIdc[i]]\r\n      if ((res._mask & mask) !== 0) {\r\n        chunksList.push(i)\r\n      }\r\n    }\r\n    return chunksList\r\n  }\r\n}\r\n\r\nexport default ResiduesGroup\r\n",
		"import ResiduesGroup from './ResiduesGroup'\r\n\r\nclass NucleicItemGroup extends ResiduesGroup {\r\n  raycast(raycaster, intersects) {\r\n    const { residues } = this._selection\r\n    const inters = []\r\n    this._mesh.raycast(raycaster, inters)\r\n    const chunksIdc = this._chunksIdc\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue\r\n      }\r\n      const resIdx = chunksIdc[Math.floor(inters[i].chunkIdx / 2)]\r\n      if (resIdx < residues.length) {\r\n        inters[i].residue = residues[resIdx]\r\n        intersects.push(inters[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  _build() {\r\n    const { residues, parent } = this._selection\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const stickRad = this._mode.calcStickRadius()\r\n    let chunkIdx = 0\r\n\r\n    const resIdc = this._selection.chunks\r\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\r\n      const res = residues[resIdc[i]]\r\n      const color = colorer.getResidueColor(res, parent)\r\n      this._processItem(\r\n        chunkIdx++,\r\n        res._cylinders[0],\r\n        res._cylinders[1],\r\n        stickRad,\r\n        color\r\n      )\r\n    }\r\n    geo.finalize()\r\n  }\r\n\r\n  _calcChunksList(mask) {\r\n    const chunksList = []\r\n    let chunkIdx = 0\r\n    const { residues } = this._selection\r\n    const resIdc = this._chunksIdc\r\n\r\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\r\n      const res = residues[resIdc[i]]\r\n      if ((res._mask & mask) !== 0) {\r\n        chunksList[chunkIdx++] = 2 * i\r\n        chunksList[chunkIdx++] = 2 * i + 1\r\n      }\r\n    }\r\n    return chunksList\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const residues = frameData.getResidues()\r\n    const { parent } = this._selection\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const stickRad = this._mode.calcStickRadius()\r\n    let chunkIdx = 0\r\n\r\n    const resIdc = this._selection.chunks\r\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\r\n      const res = residues[resIdc[i]]\r\n      const color = colorer.getResidueColor(res, parent)\r\n      this._processItem(\r\n        chunkIdx++,\r\n        res._cylinders[0],\r\n        res._cylinders[1],\r\n        stickRad,\r\n        color\r\n      )\r\n    }\r\n    geo.finishUpdate()\r\n  }\r\n}\r\n\r\nexport default NucleicItemGroup\r\n",
		"import NucleicItemGroup from './NucleicItemGroup'\r\n\r\nclass NucleicCylindersGroup extends NucleicItemGroup {\r\n  _makeGeoArgs() {\r\n    return [this._selection.chunks.length, this._polyComplexity]\r\n  }\r\n\r\n  _processItem(chunkIdx, cyl1, cyl2, stickRad, color) {\r\n    const geo = this._geo\r\n    geo.setItem(chunkIdx, cyl1, cyl2, stickRad)\r\n    geo.setColor(chunkIdx, color, color)\r\n  }\r\n}\r\n\r\nexport default NucleicCylindersGroup\r\n",
		"import NucleicItemGroup from './NucleicItemGroup'\r\n\r\nclass NucleicSpheresGroup extends NucleicItemGroup {\r\n  _makeGeoArgs() {\r\n    return [this._selection.chunks.length * 2, this._polyComplexity]\r\n  }\r\n\r\n  _processItem(chunkIdx, cyl1, cyl2, stickRad, color) {\r\n    const geo = this._geo\r\n    let idx = chunkIdx * 2\r\n    geo.setItem(idx, cyl1, stickRad)\r\n    geo.setColor(idx, color)\r\n    idx++\r\n    geo.setItem(idx, cyl2, stickRad)\r\n    geo.setColor(idx, color)\r\n  }\r\n}\r\n\r\nexport default NucleicSpheresGroup\r\n",
		"/*\r\nSmooth.js version 0.1.7\r\n\r\nTurn arrays into smooth functions.\r\n\r\nCopyright 2012 Spencer Cohen\r\nLicensed under MIT license (see \"Smooth.js MIT license.txt\")\r\n*/\r\n\r\n/*Constants (these are accessible by Smooth.WHATEVER in user space)\r\n */\r\n\r\n;(function () {\r\n  var AbstractInterpolator,\r\n    CubicInterpolator,\r\n    Enum,\r\n    LinearInterpolator,\r\n    NearestInterpolator,\r\n    PI,\r\n    SincFilterInterpolator,\r\n    Smooth,\r\n    clipClamp,\r\n    clipMirror,\r\n    clipPeriodic,\r\n    defaultConfig,\r\n    getColumn,\r\n    getType,\r\n    isValidNumber,\r\n    k,\r\n    makeLanczosWindow,\r\n    makeScaledFunction,\r\n    makeSincKernel,\r\n    normalizeScaleTo,\r\n    shallowCopy,\r\n    sin,\r\n    sinc,\r\n    v,\r\n    validateNumber,\r\n    validateVector,\r\n    __hasProp = Object.prototype.hasOwnProperty,\r\n    __extends = function (child, parent) {\r\n      for (var key in parent) {\r\n        if (__hasProp.call(parent, key)) child[key] = parent[key]\r\n      }\r\n      function ctor() {\r\n        this.constructor = child\r\n      }\r\n      ctor.prototype = parent.prototype\r\n      child.prototype = new ctor()\r\n      child.__super__ = parent.prototype\r\n      return child\r\n    }\r\n\r\n  Enum = {\r\n    /*Interpolation methods\r\n     */\r\n    METHOD_NEAREST: 'nearest',\r\n    METHOD_LINEAR: 'linear',\r\n    METHOD_CUBIC: 'cubic',\r\n    METHOD_LANCZOS: 'lanczos',\r\n    METHOD_SINC: 'sinc',\r\n    /*Input clipping modes\r\n     */\r\n    CLIP_CLAMP: 'clamp',\r\n    CLIP_ZERO: 'zero',\r\n    CLIP_PERIODIC: 'periodic',\r\n    CLIP_MIRROR: 'mirror',\r\n    /* Constants for control over the cubic interpolation tension\r\n     */\r\n    CUBIC_TENSION_DEFAULT: 0,\r\n    CUBIC_TENSION_CATMULL_ROM: 0\r\n  }\r\n\r\n  defaultConfig = {\r\n    method: Enum.METHOD_CUBIC,\r\n    cubicTension: Enum.CUBIC_TENSION_DEFAULT,\r\n    clip: Enum.CLIP_CLAMP,\r\n    scaleTo: 0,\r\n    sincFilterSize: 2,\r\n    sincWindow: void 0\r\n  }\r\n\r\n  /*Index clipping functions\r\n   */\r\n\r\n  clipClamp = function (i, n) {\r\n    return Math.max(0, Math.min(i, n - 1))\r\n  }\r\n\r\n  clipPeriodic = function (i, n) {\r\n    i = i % n\r\n    if (i < 0) i += n\r\n    return i\r\n  }\r\n\r\n  clipMirror = function (i, n) {\r\n    var period\r\n    period = 2 * (n - 1)\r\n    i = clipPeriodic(i, period)\r\n    if (i > n - 1) i = period - i\r\n    return i\r\n  }\r\n\r\n  /*\r\n  Abstract scalar interpolation class which provides common functionality for all interpolators\r\n  \r\n  Subclasses must override interpolate().\r\n  */\r\n\r\n  AbstractInterpolator = (function () {\r\n    function AbstractInterpolator(array, config) {\r\n      this.array = array.slice(0)\r\n      this.length = this.array.length\r\n      if (\r\n        !(this.clipHelper = {\r\n          clamp: this.clipHelperClamp,\r\n          zero: this.clipHelperZero,\r\n          periodic: this.clipHelperPeriodic,\r\n          mirror: this.clipHelperMirror\r\n        }[config.clip])\r\n      ) {\r\n        throw 'Invalid clip: ' + config.clip\r\n      }\r\n    }\r\n\r\n    AbstractInterpolator.prototype.getClippedInput = function (i) {\r\n      if (0 <= i && i < this.length) {\r\n        return this.array[i]\r\n      } else {\r\n        return this.clipHelper(i)\r\n      }\r\n    }\r\n\r\n    AbstractInterpolator.prototype.clipHelperClamp = function (i) {\r\n      return this.array[clipClamp(i, this.length)]\r\n    }\r\n\r\n    AbstractInterpolator.prototype.clipHelperZero = function (i) {\r\n      return 0\r\n    }\r\n\r\n    AbstractInterpolator.prototype.clipHelperPeriodic = function (i) {\r\n      return this.array[clipPeriodic(i, this.length)]\r\n    }\r\n\r\n    AbstractInterpolator.prototype.clipHelperMirror = function (i) {\r\n      return this.array[clipMirror(i, this.length)]\r\n    }\r\n\r\n    AbstractInterpolator.prototype.interpolate = function (t) {\r\n      throw 'Subclasses of AbstractInterpolator must override the interpolate() method.'\r\n    }\r\n\r\n    return AbstractInterpolator\r\n  })()\r\n\r\n  NearestInterpolator = (function (_super) {\r\n    __extends(NearestInterpolator, _super)\r\n\r\n    function NearestInterpolator() {\r\n      NearestInterpolator.__super__.constructor.apply(this, arguments)\r\n    }\r\n\r\n    NearestInterpolator.prototype.interpolate = function (t) {\r\n      return this.getClippedInput(Math.round(t))\r\n    }\r\n\r\n    return NearestInterpolator\r\n  })(AbstractInterpolator)\r\n\r\n  LinearInterpolator = (function (_super) {\r\n    __extends(LinearInterpolator, _super)\r\n\r\n    function LinearInterpolator() {\r\n      LinearInterpolator.__super__.constructor.apply(this, arguments)\r\n    }\r\n\r\n    LinearInterpolator.prototype.interpolate = function (t) {\r\n      var k\r\n      k = Math.floor(t)\r\n      t -= k\r\n      return (1 - t) * this.getClippedInput(k) + t * this.getClippedInput(k + 1)\r\n    }\r\n\r\n    return LinearInterpolator\r\n  })(AbstractInterpolator)\r\n\r\n  CubicInterpolator = (function (_super) {\r\n    __extends(CubicInterpolator, _super)\r\n\r\n    function CubicInterpolator(array, config) {\r\n      this.tangentFactor = 1 - Math.max(-1, Math.min(1, config.cubicTension))\r\n      CubicInterpolator.__super__.constructor.apply(this, arguments)\r\n    }\r\n\r\n    CubicInterpolator.prototype.getTangent = function (k) {\r\n      return (\r\n        (this.tangentFactor *\r\n          (this.getClippedInput(k + 1) - this.getClippedInput(k - 1))) /\r\n        2\r\n      )\r\n    }\r\n\r\n    CubicInterpolator.prototype.interpolate = function (t) {\r\n      var k, m, p, t2, t3\r\n      k = Math.floor(t)\r\n      m = [this.getTangent(k), this.getTangent(k + 1)]\r\n      p = [this.getClippedInput(k), this.getClippedInput(k + 1)]\r\n      t -= k\r\n      t2 = t * t\r\n      t3 = t * t2\r\n      return (\r\n        (2 * t3 - 3 * t2 + 1) * p[0] +\r\n        (t3 - 2 * t2 + t) * m[0] +\r\n        (-2 * t3 + 3 * t2) * p[1] +\r\n        (t3 - t2) * m[1]\r\n      )\r\n    }\r\n\r\n    return CubicInterpolator\r\n  })(AbstractInterpolator)\r\n  ;(sin = Math.sin), (PI = Math.PI)\r\n\r\n  sinc = function (x) {\r\n    if (x === 0) {\r\n      return 1\r\n    } else {\r\n      return sin(PI * x) / (PI * x)\r\n    }\r\n  }\r\n\r\n  makeLanczosWindow = function (a) {\r\n    return function (x) {\r\n      return sinc(x / a)\r\n    }\r\n  }\r\n\r\n  makeSincKernel = function (window) {\r\n    return function (x) {\r\n      return sinc(x) * window(x)\r\n    }\r\n  }\r\n\r\n  SincFilterInterpolator = (function (_super) {\r\n    __extends(SincFilterInterpolator, _super)\r\n\r\n    function SincFilterInterpolator(array, config) {\r\n      SincFilterInterpolator.__super__.constructor.apply(this, arguments)\r\n      this.a = config.sincFilterSize\r\n      if (!config.sincWindow) throw 'No sincWindow provided'\r\n      this.kernel = makeSincKernel(config.sincWindow)\r\n    }\r\n\r\n    SincFilterInterpolator.prototype.interpolate = function (t) {\r\n      var k, n, sum, _ref, _ref2\r\n      k = Math.floor(t)\r\n      sum = 0\r\n      for (\r\n        n = _ref = k - this.a + 1, _ref2 = k + this.a;\r\n        _ref <= _ref2 ? n <= _ref2 : n >= _ref2;\r\n        _ref <= _ref2 ? n++ : n--\r\n      ) {\r\n        sum += this.kernel(t - n) * this.getClippedInput(n)\r\n      }\r\n      return sum\r\n    }\r\n\r\n    return SincFilterInterpolator\r\n  })(AbstractInterpolator)\r\n\r\n  getColumn = function (arr, i) {\r\n    var row, _i, _len, _results\r\n    _results = []\r\n    for (_i = 0, _len = arr.length; _i < _len; _i++) {\r\n      row = arr[_i]\r\n      _results.push(row[i])\r\n    }\r\n    return _results\r\n  }\r\n\r\n  makeScaledFunction = function (f, baseScale, scaleRange) {\r\n    var scaleFactor, translation\r\n    if (scaleRange.join === '0,1') {\r\n      return f\r\n    } else {\r\n      scaleFactor = baseScale / (scaleRange[1] - scaleRange[0])\r\n      translation = scaleRange[0]\r\n      return function (t) {\r\n        return f(scaleFactor * (t - translation))\r\n      }\r\n    }\r\n  }\r\n\r\n  getType = function (x) {\r\n    return Object.prototype.toString.call(x).slice('[object '.length, -1)\r\n  }\r\n\r\n  validateNumber = function (n) {\r\n    if (isNaN(n)) throw 'NaN in Smooth() input'\r\n    if (getType(n) !== 'Number') throw 'Non-number in Smooth() input'\r\n    if (!isFinite(n)) throw 'Infinity in Smooth() input'\r\n  }\r\n\r\n  validateVector = function (v, dimension) {\r\n    var n, _i, _len\r\n    if (getType(v) !== 'Array') throw 'Non-vector in Smooth() input'\r\n    if (v.length !== dimension) throw 'Inconsistent dimension in Smooth() input'\r\n    for (_i = 0, _len = v.length; _i < _len; _i++) {\r\n      n = v[_i]\r\n      validateNumber(n)\r\n    }\r\n  }\r\n\r\n  isValidNumber = function (n) {\r\n    return getType(n) === 'Number' && isFinite(n) && !isNaN(n)\r\n  }\r\n\r\n  normalizeScaleTo = function (s) {\r\n    var invalidErr\r\n    invalidErr = 'scaleTo param must be number or array of two numbers'\r\n    switch (getType(s)) {\r\n      case 'Number':\r\n        if (!isValidNumber(s)) throw invalidErr\r\n        s = [0, s]\r\n        break\r\n      case 'Array':\r\n        if (s.length !== 2) throw invalidErr\r\n        if (!(isValidNumber(s[0]) && isValidNumber(s[1]))) throw invalidErr\r\n        break\r\n      default:\r\n        throw invalidErr\r\n    }\r\n    return s\r\n  }\r\n\r\n  shallowCopy = function (obj) {\r\n    var copy, k, v\r\n    copy = {}\r\n    for (k in obj) {\r\n      if (!__hasProp.call(obj, k)) continue\r\n      v = obj[k]\r\n      copy[k] = v\r\n    }\r\n    return copy\r\n  }\r\n\r\n  Smooth = function (arr, config) {\r\n    var baseDomainEnd,\r\n      dimension,\r\n      i,\r\n      interpolator,\r\n      interpolatorClass,\r\n      interpolators,\r\n      k,\r\n      n,\r\n      properties,\r\n      smoothFunc,\r\n      v\r\n    if (config == null) config = {}\r\n    properties = {}\r\n    config = shallowCopy(config)\r\n    properties.config = shallowCopy(config)\r\n    if (config.scaleTo == null) config.scaleTo = config.period\r\n    if (config.sincFilterSize == null) {\r\n      config.sincFilterSize = config.lanczosFilterSize\r\n    }\r\n    for (k in defaultConfig) {\r\n      if (!__hasProp.call(defaultConfig, k)) continue\r\n      v = defaultConfig[k]\r\n      if (config[k] == null) config[k] = v\r\n    }\r\n    if (\r\n      !(interpolatorClass = {\r\n        nearest: NearestInterpolator,\r\n        linear: LinearInterpolator,\r\n        cubic: CubicInterpolator,\r\n        lanczos: SincFilterInterpolator,\r\n        sinc: SincFilterInterpolator\r\n      }[config.method])\r\n    ) {\r\n      throw 'Invalid method: ' + config.method\r\n    }\r\n    if (config.method === 'lanczos') {\r\n      config.sincWindow = makeLanczosWindow(config.sincFilterSize)\r\n    }\r\n    if (arr.length < 2) throw 'Array must have at least two elements'\r\n    properties.count = arr.length\r\n    smoothFunc = (function () {\r\n      var _i, _j, _len, _len2\r\n      switch (getType(arr[0])) {\r\n        case 'Number':\r\n          properties.dimension = 'scalar'\r\n          if (Smooth.deepValidation) {\r\n            for (_i = 0, _len = arr.length; _i < _len; _i++) {\r\n              n = arr[_i]\r\n              validateNumber(n)\r\n            }\r\n          }\r\n          interpolator = new interpolatorClass(arr, config)\r\n          return function (t) {\r\n            return interpolator.interpolate(t)\r\n          }\r\n        case 'Array':\r\n          properties.dimension = dimension = arr[0].length\r\n          if (!dimension) throw 'Vectors must be non-empty'\r\n          if (Smooth.deepValidation) {\r\n            for (_j = 0, _len2 = arr.length; _j < _len2; _j++) {\r\n              v = arr[_j]\r\n              validateVector(v, dimension)\r\n            }\r\n          }\r\n          interpolators = (function () {\r\n            var _results\r\n            _results = []\r\n            for (\r\n              i = 0;\r\n              0 <= dimension ? i < dimension : i > dimension;\r\n              0 <= dimension ? i++ : i--\r\n            ) {\r\n              _results.push(new interpolatorClass(getColumn(arr, i), config))\r\n            }\r\n            return _results\r\n          })()\r\n          return function (t) {\r\n            var interpolator, _k, _len3, _results\r\n            _results = []\r\n            for (_k = 0, _len3 = interpolators.length; _k < _len3; _k++) {\r\n              interpolator = interpolators[_k]\r\n              _results.push(interpolator.interpolate(t))\r\n            }\r\n            return _results\r\n          }\r\n        default:\r\n          throw 'Invalid element type: ' + getType(arr[0])\r\n      }\r\n    })()\r\n    if (config.clip === 'periodic') {\r\n      baseDomainEnd = arr.length\r\n    } else {\r\n      baseDomainEnd = arr.length - 1\r\n    }\r\n    config.scaleTo || (config.scaleTo = baseDomainEnd)\r\n    properties.domain = normalizeScaleTo(config.scaleTo)\r\n    smoothFunc = makeScaledFunction(\r\n      smoothFunc,\r\n      baseDomainEnd,\r\n      properties.domain\r\n    )\r\n    properties.domain.sort()\r\n    /*copy properties\r\n     */\r\n    for (k in properties) {\r\n      if (!__hasProp.call(properties, k)) continue\r\n      v = properties[k]\r\n      smoothFunc[k] = v\r\n    }\r\n    return smoothFunc\r\n  }\r\n\r\n  for (k in Enum) {\r\n    if (!__hasProp.call(Enum, k)) continue\r\n    v = Enum[k]\r\n    Smooth[k] = v\r\n  }\r\n\r\n  Smooth.deepValidation = true\r\n  ;(typeof exports !== 'undefined' && exports !== null\r\n    ? exports\r\n    : window\r\n  ).Smooth = Smooth\r\n}.call(this))\r\n",
		"import { Smooth } from '../../../vendors/Smooth'\r\nimport gfxutils from '../../gfxutils'\r\nimport chem from '../../../chem'\r\nimport { Vector2, Vector3 } from 'three'\r\n\r\nconst { ResidueType } = chem\r\n\r\nconst calcMatrix = gfxutils.calcChunkMatrix\r\n\r\nfunction _buildStructureInterpolator(points, tension) {\r\n  const path = Smooth(points, {\r\n    method: Smooth.METHOD_CUBIC,\r\n    clip: Smooth.CLIP_CLAMP,\r\n    cubicTension: tension,\r\n    scaleTo: 1\r\n  })\r\n\r\n  return function (t, argTrans) {\r\n    let transformT = argTrans\r\n    if (transformT === null) {\r\n      // map our range to the [second .. last but one]\r\n      transformT = function (tt) {\r\n        return (tt * (points.length - 1 - 2) + 1) / (points.length - 1)\r\n      }\r\n    }\r\n    const newt = transformT(t)\r\n    const ans = path(newt)\r\n    return new Vector3(ans[0], ans[1], ans[2])\r\n  }\r\n}\r\n\r\nfunction _addPoints(centerPoints, topPoints, idx, residue) {\r\n  if (!residue._isValid) {\r\n    centerPoints[idx] = centerPoints[idx - 1]\r\n    topPoints[idx] = topPoints[idx - 1]\r\n    return\r\n  }\r\n  const cp = residue._controlPoint\r\n  centerPoints[idx] = [cp.x, cp.y, cp.z]\r\n  const tp = cp.clone().add(residue._wingVector)\r\n  topPoints[idx] = [tp.x, tp.y, tp.z]\r\n}\r\n\r\nfunction _addPointsForLoneResidue(centerPoints, topPoints, idx, residue) {\r\n  const nucleic = (residue._type.flags & ResidueType.Flags.NUCLEIC) !== 0\r\n  const nameFrom = nucleic ? \"C5'\" : 'N'\r\n  const nameTo = nucleic ? \"C3'\" : 'C'\r\n\r\n  let posFrom\r\n  let posTo\r\n  residue.forEachAtom((atom) => {\r\n    const name = atom.getVisualName()\r\n    if (!posFrom && name === nameFrom) {\r\n      posFrom = atom.position\r\n    } else if (!posTo && name === nameTo) {\r\n      posTo = atom.position\r\n    }\r\n  })\r\n\r\n  // provide a fallback for unknown residues\r\n  if (!(posFrom && posTo)) {\r\n    posFrom = residue._firstAtom.position\r\n    posTo = residue._lastAtom.position\r\n  }\r\n\r\n  if (posFrom && posTo) {\r\n    const shift = posTo.clone().sub(posFrom)\r\n\r\n    const wing = residue._wingVector\r\n    const cp = residue._controlPoint\r\n    const tp = cp.clone().add(wing)\r\n\r\n    const cpPrev = cp.clone().sub(shift)\r\n    const tpPrev = cpPrev.clone().add(wing)\r\n    centerPoints[idx] = [cpPrev.x, cpPrev.y, cpPrev.z]\r\n    topPoints[idx] = [tpPrev.x, tpPrev.y, tpPrev.z]\r\n    ++idx\r\n    centerPoints[idx] = [cpPrev.x, cpPrev.y, cpPrev.z]\r\n    topPoints[idx] = [tpPrev.x, tpPrev.y, tpPrev.z]\r\n    ++idx\r\n\r\n    centerPoints[idx] = [cp.x, cp.y, cp.z]\r\n    topPoints[idx] = [tp.x, tp.y, tp.z]\r\n    ++idx\r\n\r\n    const cpNext = cp.clone().add(shift)\r\n    const tpNext = cpNext.clone().add(wing)\r\n    centerPoints[idx] = [cpNext.x, cpNext.y, cpNext.z]\r\n    topPoints[idx] = [tpNext.x, tpNext.y, tpNext.z]\r\n    ++idx\r\n    centerPoints[idx] = [cpNext.x, cpNext.y, cpNext.z]\r\n    topPoints[idx] = [tpNext.x, tpNext.y, tpNext.z]\r\n  }\r\n}\r\n\r\nfunction _calcPoints(residues, firstIdx, lastIdx, boundaries) {\r\n  const left = boundaries.start\r\n  const right = boundaries.end\r\n  function _prevIdx(idx) {\r\n    return idx > left && residues[idx - 1]._isValid ? idx - 1 : idx\r\n  }\r\n  function _nextIdx(idx) {\r\n    return idx < right && residues[idx + 1]._isValid ? idx + 1 : idx\r\n  }\r\n\r\n  const topPoints = []\r\n  const centerPoints = []\r\n  let arrIdx = 0\r\n  function _extrapolate2(currIdx, otherIdx) {\r\n    const cp = residues[currIdx]._controlPoint\r\n      .clone()\r\n      .lerp(residues[otherIdx]._controlPoint, -0.25)\r\n    const tp = cp.clone().add(residues[currIdx]._wingVector)\r\n    centerPoints[arrIdx] = [cp.x, cp.y, cp.z]\r\n    topPoints[arrIdx++] = [tp.x, tp.y, tp.z]\r\n    centerPoints[arrIdx] = [cp.x, cp.y, cp.z]\r\n    topPoints[arrIdx++] = [tp.x, tp.y, tp.z]\r\n  }\r\n\r\n  // a single disconnected residue\r\n  const prevIdx = _prevIdx(firstIdx)\r\n  const nextIdx = _nextIdx(lastIdx)\r\n  if (prevIdx === nextIdx) {\r\n    _addPointsForLoneResidue(\r\n      centerPoints,\r\n      topPoints,\r\n      arrIdx,\r\n      residues[firstIdx]\r\n    )\r\n    return { centerPoints, topPoints }\r\n  }\r\n\r\n  // Two points (prev-prev and next-next) are added to support edge conditions for cubic splines, they are ignored\r\n  // Another two (prev and next) were added to support the outside of the sub chain\r\n\r\n  // prev and prev-prev\r\n  if (firstIdx === prevIdx) {\r\n    // do the extrapolation\r\n    _extrapolate2(firstIdx, _nextIdx(firstIdx))\r\n  } else {\r\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[_prevIdx(prevIdx)])\r\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[prevIdx])\r\n  }\r\n\r\n  // main loop\r\n  for (let idx = firstIdx; idx <= lastIdx; ++idx) {\r\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[idx])\r\n  }\r\n\r\n  // next and next-next\r\n  if (nextIdx === _nextIdx(nextIdx)) {\r\n    // do the extrapolation\r\n    _extrapolate2(lastIdx, _prevIdx(lastIdx))\r\n  } else {\r\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[nextIdx])\r\n    _addPoints(centerPoints, topPoints, arrIdx, residues[_nextIdx(nextIdx)])\r\n  }\r\n  return { centerPoints, topPoints }\r\n}\r\n\r\nclass CartoonHelper {\r\n  constructor(residues, startIdx, endIdx, segmentsCount, tension, boundaries) {\r\n    const pointsArrays = _calcPoints(residues, startIdx, endIdx, boundaries)\r\n    this._topInterp = _buildStructureInterpolator(\r\n      pointsArrays.topPoints,\r\n      tension\r\n    )\r\n    this._centerInterp = _buildStructureInterpolator(\r\n      pointsArrays.centerPoints,\r\n      tension\r\n    )\r\n\r\n    this._shift = 0.5 / (endIdx - startIdx + 2)\r\n    this._valueStep =\r\n      (1.0 - 2 * this._shift) /\r\n      (2 * (endIdx - startIdx + 1) * (segmentsCount - 1))\r\n    this._segmentsCount = segmentsCount\r\n  }\r\n\r\n  prepareMatrices(idx, firstRad, secondRad) {\r\n    const mtcCount = this._segmentsCount\r\n    const outMtc = new Array(mtcCount)\r\n    const currRad = new Vector2(0, 0)\r\n\r\n    const topInterp = this._topInterp\r\n    const cenInterp = this._centerInterp\r\n\r\n    let currentValue = this._shift + this._valueStep * (mtcCount - 1) * idx\r\n\r\n    for (let mtxIdx = 0; mtxIdx < mtcCount; ++mtxIdx) {\r\n      const lerpVal = Math.min(1.0, mtxIdx / (mtcCount - 1))\r\n      currRad.lerpVectors(firstRad, secondRad, lerpVal)\r\n\r\n      const currTop = topInterp(currentValue, null)\r\n      const currCenter = cenInterp(currentValue, null)\r\n      currentValue += this._valueStep\r\n      const nextCenter = cenInterp(currentValue, null)\r\n\r\n      outMtc[mtxIdx] = calcMatrix(\r\n        currCenter.clone(),\r\n        nextCenter.clone(),\r\n        currTop.clone().sub(currCenter),\r\n        currRad\r\n      )\r\n    }\r\n\r\n    return outMtc\r\n  }\r\n}\r\n\r\nexport default CartoonHelper\r\n",
		"import ResiduesGroup from './ResiduesGroup'\r\nimport CartoonHelper from './CartoonHelper'\r\nimport { Vector3 } from 'three'\r\n\r\nfunction _createShape(rad, parts) {\r\n  const pts = []\r\n\r\n  for (let i = 0; i < parts; ++i) {\r\n    // starts from pi/2 because it's important that points are lied on the angles of arrows (visual issues if not)\r\n    const a = Math.PI / 2.0 - (2 * Math.PI * i) / parts\r\n\r\n    pts.push(new Vector3(Math.cos(a) * rad, Math.sin(a) * rad, 0))\r\n  }\r\n  return pts\r\n}\r\n\r\nfunction _loopThrough(\r\n  subDiv,\r\n  residues,\r\n  segmentsHeight,\r\n  tension,\r\n  mode,\r\n  callback\r\n) {\r\n  for (let subDivI = 0, subDivN = subDiv.length; subDivI < subDivN; ++subDivI) {\r\n    const subs = subDiv[subDivI].arr\r\n    const { boundaries } = subDiv[subDivI]\r\n    for (let i = 0, n = subs.length; i < n; ++i) {\r\n      const idc = [subs[i].start, subs[i].end]\r\n      const matrixHelper = new CartoonHelper(\r\n        residues,\r\n        idc[0],\r\n        idc[1],\r\n        segmentsHeight,\r\n        tension,\r\n        boundaries\r\n      )\r\n      let prevLast = null\r\n      const startIdx = subs[i].start * 2\r\n      const endIdx = subs[i].end * 2 + 1\r\n      let prevSecondRad = mode.getResidueRadius(residues[0], 0)\r\n      for (let idx = startIdx; idx <= endIdx; ++idx) {\r\n        const resIdx = (idx / 2) | 0\r\n        const currRes = residues[resIdx]\r\n        const firstRad = mode.getResidueRadius(currRes, idx % 2)\r\n        const secondRad = mode.getResidueRadius(currRes, 1 + (idx % 2))\r\n\r\n        const mtc = matrixHelper.prepareMatrices(\r\n          idx - idc[0] * 2,\r\n          firstRad,\r\n          secondRad\r\n        )\r\n        mtc.unshift(prevLast === null ? mtc[0] : prevLast)\r\n\r\n        // Slope - radius is changed along this residue part\r\n        const hasSlope =\r\n          firstRad.x !== secondRad.x || firstRad.y !== secondRad.y\r\n        // Cut - end radius of previous part not equal to start radius of this part. First section of this part lies in the orthogonal plane\r\n        const hasCut =\r\n          firstRad.x !== prevSecondRad.x || firstRad.y !== prevSecondRad.y\r\n\r\n        callback(currRes, mtc, hasSlope, hasCut)\r\n\r\n        prevLast = mtc[segmentsHeight]\r\n        prevSecondRad = secondRad\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass ResiduesSubseqGroup extends ResiduesGroup {\r\n  _makeGeoArgs() {\r\n    const cmpMultiplier = this._mode.getHeightSegmentsRatio()\r\n    this._segmentsHeight = (this._polyComplexity * cmpMultiplier) | 0\r\n    return [\r\n      _createShape(1.0, this._polyComplexity),\r\n      this._segmentsHeight + 1,\r\n      this._selection.chunks.length * 2\r\n    ]\r\n  }\r\n\r\n  _build() {\r\n    const { residues, parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const tension = mode.getTension()\r\n    const geo = this._geo\r\n    let chunkIdx = 0\r\n    const chunkIdc = []\r\n    _loopThrough(\r\n      this._selection.subdivs,\r\n      residues,\r\n      this._segmentsHeight,\r\n      tension,\r\n      mode,\r\n      (currRes, mtc, hasSlope = false, hasCut = false) => {\r\n        const color = colorer.getResidueColor(currRes, parent)\r\n        chunkIdc[chunkIdx] = currRes._index\r\n        geo.setItem(chunkIdx, mtc, hasSlope, hasCut)\r\n        geo.setColor(chunkIdx++, color)\r\n      }\r\n    )\r\n    this._chunksIdc = chunkIdc\r\n    geo.finalize()\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const { parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const tension = mode.getTension()\r\n    const geo = this._geo\r\n    const frameRes = frameData.getResidues()\r\n    let chunkIdx = 0\r\n    const updateColor = frameData.needsColorUpdate(colorer)\r\n    _loopThrough(\r\n      this._selection.subdivs,\r\n      frameRes,\r\n      this._segmentsHeight,\r\n      tension,\r\n      mode,\r\n      (currRes, mtc) => {\r\n        geo.setItem(chunkIdx, mtc)\r\n        if (updateColor) {\r\n          geo.setColor(chunkIdx, colorer.getResidueColor(currRes, parent))\r\n        }\r\n        chunkIdx++\r\n      }\r\n    )\r\n    geo.finalize()\r\n  }\r\n}\r\n\r\nexport default ResiduesSubseqGroup\r\n",
		"import ChemGroup from './ChemGroup'\r\n\r\nclass ResiduesTraceGroup extends ChemGroup {\r\n  _makeGeoArgs() {\r\n    const subDiv = this._selection.subdivs\r\n    let chunksCount = 0\r\n    for (\r\n      let subDivI = 0, subDivN = subDiv.length;\r\n      subDivI < subDivN;\r\n      ++subDivI\r\n    ) {\r\n      const subs = subDiv[subDivI].arr\r\n      for (let i = 0, n = subs.length; i < n; ++i) {\r\n        chunksCount += subs[i].end - subs[i].start\r\n      }\r\n    }\r\n    return [chunksCount, this._polyComplexity]\r\n  }\r\n\r\n  _build() {\r\n    const { residues, parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    let chunkIdx = 0\r\n    const chunkIdc = []\r\n    const subDiv = this._selection.subdivs\r\n    const stickRad = mode.calcStickRadius()\r\n\r\n    for (\r\n      let subDivI = 0, subDivN = subDiv.length;\r\n      subDivI < subDivN;\r\n      ++subDivI\r\n    ) {\r\n      const subs = subDiv[subDivI].arr\r\n      for (let i = 0, n = subs.length; i < n; ++i) {\r\n        const startIdx = subs[i].start\r\n        const endIdx = subs[i].end\r\n        let prevRes = residues[startIdx]\r\n        for (let idx = startIdx + 1; idx <= endIdx; ++idx) {\r\n          const currRes = residues[idx]\r\n          chunkIdc[chunkIdx] = { first: prevRes._index, second: currRes._index }\r\n          geo.setItem(\r\n            chunkIdx,\r\n            prevRes._controlPoint,\r\n            currRes._controlPoint,\r\n            stickRad\r\n          )\r\n          geo.setColor(\r\n            chunkIdx,\r\n            colorer.getResidueColor(prevRes, parent),\r\n            colorer.getResidueColor(currRes, parent)\r\n          )\r\n          chunkIdx++\r\n          prevRes = currRes\r\n        }\r\n      }\r\n    }\r\n\r\n    this._chunksIdc = chunkIdc\r\n    geo.finalize()\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n\r\n    const residues = frameData.getResidues()\r\n    const { parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    let chunkIdx = 0\r\n    const subDiv = this._selection.subdivs\r\n    const stickRad = mode.calcStickRadius()\r\n    const updateColor = frameData.needsColorUpdate(colorer)\r\n\r\n    for (\r\n      let subDivI = 0, subDivN = subDiv.length;\r\n      subDivI < subDivN;\r\n      ++subDivI\r\n    ) {\r\n      const subs = subDiv[subDivI].arr\r\n      for (let i = 0, n = subs.length; i < n; ++i) {\r\n        const startIdx = subs[i].start\r\n        const endIdx = subs[i].end\r\n        let prevRes = residues[startIdx]\r\n        for (let idx = startIdx + 1; idx <= endIdx; ++idx) {\r\n          const currRes = residues[idx]\r\n          geo.setItem(\r\n            chunkIdx,\r\n            prevRes._controlPoint,\r\n            currRes._controlPoint,\r\n            stickRad\r\n          )\r\n          if (updateColor) {\r\n            geo.setColor(\r\n              chunkIdx,\r\n              colorer.getResidueColor(prevRes, parent),\r\n              colorer.getResidueColor(currRes, parent)\r\n            )\r\n          }\r\n          chunkIdx++\r\n          prevRes = currRes\r\n        }\r\n      }\r\n    }\r\n\r\n    geo.finalize()\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const inters = []\r\n    const { residues } = this._selection\r\n    this._mesh.raycast(raycaster, inters)\r\n    const chunksToIdx = this._chunksIdc\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue\r\n      }\r\n      const { chunkIdx } = inters[i]\r\n      const chunk = chunksToIdx[Math.floor(chunkIdx / 2)]\r\n      const resIdx = chunkIdx % 2 === 0 ? chunk.first : chunk.second\r\n      if (resIdx < residues.length) {\r\n        inters[i].residue = residues[resIdx]\r\n        intersects.push(inters[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  _calcChunksList(mask) {\r\n    const chunksList = []\r\n    const chunksToIdx = this._chunksIdc\r\n    const { residues } = this._selection\r\n    for (let i = 0, n = chunksToIdx.length; i < n; ++i) {\r\n      const chunk = chunksToIdx[i]\r\n      if (residues[chunk.first]._mask & mask) {\r\n        chunksList.push(i * 2)\r\n      }\r\n      if (residues[chunk.second]._mask & mask) {\r\n        chunksList.push(i * 2 + 1)\r\n      }\r\n    }\r\n    return chunksList\r\n  }\r\n}\r\n\r\nexport default ResiduesTraceGroup\r\n",
		"import ChemGroup from './ChemGroup'\r\nimport Bond from '../../../chem/Bond'\r\n\r\nfunction getCylinderCount(bondOrder) {\r\n  return bondOrder < 2 ? 1 : bondOrder\r\n}\r\n\r\nclass BondsGroup extends ChemGroup {\r\n  _makeGeoArgs() {\r\n    const drawMultiple = this._mode.drawMultiorderBonds()\r\n    const showAromatic = this._mode.showAromaticLoops()\r\n    const bondsIdc = this._selection.chunks\r\n    const { bonds } = this._selection\r\n    let bondsCount = 0\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      bondsCount += this.getBondOrder(\r\n        bonds[bondsIdc[i]],\r\n        drawMultiple,\r\n        showAromatic\r\n      )\r\n    }\r\n    return [bondsCount, this._polyComplexity]\r\n  }\r\n\r\n  getBondOrder(bond, drawMultiple, showAromatic) {\r\n    let bondOrder = 1\r\n    if (\r\n      drawMultiple &&\r\n      (!showAromatic || bond._type !== Bond.BondType.AROMATIC)\r\n    ) {\r\n      bondOrder = getCylinderCount(bond._order)\r\n    }\r\n    return bondOrder\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const { bonds } = this._selection\r\n    const inters = []\r\n    this._mesh.raycast(raycaster, inters)\r\n    const bondsIdc = this._chunksIdc\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue\r\n      }\r\n      const { chunkIdx } = inters[i]\r\n      const bondIdx = bondsIdc[Math.floor(chunkIdx / 2)]\r\n      if (bondIdx < bonds.length) {\r\n        const bond = bonds[bondIdx]\r\n        inters[i].atom = chunkIdx % 2 === 0 ? bond._left : bond._right\r\n        intersects.push(inters[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  _calcChunksList(mask, innerOnly) {\r\n    const chunksList = []\r\n    const { bonds } = this._selection\r\n    const chunksToIdx = this._chunksIdc\r\n    for (let i = 0, n = chunksToIdx.length; i < n; ++i) {\r\n      const bond = bonds[chunksToIdx[i]]\r\n      if (bond._left.mask & mask && (!innerOnly || bond._right.mask & mask)) {\r\n        chunksList.push(2 * i)\r\n      }\r\n      if (bond._right.mask & mask && (!innerOnly || bond._left.mask & mask)) {\r\n        chunksList.push(2 * i + 1)\r\n      }\r\n    }\r\n    return chunksList\r\n  }\r\n}\r\n\r\nexport default BondsGroup\r\n",
		"import BondsGroup from './BondsGroup'\r\nimport { Vector3 } from 'three'\r\n\r\nclass BondsCylinderGroup extends BondsGroup {\r\n  _build() {\r\n    const bondsIdc = this._selection.chunks\r\n    const { bonds, parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const drawMultiple = mode.drawMultiorderBonds()\r\n    const showAromatic = mode.showAromaticLoops()\r\n\r\n    const stickRad = mode.calcStickRadius()\r\n    const emptyOffset = mode.calcSpaceFraction()\r\n    let normDir\r\n    const leftPos = new Vector3()\r\n    const rightPos = new Vector3()\r\n    let currBondIdx = 0\r\n    const chunksToIdx = []\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      const bond = bonds[bondsIdc[i]]\r\n      const atom1 = bond._left\r\n      const atom2 = bond._right\r\n      const a1Pos = atom1.position\r\n      const a2Pos = atom2.position\r\n      normDir = bond.calcNormalDir()\r\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic)\r\n      const minRad = Math.min(\r\n        mode.calcAtomRadius(atom1),\r\n        mode.calcAtomRadius(atom2)\r\n      )\r\n      const dist = (2 * minRad) / order\r\n      const currStickRad = drawMultiple\r\n        ? Math.min(stickRad, dist * 0.5 * (1.0 - emptyOffset))\r\n        : stickRad\r\n\r\n      for (let j = 0; j < order; ++j) {\r\n        const scale =\r\n          dist *\r\n          (order % 2 === 0\r\n            ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\r\n            : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2)))\r\n        chunksToIdx[currBondIdx] = bond._index\r\n        leftPos.copy(a1Pos)\r\n        leftPos.addScaledVector(normDir, scale)\r\n        rightPos.copy(a2Pos)\r\n        rightPos.addScaledVector(normDir, scale)\r\n        geo.setItem(currBondIdx, leftPos, rightPos, currStickRad)\r\n        geo.setColor(\r\n          currBondIdx++,\r\n          colorer.getAtomColor(atom1, parent),\r\n          colorer.getAtomColor(atom2, parent)\r\n        )\r\n      }\r\n    }\r\n\r\n    geo.finalize()\r\n    this._chunksIdc = chunksToIdx\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    const bondsIdc = this._selection.chunks\r\n    const { bonds } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const drawMultiple = mode.drawMultiorderBonds()\r\n    const showAromatic = mode.showAromaticLoops()\r\n\r\n    const stickRad = mode.calcStickRadius()\r\n    const emptyOffset = mode.calcSpaceFraction()\r\n    let normDir\r\n    const leftPos = new Vector3()\r\n    const rightPos = new Vector3()\r\n    let currBondIdx = 0\r\n    const updateColor = frameData.needsColorUpdate(colorer)\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      const bond = bonds[bondsIdc[i]]\r\n      const atom1 = bond._left\r\n      const atom2 = bond._right\r\n      const a1Pos = frameData.getAtomPos(atom1.index).clone()\r\n      const a2Pos = frameData.getAtomPos(atom2.index)\r\n      normDir = bond.calcNormalDir()\r\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic)\r\n      const minRad = Math.min(\r\n        mode.calcAtomRadius(atom1),\r\n        mode.calcAtomRadius(atom2)\r\n      )\r\n      const dist = (2 * minRad) / order\r\n      const currStickRad = drawMultiple\r\n        ? Math.min(stickRad, dist * 0.5 * (1.0 - emptyOffset))\r\n        : stickRad\r\n\r\n      for (let j = 0; j < order; ++j) {\r\n        const scale =\r\n          dist *\r\n          (order % 2 === 0\r\n            ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\r\n            : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2)))\r\n        leftPos.copy(a1Pos)\r\n        leftPos.addScaledVector(normDir, scale)\r\n        rightPos.copy(a2Pos)\r\n        rightPos.addScaledVector(normDir, scale)\r\n        geo.setItem(currBondIdx, leftPos, rightPos, currStickRad)\r\n        if (updateColor) {\r\n          geo.setColor(\r\n            currBondIdx,\r\n            frameData.getAtomColor(colorer, atom1),\r\n            frameData.getAtomColor(colorer, atom2)\r\n          )\r\n        }\r\n        currBondIdx++\r\n      }\r\n    }\r\n    geo.finalize()\r\n  }\r\n}\r\n\r\nexport default BondsCylinderGroup\r\n",
		"import BondsGroup from './BondsGroup'\r\nimport { Vector3 } from 'three'\r\n\r\nconst STEP_SIZE = 0.15\r\n\r\nclass BondsLinesGroup extends BondsGroup {\r\n  _build() {\r\n    const bondsIdc = this._selection.chunks\r\n    const { bonds, parent } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const drawMultiple = mode.drawMultiorderBonds()\r\n    const showAromatic = mode.showAromaticLoops()\r\n\r\n    const bondDir = new Vector3()\r\n\r\n    const leftPos = new Vector3()\r\n    const rightPos = new Vector3()\r\n    let currBondIdx = 0\r\n    const chunksToIdx = []\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      const bond = bonds[bondsIdc[i]]\r\n      const atom1 = bond._left\r\n      const atom2 = bond._right\r\n      const a1Pos = atom1.position\r\n      const a2Pos = atom2.position\r\n      const a1Hangs = atom1.bonds.length === 1\r\n      const a2Hangs = atom2.bonds.length === 1\r\n      bondDir.subVectors(a2Pos, a1Pos)\r\n      const len = bondDir.length()\r\n      const normDir = bond.calcNormalDir()\r\n\r\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic)\r\n\r\n      for (let j = 0; j < order; ++j) {\r\n        leftPos.copy(a1Pos)\r\n        rightPos.copy(a2Pos)\r\n        let scale =\r\n          order % 2 === 0\r\n            ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\r\n            : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2))\r\n        chunksToIdx[currBondIdx] = bond._index\r\n        if (order === 2 && !a1Hangs && !a2Hangs) {\r\n          scale -= 0.5\r\n          scale *= -1\r\n        }\r\n\r\n        if (!a1Hangs && !a2Hangs && order > 1 && scale !== 0) {\r\n          leftPos.lerpVectors(a1Pos, a2Pos, STEP_SIZE / len)\r\n          rightPos.lerpVectors(a1Pos, a2Pos, 1.0 - STEP_SIZE / len)\r\n        }\r\n\r\n        scale *= STEP_SIZE\r\n\r\n        leftPos.addScaledVector(normDir, scale)\r\n        rightPos.addScaledVector(normDir, scale)\r\n        geo.setItem(currBondIdx, leftPos, rightPos)\r\n        geo.setColor(\r\n          currBondIdx++,\r\n          colorer.getAtomColor(atom1, parent),\r\n          colorer.getAtomColor(atom2, parent)\r\n        )\r\n      }\r\n    }\r\n    geo.finalize()\r\n    this._chunksIdc = chunksToIdx\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const bondsIdc = this._selection.chunks\r\n    const { bonds } = this._selection\r\n    const mode = this._mode\r\n    const colorer = this._colorer\r\n    const geo = this._geo\r\n    const drawMultiple = mode.drawMultiorderBonds()\r\n    const showAromatic = mode.showAromaticLoops()\r\n\r\n    const bondDir = new Vector3()\r\n\r\n    const leftPos = new Vector3()\r\n    const rightPos = new Vector3()\r\n    let currBondIdx = 0\r\n    const updateColor = frameData.needsColorUpdate(colorer)\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      const bond = bonds[bondsIdc[i]]\r\n      const atom1 = bond._left\r\n      const atom2 = bond._right\r\n      const a1Pos = frameData.getAtomPos(atom1.index).clone()\r\n      const a2Pos = frameData.getAtomPos(atom2.index)\r\n      const a1Hangs = atom1.bonds.length === 1\r\n      const a2Hangs = atom2.bonds.length === 1\r\n      bondDir.subVectors(a2Pos, a1Pos)\r\n      const len = bondDir.length()\r\n      const normDir = bond.calcNormalDir()\r\n\r\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic)\r\n\r\n      for (let j = 0; j < order; ++j) {\r\n        leftPos.copy(a1Pos)\r\n        rightPos.copy(a2Pos)\r\n        let scale =\r\n          order % 2 === 0\r\n            ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\r\n            : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2))\r\n        if (order === 2 && !a1Hangs && !a2Hangs) {\r\n          scale -= 0.5\r\n          scale *= -1\r\n        }\r\n\r\n        if (!a1Hangs && !a2Hangs && order > 1 && scale !== 0) {\r\n          leftPos.lerpVectors(a1Pos, a2Pos, STEP_SIZE / len)\r\n          rightPos.lerpVectors(a1Pos, a2Pos, 1.0 - STEP_SIZE / len)\r\n        }\r\n\r\n        scale *= STEP_SIZE\r\n\r\n        leftPos.addScaledVector(normDir, scale)\r\n        rightPos.addScaledVector(normDir, scale)\r\n        geo.setItem(currBondIdx, leftPos, rightPos)\r\n        if (updateColor) {\r\n          geo.setColor(\r\n            currBondIdx,\r\n            frameData.getAtomColor(colorer, atom1),\r\n            frameData.getAtomColor(colorer, atom2)\r\n          )\r\n        }\r\n        currBondIdx++\r\n      }\r\n    }\r\n    geo.finalize()\r\n  }\r\n}\r\n\r\nexport default BondsLinesGroup\r\n",
		"import AtomsSphereGroup from './AtomsSphereGroup'\r\nimport AtomsSurfaceGroup from './AtomsSurfaceGroup'\r\nimport AtomsSASSESGroupStub from './AtomsSASSESGroupStub'\r\nimport AtomsTextGroup from './AtomsTextGroup'\r\nimport AromaticTorusGroup from './AromaticTorusGroup'\r\nimport AromaticLinesGroup from './AromaticLinesGroup'\r\nimport NucleicCylindersGroup from './NucleicCylindersGroup'\r\nimport NucleicSpheresGroup from './NucleicSpheresGroup'\r\nimport ResiduesSubseqGroup from './ResiduesSubseqGroup'\r\nimport ResiduesTraceGroup from './ResiduesTraceGroup'\r\nimport BondsCylinderGroup from './BondsCylinderGroup'\r\nimport BondsLinesGroup from './BondsLinesGroup'\r\n\r\nexport default {\r\n  AtomsSphereGroup,\r\n  AtomsSurfaceGroup,\r\n  AtomsSASSESGroupStub,\r\n  AtomsTextGroup,\r\n  AromaticTorusGroup,\r\n  AromaticLinesGroup,\r\n  NucleicCylindersGroup,\r\n  NucleicSpheresGroup,\r\n  ResiduesSubseqGroup,\r\n  ResiduesTraceGroup,\r\n  BondsCylinderGroup,\r\n  BondsLinesGroup\r\n}\r\n",
		"import RCGroup from '../../RCGroup'\r\n\r\nclass AtomsProcessor extends RCGroup {\r\n  constructor(\r\n    AtomsGroup,\r\n    geoParams,\r\n    complex,\r\n    colorer,\r\n    mode,\r\n    polyComplexity,\r\n    mask,\r\n    material\r\n  ) {\r\n    super()\r\n    const self = this\r\n    this._complex = complex\r\n    this._mode = mode\r\n    const atoms = complex.getAtoms()\r\n    const transforms = complex.getTransforms()\r\n\r\n    complex.forEachComponent((component) => {\r\n      const atomsIdc = []\r\n      let atomCount = 0\r\n      component.forEachAtom((atom) => {\r\n        if (!self._checkAtom(atom, mask)) {\r\n          return\r\n        }\r\n        atomsIdc[atomCount++] = atom.index\r\n      })\r\n      if (atomCount === 0) {\r\n        return\r\n      }\r\n      const atomsGroup = new AtomsGroup(\r\n        geoParams,\r\n        {\r\n          atoms,\r\n          chunks: atomsIdc,\r\n          parent: complex\r\n        },\r\n        colorer,\r\n        mode,\r\n        transforms,\r\n        polyComplexity,\r\n        material\r\n      )\r\n      atomsGroup._component = component\r\n      self.add(atomsGroup)\r\n    })\r\n  }\r\n\r\n  _checkAtom(atom, mask) {\r\n    return atom.mask & mask\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = []\r\n    const { children } = this\r\n    let meshIdx = 0\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly)\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j]\r\n          subsetEl._component = children[i]._component\r\n          totalSubset[meshIdx++] = subsetEl\r\n        }\r\n      }\r\n    }\r\n    return totalSubset\r\n  }\r\n}\r\n\r\nexport default AtomsProcessor\r\n",
		"import AtomsProcessor from './AtomsProcessor'\r\n\r\nclass OrphanAtomsProcessor extends AtomsProcessor {\r\n  _checkAtom(atom, mask) {\r\n    if (!(atom.mask & mask)) {\r\n      return false\r\n    }\r\n\r\n    const { bonds } = atom\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      if (bonds[i]._left.mask & mask && bonds[i]._right.mask & mask) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n}\r\n\r\nexport default OrphanAtomsProcessor\r\n",
		"import RCGroup from '../../RCGroup'\r\n\r\nclass ResiduesProcessor extends RCGroup {\r\n  constructor(\r\n    ResidueGroup,\r\n    geoParams,\r\n    complex,\r\n    colorer,\r\n    mode,\r\n    polyComplexity,\r\n    mask,\r\n    material\r\n  ) {\r\n    super()\r\n    const self = this\r\n    this._complex = complex\r\n    const residues = complex.getResidues()\r\n    const transforms = complex.getTransforms()\r\n\r\n    complex.forEachComponent((component) => {\r\n      let chunksCount = 0\r\n      const resIdc = []\r\n      component.forEachResidue((residue) => {\r\n        if (self._checkResidue(residue, mask)) {\r\n          resIdc[chunksCount++] = residue._index\r\n        }\r\n      })\r\n\r\n      if (chunksCount === 0) {\r\n        return\r\n      }\r\n      const residuesGroup = new ResidueGroup(\r\n        geoParams,\r\n        {\r\n          residues,\r\n          chunks: resIdc,\r\n          parent: complex\r\n        },\r\n        colorer,\r\n        mode,\r\n        transforms,\r\n        polyComplexity,\r\n        material\r\n      )\r\n      residuesGroup._component = component\r\n      self.add(residuesGroup)\r\n    })\r\n  }\r\n\r\n  checkResidue(residue, mask) {\r\n    return residue._mask & mask\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = []\r\n    const { children } = this\r\n    let meshIdx = 0\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly)\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j]\r\n          subsetEl._component = children[i]._component\r\n          totalSubset[meshIdx++] = subsetEl\r\n        }\r\n      }\r\n    }\r\n    return totalSubset\r\n  }\r\n}\r\n\r\nexport default ResiduesProcessor\r\n",
		"import ResidueProcessor from './ResiduesProcessor'\r\n\r\nclass NucleicProcessor extends ResidueProcessor {\r\n  _checkResidue(residue, mask) {\r\n    return mask & residue._mask && residue._cylinders !== null\r\n  }\r\n}\r\nexport default NucleicProcessor\r\n",
		"import RCGroup from '../../RCGroup'\r\n\r\nclass SubseqsProcessor extends RCGroup {\r\n  constructor(\r\n    ResidueGroup,\r\n    geoParams,\r\n    complex,\r\n    colorer,\r\n    mode,\r\n    polyComplexity,\r\n    mask,\r\n    material\r\n  ) {\r\n    super()\r\n    const self = this\r\n    this._complex = complex\r\n    const residues = complex.getResidues()\r\n    const transforms = complex.getTransforms()\r\n\r\n    complex.forEachComponent((component) => {\r\n      const subDivs = component.getMaskedSubdivSequences(mask)\r\n\r\n      let chunksCount = 0\r\n      const resIdc = []\r\n      for (\r\n        let subDivI = 0, subDivN = subDivs.length;\r\n        subDivI < subDivN;\r\n        ++subDivI\r\n      ) {\r\n        const subs = subDivs[subDivI].arr\r\n        for (let i = 0, n = subs.length; i < n; ++i) {\r\n          for (let j = subs[i].start, jEnd = subs[i].end; j <= jEnd; ++j) {\r\n            resIdc[chunksCount++] = residues[j]._index\r\n          }\r\n        }\r\n      }\r\n\r\n      if (chunksCount === 0) {\r\n        return\r\n      }\r\n      const residuesGroup = new ResidueGroup(\r\n        geoParams,\r\n        {\r\n          residues,\r\n          chunks: resIdc,\r\n          subdivs: subDivs,\r\n          parent: complex\r\n        },\r\n        colorer,\r\n        mode,\r\n        transforms,\r\n        polyComplexity,\r\n        material\r\n      )\r\n      residuesGroup._component = component\r\n      self.add(residuesGroup)\r\n    })\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = []\r\n    const { children } = this\r\n    let meshIdx = 0\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly)\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j]\r\n          subsetEl._component = children[i]._component\r\n          totalSubset[meshIdx++] = subsetEl\r\n        }\r\n      }\r\n    }\r\n    return totalSubset\r\n  }\r\n}\r\n\r\nexport default SubseqsProcessor\r\n",
		"import RCGroup from '../../RCGroup'\r\n\r\nclass BondsProcessor extends RCGroup {\r\n  constructor(\r\n    BondsGroup,\r\n    geoParams,\r\n    complex,\r\n    colorer,\r\n    mode,\r\n    polyComplexity,\r\n    mask,\r\n    material\r\n  ) {\r\n    super()\r\n    const self = this\r\n    this._complex = complex\r\n    const bonds = complex.getBonds()\r\n    const transforms = complex.getTransforms()\r\n\r\n    complex.forEachComponent((component) => {\r\n      const bondsIdc = []\r\n      let bondsCount = 0\r\n      component.forEachBond((bond) => {\r\n        const atom1 = bond._left\r\n        const atom2 = bond._right\r\n        if (!(atom1.mask & mask) || !(atom2.mask & mask)) {\r\n          return\r\n        }\r\n        bondsIdc[bondsCount++] = bond._index\r\n      })\r\n      if (bondsCount === 0) {\r\n        return\r\n      }\r\n      const bondsGroup = new BondsGroup(\r\n        geoParams,\r\n        {\r\n          bonds,\r\n          chunks: bondsIdc,\r\n          parent: complex\r\n        },\r\n        colorer,\r\n        mode,\r\n        transforms,\r\n        polyComplexity,\r\n        material\r\n      )\r\n      bondsGroup._component = component\r\n      self.add(bondsGroup)\r\n    })\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = []\r\n    const { children } = this\r\n    let meshIdx = 0\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly)\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j]\r\n          subsetEl._component = children[i]._component\r\n          totalSubset[meshIdx++] = subsetEl\r\n        }\r\n      }\r\n    }\r\n    return totalSubset\r\n  }\r\n}\r\n\r\nexport default BondsProcessor\r\n",
		"import RCGroup from '../../RCGroup'\r\n\r\nclass AromaticProcessor extends RCGroup {\r\n  constructor(\r\n    AromaticGroup,\r\n    geoParams,\r\n    complex,\r\n    colorer,\r\n    mode,\r\n    polyComplexity,\r\n    mask,\r\n    material\r\n  ) {\r\n    super()\r\n    const self = this\r\n    this._complex = complex\r\n    const atoms = complex.getAtoms()\r\n    const transforms = complex.getTransforms()\r\n    if (!mode.showAromaticLoops()) {\r\n      return\r\n    }\r\n\r\n    complex.forEachComponent((component) => {\r\n      const atomsIdc = []\r\n      let chunksCount = 0\r\n      const cycles = []\r\n      let cycleIdx = 0\r\n      component.forEachCycle((cycle) => {\r\n        const cycAtoms = cycle.atoms\r\n        let perCycle = 0\r\n        for (let i = 0, n = cycAtoms.length; i < n; ++i) {\r\n          if ((cycAtoms[i].mask & mask) !== 0) {\r\n            ++perCycle\r\n            atomsIdc[chunksCount++] = cycAtoms[i].index\r\n          }\r\n        }\r\n        if (perCycle > 0) {\r\n          cycles[cycleIdx++] = cycle\r\n        }\r\n      })\r\n\r\n      const atomsGroup = new AromaticGroup(\r\n        geoParams,\r\n        {\r\n          cycles,\r\n          atoms,\r\n          chunks: atomsIdc,\r\n          parent: complex\r\n        },\r\n        colorer,\r\n        mode,\r\n        transforms,\r\n        polyComplexity,\r\n        material\r\n      )\r\n      atomsGroup._component = component\r\n      self.add(atomsGroup)\r\n    })\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = []\r\n    const { children } = this\r\n    let meshIdx = 0\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly)\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j]\r\n          subsetEl._component = children[i]._component\r\n          totalSubset[meshIdx++] = subsetEl\r\n        }\r\n      }\r\n    }\r\n    return totalSubset\r\n  }\r\n}\r\n\r\nexport default AromaticProcessor\r\n",
		"import AtomsProcessor from './AtomsProcessor'\r\nimport OrphanAtomsProcessor from './OrphanAtomsProcessor'\r\nimport ResiduesProcessor from './ResiduesProcessor'\r\nimport NucleicProcessor from './NucleicProcessor'\r\nimport SubseqsProcessor from './SubseqsProcessor'\r\nimport BondsProcessor from './BondsProcessor'\r\nimport AromaticProcessor from './AromaticProcessor'\r\n\r\nexport default {\r\n  Atoms: AtomsProcessor,\r\n  OrphanAtoms: OrphanAtomsProcessor,\r\n  Residues: ResiduesProcessor,\r\n  Nucleic: NucleicProcessor,\r\n  Subseqs: SubseqsProcessor,\r\n  Bonds: BondsProcessor,\r\n  Aromatic: AromaticProcessor\r\n}\r\n",
		"import MeshCreator from '../../meshes/MeshCreator'\r\nimport groups from './groups'\r\nimport processors from '../processors/processors'\r\n\r\nfunction _bakeGroup(triplet, Processor, Group) {\r\n  return function (complex, colorer, mode, polyComplexity, mask, material) {\r\n    return new Processor(\r\n      Group,\r\n      triplet,\r\n      complex,\r\n      colorer,\r\n      mode,\r\n      polyComplexity,\r\n      mask,\r\n      material\r\n    )\r\n  }\r\n}\r\n\r\nclass GroupsFactory {\r\n  static AtomsSpheres(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createSpheres(caps, settings)\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSphereGroup)\r\n  }\r\n\r\n  static OrphanedAtomsCrosses(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createCrosses(caps, settings, renderParams)\r\n\r\n    return _bakeGroup(\r\n      gfxTriplet,\r\n      processors.OrphanAtoms,\r\n      groups.AtomsSphereGroup\r\n    )\r\n  }\r\n\r\n  static BondsCylinders(caps, settings) {\r\n    const gfxTriplet = MeshCreator.create2CCylinders(caps, settings)\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Bonds, groups.BondsCylinderGroup)\r\n  }\r\n\r\n  static BondsLines(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.create2CLines(caps, settings, renderParams)\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Bonds, groups.BondsLinesGroup)\r\n  }\r\n\r\n  static CartoonChains(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createExtrudedChains(caps, settings)\r\n\r\n    return _bakeGroup(\r\n      gfxTriplet,\r\n      processors.Subseqs,\r\n      groups.ResiduesSubseqGroup\r\n    )\r\n  }\r\n\r\n  static TraceChains(caps, settings) {\r\n    const gfxTriplet = MeshCreator.create2CClosedCylinders(caps, settings)\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Subseqs, groups.ResiduesTraceGroup)\r\n  }\r\n\r\n  static NucleicSpheres(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createSpheres(caps, settings)\r\n\r\n    return _bakeGroup(\r\n      gfxTriplet,\r\n      processors.Nucleic,\r\n      groups.NucleicSpheresGroup\r\n    )\r\n  }\r\n\r\n  static NucleicCylinders(caps, settings) {\r\n    const gfxTriplet = MeshCreator.create2CCylinders(caps, settings)\r\n\r\n    return _bakeGroup(\r\n      gfxTriplet,\r\n      processors.Nucleic,\r\n      groups.NucleicCylindersGroup\r\n    )\r\n  }\r\n\r\n  static ALoopsTorus(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createExtrudedChains(caps, settings)\r\n\r\n    return _bakeGroup(\r\n      gfxTriplet,\r\n      processors.Aromatic,\r\n      groups.AromaticTorusGroup\r\n    )\r\n  }\r\n\r\n  static ALoopsLines(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createChunkedLines(\r\n      caps,\r\n      settings,\r\n      renderParams\r\n    )\r\n\r\n    return _bakeGroup(\r\n      gfxTriplet,\r\n      processors.Aromatic,\r\n      groups.AromaticLinesGroup\r\n    )\r\n  }\r\n\r\n  static QuickSurfGeo(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createQuickSurface(\r\n      caps,\r\n      settings,\r\n      renderParams\r\n    )\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSurfaceGroup)\r\n  }\r\n\r\n  static ContactSurfaceGeo(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createContactSurface(\r\n      caps,\r\n      settings,\r\n      renderParams\r\n    )\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSurfaceGroup)\r\n  }\r\n\r\n  static SASSESSurfaceGeo(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createSASSES(caps, settings, renderParams)\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSASSESGroupStub)\r\n  }\r\n\r\n  static TextLabelsGeo(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createLabels(caps, settings)\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsTextGroup)\r\n  }\r\n}\r\n\r\nexport default GroupsFactory\r\n",
		"import { merge, isArray, isEmpty } from 'lodash'\r\nimport makeContextDependent from '../../utils/makeContextDependent'\r\nimport utils from '../../utils'\r\nimport gfxutils from '../gfxutils'\r\nimport factory from './groups/GroupsFactory'\r\n\r\n/**\r\n * Create new mode.\r\n *\r\n * @param {object=} opts - Options to override defaults with.\r\n *\r\n *   These options are copied locally and not kept by reference, so the created instance will not reflect further\r\n *   changes to the `opts` object. However, changes in defaults **will** affect the mode after its creation.\r\n *\r\n * @exports Mode\r\n * @this Mode\r\n * @abstract\r\n * @constructor\r\n * @classdesc Basic class for all available modes used for building and displaying molecule geometry.\r\n */\r\nclass Mode {\r\n  constructor(opts) {\r\n    if (this.constructor === Mode) {\r\n      throw new Error('Can not instantiate abstract class!')\r\n    }\r\n    /**\r\n     * Mode options inherited (prototyped) from defaults.\r\n     * @type {object}\r\n     */\r\n    this.opts = merge(\r\n      utils.deriveDeep(this.settings.now.modes[this.id], true),\r\n      opts\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Get mode identification, probably with options.\r\n   * @returns {string|Array} Mode identifier string ({@link Mode#id}) or two-element array containing both mode\r\n   *   identifier and options ({@link Mode#opts}).\r\n   * Options are returned if they were changed during or after the mode creation.\r\n   */\r\n  identify() {\r\n    const diff = utils.objectsDiff(this.opts, this.settings.now.modes[this.id])\r\n    if (!isEmpty(diff)) {\r\n      return [this.id, diff]\r\n    }\r\n    return this.id\r\n  }\r\n\r\n  buildGeometry(complex, colorer, mask, material) {\r\n    const polyComplexity = this.opts.polyComplexity\r\n      ? this.opts.polyComplexity[this.settings.now.resolution]\r\n      : 0\r\n    const groupList = this.depGroups\r\n    const groupCount = groupList.length\r\n    const group = new gfxutils.RCGroup()\r\n    const self = this\r\n    for (let i = 0; i < groupCount; ++i) {\r\n      let currGroup = groupList[i]\r\n      let renderParams = {}\r\n      if (isArray(currGroup)) {\r\n        renderParams = currGroup[1].call(this)\r\n        ;[currGroup] = currGroup\r\n      }\r\n      const Group = factory[currGroup](null, this.settings, renderParams)\r\n      const newGroup = new Group(\r\n        complex,\r\n        colorer,\r\n        self,\r\n        polyComplexity,\r\n        mask,\r\n        material\r\n      )\r\n      if (newGroup.children.length > 0) {\r\n        group.add(newGroup)\r\n      }\r\n    }\r\n    return group\r\n  }\r\n}\r\n\r\nmakeContextDependent(Mode.prototype)\r\n\r\n/**\r\n * Mode identifier.\r\n * @type {string}\r\n */\r\nMode.prototype.id = '__'\r\n\r\n/**\r\n * Mode geo groups.\r\n * @type {Array}\r\n */\r\nMode.prototype.depGroups = []\r\n\r\nexport default Mode\r\n",
		"import Mode from './Mode'\r\n\r\nfunction getRenderParams() {\r\n  return {\r\n    lineWidth: this.opts.lineWidth\r\n  }\r\n}\r\n\r\nclass LinesMode extends Mode {\r\n  static id = 'LN'\r\n\r\n  constructor(opts) {\r\n    super(opts)\r\n    this.depGroups = this.depGroups.slice(0) // clone depGroups to prevent prototype edits\r\n    const groups = this.depGroups\r\n    for (let i = 0, n = groups.length; i < n; ++i) {\r\n      groups[i] = [groups[i], getRenderParams]\r\n    }\r\n  }\r\n\r\n  drawMultiorderBonds() {\r\n    return this.opts.multibond\r\n  }\r\n\r\n  calcAtomRadius() {\r\n    return this.opts.atom\r\n  }\r\n\r\n  getAromaticOffset() {\r\n    return this.opts.offsarom\r\n  }\r\n\r\n  getAromaticArcChunks() {\r\n    return this.opts.chunkarom\r\n  }\r\n\r\n  showAromaticLoops() {\r\n    return this.opts.showarom\r\n  }\r\n}\r\n\r\nLinesMode.prototype.id = 'LN'\r\nLinesMode.prototype.name = 'Lines'\r\nLinesMode.prototype.shortName = 'Lines'\r\nLinesMode.prototype.depGroups = [\r\n  'ALoopsLines',\r\n  'BondsLines',\r\n  'OrphanedAtomsCrosses'\r\n]\r\n\r\nexport default LinesMode\r\n",
		"/* eslint-disable no-magic-numbers */\r\nimport Mode from './Mode'\r\n\r\nclass LicoriceMode extends Mode {\r\n  static id = 'LC'\r\n\r\n  calcAtomRadius(_atom) {\r\n    return this.opts.bond\r\n  }\r\n\r\n  calcStickRadius() {\r\n    return this.opts.bond\r\n  }\r\n\r\n  calcSpaceFraction() {\r\n    return this.opts.space\r\n  }\r\n\r\n  getAromRadius() {\r\n    return this.opts.aromrad\r\n  }\r\n\r\n  showAromaticLoops() {\r\n    return this.opts.showarom\r\n  }\r\n\r\n  drawMultiorderBonds() {\r\n    return this.opts.multibond\r\n  }\r\n}\r\n\r\nLicoriceMode.prototype.id = 'LC'\r\nLicoriceMode.prototype.name = 'Licorice'\r\nLicoriceMode.prototype.shortName = 'Licorice'\r\nLicoriceMode.prototype.depGroups = [\r\n  'AtomsSpheres',\r\n  'BondsCylinders',\r\n  'ALoopsTorus'\r\n]\r\n\r\nexport default LicoriceMode\r\n",
		"/* eslint-disable no-magic-numbers */\r\nimport Mode from './Mode'\r\n\r\nclass BallsAndSticksMode extends Mode {\r\n  static id = 'BS'\r\n\r\n  calcAtomRadius(atom) {\r\n    return atom.element.radius * this.opts.atom\r\n  }\r\n\r\n  calcStickRadius() {\r\n    return this.opts.bond\r\n  }\r\n\r\n  getAromRadius() {\r\n    return this.opts.aromrad\r\n  }\r\n\r\n  showAromaticLoops() {\r\n    return this.opts.showarom\r\n  }\r\n\r\n  calcSpaceFraction() {\r\n    return this.opts.space\r\n  }\r\n\r\n  drawMultiorderBonds() {\r\n    return this.opts.multibond\r\n  }\r\n}\r\n\r\nBallsAndSticksMode.prototype.id = 'BS'\r\nBallsAndSticksMode.prototype.name = 'Balls and Sticks'\r\nBallsAndSticksMode.prototype.shortName = 'Balls'\r\nBallsAndSticksMode.prototype.depGroups = [\r\n  'AtomsSpheres',\r\n  'BondsCylinders',\r\n  'ALoopsTorus'\r\n]\r\n\r\nexport default BallsAndSticksMode\r\n",
		"import Mode from './Mode'\r\n\r\nclass VanDerWaalsMode extends Mode {\r\n  static id = 'VW'\r\n\r\n  calcAtomRadius(atom) {\r\n    return atom.element.radius\r\n  }\r\n}\r\n\r\nVanDerWaalsMode.prototype.id = 'VW'\r\nVanDerWaalsMode.prototype.name = 'Van der Waals'\r\nVanDerWaalsMode.prototype.shortName = 'VDW'\r\nVanDerWaalsMode.prototype.depGroups = ['AtomsSpheres']\r\n\r\nexport default VanDerWaalsMode\r\n",
		"import Mode from './Mode'\r\n\r\nclass TraceMode extends Mode {\r\n  static id = 'TR'\r\n\r\n  calcStickRadius() {\r\n    return this.opts.radius\r\n  }\r\n}\r\n\r\nTraceMode.prototype.id = 'TR'\r\nTraceMode.prototype.name = 'Trace'\r\nTraceMode.prototype.shortName = 'Trace'\r\nTraceMode.prototype.depGroups = ['TraceChains']\r\n\r\nexport default TraceMode\r\n",
		"import Mode from './Mode'\r\nimport { Vector2 } from 'three'\r\n\r\nclass TubeMode extends Mode {\r\n  static id = 'TU'\r\n\r\n  getResidueRadius(_residue) {\r\n    return this.TUBE_RADIUS\r\n  }\r\n\r\n  getHeightSegmentsRatio() {\r\n    return this.opts.heightSegmentsRatio\r\n  }\r\n\r\n  getTension() {\r\n    return this.opts.tension\r\n  }\r\n\r\n  buildGeometry(complex, colorer, mask, material) {\r\n    const rad = this.opts.radius\r\n    this.TUBE_RADIUS = new Vector2(rad, rad)\r\n\r\n    return Mode.prototype.buildGeometry.call(\r\n      this,\r\n      complex,\r\n      colorer,\r\n      mask,\r\n      material\r\n    )\r\n  }\r\n}\r\n\r\nTubeMode.prototype.id = 'TU'\r\nTubeMode.prototype.name = 'Tube'\r\nTubeMode.prototype.shortName = 'Tube'\r\nTubeMode.prototype.depGroups = ['CartoonChains']\r\n\r\nexport default TubeMode\r\n",
		"import Mode from './Mode'\r\nimport { Vector2 } from 'three'\r\n\r\nclass CartoonMode extends Mode {\r\n  static id = 'CA'\r\n\r\n  constructor(opts) {\r\n    super(opts)\r\n    // cache for secondary structure options\r\n    this.secCache = {}\r\n  }\r\n\r\n  getResidueStartRadius(residue) {\r\n    const second = residue.getSecondary()\r\n    if (!second || !second.generic) {\r\n      return this.TUBE_RADIUS\r\n    }\r\n    const secOpts = this.secCache[second.generic]\r\n    if (!secOpts) {\r\n      return this.TUBE_RADIUS\r\n    }\r\n    if (second.term === residue) {\r\n      return secOpts.start\r\n    }\r\n    return secOpts.center\r\n  }\r\n\r\n  getResidueEndRadius(residue) {\r\n    const second = residue.getSecondary()\r\n    if (second === null || !second.generic) {\r\n      return this.TUBE_RADIUS\r\n    }\r\n    const secOpts = this.secCache[second.generic]\r\n    if (!secOpts) {\r\n      return this.TUBE_RADIUS\r\n    }\r\n    if (second.term === residue) {\r\n      return this.ARROW_END\r\n    }\r\n    return secOpts.center\r\n  }\r\n\r\n  getResidueRadius(residue, val) {\r\n    const startRad = this.getResidueStartRadius(residue)\r\n    if (val === 0) {\r\n      return startRad\r\n    }\r\n\r\n    const endRad = this.getResidueEndRadius(residue)\r\n    if (val === 2) {\r\n      return endRad\r\n    }\r\n\r\n    return startRad.clone().lerp(endRad, val / 2.0)\r\n  }\r\n\r\n  calcStickRadius(_res) {\r\n    return this.opts.radius\r\n  }\r\n\r\n  getHeightSegmentsRatio() {\r\n    return this.opts.heightSegmentsRatio\r\n  }\r\n\r\n  getTension() {\r\n    return this.opts.tension\r\n  }\r\n\r\n  buildGeometry(complex, colorer, mask, material) {\r\n    const tubeRad = this.opts.radius\r\n    const secHeight = this.opts.depth\r\n\r\n    this.TUBE_RADIUS = new Vector2(tubeRad, tubeRad)\r\n    this.ARROW_END = new Vector2(secHeight, tubeRad)\r\n    const secCache = {}\r\n    const secData = this.opts.ss\r\n    /* eslint-disable guard-for-in */\r\n    for (const prop in secData) {\r\n      secCache[prop] = {\r\n        center: new Vector2(secHeight, secData[prop].width),\r\n        start: new Vector2(secHeight, secData[prop].arrow)\r\n      }\r\n    }\r\n    this.secCache = secCache\r\n    /* eslint-enable guard-for-in */\r\n\r\n    return Mode.prototype.buildGeometry.call(\r\n      this,\r\n      complex,\r\n      colorer,\r\n      mask,\r\n      material\r\n    )\r\n  }\r\n}\r\n\r\nCartoonMode.prototype.id = 'CA'\r\nCartoonMode.prototype.name = 'Cartoon'\r\nCartoonMode.prototype.shortName = 'Cartoon'\r\nCartoonMode.prototype.depGroups = [\r\n  'CartoonChains',\r\n  'NucleicSpheres',\r\n  'NucleicCylinders'\r\n]\r\n\r\nexport default CartoonMode\r\n",
		"import chem from '../../chem'\r\nimport Mode from './Mode'\r\n\r\nconst { selectors } = chem\r\n\r\nfunction getRenderParams() {\r\n  return {\r\n    wireframe: this.opts.wireframe,\r\n    zClip: this.opts.zClip\r\n  }\r\n}\r\n\r\nclass SurfaceMode extends Mode {\r\n  constructor(opts) {\r\n    super(opts)\r\n    this.depGroups = this.depGroups.slice(0) // clone depGroups to prevent prototype edits\r\n    const surfaces = this.surfaceNames\r\n    const groups = this.depGroups\r\n    for (let i = 0, n = surfaces.length; i < n; ++i) {\r\n      groups[groups.length] = [surfaces[i], getRenderParams]\r\n    }\r\n  }\r\n\r\n  calcAtomRadius(atom) {\r\n    return atom.element.radius\r\n  }\r\n\r\n  getVisibilitySelector() {\r\n    let visibilitySelector = null\r\n    if (this.opts.subset !== '') {\r\n      const res = selectors.parse(this.opts.subset)\r\n      if (!res.error) {\r\n        visibilitySelector = res.selector\r\n      }\r\n    }\r\n    return visibilitySelector\r\n  }\r\n}\r\n\r\nSurfaceMode.prototype.isSurface = true\r\nSurfaceMode.prototype.surfaceNames = []\r\n\r\nexport default SurfaceMode\r\n",
		"import SurfaceMode from './SurfaceMode'\r\n\r\nclass QuickSurfaceMode extends SurfaceMode {\r\n  static id = 'QS'\r\n\r\n  getSurfaceOpts() {\r\n    return {\r\n      useBeads: false,\r\n      isoValue: this.opts.isoValue,\r\n      gaussLim: this.opts.gaussLim[this.settings.now.resolution],\r\n      radScale: this.opts.scale,\r\n      gridSpacing: this.opts.gridSpacing[this.settings.now.resolution],\r\n      zClip: this.opts.zClip,\r\n      visibilitySelector: this.getVisibilitySelector()\r\n    }\r\n  }\r\n}\r\n\r\nQuickSurfaceMode.prototype.id = 'QS'\r\nQuickSurfaceMode.prototype.name = 'Quick Surface'\r\nQuickSurfaceMode.prototype.shortName = 'Quick Surf'\r\nQuickSurfaceMode.prototype.surfaceNames = ['QuickSurfGeo']\r\n\r\nexport default QuickSurfaceMode\r\n",
		"import SurfaceMode from './SurfaceMode'\r\n\r\nclass IsoSurfaceMode extends SurfaceMode {\r\n  constructor(excludeProbe, opts) {\r\n    super(opts)\r\n    this._excludeProbe = excludeProbe\r\n  }\r\n\r\n  calcAtomRadius(atom) {\r\n    return atom.element.radius\r\n  }\r\n\r\n  getSurfaceOpts() {\r\n    return {\r\n      gridSpacing: this.opts.polyComplexity[this.settings.now.resolution],\r\n      radScale: this._radScale,\r\n      zClip: this.opts.zClip,\r\n      visibilitySelector: this.getVisibilitySelector(),\r\n      probeRadius: this.opts.probeRadius,\r\n      excludeProbe: this._excludeProbe\r\n    }\r\n  }\r\n}\r\n\r\nIsoSurfaceMode.prototype.id = 'SU'\r\nIsoSurfaceMode.prototype.name = 'Surface'\r\nIsoSurfaceMode.prototype.shortName = 'Surface'\r\nIsoSurfaceMode.prototype.surfaceNames = ['SASSESSurfaceGeo']\r\n\r\nIsoSurfaceMode.prototype._radScale = 1\r\nIsoSurfaceMode.prototype._excludeProbe = false\r\n\r\nexport default IsoSurfaceMode\r\n",
		"import IsoSurfaceMode from './IsoSurfaceMode'\r\n\r\nclass IsoSurfaceSASMode extends IsoSurfaceMode {\r\n  static id = 'SA'\r\n\r\n  constructor(opts) {\r\n    super(false, opts)\r\n  }\r\n}\r\n\r\nIsoSurfaceSASMode.prototype.id = 'SA'\r\nIsoSurfaceSASMode.prototype.name = 'Solvent Accessible Surface'\r\nIsoSurfaceSASMode.prototype.shortName = 'SAS'\r\n\r\nexport default IsoSurfaceSASMode\r\n",
		"import IsoSurfaceMode from './IsoSurfaceMode'\r\n\r\nclass IsoSurfaceSESMode extends IsoSurfaceMode {\r\n  static id = 'SE'\r\n\r\n  constructor(opts) {\r\n    super(true, opts)\r\n  }\r\n}\r\n\r\nIsoSurfaceSESMode.prototype.id = 'SE'\r\nIsoSurfaceSESMode.prototype.name = 'Solvent Excluded Surface'\r\nIsoSurfaceSESMode.prototype.shortName = 'SES'\r\n\r\nexport default IsoSurfaceSESMode\r\n",
		"import SurfaceMode from './SurfaceMode'\r\n\r\nclass ContactSurfaceMode extends SurfaceMode {\r\n  static id = 'CS'\r\n\r\n  getSurfaceOpts() {\r\n    return {\r\n      probeRadius: this.opts.probeRadius,\r\n      radScale: this.opts.polyComplexity[this.settings.now.resolution],\r\n      scaleFactor: this.opts.polyComplexity[this.settings.now.resolution],\r\n      gridSpacing: 1.0 / this.opts.polyComplexity[this.settings.now.resolution],\r\n      isoValue: this.opts.isoValue,\r\n      probePositions: this.opts.probePositions,\r\n      zClip: this.opts.zClip,\r\n      visibilitySelector: this.getVisibilitySelector()\r\n    }\r\n  }\r\n}\r\n\r\nContactSurfaceMode.prototype.id = 'CS'\r\nContactSurfaceMode.prototype.name = 'Contact Surface'\r\nContactSurfaceMode.prototype.shortName = 'Contact Surf'\r\nContactSurfaceMode.prototype.isSurface = true\r\nContactSurfaceMode.prototype.surfaceNames = ['ContactSurfaceGeo']\r\n\r\nexport default ContactSurfaceMode\r\n",
		"import { merge } from 'lodash'\r\nimport Mode from './Mode'\r\n\r\nclass TextMode extends Mode {\r\n  static id = 'TX'\r\n\r\n  getTemplateOptions() {\r\n    return this.opts.template\r\n  }\r\n\r\n  getLabelOpts() {\r\n    return merge(this.opts, {\r\n      colors: true,\r\n      adjustColor: true,\r\n      transparent: true\r\n    })\r\n  }\r\n}\r\n\r\nTextMode.prototype.id = 'TX'\r\nTextMode.prototype.name = 'Text mode'\r\nTextMode.prototype.shortName = 'Text'\r\nTextMode.prototype.depGroups = ['TextLabelsGeo']\r\n\r\nexport default TextMode\r\n",
		"import EntityList from '../utils/EntityList'\r\n\r\nimport LinesMode from './modes/LinesMode'\r\nimport LicoriceMode from './modes/LicoriceMode'\r\nimport BallsAndSticksMode from './modes/BallsAndSticksMode'\r\nimport VanDerWaalsMode from './modes/VanDerWaalsMode'\r\nimport TraceMode from './modes/TraceMode'\r\nimport TubeMode from './modes/TubeMode'\r\nimport CartoonMode from './modes/CartoonMode'\r\nimport QuickSurfaceMode from './modes/QuickSurfaceMode'\r\nimport IsoSurfaceSASMode from './modes/IsoSurfaceSASMode'\r\nimport IsoSurfaceSESMode from './modes/IsoSurfaceSESMode'\r\nimport ContactSurfaceMode from './modes/ContactSurfaceMode'\r\nimport TextMode from './modes/TextMode'\r\n\r\nconst modes = new EntityList([\r\n  LinesMode,\r\n  LicoriceMode,\r\n  BallsAndSticksMode,\r\n  VanDerWaalsMode,\r\n  TraceMode,\r\n  TubeMode,\r\n  CartoonMode,\r\n  QuickSurfaceMode,\r\n  IsoSurfaceSASMode,\r\n  IsoSurfaceSESMode,\r\n  ContactSurfaceMode,\r\n  TextMode\r\n])\r\n\r\nexport default modes\r\n",
		"import { assign } from 'lodash'\r\n\r\nfunction clamp(x, a, b) {\r\n  return x <= b ? (x < 0 ? 0 : x) : b\r\n}\r\n\r\nfunction lerpColor(c1, c2, alpha) {\r\n  const beta = 1 - alpha\r\n  const r1 = (c1 >> 16) & 0xff\r\n  const g1 = (c1 >> 8) & 0xff\r\n  const b1 = c1 & 0xff\r\n  const r2 = (c2 >> 16) & 0xff\r\n  const g2 = (c2 >> 8) & 0xff\r\n  const b2 = c2 & 0xff\r\n  const r = beta * r1 + alpha * r2\r\n  const g = beta * g1 + alpha * g2\r\n  const b = beta * b1 + alpha * b2\r\n  return (r << 16) | (g << 8) | b\r\n}\r\n\r\nclass Palette {\r\n  constructor(name, id) {\r\n    this.name = name || 'Custom'\r\n    this.id = id || 'CP'\r\n  }\r\n\r\n  getElementColor(name, asIs = false) {\r\n    const color = this.elementColors[name]\r\n    return color === undefined && !asIs ? this.defaultElementColor : color\r\n  }\r\n\r\n  getResidueColor(name, asIs = false) {\r\n    const color = this.residueColors[name]\r\n    return color === undefined && !asIs ? this.defaultResidueColor : color\r\n  }\r\n\r\n  getChainColor(name) {\r\n    let chain = name.charCodeAt(0)\r\n    chain =\r\n      ((chain < 0 ? 0 : chain >= 256 ? chain - 256 : chain) & 0x1f) %\r\n      this.chainColors.length\r\n    return this.chainColors[chain]\r\n  }\r\n\r\n  getSecondaryColor(type, asIs = false) {\r\n    const color = this.secondaryColors[type]\r\n    return color === undefined && !asIs ? this.defaultSecondaryColor : color\r\n  }\r\n\r\n  getSequentialColor(index) {\r\n    const { colors } = this\r\n    const len = colors.length\r\n    return index < 0 ? colors[(index % len) + len] : colors[index % len]\r\n  }\r\n\r\n  getGradientColor(value, gradientName) {\r\n    const gradient = this.gradients[gradientName]\r\n    if (!gradient) {\r\n      return this.defaultNamedColor\r\n    }\r\n    const count = gradient.length\r\n    const index = value * (count - 1)\r\n    let left = Math.floor(index)\r\n    const right = clamp(left + 1, 0, count - 1)\r\n    left = clamp(left, 0, count - 1)\r\n    return lerpColor(gradient[left], gradient[right], index - left)\r\n  }\r\n\r\n  getNamedColor(name, asIs = false) {\r\n    const color = this.namedColors[name]\r\n    return color === undefined && !asIs ? this.defaultNamedColor : color\r\n  }\r\n}\r\n\r\nassign(Palette.prototype, {\r\n  colors: [0xffffff, 0xff0000, 0x00ff00, 0x0000ff, 0x808080],\r\n\r\n  minRangeColor: 0x000000,\r\n  midRangeColor: 0x7f7f7f,\r\n  maxRangeColor: 0xffffff,\r\n\r\n  defaultElementColor: 0xffffff,\r\n  elementColors: {},\r\n\r\n  defaultResidueColor: 0xffffff,\r\n  residueColors: {},\r\n\r\n  chainColors: [0xffffff],\r\n\r\n  defaultSecondaryColor: 0xffffff,\r\n  secondaryColors: {},\r\n\r\n  defaultGradientColor: 0x000000,\r\n\r\n  defaultNamedColor: 0xffffff,\r\n  namedColorsArray: [\r\n    /* eslint-disable no-multi-spaces */\r\n    ['indianred', 0xcd5c5c],\r\n    ['lightcoral', 0xf08080],\r\n    ['salmon', 0xfa8072],\r\n    ['darksalmon', 0xe9967a],\r\n    ['lightsalmon', 0xffa07a],\r\n    ['crimson', 0xdc143c],\r\n    ['red', 0xff0000],\r\n    ['firebrick', 0xb22222],\r\n    ['darkred', 0x8b0000],\r\n    ['pink', 0xffc0cb],\r\n    ['lightpink', 0xffb6c1],\r\n    ['hotpink', 0xff69b4],\r\n    ['deeppink', 0xff1493],\r\n    ['mediumvioletred', 0xc71585],\r\n    ['palevioletred', 0xdb7093],\r\n    ['coral', 0xff7f50],\r\n    ['tomato', 0xff6347],\r\n    ['orangered', 0xff4500],\r\n    ['darkorange', 0xff8c00],\r\n    ['orange', 0xffa500],\r\n    ['gold', 0xffd700],\r\n    ['yellow', 0xffff00],\r\n    ['lightyellow', 0xffffe0],\r\n    ['lemonchiffon', 0xfffacd],\r\n    ['lightgoldenrodyellow', 0xfafad2],\r\n    ['papayawhip', 0xffefd5],\r\n    ['moccasin', 0xffe4b5],\r\n    ['peachpuff', 0xffdab9],\r\n    ['palegoldenrod', 0xeee8aa],\r\n    ['khaki', 0xf0e68c],\r\n    ['darkkhaki', 0xbdb76b],\r\n    ['lavender', 0xe6e6fa],\r\n    ['thistle', 0xd8bfd8],\r\n    ['plum', 0xdda0dd],\r\n    ['violet', 0xee82ee],\r\n    ['orchid', 0xda70d6],\r\n    ['fuchsia', 0xff00ff],\r\n    ['magenta', 0xff00ff],\r\n    ['mediumorchid', 0xba55d3],\r\n    ['mediumpurple', 0x9370db],\r\n    ['rebeccapurple', 0x663399],\r\n    ['blueviolet', 0x8a2be2],\r\n    ['darkviolet', 0x9400d3],\r\n    ['darkorchid', 0x9932cc],\r\n    ['darkmagenta', 0x8b008b],\r\n    ['purple', 0x800080],\r\n    ['indigo', 0x4b0082],\r\n    ['slateblue', 0x6a5acd],\r\n    ['mediumslateblue', 0x7b68ee],\r\n    ['darkslateblue', 0x483d8b],\r\n    ['greenyellow', 0xadff2f],\r\n    ['chartreuse', 0x7fff00],\r\n    ['lawngreen', 0x7cfc00],\r\n    ['lime', 0x00ff00],\r\n    ['limegreen', 0x32cd32],\r\n    ['palegreen', 0x98fb98],\r\n    ['lightgreen', 0x90ee90],\r\n    ['mediumspringgreen', 0x00fa9a],\r\n    ['springgreen', 0x00ff7f],\r\n    ['mediumseagreen', 0x3cb371],\r\n    ['seagreen', 0x2e8b57],\r\n    ['forestgreen', 0x228b22],\r\n    ['green', 0x008000],\r\n    ['darkgreen', 0x006400],\r\n    ['yellowgreen', 0x9acd32],\r\n    ['olivedrab', 0x6b8e23],\r\n    ['olive', 0x808000],\r\n    ['darkolivegreen', 0x556b2f],\r\n    ['mediumaquamarine', 0x66cdaa],\r\n    ['darkseagreen', 0x8fbc8f],\r\n    ['lightseagreen', 0x20b2aa],\r\n    ['darkcyan', 0x008b8b],\r\n    ['teal', 0x008080],\r\n    ['aqua', 0x00ffff],\r\n    ['cyan', 0x00ffff],\r\n    ['lightcyan', 0xe0ffff],\r\n    ['paleturquoise', 0xafeeee],\r\n    ['aquamarine', 0x7fffd4],\r\n    ['turquoise', 0x40e0d0],\r\n    ['mediumturquoise', 0x48d1cc],\r\n    ['darkturquoise', 0x00ced1],\r\n    ['cadetblue', 0x5f9ea0],\r\n    ['steelblue', 0x4682b4],\r\n    ['lightsteelblue', 0xb0c4de],\r\n    ['powderblue', 0xb0e0e6],\r\n    ['lightblue', 0xadd8e6],\r\n    ['skyblue', 0x87ceeb],\r\n    ['lightskyblue', 0x87cefa],\r\n    ['deepskyblue', 0x00bfff],\r\n    ['dodgerblue', 0x1e90ff],\r\n    ['cornflowerblue', 0x6495ed],\r\n    ['royalblue', 0x4169e1],\r\n    ['blue', 0x0000ff],\r\n    ['mediumblue', 0x0000cd],\r\n    ['darkblue', 0x00008b],\r\n    ['navy', 0x000080],\r\n    ['midnightblue', 0x191970],\r\n    ['cornsilk', 0xfff8dc],\r\n    ['blanchedalmond', 0xffebcd],\r\n    ['bisque', 0xffe4c4],\r\n    ['navajowhite', 0xffdead],\r\n    ['wheat', 0xf5deb3],\r\n    ['burlywood', 0xdeb887],\r\n    ['tan', 0xd2b48c],\r\n    ['rosybrown', 0xbc8f8f],\r\n    ['sandybrown', 0xf4a460],\r\n    ['goldenrod', 0xdaa520],\r\n    ['darkgoldenrod', 0xb8860b],\r\n    ['peru', 0xcd853f],\r\n    ['chocolate', 0xd2691e],\r\n    ['saddlebrown', 0x8b4513],\r\n    ['sienna', 0xa0522d],\r\n    ['brown', 0xa52a2a],\r\n    ['maroon', 0x800000],\r\n    ['white', 0xffffff],\r\n    ['snow', 0xfffafa],\r\n    ['honeydew', 0xf0fff0],\r\n    ['mintcream', 0xf5fffa],\r\n    ['azure', 0xf0ffff],\r\n    ['aliceblue', 0xf0f8ff],\r\n    ['ghostwhite', 0xf8f8ff],\r\n    ['whitesmoke', 0xf5f5f5],\r\n    ['seashell', 0xfff5ee],\r\n    ['beige', 0xf5f5dc],\r\n    ['oldlace', 0xfdf5e6],\r\n    ['floralwhite', 0xfffaf0],\r\n    ['ivory', 0xfffff0],\r\n    ['antiquewhite', 0xfaebd7],\r\n    ['linen', 0xfaf0e6],\r\n    ['lavenderblush', 0xfff0f5],\r\n    ['mistyrose', 0xffe4e1],\r\n    ['gainsboro', 0xdcdcdc],\r\n    ['lightgray', 0xd3d3d3],\r\n    ['silver', 0xc0c0c0],\r\n    ['darkgray', 0xa9a9a9],\r\n    ['gray', 0x808080],\r\n    ['dimgray', 0x696969],\r\n    ['lightslategray', 0x778899],\r\n    ['slategray', 0x708090],\r\n    ['darkslategray', 0x2f4f4f],\r\n    ['black', 0x000000]\r\n    /* eslint-enable no-multi-spaces */\r\n  ],\r\n\r\n  namedColors: {},\r\n  /* eslint-enable no-magic-numbers */\r\n\r\n  gradients: {\r\n    rainbow: [\r\n      0x0000ff, // blue\r\n      0x00ffff, // cyan\r\n      0x00ff00, // green\r\n      0xffff00, // yellow\r\n      0xff0000 // red\r\n    ],\r\n    temp: [\r\n      0x0000ff, // blue\r\n      0x007fff, // light-blue\r\n      0xffffff, // white\r\n      0xff7f00, // orange\r\n      0xff0000 // red\r\n    ],\r\n    hot: [\r\n      0xffffff, // white\r\n      0xff7f00, // orange\r\n      0xff0000 // red\r\n    ],\r\n    cold: [\r\n      0xffffff, // white\r\n      0x007fff, // light-blue\r\n      0x0000ff // blue\r\n    ],\r\n    'blue-red': [\r\n      0x0000ff, // blue\r\n      0xffffff, // white\r\n      0xff0000 // red\r\n    ],\r\n    reds: [\r\n      0xffffff, // white\r\n      0xff0000 // red\r\n    ],\r\n    blues: [\r\n      0xffffff, // white\r\n      0x0000ff // blue\r\n    ]\r\n  }\r\n})\r\n\r\nconst { namedColorsArray, namedColors } = Palette.prototype\r\n\r\nfor (let i = 0, { length } = namedColorsArray; i < length; ++i) {\r\n  const [name, value] = namedColorsArray[i]\r\n  namedColors[name] = value\r\n}\r\n\r\nexport default Palette\r\n",
		"import Palette from './Palette'\r\n\r\nconst palette = new Palette('CPK', 'CP')\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\npalette.elementColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  H: 0xffffff,\r\n  C: 0x202020,\r\n  N: 0x2060ff,\r\n  O: 0xee2010,\r\n  F: 0x00ff00,\r\n  P: 0x8020ff,\r\n  S: 0xffff00,\r\n  CL: 0x00bb00,\r\n  FE: 0xd0d0d0,\r\n  CO: 0xd0d0d0,\r\n  NI: 0xd0d0d0,\r\n  CU: 0xd0d0d0,\r\n  BR: 0x008800,\r\n  I: 0x005500\r\n  /* eslint-enable no-magic-numbers */\r\n}\r\n\r\nexport default palette\r\n",
		"import Palette from './Palette'\r\nimport StructuralElement from '../../chem/StructuralElement'\r\n\r\nconst palette = new Palette('Jmol', 'JM')\r\n\r\npalette.colors = [\r\n  /* eslint-disable no-magic-numbers */\r\n  0x0000ff, // blue\r\n  0x0055ff, //\r\n  0x00abff, //\r\n  0x00ffff, // cyan\r\n  0x00ffab, //\r\n  0x00ff55, //\r\n  0x00ff00, // green\r\n  0x55ff00, //\r\n  0xabff00, //\r\n  0xffff00, // yellow\r\n  0xffab00, //\r\n  0xff5500, //\r\n  0xff0000, // red\r\n  0xff0055, //\r\n  0xff00ab, //\r\n  0xff00ff, // magenta\r\n  0xab00ff, //\r\n  0x5500ff //\r\n  /* eslint-enable no-magic-numbers */\r\n]\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\npalette.elementColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  H: 0xffffff,\r\n  D: 0xffffc0,\r\n  T: 0xffffa0,\r\n  HE: 0xd9ffff,\r\n  LI: 0xcc80ff,\r\n  BE: 0xc2ff00,\r\n  B: 0xffb5b5,\r\n  C: 0x909090,\r\n  N: 0x3050f8,\r\n  O: 0xff0d0d,\r\n  F: 0x90e050,\r\n  NE: 0xb3e3f5,\r\n  NA: 0xab5cf2,\r\n  MG: 0x8aff00,\r\n  AL: 0xbfa6a6,\r\n  SI: 0xf0c8a0,\r\n  P: 0xff8000,\r\n  S: 0xffff30,\r\n  CL: 0x1ff01f,\r\n  AR: 0x80d1e3,\r\n  K: 0x8f40d4,\r\n  CA: 0x3dff00,\r\n  SC: 0xe6e6e6,\r\n  TI: 0xbfc2c7,\r\n  V: 0xa6a6ab,\r\n  CR: 0x8a99c7,\r\n  MN: 0x9c7ac7,\r\n  FE: 0xe06633,\r\n  CO: 0xf090a0,\r\n  NI: 0x50d050,\r\n  CU: 0xc88033,\r\n  ZN: 0x7d80b0,\r\n  GA: 0xc28f8f,\r\n  GE: 0x668f8f,\r\n  AS: 0xbd80e3,\r\n  SE: 0xffa100,\r\n  BR: 0xa62929,\r\n  KR: 0x5cb8d1,\r\n  RB: 0x702eb0,\r\n  SR: 0x00ff00,\r\n  Y: 0x94ffff,\r\n  ZR: 0x94e0e0,\r\n  NB: 0x73c2c9,\r\n  MO: 0x54b5b5,\r\n  TC: 0x3b9e9e,\r\n  RU: 0x248f8f,\r\n  RH: 0x0a7d8c,\r\n  PD: 0x006985,\r\n  AG: 0xc0c0c0,\r\n  CD: 0xffd98f,\r\n  IN: 0xa67573,\r\n  SN: 0x668080,\r\n  SB: 0x9e63b5,\r\n  TE: 0xd47a00,\r\n  I: 0x940094,\r\n  XE: 0x429eb0,\r\n  CS: 0x57178f,\r\n  BA: 0x00c900,\r\n  LA: 0x70d4ff,\r\n  CE: 0xffffc7,\r\n  PR: 0xd9ffc7,\r\n  ND: 0xc7ffc7,\r\n  PM: 0xa3ffc7,\r\n  SM: 0x8fffc7,\r\n  EU: 0x61ffc7,\r\n  GD: 0x45ffc7,\r\n  TB: 0x30ffc7,\r\n  DY: 0x1fffc7,\r\n  HO: 0x00ff9c,\r\n  ER: 0x00e675,\r\n  TM: 0x00d452,\r\n  YB: 0x00bf38,\r\n  LU: 0x00ab24,\r\n  HF: 0x4dc2ff,\r\n  TA: 0x4da6ff,\r\n  W: 0x2194d6,\r\n  RE: 0x267dab,\r\n  OS: 0x266696,\r\n  IR: 0x175487,\r\n  PT: 0xd0d0e0,\r\n  AU: 0xffd123,\r\n  HG: 0xb8b8d0,\r\n  TL: 0xa6544d,\r\n  PB: 0x575961,\r\n  BI: 0x9e4fb5,\r\n  PO: 0xab5c00,\r\n  AT: 0x754f45,\r\n  RN: 0x428296,\r\n  FR: 0x420066,\r\n  RA: 0x007d00,\r\n  AC: 0x70abfa,\r\n  TH: 0x00baff,\r\n  PA: 0x00a1ff,\r\n  U: 0x008fff,\r\n  NP: 0x0080ff,\r\n  PU: 0x006bff,\r\n  AM: 0x545cf2,\r\n  CM: 0x785ce3,\r\n  BK: 0x8a4fe3,\r\n  CF: 0xa136d4,\r\n  ES: 0xb31fd4,\r\n  FM: 0xb31fba,\r\n  MD: 0xb30da6,\r\n  NO: 0xbd0d87,\r\n  LR: 0xc70066,\r\n  RF: 0xcc0059,\r\n  DB: 0xd1004f,\r\n  SG: 0xd90045,\r\n  BH: 0xe00038,\r\n  HS: 0xe6002e,\r\n  MT: 0xeb0026\r\n  /* eslint-enable no-magic-numbers */\r\n}\r\n\r\npalette.defaultResidueColor = 0xbea06e\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from residue_types.csv by residue_types.py.\r\npalette.residueColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  ALA: 0xc8c8c8,\r\n  ARG: 0x145aff,\r\n  ASN: 0x00dcdc,\r\n  ASP: 0xe60a0a,\r\n  CYS: 0xe6e600,\r\n  GLN: 0x00dcdc,\r\n  GLU: 0xe60a0a,\r\n  GLY: 0xebebeb,\r\n  HIS: 0x8282d2,\r\n  ILE: 0x0f820f,\r\n  LEU: 0x0f820f,\r\n  LYS: 0x145aff,\r\n  MET: 0xe6e600,\r\n  PHE: 0x3232aa,\r\n  PRO: 0xdc9682,\r\n  SER: 0xfa9600,\r\n  THR: 0xfa9600,\r\n  TRP: 0xb45ab4,\r\n  TYR: 0x3232aa,\r\n  VAL: 0x0f820f,\r\n  A: 0xa0a0ff,\r\n  C: 0xff8c4b,\r\n  G: 0xff7070,\r\n  I: 0x80ffff,\r\n  T: 0xa0ffa0,\r\n  U: 0xff8080,\r\n  DA: 0xa0a0ff,\r\n  DC: 0xff8c4b,\r\n  DG: 0xff7070,\r\n  DI: 0x80ffff,\r\n  DT: 0xa0ffa0,\r\n  DU: 0xff8080,\r\n  '+A': 0xa0a0ff,\r\n  '+C': 0xff8c4b,\r\n  '+G': 0xff7070,\r\n  '+I': 0x80ffff,\r\n  '+T': 0xa0ffa0,\r\n  '+U': 0xff8080\r\n  /* eslint-enable no-magic-numbers */\r\n}\r\n\r\npalette.chainColors = [\r\n  // ' '->0 'A'->1, 'B'->2\r\n  0xffffffff, // ' ' & '0' white\r\n  //\r\n  0xffc0d0ff, // skyblue\r\n  0xffb0ffb0, // pastel green\r\n  0xffffc0c8, // pink\r\n  0xffffff80, // pastel yellow\r\n  0xffffc0ff, // pastel magenta\r\n  0xffb0f0f0, // pastel cyan\r\n  0xffffd070, // pastel gold\r\n  0xfff08080, // lightcoral\r\n\r\n  0xfff5deb3, // wheat\r\n  0xff00bfff, // deepskyblue\r\n  0xffcd5c5c, // indianred\r\n  0xff66cdaa, // mediumaquamarine\r\n  0xff9acd32, // yellowgreen\r\n  0xffee82ee, // violet\r\n  0xff00ced1, // darkturquoise\r\n  0xff00ff7f, // springgreen\r\n  0xff3cb371, // mediumseagreen\r\n\r\n  0xff00008b, // darkblue\r\n  0xffbdb76b, // darkkhaki\r\n  0xff006400, // darkgreen\r\n  0xff800000, // maroon\r\n  0xff808000, // olive\r\n  0xff800080, // purple\r\n  0xff008080, // teal\r\n  0xffb8860b, // darkgoldenrod\r\n  0xffb22222 // firebrick\r\n]\r\n\r\nconst StructuralElementType = StructuralElement.Type\r\n\r\npalette.secondaryColors = {\r\n  [StructuralElementType.HELIX_ALPHA]: 0xff0080,\r\n  [StructuralElementType.HELIX_PI]: 0x600080,\r\n  [StructuralElementType.HELIX_310]: 0xa00080,\r\n  [StructuralElementType.STRAND]: 0xffc800,\r\n  [StructuralElementType.TURN]: 0x6080ff,\r\n  dna: 0xae00fe,\r\n  rna: 0xfd0162\r\n}\r\n\r\nexport default palette\r\n",
		"import Palette from './Palette'\r\nimport StructuralElement from '../../chem/StructuralElement'\r\n\r\nconst palette = new Palette('VMD', 'VM')\r\n\r\npalette.colors = [\r\n  /* eslint-disable no-magic-numbers */\r\n  0x0000ff, // blue\r\n  0xff0000, // red\r\n  0x606060, // gray\r\n  0xff8000, // orange\r\n  0xffff00, // yellow\r\n  0x808033, // tan\r\n  0x999999, // silver\r\n  0x00ff00, // green\r\n  0xffffff, // white\r\n  0xff9999, // pink\r\n  0x40c0c0, // cyan\r\n  0xa600a6, // purple\r\n  0x80e666, // lime\r\n  0xe666b3, // mauve\r\n  0x804d00, // ochre\r\n  0x8080c0 // ice blue\r\n  /* eslint-enable no-magic-numbers */\r\n]\r\n\r\npalette.defaultElementColor = 0x804d00\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\npalette.elementColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  H: 0xffffff,\r\n  C: 0x40bfbf,\r\n  N: 0x0000ff,\r\n  O: 0xff0000,\r\n  P: 0x808033,\r\n  S: 0xffff00\r\n  /* eslint-enable no-magic-numbers */\r\n}\r\n\r\npalette.defaultResidueColor = 0x40c0c0\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from residue_types.csv by residue_types.py.\r\npalette.residueColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  ALA: 0x0000ff,\r\n  ARG: 0xffffff,\r\n  ASN: 0x808033,\r\n  ASP: 0xff0000,\r\n  CYS: 0xffff00,\r\n  GLN: 0xff8000,\r\n  GLU: 0xff9999,\r\n  GLY: 0xffffff,\r\n  HIS: 0x40c0c0,\r\n  ILE: 0x00ff00,\r\n  LEU: 0xff9999,\r\n  LYS: 0x40c0c0,\r\n  MET: 0xffff00,\r\n  PHE: 0xa600a6,\r\n  PRO: 0x804c00,\r\n  SER: 0xffff00,\r\n  THR: 0xe666b3,\r\n  TRP: 0x999999,\r\n  TYR: 0x00ff00,\r\n  VAL: 0x808033,\r\n  A: 0x0000ff,\r\n  C: 0xff8000,\r\n  G: 0xffff00,\r\n  T: 0xa600a6,\r\n  U: 0x00ff00,\r\n  DA: 0x0000ff,\r\n  DC: 0xff8000,\r\n  DG: 0xffff00,\r\n  DT: 0xa600a6,\r\n  DU: 0x00ff00,\r\n  '+A': 0x0000ff,\r\n  '+C': 0xff8000,\r\n  '+G': 0xffff00,\r\n  '+T': 0xa600a6,\r\n  '+U': 0x00ff00,\r\n  WAT: 0x40c0c0,\r\n  H2O: 0x40c0c0,\r\n  HOH: 0x40c0c0\r\n  /* eslint-enable no-magic-numbers */\r\n}\r\n\r\npalette.chainColors = [0xffffff].concat(palette.colors)\r\n\r\nconst StructuralElementType = StructuralElement.Type\r\n\r\npalette.secondaryColors = {\r\n  [StructuralElementType.HELIX_ALPHA]: 0xa600a6,\r\n  [StructuralElementType.HELIX_310]: 0x0000ff,\r\n  [StructuralElementType.HELIX_PI]: 0xff0000,\r\n  [StructuralElementType.STRAND]: 0xffff00,\r\n  [StructuralElementType.BRIDGE]: 0x808033,\r\n  [StructuralElementType.TURN]: 0x40c0c0\r\n}\r\n\r\nexport default palette\r\n",
		"import EntityList from '../utils/EntityList'\r\n\r\nimport cpkPalette from './palettes/cpkPalette'\r\nimport jmolPalette from './palettes/jmolPalette'\r\nimport vmdPalette from './palettes/vmdPalette'\r\n\r\nconst palettes = new EntityList([cpkPalette, jmolPalette, vmdPalette])\r\n\r\nexport default palettes\r\n",
		"import settings from '../../settings'\r\nimport utils from '../../utils'\r\nimport palettes from '../palettes'\r\nimport { merge, isEmpty } from 'lodash'\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with.\r\n *\r\n *   These options are copied locally and not kept by reference, so the created instance will not reflect further\r\n *   changes to the `opts` object. However, changes in defaults **will** affect the colorer after its creation.\r\n *\r\n * @exports Colorer\r\n * @this Colorer\r\n * @abstract\r\n * @constructor\r\n * @classdesc Basic class for all available coloring algorithms used for building and displaying molecule geometry.\r\n */\r\nclass Colorer {\r\n  constructor(opts) {\r\n    if (this.constructor === Colorer) {\r\n      throw new Error('Can not instantiate abstract class!')\r\n    }\r\n    /**\r\n     * Colorer options inherited (prototyped) from defaults.\r\n     * @type {object}\r\n     */\r\n    this.opts = merge(\r\n      utils.deriveDeep(settings.now.colorers[this.id], true),\r\n      opts\r\n    )\r\n    /**\r\n     * Palette in use.\r\n     * @type {Palette}\r\n     */\r\n    this.palette = palettes.first\r\n  }\r\n\r\n  /**\r\n   * Get Colorer identification, probably with options.\r\n   * @returns {string|Array} Colorer identifier string ({@link Colorer#id}) or two-element array containing both colorer\r\n   *   identifier and options ({@link Colorer#opts}).\r\n   * Options are returned if they were changed during or after colorer creation.\r\n   */\r\n  identify() {\r\n    const diff = utils.objectsDiff(this.opts, settings.now.colorers[this.id])\r\n    if (!isEmpty(diff)) {\r\n      return [this.id, diff]\r\n    }\r\n    return this.id\r\n  }\r\n}\r\n\r\n/**\r\n * Colorer identifier.\r\n * @type {string}\r\n */\r\n\r\nColorer.prototype.id = '__'\r\n\r\nexport default Colorer\r\n",
		"import Colorer from './Colorer'\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @see Element\r\n *\r\n * @exports ElementColorer\r\n * @augments Colorer\r\n * @constructor\r\n * @classdesc Coloring algorithm based on chemical element.\r\n */\r\nclass ElementColorer extends Colorer {\r\n  static id = 'EL'\r\n\r\n  getAtomColor(atom, _complex) {\r\n    const type = atom.element.name\r\n    if (type === 'C' && this.opts.carbon >= 0) {\r\n      return this.opts.carbon\r\n    }\r\n    return this.palette.getElementColor(type)\r\n  }\r\n\r\n  getResidueColor(_residue, _complex) {\r\n    return this.palette.defaultResidueColor\r\n  }\r\n}\r\n\r\nElementColorer.prototype.id = 'EL'\r\nElementColorer.prototype.name = 'Element'\r\nElementColorer.prototype.shortName = 'Element'\r\n\r\nexport default ElementColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\n/**\r\n * Coloring algorithm based on residue type.\r\n *\r\n * @see ResidueType\r\n *\r\n * @exports ResidueTypeColorer\r\n * @constructor\r\n */\r\nclass ResidueTypeColorer extends Colorer {\r\n  static id = 'RT'\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    return this.palette.getResidueColor(residue._type._name)\r\n  }\r\n}\r\n\r\nResidueTypeColorer.prototype.id = 'RT'\r\nResidueTypeColorer.prototype.name = 'Residue Type'\r\nResidueTypeColorer.prototype.shortName = 'Residue'\r\n\r\nexport default ResidueTypeColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\nclass SequenceColorer extends Colorer {\r\n  static id = 'SQ'\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const chain = residue._chain\r\n    if (\r\n      chain.minSequence === Number.POSITIVE_INFINITY &&\r\n      chain.maxSequence === Number.NEGATIVE_INFINITY\r\n    ) {\r\n      return this.palette.defaultNamedColor\r\n    }\r\n    const min = chain.minSequence\r\n    const max = chain.maxSequence > min ? chain.maxSequence : min + 1\r\n    return this.palette.getGradientColor(\r\n      (residue._sequence - min) / (max - min),\r\n      this.opts.gradient\r\n    )\r\n  }\r\n}\r\n\r\nSequenceColorer.prototype.id = 'SQ'\r\nSequenceColorer.prototype.name = 'Sequence'\r\nSequenceColorer.prototype.shortName = 'Sequence'\r\n\r\nexport default SequenceColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\nclass ChainColorer extends Colorer {\r\n  static id = 'CH'\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    return this.palette.getChainColor(residue.getChain()._name)\r\n  }\r\n}\r\n\r\nChainColorer.prototype.id = 'CH'\r\nChainColorer.prototype.name = 'Chain'\r\nChainColorer.prototype.shortName = 'Chain'\r\n\r\nexport default ChainColorer\r\n",
		"import Colorer from './Colorer'\r\nimport ResidueType from '../../chem/ResidueType'\r\n\r\nclass SecondaryStructureColorer extends Colorer {\r\n  static id = 'SS'\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    if (residue._type.flags & ResidueType.Flags.DNA) {\r\n      return this.palette.getSecondaryColor('dna')\r\n    }\r\n    if (residue._type.flags & ResidueType.Flags.RNA) {\r\n      return this.palette.getSecondaryColor('rna')\r\n    }\r\n    const secondary = residue.getSecondary()\r\n    if (secondary) {\r\n      let color = this.palette.getSecondaryColor(secondary.type, true)\r\n      if (color === undefined) {\r\n        color = this.palette.getSecondaryColor(secondary.generic)\r\n      }\r\n      return color\r\n    }\r\n    return this.palette.defaultSecondaryColor\r\n  }\r\n}\r\n\r\nSecondaryStructureColorer.prototype.id = 'SS'\r\nSecondaryStructureColorer.prototype.name = 'Secondary Structure'\r\nSecondaryStructureColorer.prototype.shortName = 'Structure'\r\n\r\nexport default SecondaryStructureColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\nclass UniformColorer extends Colorer {\r\n  static id = 'UN'\r\n\r\n  getAtomColor(_atom, _complex) {\r\n    return this.opts.color\r\n  }\r\n\r\n  getResidueColor(_residue, _complex) {\r\n    return this.opts.color\r\n  }\r\n}\r\n\r\nUniformColorer.prototype.id = 'UN'\r\nUniformColorer.prototype.name = 'Uniform'\r\nUniformColorer.prototype.shortName = 'Uniform'\r\n\r\nexport default UniformColorer\r\n",
		"import Colorer from './Colorer'\r\nimport selectors from '../../chem/selectors'\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @exports ConditionalColorer\r\n * @augments Colorer\r\n * @constructor\r\n * @classdesc Bicolor coloring algorithm based on a selector string used as a condition.\r\n */\r\nclass ConditionalColorer extends Colorer {\r\n  static id = 'CO'\r\n\r\n  constructor(opts) {\r\n    super(opts)\r\n    const parsed = selectors.parse(this.opts.subset)\r\n    this._subsetCached = parsed.error ? selectors.none() : parsed.selector\r\n  }\r\n\r\n  getAtomColor(atom, _complex) {\r\n    return this._subsetCached.includesAtom(atom)\r\n      ? this.opts.color\r\n      : this.opts.baseColor\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const subset = this._subsetCached\r\n    const atoms = residue._atoms\r\n    for (let i = 0, n = atoms.length; i < n; ++i) {\r\n      if (!subset.includesAtom(atoms[i])) {\r\n        return this.opts.baseColor\r\n      }\r\n    }\r\n    return this.opts.color\r\n  }\r\n}\r\n\r\nConditionalColorer.prototype.id = 'CO'\r\nConditionalColorer.prototype.name = 'Conditional'\r\nConditionalColorer.prototype.shortName = 'Conditional'\r\n\r\nexport default ConditionalColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\nclass ConformationColorer extends Colorer {\r\n  static id = 'CF'\r\n\r\n  getAtomColor(atom, _complex) {\r\n    return this.palette.getChainColor(String.fromCharCode(atom.location))\r\n  }\r\n\r\n  getResidueColor(_residue, _complex) {\r\n    return this.palette.defaultResidueColor\r\n  }\r\n}\r\n\r\nConformationColorer.prototype.id = 'CF'\r\nConformationColorer.prototype.name = 'Conformation'\r\nConformationColorer.prototype.shortName = 'Conformation'\r\n\r\nexport default ConformationColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @see Temperature\r\n *\r\n * @exports TemperatureColorer\r\n * @augments Colorer\r\n * @constructor\r\n * @classdesc Coloring algorithm based on temperature of chemical element.\r\n */\r\nclass TemperatureColorer extends Colorer {\r\n  static id = 'TM'\r\n\r\n  getAtomColor(atom, _complex) {\r\n    const { opts } = this\r\n    let factor = 1\r\n    if (atom.temperature && opts) {\r\n      if (opts.min === opts.max) {\r\n        factor = atom.temperature > opts.max ? 1 : 0\r\n      } else {\r\n        factor = (atom.temperature - opts.min) / (opts.max - opts.min)\r\n      }\r\n      return this.palette.getGradientColor(factor, opts.gradient)\r\n    }\r\n    return this.palette.defaultGradientColor\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const { opts } = this\r\n    if (!opts) {\r\n      return this.palette.defaultGradientColor\r\n    }\r\n    if (residue.temperature) {\r\n      let factor = 0\r\n      if (opts.min === opts.max) {\r\n        factor = residue.temperature > opts.max ? 1 : 0\r\n      } else {\r\n        factor = (residue.temperature - opts.min) / (opts.max - opts.min)\r\n      }\r\n      return this.palette.getGradientColor(factor, opts.gradient)\r\n    }\r\n    return this.palette.defaultGradientColor\r\n  }\r\n}\r\n\r\nTemperatureColorer.prototype.id = 'TM' // [T]e[M]perature\r\nTemperatureColorer.prototype.name = 'Temperature'\r\nTemperatureColorer.prototype.shortName = 'Temperature'\r\n\r\nexport default TemperatureColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @see Occupancy\r\n *\r\n * @exports OccupancyColorer\r\n * @arguments Occupancy\r\n * @constructor\r\n * @classdesc Coloring algorithm based on occupancy of chemical element.\r\n */\r\nclass OccupancyColorer extends Colorer {\r\n  static id = 'OC'\r\n\r\n  _getColorByOccupancy(occupancy, opts) {\r\n    if (occupancy !== undefined) {\r\n      const factor = 1 - occupancy\r\n      return this.palette.getGradientColor(factor, opts.gradient)\r\n    }\r\n    return this.palette.defaultGradientColor\r\n  }\r\n\r\n  getAtomColor(atom, _complex) {\r\n    const { opts } = this\r\n    return this._getColorByOccupancy(atom.occupancy, opts)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const { opts } = this\r\n    return this._getColorByOccupancy(residue.occupancy, opts)\r\n  }\r\n}\r\n\r\nOccupancyColorer.prototype.id = 'OC' // [OC]cupancy\r\nOccupancyColorer.prototype.name = 'Occupancy'\r\nOccupancyColorer.prototype.shortName = 'Occupancy'\r\n\r\nexport default OccupancyColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\nclass HydrophobicityColorer extends Colorer {\r\n  static id = 'HY'\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    let color = this.palette.defaultResidueColor\r\n    if (residue._type.hydrophobicity !== undefined) {\r\n      // Kyte Doolitle hydro [-4.5,4.5]->[0.1]\r\n      const min = -4.5\r\n      const max = 4.5\r\n      color = this.palette.getGradientColor(\r\n        (residue._type.hydrophobicity - min) / (max - min),\r\n        this.opts.gradient\r\n      )\r\n    }\r\n    return color\r\n  }\r\n}\r\n\r\nHydrophobicityColorer.prototype.id = 'HY'\r\nHydrophobicityColorer.prototype.name = 'Hydrophobicity'\r\nHydrophobicityColorer.prototype.shortName = 'Hydrophobicity'\r\n\r\nexport default HydrophobicityColorer\r\n",
		"import Colorer from './Colorer'\r\n\r\nclass MoleculeColorer extends Colorer {\r\n  static id = 'MO'\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex)\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const molecule = residue._molecule\r\n    const count = _complex.getMoleculeCount()\r\n    if (count > 1) {\r\n      return this.palette.getGradientColor(\r\n        (molecule.index - 1) / (count - 1),\r\n        this.opts.gradient\r\n      )\r\n    }\r\n    return this.palette.getGradientColor(0, this.opts.gradient)\r\n  }\r\n}\r\n\r\nMoleculeColorer.prototype.id = 'MO'\r\nMoleculeColorer.prototype.name = 'Molecule'\r\nMoleculeColorer.prototype.shortName = 'Molecule'\r\n\r\nexport default MoleculeColorer\r\n",
		"import Colorer from './Colorer'\r\nimport Atom from '../../chem/Atom'\r\n\r\nfunction scaleColor(c, factor) {\r\n  const r1 = (c >> 16) & 0xff\r\n  const g1 = (c >> 8) & 0xff\r\n  const b1 = c & 0xff\r\n  const r = factor * r1\r\n  const g = factor * g1\r\n  const b = factor * b1\r\n  return (r << 16) | (g << 8) | b\r\n}\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @exports CarbonColorer\r\n * @augments Colorer\r\n * @constructor\r\n * @classdesc Bicolor coloring algorithm based on selection carbon atoms.\r\n */\r\nclass CarbonColorer extends Colorer {\r\n  static id = 'CB'\r\n\r\n  getAtomColor(atom, _complex) {\r\n    const colorCarbon = this.opts.color\r\n    const colorNotCarbon = scaleColor(colorCarbon, this.opts.factor)\r\n    return atom.flags & Atom.Flags.CARBON ? colorCarbon : colorNotCarbon\r\n  }\r\n\r\n  getResidueColor(_residue, _complex) {\r\n    return this.opts.color\r\n  }\r\n}\r\n\r\nCarbonColorer.prototype.id = 'CB'\r\nCarbonColorer.prototype.name = 'Carbon'\r\nCarbonColorer.prototype.shortName = 'Carbon'\r\n\r\nexport default CarbonColorer\r\n",
		"import EntityList from '../utils/EntityList'\r\n\r\nimport ElementColorer from './colorers/ElementColorer'\r\nimport ResidueTypeColorer from './colorers/ResidueTypeColorer'\r\nimport SequenceColorer from './colorers/SequenceColorer'\r\nimport ChainColorer from './colorers/ChainColorer'\r\nimport SecondaryStructureColorer from './colorers/SecondaryStructureColorer'\r\nimport UniformColorer from './colorers/UniformColorer'\r\nimport ConditionalColorer from './colorers/ConditionalColorer'\r\nimport ConformationColorer from './colorers/ConformationColorer'\r\nimport TemperatureColorer from './colorers/TemperatureColorer'\r\nimport OccupancyColorer from './colorers/OccupancyColorer'\r\nimport HydrophobicityColorer from './colorers/HydrophobicityColorer'\r\nimport MoleculeColorer from './colorers/MoleculeColorer'\r\nimport CarbonColorer from './colorers/CarbonColorer'\r\n\r\nconst colorers = new EntityList([\r\n  ElementColorer,\r\n  ResidueTypeColorer,\r\n  SequenceColorer,\r\n  ChainColorer,\r\n  SecondaryStructureColorer,\r\n  UniformColorer,\r\n  ConditionalColorer,\r\n  ConformationColorer,\r\n  TemperatureColorer,\r\n  OccupancyColorer,\r\n  HydrophobicityColorer,\r\n  MoleculeColorer,\r\n  CarbonColorer\r\n])\r\n\r\nexport default colorers\r\n",
		"import { Color } from 'three'\r\nimport EntityList from '../utils/EntityList'\r\n\r\nfunction neutralColor(intensity) {\r\n  return new Color(intensity, intensity, intensity)\r\n}\r\n\r\nconst materialList = [\r\n  {\r\n    id: 'DF',\r\n    name: 'Diffuse',\r\n    shortName: 'Diffuse',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 1,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'SF',\r\n    name: 'Soft Plastic',\r\n    shortName: 'Soft',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.1),\r\n      shininess: 30,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'PL',\r\n    name: 'Glossy Plastic',\r\n    shortName: 'Glossy',\r\n    uberOptions: {\r\n      diffuse: neutralColor(0.56),\r\n      specular: neutralColor(0.28),\r\n      shininess: 100,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'ME',\r\n    name: 'Metal',\r\n    shortName: 'Metal',\r\n    uberOptions: {\r\n      diffuse: neutralColor(0.56),\r\n      specular: neutralColor(0.55),\r\n      shininess: 30,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'TR',\r\n    name: 'Transparent',\r\n    shortName: 'Transparent',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 1,\r\n      opacity: 0.5\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: true,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'GL',\r\n    name: 'Glass',\r\n    shortName: 'Glass',\r\n    uberOptions: {\r\n      diffuse: neutralColor(0.5),\r\n      specular: neutralColor(0.65),\r\n      shininess: 100,\r\n      opacity: 0.5\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: true,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'BA',\r\n    name: 'Backdrop',\r\n    shortName: 'Backdrop',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 1,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: false,\r\n      fog: false,\r\n      depthWrite: false,\r\n      transparent: false,\r\n      toonShading: false\r\n    }\r\n  },\r\n  {\r\n    id: 'TN',\r\n    name: 'Toon',\r\n    shortName: 'Toon',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 1,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: true\r\n    }\r\n  },\r\n  {\r\n    id: 'FL',\r\n    name: 'Flat',\r\n    shortName: 'Flat',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 0,\r\n      opacity: 1.0\r\n    },\r\n    values: {\r\n      lights: false,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false\r\n    }\r\n  }\r\n]\r\n\r\nconst materials = new EntityList(materialList)\r\n\r\nexport default materials\r\n",
		"/**\r\n * Utils functions which is worked with meshes\r\n *\r\n * functions for doing something with all/specified meshes\r\n * functions for traversihg tree and create auxiliary meshes for transparency/shadowmaps...\r\n * functions for calculating data connected with meshes\r\n */\r\n\r\nimport UberMaterial from './shaders/UberMaterial'\r\nimport gfxutils from './gfxutils'\r\nimport {\r\n  BufferGeometry,\r\n  InstancedBufferAttribute,\r\n  InstancedBufferGeometry,\r\n  Line,\r\n  LineSegments,\r\n  Mesh\r\n} from 'three'\r\n\r\nfunction _gatherObjects(root, meshTypes) {\r\n  const meshes = []\r\n  root.traverse((object) => {\r\n    for (let i = 0; i < meshTypes.length; i++) {\r\n      if (object instanceof meshTypes[i]) {\r\n        meshes[meshes.length] = object\r\n        break\r\n      }\r\n    }\r\n  })\r\n  return meshes\r\n}\r\n\r\n// new mesh with the same geometry and specified material values and layer\r\nfunction createDerivativeMesh(mesh, values, layer) {\r\n  const material = mesh.material.createInstance()\r\n  material.setValues(values)\r\n\r\n  const newMesh = new mesh.constructor(mesh.geometry, material)\r\n  newMesh.material.needsUpdate = true\r\n  newMesh.applyMatrix4(mesh.matrix)\r\n  newMesh.layers.set(layer)\r\n  return newMesh\r\n}\r\n\r\nfunction traverseMeshes(root, meshTypes, func) {\r\n  const meshes = _gatherObjects(root, meshTypes)\r\n\r\n  for (let i = 0, n = meshes.length; i < n; ++i) {\r\n    const mesh = meshes[i]\r\n    if (!mesh.parent) {\r\n      continue\r\n    }\r\n    func(mesh)\r\n  }\r\n}\r\n\r\nfunction applyTransformsToMeshes(root, mtc) {\r\n  const mtcCount = mtc.length\r\n  if (mtcCount < 1) {\r\n    return\r\n  }\r\n\r\n  const meshTypes = [Mesh, LineSegments, Line]\r\n  traverseMeshes(root, meshTypes, (mesh) => {\r\n    mesh.applyMatrix4(mtc[0])\r\n    for (let j = 1; j < mtcCount; ++j) {\r\n      const newMesh = new mesh.constructor(mesh.geometry, mesh.material)\r\n      mesh.parent.add(newMesh)\r\n      newMesh.applyMatrix4(mtc[j])\r\n    }\r\n  })\r\n}\r\n\r\nconst processTransparentMaterial = (function () {\r\n  const matValues = {\r\n    prepassTransparancy: true,\r\n    fakeOpacity: false,\r\n    transparent: false,\r\n    colorFromDepth: false,\r\n    lights: false,\r\n    shadowmap: false,\r\n    fog: false\r\n  }\r\n\r\n  return function (root, material) {\r\n    if (!(material instanceof UberMaterial)) {\r\n      return\r\n    }\r\n\r\n    traverseMeshes(root, [Mesh, LineSegments], (mesh) => {\r\n      mesh.material.setValues({\r\n        prepassTransparancy: false,\r\n        fakeOpacity: false\r\n      })\r\n      mesh.material.needsUpdate = true\r\n      mesh.layers.set(gfxutils.LAYERS.TRANSPARENT)\r\n\r\n      const prepassTranspMesh = createDerivativeMesh(\r\n        mesh,\r\n        matValues,\r\n        gfxutils.LAYERS.PREPASS_TRANSPARENT\r\n      )\r\n      mesh.parent.add(prepassTranspMesh)\r\n    })\r\n  }\r\n})()\r\n\r\nconst processColFromPosMaterial = (function () {\r\n  const matValues = {\r\n    colorFromPos: true,\r\n    transparent: false,\r\n    colorFromDepth: false,\r\n    lights: false,\r\n    shadowmap: false,\r\n    fog: false,\r\n    overrideColor: false,\r\n    fogTransparent: false,\r\n    attrColor: false,\r\n    attrColor2: false,\r\n    attrAlphaColor: false,\r\n    fakeOpacity: false\r\n  }\r\n\r\n  return function (root, material) {\r\n    if (!(material instanceof UberMaterial)) {\r\n      return\r\n    }\r\n\r\n    traverseMeshes(root, [Mesh, LineSegments], (mesh) => {\r\n      const colFromPosMesh = createDerivativeMesh(\r\n        mesh,\r\n        matValues,\r\n        gfxutils.LAYERS.COLOR_FROM_POSITION\r\n      )\r\n      mesh.parent.add(colFromPosMesh)\r\n    })\r\n  }\r\n})()\r\n\r\nconst createShadowmapMaterial = (function () {\r\n  const matValues = {\r\n    colorFromDepth: true,\r\n    orthoCam: true,\r\n    lights: false,\r\n    shadowmap: false,\r\n    fog: false\r\n  }\r\n\r\n  return function (root, material) {\r\n    if (!(material instanceof UberMaterial)) {\r\n      return\r\n    }\r\n    traverseMeshes(root, [Mesh, LineSegments], (mesh) => {\r\n      if (!mesh.receiveShadow && mesh.material.shadowmap) {\r\n        // remove shadow from non-receivers\r\n        mesh.material.setValues({ shadowmap: false })\r\n      }\r\n      if (!mesh.material.lights) {\r\n        // skip creating shadowmap meshes for materials without lighting\r\n        return\r\n      }\r\n      if (!mesh.castShadow) {\r\n        // skip creating shadowmap meshes for non-casters\r\n        return\r\n      }\r\n      if (!gfxutils.belongToSelectLayers(mesh)) {\r\n        // skip creating shadowmap meshes for selection layer\r\n        return\r\n      }\r\n\r\n      const shadowmapMesh = createDerivativeMesh(\r\n        mesh,\r\n        matValues,\r\n        gfxutils.LAYERS.SHADOWMAP\r\n      )\r\n      shadowmapMesh.isShadowmapMesh = true\r\n      mesh.parent.add(shadowmapMesh)\r\n    })\r\n  }\r\n})()\r\n\r\nfunction removeShadowmapMaterial(root, material) {\r\n  if (!(material instanceof UberMaterial)) {\r\n    return\r\n  }\r\n\r\n  traverseMeshes(root, [Mesh, LineSegments], (mesh) => {\r\n    if (mesh.isShadowmapMesh) {\r\n      mesh.parent.remove(mesh)\r\n    }\r\n  })\r\n}\r\n\r\nfunction forEachMeshInGroup(group, process) {\r\n  function processObj(object) {\r\n    if (object instanceof Mesh) {\r\n      process(object)\r\n    }\r\n    for (let i = 0, l = object.children.length; i < l; i++) {\r\n      processObj(object.children[i])\r\n    }\r\n  }\r\n  processObj(group)\r\n}\r\n\r\nfunction _countMeshTriangles(mesh) {\r\n  const geom = mesh.geometry\r\n  if (geom instanceof InstancedBufferGeometry) {\r\n    const attribs = geom.attributes\r\n    for (const property in attribs) {\r\n      if (\r\n        attribs.hasOwnProperty(property) &&\r\n        attribs[property] instanceof InstancedBufferAttribute\r\n      ) {\r\n        const currAttr = attribs[property]\r\n        const indexSize = geom.index ? geom.index.array.length / 3 : 0\r\n        return (indexSize * currAttr.array.length) / currAttr.itemSize\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n  if (geom instanceof BufferGeometry) {\r\n    return geom.index ? geom.index.array.length / 3 : 0\r\n  }\r\n  return geom.faces ? geom.faces.length : 0\r\n}\r\n\r\nfunction countTriangles(group) {\r\n  let totalCount = 0\r\n  forEachMeshInGroup(group, (mesh) => {\r\n    totalCount += _countMeshTriangles(mesh)\r\n  })\r\n  return totalCount\r\n}\r\n\r\nexport default {\r\n  applyTransformsToMeshes,\r\n  processTransparentMaterial,\r\n  processColFromPosMaterial,\r\n  createShadowmapMaterial,\r\n  removeShadowmapMaterial,\r\n  forEachMeshInGroup,\r\n  countTriangles\r\n}\r\n",
		"import UberMaterial from './shaders/UberMaterial'\r\nimport gfxutils from './gfxutils'\r\nimport meshutils from './meshutils'\r\nimport settings from '../settings'\r\nimport materials from './materials'\r\nimport chem from '../chem'\r\nimport { Group } from 'three'\r\nimport { isEqual } from 'lodash'\r\n\r\nconst { selectors } = chem\r\n\r\nclass Representation {\r\n  constructor(index, mode, colorer, selector) {\r\n    const startMaterialValues = {\r\n      clipPlane: settings.now.draft.clipPlane,\r\n      fogTransparent: settings.now.bg.transparent,\r\n      shadowmap: settings.now.shadow.on,\r\n      shadowmapType: settings.now.shadow.type\r\n    }\r\n    this.index = index\r\n    this.mode = mode\r\n    this.colorer = colorer\r\n    this.selector = selector\r\n    this.selectorString = ''\r\n    this.count = 0\r\n    this.material = new UberMaterial()\r\n    this.material.setValues(startMaterialValues)\r\n    this.material.setUberOptions({ fogAlpha: settings.now.fogAlpha })\r\n    this.materialPreset = materials.first\r\n    this.needsRebuild = true\r\n    this.visible = true\r\n\r\n    // apply mode params & preset\r\n    this.setMode(mode)\r\n  }\r\n\r\n  markAtoms(complex) {\r\n    this.count = complex.markAtoms(this.selector, 1 << this.index)\r\n    this.needsRebuild = true\r\n    return this.count\r\n  }\r\n\r\n  unmarkAtoms(complex) {\r\n    complex.clearAtomBits(1 << this.index)\r\n    this.count = 0\r\n  }\r\n\r\n  setMode(mode) {\r\n    this.mode = mode\r\n  }\r\n\r\n  setMaterialPreset(preset) {\r\n    this.materialPreset = preset\r\n    this.material.setUberOptions(preset.uberOptions)\r\n    this.material.setValues(preset.values)\r\n  }\r\n\r\n  reset() {\r\n    this.geo = null\r\n    this.selectionGeo = null\r\n  }\r\n\r\n  buildGeometry(complex) {\r\n    this.reset()\r\n    this.needsRebuild = false\r\n\r\n    if (settings.now.ao) {\r\n      this.material.setValues({ normalsToGBuffer: settings.now.ao })\r\n    }\r\n\r\n    this.geo = this.mode.buildGeometry(\r\n      complex,\r\n      this.colorer,\r\n      1 << this.index,\r\n      this.material\r\n    )\r\n\r\n    if (\r\n      this.material.uberOptions.opacity < 0.99 &&\r\n      settings.now.transparency === 'prepass'\r\n    ) {\r\n      meshutils.processTransparentMaterial(this.geo, this.material)\r\n    }\r\n    this.geo.visible = this.visible\r\n\r\n    gfxutils.processObjRenderOrder(this.geo, this.materialPreset.id)\r\n    meshutils.processColFromPosMaterial(this.geo, this.material)\r\n\r\n    if (settings.now.shadow.on) {\r\n      meshutils.createShadowmapMaterial(this.geo, this.material)\r\n    }\r\n\r\n    return this.geo\r\n  }\r\n\r\n  buildSelectionGeometry(mask) {\r\n    let sg = null\r\n\r\n    if (this.geo && 'getSubset' in this.geo) {\r\n      const meshes = this.geo.getSubset(mask)\r\n      if (meshes && meshes.length > 0) {\r\n        sg = new Group()\r\n        sg.matrixAutoUpdate = false\r\n        sg.matrix = this.geo.matrix\r\n\r\n        for (let j = 0; j < meshes.length; j++) {\r\n          const m = meshes[j]\r\n          sg.add(m)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (sg) {\r\n      sg.visible = this.visible\r\n    }\r\n\r\n    this.selectionGeo = sg\r\n    return this.selectionGeo\r\n  }\r\n\r\n  /**\r\n   * Create object that represents difference between current and another rep\r\n   * anotherRep could be undefined. In this case everything is reported.\r\n   */\r\n  compare(repSettings) {\r\n    const diff = {}\r\n\r\n    const selStr = String(this.selector)\r\n    if (\r\n      !repSettings ||\r\n      selStr.valueOf() !== String(repSettings.selector).valueOf()\r\n    ) {\r\n      diff.selector = selStr\r\n    }\r\n\r\n    const modeDiff = this.mode.identify()\r\n    if (\r\n      !repSettings ||\r\n      Array.isArray(modeDiff) ||\r\n      modeDiff !== repSettings.mode\r\n    ) {\r\n      diff.mode = modeDiff\r\n    }\r\n\r\n    const colorerDiff = this.colorer.identify()\r\n    if (\r\n      !repSettings ||\r\n      Array.isArray(colorerDiff) ||\r\n      colorerDiff !== repSettings.colorer\r\n    ) {\r\n      diff.colorer = colorerDiff\r\n    }\r\n\r\n    if (!repSettings || this.materialPreset.id !== repSettings.material) {\r\n      diff.material = this.materialPreset.id\r\n    }\r\n\r\n    return diff\r\n  }\r\n\r\n  /**\r\n   * Change representation. Write fields what was changed into new object, return it.\r\n   */\r\n  change(repSettings, complex, mode, color) {\r\n    const diff = {}\r\n\r\n    // modify selector\r\n    if (repSettings.selector) {\r\n      const newSelectorObject = selectors.parse(repSettings.selector).selector\r\n      const newSelector = String(newSelectorObject)\r\n      if (this.selectorString !== newSelector) {\r\n        diff.selector = newSelector\r\n        this.selectorString = newSelector\r\n        this.selector = newSelectorObject\r\n        this.markAtoms(complex)\r\n      }\r\n    }\r\n\r\n    // modify mode\r\n    if (repSettings.mode) {\r\n      const newMode = repSettings.mode\r\n      if (!isEqual(this.mode.identify(), newMode)) {\r\n        diff.mode = newMode\r\n        this.setMode(mode)\r\n      }\r\n    }\r\n\r\n    // modify colorer\r\n    if (repSettings.colorer) {\r\n      const newColorer = repSettings.colorer\r\n      if (!isEqual(this.colorer.identify(), newColorer)) {\r\n        diff.colorer = newColorer\r\n        this.colorer = color\r\n      }\r\n    }\r\n\r\n    // modify material\r\n    if (repSettings.material) {\r\n      const newMaterial = repSettings.material\r\n      if (!isEqual(this.materialPreset.id, newMaterial)) {\r\n        diff.material = newMaterial\r\n        this.setMaterialPreset(materials.get(repSettings.material))\r\n      }\r\n    }\r\n\r\n    return diff\r\n  }\r\n\r\n  show(visible) {\r\n    this.visible = visible\r\n    if (this.geo) {\r\n      this.geo.visible = visible\r\n    }\r\n    if (this.selectionGeo) {\r\n      this.selectionGeo.visible = visible\r\n    }\r\n  }\r\n}\r\n\r\nexport default Representation\r\n",
		"import logger from './utils/logger'\r\nimport gfxutils from './gfx/gfxutils'\r\nimport './gfx/modes'\r\nimport { Group, Matrix4, Object3D, Vector3 } from 'three'\r\n\r\nfunction _traverseComponentGroups(root, component, callback) {\r\n  const { children } = root\r\n  if (!children) {\r\n    return\r\n  }\r\n\r\n  for (let i = 0, n = children.length; i < n; ++i) {\r\n    const child = children[i]\r\n    if (child._component === component) {\r\n      callback(child)\r\n    }\r\n    if (child instanceof gfxutils.RCGroup) {\r\n      _traverseComponentGroups(child, component, callback)\r\n    }\r\n  }\r\n}\r\n\r\nfunction ComplexEditor() {}\r\n\r\nclass ComplexComponentEditor extends ComplexEditor {\r\n  constructor(complexVisual) {\r\n    super()\r\n    this._complexVisual = complexVisual\r\n    this._inProgress = false\r\n  }\r\n\r\n  begin() {\r\n    const complex = this._complexVisual.getComplex()\r\n\r\n    // init component matrices\r\n    this._componentTransforms = []\r\n    for (let i = 0; i < complex._components.length; ++i) {\r\n      const component = complex._components[i]\r\n      this._componentTransforms[component._index] = new Object3D()\r\n    }\r\n\r\n    this._inProgress = true\r\n\r\n    return true\r\n  }\r\n\r\n  apply() {\r\n    if (!this._inProgress) {\r\n      return\r\n    }\r\n\r\n    const complex = this._complexVisual.getComplex()\r\n\r\n    for (let i = 0; i < complex._components.length; ++i) {\r\n      this._bakeComponentTransform(complex._components[i])\r\n    }\r\n\r\n    complex.onAtomPositionChanged()\r\n\r\n    this._resetComponentTransform()\r\n\r\n    this._complexVisual.finalizeEdit()\r\n  }\r\n\r\n  discard() {\r\n    if (!this._inProgress) {\r\n      return\r\n    }\r\n\r\n    this._resetComponentTransform()\r\n\r\n    this._complexVisual.finalizeEdit()\r\n  }\r\n\r\n  getAltObj() {\r\n    const res = {\r\n      objects: [],\r\n      pivot: new Vector3(0, 0, 0)\r\n    }\r\n\r\n    const visual = this._complexVisual\r\n    const component = visual.getSelectedComponent()\r\n\r\n    if (component === null) {\r\n      return res\r\n    }\r\n\r\n    const selection = this._complexVisual.getSelectionGeo()\r\n    const selectionMask = 1 << visual.getSelectionBit()\r\n    let i\r\n    let j\r\n    let reprNode\r\n    let geo\r\n\r\n    // find all geo nodes for this component\r\n    _traverseComponentGroups(visual, component, (child) => {\r\n      res.objects.push(child)\r\n    })\r\n\r\n    // find all selection nodes for this component\r\n    for (i = 0; i < selection.children.length; ++i) {\r\n      reprNode = selection.children[i]\r\n      for (j = 0; j < reprNode.children.length; ++j) {\r\n        geo = reprNode.children[j]\r\n        if (geo.hasOwnProperty('_component') && geo._component === component) {\r\n          res.objects.push(geo)\r\n        }\r\n      }\r\n    }\r\n\r\n    // add dummy object that stores component transformation\r\n    res.objects.push(this._componentTransforms[component._index])\r\n\r\n    const bbmin = new Vector3(\r\n      Number.MAX_VALUE,\r\n      Number.MAX_VALUE,\r\n      Number.MAX_VALUE\r\n    )\r\n    const bbmax = new Vector3(\r\n      -Number.MAX_VALUE,\r\n      -Number.MAX_VALUE,\r\n      -Number.MAX_VALUE\r\n    )\r\n\r\n    component.forEachResidue((residue) => {\r\n      const atoms = residue._atoms\r\n      for (j = 0; j < atoms.length; ++j) {\r\n        if (atoms[j].mask & selectionMask) {\r\n          bbmin.min(atoms[j].position)\r\n          bbmax.max(atoms[j].position)\r\n        }\r\n      }\r\n    })\r\n\r\n    res.pivot.lerpVectors(bbmin, bbmax, 0.5)\r\n    return res\r\n  }\r\n\r\n  _bakeComponentTransform(component) {\r\n    const t = this._componentTransforms[component._index]\r\n    if (\r\n      t &&\r\n      (!(t.position.x === 0 && t.position.y === 0 && t.position.z === 0) ||\r\n        !(\r\n          t.quaternion.x === 0 &&\r\n          t.quaternion.y === 0 &&\r\n          t.quaternion.z === 0 &&\r\n          t.quaternion.w === 1\r\n        ))\r\n    ) {\r\n      t.updateMatrix()\r\n\r\n      component.forEachResidue((residue) => {\r\n        const atoms = residue._atoms\r\n        for (let j = 0; j < atoms.length; ++j) {\r\n          atoms[j].position.applyMatrix4(t.matrix)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  _resetComponentTransform() {\r\n    const visual = this._complexVisual\r\n    const selection = this._complexVisual.getSelectionGeo()\r\n    let i\r\n    let j\r\n    let reprNode\r\n    let geo\r\n\r\n    for (i = 0; i < this._componentTransforms.length; ++i) {\r\n      geo = this._componentTransforms[i]\r\n      geo.position.set(0, 0, 0)\r\n      geo.quaternion.set(0, 0, 0, 1)\r\n    }\r\n\r\n    // reset all geo nodes\r\n    for (i = 0; i < visual.children.length; ++i) {\r\n      reprNode = visual.children[i]\r\n      for (j = 0; j < reprNode.children.length; ++j) {\r\n        geo = reprNode.children[j]\r\n        if (geo.hasOwnProperty('_component')) {\r\n          geo.position.set(0, 0, 0)\r\n          geo.quaternion.set(0, 0, 0, 1)\r\n        }\r\n      }\r\n    }\r\n\r\n    // reset all selection nodes\r\n    for (i = 0; i < selection.children.length; ++i) {\r\n      reprNode = selection.children[i]\r\n      for (j = 0; j < reprNode.children.length; ++j) {\r\n        geo = reprNode.children[j]\r\n        if (geo.hasOwnProperty('_component')) {\r\n          geo.position.set(0, 0, 0)\r\n          geo.quaternion.set(0, 0, 0, 1)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass ComplexFragmentEditor extends ComplexEditor {\r\n  constructor(complexVisual) {\r\n    super()\r\n    this._complexVisual = complexVisual\r\n    this._inProgress = false\r\n  }\r\n\r\n  begin() {\r\n    const visual = this._complexVisual\r\n    const selection = this._complexVisual.getSelectionGeo()\r\n\r\n    const atoms = this._getSelectionBorderAtoms()\r\n    if (atoms.length < 1 || atoms.length > 2) {\r\n      logger.error('Can only edit fragments with one or two bound atoms.')\r\n      return false\r\n    }\r\n\r\n    this._fragmentBoundAtoms = atoms\r\n\r\n    const selectionMask = 1 << visual.getSelectionBit()\r\n\r\n    // hide selected fragment in main model\r\n    visual.disableSubset(selectionMask, true)\r\n\r\n    // hide selection geo in main model\r\n    for (let k = 0; k < selection.children.length; ++k) {\r\n      selection.children[k].visible = false\r\n    }\r\n\r\n    // create visible fragment representation to rotate\r\n    const pivotPos = atoms[0].position.clone()\r\n\r\n    if (atoms.length === 2) {\r\n      pivotPos.lerp(atoms[1].position, 0.5)\r\n    }\r\n\r\n    this._fragmentGeo = new Group()\r\n    visual.add(this._fragmentGeo)\r\n    this._fragmentGeo.position.copy(pivotPos)\r\n\r\n    this._fragmentSelectionGeo = new Group()\r\n    selection.add(this._fragmentSelectionGeo)\r\n    this._fragmentSelectionGeo.position.copy(pivotPos)\r\n\r\n    const offset = pivotPos.clone()\r\n    offset.negate()\r\n\r\n    for (let i = 0; i < visual.children.length; ++i) {\r\n      const g = visual.children[i]\r\n      if (!('getSubset' in g)) {\r\n        continue\r\n      }\r\n\r\n      const vg = new Group()\r\n      this._fragmentGeo.add(vg)\r\n\r\n      const sg = new Group()\r\n      this._fragmentSelectionGeo.add(sg)\r\n\r\n      const meshes = g.getSubset(selectionMask, true)\r\n      for (let j = 0; j < meshes.length; j++) {\r\n        const m = meshes[j]\r\n        vg.add(m)\r\n        m.position.copy(offset)\r\n      }\r\n\r\n      const smeshes = g.getSubset(selectionMask, true)\r\n      for (let h = 0; h < smeshes.length; h++) {\r\n        const sm = smeshes[h]\r\n        sg.add(sm)\r\n        sm.position.copy(offset)\r\n      }\r\n    }\r\n\r\n    gfxutils.applySelectionMaterial(this._fragmentSelectionGeo)\r\n\r\n    this._inProgress = true\r\n    return true\r\n  }\r\n\r\n  apply() {\r\n    if (!this._inProgress) {\r\n      return\r\n    }\r\n\r\n    const visual = this._complexVisual\r\n    const selectionBit = visual.getSelectionBit()\r\n\r\n    const p = this._fragmentGeo.position\r\n    const m = this._fragmentGeo.matrix.clone()\r\n    m.multiply(new Matrix4().makeTranslation(-p.x, -p.y, -p.z))\r\n\r\n    this._bakeAtomTransform(m, 1 << selectionBit)\r\n\r\n    // show selected fragment in main model\r\n    visual.enableSubset(1 << selectionBit, true)\r\n\r\n    visual.getComplex().onAtomPositionChanged()\r\n\r\n    visual.finalizeEdit()\r\n  }\r\n\r\n  discard() {\r\n    if (!this._inProgress) {\r\n      return\r\n    }\r\n\r\n    const visual = this._complexVisual\r\n    const selection = this._complexVisual.getSelectionGeo()\r\n\r\n    this._fragmentGeo.parent.remove(this._fragmentGeo)\r\n\r\n    // show selected fragment in main model\r\n    visual.enableSubset(1 << visual.getSelectionBit(), true)\r\n\r\n    // show selection geo in main model (+ remove fragment selection geo)\r\n    for (let i = 0; i < selection.children.length; ++i) {\r\n      const node = selection.children[i]\r\n      if (node.visible) {\r\n        selection.remove(node)\r\n      } else {\r\n        node.visible = true\r\n      }\r\n    }\r\n\r\n    visual.finalizeEdit()\r\n  }\r\n\r\n  isFreeRotationAllowed() {\r\n    return this._fragmentBoundAtoms.length < 2\r\n  }\r\n\r\n  getAltObj() {\r\n    const res = {\r\n      objects: [],\r\n      pivot: new Vector3(0, 0, 0)\r\n    }\r\n\r\n    res.objects.push(this._fragmentGeo, this._fragmentSelectionGeo)\r\n\r\n    const boundAtoms = this._fragmentBoundAtoms\r\n    if (boundAtoms.length === 1) {\r\n      if (boundAtoms[0].bonds.length === 1) {\r\n        // single external bond allows rotation about bond axis\r\n        const bond = boundAtoms[0].bonds[0]\r\n        res.axis = new Vector3().subVectors(\r\n          bond._right.position,\r\n          bond._left.position\r\n        )\r\n        res.axis.normalize()\r\n        res.axis.transformDirection(this._complexVisual.matrixWorld)\r\n      }\r\n    } else if (boundAtoms.length === 2) {\r\n      // two bound atoms allow rotation only about axis running through their centers\r\n      res.axis = new Vector3().subVectors(\r\n        boundAtoms[1].position,\r\n        boundAtoms[0].position\r\n      )\r\n      res.axis.normalize()\r\n      res.axis.transformDirection(this._complexVisual.matrixWorld)\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  _getSelectionBorderAtoms() {\r\n    const complex = this._complexVisual.getComplex()\r\n\r\n    const selectionMask = 1 << this._complexVisual.getSelectionBit()\r\n    const atomHash = {}\r\n\r\n    complex.forEachBond((bond) => {\r\n      if (bond._left.mask & selectionMask) {\r\n        if ((bond._right.mask & selectionMask) === 0) {\r\n          atomHash[bond._left.index] = 1\r\n        }\r\n      } else if (bond._right.mask & selectionMask) {\r\n        atomHash[bond._right.index] = 1\r\n      }\r\n    })\r\n\r\n    const atoms = []\r\n    const keys = Object.keys(atomHash)\r\n    for (let i = 0, n = keys.length; i < n; ++i) {\r\n      const idx = keys[i]\r\n      atoms.push(complex._atoms[idx])\r\n    }\r\n\r\n    return atoms\r\n  }\r\n\r\n  _bakeAtomTransform(matrix, mask) {\r\n    this._complexVisual.getComplex().forEachAtom((atom) => {\r\n      if (atom.mask & mask) {\r\n        atom.position.applyMatrix4(matrix)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default {\r\n  ComponentEditor: ComplexComponentEditor,\r\n  FragmentEditor: ComplexFragmentEditor\r\n}\r\n",
		"import utils from './utils'\r\nimport logger from './utils/logger'\r\nimport chem from './chem'\r\nimport settings from './settings'\r\nimport gfxutils from './gfx/gfxutils'\r\nimport modes from './gfx/modes'\r\nimport colorers from './gfx/colorers'\r\nimport palettes from './gfx/palettes'\r\nimport materials from './gfx/materials'\r\nimport Representation from './gfx/Representation'\r\nimport Visual from './Visual'\r\nimport ComplexVisualEdit from './ComplexVisualEdit'\r\nimport meshutils from './gfx/meshutils'\r\nimport { isEmpty, merge } from 'lodash'\r\nimport { Group, Mesh } from 'three'\r\n\r\nconst { selectors } = chem\r\n\r\nfunction lookupAndCreate(entityList, specs) {\r\n  if (!Array.isArray(specs)) {\r\n    specs = [specs]\r\n  }\r\n  const [id, opts] = specs\r\n  const Entity = entityList.get(id) || entityList.first\r\n  return new Entity(opts)\r\n}\r\n\r\nclass ComplexVisual extends Visual {\r\n  constructor(name, dataSource) {\r\n    super(name, dataSource)\r\n    this._complex = dataSource\r\n\r\n    /** @type {Representation[]} */\r\n    this._reprList = []\r\n    /** @type {?Representation} */\r\n    this._repr = null\r\n    this._reprListChanged = true\r\n\r\n    this._selectionBit = 0\r\n    this._reprUsedBits = 0\r\n    this._selectionCount = 0\r\n\r\n    this._selectionGeometry = new Group()\r\n  }\r\n\r\n  getBoundaries() {\r\n    return this._complex.getBoundaries()\r\n  }\r\n\r\n  release() {\r\n    if (this._selectionGeometry.parent) {\r\n      this._selectionGeometry.remove(this._selectionGeometry)\r\n    }\r\n    Visual.prototype.release.call(this)\r\n  }\r\n\r\n  getComplex() {\r\n    return this._complex\r\n  }\r\n\r\n  getSelectionCount() {\r\n    return this._selectionCount\r\n  }\r\n\r\n  getSelectionGeo() {\r\n    return this._selectionGeometry\r\n  }\r\n\r\n  getSelectionBit() {\r\n    return this._selectionBit\r\n  }\r\n\r\n  getEditor() {\r\n    return this._editor\r\n  }\r\n\r\n  resetReps(reps) {\r\n    // Create all necessary representations\r\n    if (this._complex) {\r\n      this._complex.clearAtomBits(~0)\r\n    }\r\n    this._reprListChanged = true\r\n    this._reprUsedBits = 0\r\n    this._reprList.length = reps.length\r\n    for (let i = 0, n = reps.length; i < n; ++i) {\r\n      const rep = reps[i]\r\n\r\n      let selector\r\n      let selectorString\r\n      if (typeof rep.selector === 'string') {\r\n        selectorString = rep.selector\r\n        ;({ selector } = selectors.parse(selectorString))\r\n      } else if (typeof rep.selector === 'undefined') {\r\n        selectorString = settings.now.presets.default[0].selector\r\n        ;({ selector } = selectors.parse(selectorString))\r\n      } else {\r\n        ;({ selector } = rep)\r\n        selectorString = selector.toString()\r\n      }\r\n      const mode = lookupAndCreate(modes, rep.mode)\r\n      const colorer = lookupAndCreate(colorers, rep.colorer)\r\n      const material = materials.get(rep.material) || materials.first\r\n\r\n      this._reprList[i] = new Representation(i, mode, colorer, selector)\r\n      this._reprList[i].setMaterialPreset(material)\r\n      this._reprList[i].selectorString = selectorString\r\n\r\n      if (this._complex) {\r\n        this._complex.markAtoms(selector, 1 << i)\r\n      }\r\n\r\n      this._reprUsedBits |= 1 << i\r\n    }\r\n    this._repr = reps.length > 0 ? this._reprList[0] : null\r\n\r\n    this._selectionBit = reps.length\r\n    this._reprUsedBits |= 1 << this._selectionBit // selection uses one bit\r\n    this._selectionCount = 0\r\n\r\n    if (this._complex) {\r\n      this._complex.update()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get number of representations created so far.\r\n   * @returns {number} Number of reps.\r\n   */\r\n  repCount() {\r\n    return this._reprList.length\r\n  }\r\n\r\n  /**\r\n   * Get or set the current representation index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\r\n   * @returns {number} The current index.\r\n   */\r\n  repCurrent(index) {\r\n    if (index >= 0 && index < this._reprList.length) {\r\n      this._repr = this._reprList[index]\r\n    } else {\r\n      index = this._reprList.indexOf(this._repr)\r\n    }\r\n    return index\r\n  }\r\n\r\n  /**\r\n   * Get or set representation by index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\r\n   * @param {object=} rep - Optional representation description.\r\n   * @param {string=} rep.selector - Selector string.\r\n   * @param {string=} rep.mode - Mode id.\r\n   * @param {string=} rep.colorer - Colorer id.\r\n   * @param {string=} rep.material - Material id.\r\n   * @returns {Object} {desc, index, status} field desc contains rep description, index - index of correspondent rep,\r\n   * status - one of three strings: 'created', 'changed', ''. 'created' means new rep was created during this function,\r\n   * 'changed' - rep was changed during this function. '' - something else.\r\n   */\r\n  rep(index, rep) {\r\n    // if index is missing then it is the current\r\n    if (!rep && (index === undefined || index instanceof Object)) {\r\n      rep = index\r\n      index = this.repCurrent()\r\n    }\r\n\r\n    // fail if out of bounds\r\n    if (index < 0 || index > this._reprList.length) {\r\n      logger.error(`Rep ${index} does not exist!`)\r\n      return null\r\n    }\r\n\r\n    // a special case of adding just after the end\r\n    if (index === this._reprList.length) {\r\n      const res = this.repAdd(rep)\r\n      logger.warn(\r\n        `Rep ${index} does not exist! New representation was created.`\r\n      )\r\n      return { desc: res.desc, index, status: 'created' }\r\n    }\r\n\r\n    // gather description\r\n    const target = this._reprList[index]\r\n    const desc = {\r\n      selector: target.selectorString,\r\n      mode: target.mode.identify(),\r\n      colorer: target.colorer.identify(),\r\n      material: target.materialPreset.id\r\n    }\r\n\r\n    // modification is requested\r\n    if (rep) {\r\n      // modify\r\n      const diff = target.change(\r\n        rep,\r\n        this._complex,\r\n        lookupAndCreate(modes, rep.mode),\r\n        lookupAndCreate(colorers, rep.colorer)\r\n      )\r\n\r\n      // something was changed\r\n      if (!isEmpty(diff)) {\r\n        target.needsRebuild = true\r\n        for (const key in diff) {\r\n          if (diff.hasOwnProperty(key)) {\r\n            desc[key] = diff[key]\r\n            logger.debug(`rep[${index}].${key} changed to ${diff[key]}`)\r\n          }\r\n        }\r\n\r\n        // safety trick: lower resolution for surface modes\r\n        if (\r\n          diff.mode &&\r\n          target.mode.isSurface &&\r\n          (settings.now.resolution === 'ultra' ||\r\n            settings.now.resolution === 'high')\r\n        ) {\r\n          logger.report(\r\n            'Surface resolution was changed to \"medium\" to avoid hang-ups.'\r\n          )\r\n          settings.set('resolution', 'medium')\r\n        }\r\n        return { desc, index, status: 'changed' }\r\n      }\r\n    }\r\n    return { desc, index, status: '' }\r\n  }\r\n\r\n  /**\r\n   * Get representation (not just description) by index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\r\n   * @returns {?object} Representation.\r\n   */\r\n  repGet(index) {\r\n    // if index is missing then it is the current\r\n    if (index === undefined || index instanceof Object) {\r\n      index = this.repCurrent()\r\n    }\r\n\r\n    // fail if out of bounds\r\n    if (index < 0 || index >= this._reprList.length) {\r\n      return null\r\n    }\r\n\r\n    return this._reprList[index]\r\n  }\r\n\r\n  _getFreeReprIdx() {\r\n    let bits = this._reprUsedBits\r\n    for (\r\n      let i = 0;\r\n      i <= ComplexVisual.NUM_REPRESENTATION_BITS;\r\n      ++i, bits >>= 1\r\n    ) {\r\n      if ((bits & 1) === 0) {\r\n        return i\r\n      }\r\n    }\r\n    return -1\r\n  }\r\n\r\n  /**\r\n   * Add new representation.\r\n   * @param {object=} rep - Representation description.\r\n   * @returns {Object} {desc, index} field desc contains added rep description, index - index of this rep.\r\n   */\r\n  repAdd(rep) {\r\n    if (this._reprList.length >= ComplexVisual.NUM_REPRESENTATION_BITS) {\r\n      return null\r\n    }\r\n\r\n    const newSelectionBit = this._getFreeReprIdx()\r\n    if (newSelectionBit < 0) {\r\n      return null // no more slots for representations\r\n    }\r\n\r\n    const originalSelection = this.buildSelectorFromMask(\r\n      1 << this._selectionBit\r\n    )\r\n\r\n    // Fill in default values\r\n    const def = settings.now.presets.default[0]\r\n    const desc = merge(\r\n      {\r\n        selector: def.selector,\r\n        mode: def.mode,\r\n        colorer: def.colorer,\r\n        material: def.material\r\n      },\r\n      rep\r\n    )\r\n\r\n    const selector =\r\n      typeof desc.selector === 'string'\r\n        ? selectors.parse(desc.selector).selector\r\n        : desc.selector\r\n    const target = new Representation(\r\n      this._selectionBit,\r\n      lookupAndCreate(modes, desc.mode),\r\n      lookupAndCreate(colorers, desc.colorer),\r\n      selector\r\n    )\r\n    target.selectorString = selector.toString()\r\n    target.setMaterialPreset(materials.get(desc.material))\r\n    target.markAtoms(this._complex)\r\n    this._reprList.push(target)\r\n\r\n    // change selection bit\r\n    this._selectionBit = newSelectionBit\r\n    this._reprUsedBits |= 1 << this._selectionBit\r\n\r\n    // restore selection using new selection bit\r\n    this._complex.markAtoms(originalSelection, 1 << this._selectionBit)\r\n\r\n    return { desc, index: this._reprList.length - 1 }\r\n  }\r\n\r\n  /**\r\n   * Remove representation.\r\n   * @param {number=} index - Zero-based representation index.\r\n   */\r\n  repRemove(index) {\r\n    if (index === undefined) {\r\n      index = this.repCurrent()\r\n    }\r\n\r\n    // catch out of bounds case\r\n    let count = this._reprList.length\r\n    if (index < 0 || index >= count || count <= 1) {\r\n      // do not allow to remove the single rep\r\n      return\r\n    }\r\n\r\n    const target = this._reprList[index]\r\n    target.unmarkAtoms(this._complex)\r\n    this._reprUsedBits &= ~(1 << target.index)\r\n\r\n    this._reprList.splice(index, 1)\r\n\r\n    // update current rep\r\n    if (target === this._repr) {\r\n      --count\r\n      index = index < count ? index : count - 1\r\n      this._repr = this._reprList[index]\r\n    }\r\n    this._reprListChanged = true\r\n  }\r\n\r\n  /**\r\n   * Hide representation.\r\n   * @param {number} index - Zero-based representation index.\r\n   * @param {boolean=} hide - Specify false to make rep visible, true to hide (by default).\r\n   */\r\n  repHide(index, hide) {\r\n    if (hide === undefined) {\r\n      hide = true\r\n    }\r\n\r\n    // fail if out of bounds\r\n    if (index < 0 || index >= this._reprList.length) {\r\n      return\r\n    }\r\n\r\n    const target = this._reprList[index]\r\n    target.show(!hide)\r\n  }\r\n\r\n  /**\r\n   * Select atoms with selector\r\n   * @param {Selector} selector - selector\r\n   * @param {boolean=} append - true to append selection atoms to current selection, false to rewrite selection\r\n   */\r\n  select(selector, append) {\r\n    if (append) {\r\n      this._selectionCount += this._complex.markAtomsAdditionally(\r\n        selector,\r\n        1 << this._selectionBit\r\n      )\r\n    } else {\r\n      this._selectionCount = this._complex.markAtoms(\r\n        selector,\r\n        1 << this._selectionBit\r\n      )\r\n    }\r\n    this._complex.updateStructuresMask()\r\n    this.rebuildSelectionGeometry()\r\n  }\r\n\r\n  resetSelectionMask() {\r\n    if (this._selectionCount !== 0) {\r\n      this._selectionCount = 0\r\n      if (this._complex) {\r\n        this._complex.clearAtomBits(1 << this._selectionBit)\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSelectionMask(pickedObj) {\r\n    const self = this\r\n    const { atom } = pickedObj\r\n    let { residue, chain, molecule } = pickedObj\r\n    const setMask = 1 << this._selectionBit\r\n    const clearMask = ~setMask\r\n\r\n    if (atom) {\r\n      residue = atom.residue\r\n      chain = residue._chain\r\n      molecule = residue._molecule\r\n\r\n      if (atom.mask & setMask) {\r\n        atom.mask &= clearMask\r\n        residue._mask &= clearMask\r\n        chain._mask &= clearMask\r\n        if (molecule) {\r\n          molecule.mask &= clearMask\r\n        }\r\n        this._selectionCount--\r\n      } else {\r\n        atom.mask |= setMask\r\n        this._selectionCount++\r\n\r\n        // select residue if all atoms in it are selected\r\n        residue.collectMask()\r\n        // select chain and molecule if all residues in it are selected\r\n        chain.collectMask()\r\n        if (molecule) {\r\n          molecule.collectMask()\r\n        }\r\n      }\r\n    } else if (residue) {\r\n      chain = residue._chain\r\n      molecule = residue._molecule\r\n\r\n      if (residue._mask & setMask) {\r\n        residue._mask &= clearMask\r\n        chain._mask &= clearMask\r\n        residue.forEachAtom((a) => {\r\n          if (a.mask & setMask) {\r\n            a.mask &= clearMask\r\n            self._selectionCount--\r\n          }\r\n        })\r\n      } else {\r\n        residue._mask |= setMask\r\n        residue.forEachAtom((a) => {\r\n          if (!(a.mask & setMask)) {\r\n            a.mask |= setMask\r\n            self._selectionCount++\r\n          }\r\n        })\r\n\r\n        // select chain and molecule if all residues in it are selected\r\n        chain.collectMask()\r\n        if (molecule) {\r\n          molecule.collectMask()\r\n        }\r\n      }\r\n    } else if (chain || molecule) {\r\n      const obj = chain || molecule\r\n      if (obj._mask & setMask) {\r\n        obj._mask &= clearMask\r\n        obj.forEachResidue((r) => {\r\n          if (r._mask & setMask) {\r\n            r._mask &= clearMask\r\n            r.forEachAtom((a) => {\r\n              if (a.mask & setMask) {\r\n                a.mask &= clearMask\r\n                self._selectionCount--\r\n              }\r\n            })\r\n            r._mask &= clearMask\r\n          }\r\n        })\r\n      } else {\r\n        obj._mask |= setMask\r\n        obj.forEachResidue((r) => {\r\n          if (!(r._mask & setMask)) {\r\n            r._mask |= setMask\r\n            r.forEachAtom((a) => {\r\n              if (!(a.mask & setMask)) {\r\n                a.mask |= setMask\r\n                self._selectionCount++\r\n              }\r\n            })\r\n            const otherObj = chain ? r.getMolecule() : r.getChain()\r\n            if (otherObj) {\r\n              otherObj.collectMask()\r\n            }\r\n          }\r\n        })\r\n      }\r\n    } else {\r\n      this.resetSelectionMask()\r\n    }\r\n  }\r\n\r\n  expandSelection() {\r\n    const self = this\r\n    const selectionMask = 1 << this._selectionBit\r\n    const tmpMask = 1 << 31\r\n\r\n    // mark atoms to add\r\n    this._complex.forEachBond((bond) => {\r\n      if (bond._left.mask & selectionMask) {\r\n        if ((bond._right.mask & selectionMask) === 0) {\r\n          bond._right.mask |= tmpMask\r\n        }\r\n      } else if (bond._right.mask & selectionMask) {\r\n        bond._left.mask |= tmpMask\r\n      }\r\n    })\r\n\r\n    // select marked atoms\r\n    const deselectionMask = ~tmpMask\r\n    this._complex.forEachAtom((atom) => {\r\n      if (atom.mask & tmpMask) {\r\n        atom.mask = (atom.mask & deselectionMask) | selectionMask\r\n        ++self._selectionCount\r\n      }\r\n    })\r\n\r\n    this._complex.updateStructuresMask()\r\n  }\r\n\r\n  shrinkSelection() {\r\n    const self = this\r\n    const selectionMask = 1 << this._selectionBit\r\n    const tmpMask = 1 << 31\r\n\r\n    // mark atoms neighbouring to unselected ones\r\n    this._complex.forEachBond((bond) => {\r\n      if (bond._left.mask & selectionMask) {\r\n        if ((bond._right.mask & selectionMask) === 0) {\r\n          bond._left.mask |= tmpMask\r\n        }\r\n      } else if (bond._right.mask & selectionMask) {\r\n        bond._right.mask |= tmpMask\r\n      }\r\n    })\r\n\r\n    // mark hanging atoms\r\n    this._complex.forEachAtom((atom) => {\r\n      if (atom.mask & selectionMask && atom.bonds.length === 1) {\r\n        atom.mask |= tmpMask\r\n      }\r\n    })\r\n\r\n    // deselect marked atoms\r\n    const deselectionMask = ~(selectionMask | tmpMask)\r\n    this._complex.forEachAtom((atom) => {\r\n      if (atom.mask & tmpMask) {\r\n        atom.mask &= deselectionMask\r\n        --self._selectionCount\r\n      }\r\n    })\r\n\r\n    this._complex.updateStructuresMask()\r\n  }\r\n\r\n  getSelectedComponent() {\r\n    const selectionMask = 1 << this._selectionBit\r\n\r\n    let component = null\r\n    let multiple = false\r\n\r\n    // find which component is selected (exclusively)\r\n    this._complex.forEachAtom((atom) => {\r\n      if (atom.mask & selectionMask) {\r\n        if (component === null) {\r\n          component = atom.residue._component\r\n        } else if (component !== atom.residue._component) {\r\n          multiple = true\r\n        }\r\n      }\r\n    })\r\n\r\n    return multiple ? null : component\r\n  }\r\n\r\n  getSelectionCenter(center, includesAtom, selRule) {\r\n    center.set(0.0, 0.0, 0.0)\r\n    let count = 0\r\n\r\n    this._complex.forEachAtom((atom) => {\r\n      if (includesAtom(atom, selRule)) {\r\n        center.add(atom.position)\r\n        count++\r\n      }\r\n    })\r\n    if (count === 0) {\r\n      return false\r\n    }\r\n    center.divideScalar(count)\r\n    center.applyMatrix4(this.matrix)\r\n    return true\r\n  }\r\n\r\n  needsRebuild() {\r\n    if (this._reprListChanged) {\r\n      return true\r\n    }\r\n    const reprList = this._reprList\r\n    for (let i = 0, n = reprList.length; i < n; ++i) {\r\n      const repr = reprList[i]\r\n      if (repr.needsRebuild) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Rebuild molecule geometry asynchronously.\r\n   */\r\n  rebuild() {\r\n    const self = this\r\n\r\n    // Destroy current geometry\r\n    gfxutils.clearTree(this)\r\n\r\n    return new Promise((resolve) => {\r\n      // Nothing to do?\r\n      const complex = self._complex\r\n      if (!complex) {\r\n        resolve()\r\n        return\r\n      }\r\n\r\n      let errorOccured = false\r\n      setTimeout(() => {\r\n        console.time('build')\r\n        const reprList = self._reprList\r\n        const palette = palettes.get(settings.now.palette) || palettes.first\r\n        let hasGeometry = false\r\n        for (let i = 0, n = reprList.length; i < n; ++i) {\r\n          const repr = reprList[i]\r\n          repr.colorer.palette = palette\r\n\r\n          if (repr.needsRebuild) {\r\n            repr.reset()\r\n\r\n            try {\r\n              repr.buildGeometry(complex)\r\n            } catch (e) {\r\n              if (e instanceof utils.OutOfMemoryError) {\r\n                repr.needsRebuild = false\r\n                repr.reset()\r\n                logger.error(\r\n                  `Not enough memory to build geometry for representation ${\r\n                    repr.index + 1\r\n                  }`\r\n                )\r\n                errorOccured = true\r\n              } else {\r\n                throw e\r\n              }\r\n            }\r\n\r\n            if (DEBUG && !errorOccured) {\r\n              logger.debug(\r\n                `Triangles count: ${meshutils.countTriangles(repr.geo)}`\r\n              )\r\n            }\r\n          }\r\n\r\n          hasGeometry =\r\n            errorOccured ||\r\n            hasGeometry ||\r\n            gfxutils.groupHasGeometryToRender(repr.geo)\r\n\r\n          if (repr.geo) {\r\n            self.add(repr.geo)\r\n          }\r\n        }\r\n\r\n        self._reprListChanged = false\r\n\r\n        console.timeEnd('build')\r\n        resolve()\r\n      }, 10)\r\n    })\r\n  }\r\n\r\n  setNeedsRebuild() {\r\n    // invalidate all representations\r\n    const reprList = this._reprList\r\n    for (let i = 0, n = reprList.length; i < n; ++i) {\r\n      reprList[i].needsRebuild = true\r\n    }\r\n  }\r\n\r\n  rebuildSelectionGeometry() {\r\n    const mask = 1 << this._selectionBit\r\n\r\n    gfxutils.clearTree(this._selectionGeometry)\r\n\r\n    for (let i = 0, n = this._reprList.length; i < n; ++i) {\r\n      const repr = this._reprList[i]\r\n      const sg = repr.buildSelectionGeometry(mask)\r\n      if (!sg) {\r\n        continue\r\n      }\r\n\r\n      this._selectionGeometry.add(sg)\r\n      for (let j = 0; j < sg.children.length; j++) {\r\n        const m = sg.children[j]\r\n\r\n        // copy component transform (that's not applied yet)\r\n        // TODO make this code obsolete, accessing editor is bad\r\n        if (this._editor && this._editor._componentTransforms) {\r\n          const t = this._editor._componentTransforms[m._component._index]\r\n          if (t) {\r\n            m.position.copy(t.position)\r\n            m.quaternion.copy(t.quaternion)\r\n          }\r\n        }\r\n      }\r\n\r\n      gfxutils.applySelectionMaterial(sg)\r\n    }\r\n  }\r\n\r\n  _buildSelectorFromSortedLists(atoms, residues, chains) {\r\n    const complex = this._complex\r\n\r\n    function optimizeList(list) {\r\n      const result = []\r\n      let k = 0\r\n      let first = NaN\r\n      let last = NaN\r\n      for (let i = 0, n = list.length; i < n; ++i) {\r\n        const value = list[i]\r\n        if (value === last + 1) {\r\n          last = value\r\n        } else {\r\n          if (!Number.isNaN(first)) {\r\n            result[k++] = new selectors.Range(first, last)\r\n          }\r\n          first = last = value\r\n        }\r\n      }\r\n      if (!Number.isNaN(first)) {\r\n        result[k] = new selectors.Range(first, last)\r\n      }\r\n      return result\r\n    }\r\n\r\n    let expression = null\r\n    if (chains.length === complex._chains.length) {\r\n      expression = selectors.all()\r\n    } else {\r\n      let selector\r\n      if (chains.length > 0) {\r\n        selector = selectors.chain(chains)\r\n        expression = expression ? selectors.or(expression, selector) : selector // NOSONAR\r\n      }\r\n      if (Object.keys(residues).length > 0) {\r\n        for (const ch in residues) {\r\n          if (residues.hasOwnProperty(ch)) {\r\n            selector = selectors.and(\r\n              selectors.chain(ch),\r\n              selectors.residx(optimizeList(residues[ch]))\r\n            )\r\n            expression = expression\r\n              ? selectors.or(expression, selector)\r\n              : selector\r\n          }\r\n        }\r\n      }\r\n      if (atoms.length > 0) {\r\n        selector = selectors.serial(optimizeList(atoms))\r\n        expression = expression ? selectors.or(expression, selector) : selector\r\n      }\r\n\r\n      if (!expression) {\r\n        expression = selectors.none()\r\n      }\r\n    }\r\n\r\n    return expression\r\n  }\r\n\r\n  buildSelectorFromMask(mask) {\r\n    const complex = this._complex\r\n    const chains = []\r\n    const residues = {}\r\n    const atoms = []\r\n\r\n    complex.forEachChain((chain) => {\r\n      if (chain._mask & mask) {\r\n        chains.push(chain._name)\r\n      }\r\n    })\r\n\r\n    complex.forEachResidue((residue) => {\r\n      if (residue._mask & mask && !(residue._chain._mask & mask)) {\r\n        const c = residue._chain._name\r\n        if (!(c in residues)) {\r\n          residues[c] = [residue._index]\r\n        } else {\r\n          residues[c].push(residue._index)\r\n        }\r\n      }\r\n    })\r\n\r\n    complex.forEachAtom((atom) => {\r\n      if (atom.mask & mask && !(atom.residue._mask & mask)) {\r\n        atoms.push(atom.serial)\r\n      }\r\n    })\r\n\r\n    return this._buildSelectorFromSortedLists(atoms, residues, chains)\r\n  }\r\n\r\n  forSelectedResidues(process) {\r\n    const selectionMask = 1 << this._selectionBit\r\n    this._complex.forEachResidue((residue) => {\r\n      if (residue._mask & selectionMask) {\r\n        process(residue)\r\n      }\r\n    })\r\n  }\r\n\r\n  beginComponentEdit() {\r\n    if (this._editor) {\r\n      return null\r\n    }\r\n\r\n    const editor = new ComplexVisualEdit.ComponentEditor(this)\r\n    if (!editor.begin()) {\r\n      return null\r\n    }\r\n\r\n    this._editor = editor\r\n    return editor\r\n  }\r\n\r\n  beginFragmentEdit() {\r\n    if (this._editor) {\r\n      return null\r\n    }\r\n\r\n    const editor = new ComplexVisualEdit.FragmentEditor(this)\r\n    if (!editor.begin()) {\r\n      return null\r\n    }\r\n\r\n    this._editor = editor\r\n    return editor\r\n  }\r\n\r\n  // should only be called by editors\r\n  finalizeEdit() {\r\n    this._editor = null\r\n  }\r\n\r\n  setMaterialValues(values, needTraverse = false, process = undefined) {\r\n    for (let i = 0, n = this._reprList.length; i < n; ++i) {\r\n      const rep = this._reprList[i]\r\n      rep.material.setValues(values)\r\n      if (needTraverse) {\r\n        rep.geo.traverse((object) => {\r\n          if (object instanceof Mesh) {\r\n            object.material.setValues(values)\r\n\r\n            if (process !== undefined) {\r\n              process(object)\r\n            }\r\n\r\n            object.material.needsUpdate = true\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  setUberOptions(values) {\r\n    for (let i = 0, n = this._reprList.length; i < n; ++i) {\r\n      const rep = this._reprList[i]\r\n      rep.material.setUberOptions(values)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Build selector that contains all atoms within given distance from group of atoms\r\n   * @param {Selector} selector - selector describing source group of atoms\r\n   * @param {number} radius - distance\r\n   * @returns {Selector} selector describing result group of atoms\r\n   */\r\n  within(selector, radius) {\r\n    const vw = this._complex.getVoxelWorld()\r\n    if (vw === null) {\r\n      return false\r\n    }\r\n\r\n    // mark atoms of the group as selected\r\n    const selectionMask = 1 << this._selectionBit\r\n    this._complex.markAtoms(selector, selectionMask)\r\n\r\n    // mark all atoms within distance as selected\r\n    if (vw) {\r\n      vw.forEachAtomWithinDistFromMasked(\r\n        this._complex,\r\n        selectionMask,\r\n        Number(radius),\r\n        (atom) => {\r\n          atom.mask |= selectionMask\r\n        }\r\n      )\r\n    }\r\n\r\n    // update selection count\r\n    this._selectionCount = this._complex.countAtomsByMask(selectionMask)\r\n\r\n    // update secondary structure mask\r\n    this._complex.updateStructuresMask()\r\n\r\n    return this.buildSelectorFromMask(selectionMask)\r\n  }\r\n}\r\n// 32 bits = 30 bits for reps + 1 for selection + 1 for selection expansion\r\nComplexVisual.NUM_REPRESENTATION_BITS = 30\r\n\r\nexport default ComplexVisual\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\nimport vertexVolumeFaces from './VolumeFaces.vert'\r\nimport fragmentVolumeFaces from './VolumeFaces.frag'\r\nimport vertexVolume from './Volume.vert'\r\nimport fragmentVolume from './Volume.frag'\r\nimport vertexFarPlane from './VolumeFarPlane.vert'\r\nimport fragmentFarPlane from './VolumeFarPlane.frag'\r\nimport settings from '../../settings'\r\nimport {\r\n  BackSide,\r\n  FrontSide,\r\n  Matrix4,\r\n  ShaderMaterial,\r\n  UniformsUtils,\r\n  Vector2,\r\n  Vector3\r\n} from 'three'\r\n\r\nconst volumeUniforms = UniformsUtils.merge([\r\n  {\r\n    volumeDim: { type: 'v3', value: new Vector3(512, 512, 512) },\r\n    tileTex: { type: 't', value: null },\r\n    tileTexSize: { type: 'v2', value: new Vector2(512, 512) },\r\n    tileStride: { type: 'v2', value: new Vector2(512, 512) },\r\n\r\n    boxAngles: { type: 'v3', value: new Vector3(1, 1, 1) },\r\n    delta: { type: 'v3', value: new Vector3(0, 0, 0) },\r\n\r\n    _isoLevel0: { type: 'v2', value: new Vector3(0.5, 0.75, 1.0) },\r\n    _flipV: { type: 'f', value: 0.0 },\r\n    _BFLeft: { type: 't', value: null },\r\n    _BFRight: { type: 't', value: null },\r\n    _FFLeft: { type: 't', value: null },\r\n    _FFRight: { type: 't', value: null },\r\n    _WFFLeft: { type: 't', value: null },\r\n    _WFFRight: { type: 't', value: null }\r\n  }\r\n])\r\n\r\nfunction overrideUniforms(params, defUniforms) {\r\n  const uniforms = UniformsUtils.clone(defUniforms)\r\n  for (const p in params) {\r\n    if (uniforms.hasOwnProperty(p)) {\r\n      uniforms[p].value = params[p]\r\n    }\r\n  }\r\n  return uniforms\r\n}\r\n\r\nfunction facesPosMaterialParams(params, sideType) {\r\n  return {\r\n    uniforms: overrideUniforms(params, {}),\r\n    vertexShader: vertexVolumeFaces,\r\n    fragmentShader: fragmentVolumeFaces,\r\n    transparent: false,\r\n    depthTest: false,\r\n    depthWrite: false,\r\n    side: sideType\r\n  }\r\n}\r\n\r\nclass BackFacePosMaterial extends ShaderMaterial {\r\n  constructor(params) {\r\n    const backFaceParams = facesPosMaterialParams(params, BackSide)\r\n    super(backFaceParams)\r\n  }\r\n}\r\n\r\nclass ShaderParams {\r\n  constructor(params, uniforms, vertexShader, fragmentShader) {\r\n    this.uniforms = overrideUniforms(params, uniforms)\r\n    this.vertexShader = vertexShader\r\n    this.fragmentShader = fragmentShader\r\n    this.transparent = false\r\n    this.depthTest = false\r\n    this.depthWrite = false\r\n    this.side = FrontSide\r\n  }\r\n}\r\n\r\nclass BackFacePosMaterialFarPlane extends ShaderMaterial {\r\n  constructor(params) {\r\n    const matUniforms = UniformsUtils.merge([\r\n      {\r\n        aspectRatio: { type: 'f', value: 0.0 },\r\n        farZ: { type: 'f', value: 0.0 },\r\n        tanHalfFOV: { type: 'f', value: 0.0 },\r\n        matWorld2Volume: { type: '4fv', value: new Matrix4() }\r\n      }\r\n    ])\r\n\r\n    const shaderParams = new ShaderParams(\r\n      params,\r\n      matUniforms,\r\n      vertexFarPlane,\r\n      fragmentFarPlane\r\n    )\r\n    super(shaderParams)\r\n  }\r\n}\r\n\r\nclass FrontFacePosMaterial extends ShaderMaterial {\r\n  constructor(params) {\r\n    const frontFaceParams = facesPosMaterialParams(params, FrontSide)\r\n    super(frontFaceParams)\r\n  }\r\n}\r\n\r\nclass VolumeMaterial extends ShaderMaterial {\r\n  constructor(params) {\r\n    const shaderParams = new ShaderParams(\r\n      params,\r\n      volumeUniforms,\r\n      vertexVolume,\r\n      fragmentVolume\r\n    )\r\n    shaderParams.transparent = true\r\n    shaderParams.depthTest = true\r\n\r\n    super(shaderParams)\r\n    this.updateDefines()\r\n  }\r\n\r\n  updateDefines() {\r\n    this.defines = {\r\n      ISO_MODE: settings.now.modes.VD.isoMode,\r\n      STEPS_COUNT:\r\n        settings.now.modes.VD.polyComplexity[settings.now.resolution] * 100\r\n    }\r\n    this.needsUpdate = true\r\n  }\r\n}\r\n\r\nexport default {\r\n  BackFacePosMaterial,\r\n  BackFacePosMaterialFarPlane,\r\n  FrontFacePosMaterial,\r\n  VolumeMaterial\r\n}\r\n",
		"import VolumeMaterial from './shaders/VolumeMaterial'\r\nimport settings from '../settings'\r\nimport {\r\n  BufferAttribute,\r\n  BufferGeometry,\r\n  Matrix4,\r\n  Mesh,\r\n  Plane,\r\n  Vector3,\r\n  Vector4\r\n} from 'three'\r\n\r\nclass VolumeMesh extends Mesh {\r\n  volumeInfo = {} // data for noise filter\r\n\r\n  constructor() {\r\n    const geo = new BufferGeometry()\r\n    super(geo)\r\n    this.clipPlane = new Plane()\r\n    const size = new Vector3(0.5, 0.5, 0.5)\r\n    this.size = size\r\n\r\n    this.cullFlag = [\r\n      true,\r\n      true,\r\n      true,\r\n      true,\r\n      true,\r\n      true,\r\n      true,\r\n      true,\r\n      false,\r\n      false,\r\n      false,\r\n      false,\r\n      false,\r\n      false\r\n    ]\r\n\r\n    this.faces = [\r\n      { indices: [], norm: new Vector3(0, 0, -1) },\r\n      { indices: [], norm: new Vector3(0, 0, 1) },\r\n      { indices: [], norm: new Vector3(0, -1, 0) },\r\n      { indices: [], norm: new Vector3(0, 1, 0) },\r\n      { indices: [], norm: new Vector3(-1, 0, 0) },\r\n      { indices: [], norm: new Vector3(1, 0, 0) },\r\n      { indices: [], norm: new Vector3(0, 0, 0) }\r\n    ]\r\n\r\n    this.vertices = [\r\n      new Vector3(-size.x, -size.y, -size.z),\r\n      new Vector3(-size.x, size.y, -size.z),\r\n      new Vector3(size.x, -size.y, -size.z),\r\n      new Vector3(size.x, size.y, -size.z),\r\n      new Vector3(-size.x, -size.y, size.z),\r\n      new Vector3(-size.x, size.y, size.z),\r\n      new Vector3(size.x, -size.y, size.z),\r\n      new Vector3(size.x, size.y, size.z),\r\n      new Vector3(0.0, 0.0, 0.0), // Placeholder for section\r\n      new Vector3(0.0, 0.0, 0.0),\r\n      new Vector3(0.0, 0.0, 0.0),\r\n      new Vector3(0.0, 0.0, 0.0),\r\n      new Vector3(0.0, 0.0, 0.0),\r\n      new Vector3(0.0, 0.0, 0.0)\r\n    ]\r\n\r\n    geo.setAttribute(\r\n      'position',\r\n      new BufferAttribute(new Float32Array(this.vertices.length * 3), 3)\r\n    )\r\n\r\n    this.name = 'VolumeMesh'\r\n  }\r\n\r\n  static _corners = [\r\n    // x, y, z, edge1, edge2, edge3\r\n    [-1, -1, -1, 0, 4, 8],\r\n    [1, -1, -1, 0, 5, 9],\r\n    [1, 1, -1, 1, 5, 10],\r\n    [-1, 1, -1, 1, 4, 11],\r\n    [-1, -1, 1, 2, 6, 8],\r\n    [1, -1, 1, 2, 7, 9],\r\n    [1, 1, 1, 3, 7, 10],\r\n    [-1, 1, 1, 3, 6, 11]\r\n  ]\r\n\r\n  static _edges = [\r\n    // corner1, corner2, center_x, center_y, center_z\r\n    [0, 1, 0, -1, -1],\r\n    [2, 3, 0, 1, -1],\r\n    [4, 5, 0, -1, 1],\r\n    [6, 7, 0, 1, 1],\r\n    [0, 3, -1, 0, -1],\r\n    [1, 2, 1, 0, -1],\r\n    [4, 7, -1, 0, 1],\r\n    [5, 6, 1, 0, 1],\r\n    [0, 4, -1, -1, 0],\r\n    [1, 5, 1, -1, 0],\r\n    [2, 6, -1, 1, 0],\r\n    [3, 7, 1, 1, 0]\r\n  ]\r\n\r\n  static _edgeIntersections = (function () {\r\n    const edgeIntersections = []\r\n    for (let j = 0; j < 12; ++j) {\r\n      edgeIntersections.push(new Vector3())\r\n    }\r\n    return edgeIntersections\r\n  })()\r\n\r\n  _updateVertices() {\r\n    // Algorithm:\r\n    // 1. Get plane parameters\r\n    // 2. Compute culling flags for all vertices\r\n    // 3. If intersection occurs => compute from 3 to 6 intersection points\r\n    const corners = VolumeMesh._corners\r\n    const edges = VolumeMesh._edges\r\n    const edgeIntersections = VolumeMesh._edgeIntersections\r\n\r\n    let i\r\n\r\n    const norm = this.clipPlane.normal\r\n    const D = this.clipPlane.constant\r\n\r\n    const vert = this.vertices\r\n    const { size } = this\r\n\r\n    const cornerMark = [0, 0, 0, 0, 0, 0, 0, 0]\r\n    const edgeMark = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n\r\n    const curEdge = new Vector3()\r\n    let curEdgeInter = null\r\n\r\n    function CheckX() {\r\n      if (norm.x === 0) return 0\r\n      const x = -(norm.dot(curEdge) + D) / norm.x\r\n      if (-size.x <= x && x <= size.x) {\r\n        curEdgeInter.set(x, curEdge.y, curEdge.z)\r\n        if (x === size.x) return 2\r\n        if (x === -size.x) return -2\r\n        return 1\r\n      }\r\n      return 0\r\n    }\r\n\r\n    function CheckY() {\r\n      if (norm.y === 0) return 0\r\n      const y = -(norm.dot(curEdge) + D) / norm.y\r\n      if (-size.y <= y && y <= size.y) {\r\n        curEdgeInter.set(curEdge.x, y, curEdge.z)\r\n        if (y === size.y) return 2\r\n        if (y === -size.y) return -2\r\n        return 1\r\n      }\r\n      return 0\r\n    }\r\n\r\n    function CheckZ() {\r\n      if (norm.z === 0) return 0\r\n      const z = -(norm.dot(curEdge) + D) / norm.z\r\n      if (-size.z <= z && z <= size.z) {\r\n        curEdgeInter.set(curEdge.x, curEdge.y, z)\r\n        if (z === size.z) return 2\r\n        if (z === -size.z) return -2\r\n        return 1\r\n      }\r\n      return 0\r\n    }\r\n\r\n    // for each edge\r\n    for (let curEdgeIdx = 0; curEdgeIdx < 12; ++curEdgeIdx) {\r\n      const curEdgeSource = edges[curEdgeIdx]\r\n      curEdgeInter = edgeIntersections[curEdgeIdx]\r\n\r\n      curEdge.set(curEdgeSource[2], curEdgeSource[3], curEdgeSource[4])\r\n      curEdge.multiply(size)\r\n\r\n      // calculate intersection point\r\n      let flag = 0\r\n      if (curEdgeSource[2] === 0) flag = CheckX()\r\n      if (curEdgeSource[3] === 0) flag = CheckY()\r\n      if (curEdgeSource[4] === 0) flag = CheckZ()\r\n\r\n      // mark corresponding corner (if plane cuts through one)\r\n      if (flag === -2) {\r\n        cornerMark[curEdgeSource[0]] = 1\r\n      } else if (flag === 2) {\r\n        cornerMark[curEdgeSource[1]] = 1\r\n      } else if (flag === 0) {\r\n        // edge is not intersected by the plane (doesn't produce a vertex)\r\n        edgeMark[curEdgeIdx] = 0\r\n      }\r\n    }\r\n\r\n    const face = {\r\n      indices: [],\r\n      norm: norm.clone().negate()\r\n    }\r\n\r\n    let nextVertex = 8\r\n\r\n    // for each marked corner\r\n    for (i = 0; i < 8; ++i) {\r\n      if (cornerMark[i] === 1) {\r\n        // add corner as vertex to the face\r\n        vert[nextVertex]\r\n          .set(corners[i][0], corners[i][1], corners[i][2])\r\n          .multiply(size)\r\n        face.indices.push(nextVertex++)\r\n        // skip adjacent edges\r\n        edgeMark[corners[i][3]] = 0\r\n        edgeMark[corners[i][4]] = 0\r\n        edgeMark[corners[i][5]] = 0\r\n      }\r\n    }\r\n\r\n    // for each edge that has internal intersection\r\n    for (i = 0; i < 12; ++i) {\r\n      if (edgeMark[i] === 1) {\r\n        // add intersection point as vertex to the face\r\n        vert[nextVertex].copy(edgeIntersections[i])\r\n        face.indices.push(nextVertex++)\r\n      }\r\n    }\r\n\r\n    this.faces[6] = face\r\n\r\n    const diff = new Vector3()\r\n    const coplanarPoint = new Vector3()\r\n    this.clipPlane.coplanarPoint(coplanarPoint)\r\n    for (i = 0; i < vert.length; ++i) {\r\n      this.cullFlag[i] = false\r\n      if (i < 8) {\r\n        // corners should be culled by clipping plane\r\n        diff.subVectors(vert[i], coplanarPoint)\r\n        this.cullFlag[i] = norm.dot(diff) >= 0.0\r\n      } else if (i < 8 + face.indices.length) {\r\n        // cross section vertices don't get culled\r\n        this.cullFlag[i] = true\r\n      }\r\n    }\r\n\r\n    // write data to vertex buffer\r\n    const positions = this.geometry.getAttribute('position')\r\n    let idx = 0\r\n    for (i = 0; i < vert.length; ++i) {\r\n      positions.array[idx++] = vert[i].x\r\n      positions.array[idx++] = vert[i].y\r\n      positions.array[idx++] = vert[i].z\r\n    }\r\n    positions.needsUpdate = true\r\n  }\r\n\r\n  _collectVertices(face, filter) {\r\n    let i\r\n    const vert = this.vertices\r\n    face.indices = []\r\n    for (i = 0; i < vert.length; ++i) {\r\n      if (this.cullFlag[i] && filter(vert[i])) {\r\n        face.indices.push(i)\r\n      }\r\n    }\r\n  }\r\n\r\n  _sortIndices(face, right) {\r\n    let i\r\n    let j\r\n    const vert = this.vertices\r\n    const angle = []\r\n\r\n    const dir = new Vector3()\r\n    for (i = 1; i < face.indices.length; ++i) {\r\n      dir.subVectors(vert[face.indices[i]], vert[face.indices[0]])\r\n      dir.normalize()\r\n      dir.cross(right)\r\n      dir.negate()\r\n      angle[i] = face.norm.dot(dir)\r\n    }\r\n\r\n    // Exchange sort\r\n    for (i = 1; i < face.indices.length - 1; ++i) {\r\n      for (j = i + 1; j < face.indices.length; ++j) {\r\n        if (angle[j] < angle[i]) {\r\n          // swap\r\n          let t = angle[i]\r\n          angle[i] = angle[j]\r\n          angle[j] = t\r\n\r\n          t = face.indices[i]\r\n          face.indices[i] = face.indices[j]\r\n          face.indices[j] = t\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _updateIndices() {\r\n    // Algorithm:\r\n    // 1. Get plane vertices (from 3 to 6 vertices)\r\n    // 2. Get \"right\" vector in plane\r\n    // 3. Sort vertices using Graham-like method\r\n    // 4. Create indices\r\n\r\n    let i\r\n    let faceIdx\r\n    let face\r\n    const vert = this.vertices\r\n    const { size } = this\r\n\r\n    this._collectVertices(this.faces[0], (vertex) => vertex.z === -size.z)\r\n    this._collectVertices(this.faces[1], (vertex) => vertex.z === size.z)\r\n    this._collectVertices(this.faces[2], (vertex) => vertex.y === -size.y)\r\n    this._collectVertices(this.faces[3], (vertex) => vertex.y === size.y)\r\n    this._collectVertices(this.faces[4], (vertex) => vertex.x === -size.x)\r\n    this._collectVertices(this.faces[5], (vertex) => vertex.x === size.x)\r\n\r\n    const vCenter = new Vector3()\r\n    const vRight = new Vector3()\r\n    const vDir = new Vector3()\r\n\r\n    for (faceIdx = 0; faceIdx < this.faces.length; ++faceIdx) {\r\n      face = this.faces[faceIdx]\r\n\r\n      if (face.indices.length === 0) continue\r\n\r\n      vCenter.set(0, 0, 0)\r\n      for (i = 0; i < face.indices.length; ++i) {\r\n        vCenter.add(vert[face.indices[i]])\r\n      }\r\n      vCenter.multiplyScalar(1.0 / face.indices.length)\r\n      vRight.subVectors(vert[face.indices[0]], vCenter)\r\n      vRight.normalize()\r\n\r\n      const rightProj = []\r\n      for (i = 0; i < face.indices.length; ++i) {\r\n        vDir.subVectors(vert[face.indices[i]], vCenter)\r\n        rightProj[i] = vDir.dot(vRight)\r\n      }\r\n      for (i = 1; i < face.indices.length; ++i) {\r\n        if (rightProj[i] < rightProj[0]) {\r\n          // swap\r\n          let t = rightProj[0]\r\n          rightProj[0] = rightProj[i]\r\n          rightProj[i] = t\r\n          ;[t] = face.indices\r\n          face.indices[0] = face.indices[i]\r\n          face.indices[i] = t\r\n        }\r\n      }\r\n\r\n      this._sortIndices(face, vRight)\r\n    }\r\n\r\n    let numIndices = 0\r\n    for (faceIdx = 0; faceIdx < this.faces.length; ++faceIdx) {\r\n      face = this.faces[faceIdx]\r\n      if (face.indices.length >= 3) {\r\n        numIndices += 3 * (face.indices.length - 2)\r\n      }\r\n    }\r\n    let offset = 0\r\n    const indices = new Uint16Array(numIndices)\r\n    for (faceIdx = 0; faceIdx < this.faces.length; ++faceIdx) {\r\n      face = this.faces[faceIdx]\r\n      for (i = 0; i < face.indices.length - 2; ++i) {\r\n        indices[offset] = face.indices[0] // eslint-disable-line prefer-destructuring\r\n        indices[offset + 1] = face.indices[i + 1]\r\n        indices[offset + 2] = face.indices[i + 2]\r\n        offset += 3\r\n      }\r\n    }\r\n\r\n    this.geometry.setIndex(new BufferAttribute(indices, 1))\r\n  }\r\n\r\n  setDataSource(dataSource) {\r\n    const vm = new VolumeMaterial.VolumeMaterial()\r\n    const dim = dataSource.getDimensions()\r\n    const stride = dataSource.getTiledTextureStride()\r\n    const texture = dataSource.buildTiledTexture()\r\n    const bbox = dataSource.getBox()\r\n    vm.uniforms.volumeDim.value.set(dim[0], dim[1], dim[2])\r\n    vm.uniforms.tileTex.value = texture\r\n    vm.uniforms.tileTexSize.value.set(texture.image.width, texture.image.height)\r\n    vm.uniforms.tileStride.value.set(stride[0], stride[1])\r\n    Object.assign(this.volumeInfo, dataSource.getVolumeInfo())\r\n\r\n    const volInfo = this.volumeInfo\r\n    vm.uniforms.delta.value.copy(volInfo.delta)\r\n    vm.uniforms.boxAngles.value.set(\r\n      volInfo.obtuseAngle[0],\r\n      volInfo.obtuseAngle[1],\r\n      volInfo.obtuseAngle[2]\r\n    )\r\n\r\n    this.material = vm\r\n\r\n    bbox.getSize(this.scale)\r\n    bbox.getCenter(this.position)\r\n  }\r\n\r\n  _updateIsoLevel() {\r\n    const { kSigma, kSigmaMed, kSigmaMax } = settings.now.modes.VD\r\n    const volInfo = this.volumeInfo\r\n    const mean = volInfo.dmean - volInfo.dmin\r\n    const span = volInfo.dmax - volInfo.dmin\r\n    const level = (k) => (mean + k * volInfo.sd) / span\r\n    this.material.uniforms._isoLevel0.value.set(\r\n      level(kSigma),\r\n      level(kSigmaMed),\r\n      level(kSigmaMax)\r\n    )\r\n  }\r\n\r\n  static _nearClipPlaneOffset = 0.2\r\n\r\n  static _pos = new Vector3()\r\n\r\n  static _norm = new Vector3()\r\n\r\n  static _norm4D = new Vector4()\r\n\r\n  static _matrixWorldToLocal = new Matrix4()\r\n\r\n  static _clipPlane = new Plane()\r\n\r\n  rebuild(camera) {\r\n    const nearClipPlaneOffset = VolumeMesh._nearClipPlaneOffset\r\n    const pos = VolumeMesh._pos\r\n    const norm = VolumeMesh._norm\r\n    const norm4D = VolumeMesh._norm4D\r\n    const matrixWorldToLocal = VolumeMesh._matrixWorldToLocal\r\n    const clipPlane = VolumeMesh._clipPlane\r\n\r\n    this._updateIsoLevel()\r\n\r\n    // get clip plane in local space\r\n    camera.getWorldDirection(norm)\r\n    camera.getWorldPosition(pos)\r\n    pos.addScaledVector(norm, camera.near + nearClipPlaneOffset)\r\n\r\n    // transform pos to local CS\r\n    matrixWorldToLocal.copy(this.matrixWorld).invert()\r\n    pos.applyMatrix4(matrixWorldToLocal)\r\n\r\n    // transform norm to local CS\r\n    norm4D.set(norm.x, norm.y, norm.z, 0.0) // NOTE: use homogeneous norm for proper transformation\r\n    norm4D.applyMatrix4(matrixWorldToLocal)\r\n    norm.copy(norm4D)\r\n    norm.normalize()\r\n\r\n    clipPlane.setFromNormalAndCoplanarPoint(norm, pos)\r\n\r\n    if (!this.clipPlane.equals(clipPlane)) {\r\n      this.clipPlane = clipPlane.clone()\r\n      this._updateVertices()\r\n      this._updateIndices()\r\n    }\r\n  }\r\n}\r\n\r\nexport default VolumeMesh\r\n",
		"import gfxutils from './gfxutils'\r\nimport {\r\n  BufferAttribute,\r\n  BufferGeometry,\r\n  LineBasicMaterial,\r\n  LineSegments,\r\n  Vector3\r\n} from 'three'\r\n\r\nfunction _flattenArray(input) {\r\n  const n = input.length\r\n  const output = new Float32Array(n * 3)\r\n  for (let i = 0; i < n; ++i) {\r\n    const j = 3 * i\r\n    const v = input[i]\r\n    output[j] = v.x\r\n    output[j + 1] = v.y\r\n    output[j + 2] = v.z\r\n  }\r\n  return output\r\n}\r\n\r\nclass VolumeBounds {\r\n  static _projectionTable = {\r\n    // corresponds between (origin axes and angles between them) and between saving vector coordinates\r\n    XY: ['x', 2],\r\n    XZ: ['y', 1],\r\n    YZ: ['z', 0]\r\n  }\r\n\r\n  constructor(bBox, volInfo) {\r\n    const { delta } = volInfo // {x: XY, y : XZ, z: YZ}\r\n    const { obtuseAngle } = volInfo // 1 - obtuse, 0 - acute\r\n\r\n    const bSize = new Vector3()\r\n    bBox.getSize(bSize)\r\n    bSize.multiplyScalar(0.5)\r\n\r\n    const offsetVert = this._getBaseVertices(delta, obtuseAngle)\r\n\r\n    const geometry = new BufferGeometry()\r\n    const vertices = []\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      vertices.push(offsetVert[i].clone().multiply(bSize))\r\n      vertices.push(offsetVert[(i + 1) % 4].clone().multiply(bSize))\r\n    }\r\n    const translation = new Vector3(2 * bSize.x * (1 - delta.x - delta.y), 0, 0)\r\n    for (let i = 0; i < 8; i++) {\r\n      vertices.push(vertices[i].clone().add(translation))\r\n    }\r\n    for (let i = 0; i < 4; i++) {\r\n      vertices.push(vertices[i * 2].clone())\r\n      vertices.push(vertices[i * 2 + 8].clone())\r\n    }\r\n    const center = new Vector3()\r\n    bBox.getCenter(center)\r\n    vertices.forEach((vertex) => vertex.add(center)) // pivot shift\r\n\r\n    const flatVertices = _flattenArray(vertices)\r\n    geometry.setAttribute('position', new BufferAttribute(flatVertices, 3))\r\n\r\n    this._lines = new LineSegments(\r\n      geometry,\r\n      new LineBasicMaterial({ color: 0xffffff })\r\n    )\r\n    this._lines.layers.set(gfxutils.LAYERS.VOLUME)\r\n  }\r\n\r\n  // Set one edge (4 points) of frame, from which with parallel transfer  the rest of the frame points can be obtained\r\n  _getBaseVertices(delta, obtuseAngle) {\r\n    const projTable = VolumeBounds._projectionTable\r\n\r\n    const proj = (index, inv) => {\r\n      // tricky function to take account of projections: their position(related to box) and sign\r\n      const currDelta = delta[projTable[index][0]]\r\n      const angleValue =\r\n        -0.5 * (inv - 1) + inv * obtuseAngle[projTable[index][1]] // inv = 1: alpha; inv = -1: 1 - alpha\r\n      return angleValue * currDelta\r\n    }\r\n\r\n    const offsetVert = [\r\n      new Vector3(\r\n        -1 + 2 * (proj('XZ', 1) + proj('XY', 1)),\r\n        -1 + 2 * proj('YZ', 1),\r\n        -1\r\n      ),\r\n      new Vector3(\r\n        -1 + 2 * (proj('XZ', -1) + proj('XY', 1)),\r\n        -1 + 2 * proj('YZ', -1),\r\n        1\r\n      ),\r\n      new Vector3(\r\n        -1 + 2 * (proj('XZ', -1) + proj('XY', -1)),\r\n        1 - 2 * proj('YZ', 1),\r\n        1\r\n      ),\r\n      new Vector3(\r\n        -1 + 2 * (proj('XZ', 1) + proj('XY', -1)),\r\n        1 - 2 * proj('YZ', -1),\r\n        -1\r\n      )\r\n    ]\r\n\r\n    return offsetVert\r\n  }\r\n\r\n  getMesh() {\r\n    return this._lines\r\n  }\r\n}\r\n\r\nexport default VolumeBounds\r\n",
		"import VolumeMaterial from './shaders/VolumeMaterial'\r\nimport meshes from './meshes/meshes'\r\nimport gfxutils from './gfxutils'\r\nimport {\r\n  BufferAttribute,\r\n  BufferGeometry,\r\n  MathUtils,\r\n  Matrix4,\r\n  Vector4\r\n} from 'three'\r\n\r\n// Thes geometric far plane is required for correct filling in the BFTexture in case, when far plane cuts the volume\r\n// cube. In cut place of cube there is no correct data in BFTexture and volume rendering integral is calculated\r\n// with errors.\r\n// Far plane cuts the cube in case of large volume scale (zoom), because farplane doesn't change\r\nclass VolumeFarPlane {\r\n  // create plane with unit corners coords (for future rescale in vshader according to camera properties)\r\n  constructor(volume, width, height) {\r\n    const planeGeo = this._initPlaneGeo(width, height)\r\n\r\n    const mat = new VolumeMaterial.BackFacePosMaterialFarPlane()\r\n    this._plane = new meshes.Mesh(planeGeo, mat)\r\n    this._plane.frustumCulled = false\r\n    this._plane.doubleSided = true\r\n    const matWorldToVolume = new Matrix4()\r\n\r\n    this._plane._onBeforeRender = function (\r\n      _renderer,\r\n      _scene,\r\n      camera,\r\n      _geometry,\r\n      _material,\r\n      _group\r\n    ) {\r\n      const { material } = this\r\n      if (!volume || !material) {\r\n        return\r\n      }\r\n\r\n      // count point in world at farplane place\r\n      const planeCamPos = new Vector4(0, 0, -(camera.far - 0.1), 1)\r\n      planeCamPos.applyMatrix4(camera.matrixWorld)\r\n\r\n      // recalc matrices to make plane be placed as farplane in the World relative to camera\r\n      this.matrix.identity()\r\n      this.matrix.makeTranslation(planeCamPos.x, planeCamPos.y, planeCamPos.z)\r\n      this.matrixWorld.copy(this.matrix)\r\n      this.modelViewMatrix.multiplyMatrices(\r\n        camera.matrixWorldInverse,\r\n        this.matrixWorld\r\n      )\r\n      this.normalMatrix.getNormalMatrix(this.modelViewMatrix)\r\n\r\n      // build worldToVolume matrix to transform plane into volumeCS (volumeCS coords are written to BackFaceTexture)\r\n      const volumeMatrix = volume.matrixWorld\r\n      matWorldToVolume.copy(volumeMatrix).invert()\r\n\r\n      // update material props\r\n      material.uniforms.aspectRatio.value = camera.aspect\r\n      material.uniforms.farZ.value = camera.far\r\n      material.uniforms.tanHalfFOV.value = Math.tan(\r\n        MathUtils.DEG2RAD * 0.5 * camera.fov\r\n      )\r\n      material.uniforms.matWorld2Volume.value = matWorldToVolume\r\n    }\r\n\r\n    // set it to special layer to draw only into BFTexture\r\n    this._plane.layers.set(gfxutils.LAYERS.VOLUME_BFPLANE)\r\n  }\r\n\r\n  _initPlaneGeo(width, height) {\r\n    const planeGeo = new BufferGeometry()\r\n\r\n    width = width || 1\r\n    height = height || 1\r\n\r\n    const vertices = new Float32Array([\r\n      -0.5 * width,\r\n      0.5 * height,\r\n      0,\r\n      0.5 * width,\r\n      0.5 * height,\r\n      0,\r\n      -0.5 * width,\r\n      -0.5 * height,\r\n      0,\r\n      0.5 * width,\r\n      -0.5 * height,\r\n      0\r\n    ])\r\n\r\n    planeGeo.setAttribute('position', new BufferAttribute(vertices, 3))\r\n    planeGeo.setIndex([0, 2, 1, 2, 3, 1])\r\n\r\n    return planeGeo\r\n  }\r\n\r\n  getMesh() {\r\n    return this._plane\r\n  }\r\n}\r\n\r\nexport default VolumeFarPlane\r\n",
		"import VolumeMesh from './gfx/VolumeMesh'\r\nimport VolumeBounds from './gfx/VolumeBounds'\r\nimport VolumeFarPlane from './gfx/VolumeFarPlane'\r\nimport Visual from './Visual'\r\nimport settings from './settings'\r\nimport { Sphere } from 'three'\r\n\r\nclass VolumeVisual extends Visual {\r\n  constructor(name, dataSource) {\r\n    super(name, dataSource)\r\n    this._mesh = new VolumeMesh()\r\n    this._mesh.setDataSource(dataSource)\r\n    this.add(this._mesh)\r\n\r\n    this._frame = new VolumeBounds(\r\n      this.getBoundaries().boundingBox,\r\n      this._mesh.volumeInfo\r\n    )\r\n    this.add(this._frame.getMesh())\r\n    this.showFrame(settings.now.modes.VD.frame)\r\n\r\n    this._farPlane = new VolumeFarPlane(this._mesh, 2, 2)\r\n    this.add(this._farPlane.getMesh())\r\n  }\r\n\r\n  getBoundaries() {\r\n    const box = this._dataSource.getBox()\r\n    const sphere = new Sphere()\r\n    box.getBoundingSphere(sphere)\r\n\r\n    return {\r\n      boundingBox: box,\r\n      boundingSphere: sphere\r\n    }\r\n  }\r\n\r\n  getMesh() {\r\n    return this._mesh\r\n  }\r\n\r\n  showFrame(needShow) {\r\n    this._frame.getMesh().material.visible = needShow\r\n  }\r\n}\r\n\r\nexport default VolumeVisual\r\n",
		"import EntityList from '../../utils/EntityList'\r\n\r\n/**\r\n * A list of available loaders.\r\n * @extends EntityList\r\n */\r\nclass LoaderList extends EntityList {\r\n  /**\r\n   * Create a list of loaders.\r\n   * The loaders are indexed by supported source types (`.types` property of a Loader\r\n   * subclass).\r\n   * The loaders can be retrieved later by matching against specs (see {@link LoaderList#find}).\r\n   *\r\n   * @param {!Array<function(new:Loader)>=} someLoaders A list of {@link Loader} subclasses to\r\n   *   automatically register at creation time.\r\n   * @see LoaderList#register\r\n   */\r\n  constructor(someLoaders = []) {\r\n    super(someLoaders, ['types'])\r\n  }\r\n\r\n  /**\r\n   * Find a suitable loader for a source type.\r\n   *\r\n   * @param {Object} specs Loader specifications.\r\n   * @param {string=} specs.type Supported source type.\r\n   * @param {*=} specs.source Source to load from.\r\n   */\r\n  find(specs) {\r\n    let list = []\r\n    if (specs.type) {\r\n      list = this._dict.types[specs.type.toLowerCase()] || []\r\n    } else if (specs.source) {\r\n      return this._list.filter(\r\n        (SomeLoader) =>\r\n          SomeLoader.canProbablyLoad && SomeLoader.canProbablyLoad(specs.source)\r\n      )\r\n    }\r\n    return [...list]\r\n  }\r\n}\r\n\r\nexport default LoaderList\r\n",
		"import EventDispatcher from '../../utils/EventDispatcher'\r\nimport makeContextDependent from '../../utils/makeContextDependent'\r\n\r\nexport default class Loader extends EventDispatcher {\r\n  constructor(source, options) {\r\n    super()\r\n    this._source = source\r\n    this._options = options || {}\r\n    this._abort = false\r\n    this._agent = null\r\n  }\r\n\r\n  load() {\r\n    return Promise.reject(\r\n      new Error('Loading from this source is not implemented')\r\n    )\r\n  }\r\n\r\n  abort() {\r\n    this._abort = true\r\n    if (this._agent) {\r\n      this._agent.abort()\r\n    }\r\n  }\r\n\r\n  static extractName(_source) {\r\n    return undefined\r\n  }\r\n}\r\n\r\nmakeContextDependent(Loader.prototype)\r\n",
		"import Loader from './Loader'\r\n\r\nexport default class FileLoader extends Loader {\r\n  constructor(source, options) {\r\n    super(source, options)\r\n\r\n    options = this._options\r\n    this._binary = options.binary === true\r\n  }\r\n\r\n  load() {\r\n    return new Promise((resolve, reject) => {\r\n      if (this._abort) {\r\n        throw new Error('Loading aborted')\r\n      }\r\n\r\n      const blob = this._source\r\n      const reader = (this._agent = new FileReader())\r\n\r\n      reader.addEventListener('load', () => {\r\n        resolve(reader.result)\r\n      })\r\n      reader.addEventListener('error', () => {\r\n        reject(reader.error)\r\n      })\r\n      reader.addEventListener('abort', () => {\r\n        reject(new Error('Loading aborted'))\r\n      })\r\n      reader.addEventListener('progress', (event) => {\r\n        this.dispatchEvent(event)\r\n      })\r\n\r\n      if (this._binary) {\r\n        reader.readAsArrayBuffer(blob)\r\n      } else {\r\n        reader.readAsText(blob)\r\n      }\r\n    })\r\n  }\r\n\r\n  static canProbablyLoad(source) {\r\n    return (File && source instanceof File) || (Blob && source instanceof Blob)\r\n  }\r\n\r\n  static extractName(source) {\r\n    return source && source.name\r\n  }\r\n}\r\n\r\nFileLoader.types = ['file', 'blob']\r\n",
		"import { isString } from 'lodash'\r\nimport Loader from './Loader'\r\n\r\n// we don't need to detect all kinds of URLs, just the evident ones\r\nconst urlStartRegexp = /^(https?|ftp):\\/\\//i\r\n\r\nexport default class XHRLoader extends Loader {\r\n  constructor(source, options) {\r\n    super(source, options)\r\n\r\n    options = this._options\r\n    this._binary = options.binary === true\r\n  }\r\n\r\n  load() {\r\n    return new Promise((resolve, reject) => {\r\n      if (this._abort) {\r\n        throw new Error('Loading aborted')\r\n      }\r\n\r\n      const url = this._source\r\n      const request = (this._agent = new XMLHttpRequest())\r\n\r\n      request.addEventListener('load', () => {\r\n        if (request.status === 200) {\r\n          resolve(request.response)\r\n        } else {\r\n          reject(new Error(`HTTP ${request.status} while fetching ${url}`))\r\n        }\r\n      })\r\n      request.addEventListener('error', () => {\r\n        reject(new Error('HTTP request failed'))\r\n      })\r\n      request.addEventListener('abort', () => {\r\n        reject(new Error('Loading aborted'))\r\n      })\r\n      request.addEventListener('progress', (event) => {\r\n        this.dispatchEvent(event)\r\n      })\r\n\r\n      request.open('GET', url)\r\n      if (this._binary) {\r\n        request.responseType = 'arraybuffer'\r\n      } else {\r\n        request.responseType = 'text'\r\n      }\r\n      request.send()\r\n    })\r\n  }\r\n\r\n  static canProbablyLoad(source) {\r\n    return isString(source) && urlStartRegexp.test(source)\r\n  }\r\n\r\n  static extractName(source) {\r\n    if (source) {\r\n      const last =\r\n        (source.indexOf('?') + 1 ||\r\n          source.lastIndexOf('#') + 1 ||\r\n          source.length + 1) - 1\r\n      return source.slice(source.lastIndexOf('/', last) + 1, last)\r\n    }\r\n    return undefined\r\n  }\r\n}\r\n\r\nXHRLoader.types = ['url']\r\n",
		"import Loader from './Loader'\r\n\r\nexport default class ImmediateLoader extends Loader {\r\n  load() {\r\n    return new Promise((resolve) => {\r\n      if (this._abort) {\r\n        throw new Error('Loading aborted')\r\n      }\r\n      resolve(this._source)\r\n    })\r\n  }\r\n\r\n  static canProbablyLoad(_source) {\r\n    return false\r\n  }\r\n}\r\n\r\nImmediateLoader.types = ['immediate']\r\n",
		"import LoaderList from './loaders/LoaderList'\r\n\r\nimport FileLoader from './loaders/FileLoader'\r\nimport XHRLoader from './loaders/XHRLoader'\r\nimport ImmediateLoader from './loaders/ImmediateLoader'\r\n\r\nexport default new LoaderList([\r\n  // note: order might be important\r\n  FileLoader,\r\n  XHRLoader,\r\n  ImmediateLoader\r\n])\r\n",
		"import EntityList from '../../utils/EntityList'\r\n\r\n/**\r\n * A list of available parsers.\r\n * @extends EntityList\r\n */\r\nclass ParserList extends EntityList {\r\n  /**\r\n   * Create a list of parsers.\r\n   * The parsers are indexed by supported data formats and file extensions (`.formats` and\r\n   * `.extensions` properties of a Parser subclass).\r\n   * The parsers can be retrieved later by matching against specs (see {@link ParserList#find}).\r\n   *\r\n   * @param {!Array<function(new:Parser)>=} someParsers A list of {@link Parser} subclasses to\r\n   *   automatically register at creation time.\r\n   * @see ParserList#register\r\n   */\r\n  constructor(someParsers = []) {\r\n    super(someParsers, ['formats', 'extensions'])\r\n  }\r\n\r\n  /**\r\n   * Find a suitable parser for data.\r\n   *\r\n   * @param {Object} specs Parser specifications.\r\n   * @param {string=} specs.format Supported data format.\r\n   * @param {string=} specs.ext Supported filename extension.\r\n   * @param {*=} specs.data Data to parse.\r\n   */\r\n  find(specs) {\r\n    let list = []\r\n    if (specs.format) {\r\n      list = this._dict.formats[specs.format.toLowerCase()] || []\r\n    } else if (specs.ext) {\r\n      list = this._dict.extensions[specs.ext.toLowerCase()] || []\r\n    }\r\n    // autodetect only if no format is forced\r\n    if (list.length === 0 && !specs.format && specs.data) {\r\n      return this._list.filter(\r\n        (SomeParser) =>\r\n          SomeParser.canProbablyParse && SomeParser.canProbablyParse(specs.data)\r\n      )\r\n    }\r\n    return [...list]\r\n  }\r\n}\r\n\r\nexport default ParserList\r\n",
		"import makeContextDependent from '../../utils/makeContextDependent'\r\n\r\nexport default class Parser {\r\n  constructor(data, options) {\r\n    this._data = data\r\n    this._options = options || {}\r\n    this._abort = false\r\n  }\r\n\r\n  parseSync() {\r\n    throw new Error('Parsing this type of data is not implemented')\r\n  }\r\n\r\n  parse() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        try {\r\n          if (this._abort) {\r\n            return reject(new Error('Parsing aborted'))\r\n          }\r\n          return resolve(this.parseSync())\r\n        } catch (error) {\r\n          return reject(error)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  // only for volume Parsers\r\n  getModel() {\r\n    this.model._parseHeader(this._data)\r\n    return this.model\r\n  }\r\n\r\n  abort() {\r\n    this._abort = true\r\n  }\r\n}\r\n\r\nmakeContextDependent(Parser.prototype)\r\n",
		"/**\r\n * Parser helper for PDB tag \"REMARK 290\".\r\n *\r\n * @exports Remark290\r\n * @constructor\r\n */\r\nimport { Matrix4 } from 'three'\r\n\r\nclass Remark290 {\r\n  constructor() {\r\n    /** @type {Matrix4[]} */\r\n    this.matrices = []\r\n\r\n    /** @type {?Matrix4} */\r\n    this._matrix = null\r\n    /** @type {number} */\r\n    this._matrixIndex = -1\r\n  }\r\n\r\n  /**\r\n   * Parse a single line of a stream.\r\n   * @param {PDBStream} stream - stream to parse\r\n   */\r\n\r\n  parse(stream) {\r\n    /** @type {?Matrix4} */\r\n    let matrix = this._matrix\r\n\r\n    if (stream.readString(12, 18) === '  SMTRY') {\r\n      const matrixRow = stream.readCharCode(19) - 49 // convert '1', '2', or '3' -> 0, 1, or 2\r\n      const matrixData = stream.readString(20, 80).trim().split(/\\s+/)\r\n      const matrixIndex = parseInt(matrixData[0], 10)\r\n      if (this._matrix === null || matrixIndex !== this._matrixIndex) {\r\n        // TODO: assert(matrixIndex === this.matrices.length + 1);\r\n        this._matrixIndex = matrixIndex\r\n        this._matrix = matrix = new Matrix4()\r\n        this.matrices[this.matrices.length] = matrix\r\n      }\r\n\r\n      const { elements } = matrix\r\n      elements[matrixRow] = parseFloat(matrixData[1])\r\n      elements[matrixRow + 4] = parseFloat(matrixData[2])\r\n      elements[matrixRow + 8] = parseFloat(matrixData[3])\r\n      elements[matrixRow + 12] = parseFloat(matrixData[4])\r\n    }\r\n  }\r\n}\r\n\r\nRemark290.prototype.id = 290\r\n\r\nexport default Remark290\r\n",
		"import chem from '../../../chem'\r\nimport { Matrix4 } from 'three'\r\n\r\nconst { Assembly } = chem\r\n\r\n/**\r\n * Parser helper for PDB tag \"REMARK 350\".\r\n *\r\n * @exports Remark350\r\n * @constructor\r\n */\r\nclass Remark350 {\r\n  constructor(complex) {\r\n    /** @type {Complex} */\r\n    this._complex = complex\r\n    /** @type {Assembly[]} */\r\n    this.assemblies = []\r\n\r\n    /** @type {?Assembly} */\r\n    this._assembly = null\r\n    /** @type {?Matrix4} */\r\n    this._matrix = null\r\n    /** @type {number} */\r\n    this._matrixIndex = -1\r\n  }\r\n\r\n  /**\r\n   * Parse a single line of a stream.\r\n   * @param {PDBStream} stream - stream to parse\r\n   */\r\n\r\n  parse(stream) {\r\n    /** @type {?Assembly} */\r\n    let assembly = this._assembly\r\n    /** @type {?Matrix4} */\r\n    let matrix = this._matrix\r\n\r\n    if (assembly && stream.readString(12, 18) === '  BIOMT') {\r\n      const matrixRow = stream.readCharCode(19) - 49 // convert '1', '2', or '3' -> 0, 1, or 2\r\n      const matrixData = stream.readString(20, 80).trim().split(/\\s+/)\r\n      const matrixIndex = parseInt(matrixData[0], 10)\r\n      if (this._matrix === null || matrixIndex !== this._matrixIndex) {\r\n        // TODO: assert(matrixIndex === assembly.matrices.length + 1);\r\n        this._matrixIndex = matrixIndex\r\n        this._matrix = matrix = new Matrix4()\r\n        assembly.addMatrix(matrix)\r\n      }\r\n\r\n      const { elements } = matrix\r\n      elements[matrixRow] = parseFloat(matrixData[1])\r\n      elements[matrixRow + 4] = parseFloat(matrixData[2])\r\n      elements[matrixRow + 8] = parseFloat(matrixData[3])\r\n      elements[matrixRow + 12] = parseFloat(matrixData[4])\r\n    } else if (assembly && stream.readString(35, 41) === 'CHAINS:') {\r\n      const entries = stream.readString(42, 80).split(',')\r\n      for (let i = 0, n = entries.length; i < n; ++i) {\r\n        const chain = entries[i].trim()\r\n        if (chain.length > 0) {\r\n          assembly.addChain(chain)\r\n        }\r\n      }\r\n    } else if (stream.readString(12, 23) === 'BIOMOLECULE:') {\r\n      // assert molIndex === this.assemblies.length + 1\r\n      this._matrix = null\r\n      this._matrixIndex = -1\r\n      this._assembly = assembly = new Assembly(this._complex)\r\n      this.assemblies.push(assembly)\r\n    }\r\n  }\r\n}\r\n\r\nRemark350.prototype.id = 350\r\n\r\nexport default Remark350\r\n",
		"/** Helper class for stream-like reading input files. */\r\nclass PDBStream {\r\n  /**\r\n   * Create a stream\r\n   * @param {String} data Input data\r\n   */\r\n  constructor(data) {\r\n    /** @type String */\r\n    this._data = data // Input file\r\n    /** @type Number */\r\n    this._start = 0 // Starting position of line\r\n    /** @type Number */\r\n    this._nextCR = -1 // Position of next CR (0x0D)\r\n    /** @type Number */\r\n    this._nextLF = -1 // Position of next LF (0x0A)\r\n    /** @type Number */\r\n    this._next = -1 // End position of line\r\n    /** @type Number */\r\n    this._end = data.length // End of data\r\n\r\n    this.next()\r\n  }\r\n\r\n  /**\r\n   * Reading next line.\r\n   * @returns {String} Next line in data (ending with LF or CR)\r\n   */\r\n  readLine() {\r\n    return this._data.slice(this._start, this._next)\r\n  }\r\n\r\n  /**\r\n   * Reading character from position.\r\n   * @param {Number} pos - Position in current line.\r\n   * @returns {String} Character from position\r\n   */\r\n  readChar(pos) {\r\n    pos = this._start + pos - 1\r\n    return pos < this._next ? this._data[pos] : ' '\r\n  }\r\n\r\n  /**\r\n   * Reading character code from position.\r\n   * @param {Number} pos - Position in current line.\r\n   * @returns {Number} Character code from position\r\n   */\r\n  readCharCode(pos) {\r\n    pos = this._start + pos - 1\r\n    return pos < this._next ? this._data.charCodeAt(pos) : 32\r\n  }\r\n\r\n  /**\r\n   * Reading string from begin to end points.\r\n   * For a reason unknown, numbering assumed not to start from 0, but from 1.\r\n   * @param {Number} begin - Begin point in current line.\r\n   * @param {Number} end - End point in current line.\r\n   * @returns {String} String from begin to end\r\n   */\r\n  readString(begin, end) {\r\n    const from = this._start + begin - 1\r\n    const to = this._start + end\r\n    return this._data.slice(from, to < this._next ? to : this._next)\r\n  }\r\n\r\n  /**\r\n   * Reading integer from begin to end points.\r\n   * @param {Number} begin - Begin point in current line.\r\n   * @param {Number} end - End point in current line.\r\n   * @returns {Number} Integer from begin to end\r\n   */\r\n  readInt(begin, end) {\r\n    return parseInt(this.readString(begin, end), 10)\r\n  }\r\n\r\n  /**\r\n   * Reading float from begin to end points.\r\n   * @param {Number} begin - Begin point in current line.\r\n   * @param {Number} end - End point in current line.\r\n   * @returns {Number} Float from begin to end\r\n   */\r\n  readFloat(begin, end) {\r\n    return parseFloat(this.readString(begin, end))\r\n  }\r\n\r\n  /**\r\n   * Checking for end of data.\r\n   * @returns {boolean} True if data is ended, false otherwise\r\n   */\r\n  end() {\r\n    return this._start >= this._end\r\n  }\r\n\r\n  /**\r\n   * Procedure to re-arrange current pointers in data.\r\n   */\r\n  next() {\r\n    const start = this._next + 1\r\n    this._start = start < this._end ? start : this._end\r\n\r\n    // support CR, LF, CR+LF line endings\r\n    // do not support LF+CR, CR+CR+LF, and other strange combinations\r\n\r\n    if (this._start > this._nextCR) {\r\n      this._nextCR =\r\n        (this._data.indexOf('\\r', this._start) + 1 || this._end + 1) - 1\r\n    }\r\n    if (this._start > this._nextLF) {\r\n      this._nextLF =\r\n        (this._data.indexOf('\\n', this._start) + 1 || this._end + 1) - 1\r\n    }\r\n    this._next = this._nextCR + 1 < this._nextLF ? this._nextCR : this._nextLF\r\n  }\r\n}\r\n\r\nexport default PDBStream\r\n",
		"import { isString, isUndefined } from 'lodash'\r\nimport Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport Remark290 from './pdb/Remark290'\r\nimport Remark350 from './pdb/Remark350'\r\nimport PDBStream from './PDBStream'\r\nimport { Vector3 } from 'three'\r\n\r\nconst { Complex, Element, Helix, Sheet, Strand, Bond, Molecule } = chem\r\n\r\nconst TAG_LENGTH = 6\r\n\r\nfunction nameToElement(name) {\r\n  // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\r\n  //\r\n  // http://www.cgl.ucsf.edu/chimera/docs/UsersGuide/tutorials/pdbintro.html#note1\r\n  //\r\n  // Atom names start with element symbols right-justified in columns 13-14\r\n  // as permitted by the length of the name. For example, the symbol FE for\r\n  // iron appears in columns 13-14, whereas the symbol C for carbon appears\r\n  // in column 14 (see Misaligned Atom Names). If an atom name has four\r\n  // characters, however, it must start in column 13 even if the element\r\n  // symbol is a single character (for example, see Hydrogen Atoms).\r\n\r\n  const veryLong = name.trim().length === 4\r\n  return name.slice(0, veryLong ? 1 : 2).trim()\r\n}\r\n\r\n// the most frequently used beginnings; although HEADER is mandatory, it is often missing in handmade files\r\nconst pdbStartRegexp = /^(HEADER\\s|COMPND\\s|REMARK\\s|ATOM {2}|HETATM|MODEL )/i\r\n\r\nconst remarkParsers = {\r\n  // NOTE: please forget the idea to build the method name in runtime, it can be obfuscated.\r\n  290: Remark290,\r\n  350: Remark350\r\n}\r\n\r\nclass PDBParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n\r\n    this._complex = null\r\n    this._chain = null\r\n    this._residue = null\r\n    this._sheet = null\r\n    this._serialAtomMap = null\r\n    this._modelId = 1\r\n    this._compaundFound = false\r\n    this._biomoleculeFound = false\r\n    this._allowedChainsIDs = null\r\n    this._lastMolId = -1\r\n\r\n    this._remarks = {}\r\n    this._remark = null\r\n\r\n    this._molecules = []\r\n    this._molecule = null\r\n    this._compndCurrToken = ''\r\n\r\n    this._options.fileType = 'pdb'\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return isString(data) && pdbStartRegexp.test(data)\r\n  }\r\n\r\n  _finalize() {\r\n    this._fixBondsArray()\r\n    this._fixChains()\r\n\r\n    // keep crystallographic symmetry transformations\r\n    const remark290 = this._remarks[290]\r\n    this._complex.symmetry = isUndefined(remark290) ? [] : remark290.matrices\r\n\r\n    // add loaded biological assemblies\r\n    const remark350 = this._remarks[350]\r\n    this._complex.units = this._complex.units.concat(\r\n      isUndefined(remark350) ? [] : remark350.assemblies\r\n    )\r\n\r\n    // add loaded macromolecules\r\n    this._finalizeMolecules()\r\n\r\n    // create secondary structure etc.\r\n    this._complex.finalize({\r\n      needAutoBonding: true,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n  }\r\n\r\n  _finalizeMolecules() {\r\n    // get chains from complex\r\n    const chainDict = {}\r\n    let i\r\n    const chains = this._complex._chains\r\n    for (i = 0; i < chains.length; ++i) {\r\n      const chainObj = chains[i]\r\n      const chainName = chainObj._name\r\n      chainDict[chainName] = chainObj\r\n    }\r\n\r\n    // aggregate residues from chains\r\n    for (i = 0; i < this._molecules.length; i++) {\r\n      const m = this._molecules[i]\r\n      let residues = []\r\n      for (let j = 0; j < m._chains.length; j++) {\r\n        const name = m._chains[j]\r\n        const chain = chainDict[name]\r\n        residues = residues.concat(chain._residues.slice())\r\n      }\r\n      const molecule = new Molecule(this._complex, m._name, i + 1)\r\n      molecule.residues = residues\r\n      this._complex._molecules[i] = molecule\r\n    }\r\n  }\r\n\r\n  _fixChains() {\r\n    const idChainMap = {}\r\n    const complex = this._complex\r\n\r\n    // prepare\r\n    for (let i = 0; i < complex._chains.length; i++) {\r\n      const chain = complex._chains[i]\r\n      idChainMap[chain._name.charCodeAt(0)] = chain\r\n    }\r\n  }\r\n\r\n  // FIXME: This function is redundant, CONECT records always follow ATOM and HETATM. Build the map online.\r\n  _fixBondsArray() {\r\n    const serialAtomMap = (this._serialAtomMap = {})\r\n    const complex = this._complex\r\n\r\n    const atoms = complex._atoms\r\n    for (let i = 0, ni = atoms.length; i < ni; ++i) {\r\n      const atom = atoms[i]\r\n      serialAtomMap[atom.serial] = atom\r\n    }\r\n\r\n    const bonds = complex._bonds\r\n    const { logger } = this\r\n    for (let j = 0, nj = bonds.length; j < nj; ++j) {\r\n      const bond = bonds[j]\r\n      if (bond._right < bond._left) {\r\n        logger.debug('_fixBondsArray: Logic error.')\r\n      }\r\n      bond._left = serialAtomMap[bond._left] || null\r\n      bond._right = serialAtomMap[bond._right] || null\r\n    }\r\n  }\r\n\r\n  _parseATOM(stream) {\r\n    if (this._modelId !== 1) {\r\n      return\r\n    }\r\n\r\n    /* eslint-disable no-magic-numbers */\r\n    const het = stream.readCharCode(1) === 0x48\r\n\r\n    // field names according to wwPDB Format\r\n    // NOTE: Chimera allows (nonstandard) use of columns 6-11 for the integer atom serial number in ATOM records.\r\n    const serial = het ? stream.readInt(7, 11) : stream.readInt(6, 11)\r\n    let name = stream.readString(13, 16)\r\n    const altLoc = stream.readChar(17)\r\n    const resName = stream.readString(18, 20).trim()\r\n    const chainID = stream.readChar(22)\r\n    const resSeq = stream.readInt(23, 26)\r\n    const iCode = stream.readChar(27)\r\n    const x = stream.readFloat(31, 38)\r\n    const y = stream.readFloat(39, 46)\r\n    const z = stream.readFloat(47, 54)\r\n    const occupancy = stream.readFloat(55, 60)\r\n    const tempFactor = stream.readFloat(61, 66)\r\n    const element = stream.readString(77, 78).trim() || nameToElement(name)\r\n    const charge = stream.readInt(79, 80) || 0\r\n    /* eslint-enable no-magic-numbers */\r\n    // skip waters (there may be lots of them)\r\n    if (this.settings.now.nowater) {\r\n      if (resName === 'HOH' || resName === 'WAT') {\r\n        return\r\n      }\r\n    }\r\n\r\n    // PDB uses positional system for atom names. It helps derive element type from the name\r\n    // but names may include extra spaces. From this point on we don't need those spaces anymore.\r\n    name = name.trim()\r\n\r\n    const type = Element.getByName(element)\r\n    const role = Element.Role[name] // FIXME: Maybe should use type as additional index (\" CA \" vs. \"CA  \")\r\n\r\n    // NOTE: Residues of a particular chain are not required to be listed next to each other.\r\n    // https://github.com/biasmv/pv/commit/7319b898b7473ba380c26699e3b028b2b1a7e1a1\r\n    let chain = this._chain\r\n    if (!chain || chain.getName() !== chainID) {\r\n      this._chain = chain =\r\n        this._complex.getChain(chainID) || this._complex.addChain(chainID)\r\n      this._residue = null\r\n    }\r\n\r\n    let residue = this._residue\r\n    if (\r\n      !residue ||\r\n      residue.getSequence() !== resSeq ||\r\n      residue.getICode() !== iCode\r\n    ) {\r\n      this._residue = residue = chain.addResidue(resName, resSeq, iCode)\r\n    }\r\n\r\n    const xyz = new Vector3(x, y, z)\r\n    residue.addAtom(\r\n      name,\r\n      type,\r\n      xyz,\r\n      role,\r\n      het,\r\n      serial,\r\n      altLoc,\r\n      occupancy,\r\n      tempFactor,\r\n      charge\r\n    )\r\n  }\r\n\r\n  _parseENDMDL() {\r\n    this._modelId += 1\r\n  }\r\n\r\n  _parseCONECT(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const serial0 = stream.readInt(7, 11)\r\n    const serial1 = stream.readInt(12, 16)\r\n    const serial2 = stream.readInt(17, 21)\r\n    const serial3 = stream.readInt(22, 26)\r\n    const serial4 = stream.readInt(27, 31)\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    const complex = this._complex\r\n\r\n    // Keep bonds ordered by atom serial\r\n    if (serial1 && serial1 > serial0) {\r\n      complex.addBond(serial0, serial1, 0, Bond.BondType.UNKNOWN, true)\r\n    }\r\n    if (serial2 && serial2 > serial0) {\r\n      complex.addBond(serial0, serial2, 0, Bond.BondType.UNKNOWN, true)\r\n    }\r\n    if (serial3 && serial3 > serial0) {\r\n      complex.addBond(serial0, serial3, 0, Bond.BondType.UNKNOWN, true)\r\n    }\r\n    if (serial4 && serial4 > serial0) {\r\n      complex.addBond(serial0, serial4, 0, Bond.BondType.UNKNOWN, true)\r\n    }\r\n  }\r\n\r\n  _parseCOMPND(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const str = stream.readString(11, 80)\r\n    const tokenIdx = str.indexOf(':')\r\n    this._compndCurrToken =\r\n      tokenIdx > 0 ? str.substring(0, tokenIdx).trim() : this._compndCurrToken\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    // start reading new molecule\r\n    if (this._compndCurrToken === 'MOL_ID') {\r\n      this._molecule = { _index: '', _chains: [] }\r\n      this._molecule._index = parseInt(\r\n        str.substring(tokenIdx + 1, str.indexOf(';')),\r\n        10\r\n      )\r\n      this._molecules.push(this._molecule)\r\n      // parse molecule name\r\n    } else if (this._compndCurrToken === 'MOLECULE' && this._molecule != null) {\r\n      this._molecule._name = str\r\n        .substring(tokenIdx + 1, str.indexOf(';'))\r\n        .trim()\r\n      // parse molecule chains\r\n    } else if (this._compndCurrToken === 'CHAIN' && this._molecule != null) {\r\n      let chainStr = str.substring(tokenIdx + 1, 80).trim()\r\n      const lastChar = chainStr[chainStr.length - 1]\r\n      if (lastChar === ';' || lastChar === ',') {\r\n        chainStr = chainStr.slice(0, -1)\r\n      }\r\n      chainStr = chainStr.replace(/\\s+/g, '')\r\n      const chains = chainStr.split(',')\r\n      this._molecule._chains = this._molecule._chains.concat(chains)\r\n    }\r\n  }\r\n\r\n  _parseREMARK(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const remarkNum = stream.readInt(8, 10)\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    // create remark parser if needed\r\n    let remark = this._remarks[remarkNum]\r\n    if (isUndefined(remark)) {\r\n      const RemarkParser = remarkParsers[remarkNum]\r\n      if (typeof RemarkParser === 'function') {\r\n        this._remarks[remarkNum] = remark = new RemarkParser(this._complex)\r\n      }\r\n    }\r\n\r\n    // delegate parsing\r\n    if (!isUndefined(remark)) {\r\n      remark.parse(stream)\r\n    }\r\n  }\r\n\r\n  _parseHELIX(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const fields = [20, 22, 32, 34]\r\n    /* eslint-enable no-magic-numbers */\r\n    this._parseSTRUCTURE(stream, fields, (obj) => {\r\n      this._complex.addHelix(obj)\r\n      this._complex.structures.push(obj)\r\n    })\r\n  }\r\n\r\n  _parseSHEET(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const fields = [22, 23, 33, 34]\r\n    /* eslint-enable no-magic-numbers */\r\n    this._parseSTRUCTURE(stream, fields, (obj) => {\r\n      this._complex.addSheet(obj)\r\n    })\r\n  }\r\n\r\n  _parseSTRUCTURE(stream, pars, adder) {\r\n    const startId = 0\r\n    const startIndex = 1\r\n    const endId = 2\r\n    const endIndex = 3\r\n\r\n    // identify fields: debugging and stuff\r\n    /* eslint-disable no-magic-numbers */\r\n    const codeOfS = 0x53\r\n    const serialNumber = stream.readInt(8, 10)\r\n    const structureName = stream.readString(12, 14).trim() // FIXME: LString(3) forbids trim()\r\n    const comment = stream.readString(41, 70).trim()\r\n    const helLength = stream.readInt(72, 76)\r\n    const helixClass = stream.readInt(39, 40)\r\n    const shWidth = stream.readInt(15, 16)\r\n    const shCur = stream.readInt(42, 45)\r\n    const shPrev = stream.readInt(57, 60)\r\n    /* eslint-enable no-magic-numbers */\r\n    // file fields\r\n    const startChainID = stream\r\n      .readString(pars[startId], pars[endId] + 1)\r\n      .charCodeAt(0)\r\n    const endChainID = stream\r\n      .readString(pars[endId], pars[endId] + 1)\r\n      .charCodeAt(0)\r\n    const startSequenceNumber = stream.readInt(\r\n      pars[startIndex],\r\n      pars[startIndex] + 3\r\n    )\r\n    let iCodeStr = stream.readString(pars[startIndex] + 4, pars[startIndex] + 4)\r\n    let startICode = 0\r\n\r\n    if (iCodeStr.length > 0) {\r\n      startICode = iCodeStr.charCodeAt(0)\r\n    }\r\n    const endSequenceNumber = stream.readInt(pars[endIndex], pars[endIndex] + 3)\r\n    iCodeStr = stream.readString(pars[endIndex] + 4, pars[endIndex] + 4)\r\n    let endICode = 0\r\n    if (iCodeStr.length > 0) {\r\n      endICode = iCodeStr.charCodeAt(0)\r\n    }\r\n\r\n    let obj\r\n    let cs = this._sheet\r\n    if (stream.readCharCode(1) === codeOfS) {\r\n      if (cs !== null && cs.getName() !== structureName) {\r\n        cs = null\r\n        this._sheet = null\r\n      }\r\n      if (cs === null) {\r\n        this._sheet = obj = new Sheet(structureName, shWidth)\r\n        adder(obj)\r\n      } else {\r\n        obj = cs\r\n      }\r\n      const strand = new Strand(\r\n        obj,\r\n        this._complex.getUnifiedSerial(\r\n          startChainID,\r\n          startSequenceNumber,\r\n          startICode\r\n        ),\r\n        this._complex.getUnifiedSerial(endChainID, endSequenceNumber, endICode),\r\n        helixClass,\r\n        shCur,\r\n        shPrev\r\n      )\r\n      obj.addStrand(strand)\r\n      this._complex.structures.push(strand)\r\n    } else {\r\n      obj = new Helix(\r\n        helixClass,\r\n        this._complex.getUnifiedSerial(\r\n          startChainID,\r\n          startSequenceNumber,\r\n          startICode\r\n        ),\r\n        this._complex.getUnifiedSerial(endChainID, endSequenceNumber, endICode),\r\n        serialNumber,\r\n        structureName,\r\n        comment,\r\n        helLength\r\n      )\r\n      adder(obj)\r\n    }\r\n  }\r\n\r\n  _parseHEADER(stream) {\r\n    const { metadata } = this._complex\r\n    metadata.classification = stream.readString(11, 50).trim()\r\n    metadata.date = stream.readString(51, 59).trim()\r\n\r\n    const id = stream.readString(63, 66).trim()\r\n    metadata.id = id\r\n    if (id) {\r\n      this._complex.name = id\r\n    }\r\n    metadata.format = 'pdb'\r\n  }\r\n\r\n  _parseTITLE(stream) {\r\n    const { metadata } = this._complex\r\n    metadata.title = metadata.title || []\r\n\r\n    const line = stream.readInt(9, 10) || 1\r\n    metadata.title[line - 1] = stream.readString(11, 80).trim()\r\n  }\r\n\r\n  static tagParsers = {\r\n    HEADER: PDBParser.prototype._parseHEADER,\r\n    'TITLE ': PDBParser.prototype._parseTITLE,\r\n    'ATOM  ': PDBParser.prototype._parseATOM,\r\n    HETATM: PDBParser.prototype._parseATOM,\r\n    ENDMDL: PDBParser.prototype._parseENDMDL,\r\n    CONECT: PDBParser.prototype._parseCONECT,\r\n    COMPND: PDBParser.prototype._parseCOMPND,\r\n    REMARK: PDBParser.prototype._parseREMARK,\r\n    // 'SOURCE': PDBParser.prototype._parseSOURCE,\r\n    'HELIX ': PDBParser.prototype._parseHELIX,\r\n    'SHEET ': PDBParser.prototype._parseSHEET,\r\n\r\n    // nonstandard extension to allow range 100,000 - 999,999\r\n    'ATOM 1': PDBParser.prototype._parseATOM,\r\n    'ATOM 2': PDBParser.prototype._parseATOM,\r\n    'ATOM 3': PDBParser.prototype._parseATOM,\r\n    'ATOM 4': PDBParser.prototype._parseATOM,\r\n    'ATOM 5': PDBParser.prototype._parseATOM,\r\n    'ATOM 6': PDBParser.prototype._parseATOM,\r\n    'ATOM 7': PDBParser.prototype._parseATOM,\r\n    'ATOM 8': PDBParser.prototype._parseATOM,\r\n    'ATOM 9': PDBParser.prototype._parseATOM\r\n  }\r\n\r\n  parseSync() {\r\n    const stream = new PDBStream(this._data)\r\n    const result = (this._complex = new Complex())\r\n\r\n    // parse PDB line by line\r\n    while (!stream.end()) {\r\n      const tag = stream.readString(1, TAG_LENGTH)\r\n      const func = PDBParser.tagParsers[tag]\r\n      if (typeof func === 'function') {\r\n        func.call(this, stream)\r\n      }\r\n      stream.next()\r\n    }\r\n\r\n    // Resolve indices and serials to objects\r\n    this._finalize()\r\n\r\n    // cleanup\r\n    this._serialAtomMap = null\r\n    this._sheet = null\r\n    this._residue = null\r\n    this._chain = null\r\n    this._complex = null\r\n\r\n    if (result.getAtomCount() === 0) {\r\n      throw new Error('The data does not contain valid atoms')\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n\r\nPDBParser.formats = ['pdb']\r\nPDBParser.extensions = ['.pdb', '.ent']\r\n\r\nexport default PDBParser\r\n",
		"import Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport { isString } from 'lodash'\r\nimport { Vector3 } from 'three'\r\n\r\nconst { Complex, Element, SGroup, Bond } = chem\r\n\r\nconst cOrderCharCodes = {\r\n  A: 0,\r\n  S: 1,\r\n  D: 2,\r\n  T: 3\r\n}\r\n\r\nconst cmlStartRegexp = /\\s*<\\?xml\\b[^?>]*\\?>\\s*<(?:cml|molecule)\\b/i\r\n\r\nclass CMLParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this._complex = null\r\n    this._residue = null\r\n    this._serialAtomMap = null\r\n    this._modelId = 1\r\n    this._lastMolId = -1\r\n    this._readOnlyOneMolecule = false\r\n    this._options.fileType = 'cml'\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return isString(data) && cmlStartRegexp.test(data)\r\n  }\r\n\r\n  _rebuidBondIndexes(atoms, bonds) {\r\n    const count = atoms.length\r\n    for (let i = 0; i < count; i++) {\r\n      const atomId = atoms[i].id\r\n\r\n      const countBonds = bonds.length\r\n      for (let j = 0; j < countBonds; j++) {\r\n        const idxs = bonds[j].atomRefs2.split(' ')\r\n        if (idxs[0] === atomId) {\r\n          bonds[j].start = i\r\n        }\r\n\r\n        if (idxs[1] === atomId) {\r\n          bonds[j].end = i\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _createSGroup(molecule, moleculeArr) {\r\n    const newGroup = new SGroup(\r\n      molecule.id,\r\n      molecule.fieldData,\r\n      new Vector3(parseFloat(molecule.x), parseFloat(molecule.y), 0),\r\n      molecule.atomRefs,\r\n      molecule\r\n    )\r\n    if (molecule.placement === 'Relative') {\r\n      newGroup._center = new Vector3(0, 0, 0)\r\n    }\r\n    if (molecule.fieldName === 'MDLBG_FRAGMENT_CHARGE') {\r\n      newGroup._charge = parseInt(molecule.fieldData, 10) || 0\r\n    }\r\n    if (molecule.fieldName === 'MDLBG_FRAGMENT_COEFFICIENT') {\r\n      newGroup._repeat = parseInt(molecule.fieldData, 10) || 1\r\n    }\r\n    moleculeArr.push(newGroup)\r\n  }\r\n\r\n  _extractSGroup(molecule, moleculeArr) {\r\n    if (!Array.isArray(moleculeArr)) {\r\n      moleculeArr = []\r\n    }\r\n\r\n    if (molecule) {\r\n      if (Array.isArray(molecule)) {\r\n        const count = molecule.length\r\n        for (let i = 0; i < count; i++) {\r\n          if (molecule[i].molecule) {\r\n            moleculeArr = moleculeArr.concat(\r\n              this._extractSGroup(molecule[i].molecule)\r\n            )\r\n          }\r\n          this._createSGroup(molecule[i], moleculeArr)\r\n        }\r\n      } else {\r\n        if (molecule.molecule) {\r\n          if (molecule.molecule) {\r\n            moleculeArr = moleculeArr.concat(\r\n              this._extractSGroup(molecule.molecule)\r\n            )\r\n          }\r\n        }\r\n        this._createSGroup(molecule, moleculeArr)\r\n      }\r\n    }\r\n\r\n    return moleculeArr\r\n  }\r\n\r\n  _extractSGroups(molecule, atoms) {\r\n    const moleculeArr = this._extractSGroup(molecule)\r\n\r\n    const count = atoms.length\r\n    let i\r\n    let j\r\n\r\n    for (i = 0; i < count; i++) {\r\n      const atomId = atoms[i].id\r\n      for (j = 0; j < moleculeArr.length; j++) {\r\n        const firstAtomRef = moleculeArr[j]._atoms.split(' ')[0]\r\n        if (firstAtomRef === atomId) {\r\n          if (!atoms[i].sgroupRef) {\r\n            atoms[i].sgroupRef = []\r\n          }\r\n          atoms[i].sgroupRef.push(moleculeArr[j])\r\n        }\r\n      }\r\n    }\r\n    // build sGroups centers\r\n    let atomMap = {} // sgrpmap cache\r\n    let mapEntry = null\r\n    const nLimon = 100000000\r\n    const bLow = new Vector3(nLimon, nLimon, nLimon)\r\n    const bHight = new Vector3(-nLimon, -nLimon, -nLimon)\r\n\r\n    function cycleFuncInner(e) {\r\n      mapEntry = atomMap[e]\r\n      if (mapEntry) {\r\n        moleculeArr[j]._atoms.push(mapEntry.a)\r\n      }\r\n    }\r\n\r\n    function cycleFunc(e) {\r\n      mapEntry = atomMap[e]\r\n      if (mapEntry) {\r\n        bLow.set(\r\n          Math.min(bLow.x, mapEntry.x),\r\n          Math.min(bLow.y, mapEntry.y),\r\n          Math.min(bLow.z, mapEntry.z)\r\n        )\r\n        bHight.set(\r\n          Math.max(bHight.x, mapEntry.x),\r\n          Math.max(bHight.y, mapEntry.y),\r\n          Math.max(bHight.z, mapEntry.z)\r\n        )\r\n        cycleFuncInner(e)\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < atoms.length; i++) {\r\n      atomMap[atoms[i].id] = {}\r\n      atomMap[atoms[i].id].x = atoms[i].x2\r\n      if (atoms[i].x3) {\r\n        atomMap[atoms[i].id].x = atoms[i].x3\r\n      }\r\n      atomMap[atoms[i].id].x = parseFloat(atomMap[atoms[i].id].x)\r\n      atomMap[atoms[i].id].y = atoms[i].y2\r\n      if (atoms[i].y3) {\r\n        atomMap[atoms[i].id].y = atoms[i].y3\r\n      }\r\n      atomMap[atoms[i].id].y = parseFloat(atomMap[atoms[i].id].y)\r\n      atomMap[atoms[i].id].z = '0.0'\r\n      if (atoms[i].z3) {\r\n        atomMap[atoms[i].id].z = atoms[i].z3\r\n      }\r\n      atomMap[atoms[i].id].z = parseFloat(atomMap[atoms[i].id].z)\r\n      atomMap[atoms[i].id].a = atoms[i]\r\n    }\r\n\r\n    let atomsRef\r\n    for (j = 0; j < moleculeArr.length; j++) {\r\n      if (moleculeArr[j]._center !== null) {\r\n        bLow.set(nLimon, nLimon, nLimon)\r\n        bHight.set(-nLimon, -nLimon, -nLimon)\r\n        atomsRef = moleculeArr[j]._atoms.split(' ')\r\n        moleculeArr[j]._atoms = []\r\n        atomsRef.forEach(cycleFunc)\r\n\r\n        moleculeArr[j]._center.addVectors(bLow, bHight)\r\n        moleculeArr[j]._center.multiplyScalar(0.5)\r\n      } else {\r\n        atomsRef = moleculeArr[j]._atoms.split(' ')\r\n        moleculeArr[j]._atoms = []\r\n        atomsRef.forEach(cycleFuncInner)\r\n      }\r\n    }\r\n    atomMap = null\r\n  }\r\n\r\n  _traverseData(dom) {\r\n    function isArray(o) {\r\n      return Object.prototype.toString.apply(o) === '[object Array]'\r\n    }\r\n\r\n    function parseNode(xmlNode, result) {\r\n      if (xmlNode.nodeName === '#text' && xmlNode.nodeValue.trim() === '') {\r\n        return\r\n      }\r\n\r\n      const jsonNode = {}\r\n      jsonNode.xmlNode = xmlNode\r\n      const existing = result[xmlNode.nodeName]\r\n      if (existing) {\r\n        if (!isArray(existing)) {\r\n          result[xmlNode.nodeName] = [existing, jsonNode]\r\n        } else {\r\n          result[xmlNode.nodeName].push(jsonNode)\r\n        }\r\n      } else {\r\n        result[xmlNode.nodeName] = jsonNode\r\n      }\r\n\r\n      let length\r\n      let i\r\n      if (xmlNode.attributes) {\r\n        ;({ length } = xmlNode.attributes)\r\n        for (i = 0; i < length; i++) {\r\n          const attribute = xmlNode.attributes[i]\r\n          jsonNode[attribute.nodeName] = attribute.nodeValue\r\n        }\r\n      }\r\n\r\n      ;({ length } = xmlNode.childNodes)\r\n      for (i = 0; i < length; i++) {\r\n        parseNode(xmlNode.childNodes[i], jsonNode)\r\n      }\r\n    }\r\n\r\n    const result = {}\r\n    if (dom.childNodes.length) {\r\n      parseNode(dom.childNodes[0], result)\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  _findSuitableMolecule(data, molSet) {\r\n    for (const key in data) {\r\n      if (key === 'xmlNode') {\r\n        continue\r\n      } else if (key === 'molecule') {\r\n        if (data.molecule) {\r\n          if (data.molecule.atomArray && data.molecule.atomArray.atom) {\r\n            molSet.push(data)\r\n          }\r\n          if (Array.isArray(data.molecule)) {\r\n            for (let i = 0; i < data.molecule.length; i++) {\r\n              if (\r\n                data.molecule[i].atomArray &&\r\n                data.molecule[i].atomArray.atom\r\n              ) {\r\n                molSet.push({ molecule: data.molecule[i] })\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else if (\r\n        data[key] &&\r\n        data[key] !== null &&\r\n        typeof data[key] === 'object'\r\n      ) {\r\n        this._findSuitableMolecule(data[key], molSet)\r\n      }\r\n    }\r\n  }\r\n\r\n  _selectComponents(text) {\r\n    const parser = new DOMParser()\r\n    const doc = parser.parseFromString(text, 'application/xml')\r\n    const traversedData = this._traverseData(doc)\r\n    let rawData\r\n    const self = this\r\n\r\n    function prepareComponentCompound(data) {\r\n      let atoms = []\r\n      if (\r\n        data.molecule &&\r\n        data.molecule.atomArray &&\r\n        data.molecule.atomArray.atom\r\n      ) {\r\n        if (!Array.isArray(data.molecule.atomArray.atom)) {\r\n          atoms.push(data.molecule.atomArray.atom)\r\n        } else {\r\n          atoms = data.molecule.atomArray.atom\r\n        }\r\n      } else if (!data.molecule) {\r\n        const ret = {}\r\n        ret.atomLabels = null\r\n        ret.labelsCount = 1\r\n        return ret\r\n      }\r\n\r\n      if (data.molecule.molecule) {\r\n        self._extractSGroups(data.molecule.molecule, atoms)\r\n      }\r\n\r\n      let atom\r\n      let count = atoms.length\r\n      for (let i = 0; i < count; i++) {\r\n        atom = atoms[i]\r\n        atom.edges = []\r\n      }\r\n\r\n      let localBond = []\r\n      if (data.molecule.bondArray && data.molecule.bondArray.bond) {\r\n        if (!Array.isArray(data.molecule.bondArray.bond)) {\r\n          localBond.push(data.molecule.bondArray.bond)\r\n        } else {\r\n          localBond = data.molecule.bondArray.bond\r\n        }\r\n      }\r\n      let bond\r\n      count = localBond.length\r\n      self._rebuidBondIndexes(atoms, localBond)\r\n\r\n      function addCurrBond(index) {\r\n        bond = localBond[index]\r\n        atom = atoms[bond.start]\r\n        if (!atom) {\r\n          return false\r\n        }\r\n        atom.edges.push(bond.end)\r\n        atom = atoms[bond.end]\r\n        if (!atom) {\r\n          return false\r\n        }\r\n        atom.edges.push(bond.start)\r\n        return true\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        if (!addCurrBond(i)) {\r\n          // ignore invalid bond\r\n          continue\r\n        }\r\n        const orderAttr = bond.xmlNode.getAttribute('order')\r\n        const tc = parseInt(orderAttr, 10)\r\n        // the default bond order is unknown\r\n        localBond[i].order = 0\r\n        localBond[i].type = Bond.BondType.UNKNOWN\r\n        if (tc > 1) {\r\n          localBond[i].order = tc\r\n        } else {\r\n          // another option - bond order is a string\r\n          const order = cOrderCharCodes[orderAttr]\r\n          if (order !== undefined) {\r\n            localBond[i].order = order\r\n            if (orderAttr === 'A') {\r\n              localBond[i].type = Bond.BondType.AROMATIC\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      count = atoms.length\r\n      for (let i = 0; i < count; i++) {\r\n        atom = atoms[i]\r\n        atom.edges.sort()\r\n      }\r\n\r\n      const labels = self._breadWidthSearch(atoms, 0) // for now\r\n\r\n      const retStruct = {}\r\n      retStruct.atoms = atoms\r\n      retStruct.bonds = localBond\r\n      retStruct.labels = labels.atomLabels\r\n      retStruct.count = Math.min(1, labels.labelsCount) // for now\r\n      retStruct.curr = -1\r\n      retStruct.originalCML = doc\r\n\r\n      return retStruct\r\n    }\r\n\r\n    if (traversedData.cml) {\r\n      rawData = traversedData.cml\r\n    } else {\r\n      rawData = traversedData\r\n    }\r\n    const retData = []\r\n    const filteredData = []\r\n    this._findSuitableMolecule(rawData, filteredData)\r\n    if (this._readOnlyOneMolecule && filteredData.length > 1) {\r\n      filteredData.splice(1, filteredData.length - 1)\r\n    }\r\n    filteredData.forEach((d) => {\r\n      const rd = prepareComponentCompound(d)\r\n      if (rd.atoms.length > 0) {\r\n        retData.push(rd)\r\n      }\r\n    })\r\n    return retData\r\n  }\r\n\r\n  _packLabel(compId, molId) {\r\n    const shift = 16\r\n    return (molId << shift) + compId\r\n  }\r\n\r\n  _unpackLabel(l) {\r\n    const shift = 16\r\n    const mask = (1 << shift) - 1\r\n    return { molId: l >>> shift, compId: l & mask }\r\n  }\r\n\r\n  _breadWidthSearch(atoms, molID) {\r\n    const atomLabels = new Array(atoms.length)\r\n\r\n    let id\r\n    for (id = 0; id < atomLabels.length; id++) {\r\n      atomLabels[id] = this._packLabel(0, molID)\r\n    }\r\n\r\n    const breadthQueue = []\r\n    let componentID = 0\r\n    let labeledAtoms = atoms.length\r\n\r\n    while (labeledAtoms > 0) {\r\n      componentID++\r\n\r\n      let startID = -1\r\n      for (id = 0; id < atomLabels.length; id++) {\r\n        if (this._unpackLabel(atomLabels[id]).compId === 0) {\r\n          startID = id\r\n          break\r\n        }\r\n      }\r\n\r\n      if (startID < 0) {\r\n        break\r\n      }\r\n\r\n      // Bread first search\r\n      breadthQueue.push(atoms[startID])\r\n      atomLabels[startID] = this._packLabel(componentID, molID)\r\n      labeledAtoms--\r\n\r\n      while (breadthQueue.length > 0) {\r\n        const curr = breadthQueue.shift()\r\n        if (!curr) {\r\n          continue\r\n        }\r\n\r\n        for (let i = 0; i < curr.edges.length; i++) {\r\n          if (atomLabels[curr.edges[i]] !== componentID) {\r\n            breadthQueue.push(atoms[curr.edges[i]])\r\n            atomLabels[curr.edges[i]] = componentID\r\n            labeledAtoms--\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const ret = {}\r\n    ret.atomLabels = atomLabels\r\n    ret.labelsCount = componentID\r\n    return ret\r\n  }\r\n\r\n  _parseBond(eAtom, mainAtom, order, type) {\r\n    if (eAtom >= 0) {\r\n      const h = [Math.min(eAtom, mainAtom), Math.max(eAtom, mainAtom)]\r\n      this._complex.addBond(h[0], h[1], order, type, true)\r\n    }\r\n  }\r\n\r\n  _fixBondsArray() {\r\n    const serialAtomMap = (this._serialAtomMap = {})\r\n    const complex = this._complex\r\n\r\n    const atoms = complex._atoms\r\n    for (let i = 0, ni = atoms.length; i < ni; ++i) {\r\n      const atom = atoms[i]\r\n      serialAtomMap[atom.serial] = atom\r\n    }\r\n\r\n    const bonds = complex._bonds\r\n    const { logger } = this\r\n    for (let j = 0, nj = bonds.length; j < nj; ++j) {\r\n      const bond = bonds[j]\r\n      if (bond._right < bond._left) {\r\n        logger.debug('_fixBondsArray: Logic error.')\r\n      }\r\n      bond._left = serialAtomMap[bond._left] || null\r\n      bond._right = serialAtomMap[bond._right] || null\r\n    }\r\n  }\r\n\r\n  _parseSet(varData) {\r\n    const complex = (this._complex = new Complex())\r\n    const data = varData\r\n    const currentLabel = data.curr\r\n    const { atoms, labels } = data\r\n    let atom = null\r\n    let i\r\n    let j\r\n    const count = atoms.length\r\n\r\n    function addFunc(a) {\r\n      a.xmlNodeRef = atom\r\n      if (atom.x2) {\r\n        atom.x3 = atom.x2\r\n        delete atom.x2\r\n      }\r\n      if (atom.y2) {\r\n        atom.y3 = atom.y2\r\n        delete atom.y2\r\n      }\r\n      if (!atom.z3) {\r\n        atom.z3 = '0.0'\r\n      }\r\n      atom.complexAtom = a\r\n    }\r\n\r\n    let chains = {}\r\n    // parse atoms in label order\r\n    const reorder = []\r\n    for (i = 0; i < count; i++) {\r\n      reorder.push(i)\r\n    }\r\n    reorder.sort((a, b) => labels[a] - labels[b])\r\n    for (i = 0; i < count; i++) {\r\n      const atomCharge = 0\r\n      const lLabel = labels[reorder[i]]\r\n      if (\r\n        this._unpackLabel(lLabel).molId ===\r\n        this._unpackLabel(currentLabel).molId\r\n      ) {\r\n        atom = atoms[reorder[i]]\r\n        const atomFullNameStruct = atom.elementType\r\n\r\n        if (atom.sgroupRef) {\r\n          const countRef = atom.sgroupRef.length\r\n          for (let k = 0; k < countRef; ++k) {\r\n            complex._sgroups.push(atom.sgroupRef[k])\r\n          }\r\n        }\r\n\r\n        if (atom.x3 || atom.x2) {\r\n          const currAtomComp = this._unpackLabel(lLabel).compId\r\n          // use ' ' by default instead of synthetic creation of chain names\r\n          const chainID = ' ' //= String.fromCharCode('A'.charCodeAt(0) + currAtomComp);\r\n          const resSeq = currAtomComp\r\n          const iCode = ' '\r\n          let strLabel = currAtomComp.toString()\r\n          if (strLabel.length === 1) {\r\n            strLabel = `0${strLabel}`\r\n          }\r\n          const resName = `N${strLabel}`\r\n          let chain = chains[chainID]\r\n          if (!chain || chain.getName() !== chainID) {\r\n            chains[chainID] = chain =\r\n              this._complex.getChain(chainID) || this._complex.addChain(chainID)\r\n            this._residue = null\r\n          }\r\n\r\n          let residue = this._residue\r\n          if (\r\n            !residue ||\r\n            residue.getSequence() !== resSeq ||\r\n            residue.getICode() !== iCode\r\n          ) {\r\n            this._residue = residue = chain.addResidue(resName, resSeq, iCode)\r\n          }\r\n\r\n          // _x, _y, _z, mname, mindex, atomNameFull, atomName, chainID, serial, isHet, atlLocInd, atomNameToTypeF\r\n          let xyz = null\r\n          if (atom.x3) {\r\n            xyz = new Vector3(\r\n              parseFloat(atom.x3),\r\n              parseFloat(atom.y3),\r\n              parseFloat(atom.z3)\r\n            )\r\n          } else if (atom.x2) {\r\n            xyz = new Vector3(parseFloat(atom.x2), parseFloat(atom.y2), 0)\r\n          }\r\n          let element = Element.ByName[atom.elementType.toUpperCase()]\r\n          if (!element) {\r\n            element = JSON.parse(\r\n              JSON.stringify(\r\n                Element.ByName[\r\n                  Object.keys(Element.ByName)[\r\n                    Object.keys(Element.ByName).length - 1\r\n                  ]\r\n                ]\r\n              )\r\n            )\r\n            element.number += 1\r\n            element.name = atom.elementType.toUpperCase()\r\n            element.fullName = 'Unknown'\r\n            Element.ByName[atom.elementType.toUpperCase()] = element\r\n          }\r\n          const atomSerial = parseInt(atom.id.replace(/[^0-9]/, ''), 10)\r\n          const added = residue.addAtom(\r\n            atomFullNameStruct,\r\n            element,\r\n            xyz,\r\n            Element.Role.SG,\r\n            true,\r\n            atomSerial,\r\n            ' ',\r\n            1.0,\r\n            0.0,\r\n            atomCharge\r\n          )\r\n          if (atom.hydrogenCount) {\r\n            added.hydrogenCount = parseInt(atom.hydrogenCount, 10)\r\n          }\r\n          if (atom.mrvValence) {\r\n            added.valence = parseInt(atom.mrvValence, 10)\r\n          }\r\n          addFunc(added)\r\n        }\r\n      }\r\n    }\r\n    chains = null // NOSONAR\r\n    for (i = 0; i < data.bonds.length; i++) {\r\n      const cb = data.bonds[i]\r\n      if (\r\n        this._unpackLabel(labels[cb.start]).molId ===\r\n          this._unpackLabel(currentLabel).molId &&\r\n        this._unpackLabel(labels[cb.end]).molId ===\r\n          this._unpackLabel(currentLabel).molId\r\n      ) {\r\n        atom = atoms[cb.start]\r\n        if (!atom || !atoms[cb.end]) {\r\n          continue // skip invalid\r\n        }\r\n        this._parseBond(\r\n          parseInt(atom.id.replace(/[^0-9]/, ''), 10),\r\n          parseInt(atoms[cb.end].id.replace(/[^0-9]/, ''), 10),\r\n          cb.order,\r\n          cb.type\r\n        )\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < this._complex.getSGroupCount(); i++) {\r\n      const sGrp = this._complex.getSGroups()[i]\r\n      for (j = 0; j < sGrp._atoms.length; j++) {\r\n        sGrp._atoms[j] = sGrp._atoms[j].complexAtom\r\n      }\r\n    }\r\n    for (i = 0; i < count; i++) {\r\n      if (\r\n        this._unpackLabel(labels[i]).molId ===\r\n        this._unpackLabel(currentLabel).molId\r\n      ) {\r\n        atom = atoms[i]\r\n        atom.complexAtom = null\r\n        delete atom.complexAtom\r\n      }\r\n    }\r\n    this._complex.originalCML = data.originalCML\r\n    this._fixBondsArray()\r\n    complex.finalize({\r\n      needAutoBonding: false,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n    this._serialAtomMap = null\r\n    this._complex = null\r\n    return complex\r\n  }\r\n\r\n  parseSync() {\r\n    const complexes = []\r\n    const self = this\r\n    const moleculaSet = this._selectComponents(this._data)\r\n    moleculaSet.forEach((molSet) => {\r\n      molSet.curr = 2\r\n      if (molSet.count === 0) {\r\n        molSet.count = 1\r\n      }\r\n      for (let i = 0; i < molSet.count; i++) {\r\n        molSet.curr = i + 1\r\n        complexes.push(self._parseSet(molSet, false))\r\n      }\r\n    })\r\n\r\n    let totalAtomsParsed = 0\r\n    complexes.forEach((c) => {\r\n      totalAtomsParsed += c.getAtomCount()\r\n    })\r\n    if (totalAtomsParsed <= 0) {\r\n      throw new Error('The data does not contain valid atoms')\r\n    }\r\n\r\n    if (complexes.length > 1) {\r\n      const joinedComplex = new Complex()\r\n      joinedComplex.joinComplexes(complexes)\r\n      joinedComplex.originalCML = complexes[0].originalCML\r\n      return joinedComplex\r\n    }\r\n    if (complexes.length === 1) {\r\n      return complexes[0]\r\n    }\r\n    return new Complex()\r\n  }\r\n}\r\n\r\nCMLParser.formats = ['cml']\r\nCMLParser.extensions = ['.cml']\r\n\r\nexport default CMLParser\r\n",
		"!(function (r, t) {\r\n  if ('function' == typeof define && define.amd) define(['exports'], t)\r\n  else if ('object' == typeof exports && 'undefined' != typeof module)\r\n    t(exports)\r\n  else t((r.MMTF = r.MMTF || {}))\r\n})(this, function (r) {\r\n  'use strict'\r\n  function t(r, t, n) {\r\n    for (var e = (r.byteLength, 0), i = n.length; i > e; e++) {\r\n      var o = n.charCodeAt(e)\r\n      if (128 > o) r.setUint8(t++, ((o >>> 0) & 127) | 0)\r\n      else if (2048 > o)\r\n        r.setUint8(t++, ((o >>> 6) & 31) | 192),\r\n          r.setUint8(t++, ((o >>> 0) & 63) | 128)\r\n      else if (65536 > o)\r\n        r.setUint8(t++, ((o >>> 12) & 15) | 224),\r\n          r.setUint8(t++, ((o >>> 6) & 63) | 128),\r\n          r.setUint8(t++, ((o >>> 0) & 63) | 128)\r\n      else {\r\n        if (!(1114112 > o)) throw new Error('bad codepoint ' + o)\r\n        r.setUint8(t++, ((o >>> 18) & 7) | 240),\r\n          r.setUint8(t++, ((o >>> 12) & 63) | 128),\r\n          r.setUint8(t++, ((o >>> 6) & 63) | 128),\r\n          r.setUint8(t++, ((o >>> 0) & 63) | 128)\r\n      }\r\n    }\r\n  }\r\n  function n(r) {\r\n    for (var t = 0, n = 0, e = r.length; e > n; n++) {\r\n      var i = r.charCodeAt(n)\r\n      if (128 > i) t += 1\r\n      else if (2048 > i) t += 2\r\n      else if (65536 > i) t += 3\r\n      else {\r\n        if (!(1114112 > i)) throw new Error('bad codepoint ' + i)\r\n        t += 4\r\n      }\r\n    }\r\n    return t\r\n  }\r\n  function e(r, i, o) {\r\n    var a = typeof r\r\n    if ('string' === a) {\r\n      var u = n(r)\r\n      if (32 > u) return i.setUint8(o, 160 | u), t(i, o + 1, r), 1 + u\r\n      if (256 > u)\r\n        return i.setUint8(o, 217), i.setUint8(o + 1, u), t(i, o + 2, r), 2 + u\r\n      if (65536 > u)\r\n        return i.setUint8(o, 218), i.setUint16(o + 1, u), t(i, o + 3, r), 3 + u\r\n      if (4294967296 > u)\r\n        return i.setUint8(o, 219), i.setUint32(o + 1, u), t(i, o + 5, r), 5 + u\r\n    }\r\n    if (r instanceof Uint8Array) {\r\n      var u = r.byteLength,\r\n        s = new Uint8Array(i.buffer)\r\n      if (256 > u)\r\n        return i.setUint8(o, 196), i.setUint8(o + 1, u), s.set(r, o + 2), 2 + u\r\n      if (65536 > u)\r\n        return i.setUint8(o, 197), i.setUint16(o + 1, u), s.set(r, o + 3), 3 + u\r\n      if (4294967296 > u)\r\n        return i.setUint8(o, 198), i.setUint32(o + 1, u), s.set(r, o + 5), 5 + u\r\n    }\r\n    if ('number' === a) {\r\n      if (!isFinite(r)) throw new Error('Number not finite: ' + r)\r\n      if (Math.floor(r) !== r)\r\n        return i.setUint8(o, 203), i.setFloat64(o + 1, r), 9\r\n      if (r >= 0) {\r\n        if (128 > r) return i.setUint8(o, r), 1\r\n        if (256 > r) return i.setUint8(o, 204), i.setUint8(o + 1, r), 2\r\n        if (65536 > r) return i.setUint8(o, 205), i.setUint16(o + 1, r), 3\r\n        if (4294967296 > r) return i.setUint8(o, 206), i.setUint32(o + 1, r), 5\r\n        throw new Error('Number too big 0x' + r.toString(16))\r\n      }\r\n      if (r >= -32) return i.setInt8(o, r), 1\r\n      if (r >= -128) return i.setUint8(o, 208), i.setInt8(o + 1, r), 2\r\n      if (r >= -32768) return i.setUint8(o, 209), i.setInt16(o + 1, r), 3\r\n      if (r >= -2147483648) return i.setUint8(o, 210), i.setInt32(o + 1, r), 5\r\n      throw new Error('Number too small -0x' + (-r).toString(16).substr(1))\r\n    }\r\n    if (null === r) return i.setUint8(o, 192), 1\r\n    if ('boolean' === a) return i.setUint8(o, r ? 195 : 194), 1\r\n    if ('object' === a) {\r\n      var u,\r\n        f = 0,\r\n        c = Array.isArray(r)\r\n      if (c) u = r.length\r\n      else {\r\n        var d = Object.keys(r)\r\n        u = d.length\r\n      }\r\n      var f\r\n      if (\r\n        (16 > u\r\n          ? (i.setUint8(o, u | (c ? 144 : 128)), (f = 1))\r\n          : 65536 > u\r\n          ? (i.setUint8(o, c ? 220 : 222), i.setUint16(o + 1, u), (f = 3))\r\n          : 4294967296 > u &&\r\n            (i.setUint8(o, c ? 221 : 223), i.setUint32(o + 1, u), (f = 5)),\r\n        c)\r\n      )\r\n        for (var l = 0; u > l; l++) f += e(r[l], i, o + f)\r\n      else\r\n        for (var l = 0; u > l; l++) {\r\n          var v = d[l]\r\n          ;(f += e(v, i, o + f)), (f += e(r[v], i, o + f))\r\n        }\r\n      return f\r\n    }\r\n    throw new Error('Unknown type ' + a)\r\n  }\r\n  function i(r) {\r\n    var t = typeof r\r\n    if ('string' === t) {\r\n      var e = n(r)\r\n      if (32 > e) return 1 + e\r\n      if (256 > e) return 2 + e\r\n      if (65536 > e) return 3 + e\r\n      if (4294967296 > e) return 5 + e\r\n    }\r\n    if (r instanceof Uint8Array) {\r\n      var e = r.byteLength\r\n      if (256 > e) return 2 + e\r\n      if (65536 > e) return 3 + e\r\n      if (4294967296 > e) return 5 + e\r\n    }\r\n    if ('number' === t) {\r\n      if (Math.floor(r) !== r) return 9\r\n      if (r >= 0) {\r\n        if (128 > r) return 1\r\n        if (256 > r) return 2\r\n        if (65536 > r) return 3\r\n        if (4294967296 > r) return 5\r\n        throw new Error('Number too big 0x' + r.toString(16))\r\n      }\r\n      if (r >= -32) return 1\r\n      if (r >= -128) return 2\r\n      if (r >= -32768) return 3\r\n      if (r >= -2147483648) return 5\r\n      throw new Error('Number too small -0x' + r.toString(16).substr(1))\r\n    }\r\n    if ('boolean' === t || null === r) return 1\r\n    if ('object' === t) {\r\n      var e,\r\n        o = 0\r\n      if (Array.isArray(r)) {\r\n        e = r.length\r\n        for (var a = 0; e > a; a++) o += i(r[a])\r\n      } else {\r\n        var u = Object.keys(r)\r\n        e = u.length\r\n        for (var a = 0; e > a; a++) {\r\n          var s = u[a]\r\n          o += i(s) + i(r[s])\r\n        }\r\n      }\r\n      if (16 > e) return 1 + o\r\n      if (65536 > e) return 3 + o\r\n      if (4294967296 > e) return 5 + o\r\n      throw new Error('Array or object too long 0x' + e.toString(16))\r\n    }\r\n    throw new Error('Unknown type ' + t)\r\n  }\r\n  function o(r) {\r\n    var t = new ArrayBuffer(i(r)),\r\n      n = new DataView(t)\r\n    return e(r, n, 0), new Uint8Array(t)\r\n  }\r\n  function a(r, t, n) {\r\n    return t ? new r(t.buffer, t.byteOffset, t.byteLength / (n || 1)) : void 0\r\n  }\r\n  function u(r) {\r\n    return a(DataView, r)\r\n  }\r\n  function s(r) {\r\n    return a(Uint8Array, r)\r\n  }\r\n  function f(r) {\r\n    return a(Int8Array, r)\r\n  }\r\n  function c(r) {\r\n    return a(Int32Array, r, 4)\r\n  }\r\n  function d(r) {\r\n    return a(Float32Array, r, 4)\r\n  }\r\n  function l(r, t) {\r\n    var n = r.length / 2\r\n    t || (t = new Int16Array(n))\r\n    for (var e = 0, i = 0; n > e; ++e, i += 2)\r\n      t[e] = (r[i] << 8) ^ (r[i + 1] << 0)\r\n    return t\r\n  }\r\n  function v(r, t) {\r\n    var n = r.length\r\n    t || (t = new Uint8Array(2 * n))\r\n    for (var e = u(t), i = 0; n > i; ++i) e.setInt16(2 * i, r[i])\r\n    return s(t)\r\n  }\r\n  function g(r, t) {\r\n    var n = r.length / 4\r\n    t || (t = new Int32Array(n))\r\n    for (var e = 0, i = 0; n > e; ++e, i += 4)\r\n      t[e] = (r[i] << 24) ^ (r[i + 1] << 16) ^ (r[i + 2] << 8) ^ (r[i + 3] << 0)\r\n    return t\r\n  }\r\n  function L(r, t) {\r\n    var n = r.length\r\n    t || (t = new Uint8Array(4 * n))\r\n    for (var e = u(t), i = 0; n > i; ++i) e.setInt32(4 * i, r[i])\r\n    return s(t)\r\n  }\r\n  function h(r, t) {\r\n    var n = r.length\r\n    t || (t = new Float32Array(n / 4))\r\n    for (var e = u(t), i = u(r), o = 0, a = 0, s = n / 4; s > o; ++o, a += 4)\r\n      e.setFloat32(a, i.getFloat32(a), !0)\r\n    return t\r\n  }\r\n  function y(r, t, n) {\r\n    var e = r.length,\r\n      i = 1 / t\r\n    n || (n = new Float32Array(e))\r\n    for (var o = 0; e > o; ++o) n[o] = r[o] * i\r\n    return n\r\n  }\r\n  function m(r, t, n) {\r\n    var e = r.length\r\n    n || (n = new Int32Array(e))\r\n    for (var i = 0; e > i; ++i) n[i] = Math.round(r[i] * t)\r\n    return n\r\n  }\r\n  function p(r, t) {\r\n    var n, e\r\n    if (!t) {\r\n      var i = 0\r\n      for (n = 0, e = r.length; e > n; n += 2) i += r[n + 1]\r\n      t = new r.constructor(i)\r\n    }\r\n    var o = 0\r\n    for (n = 0, e = r.length; e > n; n += 2)\r\n      for (var a = r[n], u = r[n + 1], s = 0; u > s; ++s) (t[o] = a), ++o\r\n    return t\r\n  }\r\n  function U(r) {\r\n    if (0 === r.length) return new Int32Array()\r\n    var t,\r\n      n,\r\n      e = 2\r\n    for (t = 1, n = r.length; n > t; ++t) r[t - 1] !== r[t] && (e += 2)\r\n    var i = new Int32Array(e),\r\n      o = 0,\r\n      a = 1\r\n    for (t = 1, n = r.length; n > t; ++t)\r\n      r[t - 1] !== r[t]\r\n        ? ((i[o] = r[t - 1]), (i[o + 1] = a), (a = 1), (o += 2))\r\n        : ++a\r\n    return (i[o] = r[r.length - 1]), (i[o + 1] = a), i\r\n  }\r\n  function b(r, t) {\r\n    var n = r.length\r\n    t || (t = new r.constructor(n)), n && (t[0] = r[0])\r\n    for (var e = 1; n > e; ++e) t[e] = r[e] + t[e - 1]\r\n    return t\r\n  }\r\n  function I(r, t) {\r\n    var n = r.length\r\n    t || (t = new r.constructor(n)), (t[0] = r[0])\r\n    for (var e = 1; n > e; ++e) t[e] = r[e] - r[e - 1]\r\n    return t\r\n  }\r\n  function w(r, t) {\r\n    var n,\r\n      e,\r\n      i = r instanceof Int8Array ? 127 : 32767,\r\n      o = -i - 1,\r\n      a = r.length\r\n    if (!t) {\r\n      var u = 0\r\n      for (n = 0; a > n; ++n) r[n] < i && r[n] > o && ++u\r\n      t = new Int32Array(u)\r\n    }\r\n    for (n = 0, e = 0; a > n; ) {\r\n      for (var s = 0; r[n] === i || r[n] === o; ) (s += r[n]), ++n\r\n      ;(s += r[n]), ++n, (t[e] = s), ++e\r\n    }\r\n    return t\r\n  }\r\n  function C(r, t) {\r\n    var n,\r\n      e = t ? 127 : 32767,\r\n      i = -e - 1,\r\n      o = r.length,\r\n      a = 0\r\n    for (n = 0; o > n; ++n) {\r\n      var u = r[n]\r\n      0 === u\r\n        ? ++a\r\n        : (a +=\r\n            u === e || u === i\r\n              ? 2\r\n              : u > 0\r\n              ? Math.ceil(u / e)\r\n              : Math.ceil(u / i))\r\n    }\r\n    var s = t ? new Int8Array(a) : new Int16Array(a),\r\n      f = 0\r\n    for (n = 0; o > n; ++n) {\r\n      var u = r[n]\r\n      if (u >= 0) for (; u >= e; ) (s[f] = e), ++f, (u -= e)\r\n      else for (; i >= u; ) (s[f] = i), ++f, (u -= i)\r\n      ;(s[f] = u), ++f\r\n    }\r\n    return s\r\n  }\r\n  function A(r, t) {\r\n    return b(p(r), t)\r\n  }\r\n  function x(r) {\r\n    return U(I(r))\r\n  }\r\n  function M(r, t, n) {\r\n    return y(p(r, c(n)), t, n)\r\n  }\r\n  function F(r, t) {\r\n    return U(m(r, t))\r\n  }\r\n  function S(r, t, n) {\r\n    return y(b(r, c(n)), t, n)\r\n  }\r\n  function E(r, t, n) {\r\n    return I(m(r, t), n)\r\n  }\r\n  function N(r, t, n) {\r\n    return y(w(r, c(n)), t, n)\r\n  }\r\n  function O(r, t, n) {\r\n    var e = w(r, c(n))\r\n    return S(e, t, d(e))\r\n  }\r\n  function T(r, t, n) {\r\n    return C(E(r, t), n)\r\n  }\r\n  function k(r) {\r\n    var t = u(r),\r\n      n = t.getInt32(0),\r\n      e = t.getInt32(4),\r\n      i = r.subarray(8, 12),\r\n      r = r.subarray(12)\r\n    return [n, r, e, i]\r\n  }\r\n  function j(r, t, n, e) {\r\n    var i = new ArrayBuffer(12 + e.byteLength),\r\n      o = new Uint8Array(i),\r\n      a = new DataView(i)\r\n    return a.setInt32(0, r), a.setInt32(4, t), n && o.set(n, 8), o.set(e, 12), o\r\n  }\r\n  function q(r) {\r\n    var t = r.length,\r\n      n = s(r)\r\n    return j(2, t, void 0, n)\r\n  }\r\n  function D(r) {\r\n    var t = r.length,\r\n      n = L(r)\r\n    return j(4, t, void 0, n)\r\n  }\r\n  function P(r, t) {\r\n    var n = r.length / t,\r\n      e = L([t]),\r\n      i = s(r)\r\n    return j(5, n, e, i)\r\n  }\r\n  function z(r) {\r\n    var t = r.length,\r\n      n = L(U(r))\r\n    return j(6, t, void 0, n)\r\n  }\r\n  function B(r) {\r\n    var t = r.length,\r\n      n = L(x(r))\r\n    return j(8, t, void 0, n)\r\n  }\r\n  function V(r, t) {\r\n    var n = r.length,\r\n      e = L([t]),\r\n      i = L(F(r, t))\r\n    return j(9, n, e, i)\r\n  }\r\n  function G(r, t) {\r\n    var n = r.length,\r\n      e = L([t]),\r\n      i = v(T(r, t))\r\n    return j(10, n, e, i)\r\n  }\r\n  function R(r) {\r\n    var t = {}\r\n    return (\r\n      rr.forEach(function (n) {\r\n        void 0 !== r[n] && (t[n] = r[n])\r\n      }),\r\n      r.bondAtomList && (t.bondAtomList = D(r.bondAtomList)),\r\n      r.bondOrderList && (t.bondOrderList = q(r.bondOrderList)),\r\n      (t.xCoordList = G(r.xCoordList, 1e3)),\r\n      (t.yCoordList = G(r.yCoordList, 1e3)),\r\n      (t.zCoordList = G(r.zCoordList, 1e3)),\r\n      r.bFactorList && (t.bFactorList = G(r.bFactorList, 100)),\r\n      r.atomIdList && (t.atomIdList = B(r.atomIdList)),\r\n      r.altLocList && (t.altLocList = z(r.altLocList)),\r\n      r.occupancyList && (t.occupancyList = V(r.occupancyList, 100)),\r\n      (t.groupIdList = B(r.groupIdList)),\r\n      (t.groupTypeList = D(r.groupTypeList)),\r\n      r.secStructList && (t.secStructList = q(r.secStructList, 1)),\r\n      r.insCodeList && (t.insCodeList = z(r.insCodeList)),\r\n      r.sequenceIndexList && (t.sequenceIndexList = B(r.sequenceIndexList)),\r\n      (t.chainIdList = P(r.chainIdList, 4)),\r\n      r.chainNameList && (t.chainNameList = P(r.chainNameList, 4)),\r\n      t\r\n    )\r\n  }\r\n  function H(r) {\r\n    function t(r) {\r\n      for (var t = {}, n = 0; r > n; n++) {\r\n        var e = o()\r\n        t[e] = o()\r\n      }\r\n      return t\r\n    }\r\n    function n(t) {\r\n      var n = r.subarray(a, a + t)\r\n      return (a += t), n\r\n    }\r\n    function e(t) {\r\n      var n = r.subarray(a, a + t)\r\n      a += t\r\n      var e = 65535\r\n      if (t > e) {\r\n        for (var i = [], o = 0; o < n.length; o += e)\r\n          i.push(String.fromCharCode.apply(null, n.subarray(o, o + e)))\r\n        return i.join('')\r\n      }\r\n      return String.fromCharCode.apply(null, n)\r\n    }\r\n    function i(r) {\r\n      for (var t = new Array(r), n = 0; r > n; n++) t[n] = o()\r\n      return t\r\n    }\r\n    function o() {\r\n      var o,\r\n        s,\r\n        f = r[a]\r\n      if (0 === (128 & f)) return a++, f\r\n      if (128 === (240 & f)) return (s = 15 & f), a++, t(s)\r\n      if (144 === (240 & f)) return (s = 15 & f), a++, i(s)\r\n      if (160 === (224 & f)) return (s = 31 & f), a++, e(s)\r\n      if (224 === (224 & f)) return (o = u.getInt8(a)), a++, o\r\n      switch (f) {\r\n        case 192:\r\n          return a++, null\r\n        case 194:\r\n          return a++, !1\r\n        case 195:\r\n          return a++, !0\r\n        case 196:\r\n          return (s = u.getUint8(a + 1)), (a += 2), n(s)\r\n        case 197:\r\n          return (s = u.getUint16(a + 1)), (a += 3), n(s)\r\n        case 198:\r\n          return (s = u.getUint32(a + 1)), (a += 5), n(s)\r\n        case 202:\r\n          return (o = u.getFloat32(a + 1)), (a += 5), o\r\n        case 203:\r\n          return (o = u.getFloat64(a + 1)), (a += 9), o\r\n        case 204:\r\n          return (o = r[a + 1]), (a += 2), o\r\n        case 205:\r\n          return (o = u.getUint16(a + 1)), (a += 3), o\r\n        case 206:\r\n          return (o = u.getUint32(a + 1)), (a += 5), o\r\n        case 208:\r\n          return (o = u.getInt8(a + 1)), (a += 2), o\r\n        case 209:\r\n          return (o = u.getInt16(a + 1)), (a += 3), o\r\n        case 210:\r\n          return (o = u.getInt32(a + 1)), (a += 5), o\r\n        case 217:\r\n          return (s = u.getUint8(a + 1)), (a += 2), e(s)\r\n        case 218:\r\n          return (s = u.getUint16(a + 1)), (a += 3), e(s)\r\n        case 219:\r\n          return (s = u.getUint32(a + 1)), (a += 5), e(s)\r\n        case 220:\r\n          return (s = u.getUint16(a + 1)), (a += 3), i(s)\r\n        case 221:\r\n          return (s = u.getUint32(a + 1)), (a += 5), i(s)\r\n        case 222:\r\n          return (s = u.getUint16(a + 1)), (a += 3), t(s)\r\n        case 223:\r\n          return (s = u.getUint32(a + 1)), (a += 5), t(s)\r\n      }\r\n      throw new Error('Unknown type 0x' + f.toString(16))\r\n    }\r\n    var a = 0,\r\n      u = new DataView(r.buffer)\r\n    return o()\r\n  }\r\n  function W(r, t, n, e) {\r\n    switch (r) {\r\n      case 1:\r\n        return h(t)\r\n      case 2:\r\n        return f(t)\r\n      case 3:\r\n        return l(t)\r\n      case 4:\r\n        return g(t)\r\n      case 5:\r\n        return s(t)\r\n      case 6:\r\n        return p(g(t), new Uint8Array(n))\r\n      case 7:\r\n        return p(g(t))\r\n      case 8:\r\n        return A(g(t))\r\n      case 9:\r\n        return M(g(t), g(e)[0])\r\n      case 10:\r\n        return O(l(t), g(e)[0])\r\n      case 11:\r\n        return y(l(t), g(e)[0])\r\n      case 12:\r\n        return N(l(t), g(e)[0])\r\n      case 13:\r\n        return N(f(t), g(e)[0])\r\n      case 14:\r\n        return w(l(t))\r\n      case 15:\r\n        return w(f(t))\r\n    }\r\n  }\r\n  function X(r, t) {\r\n    t = t || {}\r\n    var n = t.ignoreFields,\r\n      e = {}\r\n    return (\r\n      nr.forEach(function (t) {\r\n        var i = n ? -1 !== n.indexOf(t) : !1,\r\n          o = r[t]\r\n        i ||\r\n          void 0 === o ||\r\n          (o instanceof Uint8Array ? (e[t] = W.apply(null, k(o))) : (e[t] = o))\r\n      }),\r\n      e\r\n    )\r\n  }\r\n  function J(r) {\r\n    return String.fromCharCode.apply(null, r).replace(/\\0/g, '')\r\n  }\r\n  function K(r, t, n) {\r\n    n = n || {}\r\n    var e,\r\n      i,\r\n      o,\r\n      a,\r\n      u,\r\n      s,\r\n      f = n.firstModelOnly,\r\n      c = t.onModel,\r\n      d = t.onChain,\r\n      l = t.onGroup,\r\n      v = t.onAtom,\r\n      g = t.onBond,\r\n      L = 0,\r\n      h = 0,\r\n      y = 0,\r\n      m = 0,\r\n      p = 0,\r\n      U = -1,\r\n      b = r.chainNameList,\r\n      I = r.secStructList,\r\n      w = r.insCodeList,\r\n      C = r.sequenceIndexList,\r\n      A = r.atomIdList,\r\n      x = r.bFactorList,\r\n      M = r.altLocList,\r\n      F = r.occupancyList,\r\n      S = r.bondAtomList,\r\n      E = r.bondOrderList\r\n    for (e = 0, i = r.chainsPerModel.length; i > e && !(f && L > 0); ++e) {\r\n      var N = r.chainsPerModel[L]\r\n      for (c && c({ chainCount: N, modelIndex: L }), o = 0; N > o; ++o) {\r\n        var O = r.groupsPerChain[h]\r\n        if (d) {\r\n          var T = J(r.chainIdList.subarray(4 * h, 4 * h + 4)),\r\n            k = null\r\n          b && (k = J(b.subarray(4 * h, 4 * h + 4))),\r\n            d({\r\n              groupCount: O,\r\n              chainIndex: h,\r\n              modelIndex: L,\r\n              chainId: T,\r\n              chainName: k\r\n            })\r\n        }\r\n        for (a = 0; O > a; ++a) {\r\n          var j = r.groupList[r.groupTypeList[y]],\r\n            q = j.atomNameList.length\r\n          if (l) {\r\n            var D = null\r\n            I && (D = I[y])\r\n            var P = null\r\n            r.insCodeList && (P = String.fromCharCode(w[y]))\r\n            var z = null\r\n            C && (z = C[y]),\r\n              l({\r\n                atomCount: q,\r\n                groupIndex: y,\r\n                chainIndex: h,\r\n                modelIndex: L,\r\n                groupId: r.groupIdList[y],\r\n                groupType: r.groupTypeList[y],\r\n                groupName: j.groupName,\r\n                singleLetterCode: j.singleLetterCode,\r\n                chemCompType: j.chemCompType,\r\n                secStruct: D,\r\n                insCode: P,\r\n                sequenceIndex: z\r\n              })\r\n          }\r\n          for (u = 0; q > u; ++u) {\r\n            if (v) {\r\n              var B = null\r\n              A && (B = A[m])\r\n              var V = null\r\n              x && (V = x[m])\r\n              var G = null\r\n              M && (G = String.fromCharCode(M[m]))\r\n              var R = null\r\n              F && (R = F[m]),\r\n                v({\r\n                  atomIndex: m,\r\n                  groupIndex: y,\r\n                  chainIndex: h,\r\n                  modelIndex: L,\r\n                  atomId: B,\r\n                  element: j.elementList[u],\r\n                  atomName: j.atomNameList[u],\r\n                  formalCharge: j.formalChargeList[u],\r\n                  xCoord: r.xCoordList[m],\r\n                  yCoord: r.yCoordList[m],\r\n                  zCoord: r.zCoordList[m],\r\n                  bFactor: V,\r\n                  altLoc: G,\r\n                  occupancy: R\r\n                })\r\n            }\r\n            m += 1\r\n          }\r\n          if (g) {\r\n            var H = j.bondAtomList\r\n            for (u = 0, s = j.bondOrderList.length; s > u; ++u)\r\n              g({\r\n                atomIndex1: m - q + H[2 * u],\r\n                atomIndex2: m - q + H[2 * u + 1],\r\n                bondOrder: j.bondOrderList[u]\r\n              })\r\n          }\r\n          y += 1\r\n        }\r\n        h += 1\r\n      }\r\n      if (((p = U + 1), (U = m - 1), g && S))\r\n        for (u = 0, s = S.length; s > u; u += 2) {\r\n          var W = S[u],\r\n            X = S[u + 1]\r\n          ;((W >= p && U >= W) || (X >= p && U >= X)) &&\r\n            g({ atomIndex1: W, atomIndex2: X, bondOrder: E ? E[u / 2] : null })\r\n        }\r\n      L += 1\r\n    }\r\n  }\r\n  function Q(r) {\r\n    return o(R(r))\r\n  }\r\n  function Y(r, t) {\r\n    r instanceof ArrayBuffer && (r = new Uint8Array(r))\r\n    var n\r\n    return (n = r instanceof Uint8Array ? H(r) : r), X(n, t)\r\n  }\r\n  function Z(r, t, n, e) {\r\n    function i() {\r\n      try {\r\n        var r = Y(o.response)\r\n        n(r)\r\n      } catch (t) {\r\n        e(t)\r\n      }\r\n    }\r\n    var o = new XMLHttpRequest()\r\n    o.addEventListener('load', i, !0),\r\n      o.addEventListener('error', e, !0),\r\n      (o.responseType = 'arraybuffer'),\r\n      o.open('GET', t + r.toUpperCase()),\r\n      o.send()\r\n  }\r\n  function $(r, t, n) {\r\n    Z(r, or, t, n)\r\n  }\r\n  function _(r, t, n) {\r\n    Z(r, ar, t, n)\r\n  }\r\n  var rr = [\r\n      'mmtfVersion',\r\n      'mmtfProducer',\r\n      'unitCell',\r\n      'spaceGroup',\r\n      'structureId',\r\n      'title',\r\n      'depositionDate',\r\n      'releaseDate',\r\n      'experimentalMethods',\r\n      'resolution',\r\n      'rFree',\r\n      'rWork',\r\n      'bioAssemblyList',\r\n      'ncsOperatorList',\r\n      'entityList',\r\n      'groupList',\r\n      'numBonds',\r\n      'numAtoms',\r\n      'numGroups',\r\n      'numChains',\r\n      'numModels',\r\n      'groupsPerChain',\r\n      'chainsPerModel'\r\n    ],\r\n    tr = [\r\n      'xCoordList',\r\n      'yCoordList',\r\n      'zCoordList',\r\n      'groupIdList',\r\n      'groupTypeList',\r\n      'chainIdList',\r\n      'bFactorList',\r\n      'atomIdList',\r\n      'altLocList',\r\n      'occupancyList',\r\n      'secStructList',\r\n      'insCodeList',\r\n      'sequenceIndexList',\r\n      'chainNameList',\r\n      'bondAtomList',\r\n      'bondOrderList'\r\n    ],\r\n    nr = rr.concat(tr),\r\n    er = 'v1.1.0dev',\r\n    ir = '//mmtf.rcsb.org/v1.0/',\r\n    or = ir + 'full/',\r\n    ar = ir + 'reduced/'\r\n  ;(r.encode = Q),\r\n    (r.decode = Y),\r\n    (r.traverse = K),\r\n    (r.fetch = $),\r\n    (r.fetchReduced = _),\r\n    (r.version = er),\r\n    (r.fetchUrl = or),\r\n    (r.fetchReducedUrl = ar),\r\n    (r.encodeMsgpack = o),\r\n    (r.encodeMmtf = R),\r\n    (r.decodeMsgpack = H),\r\n    (r.decodeMmtf = X)\r\n})\r\n",
		"import Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport MMTF from '../../vendors/mmtf'\r\nimport StructuralElement from '../../chem/StructuralElement'\r\nimport { isArrayBuffer, isUndefined } from 'lodash'\r\nimport { Matrix4, Vector3 } from 'three'\r\n\r\nconst {\r\n  Complex,\r\n  Chain,\r\n  Atom,\r\n  Element,\r\n  Helix,\r\n  Sheet,\r\n  Strand,\r\n  Bond,\r\n  Assembly,\r\n  Molecule\r\n} = chem\r\n\r\nclass ArrayComparator {\r\n  constructor(original) {\r\n    this._original = Array.from(original)\r\n    this._original.sort()\r\n\r\n    this._sum = 0\r\n    for (let i = 0; i < this._original.length; ++i) {\r\n      this._sum += this._original[i]\r\n    }\r\n  }\r\n\r\n  compare(candidate) {\r\n    const len = candidate.length\r\n    if (len !== this._original.length) {\r\n      return false\r\n    }\r\n\r\n    let sum = 0\r\n    let i\r\n    for (i = 0; i < len; ++i) {\r\n      sum += candidate[i]\r\n    }\r\n\r\n    if (sum !== this._sum) {\r\n      return false\r\n    }\r\n\r\n    const sorted = Array.from(candidate)\r\n    sorted.sort()\r\n\r\n    for (i = 0; i < len; ++i) {\r\n      if (sorted[i] !== this._original[i]) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\nArrayComparator.prototype.constructor = ArrayComparator\r\n\r\nconst StructuralElementType = StructuralElement.Type\r\n\r\n// see https://github.com/rcsb/mmtf-javascript/blob/master/src/mmtf-traverse.js\r\nconst secStructToType = [\r\n  StructuralElementType.HELIX_PI, // 0\r\n  StructuralElementType.BEND, // 1\r\n  StructuralElementType.HELIX_ALPHA, // 2\r\n  StructuralElementType.STRAND, // 3\r\n  StructuralElementType.HELIX_310, // 4\r\n  StructuralElementType.BRIDGE, // 5\r\n  StructuralElementType.TURN, // 6\r\n  StructuralElementType.COIL // 7\r\n]\r\n\r\nfunction getFirstByte(buf) {\r\n  const bytes = new Uint8Array(buf, 0, 1)\r\n  return bytes[0]\r\n}\r\n\r\nclass MMTFParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this._options.fileType = 'mmtf'\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    // check if it's binary MessagePack format containing a map (dictionary)\r\n    // see https://github.com/msgpack/msgpack/blob/master/spec.md\r\n    return isArrayBuffer(data) && (getFirstByte(data) | 1) === 0xdf\r\n  }\r\n\r\n  _onModel(_modelData) {}\r\n\r\n  _onChain(chainData) {\r\n    if (chainData.modelIndex !== 0) {\r\n      return\r\n    }\r\n\r\n    const chain = new Chain(this._complex, chainData.chainName)\r\n    this._complex._chains[chainData.chainIndex] = chain\r\n    chain._index = chainData.chainIndex\r\n  }\r\n\r\n  _onGroup(groupData) {\r\n    if (groupData.modelIndex !== 0) {\r\n      return\r\n    }\r\n\r\n    if (this.settings.now.nowater) {\r\n      // skip water\r\n      if (groupData.groupName === 'HOH' || groupData.groupName === 'WAT') {\r\n        return\r\n      }\r\n    }\r\n\r\n    const chain = this._complex._chains[groupData.chainIndex]\r\n    const icode = !groupData.insCode.charCodeAt(0) ? '' : groupData.insCode\r\n    const residue = chain.addResidue(\r\n      groupData.groupName,\r\n      groupData.groupId,\r\n      icode\r\n    )\r\n    residue._index = groupData.groupIndex\r\n\r\n    this._updateSecStructure(this._complex, residue, groupData)\r\n  }\r\n\r\n  _onAtom(atomData) {\r\n    if (atomData.modelIndex !== 0) {\r\n      return\r\n    }\r\n\r\n    const altLoc = !atomData.altLoc.charCodeAt(0) ? '' : atomData.altLoc\r\n    const atom = new Atom(\r\n      atomData.groupIndex, // we store residue index here to replace it later with actual reference\r\n      atomData.atomName,\r\n      Element.getByName(atomData.element.toUpperCase()),\r\n      new Vector3(atomData.xCoord, atomData.yCoord, atomData.zCoord),\r\n      Element.Role[atomData.atomName],\r\n      false, // hetero atoms will be marked later\r\n      atomData.atomId,\r\n      altLoc,\r\n      atomData.occupancy,\r\n      atomData.bFactor,\r\n      atomData.formalCharge\r\n    )\r\n\r\n    this._complex._atoms[atomData.atomIndex] = atom\r\n    atom.index = atomData.atomIndex\r\n\r\n    this._serialAtomMap[atomData.atomId] = atom\r\n  }\r\n\r\n  _onBond(bondData) {\r\n    const right = Math.max(bondData.atomIndex1, bondData.atomIndex2)\r\n    if (right >= this._complex._atoms.length) {\r\n      return\r\n    }\r\n    const left = Math.min(bondData.atomIndex1, bondData.atomIndex2)\r\n    this._complex.addBond(\r\n      this._complex._atoms[left],\r\n      this._complex._atoms[right],\r\n      bondData.bondOrder,\r\n      Bond.BondType.UNKNOWN,\r\n      true\r\n    )\r\n  }\r\n\r\n  _updateSecStructure(complex, residue, groupData) {\r\n    const helixClasses = [3, -1, 1, -1, 5]\r\n\r\n    if (!isUndefined(groupData) && groupData.secStruct === this._ssType) {\r\n      residue._secondary = this._ssStruct\r\n      if (this._ssStruct) {\r\n        this._ssStruct.term = residue\r\n      }\r\n      return\r\n    }\r\n\r\n    if (!isUndefined(groupData)) {\r\n      // start new secondary structure\r\n      const type = secStructToType[groupData.secStruct]\r\n      this._ssType = groupData.secStruct\r\n      this._ssStart = residue\r\n\r\n      let struct = null\r\n      switch (this._ssType) {\r\n        case -1: // undefined\r\n        case 7: // coil\r\n          break\r\n        case 0: // pi helix\r\n        case 2: // alpha helix\r\n        case 4: // 3-10 helix\r\n          struct = new Helix(\r\n            helixClasses[this._ssType],\r\n            residue,\r\n            residue,\r\n            0,\r\n            '',\r\n            '',\r\n            0\r\n          )\r\n          complex._helices.push(struct)\r\n          break\r\n        case 3: {\r\n          // extended\r\n          const sheet = new Sheet('', 0)\r\n          complex._sheets.push(sheet)\r\n          struct = new Strand(sheet, residue, residue, 0, null, null)\r\n          break\r\n        }\r\n        default:\r\n          if (type !== undefined) {\r\n            struct = new StructuralElement(type, residue, residue)\r\n          }\r\n          break\r\n      }\r\n\r\n      this._ssStruct = struct\r\n      residue._secondary = struct\r\n      if (struct) {\r\n        complex.structures.push(struct)\r\n      }\r\n    }\r\n  }\r\n\r\n  _updateMolecules(mmtfData) {\r\n    const entities = mmtfData.entityList\r\n    if (!entities) {\r\n      return\r\n    }\r\n\r\n    const chainsInModel0 = mmtfData.chainsPerModel[0]\r\n    for (let i = 0; i < entities.length; i++) {\r\n      const entity = entities[i]\r\n      const chains = entity.chainIndexList\r\n      let residues = []\r\n      for (let j = 0; j < chains.length; j++) {\r\n        const chainIndex = chains[j]\r\n        // skip chains in models other than the first one\r\n        if (chainIndex >= chainsInModel0) {\r\n          continue\r\n        }\r\n        const chain = this._complex._chains[chainIndex]\r\n        residues = residues.concat(chain._residues.slice())\r\n      }\r\n      const molecule = new Molecule(this._complex, entity.description, i + 1)\r\n      molecule.residues = residues\r\n      this._complex._molecules[i] = molecule\r\n    }\r\n  }\r\n\r\n  // populate complex with chains, residues and atoms\r\n  _traverse(mmtfData) {\r\n    const self = this\r\n\r\n    // get metadata\r\n    const { metadata } = this._complex\r\n    metadata.id = mmtfData.structureId\r\n    metadata.title = []\r\n    metadata.title[0] = mmtfData.title\r\n    metadata.date = mmtfData.releaseDate\r\n    metadata.format = 'mmtf'\r\n\r\n    // create event callback functions\r\n    const eventCallbacks = {\r\n      onModel(modelData) {\r\n        self._onModel(modelData)\r\n      },\r\n      onChain(chainData) {\r\n        self._onChain(chainData)\r\n      },\r\n      onGroup(groupData) {\r\n        self._onGroup(groupData)\r\n      },\r\n      onAtom(atomData) {\r\n        self._onAtom(atomData)\r\n      },\r\n      onBond(bondData) {\r\n        self._onBond(bondData)\r\n      }\r\n    }\r\n\r\n    // temporary variables used during traversal to track secondary structures\r\n    this._ssType = -1\r\n    this._ssStruct = null\r\n    this._ssStart = null\r\n\r\n    // traverse the structure and listen to the events\r\n    MMTF.traverse(mmtfData, eventCallbacks)\r\n\r\n    this._updateSecStructure(this._complex)\r\n    this._updateMolecules(mmtfData)\r\n  }\r\n\r\n  // During traversal atoms and residues don't come sequentially\r\n  // so a residue for certain atom can be unavailable. Thus we\r\n  // store residue index in atom.\r\n  // This function being called after traversal replaces the index\r\n  // with actual reference, and also populates atom lists in residues.\r\n  _linkAtomsToResidues() {\r\n    for (let i = 0; i < this._complex._atoms.length; ++i) {\r\n      const atom = this._complex._atoms[i]\r\n      const residue = this._complex._residues[atom.residue]\r\n      atom.residue = residue\r\n      residue._atoms.push(atom)\r\n    }\r\n  }\r\n\r\n  _findSynonymousChains() {\r\n    const named = {}\r\n    for (let i = 0; i < this._complex._chains.length; ++i) {\r\n      const chain = this._complex._chains[i]\r\n      const name = chain.getName()\r\n      if (!named.hasOwnProperty(name)) {\r\n        named[name] = []\r\n      }\r\n\r\n      named[name].push(chain._index)\r\n    }\r\n\r\n    return named\r\n  }\r\n\r\n  // NOTE: This function relies on original chain indices, so it must be called before any magic happens to chains.\r\n  _parseAssemblyInfo(mmtfData) {\r\n    let i\r\n    let j\r\n    let k\r\n    const assemblies = []\r\n    const { logger } = this\r\n\r\n    for (i = 0; i < mmtfData.bioAssemblyList.length; ++i) {\r\n      const baInfo = mmtfData.bioAssemblyList[i]\r\n      if (baInfo.transformList.length === 0) {\r\n        continue\r\n      }\r\n\r\n      const chains = baInfo.transformList[0].chainIndexList\r\n      const chainListCheck = new ArrayComparator(chains)\r\n\r\n      // build list of chain names\r\n      const chainNames = {}\r\n      for (j = 0; j < chains.length; ++j) {\r\n        chainNames[this._complex._chains[chains[j]].getName()] = 1\r\n      }\r\n\r\n      // all chains with the same name should belong to assembly if one of them belongs\r\n      const allChains = []\r\n      let name\r\n      for (name in chainNames) {\r\n        if (chainNames.hasOwnProperty(name)) {\r\n          // just concat arrays -- there should be no duplicates\r\n          Array.prototype.push.apply(allChains, this._chainsByName[name])\r\n        }\r\n      }\r\n      if (!chainListCheck.compare(allChains)) {\r\n        // assembly is missing some of the chains\r\n        logger.debug(\r\n          'MMTF: Assembly is missing some of the synonymous chains. Skipping...'\r\n        )\r\n      }\r\n\r\n      const a = new Assembly(this._complex)\r\n\r\n      // add chains to assembly\r\n      for (name in chainNames) {\r\n        if (chainNames.hasOwnProperty(name)) {\r\n          a.addChain(name)\r\n        }\r\n      }\r\n\r\n      // add unique matrices to assembly\r\n      a.addMatrix(\r\n        new Matrix4().fromArray(baInfo.transformList[0].matrix).transpose()\r\n      )\r\n      for (j = 1; j < baInfo.transformList.length; ++j) {\r\n        const transform = baInfo.transformList[j]\r\n\r\n        if (!chainListCheck.compare(transform.chainIndexList)) {\r\n          // list of chains for this transform doesn't match that for other transforms\r\n          // this is illegal in our structure\r\n          logger.debug(\r\n            'MMTF: Chain lists differ for different transforms in one assembly. Skipping...'\r\n          )\r\n          continue\r\n        }\r\n\r\n        const m = new Matrix4().fromArray(transform.matrix).transpose()\r\n\r\n        // check if matrix is already in the list\r\n        for (k = 0; k < a.matrices.length; ++k) {\r\n          if (a.matrices[k].equals(m)) {\r\n            break\r\n          }\r\n        }\r\n\r\n        if (k === a.matrices.length) {\r\n          a.addMatrix(m)\r\n        }\r\n      }\r\n\r\n      a.finalize()\r\n      assemblies.push(a)\r\n    }\r\n\r\n    return assemblies\r\n  }\r\n\r\n  // NOTE: This function relies on original chain indices, so it must be called before any magic happens to chains.\r\n  _markHeteroAtoms(mmtfData) {\r\n    const chainsInModel0 = mmtfData.chainsPerModel[0]\r\n    for (let i = 0; i < mmtfData.entityList.length; ++i) {\r\n      const entity = mmtfData.entityList[i]\r\n      if (entity.type !== 'polymer') {\r\n        for (let j = 0; j < entity.chainIndexList.length; ++j) {\r\n          const chainIndex = entity.chainIndexList[j]\r\n          // skip chains in models other than the first one\r\n          if (chainIndex >= chainsInModel0) {\r\n            continue\r\n          }\r\n          const chain = this._complex._chains[chainIndex]\r\n          for (let k = 0; k < chain._residues.length; ++k) {\r\n            const res = chain._residues[k]\r\n            for (let m = 0; m < res._atoms.length; ++m) {\r\n              res._atoms[m].het = true\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // joins chains with the same name into single chain\r\n  _joinSynonymousChains() {\r\n    let i\r\n    let j\r\n\r\n    const primaryChainsArray = []\r\n    const primaryChainsHash = {}\r\n\r\n    // join chains\r\n    for (i = 0; i < this._complex._chains.length; ++i) {\r\n      const chain = this._complex._chains[i]\r\n      const name = chain.getName()\r\n      if (!primaryChainsHash.hasOwnProperty(name)) {\r\n        // new name -- this is a primary chain\r\n        primaryChainsHash[name] = chain\r\n        chain._index = primaryChainsArray.length // update index as this array will later replace original chain list\r\n        primaryChainsArray.push(chain)\r\n        continue\r\n      }\r\n\r\n      // this chain should be joined with the primary chain of the same name\r\n      const primary = primaryChainsHash[name]\r\n      for (j = 0; j < chain._residues.length; ++j) {\r\n        const residue = chain._residues[j]\r\n        primary._residues.push(residue)\r\n        residue._chain = primary\r\n      }\r\n    }\r\n\r\n    // replace chains list with one containing only primary chains\r\n    // dropping references to all chains but primary\r\n    this._complex._chains = primaryChainsArray\r\n  }\r\n\r\n  parseSync() {\r\n    const mmtfData = MMTF.decode(this._data)\r\n\r\n    this._complex = new Complex()\r\n    this._serialAtomMap = {} // filled during traversal\r\n\r\n    this._traverse(mmtfData)\r\n    this._linkAtomsToResidues()\r\n    this._markHeteroAtoms(mmtfData)\r\n    this._chainsByName = this._findSynonymousChains()\r\n    Array.prototype.push.apply(\r\n      this._complex.units,\r\n      this._parseAssemblyInfo(mmtfData)\r\n    )\r\n    this._joinSynonymousChains()\r\n\r\n    this._complex.finalize({\r\n      needAutoBonding: false,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n\r\n    return this._complex\r\n  }\r\n}\r\n\r\nMMTFParser.formats = ['mmtf']\r\nMMTFParser.extensions = ['.mmtf']\r\nMMTFParser.binary = true\r\n\r\nexport default MMTFParser\r\n",
		"class ParsingError extends Error {\r\n  constructor(message, line, column) {\r\n    super(`data:${line}:${column}: ${message}`)\r\n\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, ParsingError)\r\n    }\r\n\r\n    this.name = 'ParsingError'\r\n    this.parseLine = line\r\n    this.parseColumn = column\r\n  }\r\n}\r\n\r\nexport default ParsingError\r\n",
		"import { set } from 'lodash'\r\nimport ParsingError from './ParsingError'\r\n\r\n// Implemented and being tested against: https://www.iucr.org/resources/cif/spec/version1.1/cifsyntax\r\n\r\nfunction _isWhitespace(ch) {\r\n  return ch === 32 || ch === 10 || ch === 13 || ch === 9\r\n}\r\n\r\nfunction _inlineIndexOf(ch0, str, idx) {\r\n  const len = str.length\r\n  let ch = -1\r\n  while (idx < len) {\r\n    ch = str.charCodeAt(idx)\r\n    if (ch === ch0 || ch === 10) {\r\n      break\r\n    }\r\n    ++idx\r\n  }\r\n  return ch === ch0 ? idx : -1\r\n}\r\n\r\nexport default function readCIF(source) {\r\n  let i = 0\r\n  let j = 0\r\n  const n = source.length\r\n  let code = NaN\r\n  let newline = true\r\n  let line = 1\r\n  let column = 1\r\n  let begin\r\n  let state = 0 // 0 - start, 1 - block, 2 - item, 3 - loop, 4 - values, 5 - value\r\n  const result = {}\r\n  let block = {}\r\n  let keys = []\r\n  let keysCount = 0\r\n  let key = ''\r\n  let values = []\r\n  let valuesCount = 0\r\n  let value\r\n\r\n  function _parseValue() {\r\n    let val\r\n    if (\r\n      (code === 46 || code === 63) &&\r\n      (i + 1 >= n || _isWhitespace(source.charCodeAt(i + 1)))\r\n    ) {\r\n      // '.' or '?' .....\r\n      // it's a missing value\r\n      ++column\r\n      ++i\r\n      return undefined\r\n    }\r\n    if (newline && code === 59) {\r\n      // ';' ......................................................................\r\n      // parse multi-line string\r\n      j = i\r\n      let lines = 0\r\n      do {\r\n        j = _inlineIndexOf(10, source, j + 1) // '\\n'\r\n        if (j === -1) {\r\n          throw new ParsingError('Unterminated text block found', line, column)\r\n        }\r\n        ++lines\r\n      } while ((j + 1 < n && source.charCodeAt(j + 1) !== code) || j + 1 >= n)\r\n      val = source.substring(i + 1, j).replace(/\\r/g, '')\r\n      i = j + 2\r\n      line += lines\r\n      column = 1\r\n      newline = false\r\n      return val\r\n    }\r\n    if (code === 39 || code === 34) {\r\n      // ''' or '\"' ...........................................................\r\n      // parse quoted string\r\n      j = i\r\n      do {\r\n        j = _inlineIndexOf(code, source, j + 1)\r\n        if (j === -1) {\r\n          throw new ParsingError(\r\n            'Unterminated quoted string found',\r\n            line,\r\n            column\r\n          )\r\n        }\r\n      } while (j + 1 < n && !_isWhitespace(source.charCodeAt(j + 1)))\r\n      val = source.substring(i + 1, j)\r\n      column += j - i + 1\r\n      i = j + 1\r\n      return val\r\n    } // ......................................................................................................\r\n    // parse until the first whitespace\r\n    j = i\r\n    while (j < n && !_isWhitespace(source.charCodeAt(j))) {\r\n      ++j\r\n    }\r\n    val = source.substring(i, j)\r\n    column += j - i\r\n    i = j\r\n    // try to convert to a number\r\n    const num = Number(val)\r\n    if (!Number.isNaN(num)) {\r\n      return num\r\n    }\r\n    // or leave as an unquoted string\r\n    return val\r\n  }\r\n\r\n  function _storeKey(tag) {\r\n    keys[keysCount++] = tag\r\n  }\r\n\r\n  function _storeValue(val) {\r\n    const keyIndex = valuesCount % keysCount\r\n    values[keyIndex].push(val)\r\n    ++valuesCount\r\n    return val\r\n  }\r\n\r\n  while (i <= n) {\r\n    code = source.charCodeAt(i) // 'NaN' in place of '<eof>'\r\n    if (code === 13) {\r\n      // '\\r' .......................................................................................\r\n      // just ignore\r\n    } else if (code === 10) {\r\n      // '\\n' ................................................................................\r\n      // take note of new lines\r\n      newline = true\r\n      ++line\r\n      column = 1\r\n    } else {\r\n      // process inline characters\r\n      if (code === 32 || code === 9) {\r\n        // ' ' or '\\t' ................................................................\r\n        // just ignore\r\n      } else if (code === 35) {\r\n        // '#' ...............................................................................\r\n        // skip the comment until before the end of the line\r\n        i = _inlineIndexOf(10, source, i + 1) // '\\n'\r\n        if (i === -1) {\r\n          break\r\n        } else {\r\n          continue // don't forget to process the new line\r\n        }\r\n      } else if (state === 0) {\r\n        // start =============================================================================\r\n        if (\r\n          (code === 68 || code === 100) &&\r\n          source.substr(i + 1, 4).toLowerCase() === 'ata_'\r\n        ) {\r\n          // 'data_' ..........\r\n          j = i + 5\r\n          begin = j\r\n          while (j < n && !_isWhitespace(source.charCodeAt(j))) {\r\n            ++j\r\n          }\r\n          column += j - i\r\n          i = j\r\n          if (begin < i) {\r\n            // add new data block\r\n            result[source.substring(begin, i)] = block = {}\r\n            state = 1 // block\r\n            continue // don't forget to process the whitespace\r\n          } else {\r\n            throw new ParsingError('Data block name missing', line, column)\r\n          }\r\n        } else if (Number.isNaN(code)) {\r\n          // <eof> ....................................................................\r\n          break\r\n        } else {\r\n          // ..................................................................................................\r\n          throw new ParsingError(\r\n            `Unexpected character in state ${state}`,\r\n            line,\r\n            column\r\n          )\r\n        }\r\n      } else if (state === 1) {\r\n        // block =============================================================================\r\n        if (\r\n          (code === 68 || code === 100) &&\r\n          source.substr(i + 1, 4).toLowerCase() === 'ata_'\r\n        ) {\r\n          // 'data_' ..........\r\n          state = 0 // start\r\n          continue // parse again in a different state\r\n        } else if (code === 95) {\r\n          // '_' .............................................................................\r\n          j = i + 1\r\n          begin = j\r\n          while (j < n && !_isWhitespace(source.charCodeAt(j))) {\r\n            ++j\r\n          }\r\n          column += j - i\r\n          i = j\r\n          if (begin < i) {\r\n            // start new item\r\n            key = source.substring(begin, i)\r\n            state = 2 // item\r\n            continue // don't forget to process the whitespace\r\n          } else {\r\n            throw new ParsingError('Tag name missing', line, column)\r\n          }\r\n        } else if (\r\n          (code === 76 || code === 108) &&\r\n          source.substr(i + 1, 4).toLowerCase() === 'oop_'\r\n        ) {\r\n          // 'loop_' ...\r\n          i += 5\r\n          column += 5\r\n          if (i < n && !_isWhitespace(source.charCodeAt(i))) {\r\n            throw new ParsingError(\r\n              `Unexpected character in state ${state}`,\r\n              line,\r\n              column\r\n            )\r\n          } else {\r\n            // start new loop\r\n            keys = []\r\n            keysCount = 0\r\n            values = []\r\n            valuesCount = 0\r\n            state = 3 // loop\r\n            continue // don't forget to process the whitespace\r\n          }\r\n        } else if (Number.isNaN(code)) {\r\n          // <eof> ....................................................................\r\n          break\r\n        } else {\r\n          // ..................................................................................................\r\n          throw new ParsingError(\r\n            `Unexpected character in state ${state}`,\r\n            line,\r\n            column\r\n          )\r\n        }\r\n      } else if (state === 2) {\r\n        // item ==============================================================================\r\n        if (Number.isNaN(code)) {\r\n          break\r\n        }\r\n        value = _parseValue()\r\n        set(block, key, value)\r\n        state = 1 // block\r\n        continue\r\n      } else if (state === 3) {\r\n        // loop ==============================================================================\r\n        if (code === 95) {\r\n          // '_' ....................................................................................\r\n          j = i + 1\r\n          begin = j\r\n          while (j < n && !_isWhitespace(source.charCodeAt(j))) {\r\n            ++j\r\n          }\r\n          column += j - i\r\n          i = j\r\n          if (begin < i) {\r\n            // add new key\r\n            _storeKey(source.substring(begin, i))\r\n            continue // don't forget to process the whitespace\r\n          } else {\r\n            throw new ParsingError('Tag name missing', line, column)\r\n          }\r\n        } else {\r\n          // ..................................................................................................\r\n          if (keysCount > 0) {\r\n            for (let keyIndex = 0; keyIndex < keysCount; ++keyIndex) {\r\n              value = []\r\n              values[keyIndex] = value\r\n              set(block, keys[keyIndex], value)\r\n            }\r\n            state = 4\r\n            continue // parse again in a different state\r\n          }\r\n          throw new ParsingError(\r\n            'Data tags are missing inside a loop',\r\n            line,\r\n            column\r\n          )\r\n        }\r\n      } else if (state === 4) {\r\n        // values ============================================================================\r\n        if (\r\n          (code === 68 || code === 100) &&\r\n          source.substr(i + 1, 4).toLowerCase() === 'ata_'\r\n        ) {\r\n          // 'data_' ..........\r\n          state = 0 // start\r\n        } else if (code === 95) {\r\n          // '_' .............................................................................\r\n          state = 1 // block\r\n        } else if (\r\n          (code === 76 || code === 108) &&\r\n          source.substr(i + 1, 4).toLowerCase() === 'oop_'\r\n        ) {\r\n          // 'loop_' ...\r\n          state = 1 // block\r\n        } else if (Number.isNaN(code)) {\r\n          // <eof> ....................................................................\r\n          state = 0\r\n        } else {\r\n          // ..................................................................................................\r\n          _storeValue(_parseValue())\r\n        }\r\n        continue // parse again in a different state\r\n      } else {\r\n        // ====================================================================================================\r\n        throw new ParsingError(\r\n          `Unexpected internal state ${state}`,\r\n          line,\r\n          column\r\n        )\r\n      }\r\n\r\n      newline = false\r\n      ++column\r\n    }\r\n    ++i\r\n  }\r\n\r\n  if (state === 2) {\r\n    // item\r\n    throw new ParsingError(\r\n      `Unexpected end of file in state ${state}`,\r\n      line,\r\n      column\r\n    )\r\n  }\r\n\r\n  return result\r\n}\r\n",
		"import Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport StructuralElement from '../../chem/StructuralElement'\r\nimport readCIF from './readCIF'\r\nimport { isArray, isString } from 'lodash'\r\nimport { Matrix4, Vector3 } from 'three'\r\n\r\nconst { Complex, Element, Helix, Sheet, Strand, Assembly, Molecule } = chem\r\n\r\nconst cRequiredAtomFields = [\r\n  'auth_seq_id',\r\n  'Cartn_x',\r\n  'Cartn_y',\r\n  'Cartn_z',\r\n  'label_atom_id'\r\n]\r\n\r\nconst cSecondaryCoding = {\r\n  helx: 'helix',\r\n  turn: 'turn',\r\n  strn: 'strand'\r\n}\r\n\r\nfunction getTypeFromId(string) {\r\n  const typeId = /[A-Za-z]+/.exec(string)\r\n  if (!typeId) {\r\n    return null\r\n  }\r\n\r\n  return cSecondaryCoding[typeId[0].toLowerCase()]\r\n}\r\n\r\n/**\r\n * Make valid object an array\r\n * @param arrayLikeObject\r\n * @return {array, object} array or object\r\n */\r\nfunction arrize(arrayLikeObject) {\r\n  if (\r\n    arrayLikeObject === null ||\r\n    arrayLikeObject === undefined ||\r\n    isArray(arrayLikeObject)\r\n  ) {\r\n    return arrayLikeObject\r\n  }\r\n  return [arrayLikeObject]\r\n}\r\n\r\nfunction nameToElement(name) {\r\n  // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\r\n  //\r\n  // http://www.cgl.ucsf.edu/chimera/docs/UsersGuide/tutorials/pdbintro.html#note1\r\n  //\r\n  // Atom names start with element symbols right-justified in columns 13-14\r\n  // as permitted by the length of the name. For example, the symbol FE for\r\n  // iron appears in columns 13-14, whereas the symbol C for carbon appears\r\n  // in column 14 (see Misaligned Atom Names). If an atom name has four\r\n  // characters, however, it must start in column 13 even if the element\r\n  // symbol is a single character (for example, see Hydrogen Atoms).\r\n\r\n  const veryLong = name.trim().length === 4\r\n  return name.slice(0, veryLong ? 1 : 2).trim()\r\n}\r\n\r\nclass AtomDataError extends Error {\r\n  constructor(message) {\r\n    super()\r\n    this.name = 'AtomDataError'\r\n    this.message = message\r\n  }\r\n}\r\n\r\nfunction _getOperations(operList) {\r\n  if (!operList) {\r\n    return null\r\n  }\r\n  const idc = arrize(operList.id)\r\n  const { matrix, vector } = operList\r\n  if (!idc || !matrix || !vector) {\r\n    return null\r\n  }\r\n\r\n  const ops = []\r\n  for (let i = 0, n = idc.length; i < n; ++i) {\r\n    const mtx = new Matrix4()\r\n    const { elements } = mtx\r\n\r\n    for (let row = 0; row < 3; ++row) {\r\n      const matrixData = matrix[row + 1]\r\n      elements[row] = arrize(matrixData[1])[i]\r\n      elements[row + 4] = arrize(matrixData[2])[i]\r\n      elements[row + 8] = arrize(matrixData[3])[i]\r\n      elements[row + 12] = arrize(vector[row + 1])[i]\r\n    }\r\n    ops[idc[i]] = mtx\r\n  }\r\n  return ops\r\n}\r\n\r\nfunction _extractOperations(assemblyGen, opsDict) {\r\n  assemblyGen = isString(assemblyGen) ? assemblyGen : `${assemblyGen}`\r\n  const l = assemblyGen.replace(/\\)\\s*\\(/g, '!').replace(/[()']/g, '')\r\n  const groupStr = l.split('!')\r\n  const gps = []\r\n\r\n  for (let grIdx = 0, grCount = groupStr.length; grIdx < grCount; ++grIdx) {\r\n    const gr = groupStr[grIdx].split(',')\r\n    const gp = []\r\n    let idx = 0\r\n    for (let i = 0, n = gr.length; i < n; ++i) {\r\n      const s = gr[i]\r\n      if (s.includes('-')) {\r\n        const es = s.split('-')\r\n        let j = parseInt(es[0], 10)\r\n        const m = parseInt(es[1], 10)\r\n        for (; j <= m; ++j) {\r\n          gp[idx++] = opsDict[j]\r\n        }\r\n      } else {\r\n        gp[idx++] = opsDict[s]\r\n      }\r\n    }\r\n    gps.push(gp)\r\n  }\r\n\r\n  // traverse all groups from the end of array and make all mults\r\n  const matrices = []\r\n  let cnt = 0\r\n  function traverse(level, mtx) {\r\n    for (let ii = 0, nn = gps[level].length; ii < nn; ++ii) {\r\n      const newMtx = mtx ? mtx.clone() : new Matrix4()\r\n      newMtx.multiplyMatrices(gps[level][ii], newMtx)\r\n      if (level === 0) {\r\n        matrices[cnt++] = newMtx\r\n      } else {\r\n        traverse(level - 1, newMtx)\r\n      }\r\n    }\r\n  }\r\n  traverse(gps.length - 1)\r\n  return matrices\r\n}\r\n\r\nclass CIFParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this.asymDict = {}\r\n    this.molecules = []\r\n    this._options.fileType = 'cif'\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return isString(data) && /^\\s*data_/i.test(data)\r\n  }\r\n\r\n  parseSync() {\r\n    this.logger.info('Parsing CIF file..')\r\n    const data = readCIF(this._data)\r\n    return this._toComplex(data)\r\n  }\r\n\r\n  /**\r\n   * Convert intermediate structure into our valid Complex object\r\n   * @param cifData intermediate CIF object\r\n   * @returns {Complex} complex\r\n   * @private\r\n   */\r\n  _toComplex(cifData) {\r\n    const complex = new Complex()\r\n    const complexData = cifData[Object.keys(cifData)[0]]\r\n    this._extractAtoms(complex, complexData)\r\n    this._extractSecondary(complex, complexData)\r\n    this._extractAssemblies(complex, complexData)\r\n    this._extractMolecules(complex, complexData)\r\n    this._extractMetadata(complex, complexData)\r\n    complex.finalize({\r\n      needAutoBonding: true,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing\r\n    })\r\n\r\n    return complex\r\n  }\r\n\r\n  /**\r\n   * Extract metadata\r\n   * @param complex structure to fill\r\n   * @param complexData complex data from CIF file\r\n   * @private\r\n   */\r\n\r\n  _extractMetadata(complex, complexData) {\r\n    const { metadata } = complex\r\n    metadata.id = complexData.entry.id\r\n    metadata.classification = complexData.struct_keywords.pdbx_keywords\r\n    const databaserev = complexData.database_PDB_rev\r\n    metadata.date =\r\n      databaserev && databaserev.date_original ? databaserev.date_original : ''\r\n    metadata.format = 'cif'\r\n    metadata.title = []\r\n    metadata.title[0] = complexData.struct.title\r\n  }\r\n\r\n  /**\r\n   * Extract molecules information from CIF structure (should be called strictly after _extractAtoms)\r\n   * @param complexData complex data from CIF file\r\n   * @private\r\n   */\r\n  _extractMolecules(complex, complexData) {\r\n    const molData = complexData.entity\r\n    const names = arrize(molData.pdbx_description)\r\n    const count = names.length\r\n    let i\r\n\r\n    // molecules names from cif\r\n    for (i = 0; i < count; i++) {\r\n      if (this.molecules[i]) {\r\n        // molecule was created during atoms processing\r\n        this.molecules[i].name = names[i]\r\n      } else {\r\n        // molecule wasn't created, because there is no atom which is contained\r\n        this.molecules[i] = { name: names[i], residues: [] }\r\n      }\r\n    }\r\n\r\n    // reorganize molecules for complex and check chains\r\n    const molecules = complex.getMolecules()\r\n    for (i = 0; i < count; i++) {\r\n      const molecule = this.molecules[i]\r\n      molecules[i] = new Molecule(complex, molecule.name, i + 1)\r\n      molecules[i].residues = molecule.residues\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extract atom information from CIF structure and fill complex\r\n   * @param {Complex} complex\r\n   * @param complexData complex data from CIF file\r\n   * @private\r\n   */\r\n  _extractAtoms(complex, complexData) {\r\n    const atomData = complexData.atom_site\r\n    if (!atomData) {\r\n      throw new AtomDataError('CIF parsing error: atom_site is not specified!')\r\n    }\r\n\r\n    for (let f = 0, n = cRequiredAtomFields.length; f < n; ++f) {\r\n      if (!atomData[cRequiredAtomFields[f]]) {\r\n        throw new AtomDataError(\r\n          `CIF parsing error: requires field ${cRequiredAtomFields[f]} not found!`\r\n        )\r\n      }\r\n    }\r\n\r\n    const { asymDict } = this\r\n    // required fields\r\n    const resIdc = arrize(atomData.auth_seq_id)\r\n    const x = arrize(atomData.Cartn_x)\r\n    const y = arrize(atomData.Cartn_y)\r\n    const z = arrize(atomData.Cartn_z)\r\n    const names = arrize(atomData.label_atom_id)\r\n    const count = names.length\r\n    // optional fields\r\n    const group = arrize(atomData.group_PDB) || []\r\n    const chainIdc = arrize(atomData.auth_asym_id) || []\r\n    const chainLabelIdc = arrize(atomData.label_asym_id) || []\r\n    const serials = arrize(atomData.id) || []\r\n    const iCodes = arrize(atomData.pdbx_PDB_ins_code) || []\r\n    const resNames = arrize(atomData.label_comp_id) || []\r\n    const elements = arrize(atomData.type_symbol) || []\r\n    const tempFactors = arrize(atomData.B_iso_or_equiv) || []\r\n    const occupancies = arrize(atomData.occupancy) || []\r\n    const charges = arrize(atomData.pdbx_formal_charge) || []\r\n    const altLocs = arrize(atomData.label_alt_id) || []\r\n    const models = arrize(atomData.pdbx_PDB_model_num) || []\r\n    const molecules = arrize(atomData.label_entity_id) || []\r\n\r\n    let chain = null\r\n    let residue = null\r\n    for (let i = 0; i < count; ++i) {\r\n      const model = models[i] || 1\r\n      if (model !== 1) {\r\n        continue\r\n      }\r\n      const chainID = String(chainIdc[i] || ' ')\r\n\r\n      if (!chain || chain.getName() !== chainID) {\r\n        chain = complex.getChain(chainID) || complex.addChain(chainID)\r\n      }\r\n      asymDict[String(chainLabelIdc[i] || ' ')] = chainID\r\n      const resSeq = resIdc[i]\r\n      const iCode = String(iCodes[i] || ' ')\r\n      const resName = String(resNames[i] || '')\r\n      if (\r\n        !residue ||\r\n        residue.getSequence() !== resSeq ||\r\n        residue.getICode() !== iCode\r\n      ) {\r\n        residue = chain.addResidue(resName, resSeq, iCode)\r\n\r\n        // store residue in appropriate molecule\r\n        const moleculeIdx = molecules[i] - 1\r\n        let entity = this.molecules[moleculeIdx]\r\n        if (!entity) {\r\n          // create new molecule if it hasn't been created\r\n          this.molecules[moleculeIdx] = { name: '', residues: [] }\r\n          entity = this.molecules[moleculeIdx]\r\n        }\r\n        entity.residues.push(residue)\r\n      }\r\n\r\n      const name = names[i]\r\n      const element = elements[i] || nameToElement(name)\r\n      const type = Element.getByName(element)\r\n      const role = Element.Role[name.trim()]\r\n      const xyz = new Vector3(x[i], y[i], z[i])\r\n      const het = group[i] === 'HETATM' || false\r\n      const serial = serials[i] || i\r\n      const tempFactor = tempFactors[i] || 0.0\r\n      const occupancy = occupancies[i] || 0.0\r\n      const altLoc = String(altLocs[i] || '')\r\n      const charge = charges[i] || 0\r\n\r\n      residue.addAtom(\r\n        name,\r\n        type,\r\n        xyz,\r\n        role,\r\n        het,\r\n        serial,\r\n        altLoc,\r\n        occupancy,\r\n        tempFactor,\r\n        charge\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts secondary structure information from CIF intermediate data\r\n   * and adds it into complex\r\n   * @param {Complex} complex - complex to fill\r\n   * @param complexData - CIF complex data\r\n   * @private\r\n   */\r\n  _extractSecondary(complex, complexData) {\r\n    if (complexData.struct_conf) {\r\n      this._extractConfs(complex, complexData.struct_conf)\r\n    }\r\n    if (complexData.struct_sheet_range) {\r\n      this._extractSheets(complex, complexData.struct_sheet_range)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts sheets information from CIF intermediate data\r\n   * and adds it into complex\r\n   * @param {Complex} complex\r\n   * @param sheetData\r\n   * @private\r\n   */\r\n  _extractSheets(complex, sheetData) {\r\n    const { asymDict } = this\r\n    if (\r\n      !sheetData.sheet_id ||\r\n      !sheetData.id ||\r\n      !sheetData.beg_label_seq_id ||\r\n      !sheetData.end_label_seq_id ||\r\n      !sheetData.beg_label_asym_id\r\n    ) {\r\n      return\r\n    }\r\n    // Strand(sheet, start, end, sense, cur, prev)\r\n    const sheets = complex._sheets\r\n\r\n    function getSheet(name) {\r\n      const n = sheets.length\r\n      for (let i = 0; i < n; ++i) {\r\n        if (sheets[i]._name === name) {\r\n          return sheets[i]\r\n        }\r\n      }\r\n      sheets[n] = new Sheet(name, 0)\r\n      return sheets[n]\r\n    }\r\n\r\n    const sheetNames = arrize(sheetData.sheet_id)\r\n    const strandNames = arrize(sheetData.id)\r\n    const starts = arrize(sheetData.beg_auth_seq_id)\r\n    const ends = arrize(sheetData.end_auth_seq_id)\r\n    const chains = arrize(sheetData.beg_label_asym_id)\r\n    const stICodes = arrize(sheetData.pdbx_beg_PDB_ins_code) || []\r\n    const endICodes = arrize(sheetData.pdbx_end_PDB_ins_code) || []\r\n\r\n    for (let i = 0, n = strandNames.length; i < n; ++i) {\r\n      const chain = complex.getChain(asymDict[chains[i]])\r\n      const sheet = getSheet(sheetNames[i])\r\n      const startIdx = starts[i]\r\n      const endIdx = ends[i]\r\n      const startICode = stICodes[i] || ' '\r\n      const endICode = endICodes[i] || ' '\r\n\r\n      const start = chain.findResidue(startIdx, startICode)\r\n      const end = chain.findResidue(endIdx, endICode)\r\n\r\n      // TODO think about last condition\r\n      if (!start || !end) {\r\n        continue\r\n      }\r\n\r\n      const strand = new Strand(sheet, start[0], end[0], 0, null, null)\r\n      const residues = chain.getResidues()\r\n      for (let r = start[1]; r <= end[1]; ++r) {\r\n        residues[r]._secondary = strand\r\n      }\r\n      sheet.addStrand(strand)\r\n      complex.structures.push(strand)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts helix/turn/strand(?) information from CIF intermediate data\r\n   * and adds it into complex\r\n   * @param {Complex} complex\r\n   * @param helicesData\r\n   * @private\r\n   */\r\n  _extractConfs(complex, helicesData) {\r\n    const { asymDict } = this\r\n    if (\r\n      !helicesData.conf_type_id ||\r\n      !helicesData.beg_label_seq_id ||\r\n      !helicesData.end_label_seq_id ||\r\n      !helicesData.beg_label_asym_id\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const types = arrize(helicesData.conf_type_id)\r\n    const starts = arrize(helicesData.beg_auth_seq_id)\r\n    const stICodes = arrize(helicesData.pdbx_beg_PDB_ins_code) || []\r\n    const ends = arrize(helicesData.end_auth_seq_id)\r\n    const endICodes = arrize(helicesData.pdbx_end_PDB_ins_code) || []\r\n    const comments = arrize(helicesData.details) || []\r\n    const lengths = arrize(helicesData.pdbx_PDB_helix_length) || []\r\n    const helixClasses = arrize(helicesData.pdbx_PDB_helix_class) || []\r\n    const names = arrize(helicesData.id) || []\r\n    const chains = arrize(helicesData.beg_label_asym_id)\r\n\r\n    for (let i = 0, n = types.length; i < n; ++i) {\r\n      const type = getTypeFromId(types[i])\r\n      if (!type) {\r\n        continue\r\n      }\r\n      const name = names[i] || types[i]\r\n      const chain = complex.getChain(asymDict[chains[i]])\r\n\r\n      const startIdx = starts[i]\r\n      const endIdx = ends[i]\r\n      const startICode = stICodes[i] || ' '\r\n      const endICode = endICodes[i] || ' '\r\n\r\n      const start = chain.findResidue(startIdx, startICode)\r\n      const end = chain.findResidue(endIdx, endICode)\r\n\r\n      // TODO think about last condition\r\n      if (!start || !end) {\r\n        continue\r\n      }\r\n      const comment = comments[i] || ''\r\n      const length = lengths[i] || 0\r\n      const helixClass = helixClasses[i] || ' '\r\n      let struct\r\n      if (type === 'helix') {\r\n        const idx = complex._helices.length\r\n        struct = new Helix(\r\n          helixClass,\r\n          start[0],\r\n          end[0],\r\n          idx,\r\n          name,\r\n          comment,\r\n          length\r\n        )\r\n        complex.addHelix(struct)\r\n        complex.structures.push(struct)\r\n      } else if (type === 'turn') {\r\n        struct = new StructuralElement(\r\n          StructuralElement.Type.TURN,\r\n          start[0],\r\n          end[0]\r\n        )\r\n        complex.structures.push(struct)\r\n      } else {\r\n        struct = null\r\n      }\r\n      if (!struct) {\r\n        continue\r\n      }\r\n      const residues = chain.getResidues()\r\n      for (let r = start[1]; r <= end[1]; ++r) {\r\n        residues[r]._secondary = struct\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extract biological assemblies information from CIF structure and fill complex\r\n   * @param {Complex} complex\r\n   * @param complexData complex data from CIF file\r\n   * @private\r\n   */\r\n  _extractAssemblies(complex, complexData) {\r\n    const { asymDict } = this\r\n    const asmGen = complexData.pdbx_struct_assembly_gen\r\n    if (!asmGen) {\r\n      return\r\n    }\r\n\r\n    const asmIdx = arrize(asmGen.assembly_id)\r\n    const asmOper = arrize(asmGen.oper_expression)\r\n    const asmList = arrize(asmGen.asym_id_list)\r\n    if (!asmIdx || !asmOper || !asmList) {\r\n      return\r\n    }\r\n\r\n    const operList = _getOperations(complexData.pdbx_struct_oper_list)\r\n    if (!operList) {\r\n      return\r\n    }\r\n\r\n    for (let i = 0, n = asmIdx.length; i < n; ++i) {\r\n      const asm = new Assembly(complex)\r\n      const assemblyOps = _extractOperations(asmOper[i], operList)\r\n      const entries = asmList[i].split(',')\r\n      for (let ii = 0, nn = entries.length; ii < nn; ++ii) {\r\n        const chain = entries[ii].trim()\r\n        if (chain.length > 0) {\r\n          asm.addChain(asymDict[chain])\r\n        }\r\n      }\r\n      asm.matrices = assemblyOps\r\n      complex.units.push(asm)\r\n    }\r\n  }\r\n}\r\n\r\nCIFParser.formats = ['cif', 'mmcif']\r\nCIFParser.extensions = ['.cif', '.mmcif']\r\n\r\nexport default CIFParser\r\n",
		"import Volume from '../../chem/Volume'\r\nimport { Box3, Vector3 } from 'three'\r\nimport { isArrayBuffer, isTypedArray, pick } from 'lodash'\r\n\r\nexport const valueType = {\r\n  singular: 0,\r\n  vector: 1,\r\n  array: 2,\r\n  buffer: 3\r\n}\r\n\r\nclass VolumeModel {\r\n  _xyz2crs = []\r\n\r\n  _origin = new Vector3(0, 0, 0)\r\n\r\n  constructor() {\r\n    this._header = {}\r\n    this._boxSize = new Vector3()\r\n    this._boxStart = new Vector3()\r\n    this._header.delta = {}\r\n    this._header.extent = []\r\n    this._header.nstart = []\r\n    this._header.grid = []\r\n    this._header.crs2xyz = []\r\n    this._header.cellDims = new Vector3()\r\n    this._header.angles = []\r\n    this._header.origin = new Vector3(0, 0, 0)\r\n    this._header.dmin = 0\r\n    this._header.dmean = 0\r\n    this._header.dmax = 0\r\n  }\r\n\r\n  _typedCheck() {\r\n    if (isTypedArray(this._buff)) {\r\n      this._buff = this._buff.buffer\r\n    } else if (!isArrayBuffer(this._buff)) {\r\n      throw new TypeError('Expected ArrayBuffer or TypedArray')\r\n    }\r\n  }\r\n\r\n  _fillHeader(headerFormat, arrays) {\r\n    for (const key in headerFormat) {\r\n      if (headerFormat.hasOwnProperty(key)) {\r\n        switch (headerFormat[key][0]) {\r\n          case valueType.singular:\r\n            this._header[key] =\r\n              arrays[headerFormat[key][1]][headerFormat[key][2]]\r\n            break\r\n\r\n          case valueType.array:\r\n            this._parseArray(\r\n              this._header[key],\r\n              arrays[headerFormat[key][1]],\r\n              headerFormat[key][2]\r\n            )\r\n            break\r\n\r\n          case valueType.vector:\r\n            this._parseVector(\r\n              this._header[key],\r\n              arrays[headerFormat[key][1]],\r\n              headerFormat[key][2]\r\n            )\r\n            break\r\n\r\n          case valueType.buffer:\r\n            this._header[key] = new Uint8Array(\r\n              arrays[headerFormat[key][1]],\r\n              [headerFormat[key][2]] * 4,\r\n              [headerFormat[key][3]] * 4\r\n            )\r\n            break\r\n\r\n          default:\r\n            break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _parseVector(vector, arr, pos) {\r\n    ;[vector.x, vector.y, vector.z] = [arr[pos], arr[pos + 1], arr[pos + 2]]\r\n  }\r\n\r\n  _parseArray(vector, arr, pos) {\r\n    vector[0] = arr[pos]\r\n    vector[1] = arr[pos + 1]\r\n    vector[2] = arr[pos + 2]\r\n  }\r\n\r\n  _parseHeader(_buffer) {}\r\n\r\n  _setAxisIndices() {}\r\n\r\n  _setOrigins() {}\r\n\r\n  _getAxis() {\r\n    const header = this._header\r\n\r\n    const xScale = header.cellDims.x / header.grid[0]\r\n    const yScale = header.cellDims.y / header.grid[1]\r\n    const zScale = header.cellDims.z / header.grid[2]\r\n\r\n    const [alpha, beta, gamma] = header.angles\r\n\r\n    const z1 = Math.cos(beta)\r\n    const z2 =\r\n      (Math.cos(alpha) - Math.cos(beta) * Math.cos(gamma)) / Math.sin(gamma)\r\n    const z3 = Math.sqrt(1.0 - z1 * z1 - z2 * z2)\r\n\r\n    const xaxis = new Vector3(xScale, 0, 0)\r\n    const yaxis = new Vector3(\r\n      Math.cos(gamma) * yScale,\r\n      Math.sin(gamma) * yScale,\r\n      0\r\n    )\r\n    const zaxis = new Vector3(z1 * zScale, z2 * zScale, z3 * zScale)\r\n\r\n    return [xaxis, yaxis, zaxis]\r\n  }\r\n\r\n  _getXYZdim() {\r\n    return [\r\n      this._header.extent[this._xyz2crs[0]],\r\n      this._header.extent[this._xyz2crs[1]],\r\n      this._header.extent[this._xyz2crs[2]]\r\n    ]\r\n  }\r\n\r\n  _getVolumeInfo() {\r\n    const volInfo = pick(this._header, ['dmean', 'dmin', 'dmax', 'sd', 'delta'])\r\n    volInfo.obtuseAngle = this._header.angles.map((angle) =>\r\n      Number(angle >= Math.PI / 2)\r\n    )\r\n    return volInfo\r\n  }\r\n\r\n  _setBoxParams(xaxis, yaxis, zaxis) {\r\n    // if axes are not orthogonal, the origins might not match with box coordinates - need to make shift\r\n    let shiftX = 0\r\n    let shiftY = 0\r\n    const [alpha, beta, gamma] = this._header.angles\r\n\r\n    if (gamma >= Math.PI / 2) {\r\n      shiftX += Math.abs(yaxis.x)\r\n    }\r\n    if (beta >= Math.PI / 2) {\r\n      shiftX += Math.abs(zaxis.x)\r\n    }\r\n    if (alpha >= Math.PI / 2) {\r\n      shiftY += Math.abs(zaxis.y)\r\n    }\r\n\r\n    this._boxStart = new Vector3(\r\n      this._origin.x - shiftX,\r\n      this._origin.y - shiftY,\r\n      this._origin.z\r\n    )\r\n    this._boxSize = new Vector3(\r\n      Math.abs(xaxis.x) + Math.abs(yaxis.x) + Math.abs(zaxis.x),\r\n      Math.abs(yaxis.y) + Math.abs(zaxis.y),\r\n      Math.abs(zaxis.z)\r\n    )\r\n\r\n    const delta = (axe, proj) => Math.abs(axe[proj]) / this._boxSize[proj]\r\n    this._header.delta.x = delta(yaxis, 'x')\r\n    this._header.delta.y = delta(zaxis, 'x')\r\n    this._header.delta.z = delta(zaxis, 'y')\r\n  }\r\n\r\n  _getXYZbox() {\r\n    return new Box3(\r\n      this._boxStart.clone(),\r\n      this._boxStart.clone().add(this._boxSize)\r\n    )\r\n  }\r\n\r\n  _toXYZData() {}\r\n\r\n  parse(data) {\r\n    this._parseHeader(data)\r\n    this._setOrigins()\r\n    return new Volume(\r\n      Float32Array,\r\n      this._getXYZdim(),\r\n      this._getXYZbox(),\r\n      1,\r\n      this._toXYZData(),\r\n      this._getVolumeInfo()\r\n    )\r\n  }\r\n}\r\n\r\nexport default VolumeModel\r\n",
		"import Parser from './Parser'\r\nimport VolumeModel, { valueType } from './VolumeModel'\r\n\r\nconst CCP4Header = {\r\n  extent: [valueType.array, 'u32', 0],\r\n  type: [valueType.singular, 'u32', 3],\r\n  nstart: [valueType.array, 'i32', 4],\r\n  grid: [valueType.array, 'u32', 7],\r\n  cellDims: [valueType.vector, 'f32', 10],\r\n  angles: [valueType.array, 'f32', 13],\r\n  crs2xyz: [valueType.array, 'i32', 16],\r\n  dmin: [valueType.singular, 'f32', 19],\r\n  dmax: [valueType.singular, 'f32', 20],\r\n  dmean: [valueType.singular, 'f32', 21],\r\n  ispg: [valueType.singular, 'u32', 22],\r\n  nsymbt: [valueType.singular, 'u32', 23],\r\n  lksflg: [valueType.singular, 'u32', 24],\r\n  customData: [valueType.buffer, 'buffer', 25, 9],\r\n  origin: [valueType.vector, 'f32', 34],\r\n  map: [valueType.buffer, 'buffer', 52, 1],\r\n  machine: [valueType.singular, 'u32', 53],\r\n  sd: [valueType.singular, 'f32', 54],\r\n  nlabel: [valueType.singular, 'f32', 55],\r\n  label: [valueType.buffer, 'buffer', 56, 200]\r\n}\r\n\r\nclass Ccp4Model extends VolumeModel {\r\n  // read header (http://www.ccp4.ac.uk/html/maplib.html)\r\n  _parseHeader(_buffer) {\r\n    this._buff = _buffer\r\n    this._typedCheck()\r\n    const arrays = {}\r\n    arrays.u32 = new Uint32Array(this._buff, 0, 56)\r\n    arrays.i32 = new Int32Array(this._buff, 0, 56)\r\n    arrays.f32 = new Float32Array(this._buff, 0, 56)\r\n    arrays.buffer = this._buff\r\n    const header = this._header\r\n\r\n    this._fillHeader(CCP4Header, arrays)\r\n\r\n    // calculate non-orthogonal unit cell coordinates\r\n    header.angles.forEach((angle, i, a) => {\r\n      a[i] *= Math.PI / 180.0\r\n    })\r\n  }\r\n\r\n  _setAxisIndices() {\r\n    const header = this._header\r\n\r\n    if (\r\n      header.cellDims.x === 0.0 &&\r\n      header.cellDims.y === 0.0 &&\r\n      header.cellDims.z === 0.0\r\n    ) {\r\n      header.cellDims.set(1.0, 1.0, 1.0)\r\n    }\r\n    // Apply header conversion\r\n    // Mapping between CCP4 column, row, section and VMD x, y, z.\r\n    const { crs2xyz } = this._header\r\n    if (crs2xyz[0] === 0 && crs2xyz[1] === 0 && crs2xyz[2] === 0) {\r\n      crs2xyz[0] = 1\r\n      crs2xyz[1] = 2\r\n      crs2xyz[2] = 3\r\n    }\r\n\r\n    const xyz2crs = this._xyz2crs\r\n    xyz2crs[crs2xyz[0] - 1] = 0 // column\r\n    xyz2crs[crs2xyz[1] - 1] = 1 // row\r\n    xyz2crs[crs2xyz[2] - 1] = 2 // section\r\n  }\r\n\r\n  _setOrigins() {\r\n    const [xaxis, yaxis, zaxis] = this._getAxis()\r\n    this._setAxisIndices()\r\n\r\n    const header = this._header\r\n    const xyz2crs = this._xyz2crs\r\n    // Handle both MRC-2000 and older format maps\r\n    if (\r\n      header.origin.x === 0.0 &&\r\n      header.origin.y === 0.0 &&\r\n      header.origin.z === 0.0\r\n    ) {\r\n      this._origin.addScaledVector(xaxis, header.nstart[xyz2crs[0]])\r\n      this._origin.addScaledVector(yaxis, header.nstart[xyz2crs[1]])\r\n      this._origin.addScaledVector(zaxis, header.nstart[xyz2crs[2]])\r\n    } else {\r\n      this._origin = header.origin\r\n      // Use ORIGIN records rather than old n[xyz]start records\r\n      //   http://www2.mrc-lmb.cam.ac.uk/image2000.html\r\n      // XXX the ORIGIN field is only used by the EM community, and\r\n      // has undefined meaning for non-orthogonal maps and/or non-cubic voxels, etc.\r\n    }\r\n    xaxis.multiplyScalar(header.extent[xyz2crs[0]] - 1)\r\n    yaxis.multiplyScalar(header.extent[xyz2crs[1]] - 1)\r\n    zaxis.multiplyScalar(header.extent[xyz2crs[2]] - 1)\r\n\r\n    if (header.type === 2) {\r\n      this._data = new Float32Array(\r\n        this._buff,\r\n        1024 + header.nsymbt,\r\n        header.extent[0] * header.extent[1] * header.extent[2]\r\n      )\r\n    } else {\r\n      throw new Error(`CCP4: Unsupported format ${header.type}`)\r\n    }\r\n\r\n    this._setBoxParams(xaxis, yaxis, zaxis)\r\n  }\r\n\r\n  _toXYZData() {\r\n    const header = this._header\r\n    const data = this._data\r\n    const xyz2crs = this._xyz2crs\r\n    const xyzData = new Float32Array(data.length)\r\n\r\n    const dim = this._getXYZdim()\r\n    const xSize = dim[0]\r\n    const ySize = dim[1]\r\n\r\n    let crsIdx = 0\r\n    const coord = []\r\n    let x\r\n    let y\r\n    let z\r\n    for (coord[2] = 0; coord[2] < header.extent[2]; coord[2]++) {\r\n      // Site\r\n      for (coord[1] = 0; coord[1] < header.extent[1]; coord[1]++) {\r\n        // Row\r\n        for (coord[0] = 0; coord[0] < header.extent[0]; coord[0]++, crsIdx++) {\r\n          // Column\r\n          x = coord[xyz2crs[0]]\r\n          y = coord[xyz2crs[1]]\r\n          z = coord[xyz2crs[2]]\r\n          xyzData[x + xSize * (y + ySize * z)] = data[crsIdx]\r\n        }\r\n      }\r\n    }\r\n\r\n    return xyzData\r\n  }\r\n}\r\n\r\nclass CCP4Parser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this._options.fileType = 'ccp4'\r\n    this.model = new Ccp4Model()\r\n  }\r\n\r\n  static canProbablyParse(_data) {\r\n    return false // Autodetection is not implemented yet\r\n  }\r\n\r\n  parseSync() {\r\n    return this.model.parse(this._data)\r\n  }\r\n}\r\n\r\nCCP4Parser.formats = ['ccp4']\r\nCCP4Parser.extensions = ['.ccp4', '.map', '.mrc']\r\nCCP4Parser.binary = true\r\n\r\nexport default CCP4Parser\r\n",
		"import { isString } from 'lodash'\r\nimport Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport { Vector3 } from 'three'\r\n\r\nconst { Complex, Element, Molecule } = chem\r\n\r\nclass XYZParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n\r\n    this._complex = null\r\n    this._atomsInf = null\r\n\r\n    this._options.fileType = 'xyz'\r\n    this._fileName = options.name\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return isString(data) && /^\\s*\\d+ *\\n[^\\n]*\\n\\s*\\w{1,3}\\s+-?\\d/.test(data)\r\n  }\r\n\r\n  _parseToAtomsInf(source) {\r\n    const endnAtoms = source.indexOf('\\n')\r\n    const nAtoms = parseInt(source.substring(0, endnAtoms), 10)\r\n    const endComment = source.indexOf('\\n', endnAtoms + 1)\r\n    let comment = source.slice(endnAtoms + 1, endComment).trim()\r\n    if (comment.length === 0) {\r\n      comment = this._fileName\r\n    }\r\n\r\n    const startAtomsInf = endComment + source.substring(endComment).search(/\\S/)\r\n    this._atomsInf = source.substring(startAtomsInf).split(/[\\s,]*\\n[\\s,]*/)\r\n    if (!Number.isNaN(nAtoms) && this._atomsInf.length - 1 !== nAtoms) {\r\n      this._complex.error = {\r\n        message: 'wrong number of atoms'\r\n      }\r\n      return\r\n    }\r\n\r\n    this._complex.metadata.format = 'xyz'\r\n    this._complex.name = comment\r\n  }\r\n\r\n  _parseAtomsInf() {\r\n    const het = true\r\n    const altLoc = ' '\r\n    const occupancy = 1\r\n    const tempFactor = 1\r\n    const charge = 0\r\n\r\n    const chain = this._complex.addChain('A')\r\n    const residue = chain.addResidue('UNK', 1, ' ')\r\n\r\n    for (let i = 0; i < this._atomsInf.length - 1; i++) {\r\n      const words = this._atomsInf[i].split(/[\\s,]+/)\r\n\r\n      if (words.length !== 4) {\r\n        this._complex.error = {\r\n          message: 'missed parameters'\r\n        }\r\n        break\r\n      }\r\n\r\n      const serial = i + 1\r\n      const name = words[0]\r\n      const xyz = new Vector3(\r\n        parseFloat(words[1]),\r\n        parseFloat(words[2]),\r\n        parseFloat(words[3])\r\n      )\r\n      const type = Element.getByName(name)\r\n      const role = undefined\r\n\r\n      residue.addAtom(\r\n        name,\r\n        type,\r\n        xyz,\r\n        role,\r\n        het,\r\n        serial,\r\n        altLoc,\r\n        occupancy,\r\n        tempFactor,\r\n        charge\r\n      )\r\n    }\r\n\r\n    const molecule = new Molecule(this._complex, this._complex.name, 1)\r\n    molecule.residues = residue\r\n    this._complex._molecules[0] = molecule\r\n  }\r\n\r\n  parseSync() {\r\n    const result = (this._complex = new Complex())\r\n\r\n    this._parseToAtomsInf(this._data)\r\n    this._parseAtomsInf()\r\n\r\n    this._complex.finalize({\r\n      needAutoBonding: true,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n\r\n    this._complex = null\r\n    this._atomsInf = null\r\n\r\n    if (result.error) {\r\n      throw new Error(result.error.message)\r\n    }\r\n    return result\r\n  }\r\n\r\n  static formats = ['xyz']\r\n\r\n  static extensions = ['.xyz']\r\n}\r\n\r\nexport default XYZParser\r\n",
		"import { fromPairs, isString, zip } from 'lodash'\r\nimport Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport { Vector3 } from 'three'\r\n\r\nconst { Complex, Element } = chem\r\n\r\nclass PubChemParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this._options.fileType = 'pubchem+json'\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return isString(data) && data[0] === '{'\r\n  }\r\n\r\n  parseSync() {\r\n    this.logger.info('Parsing PubChem JSON file...')\r\n    return this._toComplex(JSON.parse(this._data))\r\n  }\r\n\r\n  _toComplex(jsonData) {\r\n    const complex = new Complex()\r\n    const complexData = jsonData.PC_Compounds && jsonData.PC_Compounds[0]\r\n    if (complexData) {\r\n      this._extractAtoms(complex, complexData)\r\n      complex.finalize({\r\n        needAutoBonding: false,\r\n        detectAromaticLoops: this.settings.now.aromatic,\r\n        enableEditing: this.settings.now.editing\r\n      })\r\n    }\r\n    return complex\r\n  }\r\n\r\n  _extractAtoms(complex, complexData) {\r\n    let aids = complexData.atoms && complexData.atoms.aid\r\n    let elements = aids && complexData.atoms.element\r\n    if (!elements || aids.length !== elements.length) {\r\n      throw new Error('Unable to parse atom elements')\r\n    }\r\n    elements = fromPairs(zip(aids, elements))\r\n    const atoms = {}\r\n\r\n    const coords = complexData.coords && complexData.coords[0]\r\n    const model = coords && coords.conformers && coords.conformers[0]\r\n    const xs = model && model.x\r\n    const ys = model && model.y\r\n    const zs = (model && model.z) || []\r\n    aids = coords && coords.aid\r\n    if (!aids || !xs || !ys) {\r\n      throw new Error('Coordinates are not found in the file')\r\n    }\r\n\r\n    const chain = complex.addChain(' ')\r\n    const residue = chain.addResidue('UNK', 1, ' ')\r\n\r\n    for (let i = 0, n = aids.length; i < n; ++i) {\r\n      const aid = aids[i]\r\n      const element = Element.ByAtomicNumber[elements[aid]]\r\n      const xyz = new Vector3(xs[i], ys[i], zs[i] || 0.0)\r\n      atoms[aid] = residue.addAtom(\r\n        element.name,\r\n        element,\r\n        xyz,\r\n        undefined,\r\n        true,\r\n        aid,\r\n        ' ',\r\n        1.0,\r\n        0.0,\r\n        0\r\n      )\r\n    }\r\n\r\n    const aids1 = complexData.bonds && complexData.bonds.aid1\r\n    const aids2 = complexData.bonds && complexData.bonds.aid2\r\n    const orders = (complexData.bonds && complexData.bonds.order) || []\r\n    if (!aids1 || !aids2 || aids1.length !== aids2.length) {\r\n      return\r\n    }\r\n\r\n    for (let j = 0, m = aids1.length; j < m; ++j) {\r\n      complex.addBond(atoms[aids1[j]], atoms[aids2[j]], orders[j] || 1, 0, true)\r\n    }\r\n  }\r\n}\r\n\r\nPubChemParser.formats = ['pubchem', 'pubchem+json', 'pc']\r\nPubChemParser.extensions = ['.json']\r\n\r\nexport default PubChemParser\r\n",
		"import { isUndefined } from 'lodash'\r\n\r\nexport default class SDFStream {\r\n  constructor(data) {\r\n    this._strings = data.split(/\\r?\\n|\\r/)\r\n    this._currentStart = 0\r\n    this._currentStringIndx = 0\r\n  }\r\n\r\n  setStart(start) {\r\n    if (start >= this._strings.length) {\r\n      this._currentStart = this._strings.length - 1\r\n      this._currentStringIndx = this._strings.length - 1\r\n    } else {\r\n      this._currentStart = start\r\n      this._currentStringIndx = start\r\n    }\r\n  }\r\n\r\n  getNextString() {\r\n    return this._strings[++this._currentStringIndx]\r\n  }\r\n\r\n  getCurrentString() {\r\n    return this._strings[this._currentStringIndx]\r\n  }\r\n\r\n  getStringFromStart(numb) {\r\n    this._currentStringIndx = this._currentStart + numb\r\n    return this._strings[this._currentStart + numb]\r\n  }\r\n\r\n  findNextDataItem() {\r\n    let curStr = this.getNextString()\r\n    let res = false\r\n    while (!isUndefined(curStr) && curStr.trim() !== '$$$$') {\r\n      if (curStr.match(/>\\s+<(.*)>/)) {\r\n        res = true\r\n        break\r\n      }\r\n      curStr = this.getNextString()\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  findNextCompoundStart() {\r\n    let curStr = this.getCurrentString()\r\n    while (!isUndefined(curStr) && curStr.trim() !== '$$$$') {\r\n      curStr = this.getNextString()\r\n    }\r\n    this.setStart(++this._currentStringIndx)\r\n    return this.probablyHaveDataToParse()\r\n  }\r\n\r\n  probablyHaveDataToParse() {\r\n    return this._currentStringIndx < this._strings.length - 2\r\n  }\r\n}\r\n",
		"import Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport SDFStream from './SDFStream'\r\nimport Assembly from '../../chem/Assembly'\r\nimport { Matrix4, Vector3 } from 'three'\r\nimport { isString } from 'lodash'\r\n\r\nconst { Complex, Element, Bond, Molecule } = chem\r\n\r\nconst chargeMap = [0, 3, 2, 1, 0, -1, -2, -3]\r\nconst orderMap = [0, 1, 2, 3, 1, 1, 1, 2]\r\nconst typeMap = [\r\n  Bond.BondType.UNKNOWN, // 0 - error\r\n  Bond.BondType.COVALENT, // 1 - single\r\n  Bond.BondType.COVALENT, // 2 - double\r\n  Bond.BondType.COVALENT, // 3 - triple\r\n  Bond.BondType.AROMATIC, // 4 - aromatic\r\n  Bond.BondType.UNKNOWN, // 5 - single or double\r\n  Bond.BondType.AROMATIC, // 6 - single or aromatic\r\n  Bond.BondType.AROMATIC // 7 - double or aromatic\r\n  // 8 - any\r\n  // 9 - coordination\r\n  // 10 - hydrogen\r\n]\r\n\r\nconst sdfAndMolRegexp = /.*(M\\s\\sEND).*|.*(^$$$$).*|.*>\\s+<(.+)>.*/\r\nconst sdfRegExp = /.*($$$$).*|.*>\\s+<(.+)>.*/\r\n\r\nconst fileFormat = { SDF: 'sdf', MOL: 'mol' }\r\n\r\nconst possibleNameTags = [\r\n  'PUBCHEM_IUPAC_TRADITIONAL_NAME',\r\n  /PUBCHEM_(.+)_NAME/,\r\n  /(.+)name/,\r\n  /(.+)NAME/\r\n]\r\nconst possibleIDTags = [\r\n  'PUBCHEM_COMPOUND_CID',\r\n  'id',\r\n  'ID',\r\n  /.*CID/,\r\n  /.*ID/,\r\n  /.*id/\r\n]\r\nconst possibleTitleTags = [\r\n  'msg',\r\n  'MSG',\r\n  'message',\r\n  'title',\r\n  'description',\r\n  'desc'\r\n]\r\nconst tagsNames = ['name', 'id', 'title']\r\nconst tags = {\r\n  name: possibleNameTags,\r\n  id: possibleIDTags,\r\n  title: possibleTitleTags\r\n}\r\n\r\nfunction buildChainID(index) {\r\n  if (!index) {\r\n    return 'A'\r\n  }\r\n\r\n  const codes = []\r\n  while (index) {\r\n    codes.push(65 + (index % 26))\r\n    index = Math.trunc(index / 26)\r\n  }\r\n  if (codes.length > 1) {\r\n    codes.reverse()\r\n    codes[0] -= 1\r\n  }\r\n\r\n  return String.fromCharCode(...codes)\r\n}\r\n\r\nexport default class SDFParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this._format = 'sdf'\r\n    this._complex = null\r\n    this._chain = null\r\n    this._residue = null\r\n    this._molecules = null\r\n    this._metadata = {}\r\n    this._metadata.molecules = []\r\n    this._currentMolProps = {}\r\n    this._compoundIndx = -1\r\n    this._assemblies = []\r\n    this._atomsParsed = 0\r\n    this._atomsIndexes = []\r\n  }\r\n\r\n  canProbablyParse(data) {\r\n    return isString(data) && sdfAndMolRegexp.test(data)\r\n  }\r\n\r\n  _parseHeader(stream) {\r\n    const molecule = {}\r\n    molecule.name = stream.getStringFromStart(0)\r\n    const date = parseInt(stream.getStringFromStart(1).substr(10, 6).trim(), 10)\r\n    molecule.date = date.toString() || ''\r\n    molecule.title = stream.getStringFromStart(2)\r\n    this._metadata.molecules.push(molecule)\r\n  }\r\n\r\n  _parseAtoms(stream, atomsNum) {\r\n    let curStr\r\n    let serial = this._atomsParsed\r\n\r\n    // each molecule = chain\\residue\r\n    const chainID = buildChainID(this._compoundIndx)\r\n    const resName = 'UNK'\r\n    const resSeq = 1\r\n\r\n    this._chain =\r\n      this._complex.getChain(chainID) || this._complex.addChain(chainID)\r\n    this._residue = this._chain.addResidue(resName, resSeq, ' ')\r\n\r\n    for (let i = 0; i < atomsNum; i++) {\r\n      curStr = stream.getNextString()\r\n      serial++\r\n      const x = parseFloat(curStr.substr(0, 10))\r\n      const y = parseFloat(curStr.substr(10, 10))\r\n      const z = parseFloat(curStr.substr(20, 10))\r\n      const charge = chargeMap[parseInt(curStr.substr(36, 3), 10)]\r\n      const xyz = new Vector3(x, y, z)\r\n      let name = curStr.substr(31, 3).trim().toUpperCase()\r\n      const type = Element.getByName(name)\r\n      if (!this._atomsIndexes[name]) {\r\n        this._atomsIndexes[name] = 0\r\n      }\r\n      this._atomsIndexes[name] += 1\r\n      name += this._atomsIndexes[name] // every atom need to have unique name.\r\n\r\n      this._residue.addAtom(\r\n        name,\r\n        type,\r\n        xyz,\r\n        undefined,\r\n        true,\r\n        serial,\r\n        ' ',\r\n        1.0,\r\n        0.0,\r\n        charge\r\n      )\r\n    }\r\n  }\r\n\r\n  _parseBonds(stream, bondsNum) {\r\n    let curStr\r\n\r\n    for (let i = 0; i < bondsNum; i++) {\r\n      curStr = stream.getNextString()\r\n      let atom1 = parseInt(curStr.substr(0, 3), 10) + this._atomsParsed\r\n      let atom2 = parseInt(curStr.substr(3, 3), 10) + this._atomsParsed\r\n      const bondType = parseInt(curStr.substr(6, 3), 10)\r\n\r\n      if (atom1 > atom2) {\r\n        ;[atom1, atom2] = [atom2, atom1]\r\n      }\r\n      this._complex.addBond(\r\n        atom1,\r\n        atom2,\r\n        orderMap[bondType] || 1,\r\n        typeMap[bondType] || Bond.BondType.UNKNOWN,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  _parseMOL(stream) {\r\n    this._compoundIndx++\r\n\r\n    this._parseHeader(stream)\r\n    const countsLine = stream.getStringFromStart(3)\r\n    const atomsNum = parseInt(countsLine.substr(0, 3), 10)\r\n    const bondsNum = parseInt(countsLine.substr(3, 3), 10)\r\n    this._parseAtoms(stream, atomsNum)\r\n    this._parseBonds(stream, bondsNum)\r\n\r\n    this._atomsParsed += atomsNum\r\n\r\n    this._metadata.molecules[this._compoundIndx]._residues = []\r\n    this._metadata.molecules[this._compoundIndx]._residues.push(this._residue)\r\n  }\r\n\r\n  _parseDataItem(stream) {\r\n    const tag = stream.getCurrentString()\r\n\r\n    let data = []\r\n    let curStr = stream.getNextString()\r\n\r\n    // read data\r\n    while (curStr.trim() !== '') {\r\n      data.push(curStr)\r\n      curStr = stream.getNextString()\r\n    }\r\n    if (data.length === 1) {\r\n      ;[data] = data\r\n    }\r\n    this._currentMolProps[tag.replace(/[<>]/g, '').trim()] = data\r\n  }\r\n\r\n  _parseCompound(stream) {\r\n    this._parseMOL(stream)\r\n\r\n    // parse data items block\r\n    if (this._format === fileFormat.SDF) {\r\n      this._currentMolProps = {}\r\n      while (stream.findNextDataItem()) {\r\n        this._parseDataItem(stream)\r\n      }\r\n      if (Object.keys(this._currentMolProps).length !== 0) {\r\n        const molecule = this._metadata.molecules[this._compoundIndx]\r\n        molecule.props = this._currentMolProps\r\n        this._tryToUpdateMoleculeData(molecule)\r\n      }\r\n    }\r\n  }\r\n\r\n  _fixBondsArray() {\r\n    const serialAtomMap = this._serialAtomMap\r\n    const complex = this._complex\r\n\r\n    const bonds = complex._bonds\r\n    for (let j = 0; j < bonds.length; j++) {\r\n      const bond = bonds[j]\r\n      if (bond._right < bond._left) {\r\n        console.log('_fixBondsArray: Logic error.')\r\n      }\r\n      bond._left = serialAtomMap[bond._left] || null\r\n      bond._right = serialAtomMap[bond._right] || null\r\n    }\r\n  }\r\n\r\n  _buildAssemblies() {\r\n    const chains = this._complex._chains\r\n\r\n    if (chains.length === 1) {\r\n      return this._assemblies\r\n    }\r\n\r\n    for (let i = 0; i < chains.length; i++) {\r\n      const assembly = new Assembly(this._complex)\r\n      const matrix = new Matrix4()\r\n      assembly.addMatrix(matrix)\r\n      assembly.addChain(chains[i]._name)\r\n      this._assemblies.push(assembly)\r\n    }\r\n\r\n    return this._assemblies\r\n  }\r\n\r\n  _buildMolecules() {\r\n    this._complex._molecules = []\r\n    const { molecules } = this._metadata\r\n    for (let i = 0; i < molecules.length; i++) {\r\n      const molecule = new Molecule(this._complex, molecules[i].name, i + 1)\r\n      molecule.residues = molecules[i]._residues\r\n      this._complex._molecules[i] = molecule\r\n    }\r\n\r\n    return this._complex._molecules\r\n  }\r\n\r\n  _searchTag(tag, props) {\r\n    for (let i = 0; i < props.length; i++) {\r\n      if (\r\n        (tag instanceof RegExp && tag.test(props[i].tag)) ||\r\n        tag === props[i].tag\r\n      ) {\r\n        return props[i].data\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  _tryToFind(tagsList, props) {\r\n    for (let j = 0; j < tagsList.length; j++) {\r\n      const res = this._searchTag(tagsList[j], props)\r\n      if (res) {\r\n        return res\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  _tryToUpdateMoleculeData(molecule) {\r\n    let res = false\r\n    for (let i = 0; i < tagsNames.length; i++) {\r\n      const tagPossibleNames = tags[tagsNames[i]]\r\n      const data = this._tryToFind(tagPossibleNames, molecule.props)\r\n      if (data) {\r\n        molecule[tagsNames[i]] = data\r\n        res = true\r\n      }\r\n    }\r\n\r\n    molecule.name = molecule.name || molecule.id\r\n    if (molecule.name.match(/^\\d+$/)) {\r\n      molecule.name = `CID: ${molecule.name}`\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  _finalizeMetadata() {\r\n    const { molecules } = this._metadata\r\n    const { metadata } = this._complex\r\n    const complex = this._complex\r\n\r\n    if (molecules.length === 1) {\r\n      complex.name = molecules[0].name\r\n      metadata.title = molecules[0].title\r\n      metadata.date = molecules[0].date\r\n      metadata.properties = molecules[0].props\r\n    } else if (molecules.length > 1) {\r\n      metadata.molecules = []\r\n      for (let i = 0; i < molecules.length; i++) {\r\n        metadata.molecules.push({\r\n          name: molecules[i].name,\r\n          date: molecules[i].date,\r\n          title: molecules[i].title,\r\n          properties: molecules[i].props\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  _finalize() {\r\n    const serialAtomMap = (this._serialAtomMap = {})\r\n    const atoms = this._complex._atoms\r\n\r\n    for (let i = 0; i < atoms.length; i++) {\r\n      const atom = atoms[i]\r\n      serialAtomMap[atom.serial] = atom\r\n    }\r\n\r\n    this._complex._finalizeBonds()\r\n    this._fixBondsArray()\r\n    this._finalizeMetadata()\r\n    this._buildAssemblies()\r\n    this._complex.units = this._complex.units.concat(this._assemblies)\r\n    this._buildMolecules()\r\n    this._complex.finalize({\r\n      needAutoBonding: false,\r\n      detectAromaticLoops: false,\r\n      enableEditing: false,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n  }\r\n\r\n  defineFormat(data) {\r\n    let format\r\n    if (sdfRegExp.test(data)) {\r\n      format = fileFormat.SDF\r\n    } else {\r\n      format = fileFormat.MOL\r\n    }\r\n\r\n    return format\r\n  }\r\n\r\n  parseSync() {\r\n    const result = (this._complex = new Complex())\r\n    const stream = new SDFStream(this._data)\r\n\r\n    this._format = this.defineFormat(this._data)\r\n    result.metadata.format = this._format\r\n\r\n    do {\r\n      this._parseCompound(stream)\r\n    } while (stream.findNextCompoundStart())\r\n\r\n    this._finalize()\r\n\r\n    return result\r\n  }\r\n}\r\n\r\nSDFParser.formats = ['mol', 'sdf']\r\nSDFParser.extensions = ['.mol', '.sdf']\r\n",
		"import Parser from './Parser'\r\nimport VolumeModel, { valueType } from './VolumeModel'\r\nimport { Vector3 } from 'three'\r\n\r\n// http://www.uoxray.uoregon.edu/tnt/manual/node104.html\r\nconst DSN6Header = {\r\n  nstart: [valueType.array, 'i16', 0],\r\n  extent: [valueType.array, 'i16', 3],\r\n  grid: [valueType.array, 'i16', 6],\r\n  cellDims: [valueType.vector, 'i16', 9],\r\n  angles: [valueType.array, 'i16', 12],\r\n  div: [valueType.singular, 'i16', 15],\r\n  adder: [valueType.singular, 'i16', 16],\r\n  scaleFactor: [valueType.singular, 'i16', 17]\r\n}\r\n\r\nclass DSN6Model extends VolumeModel {\r\n  _parseHeader(_buffer) {\r\n    this._buff = _buffer\r\n    this._typedCheck()\r\n\r\n    const arrays = {}\r\n    arrays.i16 = new Int16Array(this._buff)\r\n\r\n    // check and reverse if big endian\r\n    if (arrays.i16[18] !== 100) {\r\n      for (let i = 0, n = arrays.i16.length; i < n; ++i) {\r\n        const val = arrays.i16[i]\r\n        arrays.i16[i] = ((val & 0xff) << 8) | ((val >> 8) & 0xff)\r\n      }\r\n    }\r\n    if (arrays.i16[18] !== 100) {\r\n      throw new Error('DSN6: Incorrect format ')\r\n    }\r\n\r\n    const header = this._header\r\n\r\n    this._fillHeader(DSN6Header, arrays)\r\n    header.cellDims.multiplyScalar(1.0 / header.scaleFactor)\r\n    header.angles.forEach((angle, i, a) => {\r\n      a[i] *= Math.PI / 180.0 / header.scaleFactor\r\n    })\r\n    header.div /= 100\r\n  }\r\n\r\n  _setAxisIndices() {\r\n    this._xyz2crs[0] = 0\r\n    this._xyz2crs[1] = 1\r\n    this._xyz2crs[2] = 2\r\n  }\r\n\r\n  _setOrigins() {\r\n    const header = this._header\r\n    const [xaxis, yaxis, zaxis] = this._getAxis()\r\n    this._setAxisIndices()\r\n\r\n    this._origin.addScaledVector(xaxis, header.nstart[0])\r\n    this._origin.addScaledVector(yaxis, header.nstart[1])\r\n    this._origin.addScaledVector(zaxis, header.nstart[2])\r\n\r\n    xaxis.multiplyScalar(header.extent[0])\r\n    yaxis.multiplyScalar(header.extent[1])\r\n    zaxis.multiplyScalar(header.extent[2])\r\n\r\n    this._setBoxParams(xaxis, yaxis, zaxis)\r\n  }\r\n\r\n  _pointCalculate(xyzData, byteBuffer, z, y, x, pos, i) {\r\n    const header = this._header\r\n\r\n    if (x < header.extent[0] && y < header.extent[1] && z < header.extent[2]) {\r\n      const idx = x + header.extent[0] * (y + header.extent[1] * z)\r\n      xyzData[idx] = (byteBuffer[pos.counter] - header.adder) / header.div\r\n      ++pos.counter\r\n    } else {\r\n      pos.counter += 8 - i\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  _blockCalculate(xyzData, byteBuffer, zBlock, yBlock, xBlock, pos) {\r\n    for (let k = 0; k < 8; ++k) {\r\n      const z = 8 * zBlock + k\r\n      for (let j = 0; j < 8; ++j) {\r\n        const y = 8 * yBlock + j\r\n        let inRange = true\r\n        let i = 0\r\n        while (inRange && i < 8) {\r\n          const x = 8 * xBlock + i\r\n          inRange = this._pointCalculate(xyzData, byteBuffer, z, y, x, pos, i)\r\n          i++\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _toXYZData() {\r\n    const header = this._header\r\n    const byteBuffer = new Uint8Array(this._buff)\r\n    const xyzData = new Float32Array(\r\n      header.extent[0] * header.extent[1] * header.extent[2]\r\n    )\r\n\r\n    const blocks = new Vector3(\r\n      header.extent[0] / 8,\r\n      header.extent[1] / 8,\r\n      header.extent[2] / 8\r\n    )\r\n\r\n    const pos = {}\r\n    pos.counter = 512\r\n\r\n    for (let zBlock = 0; zBlock < blocks.z; ++zBlock) {\r\n      for (let yBlock = 0; yBlock < blocks.y; ++yBlock) {\r\n        for (let xBlock = 0; xBlock < blocks.x; ++xBlock) {\r\n          this._blockCalculate(xyzData, byteBuffer, zBlock, yBlock, xBlock, pos)\r\n        }\r\n      }\r\n    }\r\n    this._calculateInfoParams(xyzData)\r\n    return xyzData\r\n  }\r\n\r\n  _calculateInfoParams(xyzData) {\r\n    this._header.dmean /= xyzData.length\r\n    let dispersion = 0\r\n    let minDensity = xyzData[0]\r\n    let maxDensity = xyzData[0]\r\n    for (let j = 0; j < xyzData.length; j++) {\r\n      dispersion += (this._header.dmean - xyzData[j]) ** 2\r\n\r\n      if (xyzData[j] < minDensity) {\r\n        minDensity = xyzData[j]\r\n      }\r\n      if (xyzData[j] > maxDensity) {\r\n        maxDensity = xyzData[j]\r\n      }\r\n    }\r\n    this._header.sd = Math.sqrt(dispersion / xyzData.length)\r\n    this._header.dmax = maxDensity\r\n    this._header.dmin = minDensity\r\n  }\r\n}\r\n\r\nclass DSN6Parser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    this._options.fileType = 'dsn6'\r\n    this.model = new DSN6Model()\r\n  }\r\n\r\n  static canParse(data, options) {\r\n    if (!data) {\r\n      return false\r\n    }\r\n    return (\r\n      data instanceof ArrayBuffer &&\r\n      Parser.checkDataTypeOptions(options, 'dsn6')\r\n    )\r\n  }\r\n\r\n  static canProbablyParse(_data) {\r\n    return false\r\n  }\r\n\r\n  parseSync() {\r\n    return this.model.parse(this._data)\r\n  }\r\n}\r\n\r\nDSN6Parser.formats = ['dsn6']\r\nDSN6Parser.extensions = ['.dsn6', '.omap']\r\nDSN6Parser.binary = true\r\n\r\nexport default DSN6Parser\r\n",
		"import PDBStream from './PDBStream'\r\n\r\n/**\r\n * Little helper class for GRO Parser usage.\r\n * @extends PDBStream\r\n */\r\nclass GROReader extends PDBStream {\r\n  constructor(data) {\r\n    super(data)\r\n    /** @type Number */\r\n    this._next = -1 // End position of line\r\n    this.next()\r\n  }\r\n\r\n  /**\r\n   * Getting end of string.\r\n   * @returns {Number} Pointer to end of string\r\n   */\r\n  getNext() {\r\n    return this._next\r\n  }\r\n}\r\n\r\nexport default GROReader\r\n",
		"import Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport GROReader from './GROReader'\r\nimport { isString } from 'lodash'\r\nimport { Vector3 } from 'three'\r\n\r\nconst { Complex, Element, Molecule } = chem\r\n\r\n/**\r\n * Gromos87 file format parser.\r\n * @extends Parser\r\n */\r\nclass GROParser extends Parser {\r\n  /**\r\n   * Create parser for .gro file format\r\n   *\r\n   * @param {String} data Input file\r\n   * @param {String} options Input options (optional field)\r\n   */\r\n  constructor(data, options) {\r\n    super(data, options)\r\n    /** @type Date */\r\n    this._time = null // Time in ps, optional field for animations\r\n    /** @type Number */\r\n    this._numAtoms = null // Number of atoms in complex\r\n    /** @type Number */\r\n    this._residueNumber = null // Number of exact residue\r\n    /** @type String */\r\n    this._residueName = '' // Scientific name of exact residue\r\n    /** @type String */\r\n    this._atomName = '' // Scientific name of exact atom\r\n    /** @type Number */\r\n    this._atomNumber = null // Sorted number of exact atom\r\n    /** @type Array */\r\n    this._atomPosition = [] // Array which contains x, y, z position of exact atom\r\n    /** @type Array */\r\n    this._atomVelocity = [] // Array which contains x, y, z velocity of exact atom (optional)\r\n    /** @type Complex */\r\n    this._complex = null // Complex structure for unified molecule representation\r\n    /** @type Vector3 */\r\n    this._molecules = [] // Molecules array\r\n    /** @type Molecule */\r\n    this._molecule = null // Single molecule\r\n    /** @type String */\r\n    this._options.filetype = 'gro' // Extension of data file.\r\n  }\r\n\r\n  /**\r\n   * General check for possibility of parsing.\r\n   * @param {String} data - Input file\r\n   * @returns {boolean} true if this file is in ascii, false otherwise\r\n   */\r\n  canProbablyParse(data) {\r\n    return (\r\n      isString(this._data) &&\r\n      /^\\s*[^\\n]*\\n\\s*\\d+ *\\n\\s*\\d+[^\\n\\d]{3}\\s*\\w+\\s*\\d+\\s*-?\\d/.test(data)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Parsing title of molecule complex.\r\n   * NOTE: that names are ESTIMATES, there is no strict rules in Gromos87 standard for first line in input file.\r\n   * @param {GROReader} line - Line containing title and time.\r\n   */\r\n  _parseTitle(line) {\r\n    const { metadata } = this._complex\r\n    metadata.id = line.readLine().trim()\r\n    metadata.name = metadata.id.slice(\r\n      metadata.id.lastIndexOf('\\\\') + 1,\r\n      metadata.id.lastIndexOf('.')\r\n    )\r\n    metadata.format = 'gro'\r\n  }\r\n\r\n  /**\r\n   * Parsing line containing number of atoms information.\r\n   * @param {GROReader} line - Line containing number of atoms.\r\n   */\r\n  _parseNumberOfAtoms(line) {\r\n    this._numAtoms = line.readInt(0, line.getNext())\r\n    if (Number.isNaN(this._numAtoms)) {\r\n      throw new Error(\r\n        'Line 2 is not representing atom number. Consider checking input file'\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parsing line containing information about residues, atoms etc. Also information about box vectors.\r\n   * Format of atoms MUST (by Gromos87 standard) be this: (note that numbering starts not from 0, but from 1!)\r\n   * ResidueNumber[1 - 5]  ResidueName[6 - 10] AtomName[11 - 15] AtomNumber[16 - 20] Position[21 - 45] Velocity[46 - 69]\r\n   * @param {GROReader} line - Line containing information about atom.\r\n   */\r\n  _parseAtom(line) {\r\n    this._residueNumber = line.readInt(1, 5)\r\n    this._residueName = line.readString(6, 10).trim()\r\n    this._atomName = line.readString(11, 15).trim()\r\n    this._atomNumber = line.readInt(16, 20)\r\n    const positionX = line.readFloat(21, 28) * 10\r\n    const positionY = line.readFloat(29, 36) * 10\r\n    const positionZ = line.readFloat(37, 45) * 10\r\n    if (\r\n      Number.isNaN(positionX) ||\r\n      Number.isNaN(positionY) ||\r\n      Number.isNaN(positionZ)\r\n    ) {\r\n      this._complex.error = {\r\n        message: `Atom position is invalid in \"${line.readLine()}\"`\r\n      }\r\n      return\r\n    }\r\n    /* const velocityX = line.readFloat(46, 53);\r\n    const velocityY = line.readFloat(54, 61);\r\n    const velocityZ = line.readFloat(62, 69); */\r\n    /* Adding residue and atom to complex structure */\r\n    const type = Element.getByName(\r\n      this._atomName[0]\r\n    ) /* MAGIC 0. REASONS: This name is something like \"CA\", where\r\n     C - is an element an A is something else. But what about Calcium? */\r\n    if (type.fullName === 'Unknown') {\r\n      this._complex.error = {\r\n        message: `${this._atomName[0]} hasn't been recognised as an atom name.`\r\n      }\r\n      return\r\n    }\r\n    const role = Element.Role[this._atomName]\r\n    /* Firstly, create a dummy chain */\r\n    let chain = this._chain\r\n    if (!chain) {\r\n      this._chain = chain = this._complex.addChain('A')\r\n    }\r\n    /* Secondly, add residue to that chain */\r\n    let residue = this._residue\r\n    if (!residue || residue.getSequence() !== this._residueNumber) {\r\n      this._residue = residue = chain.addResidue(\r\n        this._residueName,\r\n        this._residueNumber,\r\n        ' '\r\n      )\r\n    }\r\n    /* Lastly, add atom to that residue */\r\n    this._atomPosition = new Vector3(positionX, positionY, positionZ)\r\n    /* Adding default constants to correct atom addition process */\r\n    const het = true\r\n    const altLoc = ' '\r\n    const occupancy = 1\r\n    const tempFactor = 1\r\n    const charge = 0\r\n    residue.addAtom(\r\n      this._atomName,\r\n      type,\r\n      this._atomPosition,\r\n      role,\r\n      het,\r\n      this._atomNumber,\r\n      altLoc,\r\n      occupancy,\r\n      tempFactor,\r\n      charge\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Some finalizing procedures. In '.gro' file format there is only 1 chain and 1 molecule.\r\n   */\r\n  _finalize() {\r\n    const molecule = new Molecule(this._complex, this._complex.metadata.name, 1)\r\n    // aggregate residues from chain\r\n    molecule.residues = this._chain._residues\r\n    molecule._chains = this._chain\r\n    this._complex._molecules[0] = molecule\r\n    this._molecules.push(molecule)\r\n    this._complex.finalize({\r\n      needAutoBonding: true,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Main parsing procedure.\r\n   * @returns {Complex} Complex structure for visualizing.\r\n   */\r\n  parseSync() {\r\n    /* Create \"Complex\" variable */\r\n    const result = (this._complex = new Complex())\r\n    /* Parse input file line-by-line */\r\n    const reader = new GROReader(this._data)\r\n    let counter = 0 /* Simple counter regarding to format of .gro file */\r\n    /* First two lines - technical information, other lines - Atoms */\r\n    this._parseTitle(reader)\r\n    reader.next()\r\n    this._parseNumberOfAtoms(reader)\r\n    reader.next()\r\n    for (counter = 0; counter < this._numAtoms; ++counter) {\r\n      if (!reader.end()) {\r\n        this._parseAtom(reader)\r\n        reader.next()\r\n      } else break\r\n    }\r\n    /* If number of atoms in second line is less then actual atoms in file */\r\n    if (counter < this._numAtoms) {\r\n      this._complex.error = {\r\n        message: 'File ended unexpectedly.'\r\n      }\r\n    }\r\n    /* Catch errors occurred in parsing process */\r\n    if (result.error) {\r\n      throw new Error(result.error.message)\r\n    }\r\n\r\n    /* Finalizing data */\r\n    this._finalize()\r\n\r\n    /* Cleaning up */\r\n    this._atomPosition = null\r\n    this._complex = null\r\n    this._molecules = null\r\n    this._molecule = null\r\n\r\n    /* Return resulting Complex variable */\r\n    return result\r\n  }\r\n}\r\n\r\nGROParser.formats = ['gro']\r\nGROParser.extensions = ['.gro']\r\n\r\nexport default GROParser\r\n",
		"import Parser from './Parser'\r\nimport chem from '../../chem'\r\nimport { Vector3 } from 'three'\r\n\r\nconst { Complex, Element, Bond, Molecule } = chem\r\n\r\nconst orderMap = {\r\n  un: 0,\r\n  1: 1,\r\n  2: 2,\r\n  3: 3,\r\n  ar: 1,\r\n  am: 1,\r\n  nc: 0,\r\n  du: 1\r\n}\r\nconst typeMap = {\r\n  un: Bond.BondType.UNKNOWN, // unknown (cannot be determined from the parameter tables)\r\n  1: Bond.BondType.COVALENT, // single\r\n  2: Bond.BondType.COVALENT, // double\r\n  3: Bond.BondType.COVALENT, // triple\r\n  ar: Bond.BondType.AROMATIC, // aromatic\r\n  am: Bond.BondType.COVALENT, // amide\r\n  nc: Bond.BondType.UNKNOWN, // not connected\r\n  du: Bond.BondType.COVALENT // dummy\r\n}\r\n\r\nconst resNumberRegex = /\\d+$/\r\nconst spacesRegex = /\\s+/\r\n\r\nfunction splitToFields(str) {\r\n  return str.trim().split(spacesRegex)\r\n}\r\n/* There is no jsdoc documentation because of eslint corrections:\r\n * not all Parser methods are implemented\r\n */\r\n\r\nclass MOL2Parser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options)\r\n\r\n    this._complex = null\r\n    this._chain = null\r\n    this._residue = null\r\n    this._compoundIndx = -1\r\n\r\n    this._molecules = []\r\n    this._molecule = null\r\n\r\n    this._currPosIdx = 0\r\n    this._currStartIdx = 0\r\n\r\n    this._serialAtomMap = {}\r\n\r\n    this._options.fileType = 'mol2'\r\n  }\r\n\r\n  _parseRawStrings(data) {\r\n    return data.split(/\\r?\\n|\\r/)\r\n  }\r\n\r\n  _toStringFromStart(numb, MOL2Data) {\r\n    const newPosIdx = this._currStartIdx + numb\r\n    this._currPosIdx =\r\n      newPosIdx < MOL2Data.length ? newPosIdx : this._currStartIdx\r\n  }\r\n\r\n  _toHeaderString(header, MOL2Data) {\r\n    this._toStringFromStart(0, MOL2Data)\r\n    while (this._currPosIdx < MOL2Data.length) {\r\n      if (MOL2Data[this._currPosIdx].match(`@<TRIPOS>${header}`)) {\r\n        return\r\n      }\r\n      this._currPosIdx++\r\n    }\r\n    this._toStringFromStart(0, MOL2Data)\r\n  }\r\n\r\n  _toStringFromHeader(header, numb, MOL2Data) {\r\n    this._toHeaderString(header, MOL2Data)\r\n    const newPosIdx = this._currPosIdx + numb\r\n\r\n    if (\r\n      MOL2Data[this._currPosIdx].match(`@<TRIPOS>${header}`) &&\r\n      newPosIdx < MOL2Data.length\r\n    ) {\r\n      this._currPosIdx = newPosIdx\r\n    }\r\n  }\r\n\r\n  _setStart(startPos, MOL2Data) {\r\n    if (startPos >= MOL2Data.length) {\r\n      this._currStartIdx = this._currPosIdx = MOL2Data.length - 1\r\n    } else {\r\n      this._currStartIdx = this._currPosIdx = startPos\r\n    }\r\n  }\r\n\r\n  _probablyHaveDataToParse(MOL2Data) {\r\n    return this._currPosIdx < MOL2Data.length - 2\r\n  }\r\n\r\n  _findNextCompoundStart(MOL2Data) {\r\n    while (\r\n      this._currPosIdx < MOL2Data.length &&\r\n      MOL2Data[this._currPosIdx].trim() !== '@<TRIPOS>MOLECULE>'\r\n    ) {\r\n      this._currPosIdx++\r\n    }\r\n    this._setStart(++this._currPosIdx, MOL2Data)\r\n    return this._probablyHaveDataToParse(MOL2Data)\r\n  }\r\n\r\n  _parseMolecule(MOL2Data) {\r\n    this._toHeaderString('MOLECULE', MOL2Data)\r\n\r\n    const { metadata } = this._complex\r\n    metadata.name = MOL2Data[++this._currPosIdx]\r\n    metadata.format = 'mol2'\r\n\r\n    this._molecule = { _index: '', _chains: [] }\r\n    this._molecule._index = this._compoundIndx + 1\r\n    this._molecules.push(this._molecule)\r\n  }\r\n\r\n  /* Atom format description:\r\n   * atomId atomName x y z element [resSeq [resName [charge [statusBit]]]]\r\n   * statusBits is the internal SYBYL status bits associated with the atom.\r\n   * These should never be set by the user.\r\n   * Source: http://chemyang.ccnu.edu.cn/ccb/server/AIMMS/mol2.pdf\r\n   */\r\n  _parseAtoms(atomsNum, MOL2Data) {\r\n    this._toHeaderString('ATOM', MOL2Data)\r\n\r\n    for (let i = 0; i < atomsNum; i++) {\r\n      const parsedStr = splitToFields(MOL2Data[++this._currPosIdx])\r\n\r\n      if (parsedStr.length < 6) {\r\n        throw new Error(\r\n          'MOL2 parsing error: Not enough information to create atom!'\r\n        )\r\n      }\r\n      const atomId = parseInt(parsedStr[0], 10)\r\n      const atomName = parsedStr[1]\r\n\r\n      const x = parseFloat(parsedStr[2])\r\n      const y = parseFloat(parsedStr[3])\r\n      const z = parseFloat(parsedStr[4])\r\n\r\n      const element = parsedStr[5].split('.')[0].toUpperCase()\r\n\r\n      let charge = 0\r\n      if (parsedStr.length >= 9) {\r\n        charge = parseFloat(parsedStr[8]) || 0.0\r\n      }\r\n\r\n      let chain = this._chain\r\n      if (!chain) {\r\n        // .mol2 may contain information about multiple molecules, but they can't be visualized\r\n        // at the same time now. There is no need to create different chain IDs then.\r\n        this._chain = chain =\r\n          this._complex.getChain('A') || this._complex.addChain('A')\r\n        this._residue = null\r\n      }\r\n      if (!this._setResidue(parsedStr)) {\r\n        continue\r\n      }\r\n\r\n      // These fields are not listed in mol2 format. Set them default.\r\n      // Atoms and het atoms doesn't differ in .mol2,\r\n      // but het atoms have special residues. It can be used in next updates\r\n      const het = false\r\n      const altLoc = ' '\r\n      const occupancy = 1.0\r\n      const tempFactor = 0.0\r\n      const type = Element.getByName(element)\r\n      const role = Element.Role[atomName]\r\n\r\n      const xyz = new Vector3(x, y, z)\r\n      this._residue.addAtom(\r\n        atomName,\r\n        type,\r\n        xyz,\r\n        role,\r\n        het,\r\n        atomId,\r\n        altLoc,\r\n        occupancy,\r\n        tempFactor,\r\n        charge\r\n      )\r\n    }\r\n  }\r\n\r\n  _setResidue(parsedStr) {\r\n    let resSeq = 1\r\n    let resName = 'UNK' // The same meaning has '<0>' in some mol2 files\r\n\r\n    if (parsedStr.length >= 7) {\r\n      resSeq = parseInt(parsedStr[6], 10)\r\n    }\r\n    if (parsedStr.length >= 8 && parsedStr[7] !== '<0>') {\r\n      resName = parsedStr[7].replace(resNumberRegex, '')\r\n    }\r\n    if (this.settings.now.nowater) {\r\n      if (resName === 'HOH' || resName === 'WAT') {\r\n        return false\r\n      }\r\n    }\r\n    const residue = this._residue\r\n    const chain = this._chain\r\n    if (!residue || residue.getSequence() !== resSeq) {\r\n      this._residue = chain.addResidue(resName, resSeq, 'A')\r\n    }\r\n    return true\r\n  }\r\n\r\n  /* Bond format description\r\n   * bondId originAtomId targetAtomId bondType [statusBits]\r\n   */\r\n  _parseBonds(bondsNum, MOL2Data) {\r\n    this._toHeaderString('BOND', MOL2Data)\r\n\r\n    for (let i = 0; i < bondsNum; i++) {\r\n      const parsedStr = splitToFields(MOL2Data[++this._currPosIdx])\r\n\r\n      if (parsedStr.length < 3) {\r\n        throw new Error('MOL2 parsing error: Missing information about bonds!')\r\n      }\r\n\r\n      let originAtomId = parseInt(parsedStr[1], 10)\r\n      let targetAtomId = parseInt(parsedStr[2], 10)\r\n      const bondType = parsedStr[3]\r\n\r\n      if (originAtomId > targetAtomId) {\r\n        ;[originAtomId, targetAtomId] = [targetAtomId, originAtomId]\r\n      }\r\n      this._complex.addBond(\r\n        originAtomId,\r\n        targetAtomId,\r\n        orderMap[bondType] || 0,\r\n        typeMap[bondType] || Bond.BondType.UNKNOWN,\r\n        true\r\n      )\r\n    }\r\n  }\r\n\r\n  _fixSerialAtoms() {\r\n    const atoms = this._complex._atoms\r\n    for (let i = 0; i < atoms.length; i++) {\r\n      const atom = atoms[i]\r\n      this._serialAtomMap[atom.serial] = atom\r\n    }\r\n  }\r\n\r\n  _fixBondsArray() {\r\n    const serialAtomMap = this._serialAtomMap\r\n    const complex = this._complex\r\n\r\n    if (Object.keys(serialAtomMap).length === 0) {\r\n      throw new Error('MOL2 parsing error: Missing atom information!')\r\n    }\r\n\r\n    const bonds = complex._bonds\r\n    for (let j = 0; j < bonds.length; j++) {\r\n      const bond = bonds[j]\r\n      bond._left = serialAtomMap[bond._left] || null\r\n      bond._right = serialAtomMap[bond._right] || null\r\n    }\r\n  }\r\n\r\n  _finalizeMolecules() {\r\n    // Get chain from complex\r\n    const chain = this._complex._chains[0]\r\n    this._complex._molecules = []\r\n\r\n    // Aggregate residues from chains\r\n    // (to be precise from the chain 'A')\r\n    for (let i = 0; i < this._molecules.length; i++) {\r\n      const currMolecule = this._molecules[i]\r\n      const molResidues = chain._residues\r\n      const molecule = new Molecule(this._complex, currMolecule._name, i + 1)\r\n      molecule.residues = molResidues\r\n      this._complex._molecules[i] = molecule\r\n    }\r\n  }\r\n\r\n  _finalize() {\r\n    this._complex._finalizeBonds()\r\n    this._fixSerialAtoms()\r\n    this._fixBondsArray()\r\n    this._finalizeMolecules()\r\n\r\n    this._complex.finalize({\r\n      needAutoBonding: false,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap\r\n    })\r\n  }\r\n\r\n  _parseCompound(MOL2Data) {\r\n    this._compoundIndx++\r\n    this._parseMolecule(MOL2Data)\r\n\r\n    // Ignoring comments and everything before @<TRIPOS>MOLECULE block\r\n    this._toStringFromHeader('MOLECULE', 2, MOL2Data)\r\n\r\n    const parsedStr = MOL2Data[this._currPosIdx].trim().split(spacesRegex)\r\n    const atomsNum = parsedStr[0]\r\n    const bondsNum = parsedStr[1]\r\n\r\n    this._parseAtoms(atomsNum, MOL2Data)\r\n    this._parseBonds(bondsNum, MOL2Data)\r\n  }\r\n\r\n  parseSync() {\r\n    const result = (this._complex = new Complex())\r\n    const MOL2Data = this._parseRawStrings(this._data)\r\n    do {\r\n      this._parseCompound(MOL2Data)\r\n    } while (this._findNextCompoundStart(MOL2Data))\r\n\r\n    this._finalize()\r\n\r\n    return result\r\n  }\r\n}\r\n\r\nMOL2Parser.formats = ['mol2']\r\nMOL2Parser.extensions = ['.mol2', '.ml2', '.sy2']\r\n\r\nexport default MOL2Parser\r\n",
		"import ParserList from './parsers/ParserList'\r\n\r\nimport PDBParser from './parsers/PDBParser'\r\nimport CMLParser from './parsers/CMLParser'\r\nimport MMTFParser from './parsers/MMTFParser'\r\nimport CIFParser from './parsers/CIFParser'\r\nimport CCP4Parser from './parsers/CCP4Parser'\r\nimport XYZParser from './parsers/XYZParser'\r\nimport PubChemParser from './parsers/PubChemParser'\r\nimport SDFParser from './parsers/SDFParser'\r\nimport DSN6Parser from './parsers/DSN6Parser'\r\nimport GROParser from './parsers/GROParser'\r\nimport MOL2Parser from './parsers/MOL2Parser'\r\n\r\nexport default new ParserList([\r\n  // note: order might be important\r\n  PDBParser,\r\n  CIFParser,\r\n  MMTFParser,\r\n  XYZParser,\r\n  CMLParser,\r\n  PubChemParser,\r\n  SDFParser,\r\n  CCP4Parser,\r\n  DSN6Parser,\r\n  GROParser,\r\n  MOL2Parser\r\n])\r\n",
		"import EntityList from '../../utils/EntityList'\r\n\r\n/**\r\n * A list of available exporters.\r\n * @extends EntityList\r\n */\r\nclass ExporterList extends EntityList {\r\n  /**\r\n   * Create a list of exporters.\r\n   * The exporters are indexed by supported data formats (`.formats` and\r\n   * `.extensions` properties of a Exporter subclass).\r\n   * The Exporters can be retrieved later by matching against specs (see {@link ExporterList#find}).\r\n   *\r\n   * @param {!Array<function(new:Exporter)>=} someExporters A list of {@link Exporter} subclasses to\r\n   *   automatically register at creation time.\r\n   * @see ExporterList#register\r\n   */\r\n  constructor(someExporters = []) {\r\n    super(someExporters, ['formats'])\r\n  }\r\n\r\n  /**\r\n   * Find a suitable exporter for data.\r\n   *\r\n   * @param {Object} specs Exporter specifications.\r\n   * @param {string=} specs.format Supported data format.\r\n   * @param {*=} specs.data Data to export.\r\n   */\r\n  find(specs) {\r\n    let list = []\r\n    if (specs.format) {\r\n      list = this._dict.formats[specs.format.toLowerCase()] || []\r\n    }\r\n    return [...list]\r\n  }\r\n}\r\n\r\nexport default ExporterList\r\n",
		"import makeContextDependent from '../../utils/makeContextDependent'\r\n\r\nexport default class Exporter {\r\n  constructor(source, options) {\r\n    this._source = source\r\n    this._options = options || {}\r\n    this._abort = false\r\n  }\r\n\r\n  exportSync() {\r\n    throw new Error('Exporting to this source is not implemented')\r\n  }\r\n\r\n  export() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        try {\r\n          if (this._abort) {\r\n            return reject(new Error('Export aborted'))\r\n          }\r\n          return resolve(this.exportSync())\r\n        } catch (error) {\r\n          return reject(error)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  abort() {\r\n    this._abort = true\r\n  }\r\n}\r\n\r\nmakeContextDependent(Exporter.prototype)\r\n",
		"import { isBoolean, isUndefined, isNumber, isString } from 'lodash'\r\nimport { Matrix4 } from 'three'\r\n\r\nexport default class PDBResult {\r\n  constructor() {\r\n    this._resultArray = []\r\n    this._currentStr = -1\r\n    this._tag = null\r\n    this._fixedNumeration = false\r\n    this._numeration = false\r\n    this._tagStrNum = 0\r\n  }\r\n\r\n  getResult() {\r\n    this.writeString('\\n', 81, 81)\r\n    return this._resultArray.join('')\r\n  }\r\n\r\n  _currentStrLength() {\r\n    const curStr = this._resultArray[this._currentStr]\r\n    return curStr ? curStr.length : 0\r\n  }\r\n\r\n  // numeration can be number or boolean\r\n  // if numeration is number then just put this number to 8-10 pos in string\r\n  // if numeration is boolean then increase number for all new strings\r\n  newTag(tag, numeration) {\r\n    if (!tag) {\r\n      this._tag = null\r\n    } else {\r\n      this._tag = tag\r\n    }\r\n    if (!isUndefined(numeration)) {\r\n      if (isNumber(numeration)) {\r\n        this._tagStrNum = numeration\r\n        this._numeration = true\r\n        this._fixedNumeration = true\r\n      } else if (isBoolean(numeration)) {\r\n        this._tagStrNum = 0\r\n        this._numeration = numeration\r\n        this._fixedNumeration = false\r\n      }\r\n    } else {\r\n      this._numeration = false\r\n      this._fixedNumeration = false\r\n      this._tagStrNum = 0\r\n    }\r\n  }\r\n\r\n  newString(tag) {\r\n    this.writeString('\\n', 81, 81)\r\n    this._currentStr++\r\n    this._resultArray.push('')\r\n\r\n    if (tag) {\r\n      this.writeString(tag, 1, 6)\r\n    } else if (this._tag) {\r\n      this.writeString(this._tag, 1, 6)\r\n    }\r\n\r\n    if (this._numeration) {\r\n      if (!this._fixedNumeration) {\r\n        this._tagStrNum++\r\n      }\r\n      if (this._tagStrNum !== 1) {\r\n        this.writeString(this._tagStrNum.toString(), 10, 8)\r\n      }\r\n    }\r\n  }\r\n\r\n  writeEntireString(string, maxStrPos, concat) {\r\n    if (!maxStrPos) {\r\n      maxStrPos = 81\r\n    }\r\n    for (let j = 0; j < string.length; j++) {\r\n      if (this._currentStrLength() === maxStrPos && j !== string.length - 1) {\r\n        this.newString()\r\n        if (concat) {\r\n          // pretty hardcoddy\r\n          this.writeString(concat.tag, concat.begin, concat.end)\r\n        }\r\n      }\r\n      if (string[j] === '\\n') {\r\n        this.newString()\r\n      } else {\r\n        this.writeString(string[j])\r\n      }\r\n    }\r\n  }\r\n\r\n  writeString(string, begin, end) {\r\n    let curStr = this._resultArray[this._currentStr]\r\n    let str\r\n\r\n    const curStrLength = curStr ? curStr.length : 0\r\n\r\n    if (isUndefined(string)) {\r\n      return\r\n    }\r\n\r\n    if (!isNumber(begin)) {\r\n      begin = curStrLength + 1\r\n    }\r\n\r\n    if (!isNumber(end)) {\r\n      end = curStrLength + string.length\r\n    }\r\n\r\n    if (!isString(string)) {\r\n      str = string.toString()\r\n    } else {\r\n      str = string\r\n    }\r\n\r\n    const finish = begin < end ? end : begin\r\n    const start = begin < end ? begin : end\r\n\r\n    if (str.length > Math.abs(begin - end) + 1) {\r\n      str = str.substr(0, Math.abs(begin - end + 1))\r\n    }\r\n\r\n    // spaces before start of new data\r\n    if (start > curStrLength + 1) {\r\n      this._resultArray[this._currentStr] += ' '.repeat(\r\n        start - curStrLength - 1\r\n      )\r\n    } else if (start <= curStrLength) {\r\n      const cStr = this._resultArray[this._currentStr]\r\n      this._resultArray[this._currentStr] = cStr.slice(0, start - 1)\r\n    }\r\n\r\n    // if reverse order\r\n    // reverse order of end and begin means that user wants to align text right\r\n    if (end < begin) {\r\n      const len = begin - end + 1\r\n      str = ' '.repeat(len - str.length) + str\r\n    }\r\n\r\n    // some hardcode fix for space between string numeration and data\r\n    // (see pdb file format description)\r\n    if (start === 11 && this._numeration && this._tagStrNum !== 1) {\r\n      str = ` ${str}`\r\n    }\r\n\r\n    // append new data to string\r\n    this._resultArray[this._currentStr] += str\r\n    curStr = this._resultArray[this._currentStr]\r\n\r\n    if (finish > curStr.length) {\r\n      this._resultArray[this._currentStr] += ' '.repeat(finish - curStr.length)\r\n    }\r\n  }\r\n\r\n  writeBondsArray(bonds, atom) {\r\n    const bondsArrays = this._getSubArrays(bonds, 4)\r\n\r\n    for (let k = 0; k < bondsArrays.length; k++) {\r\n      this.newString()\r\n      this.writeString(atom.serial, 11, 7)\r\n\r\n      for (let j = 0; j < bondsArrays[k].length; j++) {\r\n        const serial =\r\n          bondsArrays[k][j]._left.serial === atom.serial\r\n            ? bondsArrays[k][j]._right.serial\r\n            : bondsArrays[k][j]._left.serial\r\n\r\n        this.writeString(serial, 16 + 5 * j, 12 + 5 * j)\r\n      }\r\n    }\r\n  }\r\n\r\n  _getSubArrays(arr, subArraySize) {\r\n    const subArrays = []\r\n    for (let i = 0; i < arr.length; i += subArraySize) {\r\n      subArrays.push(arr.slice(i, i + subArraySize))\r\n    }\r\n    return subArrays\r\n  }\r\n\r\n  // function for writing matrix in Remark290 and Remark350 tags\r\n  // (see pdb file description)\r\n  writeMatrix(matrix, matrixIndx, tag) {\r\n    for (let j = 0; j < 3; j++) {\r\n      this.newString()\r\n      this.writeString(tag, 14, 18)\r\n      this.writeString((j + 1).toString(), 19, 19)\r\n      this.writeString(matrixIndx.toString(), 23, 20)\r\n      for (let k = 0; k < 3; k++) {\r\n        const numb = parseFloat(matrix.elements[j * 4 + k]).toFixed(6)\r\n        this.writeString(numb.toString(), 33 + k * 10, 24 + k * 10)\r\n      }\r\n\r\n      const numb = parseFloat(matrix.elements[j * 4 + 3]).toFixed(5)\r\n      this.writeString(numb.toString(), 68, 55)\r\n    }\r\n  }\r\n\r\n  writeMatrices(matrices, string) {\r\n    if (!matrices) {\r\n      return\r\n    }\r\n    const matrix = new Matrix4()\r\n    for (let j = 0; j < matrices.length; j++) {\r\n      matrix.copy(matrices[j]).transpose()\r\n      this.writeMatrix(matrix, j + 1, string)\r\n    }\r\n  }\r\n}\r\n",
		"import { invert } from 'lodash'\r\nimport Complex from '../../chem/Complex'\r\nimport Exporter from './Exporter'\r\nimport PDBResult from './PDBResult'\r\nimport Assembly from '../../chem/Assembly'\r\nimport { typeByPDBHelixClass } from '../../chem/Helix'\r\n\r\nexport default class PDBExporter extends Exporter {\r\n  constructor(source, options) {\r\n    super(source, options)\r\n    this._tags = [\r\n      'HEADER',\r\n      'TITLE',\r\n      'COMPND',\r\n      'REMARK',\r\n      'HELIX',\r\n      'SHEET',\r\n      'ATOM and HETATM',\r\n      'CONECT'\r\n    ]\r\n    this._result = null\r\n    this._tagExtractors = {\r\n      HEADER: this._extractHEADER,\r\n      TITLE: this._extractTITLE,\r\n      'ATOM and HETATM': this._extractATOM,\r\n      CONECT: this._extractCONECT,\r\n      COMPND: this._extractCOMPND,\r\n      REMARK: this._extractREMARK,\r\n      HELIX: this._extractHELIX,\r\n      SHEET: this._extractSHEET\r\n    }\r\n    this._stringForRemark350 =\r\n      'COORDINATES FOR A COMPLETE MULTIMER REPRESENTING THE KNOWN\\n' +\r\n      'BIOLOGICALLY SIGNIFICANT OLIGOMERIZATION STATE OF THE\\n' +\r\n      'MOLECULE CAN BE GENERATED BY APPLYING BIOMT TRANSFORMATIONS\\n' +\r\n      'GIVEN BELOW.  BOTH NON-CRYSTALLOGRAPHIC AND\\n' +\r\n      'CRYSTALLOGRAPHIC OPERATIONS ARE GIVEN.'\r\n\r\n    this._stringForRemark290 =\r\n      'CRYSTALLOGRAPHIC SYMMETRY TRANSFORMATIONS\\n' +\r\n      'THE FOLLOWING TRANSFORMATIONS OPERATE ON THE ATOM/HETATM\\n' +\r\n      'RECORDS IN THIS ENTRY TO PRODUCE CRYSTALLOGRAPHICALLY\\n' +\r\n      'RELATED MOLECULES.'\r\n  }\r\n\r\n  exportSync() {\r\n    const result = new PDBResult()\r\n    if (!this._source) {\r\n      return this._result\r\n    }\r\n\r\n    for (let i = 0; i < this._tags.length; i++) {\r\n      const tag = this._tags[i]\r\n      const func = this._tagExtractors[tag]\r\n      if (typeof func === 'function') {\r\n        func.call(this, result)\r\n      }\r\n    }\r\n\r\n    this._result = result.getResult()\r\n\r\n    return this._result\r\n  }\r\n\r\n  _extractHEADER(result) {\r\n    if (!this._source.metadata) {\r\n      return\r\n    }\r\n    const { metadata } = this._source\r\n    result.newTag('HEADER')\r\n    result.newString()\r\n    if (metadata.classification) {\r\n      result.writeString(metadata.classification, 11, 50)\r\n    }\r\n    if (metadata.date) {\r\n      result.writeString(metadata.date, 51, 59)\r\n    }\r\n    if (metadata.id) {\r\n      result.writeString(metadata.id, 63, 66)\r\n    }\r\n  }\r\n\r\n  _extractTITLE(result) {\r\n    if (!this._source.metadata) {\r\n      return\r\n    }\r\n    const { metadata } = this._source\r\n    if (!metadata.title) {\r\n      return\r\n    }\r\n    result.newTag('TITLE', true)\r\n    for (let i = 0; i < metadata.title.length; i++) {\r\n      result.newString()\r\n      result.writeString(metadata.title[i], 11, 80)\r\n    }\r\n  }\r\n\r\n  _extractCONECT(result) {\r\n    if (!this._source._atoms) {\r\n      return\r\n    }\r\n\r\n    const atoms = this._source._atoms\r\n    result.newTag('CONECT')\r\n\r\n    for (let i = 0; i < atoms.length; i++) {\r\n      const fixedBonds = atoms[i].bonds.filter((bond) => bond._fixed)\r\n      if (fixedBonds.length !== 0) {\r\n        result.writeBondsArray(fixedBonds.reverse(), atoms[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  _extractSHEET(result) {\r\n    if (!this._source._sheets) {\r\n      return\r\n    }\r\n\r\n    result.newTag('SHEET')\r\n\r\n    const sheets = this._source._sheets\r\n    for (let i = 0; i < sheets.length; i++) {\r\n      if (sheets[i]._strands) {\r\n        const strands = sheets[i]._strands\r\n        for (let j = 0; j < strands.length; j++) {\r\n          result.newString()\r\n          result.writeString(j + 1, 10, 8)\r\n          result.writeString(sheets[i]._name, 14, 12)\r\n          result.writeString(strands.length, 16, 15)\r\n          result.writeString(strands[j].init._type._name, 18, 20)\r\n          result.writeString(strands[j].init._chain._name, 22, 22)\r\n          result.writeString(strands[j].init._sequence, 26, 23)\r\n          result.writeString(strands[j].init._icode, 27, 27)\r\n          result.writeString(strands[j].term._type._name, 29, 31)\r\n          result.writeString(strands[j].init._chain._name, 33, 33)\r\n          result.writeString(strands[j].term._sequence, 37, 34)\r\n          result.writeString(strands[j].term._icode, 38, 38)\r\n          result.writeString(strands[j].sense, 40, 39)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _extractHELIX(result) {\r\n    if (!this._source._helices) {\r\n      return\r\n    }\r\n\r\n    result.newTag('HELIX')\r\n    const helices = this._source._helices\r\n    for (let i = 0; i < helices.length; i++) {\r\n      const helix = helices[i]\r\n      const helixClass = invert(typeByPDBHelixClass)\r\n      result.newString()\r\n      result.writeString(helix.serial, 10, 8)\r\n      result.writeString(helix.name, 14, 12)\r\n      result.writeString(helix.init._type._name, 16, 18)\r\n      result.writeString(helix.init._chain._name, 20, 20)\r\n      result.writeString(helix.init._sequence, 25, 22)\r\n      result.writeString(helix.init._icode, 26, 26)\r\n      result.writeString(helix.term._type._name, 28, 30)\r\n      result.writeString(helix.term._chain._name, 32, 32)\r\n      result.writeString(helix.term._sequence, 37, 34)\r\n      result.writeString(helix.term._icode, 38, 38)\r\n      result.writeString(helixClass[helix.type], 40, 39)\r\n      result.writeString(helix.comment, 41, 70)\r\n      result.writeString(helix.length, 76, 72)\r\n    }\r\n  }\r\n\r\n  _extractATOM(result) {\r\n    if (!this._source._atoms) {\r\n      return\r\n    }\r\n    const atoms = this._source._atoms\r\n\r\n    for (let i = 0; i < atoms.length; i++) {\r\n      const tag = atoms[i].het ? 'HETATM' : 'ATOM'\r\n      result.newString(tag)\r\n      const startIndx =\r\n        atoms[i].element.name.length > 1 || atoms[i].name.length > 3 ? 13 : 14\r\n      result.writeString(atoms[i].serial, 11, 7)\r\n      result.writeString(atoms[i].name, startIndx, 16)\r\n      result.writeString(String.fromCharCode(atoms[i].location), 17, 17)\r\n      result.writeString(atoms[i].residue._type._name, 20, 18)\r\n      result.writeString(atoms[i].residue._chain._name, 22, 22)\r\n      result.writeString(atoms[i].residue._sequence, 26, 23)\r\n      result.writeString(atoms[i].residue._icode, 27, 27)\r\n      result.writeString(atoms[i].position.x.toFixed(3), 38, 31)\r\n      result.writeString(atoms[i].position.y.toFixed(3), 46, 39)\r\n      result.writeString(atoms[i].position.z.toFixed(3), 54, 47)\r\n      result.writeString(atoms[i].occupancy.toFixed(2), 60, 55)\r\n      result.writeString(atoms[i].temperature.toFixed(2), 66, 61)\r\n      result.writeString(atoms[i].element.name, 78, 77)\r\n      if (atoms[i].charge) {\r\n        result.writeString(atoms[i].charge, 79, 80)\r\n      }\r\n    }\r\n  }\r\n\r\n  _extractCOMPND(result) {\r\n    if (!this._source._molecules) {\r\n      return\r\n    }\r\n    const molecules = this._source._molecules\r\n    result.newTag('COMPND', true)\r\n\r\n    for (let i = 0; i < molecules.length; i++) {\r\n      const chains = this._getMoleculeChains(molecules[i])\r\n      result.newString()\r\n      result.writeString(`MOL_ID: ${molecules[i].index};`, 11, 80)\r\n      result.newString()\r\n      result.writeString(`MOLECULE: ${molecules[i].name};`, 11, 80)\r\n      result.newString()\r\n      result.writeString('CHAIN: ', 11, 18)\r\n      const chainsString = `${chains.join(', ')};`\r\n      result.writeEntireString(chainsString, 81)\r\n    }\r\n  }\r\n\r\n  _extractREMARK(result) {\r\n    this._Remark290(result)\r\n    this._Remark350(result)\r\n  }\r\n\r\n  _Remark290(result) {\r\n    if (!this._source.symmetry) {\r\n      return\r\n    }\r\n\r\n    if (this._source.symmetry.length !== 0) {\r\n      const matrices = this._source.symmetry\r\n      result.newTag('REMARK', 290)\r\n      result.newString()\r\n      result.newString()\r\n      result.writeEntireString(this._stringForRemark290)\r\n      result.writeMatrices(matrices, 'SMTRY')\r\n      result.newString()\r\n      result.newString()\r\n      result.writeString('REMARK: NULL', 11, 80)\r\n    }\r\n  }\r\n\r\n  _Remark350(result) {\r\n    if (!this._source.units) {\r\n      return\r\n    }\r\n    const { units } = this._source\r\n    let biomolIndx = 0\r\n\r\n    result.newTag('REMARK', 350)\r\n    result.newString()\r\n    result.newString()\r\n    result.writeEntireString(this._stringForRemark350)\r\n\r\n    const assemblies = units.filter((unit) => unit instanceof Assembly)\r\n\r\n    for (let i = 0; i < assemblies.length; i++) {\r\n      result.newString()\r\n      result.newString()\r\n      biomolIndx++\r\n      result.writeString(`BIOMOLECULE: ${biomolIndx}`, 11, 80)\r\n      const chains = assemblies[i].chains.join(', ')\r\n      result.newString()\r\n      result.writeString('APPLY THE FOLLOWING TO CHAINS: ')\r\n      result.writeEntireString(chains, 69, {\r\n        tag: 'AND CHAINS: ',\r\n        begin: 31,\r\n        end: 42\r\n      })\r\n\r\n      const { matrices } = assemblies[i]\r\n      result.writeMatrices(matrices, 'BIOMT')\r\n    }\r\n  }\r\n\r\n  _getMoleculeChains(molecule) {\r\n    function getChainName(residue) {\r\n      return residue._chain._name\r\n    }\r\n    const chainNames = molecule.residues.map(getChainName)\r\n    return chainNames.filter((item, pos) => chainNames.indexOf(item) === pos)\r\n  }\r\n}\r\n\r\nPDBExporter.formats = ['pdb']\r\nPDBExporter.SourceClass = Complex\r\n",
		"import { Vector4 } from 'three'\r\n\r\nconst FBX_POS_SIZE = 3\r\nconst FBX_NORM_SIZE = 3\r\nconst FBX_COL_SIZE = 4\r\n\r\nfunction copyFbxPoint3(src, srcIdx, dst, dstIdx) {\r\n  dst[dstIdx] = src[srcIdx]\r\n  dst[dstIdx + 1] = src[srcIdx + 1]\r\n  dst[dstIdx + 2] = src[srcIdx + 2]\r\n}\r\n\r\nfunction copyFbxPoint4(src, srcIdx, dst, dstIdx, value) {\r\n  dst[dstIdx] = src[srcIdx]\r\n  dst[dstIdx + 1] = src[srcIdx + 1]\r\n  dst[dstIdx + 2] = src[srcIdx + 2]\r\n  dst[dstIdx + 3] = value\r\n}\r\n\r\nconst vector4 = new Vector4()\r\nfunction copyTransformedPoint3(src, srcIdx, dst, dstIdx, opts) {\r\n  vector4.set(src[srcIdx], src[srcIdx + 1], src[srcIdx + 2], opts.w)\r\n  vector4.applyMatrix4(opts.matrix)\r\n  dst[dstIdx] = vector4.x\r\n  dst[dstIdx + 1] = vector4.y\r\n  dst[dstIdx + 2] = vector4.z\r\n}\r\n\r\nfunction setSubArray(src, dst, count, copyFunctor, functorOpts) {\r\n  if (\r\n    (dst.array.length - dst.start) / dst.stride < count ||\r\n    (src.array.length - src.start) / src.stride < count\r\n  ) {\r\n    return // we've got no space\r\n  }\r\n  if (src.stride === dst.stride) {\r\n    // stride is the same\r\n    dst.array.set(src.array, dst.start)\r\n  } else {\r\n    let idx = dst.start\r\n    let arridx = src.start\r\n    for (let i = 0; i < count; ++i, idx += dst.stride, arridx += src.stride) {\r\n      copyFunctor(src.array, arridx, dst.array, idx, functorOpts)\r\n    }\r\n  }\r\n}\r\n\r\nexport default class FBXModel {\r\n  constructor() {\r\n    this.positions = null\r\n    this.normals = null\r\n    this.colors = null\r\n    this.indices = null\r\n    this.lastPos = 0\r\n    this.lastNorm = 0\r\n    this.lastCol = 0\r\n    this.lastIdx = 0\r\n  }\r\n\r\n  init(vertsCount, indsCount) {\r\n    this.positions = new Float32Array(vertsCount * FBX_POS_SIZE)\r\n    this.normals = new Float32Array(vertsCount * FBX_NORM_SIZE)\r\n    this.colors = new Float32Array(vertsCount * FBX_COL_SIZE)\r\n    this.indices = new Int32Array(indsCount)\r\n  }\r\n\r\n  setPositions(array, start, count, stride) {\r\n    const src = {\r\n      array,\r\n      start,\r\n      stride\r\n    }\r\n    const dst = {\r\n      array: this.positions,\r\n      start: this.lastPos,\r\n      stride: FBX_POS_SIZE\r\n    }\r\n    setSubArray(src, dst, count, copyFbxPoint3)\r\n    this.lastPos += count * FBX_POS_SIZE\r\n  }\r\n\r\n  setTransformedPositions(array, start, count, stride, matrix) {\r\n    let idx = this.lastPos\r\n    let arrIdx = start\r\n    const opts = { matrix, w: 1 }\r\n    for (let i = 0; i < count; ++i, arrIdx += stride, idx += FBX_POS_SIZE) {\r\n      copyTransformedPoint3(array, arrIdx, this.positions, idx, opts)\r\n    }\r\n    this.lastPos += count * FBX_POS_SIZE\r\n  }\r\n\r\n  setNormals(array, start, count, stride) {\r\n    const src = {\r\n      array,\r\n      start,\r\n      stride\r\n    }\r\n    const dst = {\r\n      array: this.normals,\r\n      start: this.lastNorm,\r\n      stride: FBX_NORM_SIZE\r\n    }\r\n    setSubArray(src, dst, count, copyFbxPoint3)\r\n    this.lastNorm += count * FBX_NORM_SIZE\r\n  }\r\n\r\n  setTransformedNormals(array, start, count, stride, matrix) {\r\n    let idx = this.lastNorm\r\n    let arrIdx = start\r\n    const opts = { matrix, w: 0 }\r\n    for (let i = 0; i < count; ++i, arrIdx += stride, idx += FBX_NORM_SIZE) {\r\n      copyTransformedPoint3(array, arrIdx, this.normals, idx, opts)\r\n    }\r\n    this.lastNorm += count * FBX_NORM_SIZE\r\n  }\r\n\r\n  setColors(array, start, count, stride) {\r\n    const src = {\r\n      array,\r\n      start,\r\n      stride\r\n    }\r\n    const dst = {\r\n      array: this.colors,\r\n      start: this.lastCol,\r\n      stride: FBX_COL_SIZE\r\n    }\r\n    setSubArray(src, dst, count, copyFbxPoint4, 1)\r\n    this.lastCol += count * FBX_COL_SIZE\r\n  }\r\n\r\n  setIndices(array, start, count) {\r\n    this.indices.set(array, this.lastIdx)\r\n    this.lastIdx += count\r\n  }\r\n\r\n  setShiftedIndices(array, count, shift) {\r\n    const shifted = array.map((x) => x + shift)\r\n    this.setIndices(shifted, 0, count)\r\n  }\r\n\r\n  getVerticesNumber() {\r\n    return this.lastPos / FBX_POS_SIZE\r\n  }\r\n\r\n  addInstance(matrix, geo) {\r\n    // add indices at first to take old number of vertices for shift\r\n    const currentCount = this.getVerticesNumber()\r\n    this.setShiftedIndices(geo.indices, geo.indices.length, currentCount)\r\n    // simply write vertices at empty space\r\n    const size = geo.itemSize\r\n    this.setTransformedPositions(\r\n      geo.positions,\r\n      0,\r\n      geo.vertsCount,\r\n      size.position,\r\n      matrix\r\n    )\r\n    this.setTransformedNormals(\r\n      geo.normals,\r\n      0,\r\n      geo.vertsCount,\r\n      size.normal,\r\n      matrix\r\n    )\r\n    this.setColors(geo.colors, 0, geo.vertsCount, size.color)\r\n  }\r\n}\r\n",
		"/** Base class for fbx geometry contains simply organized attributes: positions+normals+colors, indices. */\r\nexport default class FBXGeometry {\r\n  /**\r\n   * Create a base geo with necessary members.\r\n   */\r\n  constructor() {\r\n    this.positions = null\r\n    this.normals = null\r\n    this.colors = null\r\n    this.indices = null\r\n    this.vertsCount = 0\r\n    this.itemSize = null\r\n  }\r\n\r\n  /**\r\n   * Initialize base geo storing items info from attributes.\r\n   * @param {Object} geo - THREE.BufferGeometry.\r\n   */\r\n  init(geo, _info) {\r\n    const { attributes } = geo\r\n    // save item size\r\n    this.itemSize = {\r\n      position: attributes.position.itemSize,\r\n      normal: attributes.normal.itemSize,\r\n      color: attributes.color.itemSize\r\n    }\r\n  }\r\n}\r\n",
		"import FBXGeometry from './FBXGeometry'\r\n\r\n/**\r\n * Fbx geometry, that copies positions+normals, indexes and creates colors filled with defined value.\r\n * @extends FBXGeometry\r\n */\r\nexport default class FBX1CGeometry extends FBXGeometry {\r\n  /**\r\n   * Initialize geo storing positions, normals, indices and create colors.\r\n   * @param {Object} geo - THREE.BufferGeometry.\r\n   */\r\n  init(geo, _info) {\r\n    super.init(geo, _info)\r\n    const {\r\n      attributes: { position, normal },\r\n      index\r\n    } = geo\r\n    // copy vertices attributes\r\n    this.vertsCount = position.count\r\n    this.positions = position.array\r\n    this.normals = normal.array\r\n    // create color array\r\n    this.colors = new Float32Array(this.vertsCount * this.itemSize.color)\r\n    // indices\r\n    this.indices = index.array\r\n  }\r\n\r\n  /**\r\n   * Set defined color for all items in color attribute\r\n   * @param {Object} color - THREE.Color.\r\n   */\r\n  setColors(color) {\r\n    let offset = 0\r\n    for (\r\n      let i = 0, l = this.colors.length, cl = this.itemSize.color;\r\n      i < l;\r\n      i += cl\r\n    ) {\r\n      this.colors[offset++] = color.r\r\n      this.colors[offset++] = color.g\r\n      this.colors[offset++] = color.b\r\n    }\r\n  }\r\n}\r\n",
		"import FBXGeometry from './FBXGeometry'\r\n\r\n/**\r\n * Fbx geometry, that copies positions+normals, indexes from cylinder  geometry and creates colors filled with two\r\n * defined values.\r\n * @extends FBXGeometry\r\n */\r\nexport default class FBX2CCylinder extends FBXGeometry {\r\n  constructor() {\r\n    super()\r\n    this._cutRawStart = 0\r\n    this._cutRawEnd = 0\r\n    this._facesPerSlice = 0\r\n  }\r\n\r\n  /**\r\n   * Initialize geo by creating new attributes, because we extend number of vertices to make cylinder two-colored.\r\n   * Indices remain the same. We process open- end close-ended cylinders and consider cylinders od 2 segments\r\n   * in height ONLY.\r\n   * NOTE: cylinder consists of 2 height segments and stores parts in the order: tube, topCap, bottomCap\r\n   * @param {Object} geo - THREE.BufferGeometry.\r\n   * @param {Object} info - information needed for geo extend\r\n   */\r\n  init(geo, info) {\r\n    super.init(geo, info)\r\n    const {\r\n      attributes: { position },\r\n      index\r\n    } = geo\r\n    // extend vertices arrays\r\n    this.vertsCount = position.count + info.addPerCylinder\r\n    this._facesPerSlice = info.addPerCylinder\r\n    this.positions = new Float32Array(this.vertsCount * position.itemSize)\r\n    this.normals = new Float32Array(this.vertsCount * this.itemSize.normal)\r\n    this.colors = new Float32Array(this.vertsCount * this.itemSize.color)\r\n    this._extendVertices(geo, info)\r\n    // number of indices stays the same\r\n    this.indices = new Uint32Array(index.count)\r\n    this._extendIndices(geo, info)\r\n  }\r\n\r\n  /** Extend vertex attributes to have one more slice to make sharp middle startColor-endColor line. */\r\n  _extendVertices(geo, info) {\r\n    const { position } = geo.attributes\r\n    const { normal } = geo.attributes\r\n    const geoParams = geo.getGeoParams()\r\n    const cutRaw = 1 // we expect cylinders of 2 segments in height => so half segment = 1\r\n    this._cutRawStart = cutRaw * geoParams.radialSegments\r\n    this._cutRawEnd = this._cutRawStart + info.addPerCylinder\r\n    {\r\n      // write first half of cylinder\r\n      let temp = position.array.slice(0, this._cutRawEnd * position.itemSize)\r\n      this.positions.set(temp, 0)\r\n      temp = normal.array.slice(0, this._cutRawEnd * normal.itemSize)\r\n      this.normals.set(temp, 0)\r\n    }\r\n    {\r\n      // write second part of cylinder\r\n      let temp = position.array.slice(\r\n        this._cutRawStart * position.itemSize,\r\n        position.array.length\r\n      )\r\n      this.positions.set(temp, this._cutRawEnd * position.itemSize)\r\n      temp = normal.array.slice(\r\n        this._cutRawStart * normal.itemSize,\r\n        normal.array.length\r\n      )\r\n      this.normals.set(temp, this._cutRawEnd * normal.itemSize)\r\n    }\r\n  }\r\n\r\n  /** Shift values of second part (+caps) indices by newly added vertices count. Number of faces remains the same. */\r\n  _extendIndices(geo, info) {\r\n    const { index } = geo\r\n    const indicesPerQuad = 6 // quad = 2 triangles => 6 indices\r\n    const startToShift = info.addPerCylinder * indicesPerQuad\r\n    const shift = info.addPerCylinder\r\n    let shifted = index.array.slice(startToShift, index.count)\r\n    shifted = shifted.map((x) => x + shift) // shift only the endings\r\n    this.indices.set(index.array, 0)\r\n    this.indices.set(shifted, startToShift)\r\n  }\r\n\r\n  /**\r\n   * Set defined colors: (first part + bottom cap), (second part + top cap)\r\n   * @param {number} start - start color index\r\n   * @param {number} end - start color index\r\n   * @param {array} array - array of colors\r\n   * @param {array} color - color value components\r\n   */\r\n  _setColorRange(start, end, array, color) {\r\n    const colorSize = color.length\r\n    for (let i = start; i < end; i += colorSize) {\r\n      array.set(color, i)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set defined colors: (first part + bottom cap), (second part + top cap)\r\n   * @param {Object} color1 - THREE.Color.\r\n   * @param {Object} color2 - THREE.Color.\r\n   */\r\n  setColors(color1, color2) {\r\n    const colorSize = this.itemSize.color\r\n    const part1End = this._cutRawEnd * colorSize\r\n    const part2End = part1End * 2\r\n    this._setColorRange(0, part1End, this.colors, color1.toArray())\r\n    this._setColorRange(part1End, part2End, this.colors, color2.toArray())\r\n    if (part2End < this.colors.length) {\r\n      // cylinder has caps, lets paint them\r\n      const capSize = (this._facesPerSlice + 1) * colorSize\r\n      const cap1End = part2End + capSize\r\n      this._setColorRange(part2End, cap1End, this.colors, color2.toArray())\r\n      const cap2End = cap1End + capSize // should be equal to this.colors.length;\r\n      this._setColorRange(cap1End, cap2End, this.colors, color1.toArray())\r\n    }\r\n  }\r\n}\r\n",
		"import utils from '../../../utils'\r\nimport gfxutils from '../../../gfx/gfxutils'\r\nimport logger from '../../../utils/logger'\r\n\r\nimport FBXModel from './FBXModel'\r\nimport ThickLineMesh from '../../../gfx/meshes/ThickLineMesh'\r\nimport ZSpriteMesh from '../../../gfx/meshes/ZSpriteMesh'\r\nimport InstancedSpheresGeometry from '../../../gfx/geometries/InstancedSpheresGeometry'\r\nimport Instanced2CCylindersGeometry from '../../../gfx/geometries/Instanced2CCylindersGeometry'\r\nimport FBX1CGeometry from './FBX1CGeometry'\r\nimport FBX2CCylinder from './FBX2CCylinder'\r\nimport { Layers, Matrix4, Mesh, Color } from 'three'\r\nimport { findIndex, isEqual } from 'lodash'\r\n\r\nexport default class FBXInfoExtractor {\r\n  constructor() {\r\n    this._materials = []\r\n    this._models = []\r\n  }\r\n\r\n  process(data) {\r\n    this._extractModelsAndMaterials(data)\r\n    const models = this._flattenModels()\r\n\r\n    return {\r\n      name: data.name,\r\n      models,\r\n      materials: this._materials\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extract fbx object information from ComplexVisual\r\n   * @param {object} data - complexVisual to get geometry info from\r\n   */\r\n  _extractModelsAndMaterials(data) {\r\n    const layersOfInterest = new Layers()\r\n    layersOfInterest.set(gfxutils.LAYERS.DEFAULT)\r\n    layersOfInterest.enable(gfxutils.LAYERS.TRANSPARENT)\r\n    data.traverse((object) => {\r\n      if (\r\n        object instanceof Mesh &&\r\n        object.layers.test(layersOfInterest) &&\r\n        this.checkExportAbility(object)\r\n      ) {\r\n        if (object.geometry.type === 'InstancedBufferGeometry') {\r\n          this._collectInstancedGeoInfo(object)\r\n        } else {\r\n          this._collectGeoInfo(object)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Reworking indices buffer, see https://banexdevblog.wordpress.com/2014/06/23/a-quick-tutorial-about-the-fbx-ascii-format/\r\n   * basically, every triangle in Miew has been represented hat way (e.g.) : 0,1,7, but we must (for FBX) rework that\r\n   * into: 0,1,-8.\r\n   * @param {array} indices - belongs to [0, maxVertIndex]\r\n   */\r\n  _reworkIndices(indices) {\r\n    const faceSize = 3\r\n    for (let i = faceSize - 1; i < indices.length; i += faceSize) {\r\n      indices[i] *= -1\r\n      indices[i]--\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Combine geometry from several models having the same material into one Model and finally prepare indices\r\n   * @returns {array} models, combined by material id\r\n   */\r\n  _flattenModels() {\r\n    let overallVertsCount = 0\r\n    function shift(x) {\r\n      return x + overallVertsCount\r\n    }\r\n    const combined = []\r\n    // flatten models geometry\r\n    for (let i = 0, n = this._models.length; i < n; i++) {\r\n      const models = this._models[i]\r\n      let indices = []\r\n      let positions = []\r\n      let normals = []\r\n      let colors = []\r\n      // reorganize every attributes as array of arrays\r\n      overallVertsCount = 0\r\n      for (let j = 0; j < models.length; j++) {\r\n        const m = models[j]\r\n        indices.push(m.indices.map(shift))\r\n        overallVertsCount += m.getVerticesNumber()\r\n        positions.push(m.positions)\r\n        normals.push(m.normals)\r\n        colors.push(m.colors)\r\n      }\r\n      // join all subarrays into one\r\n      indices = utils.mergeTypedArraysUnsafe(indices)\r\n      this._reworkIndices(indices)\r\n      positions = utils.mergeTypedArraysUnsafe(positions)\r\n      normals = utils.mergeTypedArraysUnsafe(normals)\r\n      colors = utils.mergeTypedArraysUnsafe(colors)\r\n      combined.push({\r\n        indices,\r\n        positions,\r\n        normals,\r\n        colors,\r\n        verticesCount: overallVertsCount\r\n      })\r\n    }\r\n    return combined\r\n  }\r\n\r\n  /**\r\n   * Check ability to export the kind of mesh.\r\n   * @param {object} mesh - given mesh to check\r\n   * @returns {boolean} result of check\r\n   */\r\n  checkExportAbility(mesh) {\r\n    // check mesh on not being empty\r\n    if (mesh.geometry.attributes.position.count === 0) {\r\n      return false\r\n    }\r\n    // check type of mesh\r\n    // if (mesh.geometry.isInstancedBufferGeometry && settings.now.zSprites) {\r\n    if (mesh instanceof ZSpriteMesh) {\r\n      logger.warn(\r\n        \"Currently we cannot export 'sprites' modes, like BS, WV, LC. Please turn of settings 'zSprites' and try again\"\r\n      )\r\n      return false\r\n    }\r\n    if (mesh instanceof ThickLineMesh) {\r\n      logger.warn('Currently we cannot export Lines mode')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Save geometry info from common mesh, like Surface or Cartoon\r\n   */\r\n  _collectGeoInfo(mesh) {\r\n    const {\r\n      geometry: {\r\n        attributes: { position, color, normal },\r\n        index\r\n      },\r\n      matrix\r\n    } = mesh\r\n\r\n    const model = new FBXModel()\r\n    const vertCount = position.count\r\n    model.init(vertCount, index.count)\r\n    if (matrix.isIdentity()) {\r\n      model.setPositions(position.array, 0, vertCount, position.itemSize)\r\n      model.setNormals(normal.array, 0, vertCount, normal.itemSize)\r\n    } else {\r\n      model.setTransformedPositions(\r\n        position.array,\r\n        0,\r\n        vertCount,\r\n        position.itemSize,\r\n        matrix\r\n      )\r\n      model.setTransformedNormals(\r\n        normal.array,\r\n        0,\r\n        vertCount,\r\n        normal.itemSize,\r\n        matrix\r\n      )\r\n    }\r\n    model.setColors(color.array, 0, vertCount, color.itemSize)\r\n    model.setIndices(index.array, 0, index.count)\r\n    const material = this._collectMaterialInfo(mesh)\r\n    this._addToPool(model, material)\r\n  }\r\n\r\n  /**\r\n   * Collect instanced spheres geometry and materials.\r\n   * @param {object} mesh - mesh with instanced spheres info\r\n   */\r\n  _collectSpheresInfo(mesh) {\r\n    const {\r\n      geometry: {\r\n        attributes: { position, color },\r\n        index\r\n      },\r\n      matrix\r\n    } = mesh\r\n\r\n    const model = new FBXModel()\r\n    const instCount = mesh.geometry.instanceCount\r\n    const vertCount = position.count\r\n    const indsCount = index.count\r\n    model.init(instCount * vertCount, instCount * indsCount)\r\n    const geo = new FBX1CGeometry()\r\n    geo.init(mesh.geometry)\r\n    const instMatrix = new Matrix4()\r\n    const objMatrix = new Matrix4()\r\n    const sphereColor = new Color()\r\n    for (let instanceIndex = 0; instanceIndex < instCount; ++instanceIndex) {\r\n      // update colors in geometry\r\n      const colorIdx = instanceIndex * color.itemSize\r\n      sphereColor.fromArray(color.array, colorIdx)\r\n      geo.setColors(sphereColor)\r\n      // add instance to the model\r\n      this._getSphereInstanceMatrix(mesh.geometry, instanceIndex, instMatrix)\r\n      objMatrix.multiplyMatrices(matrix, instMatrix)\r\n      model.addInstance(objMatrix, geo)\r\n    }\r\n    const material = this._collectMaterialInfo(mesh)\r\n    this._addToPool(model, material)\r\n  }\r\n\r\n  /**\r\n   * Getting all instanced cylinders from given mesh.\r\n   * Divide cylinder (add additional vertexes) for prettiness therefore algorithm is a bit complicated\r\n   * @param {object} mesh - given mesh with instanced cylinders\r\n   */\r\n  _collectCylindersInfo(mesh) {\r\n    const {\r\n      geometry: {\r\n        attributes: { position, color, color2 },\r\n        index\r\n      },\r\n      matrix\r\n    } = mesh\r\n\r\n    const model = new FBXModel()\r\n    const instCount = mesh.geometry.instanceCount\r\n    const oneCCylinder = new FBX1CGeometry()\r\n    oneCCylinder.init(mesh.geometry)\r\n    const splittingInfo = this._gatherCylindersColoringInfo(mesh.geometry)\r\n    let twoCCylinder = null\r\n    if (splittingInfo.needToSplit > 0) {\r\n      twoCCylinder = new FBX2CCylinder()\r\n      twoCCylinder.init(mesh.geometry, splittingInfo)\r\n    }\r\n    const additionalVertsCount =\r\n      splittingInfo.addPerCylinder * splittingInfo.needToSplit\r\n    const vertCount = position.count\r\n    const indsCount = index.count\r\n    model.init(\r\n      instCount * vertCount + additionalVertsCount,\r\n      instCount * indsCount\r\n    )\r\n    const instMatrix = new Matrix4()\r\n    const objMatrix = new Matrix4()\r\n    const colorStart = new Color()\r\n    const colorEnd = new Color()\r\n    let geo = {}\r\n    for (let instanceIndex = 0; instanceIndex < instCount; ++instanceIndex) {\r\n      // update colors in geometry\r\n      const colorIdx = instanceIndex * color.itemSize\r\n      if (splittingInfo.is2Colored[instanceIndex]) {\r\n        // .color2 contains starting color, and .color contains starting color (see uber.frag ATTR_COLOR2)\r\n        colorStart.fromArray(color2.array, colorIdx)\r\n        colorEnd.fromArray(color.array, colorIdx)\r\n        if (twoCCylinder) {\r\n          twoCCylinder.setColors(colorStart, colorEnd)\r\n          geo = twoCCylinder\r\n        }\r\n      } else {\r\n        // has one color per cylinder\r\n        colorStart.fromArray(color.array, colorIdx)\r\n        oneCCylinder.setColors(colorStart)\r\n        geo = oneCCylinder\r\n      }\r\n      // add instance to the model\r\n      this._getCylinderInstanceMatrix(mesh.geometry, instanceIndex, instMatrix)\r\n      objMatrix.multiplyMatrices(matrix, instMatrix)\r\n      model.addInstance(objMatrix, geo)\r\n    }\r\n    const material = this._collectMaterialInfo(mesh)\r\n    this._addToPool(model, material)\r\n  }\r\n\r\n  /**\r\n   * Adding model to pool of models or extend existing ones\r\n   * @param {object} model - model to add\r\n   * @param {object} material - material to add\r\n   */\r\n  _addToPool(model, material) {\r\n    const materialIdx = this._checkExistingMaterial(material)\r\n    if (materialIdx < 0) {\r\n      // new model-material pair\r\n      this._models.push([model])\r\n      this._materials.push(material)\r\n    } else {\r\n      // add model to existing model-material pair\r\n      const models = this._models[materialIdx]\r\n      models.push(model)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checking if given material already was registered in materials pool (no need to create new one)\r\n   * @param {object} material - given material\r\n   * @returns {number} number of model-material pair\r\n   */\r\n  _checkExistingMaterial(material) {\r\n    return findIndex(this._materials, (m) => isEqual(m, material))\r\n  }\r\n\r\n  _gatherCylindersColoringInfo(geo) {\r\n    const instCount = geo.instanceCount\r\n    const color1 = geo.attributes.color.array\r\n    const color2 = geo.attributes.color2.array\r\n    const stride = geo.attributes.color.itemSize\r\n    const is2Colored = new Array(instCount)\r\n    // analyze color instance attributes\r\n    let needToSplit = 0\r\n    let colIdx = 0\r\n    for (let i = 0; i < instCount; i++, colIdx += stride) {\r\n      const differs =\r\n        Math.abs(color1[colIdx] - color2[colIdx]) > 0.0000001 || // compare ending colors\r\n        Math.abs(color1[colIdx + 1] - color2[colIdx + 1]) > 0.0000001 ||\r\n        Math.abs(color1[colIdx + 2] - color2[colIdx + 2]) > 0.0000001\r\n      is2Colored[i] = differs\r\n      needToSplit += differs // count number of 2-colored cylinders\r\n    }\r\n    // calc number of vertices to add into 2-colored\r\n    const geoParams = geo.getGeoParams()\r\n    const addPerCylinder = geoParams.radialSegments\r\n    return { is2Colored, needToSplit, addPerCylinder }\r\n  }\r\n\r\n  /**\r\n   * Collect instanced models and materials.\r\n   * @param {object} mesh - given mesh with instanced something (spheres or cylinders)\r\n   */\r\n  _collectInstancedGeoInfo(mesh) {\r\n    if (mesh.geometry instanceof InstancedSpheresGeometry) {\r\n      this._collectSpheresInfo(mesh)\r\n    } else if (mesh.geometry instanceof Instanced2CCylindersGeometry) {\r\n      this._collectCylindersInfo(mesh)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect Material info from given mesh.\r\n   * @param {object} mesh - given mesh with material info\r\n   * @returns {object} material\r\n   */\r\n  _collectMaterialInfo(mesh) {\r\n    const { uberOptions } = mesh.material\r\n    return {\r\n      diffuse: uberOptions.diffuse.toArray(),\r\n      opacity: uberOptions.opacity,\r\n      shininess: uberOptions.shininess,\r\n      specular: uberOptions.specular.toArray()\r\n    }\r\n  }\r\n\r\n  _getCylinderInstanceMatrix(geo, instIdx, matrix) {\r\n    const matVector1 = geo.attributes.matVector1.array\r\n    const matVector2 = geo.attributes.matVector2.array\r\n    const matVector3 = geo.attributes.matVector3.array\r\n    const idxOffset = instIdx * 4 // used 4 because offset arrays are stored in quads\r\n    matrix.set(\r\n      matVector1[idxOffset],\r\n      matVector1[idxOffset + 1],\r\n      matVector1[idxOffset + 2],\r\n      matVector1[idxOffset + 3],\r\n      matVector2[idxOffset],\r\n      matVector2[idxOffset + 1],\r\n      matVector2[idxOffset + 2],\r\n      matVector2[idxOffset + 3],\r\n      matVector3[idxOffset],\r\n      matVector3[idxOffset + 1],\r\n      matVector3[idxOffset + 2],\r\n      matVector3[idxOffset + 3],\r\n      0,\r\n      0,\r\n      0,\r\n      1\r\n    )\r\n  }\r\n\r\n  _getSphereInstanceMatrix(geo, instIdx, matrix) {\r\n    const { offset } = geo.attributes\r\n    const idx = instIdx * offset.itemSize\r\n    const x = offset.array[idx]\r\n    const y = offset.array[idx + 1]\r\n    const z = offset.array[idx + 2]\r\n    const scale = offset.array[idx + 3]\r\n    matrix.set(scale, 0, 0, x, 0, scale, 0, y, 0, 0, scale, z, 0, 0, 0, 1)\r\n  }\r\n}\r\n",
		"// Forming default definitions block\r\nconst defaultDefinitions = `\r\nDefinitions:  {\r\n  Version: 100\r\n  Count: 3\r\n  ObjectType: \"Model\" {\r\n    Count: 1\r\n  }\r\n  ObjectType: \"Geometry\" {\r\n    Count: 1\r\n  }\r\n  ObjectType: \"Material\" {\r\n    Count: 1\r\n  }\r\n  ObjectType: \"Pose\" {\r\n    Count: 1\r\n  }\r\n  ObjectType: \"GlobalSettings\" {\r\n    Count: 1\r\n  }\r\n} `\r\n\r\n// Default model properties\r\nconst defaultProperties = `Properties60: {\r\n      Property: \"QuaternionInterpolate\", \"bool\", \"\",0\r\n      Property: \"Visibility\", \"Visibility\", \"A\",1\r\n      Property: \"Lcl Translation\", \"Lcl Translation\", \"A\",0.000000000000000,0.000000000000000,-1789.238037109375000\r\n      Property: \"Lcl Rotation\", \"Lcl Rotation\", \"A\",0.000009334667643,-0.000000000000000,0.000000000000000\r\n      Property: \"Lcl Scaling\", \"Lcl Scaling\", \"A\",1.000000000000000,1.000000000000000,1.000000000000000\r\n      Property: \"RotationOffset\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"RotationPivot\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"ScalingOffset\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"ScalingPivot\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"TranslationActive\", \"bool\", \"\",0\r\n      Property: \"TranslationMin\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"TranslationMax\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"TranslationMinX\", \"bool\", \"\",0\r\n      Property: \"TranslationMinY\", \"bool\", \"\",0\r\n      Property: \"TranslationMinZ\", \"bool\", \"\",0\r\n      Property: \"TranslationMaxX\", \"bool\", \"\",0\r\n      Property: \"TranslationMaxY\", \"bool\", \"\",0\r\n      Property: \"TranslationMaxZ\", \"bool\", \"\",0\r\n      Property: \"RotationOrder\", \"enum\", \"\",0\r\n      Property: \"RotationSpaceForLimitOnly\", \"bool\", \"\",0\r\n      Property: \"AxisLen\", \"double\", \"\",10\r\n      Property: \"PreRotation\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"PostRotation\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"RotationActive\", \"bool\", \"\",0\r\n      Property: \"RotationMin\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"RotationMax\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"RotationMinX\", \"bool\", \"\",0\r\n      Property: \"RotationMinY\", \"bool\", \"\",0\r\n      Property: \"RotationMinZ\", \"bool\", \"\",0\r\n      Property: \"RotationMaxX\", \"bool\", \"\",0\r\n      Property: \"RotationMaxY\", \"bool\", \"\",0\r\n      Property: \"RotationMaxZ\", \"bool\", \"\",0\r\n      Property: \"RotationStiffnessX\", \"double\", \"\",0\r\n      Property: \"RotationStiffnessY\", \"double\", \"\",0\r\n      Property: \"RotationStiffnessZ\", \"double\", \"\",0\r\n      Property: \"MinDampRangeX\", \"double\", \"\",0\r\n      Property: \"MinDampRangeY\", \"double\", \"\",0\r\n      Property: \"MinDampRangeZ\", \"double\", \"\",0\r\n      Property: \"MaxDampRangeX\", \"double\", \"\",0\r\n      Property: \"MaxDampRangeY\", \"double\", \"\",0\r\n      Property: \"MaxDampRangeZ\", \"double\", \"\",0\r\n      Property: \"MinDampStrengthX\", \"double\", \"\",0\r\n      Property: \"MinDampStrengthY\", \"double\", \"\",0\r\n      Property: \"MinDampStrengthZ\", \"double\", \"\",0\r\n      Property: \"MaxDampStrengthX\", \"double\", \"\",0\r\n      Property: \"MaxDampStrengthY\", \"double\", \"\",0\r\n      Property: \"MaxDampStrengthZ\", \"double\", \"\",0\r\n      Property: \"PreferedAngleX\", \"double\", \"\",0\r\n      Property: \"PreferedAngleY\", \"double\", \"\",0\r\n      Property: \"PreferedAngleZ\", \"double\", \"\",0\r\n      Property: \"InheritType\", \"enum\", \"\",0\r\n      Property: \"ScalingActive\", \"bool\", \"\",0\r\n      Property: \"ScalingMin\", \"Vector3D\", \"\",1,1,1\r\n      Property: \"ScalingMax\", \"Vector3D\", \"\",1,1,1\r\n      Property: \"ScalingMinX\", \"bool\", \"\",0\r\n      Property: \"ScalingMinY\", \"bool\", \"\",0\r\n      Property: \"ScalingMinZ\", \"bool\", \"\",0\r\n      Property: \"ScalingMaxX\", \"bool\", \"\",0\r\n      Property: \"ScalingMaxY\", \"bool\", \"\",0\r\n      Property: \"ScalingMaxZ\", \"bool\", \"\",0\r\n      Property: \"GeometricTranslation\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"GeometricRotation\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"GeometricScaling\", \"Vector3D\", \"\",1,1,1\r\n      Property: \"LookAtProperty\", \"object\", \"\"\r\n      Property: \"UpVectorProperty\", \"object\", \"\"\r\n      Property: \"Show\", \"bool\", \"\",1\r\n      Property: \"NegativePercentShapeSupport\", \"bool\", \"\",1\r\n      Property: \"DefaultAttributeIndex\", \"int\", \"\",0\r\n      Property: \"Color\", \"Color\", \"A+\",0,0,0\r\n      Property: \"Size\", \"double\", \"\",100\r\n      Property: \"Look\", \"enum\", \"\",1\r\n    }`\r\n\r\n// Default materials layer\r\nconst defaultMaterialLayer = `\r\n    LayerElementMaterial: 0 {\r\n      Version: 101\r\n      Name: \"\"\r\n      MappingInformationType: \"AllSame\"\r\n      ReferenceInformationType: \"Direct\"\r\n      Materials: 0\r\n    }`\r\n\r\n// Default layers block\r\nconst defaultLayerBlock = `\r\n    Layer: 0 {\r\n      Version: 100\r\n      LayerElement:  {\r\n        Type: \"LayerElementNormal\"\r\n        TypedIndex: 0\r\n      }\r\n      LayerElement:  {\r\n        Type: \"LayerElementColor\"\r\n        TypedIndex: 0\r\n      }\r\n      LayerElement:  {\r\n        Type: \"LayerElementMaterial\"\r\n        TypedIndex: 0\r\n      }\r\n    }`\r\n\r\n/**\r\n * globalSettings info in output file.\r\n */\r\nconst globalSettings = `GlobalSettings: {\r\n    Version: 1000\r\n    Properties60:  {\r\n      Property: \"UpAxis\", \"int\", \"\",1\r\n      Property: \"UpAxisSign\", \"int\", \"\",1\r\n      Property: \"FrontAxis\", \"int\", \"\",2\r\n      Property: \"FrontAxisSign\", \"int\", \"\",1\r\n      Property: \"CoordAxis\", \"int\", \"\",0\r\n      Property: \"CoordAxisSign\", \"int\", \"\",1\r\n      Property: \"UnitScaleFactor\", \"double\", \"\",1\r\n    }\r\n  }`\r\n\r\nexport default class FBXResult {\r\n  constructor() {\r\n    this._resultArray = []\r\n    this._info = null\r\n  }\r\n\r\n  getResult(info) {\r\n    this._info = info\r\n    this._resultArray.push(this._writeHeader())\r\n    this._resultArray.push(this._writeDefinitions())\r\n    this._resultArray.push(this._writeObjects(info.models, info.materials))\r\n    this._resultArray.push(this._writeRelations())\r\n    this._resultArray.push(this._writeConnections()) // connections between models and materials)\r\n    this._info = null\r\n    return this._resultArray.join('')\r\n  }\r\n\r\n  /**\r\n   * Add FBXHeader info to output file.\r\n   * Some fields are really confusing, but it seems that all listed fields are very informative\r\n   */\r\n  _writeHeader() {\r\n    const FBXHeaderVersion = 1003 // 1003 is some number which appears to present in many 6.1 ASCII files\r\n    const FBXVersion = 6100 // Mandatory and only supported version\r\n    const date = new Date()\r\n    const timeStampVersion = 1000\r\n    const creator = `Miew FBX Exporter v${this._info.version}` // Supposed to be an engine\r\n\r\n    return `; FBX 6.1.0 project file\r\n; Created by ${creator} Copyright (c) 2015-2020 EPAM Systems, Inc.\r\n; For support please contact miew@epam.com\r\n; ----------------------------------------------------\r\n\r\nFBXHeaderExtension:  {\r\n  FBXHeaderVersion: ${FBXHeaderVersion}\r\n  FBXVersion: ${FBXVersion}\r\n  CreationTimeStamp:  {\r\n    Version: ${timeStampVersion}\r\n    Year: ${date.getFullYear()}\r\n    Month: ${date.getMonth() + 1} \r\n    Day: ${date.getDate()}\r\n    Hour: ${date.getHours()}\r\n    Minute: ${date.getMinutes()}\r\n    Second: ${date.getSeconds()}\r\n    Millisecond: ${date.getMilliseconds()}\r\n  }\r\n  Creator: \"${creator}\"\r\n  OtherFlags:  {\r\n    FlagPLE: 0\r\n  }\r\n}\r\nCreationTime: \"${date}\"\r\nCreator: \"${creator}\"  \r\n`\r\n  }\r\n\r\n  /**\r\n   * Add Definitions info to output file.\r\n   * Not exactly sure if this section is template section (as it is in 7.4+) or it should every time be like this\r\n   */\r\n  _writeDefinitions() {\r\n    return `\r\n; Object definitions\r\n;------------------------------------------------------------------\r\n\r\n${defaultDefinitions}\r\n`\r\n  }\r\n\r\n  /**\r\n   * Adding gathered information about Models to resulting string.\r\n   * Reminder - there may be more then 1 model in scene, but we must place materials after ALL models.\r\n   * @returns {string} string containing all models (vertices, indices, colors, normals etc)\r\n   */\r\n  _models() {\r\n    const modelVersion = 232\r\n    let allModels = ''\r\n    const { models } = this._info\r\n    for (let i = 0; i < models.length; ++i) {\r\n      const model = models[i]\r\n      const vertCount = model.verticesCount\r\n      allModels += `\r\n  Model: \"Model::${this._info.name}_${i}\", \"Mesh\" {\r\n    Version: ${modelVersion} \r\n    ${defaultProperties}\r\n    ${this._verticesIndices(model.positions, model.indices)}\r\n    ${this._normalLayer(model.normals)} \r\n    ${this._colorLayer(model.colors, vertCount)} \r\n    ${defaultMaterialLayer}  \r\n    ${defaultLayerBlock}\r\n  }`\r\n    }\r\n    return allModels\r\n  }\r\n\r\n  /**\r\n   * Add Material info to result\r\n   */\r\n  _materials() {\r\n    const materialVersion = 102\r\n    let allMaterials = ''\r\n    const { materials } = this._info\r\n    for (let i = 0; i < materials.length; ++i) {\r\n      const material = materials[i]\r\n      allMaterials += `\r\n  Material: \"Material::${this._info.name}_${i}_default\", \"\" {\r\n    Version: ${materialVersion}\r\n    ShadingModel: \"lambert\"\r\n    MultiLayer: 0\r\n    ${this._materialProperties(material)}\r\n  }`\r\n    }\r\n    return allMaterials\r\n  }\r\n\r\n  /**\r\n   * Add Objects info to output file.\r\n   */\r\n  _writeObjects() {\r\n    return `\r\n; Object properties\r\n;------------------------------------------------------------------\r\n\r\nObjects:  {\r\n  ${this._models()}\r\n  ${this._materials()}\r\n  ${globalSettings}\r\n}\r\n`\r\n  }\r\n\r\n  /**\r\n   * Add Relations info to output file.\r\n   */\r\n  _writeRelations() {\r\n    let modelsList = ''\r\n    for (let i = 0; i < this._info.models.length; ++i) {\r\n      modelsList += `\r\n  Model: \"Model::${this._info.name}_${i}\", \"Mesh\" {\r\n  }`\r\n    }\r\n    let materialList = ''\r\n    for (let i = 0; i < this._info.materials.length; ++i) {\r\n      materialList += `\r\n  Material: \"Material::${this._info.name}_${i}_default\", \"\" {\r\n  }`\r\n    }\r\n\r\n    return `\r\n; Object relations\r\n;------------------------------------------------------------------\r\n\r\nRelations:  {\r\n  ${modelsList}\r\n  Model: \"Model::Producer Perspective\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Top\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Bottom\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Front\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Back\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Right\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Left\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Camera Switcher\", \"CameraSwitcher\" {\r\n  }\r\n  ${materialList}\r\n}`\r\n  }\r\n\r\n  /**\r\n   * Add Connections info to output file.\r\n   */\r\n  _writeConnections() {\r\n    let modelsList = ''\r\n    const { name } = this._info\r\n    for (let i = 0; i < this._info.models.length; ++i) {\r\n      modelsList += `\r\n  Connect: \"OO\", \"Model::${name}_${i}\", \"Model::Scene\"`\r\n    }\r\n\r\n    let materialList = ''\r\n    for (let i = 0; i < this._info.materials.length; ++i) {\r\n      materialList += `\r\n  Connect: \"OO\", \"Material::${name}_${i}_default\", \"Model::${name}_${i}\"`\r\n    }\r\n\r\n    return `\r\n; Object connections\r\n;------------------------------------------------------------------\r\n\r\nConnections:  {\r\n  ${modelsList}\r\n  ${materialList}\r\n}`\r\n  }\r\n\r\n  /**\r\n   * Write float array to string with limited precision\r\n   * @param {Float32Array} array - array to be fixed\r\n   * @returns {String} String with fixed floats\r\n   */\r\n  _floatArrayToString(array) {\r\n    const str = []\r\n    for (let i = 0; i < array.length; ++i) {\r\n      str[i] = array[i].toFixed(6)\r\n    }\r\n    return str.join(',')\r\n  }\r\n\r\n  /**\r\n   * Adding color layer to resulting file\r\n   * @param {Float32Array} colorArray attribute\r\n   * @param {number} vertCount - number of vertices in the model\r\n   * @returns {string} color layer info\r\n   */\r\n  _colorLayer(colorArray, vertCount) {\r\n    const layerElementColorNumber = 0\r\n    const layerElementColorVersion = 101\r\n    const layerElementColorName = ''\r\n    const colorsStr = this._floatArrayToString(colorArray)\r\n    // Mapping Information type and Reference Information type are mandatory for our Miew! Must not be changed\r\n    // As said [..Array(...)] - fastest and easiest way to produce [0, 1, .....] array\r\n    const colorIndices = [...Array(vertCount).keys()]\r\n    return `\r\n    LayerElementColor: ${layerElementColorNumber} {\r\n      Version: ${layerElementColorVersion}\r\n      Name: \"${layerElementColorName}\"\r\n      MappingInformationType: \"ByVertice\"\r\n      ReferenceInformationType: \"Direct\"\r\n      Colors: ${colorsStr}\r\n      ColorIndex: ${colorIndices}\r\n    }`\r\n  }\r\n\r\n  /**\r\n   * Adding normal layer to resulting file\r\n   * @param {Float32Array} normalArray attribute\r\n   * @returns {string} normal layer info\r\n   */\r\n  _normalLayer(normalArray) {\r\n    const layerElementNormalNumber = 0\r\n    const layerElementNormalVersion = 101\r\n    const layerElementNormalName = ''\r\n    const normalsStr = this._floatArrayToString(normalArray)\r\n    // Mapping Information type and Reference Information type are mandatory for our Miew! Must not be changed\r\n    return `\r\n    LayerElementNormal: ${layerElementNormalNumber} {\r\n      Version: ${layerElementNormalVersion}\r\n      Name: \"${layerElementNormalName}\"\r\n      MappingInformationType: \"ByVertice\"\r\n      ReferenceInformationType: \"Direct\" \r\n      Normals: ${normalsStr}\r\n    }`\r\n  }\r\n\r\n  /**\r\n   * Adding vertices and indices to resulting string\r\n   * @return {string} resulting string in FBX notation\r\n   */\r\n  _verticesIndices(positions, indices) {\r\n    const multiLayer = 0\r\n    const multiTake = 1\r\n    const shading = 'Y'\r\n    const culling = 'CullingOff'\r\n    const geometryVersion = 124\r\n    const vertStr = this._floatArrayToString(positions)\r\n    /* About _correctArrayNotation: Float32Arrays will contains only Float32 numbers, which implies that it will be floating points with 17 numbers after point.\r\n     * We cannot (and it's logically incorrect) save all this information, so we convert this Float32Array into Array-like object with numbers with only 6 numbers after point\r\n     * Reminder - this is big memory loss (as we must save at one moment two arrays with similar information) */\r\n    return `MultiLayer: ${multiLayer}\r\n    MultiTake: ${multiTake}\r\n    Shading: ${shading}\r\n    Culling: \"${culling}\"\r\n    Vertices: ${vertStr}\r\n    PolygonVertexIndex: ${indices}\r\n    GeometryVersion: ${geometryVersion}`\r\n  }\r\n\r\n  /**\r\n   * Forming material properties block.\r\n   * @param {Object} material - given material of model\r\n   * @returns {String} material properties string\r\n   */\r\n  _materialProperties(material) {\r\n    return `Properties60:  {\r\n      Property: \"ShadingModel\", \"KString\", \"\", \"Lambert\"\r\n      Property: \"MultiLayer\", \"bool\", \"\",0\r\n      Property: \"EmissiveColor\", \"ColorRGB\", \"\",0,0,0\r\n      Property: \"EmissiveFactor\", \"double\", \"\",0.0000\r\n      Property: \"AmbientColor\", \"ColorRGB\", \"\",1,1,1\r\n      Property: \"AmbientFactor\", \"double\", \"\",0.0000\r\n      Property: \"DiffuseColor\", \"ColorRGB\", \"\",${material.diffuse}\r\n      Property: \"DiffuseFactor\", \"double\", \"\",1.0000\r\n      Property: \"Bump\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"TransparentColor\", \"ColorRGB\", \"\",1,1,1\r\n      Property: \"TransparencyFactor\", \"double\", \"\",0.0000\r\n      Property: \"SpecularColor\", \"ColorRGB\", \"\",${material.specular}\r\n      Property: \"SpecularFactor\", \"double\", \"\",1.0000\r\n      Property: \"ShininessExponent\", \"double\", \"\",${material.shininess}\r\n      Property: \"ReflectionColor\", \"ColorRGB\", \"\",0,0,0\r\n      Property: \"ReflectionFactor\", \"double\", \"\",1\r\n      Property: \"Ambient\", \"ColorRGB\", \"\",1,1,1\r\n      Property: \"Diffuse\", \"ColorRGB\", \"\",${material.diffuse}\r\n      Property: \"Specular\", \"ColorRGB\", \"\",${material.specular}\r\n      Property: \"Shininess\", \"double\", \"\",${material.shininess}\r\n      Property: \"Opacity\", \"double\", \"\",${material.opacity}\r\n      Property: \"Reflectivity\", \"double\", \"\",0\r\n    }`\r\n  }\r\n}\r\n",
		"import Exporter from './Exporter'\r\nimport FBXInfoExtractor from './fbx/FBXInfoExtractor'\r\nimport FBXResult from './fbx/FBXResult'\r\nimport ComplexVisual from '../../ComplexVisual'\r\n\r\nexport default class FBXExporter extends Exporter {\r\n  constructor(source, options) {\r\n    super(source, options)\r\n    // Data\r\n    this._data = source\r\n    this._version = options.miewVersion || '0.0-UNSPECIFIED'\r\n    this._extractor = new FBXInfoExtractor()\r\n  }\r\n\r\n  /**\r\n   * Entry point to exporter.\r\n   */\r\n  exportSync() {\r\n    // Creating mandatory blocks\r\n    const result = new FBXResult()\r\n    if (!this._source) {\r\n      return this._result\r\n    }\r\n\r\n    const info = this._extractor.process(this._data)\r\n    info.version = this._version\r\n    this._result = result.getResult(info)\r\n    return this._result\r\n  }\r\n}\r\n\r\nFBXExporter.formats = ['fbx']\r\nFBXExporter.SourceClass = ComplexVisual\r\n",
		"import Timer from '../Timer'\r\nimport settings from '../settings'\r\nimport EventDispatcher from '../utils/EventDispatcher'\r\nimport { Matrix4, Quaternion, Vector2, Vector3 } from 'three'\r\n\r\nconst VK_LEFT = 37\r\nconst VK_UP = 38\r\nconst VK_RIGHT = 39\r\nconst VK_DOWN = 40\r\n\r\nconst STATE = {\r\n  NONE: -1,\r\n  ROTATE: 0,\r\n  TRANSLATE: 1,\r\n  SCALE: 2,\r\n  TRANSLATE_PIVOT: 3\r\n}\r\n\r\n// pausing for this amount of time before releasing mouse button prevents inertial rotation (seconds)\r\nconst FULL_STOP_THRESHOLD = 0.1\r\n\r\nconst quaternion = new Quaternion()\r\nconst matrix4 = new Matrix4()\r\n\r\n// pivot -- local offset of the rotation pivot point\r\nfunction ObjectHandler(objects, camera, pivot, options) {\r\n  this.objects = objects\r\n  ;[this.object] = objects\r\n  this.camera = camera\r\n  this.pivot = pivot\r\n  this.axis = new Vector3(0, 0, 1)\r\n  this.options = options\r\n\r\n  this.lastRotation = {\r\n    axis: new Vector3(),\r\n    angle: 0.0\r\n  }\r\n}\r\n\r\nObjectHandler.prototype._rotate = (function () {\r\n  const p = new Vector3()\r\n  const q = new Quaternion()\r\n  const s = new Vector3()\r\n\r\n  const m = new Matrix4()\r\n\r\n  return function (quat) {\r\n    const zeroPivot =\r\n      this.pivot.x === 0.0 && this.pivot.y === 0.0 && this.pivot.z === 0.0\r\n\r\n    m.copy(this.object.matrix)\r\n\r\n    if (zeroPivot) {\r\n      m.multiply(matrix4.makeRotationFromQuaternion(quat))\r\n    } else {\r\n      m.multiply(\r\n        matrix4.makeTranslation(this.pivot.x, this.pivot.y, this.pivot.z)\r\n      )\r\n      m.multiply(matrix4.makeRotationFromQuaternion(quat))\r\n      m.multiply(\r\n        matrix4.makeTranslation(-this.pivot.x, -this.pivot.y, -this.pivot.z)\r\n      )\r\n    }\r\n\r\n    m.decompose(p, q, s)\r\n\r\n    // update objects\r\n    if (!zeroPivot) {\r\n      for (let i = 0; i < this.objects.length; ++i) {\r\n        this.objects[i].position.copy(p)\r\n      }\r\n    }\r\n\r\n    for (let j = 0; j < this.objects.length; ++j) {\r\n      this.objects[j].quaternion.copy(q)\r\n      this.objects[j].updateMatrix()\r\n    }\r\n  }\r\n})()\r\n\r\nObjectHandler.prototype.setObjects = function (objects) {\r\n  this.objects = objects\r\n  ;[this.object] = objects\r\n}\r\n\r\nObjectHandler.prototype.rotate = (function () {\r\n  const rot = {\r\n    axis: new Vector3(),\r\n    angle: 0.0\r\n  }\r\n\r\n  return function (quat, mousePrevPos, mouseCurPos, aboutAxis) {\r\n    this.mouse2rotation(rot, mousePrevPos, mouseCurPos, aboutAxis)\r\n    quat.setFromAxisAngle(rot.axis, rot.angle)\r\n\r\n    if (rot.angle) {\r\n      this._rotate(quat)\r\n    }\r\n\r\n    this.lastRotation = rot\r\n  }\r\n})()\r\n\r\nObjectHandler.prototype.translate = (function () {\r\n  const dir = new Vector3()\r\n  const pivot = new Vector3()\r\n\r\n  return function (delta) {\r\n    // reverse-project viewport movement to view coords (compensate for screen aspect ratio)\r\n    dir.set(\r\n      delta.x / this.camera.projectionMatrix.elements[0],\r\n      delta.y / this.camera.projectionMatrix.elements[5],\r\n      0\r\n    )\r\n    let dist = dir.length()\r\n    dir.normalize()\r\n\r\n    // transform movement direction to object local coords\r\n    dir.transformDirection(matrix4.copy(this.object.matrixWorld).invert())\r\n\r\n    // visible translate distance shouldn't depend on camera-to-object distance\r\n    pivot.copy(this.pivot)\r\n    this.object.localToWorld(pivot)\r\n    dist *= Math.abs(pivot.z - this.camera.position.z)\r\n\r\n    // visible translate distance shouldn't depend on object scale\r\n    dist /= this.object.matrixWorld.getMaxScaleOnAxis()\r\n\r\n    // all objects are translated similar to principal object\r\n    // (we assume they all have identical pivot and scale)\r\n    for (let i = 0; i < this.objects.length; ++i) {\r\n      this.objects[i].translateOnAxis(dir, dist)\r\n    }\r\n  }\r\n})()\r\n\r\nObjectHandler.prototype.update = (function () {\r\n  const axis = new Vector3()\r\n\r\n  return function (timeSinceLastUpdate, timeSinceMove) {\r\n    if (settings.now.autoRotation !== 0.0) {\r\n      // auto-rotation with constant speed\r\n\r\n      // if rotation axis is fixed or hasn't been defined yet\r\n      if (\r\n        settings.now.autoRotationAxisFixed ||\r\n        this.lastRotation.axis.length() === 0.0\r\n      ) {\r\n        // use Y-axis (transformed to local object coords)\r\n        axis\r\n          .set(0, 1, 0)\r\n          .transformDirection(matrix4.copy(this.object.matrixWorld).invert())\r\n      } else {\r\n        // use axis defined by last user rotation\r\n        axis.copy(this.lastRotation.axis)\r\n      }\r\n\r\n      this._rotate(\r\n        quaternion.setFromAxisAngle(\r\n          axis,\r\n          settings.now.autoRotation * timeSinceLastUpdate\r\n        )\r\n      )\r\n      return true\r\n    }\r\n\r\n    if (this.options.intertia && this.lastRotation.angle) {\r\n      // inertial object rotation\r\n      const angle =\r\n        this.lastRotation.angle *\r\n        (1.0 - this.options.dynamicDampingFactor) ** (40.0 * timeSinceMove)\r\n\r\n      if (Math.abs(angle) <= this.options.intertiaThreshold) {\r\n        this.lastRotation.angle = 0.0\r\n      } else {\r\n        this._rotate(quaternion.setFromAxisAngle(this.lastRotation.axis, angle))\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n})()\r\n\r\nObjectHandler.prototype.stop = function () {\r\n  this.lastRotation.angle = 0.0\r\n}\r\n\r\n// calculate (axis, angle) pair from mouse/touch movement\r\nObjectHandler.prototype.mouse2rotation = (function () {\r\n  const center = new Vector3()\r\n\r\n  const eye = new Vector3()\r\n  const eyeDirection = new Vector3()\r\n\r\n  const cameraUpDirection = new Vector3()\r\n  const cameraSidewaysDirection = new Vector3()\r\n\r\n  const moveDirection = new Vector3()\r\n\r\n  const mouseDelta = new Vector2()\r\n\r\n  return function (rot, mousePrev, mouseCur, aboutAxis) {\r\n    if (aboutAxis) {\r\n      rot.axis.copy(this.axis)\r\n      rot.angle = this.options.axisRotateFactor * (mouseCur.y - mousePrev.y)\r\n\r\n      /* cool method that allows rotation around Z axis to be \"tied\" to mouse cursor\r\n\r\n        res.axis.copy(this.axis);\r\n\r\n        var pivot = this.pivot.clone();\r\n        this.object.localToWorld(pivot);\r\n        pivot.project(this.camera);\r\n\r\n        var v1 = new Vector3(mousePrev.x, mousePrev.y, this.camera.position.z);\r\n        v1.sub(pivot);\r\n        var v2 = new Vector3(mouseCur.x, mouseCur.y, this.camera.position.z);\r\n        v2.sub(pivot);\r\n\r\n        v1.sub(res.axis.clone().multiplyScalar(v1.dot(res.axis)));\r\n        v2.sub(res.axis.clone().multiplyScalar(v2.dot(res.axis)));\r\n\r\n        var abs = v1.length() * v2.length();\r\n        if (abs > 0) {\r\n          res.angle = res.axis.dot(v1.cross(v2)) / abs;\r\n        }\r\n      */\r\n    } else {\r\n      mouseDelta.subVectors(mouseCur, mousePrev)\r\n      const angle = mouseDelta.length()\r\n      if (angle === 0.0) {\r\n        return\r\n      }\r\n\r\n      center.copy(this.pivot)\r\n      this.object.localToWorld(center)\r\n      eye.subVectors(this.camera.position, center)\r\n      eyeDirection.copy(eye).normalize()\r\n\r\n      cameraUpDirection.copy(this.camera.up).normalize()\r\n      cameraSidewaysDirection\r\n        .crossVectors(cameraUpDirection, eyeDirection)\r\n        .normalize()\r\n\r\n      cameraUpDirection.setLength(mouseDelta.y)\r\n      cameraSidewaysDirection.setLength(mouseDelta.x)\r\n\r\n      moveDirection.copy(cameraUpDirection.add(cameraSidewaysDirection))\r\n\r\n      rot.axis.crossVectors(moveDirection, eye)\r\n\r\n      rot.angle = -angle * this.options.rotateFactor\r\n    }\r\n\r\n    rot.axis.transformDirection(matrix4.copy(this.object.matrixWorld).invert())\r\n\r\n    // make sure angle is always positive (thus 'axis' defines both axis and direction of rotation)\r\n    if (rot.angle < 0.0) {\r\n      rot.axis.negate()\r\n      rot.angle = -rot.angle\r\n    }\r\n  }\r\n})()\r\n\r\nfunction ObjectControls(object, objectPivot, camera, domElement, getAltObj) {\r\n  EventDispatcher.call(this)\r\n  const self = this\r\n\r\n  this.object = object\r\n  this.objectPivot = objectPivot\r\n  this.camera = camera\r\n  this.domElement = typeof domElement !== 'undefined' ? domElement : document\r\n  this.getAltObj = getAltObj\r\n\r\n  // API\r\n\r\n  this.enabled = true\r\n  this.hotkeysEnabled = true\r\n\r\n  this.screen = {\r\n    left: 0,\r\n    top: 0,\r\n    width: 0,\r\n    height: 0\r\n  }\r\n\r\n  this.options = {\r\n    rotateFactor: Math.PI, // full screen slide (along short side) would roughly mean 180 deg. rotation\r\n    axisRotateFactor: 4 * Math.PI, // full screen slide (along short side) would roughly mean 720 deg. rotation\r\n    intertia: true,\r\n    dynamicDampingFactor: 0.1,\r\n    intertiaThreshold: 1e-3\r\n  }\r\n\r\n  // internals\r\n\r\n  this._state = STATE.NONE\r\n\r\n  this._mousePrevPos = new Vector2()\r\n  this._mouseCurPos = new Vector2()\r\n\r\n  this._mainObj = new ObjectHandler(\r\n    [this.object],\r\n    this.camera,\r\n    new Vector3(0, 0, 0),\r\n    this.options\r\n  )\r\n  this._altObj = new ObjectHandler(\r\n    [this.object],\r\n    this.camera,\r\n    new Vector3(0, 0, 0),\r\n    this.options\r\n  )\r\n  this._affectedObj = this._mainObj\r\n  this._isAltObjFreeRotationAllowed = true\r\n  this._isTranslationAllowed = true\r\n  this._isKeysTranslatingObj = false\r\n\r\n  this._pressedKeys = []\r\n\r\n  this._clock = new Timer()\r\n  this._clock.start()\r\n  this._lastUpdateTime = this._clock.getElapsedTime()\r\n\r\n  // events\r\n  this._listeners = [\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousedown',\r\n      handler(e) {\r\n        self.mousedown(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mouseup',\r\n      handler(e) {\r\n        self.mouseup(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousemove',\r\n      handler(e) {\r\n        self.mousemove(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousewheel',\r\n      handler(e) {\r\n        self.mousewheel(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'DOMMouseScroll',\r\n      handler(e) {\r\n        self.mousewheel(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mouseout',\r\n      handler(e) {\r\n        self.mouseup(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchstart',\r\n      handler(e) {\r\n        self.touchstartend(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchend',\r\n      handler(e) {\r\n        self.touchstartend(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchmove',\r\n      handler(e) {\r\n        self.touchmove(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.getKeyBindObject(),\r\n      type: 'keydown',\r\n      handler(e) {\r\n        self.keydownup(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.getKeyBindObject(),\r\n      type: 'keyup',\r\n      handler(e) {\r\n        self.keydownup(e)\r\n      }\r\n    },\r\n    {\r\n      obj: window,\r\n      type: 'resize',\r\n      handler() {\r\n        self.handleResize()\r\n      }\r\n    },\r\n    {\r\n      obj: window,\r\n      type: 'blur',\r\n      handler() {\r\n        self.resetKeys()\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'contextmenu',\r\n      handler(e) {\r\n        self.contextmenu(e)\r\n      }\r\n    }\r\n  ]\r\n\r\n  for (let i = 0; i < this._listeners.length; i++) {\r\n    const l = this._listeners[i]\r\n    l.obj.addEventListener(l.type, l.handler)\r\n  }\r\n\r\n  this.handleResize()\r\n\r\n  this.resetKeys()\r\n\r\n  // force an update at start\r\n  this.update()\r\n}\r\n\r\n// methods\r\n\r\nObjectControls.prototype = Object.create(EventDispatcher.prototype)\r\nObjectControls.prototype.constructor = ObjectControls\r\n\r\nObjectControls.prototype.resetKeys = function () {\r\n  this._pressedKeys[VK_LEFT] = false\r\n  this._pressedKeys[VK_UP] = false\r\n  this._pressedKeys[VK_RIGHT] = false\r\n  this._pressedKeys[VK_DOWN] = false\r\n}\r\n\r\nObjectControls.prototype.contextmenu = function (e) {\r\n  e.stopPropagation()\r\n  e.preventDefault()\r\n}\r\n\r\nObjectControls.prototype.handleResize = function () {\r\n  if (this.domElement === document) {\r\n    this.screen.left = 0\r\n    this.screen.top = 0\r\n    this.screen.width = window.innerWidth\r\n    this.screen.height = window.innerHeight\r\n  } else {\r\n    const box = this.domElement.getBoundingClientRect()\r\n    // adjustments come from similar code in the jquery offset() function\r\n    const d = this.domElement.ownerDocument.documentElement\r\n    this.screen.left = box.left + window.pageXOffset - d.clientLeft\r\n    this.screen.top = box.top + window.pageYOffset - d.clientTop\r\n    this.screen.width = box.width\r\n    this.screen.height = box.height\r\n  }\r\n}\r\n\r\nObjectControls.prototype.enable = function (enable) {\r\n  this.enabled = enable\r\n}\r\n\r\nObjectControls.prototype.enableHotkeys = function (enable) {\r\n  this.hotkeysEnabled = enable\r\n}\r\n\r\nObjectControls.prototype.allowTranslation = function (allow) {\r\n  this._isTranslationAllowed = allow\r\n}\r\n\r\nObjectControls.prototype.allowAltObjFreeRotation = function (allow) {\r\n  this._isAltObjFreeRotationAllowed = allow\r\n}\r\n\r\nObjectControls.prototype.keysTranslateObj = function (on) {\r\n  this._isKeysTranslatingObj = on\r\n}\r\n\r\nObjectControls.prototype.isEditingAltObj = function () {\r\n  return (\r\n    (this._state === STATE.ROTATE || this._state === STATE.TRANSLATE) &&\r\n    this._affectedObj === this._altObj\r\n  )\r\n}\r\n\r\n// convert page coords of mouse/touch to uniform coords with smaller side being [-0.5, 0.5]\r\n// (uniform coords keep direct proportion with screen distance travelled by mouse regardless of screen aspect ratio)\r\nObjectControls.prototype.convertMouseToOnCircle = function (\r\n  coords,\r\n  pageX,\r\n  pageY\r\n) {\r\n  const screenSize = Math.min(this.screen.width, this.screen.height)\r\n\r\n  if (screenSize === 0) {\r\n    coords.set(0, 0)\r\n    return\r\n  }\r\n\r\n  coords.set(\r\n    (pageX - this.screen.width * 0.5 - this.screen.left) / screenSize,\r\n    (0.5 * this.screen.height + this.screen.top - pageY) / screenSize\r\n  )\r\n}\r\n\r\n// convert page coords of mouse/touch to viewport coords with both sides being [-1, 1]\r\n// (those are non-uniform coords affected by screen aspect ratio)\r\nObjectControls.prototype.convertMouseToViewport = function (\r\n  coords,\r\n  pageX,\r\n  pageY\r\n) {\r\n  if (this.screen.width === 0 || this.screen.height === 0) {\r\n    coords.set(0, 0)\r\n    return\r\n  }\r\n\r\n  coords.set(\r\n    (2.0 * (pageX - this.screen.width * 0.5 - this.screen.left)) /\r\n      this.screen.width,\r\n    (2.0 * (0.5 * this.screen.height + this.screen.top - pageY)) /\r\n      this.screen.height\r\n  )\r\n}\r\n\r\nObjectControls.prototype.stop = function () {\r\n  this._mainObj.stop()\r\n  this._altObj.stop()\r\n}\r\n\r\n// rotate object based on latest mouse/touch movement\r\nObjectControls.prototype.rotateByMouse = (function () {\r\n  const quat = new Quaternion()\r\n\r\n  return function (aboutZAxis) {\r\n    this._affectedObj.rotate(\r\n      quat,\r\n      this._mousePrevPos,\r\n      this._mouseCurPos,\r\n      aboutZAxis\r\n    )\r\n    this.dispatchEvent({ type: 'change', action: 'rotate', quaternion: quat })\r\n  }\r\n})()\r\n\r\n// rotate object by specified quaternion\r\nObjectControls.prototype.rotate = function (quat) {\r\n  this.object.quaternion.multiply(quat)\r\n  this.dispatchEvent({ type: 'change', action: 'rotate', quaternion: quat })\r\n}\r\n\r\n// get object's orientation\r\nObjectControls.prototype.getOrientation = function () {\r\n  return this.object.quaternion\r\n}\r\n\r\n// set object's orientation\r\nObjectControls.prototype.setOrientation = function (quat) {\r\n  this.object.quaternion.copy(quat)\r\n}\r\n\r\n// translate object based on latest mouse/touch movement\r\nObjectControls.prototype.translate = (function () {\r\n  const delta = new Vector2()\r\n  return function () {\r\n    delta.subVectors(this._mouseCurPos, this._mousePrevPos)\r\n    this._affectedObj.translate(delta)\r\n    this.dispatchEvent({ type: 'change', action: 'translate' })\r\n  }\r\n})()\r\n\r\n// get object scale\r\nObjectControls.prototype.getScale = function () {\r\n  return this.object.scale.x\r\n}\r\n\r\n// set uniform object scale\r\nObjectControls.prototype.setScale = function (scale) {\r\n  this.object.scale.set(scale, scale, scale)\r\n}\r\n\r\n// scale object by factor (factor should be greater than zero)\r\nObjectControls.prototype.scale = function (factor) {\r\n  if (factor <= 0) {\r\n    return\r\n  }\r\n  this.setScale(this.object.scale.x * factor)\r\n  this.dispatchEvent({ type: 'change', action: 'zoom', factor })\r\n}\r\n\r\nObjectControls.prototype.update = (function () {\r\n  const shift = new Vector2()\r\n\r\n  return function () {\r\n    const curTime = this._clock.getElapsedTime()\r\n    const timeSinceLastUpdate = curTime - this._lastUpdateTime\r\n\r\n    // update object handler\r\n    if (this._state === STATE.NONE) {\r\n      const timeSinceMove = curTime - this._lastMouseMoveTime\r\n      if (\r\n        this._mainObj.update(timeSinceLastUpdate, timeSinceMove) ||\r\n        this._altObj.update(timeSinceLastUpdate, timeSinceMove)\r\n      ) {\r\n        this.dispatchEvent({ type: 'change', action: 'auto' })\r\n      }\r\n    }\r\n\r\n    // apply arrow keys\r\n    if (this._isKeysTranslatingObj) {\r\n      const speedX =\r\n        Number(this._pressedKeys[VK_RIGHT]) - Number(this._pressedKeys[VK_LEFT])\r\n      const speedY =\r\n        Number(this._pressedKeys[VK_UP]) - Number(this._pressedKeys[VK_DOWN])\r\n      if (speedX !== 0.0 || speedY !== 0.0) {\r\n        const delta = timeSinceLastUpdate\r\n\r\n        // update object translation\r\n        const altObj = this.getAltObj()\r\n        if (altObj.objects.length > 0) {\r\n          this._altObj.setObjects(altObj.objects)\r\n          this._altObj.pivot = altObj.pivot\r\n\r\n          if ('axis' in altObj) {\r\n            this._altObj.axis = altObj.axis.clone()\r\n          } else {\r\n            this._altObj.axis.set(0, 0, 1)\r\n          }\r\n\r\n          shift.set(delta * speedX, delta * speedY)\r\n          this._altObj.translate(shift)\r\n          this.dispatchEvent({ type: 'change', action: 'translate' })\r\n        }\r\n      }\r\n    }\r\n\r\n    this._lastUpdateTime = curTime\r\n  }\r\n})()\r\n\r\nObjectControls.prototype.reset = function () {\r\n  this._state = STATE.NONE\r\n\r\n  this.object.quaternion.copy(quaternion.set(0, 0, 0, 1))\r\n}\r\n\r\n// listeners\r\n\r\nObjectControls.prototype.mousedown = function (event) {\r\n  if (this.enabled === false || this._state !== STATE.NONE) {\r\n    return\r\n  }\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  if (this._state === STATE.NONE) {\r\n    if (event.button === 0) {\r\n      this._affectedObj.stop() // can edit only one object at a time\r\n\r\n      let workWithAltObj = false\r\n\r\n      if (event.altKey) {\r\n        const altObj = this.getAltObj()\r\n        workWithAltObj = altObj.objects.length > 0\r\n        if (workWithAltObj) {\r\n          this._altObj.setObjects(altObj.objects)\r\n          this._altObj.pivot = altObj.pivot\r\n\r\n          if ('axis' in altObj) {\r\n            this._altObj.axis = altObj.axis.clone()\r\n          } else {\r\n            this._altObj.axis.set(0, 0, 1)\r\n          }\r\n        }\r\n      }\r\n\r\n      this._affectedObj = workWithAltObj ? this._altObj : this._mainObj\r\n\r\n      this._state =\r\n        workWithAltObj && event.ctrlKey && this._isTranslationAllowed\r\n          ? STATE.TRANSLATE\r\n          : STATE.ROTATE\r\n    } else if (event.button === 2) {\r\n      this._state = STATE.TRANSLATE_PIVOT\r\n    }\r\n  }\r\n\r\n  if (this._state === STATE.ROTATE) {\r\n    this.convertMouseToOnCircle(this._mouseCurPos, event.pageX, event.pageY)\r\n    this._mousePrevPos.copy(this._mouseCurPos)\r\n  }\r\n\r\n  if (\r\n    this._state === STATE.TRANSLATE ||\r\n    this._state === STATE.TRANSLATE_PIVOT\r\n  ) {\r\n    this.convertMouseToViewport(this._mouseCurPos, event.pageX, event.pageY)\r\n    this._mousePrevPos.copy(this._mouseCurPos)\r\n  }\r\n}\r\n\r\nObjectControls.prototype.mousemove = function (event) {\r\n  if (this.enabled === false || this._state === STATE.NONE) {\r\n    return\r\n  }\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  switch (this._state) {\r\n    case STATE.ROTATE:\r\n      this._mousePrevPos.copy(this._mouseCurPos)\r\n      this.convertMouseToOnCircle(this._mouseCurPos, event.pageX, event.pageY)\r\n      this.rotateByMouse(\r\n        (event.altKey && !this._isAltObjFreeRotationAllowed) || event.shiftKey\r\n      )\r\n      this._lastMouseMoveTime = this._clock.getElapsedTime()\r\n      break\r\n\r\n    case STATE.TRANSLATE:\r\n      this._mousePrevPos.copy(this._mouseCurPos)\r\n      this.convertMouseToViewport(this._mouseCurPos, event.pageX, event.pageY)\r\n      this.translate()\r\n      break\r\n\r\n    case STATE.TRANSLATE_PIVOT:\r\n      this._mousePrevPos.copy(this._mouseCurPos)\r\n      this.convertMouseToViewport(this._mouseCurPos, event.pageX, event.pageY)\r\n      this.translatePivotByMouse()\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n}\r\n\r\nObjectControls.prototype.mousewheel = function (event) {\r\n  if (\r\n    this.enabled === false ||\r\n    !settings.now.zooming ||\r\n    this._state !== STATE.NONE ||\r\n    event.shiftKey\r\n  ) {\r\n    return\r\n  }\r\n\r\n  event.preventDefault()\r\n\r\n  let delta = 0\r\n\r\n  if (event.wheelDelta) {\r\n    // WebKit / Opera / Explorer 9\r\n    delta = event.wheelDelta / 40\r\n  } else if (event.detail) {\r\n    // Firefox\r\n    delta = -event.detail / 3\r\n  }\r\n\r\n  let factor = 1.0 + delta * 0.05\r\n  factor = Math.max(factor, 0.01)\r\n  this.scale(factor)\r\n}\r\n\r\nObjectControls.prototype.mouseup = function (event) {\r\n  if (this.enabled === false || this._state === STATE.NONE) {\r\n    return\r\n  }\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  this._state = STATE.NONE\r\n\r\n  if (\r\n    this._clock.getElapsedTime() - this._lastMouseMoveTime >\r\n    FULL_STOP_THRESHOLD\r\n  ) {\r\n    this._affectedObj.stop()\r\n  }\r\n}\r\n\r\nObjectControls.prototype.touchstartend = function (event) {\r\n  if (this.enabled === false) {\r\n    return\r\n  }\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  switch (event.touches.length) {\r\n    case 1:\r\n      this._state = STATE.ROTATE\r\n      this.convertMouseToOnCircle(\r\n        this._mouseCurPos,\r\n        event.touches[0].pageX,\r\n        event.touches[0].pageY\r\n      )\r\n      this._mousePrevPos.copy(this._mouseCurPos)\r\n      break\r\n\r\n    case 2: {\r\n      // prevent inertial rotation\r\n      this._mainObj.stop()\r\n      this._altObj.stop()\r\n\r\n      this._state = STATE.SCALE\r\n      const dx = event.touches[0].pageX - event.touches[1].pageX\r\n      const dy = event.touches[0].pageY - event.touches[1].pageY\r\n      this._touchDistanceCur = this._touchDistanceStart = Math.sqrt(\r\n        dx * dx + dy * dy\r\n      )\r\n      this._scaleStart = this.object.scale.x\r\n      break\r\n    }\r\n\r\n    default:\r\n      this._state = STATE.NONE\r\n  }\r\n}\r\n\r\nObjectControls.prototype.touchmove = function (event) {\r\n  if (this.enabled === false || this._state === STATE.NONE) {\r\n    return\r\n  }\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  switch (this._state) {\r\n    case STATE.ROTATE:\r\n      this._mousePrevPos.copy(this._mouseCurPos)\r\n      this.convertMouseToOnCircle(\r\n        this._mouseCurPos,\r\n        event.touches[0].pageX,\r\n        event.touches[0].pageY\r\n      )\r\n      this.rotateByMouse(false)\r\n\r\n      this._lastMouseMoveTime = this._clock.getElapsedTime()\r\n      break\r\n\r\n    case STATE.SCALE:\r\n      if (settings.now.zooming) {\r\n        // update scale\r\n        const dx = event.touches[0].pageX - event.touches[1].pageX\r\n        const dy = event.touches[0].pageY - event.touches[1].pageY\r\n        this._touchDistanceCur = Math.sqrt(dx * dx + dy * dy)\r\n        const newScale =\r\n          (this._scaleStart * this._touchDistanceCur) / this._touchDistanceStart\r\n        const factor = newScale / this.object.scale.x\r\n        this.scale(factor)\r\n      }\r\n      break\r\n\r\n    default:\r\n  }\r\n}\r\n\r\nObjectControls.prototype.keydownup = function (event) {\r\n  if (this.enabled === false || this.hotkeysEnabled === false) {\r\n    return\r\n  }\r\n\r\n  switch (event.keyCode) {\r\n    case VK_LEFT:\r\n    case VK_UP:\r\n    case VK_RIGHT:\r\n    case VK_DOWN:\r\n      this._pressedKeys[event.keyCode] = event.type === 'keydown'\r\n      event.preventDefault()\r\n      event.stopPropagation()\r\n      break\r\n    default:\r\n  }\r\n}\r\n\r\nObjectControls.prototype.getKeyBindObject = function () {\r\n  return window\r\n}\r\n\r\nObjectControls.prototype.dispose = function () {\r\n  for (let i = 0; i < this._listeners.length; i++) {\r\n    const l = this._listeners[i]\r\n    l.obj.removeEventListener(l.type, l.handler)\r\n  }\r\n}\r\n\r\nObjectControls.prototype.translatePivotByMouse = (function () {\r\n  const delta = new Vector2()\r\n  return function () {\r\n    delta.subVectors(this._mouseCurPos, this._mousePrevPos)\r\n    this.translatePivotInWorld(\r\n      settings.now.translationSpeed * delta.x,\r\n      settings.now.translationSpeed * delta.y,\r\n      0\r\n    )\r\n  }\r\n})()\r\n\r\n// Translate in WorldCS, translation is scaled with root scale matrix\r\nObjectControls.prototype.translatePivotInWorld = function (x, y, z) {\r\n  const pos = this.objectPivot.position\r\n  pos.applyMatrix4(this.object.matrixWorld)\r\n  pos.setX(pos.x + x)\r\n  pos.setY(pos.y + y)\r\n  pos.setZ(pos.z + z)\r\n  pos.applyMatrix4(matrix4.copy(this.object.matrixWorld).invert())\r\n\r\n  this.dispatchEvent({ type: 'change', action: 'translatePivot' })\r\n}\r\n\r\n// Translate in ModelCS, x, y, z are Ang\r\nObjectControls.prototype.translatePivot = function (x, y, z) {\r\n  const pos = this.objectPivot.position\r\n  pos.setX(pos.x + x)\r\n  pos.setY(pos.y + y)\r\n  pos.setZ(pos.z + z)\r\n\r\n  this.dispatchEvent({ type: 'change', action: 'translatePivot' })\r\n}\r\n\r\n// Set pivot\r\nObjectControls.prototype.setPivot = function (newPivot) {\r\n  this.objectPivot.position.copy(newPivot)\r\n\r\n  this.dispatchEvent({ type: 'change', action: 'translatePivot' })\r\n}\r\n\r\nexport default ObjectControls\r\n",
		"import loaders from './loaders'\r\nimport parsers from './parsers'\r\nimport exporters from './exporters'\r\n\r\nexport default {\r\n  loaders,\r\n  parsers,\r\n  exporters\r\n}\r\n",
		"import ExporterList from './exporters/ExporterList'\r\n\r\nimport PDBExporter from './exporters/PDBExporter'\r\nimport FBXExporter from './exporters/FBXExporter'\r\n\r\nexport default new ExporterList([PDBExporter, FBXExporter])\r\n",
		"/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nimport CSS2DObject from './CSS2DObject'\r\nimport { Matrix4, Vector3, Color, MathUtils } from 'three'\r\n\r\nconst tempColor = new Color()\r\n\r\nclass CSS2DRenderer {\r\n  constructor() {\r\n    this._width = 0\r\n    this._height = 0\r\n    this._widthHalf = 0\r\n    this._heightHalf = 0\r\n\r\n    this._vector = new Vector3()\r\n    this._viewMatrix = new Matrix4()\r\n    this._projectionMatrix = new Matrix4()\r\n\r\n    this._domElement = document.createElement('div')\r\n    this._domElement.style.overflow = 'hidden'\r\n    this._domElement.style.position = 'absolute'\r\n    this._domElement.style.top = '0'\r\n    this._domElement.style.zIndex = '0' // start a new Stacking Context to enclose all z-ordered children\r\n    this._domElement.style.pointerEvents = 'none'\r\n  }\r\n\r\n  getElement() {\r\n    return this._domElement\r\n  }\r\n\r\n  reset() {\r\n    const myNode = this.getElement()\r\n    while (myNode.firstChild) {\r\n      myNode.removeChild(myNode.firstChild)\r\n    }\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this._width = width\r\n    this._height = height\r\n\r\n    this._widthHalf = this._width / 2\r\n    this._heightHalf = this._height / 2\r\n\r\n    this._domElement.style.width = `${width}px`\r\n    this._domElement.style.height = `${height}px`\r\n  }\r\n\r\n  _renderObject(object, camera, scene) {\r\n    function lerpColorAsHex(a, b, t) {\r\n      tempColor.setHex(a)\r\n      tempColor.lerp(b, t)\r\n      return `#${tempColor.getHexString()}`\r\n    }\r\n\r\n    function colorAsHex(a) {\r\n      tempColor.setHex(a)\r\n      return `#${tempColor.getHexString()}`\r\n    }\r\n\r\n    if (object instanceof CSS2DObject) {\r\n      this._vector.setFromMatrixPosition(object.matrixWorld)\r\n\r\n      if (\r\n        object.userData !== undefined &&\r\n        object.userData.offset !== undefined\r\n      ) {\r\n        const localOffset = new Vector3(\r\n          object.userData.offset.x,\r\n          object.userData.offset.y,\r\n          0\r\n        )\r\n        this._vector.add(\r\n          localOffset.multiplyScalar(object.matrixWorld.getMaxScaleOnAxis())\r\n        )\r\n      }\r\n\r\n      this._vector.applyMatrix4(this._viewMatrix)\r\n\r\n      const visibility = this._vector.z > -camera.near ? 'hidden' : 'visible'\r\n      const zIndex =\r\n        (10000 * (camera.far - -this._vector.z)) / (camera.far - camera.near)\r\n\r\n      const element = object.getElement()\r\n      if (typeof scene.fog === 'undefined') {\r\n        element.style.color = colorAsHex(object.userData.color)\r\n        if (object.userData.background !== 'transparent') {\r\n          element.style.background = colorAsHex(object.userData.background)\r\n        }\r\n      } else {\r\n        const fogFactor = MathUtils.smoothstep(\r\n          -this._vector.z,\r\n          scene.fog.near,\r\n          scene.fog.far\r\n        )\r\n        element.style.color = lerpColorAsHex(\r\n          object.userData.color,\r\n          scene.fog.color,\r\n          fogFactor\r\n        )\r\n        if (object.userData.background !== 'transparent') {\r\n          element.style.background = lerpColorAsHex(\r\n            object.userData.background,\r\n            scene.fog.color,\r\n            fogFactor\r\n          )\r\n        }\r\n      }\r\n\r\n      this._vector.applyMatrix4(this._projectionMatrix)\r\n\r\n      const style = `${\r\n        object.userData !== {}\r\n          ? object.userData.translation\r\n          : 'translate(-50%, -50%) '\r\n      }translate(${this._vector.x * this._widthHalf + this._widthHalf}px,${\r\n        -this._vector.y * this._heightHalf + this._heightHalf\r\n      }px)`\r\n      element.style.visibility = visibility\r\n      element.style.WebkitTransform = style\r\n      element.style.MozTransform = style\r\n      element.style.oTransform = style\r\n      element.style.transform = style\r\n      element.style.zIndex = Number(zIndex).toFixed(0)\r\n\r\n      if (element.parentNode !== this._domElement) {\r\n        this._domElement.appendChild(element)\r\n      }\r\n    }\r\n\r\n    for (let i = 0, l = object.children.length; i < l; i++) {\r\n      this._renderObject(object.children[i], camera, scene)\r\n    }\r\n  }\r\n\r\n  render(scene, camera) {\r\n    scene.updateMatrixWorld()\r\n\r\n    if (camera.parent === null) {\r\n      camera.updateMatrixWorld()\r\n    }\r\n\r\n    camera.matrixWorldInverse.copy(camera.matrixWorld).invert()\r\n\r\n    this._viewMatrix.copy(camera.matrixWorldInverse)\r\n    this._projectionMatrix.copy(camera.projectionMatrix)\r\n\r\n    this._renderObject(scene, camera, scene)\r\n  }\r\n}\r\nexport default CSS2DRenderer\r\n",
		"import settings from '../settings'\r\nimport Timer from '../Timer'\r\nimport EventDispatcher from '../utils/EventDispatcher'\r\nimport { Raycaster, Vector2 } from 'three'\r\n\r\nfunction Picker(gfxObj, camera, domElement) {\r\n  EventDispatcher.call(this)\r\n  const self = this\r\n\r\n  this.gfxObj = gfxObj\r\n  this.camera = camera\r\n  this.domElement = typeof domElement !== 'undefined' ? domElement : document\r\n  this.screen = {\r\n    left: 0,\r\n    top: 0,\r\n    width: 0,\r\n    height: 0\r\n  }\r\n  this._lastMousePos = new Vector2(0, 0)\r\n  this._mouseTotalDist = 0.0\r\n  this._lastClickBeginTime = -1000.0\r\n  this._lastClickPos = new Vector2(0, 0)\r\n  this._clickBeginTime = 0.0\r\n\r\n  this._clock = new Timer()\r\n  this._clock.start()\r\n\r\n  this._listeners = [\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousedown',\r\n      handler(e) {\r\n        self.mousedown(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mouseup',\r\n      handler(e) {\r\n        self.mouseup(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousemove',\r\n      handler(e) {\r\n        self.mousemove(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchstart',\r\n      handler(e) {\r\n        self.touchstart(e)\r\n      }\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchend',\r\n      handler(e) {\r\n        self.touchend(e)\r\n      }\r\n    },\r\n    {\r\n      obj: window,\r\n      type: 'resize',\r\n      handler() {\r\n        self.handleResize()\r\n      }\r\n    }\r\n  ]\r\n\r\n  for (let i = 0; i < this._listeners.length; i++) {\r\n    const l = this._listeners[i]\r\n    l.obj.addEventListener(l.type, l.handler)\r\n  }\r\n\r\n  this.handleResize()\r\n}\r\n\r\nPicker.prototype = Object.create(EventDispatcher.prototype)\r\nPicker.prototype.constructor = Picker\r\n\r\nPicker.prototype.reset = function () {\r\n  this.picked = {}\r\n  this.dispatchEvent({ type: 'newpick', obj: {} })\r\n}\r\n\r\nPicker.prototype.handleResize = function () {\r\n  if (this.domElement === document) {\r\n    this.screen.left = 0\r\n    this.screen.top = 0\r\n    this.screen.width = window.innerWidth\r\n    this.screen.height = window.innerHeight\r\n  } else {\r\n    const box = this.domElement.getBoundingClientRect()\r\n    // adjustments come from similar code in the jquery offset() function\r\n    const d = this.domElement.ownerDocument.documentElement\r\n    this.screen.left = box.left + window.pageXOffset - d.clientLeft\r\n    this.screen.top = box.top + window.pageYOffset - d.clientTop\r\n    this.screen.width = box.width\r\n    this.screen.height = box.height\r\n  }\r\n}\r\n\r\nPicker.prototype.pickObject = function (screenPos) {\r\n  if (!this.gfxObj) {\r\n    this.picked = {}\r\n    this.dispatchEvent({ type: 'newpick', obj: {} })\r\n    return\r\n  }\r\n\r\n  const { gfxObj } = this\r\n  const rayCaster = new Raycaster()\r\n  rayCaster.ray.origin.setFromMatrixPosition(this.camera.matrixWorld)\r\n  rayCaster.ray.direction\r\n    .set(screenPos.x, screenPos.y, 0.5)\r\n    .unproject(this.camera)\r\n    .sub(rayCaster.ray.origin)\r\n    .normalize()\r\n\r\n  const clipPlane =\r\n    settings.now.draft.clipPlane && this.clipPlaneValue\r\n      ? this.clipPlaneValue\r\n      : Infinity\r\n  const fogFarPlane =\r\n    settings.now.fog && this.fogFarValue ? this.fogFarValue : Infinity\r\n  const point = rayCaster.intersectVisibleObject(\r\n    gfxObj,\r\n    this.camera,\r\n    clipPlane,\r\n    fogFarPlane\r\n  )\r\n  if (!point) {\r\n    this.picked = {}\r\n    this.dispatchEvent({ type: 'newpick', obj: {} })\r\n    return\r\n  }\r\n\r\n  let picked = {}\r\n  if (point.residue || point.atom) {\r\n    const residue = point.residue || point.atom.residue\r\n    if (settings.now.pick === 'chain') {\r\n      picked = { chain: residue.getChain() }\r\n    } else if (settings.now.pick === 'molecule') {\r\n      picked = { molecule: residue.getMolecule() }\r\n    } else if (point.residue || settings.now.pick === 'residue') {\r\n      picked = { residue }\r\n    } else if (point.atom) {\r\n      picked = { atom: point.atom }\r\n    }\r\n  }\r\n  this.picked = picked\r\n  this.dispatchEvent({ type: 'newpick', obj: picked })\r\n}\r\n\r\nPicker.prototype.getMouseInViewport = function (pageX, pageY) {\r\n  return new Vector2(\r\n    ((pageX - this.screen.left) / this.screen.width) * 2 - 1,\r\n    (-(pageY - this.screen.top) / this.screen.height) * 2 + 1\r\n  )\r\n}\r\n\r\nPicker.prototype.mousedown = function (event) {\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  if (event.button === 0) {\r\n    this._lastMousePos = this.getMouseInViewport(event.pageX, event.pageY)\r\n    this._mouseTotalDist = 0.0\r\n    this._clickBeginTime = this._clock.getElapsedTime()\r\n  }\r\n}\r\n\r\nPicker.prototype.mousemove = function (event) {\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  const pos = this.getMouseInViewport(event.pageX, event.pageY)\r\n  this._mouseTotalDist += pos.sub(this._lastMousePos).length()\r\n}\r\n\r\nPicker.prototype.mouseup = function (event) {\r\n  const self = this\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  if (event.button === 0) {\r\n    if (this._mouseTotalDist < 0.01) {\r\n      const curTime = this._clock.getElapsedTime()\r\n      const curPos = this.getMouseInViewport(event.pageX, event.pageY)\r\n\r\n      const timeSinceLastClickBegin = curTime - this._lastClickBeginTime\r\n      if (timeSinceLastClickBegin < 0.7) {\r\n        const clickDist = new Vector2().subVectors(curPos, this._lastClickPos)\r\n        if (clickDist.length() < 0.01) {\r\n          // it's a double click\r\n          this.dispatchEvent({ type: 'dblclick', obj: this.picked })\r\n\r\n          this._lastClickPos = curPos\r\n          this._lastClickBeginTime = -1000 // this click cannot serve as first click in double-click\r\n          return\r\n        }\r\n      }\r\n\r\n      setTimeout(() => {\r\n        self.pickObject(curPos)\r\n      }, 0)\r\n\r\n      this._lastClickPos = curPos\r\n      this._lastClickBeginTime = this._clickBeginTime\r\n    }\r\n  }\r\n}\r\n\r\nPicker.prototype.touchstart = function (event) {\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  if (event.touches.length === 1) {\r\n    this._lastTouchdownPos = this.getMouseInViewport(\r\n      event.touches[0].pageX,\r\n      event.touches[0].pageY\r\n    )\r\n  }\r\n}\r\n\r\nPicker.prototype.touchend = function (event) {\r\n  const self = this\r\n\r\n  event.preventDefault()\r\n  event.stopPropagation()\r\n\r\n  if (event.touches.length === 0 && event.changedTouches.length === 1) {\r\n    const pos = this.getMouseInViewport(\r\n      event.changedTouches[0].pageX,\r\n      event.changedTouches[0].pageY\r\n    )\r\n    const dist = pos.sub(this._lastTouchdownPos).length()\r\n    if (dist < 0.01) {\r\n      setTimeout(() => {\r\n        self.pickObject(self._lastTouchdownPos)\r\n      }, 0)\r\n    }\r\n  }\r\n}\r\n\r\nPicker.prototype.dispose = function () {\r\n  for (let i = 0; i < this._listeners.length; i++) {\r\n    const l = this._listeners[i]\r\n    l.obj.removeEventListener(l.type, l.handler)\r\n  }\r\n}\r\n\r\nexport default Picker\r\n",
		"import { AxesHelper, PerspectiveCamera, Scene, Vector2 } from 'three'\r\n\r\nclass Axes {\r\n  constructor(target, targetCamera) {\r\n    this._target = target\r\n    this._targetCamera = targetCamera\r\n    this._camera = new PerspectiveCamera(\r\n      targetCamera.fov,\r\n      targetCamera.aspect,\r\n      1,\r\n      100\r\n    )\r\n    this._object = new AxesHelper(1)\r\n    this._scene = new Scene()\r\n    this._scene.add(this._object)\r\n    this._full = new Vector2()\r\n\r\n    this._update()\r\n  }\r\n\r\n  _update() {\r\n    const { fov } = this._targetCamera\r\n    const camera = this._camera\r\n    camera.aspect = this._targetCamera.aspect\r\n    camera.setMinimalFov(fov)\r\n    camera.setDistanceToFit(1.0, fov)\r\n    camera.updateProjectionMatrix()\r\n\r\n    this._object.quaternion.copy(this._target.quaternion)\r\n  }\r\n\r\n  render(renderer) {\r\n    this._update()\r\n\r\n    renderer.getSize(this._full)\r\n    const width = this._full.width * 0.25\r\n    const height = this._full.height * 0.25\r\n\r\n    const { autoClear } = renderer\r\n    renderer.autoClear = false\r\n    renderer.setViewport(0.0, 0.0, width, height)\r\n    renderer.clear(false, true, false)\r\n    renderer.render(this._scene, this._camera)\r\n    renderer.setViewport(0, 0, this._full.width, this._full.height)\r\n    renderer.autoClear = autoClear\r\n  }\r\n}\r\nexport default Axes\r\n",
		"import SecondaryStructureColorer from './colorers/SecondaryStructureColorer'\r\nimport { Vector3 } from 'three'\r\n\r\nconst cDataOffset = 12\r\nconst cFirstMask = 0x0fffff00\r\nconst cFirstShift = 8\r\nconst cSecMask1 = 0x000000ff\r\nconst cSecShift1 = 12\r\nconst cSecMask2 = 0xfff00000\r\nconst cSecShift2 = 20\r\nconst cThirdMask = 0x000fffff\r\nconst cStrMask = 0xf0000000\r\nconst cStrShift = 28\r\nconst c219 = 1 << 19\r\nconst c220 = 1 << 20\r\n\r\nconst cHelixIdx = 1\r\nconst cSheetIdx = 2\r\nconst secTypes = ['helix', 'strand']\r\nconst cSecNames = ['fs', 'ps', 'ns', 'us']\r\n\r\nfunction _createSecondary(strArray, complex) {\r\n  const residues = complex._residues\r\n  const nRes = residues.length\r\n  const resid = new Uint8Array(nRes)\r\n\r\n  const atoms = complex._atoms\r\n  for (let i = 0, n = strArray.length; i < n; ++i) {\r\n    const atom = atoms[i]\r\n    resid[atom.residue._index] = strArray[i]\r\n  }\r\n\r\n  const secondary = []\r\n  let rIdx = 0\r\n  while (rIdx < nRes) {\r\n    if (resid[rIdx] !== 0) {\r\n      const start = rIdx\r\n      const val = resid[rIdx]\r\n      while (\r\n        rIdx < nRes - 1 &&\r\n        resid[rIdx + 1] === val &&\r\n        residues[rIdx].isConnected(residues[rIdx + 1])\r\n      ) {\r\n        ++rIdx\r\n      }\r\n      secondary.push({ start, end: rIdx, type: secTypes[val - 1] })\r\n    }\r\n    ++rIdx\r\n  }\r\n  return secondary\r\n}\r\n\r\nfunction fromUInt20ToInt20(uint20) {\r\n  return uint20 >= c219 ? uint20 - c220 : uint20\r\n}\r\n\r\nclass FrameInfo {\r\n  constructor(complex, payload, callbacks) {\r\n    this._complex = complex\r\n    this._secondary = null\r\n    this.isLoading = false\r\n    this._framesRange = {\r\n      start: 0,\r\n      end: -1\r\n    }\r\n    this.frameIsReady = false\r\n    this._buffer = null\r\n    this._frameRequest = null\r\n    this._callbacks = callbacks\r\n    if (typeof payload === 'function') {\r\n      this._framesRequestLength = 1\r\n      this._downloadDataFn = payload\r\n    } else {\r\n      this.parseBinaryData(payload, true)\r\n    }\r\n    this.reset()\r\n    this.setFrame(0)\r\n  }\r\n\r\n  _prepareBuffer(framesStart, framesEnd) {\r\n    if (framesStart === undefined || framesStart === null) {\r\n      framesStart = 0\r\n    }\r\n    if (framesEnd === undefined || framesEnd === null) {\r\n      framesEnd = framesStart + this._framesRequestLength\r\n    }\r\n    if (this._framesCount !== undefined) {\r\n      framesEnd = Math.min(this._framesCount - 1, framesEnd)\r\n    }\r\n    if (this._downloadDataFn) {\r\n      const self = this\r\n      const onDone = function (data) {\r\n        self.isLoading = false\r\n        if (\r\n          self._callbacks &&\r\n          typeof self._callbacks.onLoadStatusChanged === 'function'\r\n        ) {\r\n          self._callbacks.onLoadStatusChanged()\r\n        }\r\n        self._buffer = {\r\n          data,\r\n          state: 'ready',\r\n          start: framesStart,\r\n          end: framesEnd\r\n        }\r\n        if (self._frameRequest !== null) {\r\n          const idx = self._frameRequest\r\n          self._frameRequest = null\r\n          self.setFrame(idx)\r\n        }\r\n      }\r\n      const onFail = function () {\r\n        self.isLoading = false\r\n        if (self._callbacks && typeof self._callbacks.onError === 'function') {\r\n          self._callbacks.onError('Streaming failed')\r\n        }\r\n      }\r\n      if (!this._buffer) {\r\n        this._buffer = {}\r\n      }\r\n      this._buffer.state = 'downloading'\r\n      this.isLoading = true\r\n      if (\r\n        self._callbacks &&\r\n        typeof self._callbacks.onLoadStatusChanged === 'function'\r\n      ) {\r\n        self._callbacks.onLoadStatusChanged()\r\n      }\r\n      this._downloadDataFn(\r\n        { start: framesStart, end: framesEnd + 1 },\r\n        onDone,\r\n        onFail\r\n      )\r\n    }\r\n  }\r\n\r\n  _parseBuffer() {\r\n    if (this._buffer && this._buffer.state === 'ready') {\r\n      this._framesRange = {\r\n        start: this._buffer.start,\r\n        end: this._buffer.end\r\n      }\r\n      this.parseBinaryData(this._buffer.data, false)\r\n      let _bufferRequestStart = (this._buffer.end + 1) % this._framesCount\r\n      if (_bufferRequestStart >= this._framesCount) {\r\n        _bufferRequestStart = 0\r\n      }\r\n      this._buffer = {\r\n        state: 'none'\r\n      }\r\n      this._prepareBuffer(\r\n        _bufferRequestStart,\r\n        _bufferRequestStart + this._framesRequestLength\r\n      )\r\n      if (this._frameRequest !== null) {\r\n        const idx = this._frameRequest\r\n        this._frameRequest = null\r\n        this.setFrame(idx)\r\n      }\r\n    }\r\n  }\r\n\r\n  parseBinaryData(arrayBuffer) {\r\n    const dataView = new DataView(arrayBuffer)\r\n    let offset = 0\r\n    const atomsCount = dataView.getUint32(offset, true)\r\n    offset += 4\r\n    const framesCount = dataView.getUint32(offset, true)\r\n    this._framesCount = framesCount\r\n    this._framesRange.end =\r\n      this._framesRange.end > 0\r\n        ? Math.min(this._framesRange.end, framesCount - 1)\r\n        : framesCount - 1\r\n    offset += 4\r\n    this._atomsCount = atomsCount\r\n    const maxSize = 1024 * 1024 // 1 MB\r\n    this._framesRequestLength = Math.ceil(maxSize / (atomsCount * 8))\r\n    const chunkedFramesCount =\r\n      this._framesRange.end - this._framesRange.start + 1\r\n    if (\r\n      atomsCount !== this._complex._atoms.length ||\r\n      arrayBuffer.byteLength !==\r\n        cDataOffset + chunkedFramesCount * atomsCount * 8\r\n    ) {\r\n      throw new Error()\r\n    }\r\n    const complex = this._complex\r\n    let timeStep = dataView.getUint32(offset, true)\r\n    let iName = 0\r\n    while (timeStep > 1000 && iName < cSecNames.length - 1) {\r\n      timeStep /= 1000\r\n      ++iName\r\n    }\r\n\r\n    this._timeStep = `${timeStep.toString()} ${cSecNames[iName]}`\r\n    offset += 4\r\n    const secondary = []\r\n    const posData = new Float32Array(chunkedFramesCount * atomsCount * 3)\r\n    let coordIdx = 0\r\n    const secondaryArr = new Int8Array(atomsCount)\r\n    for (let j = 0; j < chunkedFramesCount; ++j) {\r\n      for (let i = 0; i < atomsCount; ++i) {\r\n        const hiWord = dataView.getUint32(offset, true)\r\n        offset += 4\r\n        const loWord = dataView.getUint32(offset, true)\r\n        offset += 4\r\n        const str = (loWord & cStrMask) >>> cStrShift\r\n        const x = fromUInt20ToInt20(\r\n          ((loWord & cFirstMask) >>> cFirstShift) >> 0\r\n        )\r\n        const y = fromUInt20ToInt20(\r\n          (((loWord & cSecMask1) << cSecShift1) |\r\n            ((hiWord & cSecMask2) >>> cSecShift2)) >>\r\n            0\r\n        )\r\n        const z = fromUInt20ToInt20((hiWord & cThirdMask) >> 0)\r\n        secondaryArr[i] = 0\r\n        if (str > 0 && str < 4) {\r\n          secondaryArr[i] = cHelixIdx\r\n        } else if (str === 4) {\r\n          secondaryArr[i] = cSheetIdx\r\n        }\r\n        posData[coordIdx++] = x / 100\r\n        posData[coordIdx++] = y / 100\r\n        posData[coordIdx++] = z / 100\r\n      }\r\n      secondary.push(_createSecondary(secondaryArr, complex))\r\n    }\r\n    this._secondaryData = secondary\r\n    this._data = posData\r\n  }\r\n\r\n  nextFrame() {\r\n    this.setFrame((this._currFrame + 1) % this._framesCount)\r\n  }\r\n\r\n  needsColorUpdate(colorer) {\r\n    return colorer instanceof SecondaryStructureColorer\r\n  }\r\n\r\n  getAtomColor(colorer, atom) {\r\n    return colorer.getResidueColor(\r\n      this._residues[atom.residue._index],\r\n      this._complex\r\n    )\r\n  }\r\n\r\n  getResidueColor(colorer, residue) {\r\n    return colorer.getResidueColor(\r\n      this._residues[residue._index],\r\n      this._complex\r\n    )\r\n  }\r\n\r\n  _updateSecondary() {\r\n    let i\r\n    const myResidues = this._residues\r\n    let n = myResidues.length\r\n    for (i = 0; i < n; ++i) {\r\n      myResidues[i]._secondary = null\r\n    }\r\n    const sec = this._secondaryData[this._currFrame - this._framesRange.start]\r\n    for (i = 0, n = sec.length; i < n; ++i) {\r\n      const oldSec = sec[i]\r\n      const { start, end } = oldSec\r\n      const nSec = {\r\n        _start: myResidues[start],\r\n        _end: myResidues[end],\r\n        type: oldSec.type,\r\n        generic: oldSec.generic\r\n      }\r\n      for (let j = start; j <= end; ++j) {\r\n        myResidues[j]._secondary = nSec\r\n      }\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const compRes = this._complex._residues\r\n    const n = compRes.length\r\n    this._residues = new Array(n)\r\n    const myResidues = this._residues\r\n    const getSec = function () {\r\n      return this._secondary\r\n    }\r\n    for (let i = 0; i < n; ++i) {\r\n      myResidues[i] = {\r\n        _type: compRes[i]._type,\r\n        _isValid: compRes[i]._isValid,\r\n        _controlPoint: null,\r\n        _wingVector: null,\r\n        _secondary: null,\r\n        getSecondary: getSec\r\n      }\r\n    }\r\n  }\r\n\r\n  setFrame(frameIdx) {\r\n    this.frameIsReady = false\r\n    if (\r\n      frameIdx >= this._framesRange.start &&\r\n      frameIdx <= this._framesRange.end\r\n    ) {\r\n      this._currFrame = frameIdx\r\n      this._cachedResidues = false\r\n      this._updateSecondary()\r\n      this.frameIsReady = true\r\n    } else {\r\n      this._frameRequest = frameIdx\r\n      if (!this._buffer) {\r\n        this._prepareBuffer(frameIdx)\r\n      } else {\r\n        const self = this\r\n        switch (this._buffer.state) {\r\n          case 'none':\r\n            this._prepareBuffer(frameIdx)\r\n            break\r\n          case 'ready':\r\n            self._parseBuffer()\r\n            break\r\n          default:\r\n            break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  disableEvents() {\r\n    this._callbacks = null\r\n  }\r\n\r\n  /**\r\n   * Returns link to atom pos vector, clone it if needed\r\n   */\r\n\r\n  static _vec = new Vector3()\r\n\r\n  getAtomPos(atomIdx) {\r\n    const vec = FrameInfo._vec\r\n    const self = this\r\n    const data = self._data\r\n    const idx =\r\n      (self._atomsCount * (self._currFrame - self._framesRange.start) +\r\n        atomIdx) *\r\n      3\r\n    vec.set(data[idx], data[idx + 1], data[idx + 2])\r\n    return vec\r\n  }\r\n\r\n  getResidues() {\r\n    if (this._cachedResidues) {\r\n      return this._residues\r\n    }\r\n    this._complex.updateToFrame(this)\r\n    return this._residues\r\n  }\r\n}\r\nexport default FrameInfo\r\n",
		"import { isEmpty, merge } from 'lodash'\r\nimport settings from '../../settings'\r\nimport utils from '../../utils'\r\nimport gfxutils from '../gfxutils'\r\n\r\n/**\r\n * Create new scene object.\r\n *\r\n * @param {array=} params - Object required params.\r\n * @param {object=} opts - Options to override defaults with.\r\n *\r\n *   These options are copied locally and not kept by reference, so the created instance will not reflect further\r\n *   changes to the `opts` object. However, changes in defaults **will** affect the colorer after its creation.\r\n *\r\n * @exports SceneObject\r\n * @this SceneObject\r\n * @abstract\r\n * @constructor\r\n * @classdesc Basic class for all scene objects that are not reps.\r\n */\r\nclass SceneObject {\r\n  constructor(params, opts) {\r\n    if (this.constructor === SceneObject) {\r\n      throw new Error('Can not instantiate abstract class!')\r\n    }\r\n    /**\r\n     * Object's options inherited (prototyped) from defaults.\r\n     * @type {object}\r\n     */\r\n    this.params = params\r\n    this.opts = merge(\r\n      utils.deriveDeep(settings.now.objects[this.type], true),\r\n      opts\r\n    )\r\n    this.needsRebuild = false\r\n    this._mesh = null\r\n    this.id = null\r\n  }\r\n\r\n  /**\r\n   * Get object identification, probably with options.\r\n   *  @returns {Object} field type contains type information, params - object's formal parameters,\r\n   * opts - changed options\r\n   * Options are returned if they were changed during or after object creation.\r\n   */\r\n  identify() {\r\n    const result = {\r\n      type: this.type,\r\n      params: this.params\r\n    }\r\n    const diff = utils.objectsDiff(this.opts, settings.now.modes[this.id])\r\n    if (!isEmpty(diff)) {\r\n      result.opts = diff\r\n    }\r\n    return result\r\n  }\r\n\r\n  toString() {\r\n    const paramsStr = `o=${this.type},${this.params.join(',')}`\r\n    const optsStr = utils.compareOptionsWithDefaults(\r\n      this.opts,\r\n      settings.defaults.objects[this.type]\r\n    )\r\n    return paramsStr + optsStr\r\n  }\r\n\r\n  getGeometry() {\r\n    return this._mesh\r\n  }\r\n\r\n  destroy() {\r\n    if (this._mesh) {\r\n      gfxutils.destroyObject(this._mesh)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Scene object identifier.\r\n * @type {string}\r\n */\r\nSceneObject.prototype.type = '__'\r\n\r\nexport default SceneObject\r\n",
		"import SceneObject from './SceneObject'\r\nimport meshutils from '../meshutils'\r\nimport UberMaterial from '../shaders/UberMaterial'\r\nimport meshes from '../meshes/meshes'\r\nimport settings from '../../settings'\r\nimport { BufferAttribute, BufferGeometry, Group, Color } from 'three'\r\n\r\nclass LinesObj extends SceneObject {\r\n  constructor(params, opts) {\r\n    super(params, opts)\r\n    if (params.length < 2) {\r\n      throw new Error('Wrong number of argumets on line object creation!')\r\n    }\r\n    ;[this._id1, this._id2] = params\r\n  }\r\n\r\n  _getAtomFromName(complex, atomId) {\r\n    const err =\r\n      \" - Wrong atom format it must be '#CHAIN_NAME.#RESIDUE_NUMBER.#ATOM_NAME' (e.g. 'A.38.CO1')\"\r\n    const atom1 = complex.getAtomByFullname(atomId)\r\n    if (!atom1) {\r\n      throw new Error(atomId + err)\r\n    }\r\n    return atom1\r\n  }\r\n\r\n  build(complex) {\r\n    const geom = new BufferGeometry()\r\n    this._atom1 = this._getAtomFromName(complex, this._id1)\r\n    this._atom2 = this._getAtomFromName(complex, this._id2)\r\n\r\n    const p1 = this._atom1.position\r\n    const p2 = this._atom2.position\r\n    const vertices = new Float32Array([p1.x, p1.y, p1.z, p2.x, p2.y, p2.z])\r\n\r\n    geom.setAttribute('position', new BufferAttribute(vertices, 3))\r\n    geom.computeBoundingBox()\r\n    const material = new UberMaterial()\r\n    material.setValues({\r\n      lights: false,\r\n      overrideColor: true,\r\n      dashedLine: true,\r\n      fogTransparent: settings.now.bg.transparent\r\n    })\r\n\r\n    this._line = new meshes.Line(geom, material)\r\n    this._line.computeLineDistances()\r\n    this._line.material.setUberOptions({\r\n      fixedColor: new Color(this.opts.color),\r\n      dashedLineSize: this.opts.dashSize,\r\n      dashedLinePeriod: this.opts.dashSize + this.opts.gapSize\r\n    })\r\n    this._line.material.updateUniforms()\r\n\r\n    this._line.raycast = function (_raycaster, _intersects) {}\r\n    this._mesh = this._line\r\n    const transforms = complex.getTransforms()\r\n    if (transforms.length > 0) {\r\n      this._mesh = new Group()\r\n      this._mesh.add(this._line)\r\n      meshutils.applyTransformsToMeshes(this._mesh, transforms)\r\n    }\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    if (!this._atom1 || !this._atom2 || !this._line) {\r\n      return\r\n    }\r\n\r\n    const geo = this._line.geometry\r\n    geo.vertices[0].copy(frameData.getAtomPos(this._atom1.index))\r\n    geo.vertices[1].copy(frameData.getAtomPos(this._atom2.index))\r\n    this._line.computeLineDistances()\r\n    geo.computeBoundingSphere()\r\n\r\n    geo.verticesNeedUpdate = true\r\n  }\r\n}\r\n\r\nLinesObj.prototype.constructor = LinesObj\r\nLinesObj.prototype.type = 'line'\r\n\r\nexport default LinesObj\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './ScreenQuad.vert'\r\nimport fragmentShader from './Outline.frag'\r\nimport { RawShaderMaterial, Vector2 } from 'three'\r\n\r\nclass OutlineMaterial extends RawShaderMaterial {\r\n  constructor(params) {\r\n    // add depth outline\r\n    super(params)\r\n\r\n    const settings = {\r\n      uniforms: {\r\n        srcTex: { type: 't', value: null },\r\n        srcDepthTex: { type: 't', value: null },\r\n        srcTexSize: { type: 'v2', value: new Vector2(512, 512) },\r\n        color: { type: 'v3', value: null },\r\n        threshold: { type: 'f', value: null },\r\n        opacity: { type: 'f', value: 1.0 },\r\n        thickness: { type: 'v2', value: new Vector2(1, 1) }\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: true,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    }\r\n\r\n    this.setValues(settings)\r\n  }\r\n\r\n  copy(source) {\r\n    super.copy(source)\r\n    this.depth = source.depth\r\n  }\r\n\r\n  setValues(values) {\r\n    if (typeof values === 'undefined') {\r\n      return\r\n    }\r\n\r\n    // set direct values\r\n    super.setValues(values)\r\n    const defines = {}\r\n\r\n    if (this.depth) {\r\n      defines.DEPTH_OUTLINE = 1\r\n    }\r\n\r\n    // set dependent values\r\n    this.defines = defines\r\n  }\r\n}\r\n\r\nOutlineMaterial.prototype.depth = false\r\n\r\nexport default OutlineMaterial\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './ScreenQuad.vert'\r\nimport fragmentShader from './FXAA.frag'\r\nimport { RawShaderMaterial, Vector2, Color } from 'three'\r\n\r\nclass FXAAMaterial extends RawShaderMaterial {\r\n  constructor(params) {\r\n    super(params)\r\n\r\n    // set default values\r\n    this.setValues({\r\n      uniforms: {\r\n        srcTex: { type: 't', value: null },\r\n        srcTexelSize: {\r\n          type: 'v2',\r\n          value: new Vector2(1.0 / 512.0, 1.0 / 512.0)\r\n        },\r\n        bgColor: { type: 'c', value: new Color(0xffffff) }\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    })\r\n\r\n    this.setValues(params)\r\n  }\r\n\r\n  copy(source) {\r\n    super.copy(source)\r\n    this.depth = source.depth\r\n  }\r\n\r\n  setValues(values) {\r\n    if (typeof values === 'undefined') {\r\n      return\r\n    }\r\n\r\n    // set direct values\r\n    super.setValues(values)\r\n\r\n    const defines = {}\r\n\r\n    if (this.bgTransparent) {\r\n      defines.BG_TRANSPARENT = 1\r\n    }\r\n    // set dependent values\r\n    this.defines = defines\r\n  }\r\n}\r\n\r\nFXAAMaterial.prototype.bgTransparent = false\r\n\r\nexport default FXAAMaterial\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './ScreenQuad.vert'\r\nimport fragmentShader from './AO.frag'\r\nimport noise from '../noiseTexture'\r\nimport { Matrix4, RawShaderMaterial, Vector2, Vector3 } from 'three'\r\n\r\nconst _samplesKernel = [\r\n  // hemisphere samples adopted to sphere\r\n  new Vector3(0.295184, 0.077723, 0.068429),\r\n  new Vector3(-0.271976, -0.365221, 0.838363),\r\n  new Vector3(0.547713, 0.467576, 0.488515),\r\n  new Vector3(0.662808, -0.031733, 0.584758),\r\n  new Vector3(-0.025717, 0.218955, 0.657094),\r\n  new Vector3(-0.310153, -0.365223, 0.370701),\r\n  new Vector3(-0.101407, -0.006313, 0.747665),\r\n  new Vector3(-0.769138, 0.360399, 0.086847),\r\n  new Vector3(-0.271988, -0.27514, 0.905353),\r\n  new Vector3(0.09674, -0.566901, 0.700151),\r\n  new Vector3(0.562872, -0.735136, 0.094647),\r\n  new Vector3(0.379877, 0.359278, 0.190061),\r\n  new Vector3(0.519064, -0.023055, 0.405068),\r\n  new Vector3(-0.301036, 0.114696, 0.088885),\r\n  new Vector3(-0.282922, 0.598305, 0.487214),\r\n  new Vector3(-0.181859, 0.25167, 0.679702),\r\n  new Vector3(-0.191463, -0.635818, 0.512919),\r\n  new Vector3(-0.293655, 0.427423, 0.078921),\r\n  new Vector3(-0.267983, 0.680534, 0.13288),\r\n  new Vector3(0.139611, 0.319637, 0.477439),\r\n  new Vector3(-0.352086, 0.31104, 0.653913),\r\n  new Vector3(0.321032, 0.805279, 0.487345),\r\n  new Vector3(0.073516, 0.820734, 0.414183),\r\n  new Vector3(-0.155324, 0.589983, 0.41146),\r\n  new Vector3(0.335976, 0.170782, 0.527627),\r\n  new Vector3(0.46346, -0.355658, 0.167689),\r\n  new Vector3(0.222654, 0.59655, 0.769406),\r\n  new Vector3(0.922138, -0.04207, 0.147555),\r\n  new Vector3(-0.72705, -0.329192, 0.369826),\r\n  new Vector3(-0.090731, 0.53382, 0.463767),\r\n  new Vector3(-0.323457, -0.876559, 0.238524),\r\n  new Vector3(-0.663277, -0.372384, 0.342856)\r\n]\r\n\r\nclass AOMaterial extends RawShaderMaterial {\r\n  constructor() {\r\n    super()\r\n\r\n    // set default values\r\n    this.setValues({\r\n      uniforms: {\r\n        noiseTexture: { type: 't', value: noise.noiseTexture },\r\n        noiseTexelSize: {\r\n          type: 'v2',\r\n          value: new Vector2(1.0 / noise.noiseWidth, 1.0 / noise.noiseHeight)\r\n        },\r\n        diffuseTexture: { type: 't', value: null },\r\n        normalTexture: { type: 't', value: null },\r\n        depthTexture: { type: 't', value: null },\r\n        srcTexelSize: {\r\n          type: 'v2',\r\n          value: new Vector2(1.0 / 512.0, 1.0 / 512.0)\r\n        },\r\n        camNearFar: { type: 'v2', value: new Vector2(1.0, 10.0) },\r\n        projMatrix: { type: 'mat4', value: new Matrix4() },\r\n        aspectRatio: { type: 'f', value: 0.0 },\r\n        tanHalfFOV: { type: 'f', value: 0.0 },\r\n        samplesKernel: { type: 'v3v', value: _samplesKernel },\r\n        kernelRadius: { type: 'f', value: 1.0 },\r\n        depthThreshold: { type: 'f', value: 1.0 },\r\n        factor: { type: 'f', value: 1.0 }\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    })\r\n  }\r\n}\r\n\r\nexport default AOMaterial\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './ScreenQuad.vert'\r\nimport fragmentShader from './AOHorBlur.frag'\r\nimport { RawShaderMaterial, Vector2 } from 'three'\r\n\r\nconst _kernelOffsets = [-2.0, -1.0, 0.0, 1.0, 2.0]\r\n\r\nclass AOHorBlurMaterial extends RawShaderMaterial {\r\n  constructor() {\r\n    super()\r\n\r\n    // set default values\r\n    this.setValues({\r\n      uniforms: {\r\n        depthTexture: { type: 't', value: null },\r\n        srcTexelSize: {\r\n          type: 'v2',\r\n          value: new Vector2(1.0 / 512.0, 1.0 / 512.0)\r\n        },\r\n        aoMap: { type: 't', value: null },\r\n        samplesOffsets: { type: 'fv1', value: _kernelOffsets }\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    })\r\n  }\r\n}\r\n\r\nexport default AOHorBlurMaterial\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './ScreenQuad.vert'\r\nimport fragmentShader from './AOVertBlurWithBlend.frag'\r\nimport { Matrix4, RawShaderMaterial, Vector2, Vector4 } from 'three'\r\n\r\nconst _kernelOffsets = [-2.0, -1.0, 0.0, 1.0, 2.0]\r\n\r\nclass AOVertBlurWithBlendMaterial extends RawShaderMaterial {\r\n  constructor(params) {\r\n    super(params)\r\n\r\n    // set default values\r\n    this.setValues({\r\n      uniforms: {\r\n        diffuseTexture: { type: 't', value: null },\r\n        depthTexture: { type: 't', value: null },\r\n        srcTexelSize: {\r\n          type: 'v2',\r\n          value: new Vector2(1.0 / 512.0, 1.0 / 512.0)\r\n        },\r\n        aoMap: { type: 't', value: null },\r\n        samplesOffsets: { type: 'fv1', value: _kernelOffsets },\r\n        projMatrix: { type: 'mat4', value: new Matrix4() },\r\n        aspectRatio: { type: 'f', value: 0.0 },\r\n        tanHalfFOV: { type: 'f', value: 0.0 },\r\n        fogNearFar: { type: 'v2', value: new Vector2(100.0, 100.0) },\r\n        fogColor: { type: 'v4', value: new Vector4(0.0, 0.5, 0.0, 1.0) }\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    })\r\n\r\n    this.setValues(params)\r\n  }\r\n\r\n  setValues(values) {\r\n    if (typeof values === 'undefined') {\r\n      return\r\n    }\r\n\r\n    // set direct values\r\n    super.setValues(values)\r\n\r\n    const defines = {}\r\n\r\n    if (this.useFog) {\r\n      defines.USE_FOG = 1\r\n    }\r\n    if (this.fogTransparent) {\r\n      defines.FOG_TRANSPARENT = 1\r\n    }\r\n    // set dependent values\r\n    this.defines = defines\r\n  }\r\n}\r\n\r\nAOVertBlurWithBlendMaterial.prototype.useFog = true\r\nAOVertBlurWithBlendMaterial.prototype.fogTransparent = false\r\n\r\nexport default AOVertBlurWithBlendMaterial\r\n",
		"/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\n\r\nimport vertexShader from './ScreenQuad.vert'\r\nimport fragmentShader from './Anaglyph.frag'\r\nimport { RawShaderMaterial } from 'three'\r\n\r\nclass AnaglyphMaterial extends RawShaderMaterial {\r\n  constructor() {\r\n    super()\r\n    const settings = {\r\n      uniforms: {\r\n        srcL: { type: 't', value: null },\r\n        srcR: { type: 't', value: null }\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    }\r\n    this.setValues(settings)\r\n  }\r\n}\r\n\r\nexport default AnaglyphMaterial\r\n",
		"import settings from '../settings'\r\nimport { Quaternion, Vector3 } from 'three'\r\n\r\nclass View {\r\n  constructor() {\r\n    this.position = new Vector3(0, 0, 0)\r\n    this.scale = 1\r\n    this.orientation = new Quaternion(0, 0, 0, 1)\r\n  }\r\n\r\n  set(position, scale, orientation) {\r\n    this.position = position\r\n    this.scale = scale\r\n    this.orientation = orientation\r\n  }\r\n}\r\n\r\nconst _transitionTime = 1.5 // in seconds\r\n\r\nexport default class ViewInterpolator {\r\n  setup(startView, endView) {\r\n    this._startTime = undefined\r\n    this._endTime = undefined\r\n    this._isPaused = false\r\n\r\n    this._srcView = startView\r\n    this._dstView = endView\r\n    this._isMoving = false\r\n  }\r\n\r\n  isMoving() {\r\n    return this._isMoving\r\n  }\r\n\r\n  wasStarted() {\r\n    return (\r\n      typeof this._startTime !== 'undefined' &&\r\n      typeof this._endTime !== 'undefined'\r\n    )\r\n  }\r\n\r\n  start() {\r\n    this._startTime = Date.now()\r\n    const transTime = settings.now.interpolateViews ? _transitionTime * 1000 : 0\r\n    this._endTime = this._startTime + transTime\r\n    this._isMoving = true\r\n  }\r\n\r\n  getCurrentView() {\r\n    if (\r\n      typeof this._srcView === 'undefined' ||\r\n      typeof this._dstView === 'undefined' ||\r\n      !this._isMoving ||\r\n      !this.wasStarted()\r\n    ) {\r\n      return { success: false }\r\n    }\r\n\r\n    let view = this.createView()\r\n    const time = Date.now()\r\n    if (time > this._endTime) {\r\n      view = this._dstView\r\n      this.reset()\r\n      return { success: true, view }\r\n    }\r\n\r\n    const factor = (time - this._startTime) / (this._endTime - this._startTime)\r\n    view.position.copy(this._srcView.position)\r\n    view.position.lerp(this._dstView.position, factor)\r\n    view.scale =\r\n      (1 - factor) * this._srcView.scale + factor * this._dstView.scale\r\n    view.orientation.copy(this._srcView.orientation)\r\n    view.orientation.slerp(this._dstView.orientation, factor)\r\n    return { success: true, view }\r\n  }\r\n\r\n  reset() {\r\n    this._startTime = this._endTime = 0\r\n    this._isMoving = false\r\n  }\r\n\r\n  pause() {\r\n    if (!this._isPaused) {\r\n      this.setup(this.getCurrentView().view, this._dstView)\r\n      this._isPaused = true\r\n    }\r\n  }\r\n\r\n  resume() {\r\n    this._isPaused = false\r\n  }\r\n\r\n  createView() {\r\n    return new View()\r\n  }\r\n}\r\n",
		"import { merge } from 'lodash'\r\nimport makeContextDependent from './makeContextDependent'\r\n\r\nconst MAX_COOKIE_LEN = 4000\r\nconst COUNT_SUFFIX = 'Cnt'\r\n\r\nfunction _chunkString(string, chunkLen) {\r\n  const l = string.length\r\n  const chunks = []\r\n  for (let c = 0, lc = 0; lc < l; c++, lc += chunkLen) {\r\n    chunks[c] = string.slice(lc, lc + chunkLen)\r\n  }\r\n  return chunks\r\n}\r\n\r\n/**\r\n * Create new context dependent Cookie holder object.\r\n * @param context\r\n * @param {Object} opts - options\r\n * @param {string} opts.path - cookie path\r\n * @constructor\r\n */\r\nfunction Cookies(context, opts) {\r\n  this.context = context\r\n  this._opts = merge(\r\n    {\r\n      path: '/'\r\n    },\r\n    opts\r\n  )\r\n}\r\n\r\nmakeContextDependent(Cookies.prototype)\r\n\r\n/**\r\n * Remove cookie by the name.\r\n * @param key\r\n */\r\nCookies.prototype.removeCookie = function (key) {\r\n  const cntKey = this._toCount(key)\r\n  let cntVal = this._getSimpleCookie(cntKey)\r\n  if (!cntVal) {\r\n    this._removeSimpleCookie(key)\r\n    return\r\n  }\r\n  this._removeSimpleCookie(cntKey)\r\n  cntVal = parseInt(cntVal, 10)\r\n  for (let i = 0; i < cntVal; ++i) {\r\n    this._removeSimpleCookie(key + i)\r\n  }\r\n}\r\n\r\n/**\r\n * Set new cookie value. Automatically splits\r\n * values that are too large into multiple cookies.\r\n * @param key\r\n * @param value\r\n */\r\nCookies.prototype.setCookie = function (key, value) {\r\n  this.removeCookie(key)\r\n  value = encodeURIComponent(value)\r\n  const values = _chunkString(value, MAX_COOKIE_LEN - key.length - 1)\r\n  const cntVal = values.length\r\n  if (cntVal === 1) {\r\n    this._setSimpleCookie(key, value)\r\n    return\r\n  }\r\n  const cntKey = this._toCount(key)\r\n  this._setSimpleCookie(cntKey, cntVal.toString())\r\n  for (let i = 0; i < cntVal; ++i) {\r\n    this._setSimpleCookie(key + i, values[i])\r\n  }\r\n}\r\n\r\n/**\r\n * Obtain the value of a compound cookie.\r\n * @param key\r\n */\r\nCookies.prototype.getCookie = function (key) {\r\n  const cntKey = this._toCount(key)\r\n  let cntVal = this._getSimpleCookie(cntKey)\r\n  if (!cntVal) {\r\n    return this._getSimpleCookie(key)\r\n  }\r\n  cntVal = parseInt(cntVal, 10)\r\n  const value = []\r\n  for (let i = 0; i < cntVal; ++i) {\r\n    value[i] = this._getSimpleCookie(key + i)\r\n  }\r\n  return value.join('')\r\n}\r\n\r\nCookies.prototype._toCount = function (key) {\r\n  return key + COUNT_SUFFIX\r\n}\r\n\r\nCookies.prototype._removeSimpleCookie = function (key) {\r\n  document.cookie = `${key}=; expires=Thu, 01 Jan 1970 00:00:01 GMT;`\r\n}\r\n\r\nCookies.prototype._getExpirationDate = function () {\r\n  const today = new Date()\r\n  const EXP_PERIOD_YEARS = 10\r\n  today.setFullYear(today.getFullYear() + EXP_PERIOD_YEARS)\r\n  return today\r\n}\r\n\r\nCookies.prototype._setSimpleCookie = function (key, value) {\r\n  document.cookie = `${key}=${value};expires=${this._getExpirationDate().toUTCString()};path=${\r\n    this._opts.path\r\n  }`\r\n}\r\n\r\nCookies.prototype._getSimpleCookie = function (key) {\r\n  const matches = document.cookie.match(new RegExp(`(?:^|; )${key}=([^;]*)`))\r\n  return matches ? decodeURIComponent(matches[1]) : ''\r\n}\r\n\r\nCookies.prototype._exists = function (key) {\r\n  return document.cookie.match(new RegExp(`(?:^|; )${key}=([^;]*)`))\r\n}\r\n\r\nexport default Cookies\r\n",
		"/*\r\n * Toggling WebVR is done through button.click because of limitations on calling requestPresent in webVR:\r\n * VRDisplay::requestPresent should be called from user gesture:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/requestPresent\r\n */\r\nexport default function (webVRPoC) {\r\n  function showEnterVR(button) {\r\n    button.style.display = ''\r\n    button.style.cursor = 'pointer'\r\n    button.style.left = 'calc(50% - 50px)'\r\n    button.style.width = '100px'\r\n\r\n    button.textContent = 'ENTER VR'\r\n\r\n    let currentSession = null\r\n\r\n    function onSessionEnded(/* event */) {\r\n      currentSession.removeEventListener('end', onSessionEnded)\r\n      button.textContent = 'ENTER VR'\r\n      currentSession = null\r\n    }\r\n\r\n    function onSessionStarted(session) {\r\n      session.addEventListener('end', onSessionEnded)\r\n      webVRPoC._gfx.renderer.xr.setReferenceSpaceType('local')\r\n      webVRPoC._gfx.renderer.xr.setSession(session)\r\n      button.textContent = 'EXIT VR'\r\n      currentSession = session\r\n    }\r\n\r\n    button.onmouseenter = function () {\r\n      button.style.opacity = '1.0'\r\n    }\r\n    button.onmouseleave = function () {\r\n      button.style.opacity = '0.5'\r\n    }\r\n\r\n    button.onclick = function () {\r\n      if (currentSession === null) {\r\n        // WebXR's requestReferenceSpace only works if the corresponding feature\r\n        // was requested at session creation time. For simplicity, just ask for\r\n        // the interesting ones as optional features, but be aware that the\r\n        // requestReferenceSpace call will fail if it turns out to be unavailable.\r\n        // ('local' is always available for immersive sessions and doesn't need to\r\n        // be requested separately.)\r\n\r\n        const sessionInit = {\r\n          optionalFeatures: ['local-floor', 'bounded-floor']\r\n        }\r\n        navigator.xr\r\n          .requestSession('immersive-vr', sessionInit)\r\n          .then(onSessionStarted)\r\n        webVRPoC.moveSceneBehindHeadset()\r\n      } else {\r\n        currentSession.end()\r\n      }\r\n    }\r\n  }\r\n\r\n  function showWebXRNotFound(button) {\r\n    button.style.display = ''\r\n    button.style.cursor = 'auto'\r\n    button.style.left = 'calc(50% - 75px)'\r\n    button.style.width = '150px'\r\n    button.textContent = 'VR NOT FOUND'\r\n    button.onmouseenter = null\r\n    button.onmouseleave = null\r\n    button.onclick = null\r\n  }\r\n\r\n  function stylizeElement(element) {\r\n    element.style.position = 'absolute'\r\n    element.style.bottom = '20px'\r\n    element.style.padding = '12px 6px'\r\n    element.style.border = '1px solid #fff'\r\n    element.style.borderRadius = '4px'\r\n    element.style.background = 'transparent'\r\n    element.style.color = '#fff'\r\n    element.style.font = 'normal 13px sans-serif'\r\n    element.style.textAlign = 'center'\r\n    element.style.opacity = '0.5'\r\n    element.style.outline = 'none'\r\n    element.style.zIndex = '999'\r\n  }\r\n\r\n  if ('xr' in navigator) {\r\n    const button = document.createElement('button')\r\n    button.style.display = 'none'\r\n    stylizeElement(button)\r\n    navigator.xr\r\n      .isSessionSupported('immersive-vr')\r\n      .then((supported) =>\r\n        supported ? showEnterVR(button) : showWebXRNotFound(button)\r\n      )\r\n    return button\r\n  }\r\n  const message = document.createElement('a')\r\n  message.href = 'https://webvr.info'\r\n  message.innerHTML = 'WEBXR NOT SUPPORTED'\r\n  message.style.left = 'calc(50% - 90px)'\r\n  message.style.width = '180px'\r\n  message.style.textDecoration = 'none'\r\n  stylizeElement(message)\r\n  return message\r\n}\r\n",
		"import createWebVRButton from './createWebVRButton'\r\nimport gfxutils from '../gfxutils'\r\nimport logger from '../../utils/logger'\r\nimport settings from '../../settings'\r\nimport UberMaterial from '../shaders/UberMaterial'\r\nimport {\r\n  CylinderGeometry,\r\n  Mesh,\r\n  Object3D,\r\n  PerspectiveCamera,\r\n  Color\r\n} from 'three'\r\n\r\nexport default class WebVRPoC {\r\n  constructor(onToggle) {\r\n    this._mainCamera = new PerspectiveCamera()\r\n    this._button = null\r\n    this._onToggle = onToggle\r\n\r\n    this._molContainer = new gfxutils.RCGroup()\r\n    this._user = new gfxutils.RCGroup()\r\n    this._scalingPivot = new Object3D()\r\n    this._user.add(this._scalingPivot)\r\n\r\n    this._controller1 = null\r\n    this._controller2 = null\r\n    this._pressedGripsCounter = 0\r\n    this._distance = 0\r\n\r\n    this._gfx = null\r\n  }\r\n\r\n  startScalingByControllers() {\r\n    // reset scale\r\n    this._distance = this._controller1.position.distanceTo(\r\n      this._controller2.position\r\n    )\r\n    gfxutils.getMiddlePoint(\r\n      this._controller1.position,\r\n      this._controller2.position,\r\n      this._scalingPivot.position\r\n    )\r\n    this._scalingPivot.scale.set(1, 1, 1)\r\n    this._scalingPivot.updateMatrix()\r\n    this._scalingPivot.updateMatrixWorld()\r\n    // link molecule to pivot\r\n    this._scalingPivot.addSavingWorldTransform(this._molContainer)\r\n  }\r\n\r\n  stopScalingByControllers() {\r\n    this._gfx.scene.addSavingWorldTransform(this._molContainer)\r\n  }\r\n\r\n  handleGripsDown(event) {\r\n    this._pressedGripsCounter++\r\n    if (this._pressedGripsCounter === 2) {\r\n      this.startScalingByControllers()\r\n    } else if (this._pressedGripsCounter === 1) {\r\n      event.target.addSavingWorldTransform(this._molContainer)\r\n    }\r\n  }\r\n\r\n  handleGripsUp(event) {\r\n    this._pressedGripsCounter--\r\n    if (this._pressedGripsCounter === 1) {\r\n      this.stopScalingByControllers()\r\n      // reattach molecule to other controller\r\n      const anotherController =\r\n        event.target === this._controller1\r\n          ? this._controller2\r\n          : this._controller1\r\n      anotherController.addSavingWorldTransform(this._molContainer)\r\n    } else if (this._pressedGripsCounter === 0) {\r\n      this._gfx.scene.addSavingWorldTransform(this._molContainer)\r\n    }\r\n  }\r\n\r\n  enable(gfx) {\r\n    if (!gfx) {\r\n      logger.warn(\"WebVR couldn't be enabled, because gfx is not defined\")\r\n      return\r\n    }\r\n    this._gfx = gfx\r\n    const { renderer, camera } = gfx\r\n    if (!renderer) {\r\n      throw new Error('No renderer is available to toggle WebVR')\r\n    }\r\n    if (!camera) {\r\n      throw new Error('No camera is available to toggle WebVR')\r\n    }\r\n\r\n    // enable xr in renderer\r\n    renderer.xr.enabled = true\r\n    // add button for turning vr mode\r\n    if (!this._button) {\r\n      this._button = createWebVRButton(this)\r\n      document.body.appendChild(this._button)\r\n    } else {\r\n      this._button.style.display = 'block'\r\n    }\r\n    // store fog setting\r\n    this._mainFog = settings.now.fog\r\n    settings.set('fog', false)\r\n\r\n    this._plugVRNodesIntoScene(gfx, renderer)\r\n    this._setControllersListeners()\r\n\r\n    // make some Miew job\r\n    if (this._onToggle) {\r\n      this._onToggle(true)\r\n    }\r\n  }\r\n\r\n  _plugVRNodesIntoScene(gfx, renderer) {\r\n    // store common scene camera\r\n    this._mainCamera.copy(gfx.camera)\r\n    // add hierarchical structure for webVR into scene\r\n    gfx.scene.add(this._user)\r\n    // turn on webvr transformation\r\n    gfx.scene.add(this._molContainer)\r\n    this._molContainer.add(gfx.root)\r\n\r\n    this._controller1 = renderer.xr.getController(0)\r\n    this._controller2 = renderer.xr.getController(1)\r\n    const mesh = this._createControllerMesh()\r\n    this._controller1.add(mesh)\r\n    this._controller2.add(mesh.clone())\r\n    this._user.add(this._controller1)\r\n    this._user.add(this._controller2)\r\n  }\r\n\r\n  _setControllersListeners() {\r\n    this._controller1.addEventListener('selectstart', (event) => {\r\n      this.handleGripsDown(event)\r\n    })\r\n    this._controller1.addEventListener('selectend', (event) => {\r\n      this.handleGripsUp(event)\r\n    })\r\n    this._controller2.addEventListener('selectstart', (event) => {\r\n      this.handleGripsDown(event)\r\n    })\r\n    this._controller2.addEventListener('selectend', (event) => {\r\n      this.handleGripsUp(event)\r\n    })\r\n\r\n    this._controller1.addEventListener('squeezestart', (event) => {\r\n      this.handleGripsDown(event)\r\n    })\r\n    this._controller1.addEventListener('squeezeend', (event) => {\r\n      this.handleGripsUp(event)\r\n    })\r\n    this._controller2.addEventListener('squeezestart', (event) => {\r\n      this.handleGripsDown(event)\r\n    })\r\n    this._controller2.addEventListener('squeezeend', (event) => {\r\n      this.handleGripsUp(event)\r\n    })\r\n  }\r\n\r\n  disable() {\r\n    if (!this._gfx) {\r\n      return\r\n    }\r\n    const { renderer, camera } = this._gfx\r\n    if (!renderer) {\r\n      throw new Error('No renderer is available to toggle WebVR')\r\n    }\r\n\r\n    // nullify webxr callback for animation frame\r\n    renderer.setAnimationLoop(null)\r\n    const session = renderer.xr.getSession()\r\n    if (session) {\r\n      session.end()\r\n    }\r\n    renderer.xr.enabled = false\r\n    // remove button of VR entering\r\n    if (this._button) {\r\n      this._button.style.display = 'none'\r\n    }\r\n    // restore fog param\r\n    settings.set('fog', this._mainFog)\r\n\r\n    this._unplugVRNodesFromScene(camera)\r\n\r\n    // make some Miew job\r\n    if (this._onToggle) {\r\n      this._onToggle(false)\r\n    }\r\n  }\r\n\r\n  _unplugVRNodesFromScene(camera) {\r\n    // restore common camera\r\n    if (this._mainCamera && camera) {\r\n      camera.copy(this._mainCamera)\r\n    }\r\n    // turn off webvr transformation\r\n    const root = this._molContainer.children[0]\r\n    if (root) {\r\n      this._gfx.scene.add(root)\r\n    }\r\n    this._molContainer.parent.remove(this._molContainer)\r\n    if (this._user) {\r\n      this._gfx.scene.remove(this._user)\r\n    }\r\n    // free scene nodes\r\n    this._molContainer = null\r\n    this._user = null\r\n    this._scalingPivot = null\r\n    this._user = null\r\n    this._controller1 = null\r\n    this._controller2 = null\r\n  }\r\n\r\n  _createControllerMesh() {\r\n    // visualize controllers with cylinders\r\n    const geometry = new CylinderGeometry(0.04, 0.04, 0.3)\r\n    const material = new UberMaterial()\r\n    material.setValues({ lights: false, overrideColor: true })\r\n    material.setUberOptions({ fixedColor: new Color(0x4444ff) })\r\n    material.updateUniforms()\r\n    const cylinder = new Mesh(geometry, material)\r\n    cylinder.rotateX(-Math.PI / 2)\r\n    return cylinder\r\n  }\r\n\r\n  updateMoleculeScale() {\r\n    if (!this._controller1 || !this._controller2) {\r\n      return\r\n    }\r\n\r\n    const self = this\r\n    // update molecule scaling by controllers\r\n    if (self._pressedGripsCounter === 2) {\r\n      // recalc scaling pivot\r\n      gfxutils.getMiddlePoint(\r\n        self._controller1.position,\r\n        self._controller2.position,\r\n        self._scalingPivot.position\r\n      )\r\n      // recalc scaler\r\n      const dist = self._controller1.position.distanceTo(\r\n        self._controller2.position\r\n      )\r\n      const scaler = dist / self._distance\r\n      self._scalingPivot.scale.multiplyScalar(scaler)\r\n      // save cur distance for next frame\r\n      self._distance = dist\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reposition molecule right before the camera.\r\n   * @note The proper way is to initiate headset in the place of common Miew's camera.\r\n   * But threejs limitations on setting new XRReferenceSpace enforce the molecule repositioning\r\n   * Hope, something will change.\r\n   */\r\n  moveSceneBehindHeadset() {\r\n    const gfx = this._gfx\r\n    const { camera } = gfx\r\n\r\n    // set container position in camera space\r\n    const container = this._molContainer\r\n    container.matrix.identity()\r\n    container.position.set(0, 0, -4.0)\r\n    container.updateMatrix()\r\n\r\n    // update container world matrix\r\n    container.matrixWorld.multiplyMatrices(camera.matrixWorld, container.matrix)\r\n    // readd to scene\r\n    gfx.scene.addSavingWorldTransform(container)\r\n    if (this._onToggle) {\r\n      this._onToggle(true)\r\n    }\r\n  }\r\n\r\n  getCanvas() {\r\n    const gfx = this._gfx\r\n    return gfx && gfx.renderer ? gfx.renderer.domElement : null\r\n  }\r\n}\r\n",
		"// eslint-disable-next-line\r\n//@ts-nocheck\r\nimport { Spinner } from 'spin.js'\r\nimport Stats from './gfx/Stats'\r\nimport utils from './utils'\r\nimport JobHandle from './utils/JobHandle'\r\nimport options from './options'\r\nimport settings from './settings'\r\nimport chem from './chem'\r\nimport Visual from './Visual'\r\nimport ComplexVisual from './ComplexVisual'\r\nimport Complex from './chem/Complex'\r\nimport VolumeVisual from './VolumeVisual'\r\nimport io from './io/io'\r\nimport modes from './gfx/modes'\r\nimport colorers from './gfx/colorers'\r\nimport palettes from './gfx/palettes'\r\nimport materials from './gfx/materials'\r\nimport Representation from './gfx/Representation'\r\nimport CSS2DRenderer from './gfx/CSS2DRenderer'\r\nimport ObjectControls from './ui/ObjectControls'\r\nimport Picker from './ui/Picker'\r\nimport Axes from './gfx/Axes'\r\nimport gfxutils from './gfx/gfxutils'\r\nimport meshutils from './gfx/meshutils'\r\nimport FrameInfo from './gfx/FrameInfo'\r\nimport meshes from './gfx/meshes/meshes'\r\nimport LinesObject from './gfx/objects/LinesObj'\r\nimport UberMaterial from './gfx/shaders/UberMaterial'\r\nimport OutlineMaterial from './gfx/shaders/OutlineMaterial'\r\nimport FXAAMaterial from './gfx/shaders/FXAAMaterial'\r\nimport AOMaterial from './gfx/shaders/AOMaterial'\r\nimport AOHorBlurMaterial from './gfx/shaders/AOHorBlurMaterial'\r\nimport AOVertBlurWithBlendMaterial from './gfx/shaders/AOVertBlurWithBlendMaterial'\r\nimport AnaglyphMaterial from './gfx/shaders/AnaglyphMaterial'\r\nimport VolumeMaterial from './gfx/shaders/VolumeMaterial'\r\nimport ViewInterpolator from './gfx/ViewInterpolator'\r\nimport EventDispatcher from './utils/EventDispatcher'\r\nimport logger from './utils/logger'\r\nimport Cookies from './utils/Cookies'\r\nimport capabilities from './gfx/capabilities'\r\nimport WebVRPoC from './gfx/vr/WebVRPoC'\r\nimport './Miew.scss'\r\nimport vertexScreenQuadShader from './gfx/shaders/ScreenQuad.vert'\r\nimport fragmentScreenQuadFromDistTex from './gfx/shaders/ScreenQuadFromDistortionTex.frag'\r\nimport {\r\n  AmbientLight,\r\n  Box3,\r\n  DepthTexture,\r\n  DirectionalLight,\r\n  FloatType,\r\n  Fog,\r\n  Group,\r\n  Line,\r\n  LinearFilter,\r\n  LineSegments,\r\n  Matrix4,\r\n  Mesh,\r\n  NearestFilter,\r\n  PCFShadowMap,\r\n  PerspectiveCamera,\r\n  RGBAFormat,\r\n  Scene,\r\n  Sphere,\r\n  StereoCamera,\r\n  UnsignedShortType,\r\n  Vector2,\r\n  Vector3,\r\n  WebGL1Renderer,\r\n  WebGLRenderTarget,\r\n  Color,\r\n  Euler,\r\n  Vector4,\r\n  Quaternion,\r\n  MathUtils,\r\n  NoBlending,\r\n  RawShaderMaterial,\r\n  OrthographicCamera\r\n} from 'three'\r\nimport {\r\n  assign,\r\n  merge,\r\n  isString,\r\n  head,\r\n  defaults,\r\n  isUndefined,\r\n  isNumber,\r\n  get,\r\n  isArray,\r\n  isEmpty\r\n} from 'lodash'\r\n\r\nconst { selectors, Atom, Residue, Chain, Molecule } = chem\r\n\r\nconst EDIT_MODE = { COMPLEX: 0, COMPONENT: 1, FRAGMENT: 2 }\r\n\r\nconst LOADER_NOT_FOUND = 'Could not find suitable loader for this source'\r\nconst PARSER_NOT_FOUND = 'Could not find suitable parser for this source'\r\n\r\nconst { createElement } = utils\r\n\r\nfunction updateFogRange(fog, center, radius) {\r\n  fog.near = center - radius * settings.now.fogNearFactor\r\n  fog.far = center + radius * settings.now.fogFarFactor\r\n}\r\n\r\nfunction removeExtension(fileName) {\r\n  const dot = fileName.lastIndexOf('.')\r\n  if (dot >= 0) {\r\n    fileName = fileName.substr(0, dot)\r\n  }\r\n  return fileName\r\n}\r\n\r\nfunction hasValidResidues(complex) {\r\n  let hasValidRes = false\r\n  complex.forEachComponent((component) => {\r\n    component.forEachResidue((residue) => {\r\n      if (residue._isValid) {\r\n        hasValidRes = true\r\n      }\r\n    })\r\n  })\r\n  return hasValidRes\r\n}\r\n\r\nfunction reportProgress(log, action, percent) {\r\n  const TOTAL_PERCENT = 100\r\n  if (percent !== undefined) {\r\n    log.debug(`${action}... ${Math.floor(percent * TOTAL_PERCENT)}%`)\r\n  } else {\r\n    log.debug(`${action}...`)\r\n  }\r\n}\r\n\r\nfunction chooseFogColor() {\r\n  return settings.now.fogColorEnable\r\n    ? settings.now.fogColor\r\n    : settings.now.bg.color\r\n}\r\n\r\n/**\r\n * Replace viewer container contents with a DOM element.\r\n * @param {HTMLElement} container - parent container.\r\n * @param {HTMLElement} element - DOM element to show.\r\n * @private\r\n */\r\nfunction _setContainerContents(container, element) {\r\n  const parent = container\r\n  while (parent.firstChild) {\r\n    parent.removeChild(parent.firstChild)\r\n  }\r\n  parent.appendChild(element)\r\n}\r\n\r\nfunction arezSpritesSupported(context) {\r\n  return context.getExtension('EXT_frag_depth')\r\n}\r\n\r\nfunction isAOSupported(context) {\r\n  return (\r\n    context.getExtension('WEBGL_depth_texture') &&\r\n    context.getExtension('WEBGL_draw_buffers')\r\n  )\r\n}\r\n\r\nconst rePdbId = /^(?:(pdb|cif|mmtf|ccp4|dsn6):\\s*)?(\\d[a-z\\d]{3})$/i\r\nconst rePubchem = /^(?:pc|pubchem):\\s*([a-z]+)$/i\r\nconst reUrlScheme = /^([a-z][a-z\\d\\-+.]*):/i\r\n\r\nfunction resolveSourceShortcut(source, opts) {\r\n  if (!isString(source)) {\r\n    return source\r\n  }\r\n\r\n  // e.g. \"mmtf:1CRN\"\r\n  const matchesPdbId = rePdbId.exec(source)\r\n  if (matchesPdbId) {\r\n    let [, format = 'pdb', id] = matchesPdbId\r\n\r\n    format = format.toLowerCase()\r\n    id = id.toUpperCase()\r\n\r\n    switch (format) {\r\n      case 'pdb':\r\n        source = `https://files.rcsb.org/download/${id}.pdb`\r\n        break\r\n      case 'cif':\r\n        source = `https://files.rcsb.org/download/${id}.cif`\r\n        break\r\n      case 'mmtf':\r\n        source = `https://mmtf.rcsb.org/v1.0/full/${id}`\r\n        break\r\n      case 'ccp4':\r\n        source = `https://www.ebi.ac.uk/pdbe/coordinates/files/${id.toLowerCase()}.ccp4`\r\n        break\r\n      case 'dsn6':\r\n        source = `https://edmaps.rcsb.org/maps/${id.toLowerCase()}_2fofc.dsn6`\r\n        break\r\n      default:\r\n        throw new Error('Unexpected data format shortcut')\r\n    }\r\n\r\n    opts.fileType = format\r\n    opts.fileName = `${id}.${format}`\r\n    opts.sourceType = 'url'\r\n    return source\r\n  }\r\n\r\n  // e.g. \"pc:aspirin\"\r\n  const matchesPubchem = rePubchem.exec(source)\r\n  if (matchesPubchem) {\r\n    const compound = matchesPubchem[1].toLowerCase()\r\n    source = `https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/name/${compound}/JSON?record_type=3d`\r\n    opts.fileType = 'pubchem'\r\n    opts.fileName = `${compound}.json`\r\n    opts.sourceType = 'url'\r\n    return source\r\n  }\r\n\r\n  // otherwise is should be an URL\r\n  if (opts.sourceType === 'url' || opts.sourceType === undefined) {\r\n    opts.sourceType = 'url'\r\n\r\n    // e.g. \"./data/1CRN.pdb\"\r\n    if (!reUrlScheme.test(source)) {\r\n      source = utils.resolveURL(source)\r\n    }\r\n  }\r\n\r\n  return source\r\n}\r\n\r\nfunction updateBinaryMode(opts) {\r\n  let { binary } = opts\r\n\r\n  // detect by format\r\n  if (opts.fileType !== undefined) {\r\n    const TheParser = head(io.parsers.find({ format: opts.fileType }))\r\n    if (TheParser) {\r\n      binary = TheParser.binary || false\r\n    } else {\r\n      throw new Error('Could not find suitable parser for this format')\r\n    }\r\n  }\r\n\r\n  // detect by file extension\r\n  if (binary === undefined && opts.fileExt !== undefined) {\r\n    const TheParser = head(io.parsers.find({ ext: opts.fileExt }))\r\n    if (TheParser) {\r\n      binary = TheParser.binary || false\r\n    }\r\n  }\r\n\r\n  // temporary workaround for animation\r\n  if (opts.fileExt !== undefined && opts.fileExt.toLowerCase() === '.man') {\r\n    opts.binary = true\r\n    opts.animation = true // who cares?\r\n  }\r\n\r\n  // update if detected\r\n  if (binary !== undefined) {\r\n    if (opts.binary !== undefined && opts.binary !== binary) {\r\n      opts.context.logger.warn('Overriding incorrect binary mode')\r\n    }\r\n  }\r\n\r\n  opts.binary = binary || false\r\n}\r\n\r\nfunction _fetchData(source, opts, job) {\r\n  return new Promise((resolve) => {\r\n    if (job.shouldCancel()) {\r\n      throw new Error('Operation cancelled')\r\n    }\r\n    job.notify({ type: 'fetching' })\r\n\r\n    // allow for source shortcuts\r\n    source = resolveSourceShortcut(source, opts)\r\n\r\n    // detect a proper loader\r\n    const TheLoader = head(io.loaders.find({ type: opts.sourceType, source }))\r\n    if (!TheLoader) {\r\n      throw new Error(LOADER_NOT_FOUND)\r\n    }\r\n\r\n    // split file name\r\n    const fileName = opts.fileName || TheLoader.extractName(source)\r\n    if (fileName) {\r\n      const [name, fileExt] = utils.splitFileName(fileName)\r\n      defaults(opts, { name, fileExt, fileName })\r\n    }\r\n\r\n    // should it be text or binary?\r\n    updateBinaryMode(opts)\r\n\r\n    // FIXME: All new settings retrieved from server are applied after the loading is complete. However, we need some\r\n    // flags to alter the loading process itself. Here we apply them in advance. Dirty hack. Kill the server, remove\r\n    // all hacks and everybody's happy.\r\n    let newOptions = get(opts, 'preset.expression')\r\n    if (!isUndefined(newOptions)) {\r\n      newOptions = JSON.parse(newOptions)\r\n      if (newOptions && newOptions.settings) {\r\n        const keys = ['singleUnit']\r\n        for (\r\n          let keyIndex = 0, keyCount = keys.length;\r\n          keyIndex < keyCount;\r\n          ++keyIndex\r\n        ) {\r\n          const key = keys[keyIndex]\r\n          const value = get(newOptions.settings, key)\r\n          if (!isUndefined(value)) {\r\n            settings.set(key, value)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // create a loader\r\n    const loader = new TheLoader(source, opts)\r\n    loader.context = opts.context\r\n    job.addEventListener('cancel', () => loader.abort())\r\n\r\n    loader.addEventListener('progress', (event) => {\r\n      if (event.lengthComputable && event.total > 0) {\r\n        reportProgress(loader.logger, 'Fetching', event.loaded / event.total)\r\n      } else {\r\n        reportProgress(loader.logger, 'Fetching')\r\n      }\r\n    })\r\n\r\n    console.time('fetch')\r\n    const promise = loader\r\n      .load()\r\n      .then((data) => {\r\n        console.timeEnd('fetch')\r\n        opts.context.logger.info('Fetching finished')\r\n        job.notify({ type: 'fetchingDone', data })\r\n        return data\r\n      })\r\n      .catch((error) => {\r\n        console.timeEnd('fetch')\r\n        opts.context.logger.debug(error.message)\r\n        if (error.stack) {\r\n          opts.context.logger.debug(error.stack)\r\n        }\r\n        opts.context.logger.error('Fetching failed')\r\n        job.notify({ type: 'fetchingDone', error })\r\n        throw error\r\n      })\r\n    resolve(promise)\r\n  })\r\n}\r\n\r\nfunction _parseData(data, opts, job) {\r\n  if (job.shouldCancel()) {\r\n    return Promise.reject(new Error('Operation cancelled'))\r\n  }\r\n\r\n  job.notify({ type: 'parsing' })\r\n\r\n  const TheParser = head(\r\n    io.parsers.find({ format: opts.fileType, ext: opts.fileExt, data })\r\n  )\r\n  if (!TheParser) {\r\n    return Promise.reject(new Error('Could not find suitable parser'))\r\n  }\r\n\r\n  const parser = new TheParser(data, opts)\r\n  parser.context = opts.context\r\n  job.addEventListener('cancel', () => parser.abort())\r\n\r\n  console.time('parse')\r\n  return parser\r\n    .parse()\r\n    .then((dataSet) => {\r\n      console.timeEnd('parse')\r\n      job.notify({ type: 'parsingDone', data: dataSet })\r\n      return dataSet\r\n    })\r\n    .catch((error) => {\r\n      console.timeEnd('parse')\r\n      opts.error = error\r\n      opts.context.logger.debug(error.message)\r\n      if (error.stack) {\r\n        opts.context.logger.debug(error.stack)\r\n      }\r\n      opts.context.logger.error('Parsing failed')\r\n      job.notify({ type: 'parsingDone', error })\r\n      throw error\r\n    })\r\n}\r\n\r\nfunction _includesInCurSelection(atom, selectionBit) {\r\n  return atom.mask & (1 << selectionBit)\r\n}\r\n\r\nfunction _includesInSelector(atom, selector) {\r\n  return selector.selector.includesAtom(atom)\r\n}\r\n\r\n// ////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Main 3D Molecular Viewer class.\r\n *\r\n * @param {object} opts - Viewer options.\r\n * @param {HTMLElement=} opts.container - DOM element that serves as a viewer container.\r\n * @param {object=} opts.settings - An object with properties to override default settings.\r\n * @param {string=} opts.settingsCookie='settings' - The name of the cookie to save current settings to.\r\n * @param {string=} opts.cookiePath='/' - The path option for cookies. Defaults to root.\r\n *\r\n * @exports Miew\r\n * @constructor\r\n */\r\n\r\nexport interface MiewOptions {\r\n  container?: HTMLDivElement | null\r\n  settingsCookie?: string\r\n  cookiePath?: string\r\n  load?: string\r\n  settings?: {\r\n    palette?: string\r\n    shadow?: object\r\n    ao?: boolean\r\n    aromatic?: boolean\r\n    autobuild?: boolean\r\n    autoRotation?: number\r\n    autoRotationAxisFixed?: boolean\r\n    axes?: boolean\r\n    colorers?: object\r\n    editing?: boolean\r\n    fbxprec?: number\r\n    fox?: boolean\r\n    fogFarFactor?: number\r\n    fogNearFactor?: number\r\n    fps?: boolean\r\n    fxaa?: boolean\r\n    interpolateViews?: boolean\r\n    maxfps?: number\r\n    modes?: object\r\n    outline?: boolean\r\n    pick?: string\r\n    picking?: boolean\r\n    singleUnit?: boolean\r\n    stereo?: string\r\n    suspendRender?: boolean\r\n    translationSpeed?: number\r\n    transparency?: string\r\n    zooming?: boolean\r\n    zSprite?: boolean\r\n  }\r\n}\r\n\r\nexport class Miew extends EventDispatcher {\r\n  constructor(opts: MiewOptions) {\r\n    super()\r\n    this._opts = merge(\r\n      {\r\n        settingsCookie: 'settings',\r\n        cookiePath: '/'\r\n      },\r\n      opts\r\n    )\r\n    /** @type {?object} */\r\n    this._gfx = null\r\n    /** @type {ViewInterpolator} */\r\n    this._interpolator = new ViewInterpolator()\r\n    /** @type {HTMLElement} */\r\n    this._container =\r\n      (opts && opts.container) ||\r\n      document.getElementById('miew-container') ||\r\n      head(document.getElementsByClassName('miew-container')) ||\r\n      document.body\r\n    /** @type {HTMLElement} */\r\n    this._containerRoot = this._container\r\n\r\n    /** @type {boolean} */\r\n    this._running = false\r\n    /** @type {boolean} */\r\n    this._halting = false\r\n    /** @type {boolean} */\r\n    this._building = false\r\n    /** @type {boolean} */\r\n    this._needRender = true\r\n    /** @type {boolean} */\r\n    this._hotKeysEnabled = true\r\n\r\n    /** @type {Settings} */\r\n    this.settings = settings\r\n    const log = logger\r\n    log.console = DEBUG\r\n    log.level = DEBUG ? 'debug' : 'info'\r\n    /**\r\n     * @type {Logger}\r\n     * @example\r\n     * miew.logger.addEventListener('message', function _onLogMessage(evt) {\r\n     *   console.log(evt.message);\r\n     * });\r\n     */\r\n    this.logger = log\r\n\r\n    this._cookies = new Cookies(this)\r\n    this.restoreSettings()\r\n    if (opts && opts.settings) {\r\n      this.settings.set(opts.settings)\r\n    }\r\n\r\n    /** @type {?Spinner} */\r\n    this._spinner = null\r\n    /** @type {JobHandle[]} */\r\n    this._loading = []\r\n    /** @type {?number}\r\n     * @deprecated until Animation system refactoring\r\n     */\r\n    this._animInterval = null\r\n\r\n    /** @type {object} */\r\n    this._visuals = {}\r\n    /** @type {?string} */\r\n    this._curVisualName = null\r\n\r\n    /** @type {array} */\r\n    this._objects = []\r\n\r\n    /** @type {object} */\r\n    this._sourceWindow = null\r\n\r\n    this.reset()\r\n\r\n    if (this._repr) {\r\n      log.debug(\r\n        `Selected ${this._repr.mode.name} mode with ${this._repr.colorer.name} colorer.`\r\n      )\r\n    }\r\n\r\n    const self = this\r\n    Miew.registeredPlugins.forEach((plugin) => {\r\n      plugin.call(self)\r\n    })\r\n\r\n    this._initOnSettingsChanged()\r\n    this.shadowMatrix = new Matrix4()\r\n    this.direction = new Vector3()\r\n    this.OBB = { center: new Vector3(), halfSize: new Vector3() }\r\n    this._bSphereForOneVisual = new Sphere()\r\n    this._bBoxForOneVisual = new Box3()\r\n    this._bBox = new Box3()\r\n    this._invMatrix = new Matrix4()\r\n    this._points = [new Vector3(), new Vector3(), new Vector3(), new Vector3()]\r\n    this._anaglyphMat = new AnaglyphMaterial()\r\n    this._size = new Vector2()\r\n    this._scene = new Scene()\r\n    this._camera = new OrthographicCamera(-1.0, 1.0, 1.0, -1.0, -500, 1000)\r\n    this._material = new RawShaderMaterial({\r\n      uniforms: {\r\n        srcTex: { type: 't', value: null },\r\n        aberration: { type: 'fv3', value: new Vector3(1.0) }\r\n      },\r\n      vertexShader: vertexScreenQuadShader,\r\n      fragmentShader: fragmentScreenQuadFromDistTex,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    })\r\n    this._geo = gfxutils.buildDistorionMesh(\r\n      10,\r\n      10,\r\n      settings.now.debug.stereoBarrel\r\n    )\r\n    this._outlineMaterial = new OutlineMaterial({ depth: true })\r\n    this.pars = {\r\n      minFilter: NearestFilter,\r\n      magFilter: NearestFilter,\r\n      format: RGBAFormat\r\n    }\r\n    this.VERSION =\r\n      (typeof PACKAGE_VERSION !== 'undefined' && PACKAGE_VERSION) || '0.0.0-dev'\r\n    // Uncomment this to get debug trace:\r\n    // this.debugTracer = new utils.DebugTracer(Miew);\r\n  }\r\n\r\n  getMaxRepresentationCount() {\r\n    return ComplexVisual.NUM_REPRESENTATION_BITS\r\n  }\r\n\r\n  /**\r\n   * Update Shadow Camera target position and frustum.\r\n   * @private\r\n   */\r\n  _updateShadowCamera() {\r\n    this._gfx.scene.updateMatrixWorld()\r\n    for (let i = 0; i < this._gfx.scene.children.length; i++) {\r\n      if (this._gfx.scene.children[i].type === 'DirectionalLight') {\r\n        const light = this._gfx.scene.children[i]\r\n        this.shadowMatrix.copy(light.shadow.camera.matrixWorldInverse)\r\n        this.getOBB(this.shadowMatrix, this.OBB)\r\n\r\n        this.direction.subVectors(light.target.position, light.position)\r\n        light.position.subVectors(this.OBB.center, this.direction)\r\n        light.target.position.copy(this.OBB.center)\r\n\r\n        light.shadow.bias = 0.09\r\n        light.shadow.camera.bottom = -this.OBB.halfSize.y\r\n        light.shadow.camera.top = this.OBB.halfSize.y\r\n        light.shadow.camera.right = this.OBB.halfSize.x\r\n        light.shadow.camera.left = -this.OBB.halfSize.x\r\n        light.shadow.camera.near = this.direction.length() - this.OBB.halfSize.z\r\n        light.shadow.camera.far = this.direction.length() + this.OBB.halfSize.z\r\n\r\n        light.shadow.camera.updateProjectionMatrix()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the viewer.\r\n   * @returns {boolean} true on success.\r\n   * @throws Forwards exception raised during initialization.\r\n   * @see Miew#term\r\n   */\r\n  init() {\r\n    const container = this._container\r\n    const elem = utils.createElement('div', { class: 'miew-canvas' })\r\n    _setContainerContents(container, elem)\r\n    this._container = elem\r\n\r\n    const frag = document.createDocumentFragment()\r\n    frag.appendChild(\r\n      (this._msgMode = createElement(\r\n        'div',\r\n        { class: 'mode-message overlay' },\r\n        createElement('p', {}, 'COMPONENT EDIT MODE')\r\n      ))\r\n    )\r\n    frag.appendChild(\r\n      (this._msgAtomInfo = createElement(\r\n        'div',\r\n        { class: 'atom-info overlay' },\r\n        createElement('p', {}, '')\r\n      ))\r\n    )\r\n    container.appendChild(frag)\r\n\r\n    if (this._gfx !== null) {\r\n      // block double init\r\n      return true\r\n    }\r\n\r\n    const self = this\r\n    this._showMessage('Viewer is being initialized...')\r\n    try {\r\n      this._initGfx()\r\n\r\n      this._initListeners()\r\n      this._spinner = new Spinner({\r\n        lines: 13,\r\n        length: 28,\r\n        width: 14,\r\n        radius: 42,\r\n        color: '#fff',\r\n        zIndex: 700\r\n      })\r\n\r\n      window.addEventListener('keydown', (event) => {\r\n        self._onKeyDown(event)\r\n      })\r\n\r\n      window.addEventListener('keyup', (event) => {\r\n        self._onKeyUp(event)\r\n      })\r\n\r\n      this._objectControls = new ObjectControls(\r\n        this._gfx.root,\r\n        this._gfx.pivot,\r\n        this._gfx.camera,\r\n        this._gfx.renderer.domElement,\r\n        () => self._getAltObj()\r\n      )\r\n      this._objectControls.addEventListener('change', (e) => {\r\n        if (settings.now.shadow.on) {\r\n          self._updateShadowCamera()\r\n        }\r\n        // route rotate, zoom, translate and translatePivot events to the external API\r\n        switch (e.action) {\r\n          case 'rotate':\r\n            self.dispatchEvent({ type: 'rotate', quaternion: e.quaternion })\r\n            break\r\n          case 'zoom':\r\n            self.dispatchEvent({ type: 'zoom', factor: e.factor })\r\n            break\r\n          default:\r\n            self.dispatchEvent({ type: e.action })\r\n        }\r\n        self.dispatchEvent({ type: 'transform' })\r\n        self._needRender = true\r\n      })\r\n\r\n      const gfx = this._gfx\r\n      this._picker = new Picker(gfx.root, gfx.camera, gfx.renderer.domElement)\r\n      this._picker.addEventListener('newpick', (event) => {\r\n        self._onPick(event)\r\n      })\r\n      this._picker.addEventListener('dblclick', (event) => {\r\n        self.center(event)\r\n      })\r\n    } catch (error) {\r\n      if (\r\n        error.name === 'TypeError' &&\r\n        error.message === \"Cannot read property 'getExtension' of null\"\r\n      ) {\r\n        this._showMessage('Could not create WebGL context.')\r\n      } else if (error.message.search(/webgl/i) > 1) {\r\n        this._showMessage(error.message)\r\n      } else {\r\n        this._showMessage('Viewer initialization failed.')\r\n        throw error\r\n      }\r\n      return false\r\n    }\r\n\r\n    // automatically load default file\r\n    const file = this._opts && this._opts.load\r\n    if (file) {\r\n      const type = this._opts && this._opts.type\r\n      this.load(file, { fileType: type, keepRepsInfo: true })\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Terminate the viewer completely.\r\n   * @see Miew#init\r\n   */\r\n  term() {\r\n    this._showMessage('Viewer has been terminated.')\r\n    this._loading.forEach((job) => {\r\n      job.cancel()\r\n    })\r\n    this._loading.length = 0\r\n    this.halt()\r\n    this._gfx = null\r\n  }\r\n\r\n  /**\r\n   * Display message inside the viewer container, hiding WebGL canvas.\r\n   * @param {string} msg - Message to show.\r\n   * @private\r\n   */\r\n  _showMessage(msg) {\r\n    const element = document.createElement('div')\r\n    element.setAttribute('class', 'miew-message')\r\n    element\r\n      .appendChild(document.createElement('p'))\r\n      .appendChild(document.createTextNode(msg))\r\n    _setContainerContents(this._container, element)\r\n  }\r\n\r\n  /**\r\n   * Display WebGL canvas inside the viewer container, hiding any message shown.\r\n   * @private\r\n   */\r\n  _showCanvas() {\r\n    _setContainerContents(this._container, this._gfx.renderer.domElement)\r\n  }\r\n\r\n  _requestAnimationFrame(callback) {\r\n    const { xr } = this._gfx.renderer\r\n    if (xr && xr.enabled) {\r\n      this._gfx.renderer.setAnimationLoop(callback)\r\n      return\r\n    }\r\n    requestAnimationFrame(callback)\r\n  }\r\n\r\n  /**\r\n   * Initialize WebGL and set 3D scene up.\r\n   * @private\r\n   */\r\n  _initGfx() {\r\n    const gfx = {\r\n      width: this._container.clientWidth,\r\n      height: this._container.clientHeight\r\n    }\r\n\r\n    const webGLOptions = {\r\n      preserveDrawingBuffer: true,\r\n      alpha: true,\r\n      premultipliedAlpha: false\r\n    }\r\n    if (settings.now.antialias) {\r\n      webGLOptions.antialias = true\r\n    }\r\n\r\n    gfx.renderer2d = new CSS2DRenderer()\r\n\r\n    gfx.renderer = new WebGL1Renderer(webGLOptions)\r\n    gfx.renderer.shadowMap.enabled = settings.now.shadow.on\r\n    gfx.renderer.shadowMap.autoUpdate = false\r\n    gfx.renderer.shadowMap.type = PCFShadowMap\r\n    capabilities.init(gfx.renderer)\r\n\r\n    // z-sprites and ambient occlusion possibility\r\n    if (!arezSpritesSupported(gfx.renderer.getContext())) {\r\n      settings.set('zSprites', false)\r\n    }\r\n    if (!isAOSupported(gfx.renderer.getContext())) {\r\n      settings.set('ao', false)\r\n    }\r\n\r\n    gfx.renderer.autoClear = false\r\n    gfx.renderer.setPixelRatio(window.devicePixelRatio)\r\n    gfx.renderer.setSize(gfx.width, gfx.height)\r\n    gfx.renderer.setClearColor(\r\n      settings.now.bg.color,\r\n      Number(!settings.now.bg.transparent)\r\n    )\r\n    gfx.renderer.clearColor()\r\n\r\n    gfx.renderer2d.setSize(gfx.width, gfx.height)\r\n\r\n    gfx.camera = new PerspectiveCamera(\r\n      settings.now.camFov,\r\n      gfx.width / gfx.height,\r\n      settings.now.camNear,\r\n      settings.now.camFar\r\n    )\r\n    gfx.camera.setMinimalFov(settings.now.camFov)\r\n    gfx.camera.position.z = settings.now.camDistance\r\n    gfx.camera.updateProjectionMatrix()\r\n    gfx.camera.layers.set(gfxutils.LAYERS.DEFAULT)\r\n    gfx.camera.layers.enable(gfxutils.LAYERS.VOLUME)\r\n    gfx.camera.layers.enable(gfxutils.LAYERS.VOLUME_BFPLANE)\r\n\r\n    gfx.stereoCam = new StereoCamera()\r\n\r\n    gfx.scene = new Scene()\r\n\r\n    const color = chooseFogColor()\r\n    gfx.scene.fog = new Fog(color, settings.now.camNear, settings.now.camFar)\r\n\r\n    gfx.root = new gfxutils.RCGroup()\r\n    gfx.scene.add(gfx.root)\r\n\r\n    gfx.pivot = new gfxutils.RCGroup()\r\n    gfx.root.add(gfx.pivot)\r\n\r\n    gfx.selectionScene = new Scene()\r\n    gfx.selectionRoot = new Group()\r\n    gfx.selectionRoot.matrixAutoUpdate = false\r\n    gfx.selectionScene.add(gfx.selectionRoot)\r\n\r\n    gfx.selectionPivot = new Group()\r\n    gfx.selectionPivot.matrixAutoUpdate = false\r\n    gfx.selectionRoot.add(gfx.selectionPivot)\r\n\r\n    const light12 = new DirectionalLight(0xffffff, 0.45)\r\n    light12.position.set(0, 0.414, 1)\r\n    light12.layers.enable(gfxutils.LAYERS.TRANSPARENT)\r\n    light12.castShadow = true\r\n    light12.shadow.bias = 0.09\r\n    light12.shadow.radius = settings.now.shadow.radius\r\n    light12.shadow.camera.layers.set(gfxutils.LAYERS.SHADOWMAP)\r\n\r\n    const pixelRatio = gfx.renderer.getPixelRatio()\r\n    const shadowMapSize = Math.max(gfx.width, gfx.height) * pixelRatio\r\n    light12.shadow.mapSize.width = shadowMapSize\r\n    light12.shadow.mapSize.height = shadowMapSize\r\n    light12.target.position.set(0.0, 0.0, 0.0)\r\n    gfx.scene.add(light12)\r\n    gfx.scene.add(light12.target)\r\n\r\n    const light3 = new AmbientLight(0x666666)\r\n    light3.layers.enable(gfxutils.LAYERS.TRANSPARENT)\r\n    gfx.scene.add(light3)\r\n\r\n    // add axes\r\n    gfx.axes = new Axes(gfx.root, gfx.camera)\r\n    const deviceWidth = gfx.width * pixelRatio\r\n    const deviceHeight = gfx.height * pixelRatio\r\n\r\n    gfx.offscreenBuf = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: NearestFilter,\r\n      format: RGBAFormat,\r\n      depthBuffer: true\r\n    })\r\n\r\n    if (gfx.renderer.getContext().getExtension('WEBGL_depth_texture')) {\r\n      gfx.offscreenBuf.depthTexture = new DepthTexture()\r\n      gfx.offscreenBuf.depthTexture.type = UnsignedShortType\r\n    }\r\n\r\n    gfx.offscreenBuf2 = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      format: RGBAFormat,\r\n      depthBuffer: false\r\n    })\r\n\r\n    gfx.offscreenBuf3 = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      format: RGBAFormat,\r\n      depthBuffer: false\r\n    })\r\n\r\n    gfx.offscreenBuf4 = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      format: RGBAFormat,\r\n      depthBuffer: false\r\n    })\r\n\r\n    gfx.volBFTex = gfx.offscreenBuf3\r\n    gfx.volFFTex = gfx.offscreenBuf4\r\n    gfx.volWFFTex = gfx.offscreenBuf\r\n\r\n    // use float textures for volume rendering if possible\r\n    if (gfx.renderer.getContext().getExtension('OES_texture_float')) {\r\n      gfx.offscreenBuf5 = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n        minFilter: LinearFilter,\r\n        magFilter: LinearFilter,\r\n        format: RGBAFormat,\r\n        type: FloatType,\r\n        depthBuffer: false\r\n      })\r\n\r\n      gfx.offscreenBuf6 = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n        minFilter: LinearFilter,\r\n        magFilter: LinearFilter,\r\n        format: RGBAFormat,\r\n        type: FloatType,\r\n        depthBuffer: false\r\n      })\r\n\r\n      gfx.offscreenBuf7 = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n        minFilter: LinearFilter,\r\n        magFilter: LinearFilter,\r\n        format: RGBAFormat,\r\n        type: FloatType,\r\n        depthBuffer: true\r\n      })\r\n\r\n      gfx.volBFTex = gfx.offscreenBuf5\r\n      gfx.volFFTex = gfx.offscreenBuf6\r\n      gfx.volWFFTex = gfx.offscreenBuf7\r\n    } else {\r\n      this.logger.warn(\"Device doesn't support OES_texture_float extension\")\r\n    }\r\n\r\n    gfx.stereoBufL = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      format: RGBAFormat,\r\n      depthBuffer: false\r\n    })\r\n\r\n    gfx.stereoBufR = new WebGLRenderTarget(deviceWidth, deviceHeight, {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      format: RGBAFormat,\r\n      depthBuffer: false\r\n    })\r\n\r\n    this._gfx = gfx\r\n    this._showCanvas()\r\n\r\n    this._embedWebXR(settings.now.stereo === 'WEBVR')\r\n\r\n    this._container.appendChild(gfx.renderer2d.getElement())\r\n\r\n    // add FPS counter\r\n    const stats = new Stats()\r\n    stats.domElement.style.position = 'absolute'\r\n    stats.domElement.style.right = '0'\r\n    stats.domElement.style.bottom = '0'\r\n    this._container.appendChild(stats.domElement)\r\n    this._fps = stats\r\n    this._fps.show(settings.now.fps)\r\n  }\r\n\r\n  /**\r\n   * Setup event listeners.\r\n   * @private\r\n   */\r\n  _initListeners() {\r\n    const self = this\r\n    window.addEventListener('resize', () => {\r\n      self._onResize()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Try to add numbers to the base name to make it unique among visuals\r\n   * @private\r\n   */\r\n  _makeUniqueVisualName(baseName) {\r\n    if (!baseName) {\r\n      return Math.random().toString()\r\n    }\r\n\r\n    let name = baseName\r\n    let suffix = 1\r\n    while (this._visuals.hasOwnProperty(name)) {\r\n      name = `${baseName} (${suffix.toString()})`\r\n      suffix++\r\n    }\r\n\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Add visual to the viewer\r\n   * @private\r\n   */\r\n  _addVisual(visual) {\r\n    if (!visual) {\r\n      return null\r\n    }\r\n\r\n    // change visual name in order to make it unique\r\n    const name = this._makeUniqueVisualName(visual.name)\r\n    visual.name = name\r\n\r\n    this._visuals[name] = visual\r\n    this._gfx.pivot.add(visual)\r\n    if (visual.getSelectionGeo) {\r\n      this._gfx.selectionPivot.add(visual.getSelectionGeo())\r\n    }\r\n\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Remove visual from the viewer\r\n   * @private\r\n   */\r\n  _removeVisual(visual) {\r\n    let name = ''\r\n    let obj = null\r\n    if (visual instanceof Visual) {\r\n      ;({ name } = visual)\r\n      obj = visual\r\n    } else if (typeof visual === 'string') {\r\n      name = visual\r\n      obj = this._visuals[name]\r\n    }\r\n\r\n    if (\r\n      !obj ||\r\n      !this._visuals.hasOwnProperty(name) ||\r\n      this._visuals[name] !== obj\r\n    ) {\r\n      return\r\n    }\r\n\r\n    if (name === this._curVisualName) {\r\n      this._curVisualName = undefined\r\n    }\r\n\r\n    delete this._visuals[name]\r\n    obj.release() // removes nodes from scene\r\n\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Call specified function for each Visual\r\n   * @private\r\n   */\r\n  _forEachVisual(callback) {\r\n    for (const name in this._visuals) {\r\n      if (this._visuals.hasOwnProperty(name)) {\r\n        callback(this._visuals[name])\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Release (destroy) all visuals in the scene\r\n   * @private\r\n   */\r\n  _releaseAllVisuals() {\r\n    if (!this._gfx || !this._gfx.pivot) {\r\n      return\r\n    }\r\n\r\n    for (const name in this._visuals) {\r\n      if (this._visuals.hasOwnProperty(name)) {\r\n        this._visuals[name].release()\r\n      }\r\n    }\r\n\r\n    this._visuals = {}\r\n  }\r\n\r\n  /**\r\n   * Call specified function for each ComplexVisual\r\n   * @private\r\n   */\r\n  _forEachComplexVisual(callback) {\r\n    if (!this._gfx || !this._gfx.pivot) {\r\n      return\r\n    }\r\n\r\n    for (const name in this._visuals) {\r\n      if (\r\n        this._visuals.hasOwnProperty(name) &&\r\n        this._visuals[name] instanceof ComplexVisual\r\n      ) {\r\n        callback(this._visuals[name])\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns ComplexVisual with specified name, or current (if not found), or any, or null\r\n   * @private\r\n   */\r\n  _getComplexVisual(name) {\r\n    name = name || this._curVisualName\r\n    let any = null\r\n    let named = null\r\n    this._forEachComplexVisual((visual) => {\r\n      any = visual\r\n      if (visual.name === name) {\r\n        named = visual\r\n      }\r\n    })\r\n    return named || any\r\n  }\r\n\r\n  /**\r\n   * Returns first found VolumeVisual (no more than one should be present actually)\r\n   * @private\r\n   */\r\n  _getVolumeVisual() {\r\n    let any = null\r\n    this._forEachVisual((visual) => {\r\n      if (visual instanceof VolumeVisual) {\r\n        any = visual\r\n      }\r\n    })\r\n    return any\r\n  }\r\n\r\n  /**\r\n   * Returns ComplexVisual corresponding to specified complex\r\n   * @private\r\n   */\r\n  _getVisualForComplex(complex) {\r\n    if (!complex) {\r\n      return null\r\n    }\r\n\r\n    let found = null\r\n    this._forEachComplexVisual((visual) => {\r\n      if (visual.getComplex() === complex) {\r\n        found = visual\r\n      }\r\n    })\r\n    return found\r\n  }\r\n\r\n  /*\r\n   * Get a list of names of visuals currently shown by the viewer\r\n   */\r\n  getVisuals() {\r\n    return Object.keys(this._visuals)\r\n  }\r\n\r\n  /*\r\n   * Get complex visuals count\r\n   */\r\n  getComplexVisualsCount() {\r\n    let count = 0\r\n    this._forEachComplexVisual(() => count++)\r\n    return count\r\n  }\r\n\r\n  /*\r\n   * Get current visual\r\n   */\r\n  getCurrentVisual() {\r\n    return this._curVisualName\r\n  }\r\n\r\n  /*\r\n   * Set current visual.\r\n   * All further operations will be performed on this visual (complex) if not stated otherwise.\r\n   */\r\n  setCurrentVisual(name) {\r\n    if (!this._visuals[name]) {\r\n      return\r\n    }\r\n\r\n    this._curVisualName = name\r\n  }\r\n\r\n  /**\r\n   * Run the viewer, start processing update/render frames periodically.\r\n   * Has no effect if already running.\r\n   * @see Miew#halt\r\n   */\r\n  run() {\r\n    if (!this._running) {\r\n      this._running = true\r\n      if (this._halting) {\r\n        this._halting = false\r\n        return\r\n      }\r\n\r\n      this._objectControls.enable(true)\r\n      this._interpolator.resume()\r\n\r\n      this._requestAnimationFrame(() => this._onTick())\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Request the viewer to stop.\r\n   * Will be processed during the next frame.\r\n   * @see Miew#run\r\n   */\r\n  halt() {\r\n    if (this._running) {\r\n      this._discardComponentEdit()\r\n      this._discardFragmentEdit()\r\n      this._objectControls.enable(false)\r\n      this._interpolator.pause()\r\n      this._halting = true\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Request the viewer to start / stop responsing\r\n   * on hot keys.\r\n   * @param enabled - start (true) or stop (false) response on hot keys.\r\n   */\r\n  enableHotKeys(enabled) {\r\n    this._hotKeysEnabled = enabled\r\n    this._objectControls.enableHotkeys(enabled)\r\n  }\r\n\r\n  /**\r\n   * Callback which processes window resize.\r\n   * @private\r\n   */\r\n  _onResize() {\r\n    this._needRender = true\r\n\r\n    const gfx = this._gfx\r\n    gfx.width = this._container.clientWidth\r\n    gfx.height = this._container.clientHeight\r\n\r\n    gfx.camera.aspect = gfx.width / gfx.height\r\n    gfx.camera.setMinimalFov(settings.now.camFov)\r\n    gfx.camera.updateProjectionMatrix()\r\n\r\n    gfx.renderer.setSize(gfx.width, gfx.height)\r\n    gfx.renderer2d.setSize(gfx.width, gfx.height)\r\n\r\n    this.dispatchEvent({ type: 'resize' })\r\n  }\r\n\r\n  _resizeOffscreenBuffers(width, height, stereo) {\r\n    const gfx = this._gfx\r\n    stereo = stereo || 'NONE'\r\n    const isAnaglyph = stereo === 'NONE' || stereo === 'ANAGLYPH'\r\n    const multi = isAnaglyph ? 1 : 0.5\r\n    gfx.offscreenBuf.setSize(multi * width, height)\r\n    gfx.offscreenBuf2.setSize(multi * width, height)\r\n    gfx.offscreenBuf3.setSize(multi * width, height)\r\n    gfx.offscreenBuf4.setSize(multi * width, height)\r\n    if (gfx.offscreenBuf5) {\r\n      gfx.offscreenBuf5.setSize(multi * width, height)\r\n    }\r\n    if (gfx.offscreenBuf6) {\r\n      gfx.offscreenBuf6.setSize(multi * width, height)\r\n    }\r\n    if (gfx.offscreenBuf7) {\r\n      gfx.offscreenBuf7.setSize(multi * width, height)\r\n    }\r\n    if (isAnaglyph) {\r\n      gfx.stereoBufL.setSize(width, height)\r\n      gfx.stereoBufR.setSize(width, height)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback which processes update/render frames.\r\n   * @private\r\n   */\r\n  _onTick() {\r\n    if (this._halting) {\r\n      this._running = false\r\n      this._halting = false\r\n      return\r\n    }\r\n\r\n    this._fps.update()\r\n\r\n    this._requestAnimationFrame(() => this._onTick())\r\n\r\n    this._onUpdate()\r\n    if (this._needRender) {\r\n      this._onRender()\r\n      this._needRender =\r\n        !settings.now.suspendRender || settings.now.stereo === 'WEBVR'\r\n    }\r\n  }\r\n\r\n  _getBSphereRadius() {\r\n    // calculate radius that would include all visuals\r\n    let radius = 0\r\n    this._forEachVisual((visual) => {\r\n      radius = Math.max(radius, visual.getBoundaries().boundingSphere.radius)\r\n    })\r\n    return radius * this._objectControls.getScale()\r\n  }\r\n\r\n  /**\r\n   * Calculate bounding box that would include all visuals and being axis aligned in world defined by\r\n   * transformation matrix: matrix\r\n   * @param {Matrix4} matrix - transformation matrix.\r\n   * @param {object}  OBB           - calculating bounding box.\r\n   * @param {Vector3} OBB.center    - OBB center.\r\n   * @param {Vector3} OBB.halfSize  - half magnitude of OBB sizes.\r\n   */\r\n  getOBB(matrix, OBB) {\r\n    this._bBox.makeEmpty()\r\n\r\n    this._forEachVisual((visual) => {\r\n      this._bSphereForOneVisual.copy(visual.getBoundaries().boundingSphere)\r\n      this._bSphereForOneVisual\r\n        .applyMatrix4(visual.matrixWorld)\r\n        .applyMatrix4(matrix)\r\n      this._bSphereForOneVisual.getBoundingBox(this._bBoxForOneVisual)\r\n      this._bBox.union(this._bBoxForOneVisual)\r\n    })\r\n    this._bBox.getCenter(OBB.center)\r\n\r\n    this._invMatrix.copy(matrix).invert()\r\n    OBB.center.applyMatrix4(this._invMatrix)\r\n\r\n    const { min } = this._bBox\r\n    const { max } = this._bBox\r\n    this._points[0].set(min.x, min.y, min.z) // 000\r\n    this._points[1].set(max.x, min.y, min.z) // 100\r\n    this._points[2].set(min.x, max.y, min.z) // 010\r\n    this._points[3].set(min.x, min.y, max.z) // 001\r\n    for (let i = 0, l = this._points.length; i < l; i++) {\r\n      this._points[i].applyMatrix4(this._invMatrix)\r\n    }\r\n\r\n    OBB.halfSize\r\n      .set(\r\n        Math.abs(this._points[0].x - this._points[1].x),\r\n        Math.abs(this._points[0].y - this._points[2].y),\r\n        Math.abs(this._points[0].z - this._points[3].z)\r\n      )\r\n      .multiplyScalar(0.5)\r\n  }\r\n\r\n  _updateFog() {\r\n    const gfx = this._gfx\r\n\r\n    if (settings.now.fog) {\r\n      if (typeof gfx.scene.fog === 'undefined' || gfx.scene.fog === null) {\r\n        const color = chooseFogColor()\r\n        gfx.scene.fog = new Fog(color)\r\n        this._setUberMaterialValues({ fog: settings.now.fog })\r\n      }\r\n      updateFogRange(\r\n        gfx.scene.fog,\r\n        gfx.camera.position.z,\r\n        this._getBSphereRadius()\r\n      )\r\n    } else if (gfx.scene.fog) {\r\n      gfx.scene.fog = undefined\r\n      this._setUberMaterialValues({ fog: settings.now.fog })\r\n    }\r\n  }\r\n\r\n  _onUpdate() {\r\n    if (\r\n      this.isScriptingCommandAvailable !== undefined &&\r\n      this.isScriptingCommandAvailable() &&\r\n      !this._building\r\n    ) {\r\n      this.callNextCmd()\r\n    }\r\n\r\n    this._objectControls.update()\r\n\r\n    this._forEachComplexVisual((visual) => {\r\n      visual.getComplex().update()\r\n    })\r\n\r\n    if (\r\n      settings.now.autobuild &&\r\n      !this._loading.length &&\r\n      !this._building &&\r\n      this._needRebuild()\r\n    ) {\r\n      this.rebuild()\r\n    }\r\n\r\n    if (!this._loading.length && !this._building && !this._needRebuild()) {\r\n      this._updateView()\r\n    }\r\n\r\n    this._updateFog()\r\n\r\n    if (this._gfx.renderer.xr.enabled) {\r\n      this.webVR.updateMoleculeScale()\r\n    }\r\n  }\r\n\r\n  _onRender() {\r\n    const gfx = this._gfx\r\n\r\n    // update all matrices\r\n    gfx.scene.updateMatrixWorld()\r\n    gfx.camera.updateMatrixWorld()\r\n\r\n    this._clipPlaneUpdateValue(this._getBSphereRadius())\r\n    this._fogFarUpdateValue()\r\n\r\n    gfx.renderer.setRenderTarget(null)\r\n    gfx.renderer.clear()\r\n\r\n    this._renderFrame(settings.now.stereo)\r\n  }\r\n\r\n  _renderFrame(stereo) {\r\n    const gfx = this._gfx\r\n    const { renderer } = gfx\r\n\r\n    renderer.getSize(this._size)\r\n\r\n    if (stereo !== 'NONE') {\r\n      gfx.camera.focus = gfx.camera.position.z // set focus to the center of the object\r\n      gfx.stereoCam.aspect = 1.0\r\n\r\n      // in anaglyph mode we render full-size image for each eye\r\n      // while in other stereo modes only half-size (two images on the screen)\r\n      if (stereo === 'ANAGLYPH') {\r\n        gfx.stereoCam.update(gfx.camera)\r\n      } else {\r\n        gfx.stereoCam.updateHalfSized(gfx.camera, settings.now.camFov)\r\n      }\r\n    }\r\n\r\n    // resize offscreen buffers to match the target\r\n    const pixelRatio = gfx.renderer.getPixelRatio()\r\n    this._resizeOffscreenBuffers(\r\n      this._size.width * pixelRatio,\r\n      this._size.height * pixelRatio,\r\n      stereo\r\n    )\r\n\r\n    this._renderShadowMap()\r\n\r\n    switch (stereo) {\r\n      case 'WEBVR':\r\n      case 'NONE':\r\n        this._renderScene(gfx.camera, false)\r\n        break\r\n      case 'SIMPLE':\r\n      case 'DISTORTED':\r\n        renderer.setScissorTest(true)\r\n\r\n        renderer.setScissor(0, 0, this._size.width / 2, this._size.height)\r\n        renderer.setViewport(0, 0, this._size.width / 2, this._size.height)\r\n        this._renderScene(this._gfx.stereoCam.cameraL, stereo === 'DISTORTED')\r\n\r\n        renderer.setScissor(\r\n          this._size.width / 2,\r\n          0,\r\n          this._size.width / 2,\r\n          this._size.height\r\n        )\r\n        renderer.setViewport(\r\n          this._size.width / 2,\r\n          0,\r\n          this._size.width / 2,\r\n          this._size.height\r\n        )\r\n        this._renderScene(this._gfx.stereoCam.cameraR, stereo === 'DISTORTED')\r\n\r\n        renderer.setScissorTest(false)\r\n        break\r\n      case 'ANAGLYPH':\r\n        this._renderScene(this._gfx.stereoCam.cameraL, false, gfx.stereoBufL)\r\n        this._renderScene(this._gfx.stereoCam.cameraR, false, gfx.stereoBufR)\r\n        renderer.setRenderTarget(null)\r\n        this._anaglyphMat.uniforms.srcL.value = gfx.stereoBufL.texture\r\n        this._anaglyphMat.uniforms.srcR.value = gfx.stereoBufR.texture\r\n        gfx.renderer.renderScreenQuad(this._anaglyphMat)\r\n        break\r\n      default:\r\n    }\r\n\r\n    gfx.renderer2d.render(gfx.scene, gfx.camera)\r\n\r\n    if (settings.now.axes && gfx.axes && !gfx.renderer.xr.enabled) {\r\n      gfx.axes.render(renderer)\r\n    }\r\n  }\r\n\r\n  _onBgColorChanged() {\r\n    const gfx = this._gfx\r\n    const color = chooseFogColor()\r\n    if (gfx) {\r\n      if (gfx.scene.fog) {\r\n        gfx.scene.fog.color.set(color)\r\n      }\r\n      gfx.renderer.setClearColor(\r\n        settings.now.bg.color,\r\n        Number(!settings.now.bg.transparent)\r\n      )\r\n    }\r\n    this._needRender = true\r\n  }\r\n\r\n  _onFogColorChanged() {\r\n    const gfx = this._gfx\r\n    const color = chooseFogColor()\r\n    if (gfx && gfx.scene.fog) {\r\n      gfx.scene.fog.color.set(color)\r\n    }\r\n    this._needRender = true\r\n  }\r\n\r\n  _setUberMaterialValues(values) {\r\n    this._gfx.root.traverse((obj) => {\r\n      if (\r\n        (obj instanceof Mesh ||\r\n          obj instanceof LineSegments ||\r\n          obj instanceof Line) &&\r\n        obj.material instanceof UberMaterial\r\n      ) {\r\n        obj.material.setValues(values)\r\n        obj.material.needsUpdate = true\r\n      }\r\n    })\r\n  }\r\n\r\n  _enableMRT(on, renderBuffer, textureBuffer) {\r\n    const gfx = this._gfx\r\n    const gl = gfx.renderer.getContext()\r\n    const ext = gl.getExtension('WEBGL_draw_buffers')\r\n    const { properties } = gfx.renderer\r\n\r\n    if (!on) {\r\n      ext.drawBuffersWEBGL([gl.COLOR_ATTACHMENT0, null])\r\n      return\r\n    }\r\n\r\n    // take extra texture from Texture Buffer\r\n    gfx.renderer.setRenderTarget(textureBuffer)\r\n    const tx8 = properties.get(textureBuffer.texture).__webglTexture\r\n    gl.bindTexture(gl.TEXTURE_2D, tx8)\r\n\r\n    // take texture and framebuffer from renderbuffer\r\n    gfx.renderer.setRenderTarget(renderBuffer)\r\n    const fb = properties.get(renderBuffer).__webglFramebuffer\r\n    const tx = properties.get(renderBuffer.texture).__webglTexture\r\n\r\n    // set framebuffer\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb)\r\n    fb.width = renderBuffer.width\r\n    fb.height = renderBuffer.height\r\n    gl.framebufferTexture2D(\r\n      gl.FRAMEBUFFER,\r\n      gl.COLOR_ATTACHMENT0,\r\n      gl.TEXTURE_2D,\r\n      tx,\r\n      0\r\n    )\r\n    gl.framebufferTexture2D(\r\n      gl.FRAMEBUFFER,\r\n      ext.COLOR_ATTACHMENT1_WEBGL,\r\n      gl.TEXTURE_2D,\r\n      tx8,\r\n      0\r\n    )\r\n\r\n    // mapping textures\r\n    ext.drawBuffersWEBGL([gl.COLOR_ATTACHMENT0, ext.COLOR_ATTACHMENT1_WEBGL])\r\n  }\r\n\r\n  _renderScene(camera, distortion, target) {\r\n    distortion = distortion || false\r\n    target = target || null\r\n\r\n    const gfx = this._gfx\r\n\r\n    // render to offscreen buffer\r\n    gfx.renderer.setClearColor(\r\n      settings.now.bg.color,\r\n      Number(!settings.now.bg.transparent)\r\n    )\r\n    gfx.renderer.setRenderTarget(target)\r\n    gfx.renderer.clear()\r\n    if (gfx.renderer.xr.enabled) {\r\n      gfx.renderer.render(gfx.scene, camera)\r\n      return\r\n    }\r\n\r\n    // clean buffer for normals texture\r\n    gfx.renderer.setClearColor(0x000000, 0.0)\r\n    gfx.renderer.setRenderTarget(gfx.offscreenBuf4)\r\n    gfx.renderer.clearColor()\r\n\r\n    gfx.renderer.setClearColor(\r\n      settings.now.bg.color,\r\n      Number(!settings.now.bg.transparent)\r\n    )\r\n    gfx.renderer.setRenderTarget(gfx.offscreenBuf)\r\n    gfx.renderer.clear()\r\n\r\n    const bHaveComplexes = this._getComplexVisual() !== null\r\n    const volumeVisual = this._getVolumeVisual()\r\n    const ssao = bHaveComplexes && settings.now.ao\r\n\r\n    if (ssao) {\r\n      this._enableMRT(true, gfx.offscreenBuf, gfx.offscreenBuf4)\r\n    }\r\n\r\n    if (settings.now.transparency === 'prepass') {\r\n      this._renderWithPrepassTransparency(camera, gfx.offscreenBuf)\r\n    } else if (settings.now.transparency === 'standard') {\r\n      gfx.renderer.setRenderTarget(gfx.offscreenBuf)\r\n      gfx.renderer.render(gfx.scene, camera)\r\n    }\r\n\r\n    if (ssao) {\r\n      this._enableMRT(false, null, null)\r\n    }\r\n\r\n    // when fxaa we should get resulting image in temp off-screen buff2 for further postprocessing with fxaa filter\r\n    // otherwise we render to canvas\r\n    const outline = bHaveComplexes && settings.now.outline.on\r\n    const fxaa = bHaveComplexes && settings.now.fxaa\r\n    const volume =\r\n      volumeVisual !== null && volumeVisual.getMesh().material != null\r\n    let dstBuffer =\r\n      ssao || outline || volume || fxaa || distortion\r\n        ? gfx.offscreenBuf2\r\n        : target\r\n    let srcBuffer = gfx.offscreenBuf\r\n\r\n    if (ssao) {\r\n      this._performAO(\r\n        srcBuffer,\r\n        gfx.offscreenBuf4,\r\n        gfx.offscreenBuf.depthTexture,\r\n        dstBuffer,\r\n        gfx.offscreenBuf3,\r\n        gfx.offscreenBuf2\r\n      )\r\n      if (!fxaa && !distortion && !volume && !outline) {\r\n        srcBuffer = dstBuffer\r\n        dstBuffer = target\r\n        gfx.renderer.setRenderTarget(dstBuffer)\r\n        gfx.renderer.renderScreenQuadFromTex(srcBuffer.texture, 1.0)\r\n      }\r\n    } else {\r\n      // just copy color buffer to dst buffer\r\n      gfx.renderer.setRenderTarget(dstBuffer)\r\n      gfx.renderer.renderScreenQuadFromTex(srcBuffer.texture, 1.0)\r\n    }\r\n\r\n    // outline\r\n    if (outline) {\r\n      srcBuffer = dstBuffer\r\n      dstBuffer = volume || fxaa || distortion ? gfx.offscreenBuf3 : target\r\n      if (srcBuffer != null) {\r\n        this._renderOutline(camera, gfx.offscreenBuf, srcBuffer, dstBuffer)\r\n      }\r\n    }\r\n\r\n    // render selected part with outline material\r\n    this._renderSelection(camera, gfx.offscreenBuf, dstBuffer)\r\n\r\n    if (volume) {\r\n      // copy current picture to the buffer that retains depth-data of the original molecule render\r\n      // so that volume renderer could use depth-test\r\n      gfx.renderer.setRenderTarget(gfx.offscreenBuf)\r\n      gfx.renderer.renderScreenQuadFromTex(dstBuffer.texture, 1.0)\r\n      dstBuffer = gfx.offscreenBuf\r\n      this._renderVolume(\r\n        volumeVisual,\r\n        camera,\r\n        dstBuffer,\r\n        gfx.volBFTex,\r\n        gfx.volFFTex,\r\n        gfx.volWFFTex\r\n      )\r\n\r\n      // if this is the last stage -- copy image to target\r\n      if (!fxaa && !distortion) {\r\n        gfx.renderer.setRenderTarget(target)\r\n        gfx.renderer.renderScreenQuadFromTex(dstBuffer.texture, 1.0)\r\n      }\r\n    }\r\n\r\n    srcBuffer = dstBuffer\r\n\r\n    if (fxaa) {\r\n      dstBuffer = distortion ? gfx.offscreenBuf4 : target\r\n      this._performFXAA(srcBuffer, dstBuffer)\r\n      srcBuffer = dstBuffer\r\n    }\r\n\r\n    if (distortion) {\r\n      dstBuffer = target\r\n      this._performDistortion(srcBuffer, dstBuffer, true)\r\n    }\r\n  }\r\n\r\n  _performDistortion(srcBuffer, targetBuffer, mesh) {\r\n    this._scene.add(new meshes.Mesh(this._geo, this._material))\r\n    this._gfx.renderer.setRenderTarget(targetBuffer)\r\n    this._gfx.renderer.clear()\r\n\r\n    if (mesh) {\r\n      this._material.uniforms.srcTex.value = srcBuffer.texture\r\n      this._material.uniforms.aberration.value.set(0.995, 1.0, 1.01)\r\n      this._gfx.renderer.render(this._scene, this._camera)\r\n    } else {\r\n      this._gfx.renderer.renderScreenQuadFromTexWithDistortion(\r\n        srcBuffer,\r\n        settings.now.debug.stereoBarrel\r\n      )\r\n    }\r\n  }\r\n\r\n  _renderOutline(camera, srcDepthBuffer, srcColorBuffer, targetBuffer) {\r\n    const self = this\r\n    const gfx = self._gfx\r\n\r\n    // apply Sobel filter -- draw outline\r\n    this._outlineMaterial.uniforms.srcTex.value = srcColorBuffer.texture\r\n    this._outlineMaterial.uniforms.srcDepthTex.value =\r\n      srcDepthBuffer.depthTexture\r\n    this._outlineMaterial.uniforms.srcTexSize.value.set(\r\n      srcDepthBuffer.width,\r\n      srcDepthBuffer.height\r\n    )\r\n    this._outlineMaterial.uniforms.color.value = new Color(\r\n      settings.now.outline.color\r\n    )\r\n    this._outlineMaterial.uniforms.threshold.value =\r\n      settings.now.outline.threshold\r\n    this._outlineMaterial.uniforms.thickness.value = new Vector2(\r\n      settings.now.outline.thickness,\r\n      settings.now.outline.thickness\r\n    )\r\n\r\n    gfx.renderer.setRenderTarget(targetBuffer)\r\n    gfx.renderer.renderScreenQuad(this._outlineMaterial)\r\n  }\r\n\r\n  _renderShadowMap() {\r\n    if (!settings.now.shadow.on) {\r\n      return\r\n    }\r\n\r\n    const gfx = this._gfx\r\n    const currentRenderTarget = gfx.renderer.getRenderTarget()\r\n    const activeCubeFace = gfx.renderer.getActiveCubeFace()\r\n    const activeMipmapLevel = gfx.renderer.getActiveMipmapLevel()\r\n\r\n    const _state = gfx.renderer.state\r\n\r\n    // Set GL state for depth map.\r\n    _state.setBlending(NoBlending)\r\n    _state.buffers.color.setClear(1, 1, 1, 1)\r\n    _state.buffers.depth.setTest(true)\r\n    _state.setScissorTest(false)\r\n\r\n    for (let i = 0; i < gfx.scene.children.length; i++) {\r\n      if (gfx.scene.children[i].type === 'DirectionalLight') {\r\n        const light = gfx.scene.children[i]\r\n\r\n        if (light.shadow.map == null) {\r\n          light.shadow.map = new WebGLRenderTarget(\r\n            light.shadow.mapSize.width,\r\n            light.shadow.mapSize.height,\r\n            this.pars\r\n          )\r\n          light.shadow.camera.updateProjectionMatrix()\r\n        }\r\n        light.shadow.updateMatrices(light)\r\n\r\n        gfx.renderer.setRenderTarget(light.shadow.map)\r\n        gfx.renderer.clear()\r\n\r\n        gfx.renderer.render(gfx.scene, light.shadow.camera)\r\n      }\r\n    }\r\n    gfx.renderer.setRenderTarget(\r\n      currentRenderTarget,\r\n      activeCubeFace,\r\n      activeMipmapLevel\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Check if there is selection which must be rendered or not.\r\n   * @private\r\n   * @returns {boolean} true on existing selection to render\r\n   */\r\n  _hasSelectionToRender() {\r\n    const selPivot = this._gfx.selectionPivot\r\n\r\n    for (let i = 0; i < selPivot.children.length; i++) {\r\n      const selPivotChild = selPivot.children[i]\r\n      if (selPivotChild.children.length > 0) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  _renderSelection(camera, srcBuffer, targetBuffer) {\r\n    const _outlineMaterial = new OutlineMaterial()\r\n    const self = this\r\n    const gfx = self._gfx\r\n\r\n    // clear offscreen buffer (leave z-buffer intact)\r\n    gfx.renderer.setClearColor('black', 0)\r\n\r\n    // render selection to offscreen buffer\r\n    gfx.renderer.setRenderTarget(srcBuffer)\r\n    gfx.renderer.clear(true, false, false)\r\n    if (self._hasSelectionToRender()) {\r\n      gfx.selectionRoot.matrix = gfx.root.matrix\r\n      gfx.selectionPivot.matrix = gfx.pivot.matrix\r\n      gfx.renderer.render(gfx.selectionScene, camera)\r\n    } else {\r\n      // just render something to force \"target clear\" operation to finish\r\n      gfx.renderer.renderDummyQuad()\r\n    }\r\n\r\n    // overlay to screen\r\n    gfx.renderer.setRenderTarget(targetBuffer)\r\n    gfx.renderer.renderScreenQuadFromTex(srcBuffer.texture, 0.6)\r\n\r\n    // apply Sobel filter -- draw outline\r\n    _outlineMaterial.uniforms.srcTex.value = srcBuffer.texture\r\n    _outlineMaterial.uniforms.srcTexSize.value.set(\r\n      srcBuffer.width,\r\n      srcBuffer.height\r\n    )\r\n    gfx.renderer.renderScreenQuad(_outlineMaterial)\r\n  }\r\n\r\n  _checkVolumeRenderingSupport(renderTarget) {\r\n    if (!renderTarget) {\r\n      return false\r\n    }\r\n    const gfx = this._gfx\r\n    const oldRT = gfx.renderer.getRenderTarget()\r\n\r\n    gfx.renderer.setRenderTarget(renderTarget)\r\n    const context = gfx.renderer.getContext()\r\n    const result = context.checkFramebufferStatus(context.FRAMEBUFFER)\r\n    gfx.renderer.setRenderTarget(oldRT)\r\n    if (result !== context.FRAMEBUFFER_COMPLETE) {\r\n      // floatFrameBufferWarning = ;\r\n      this.logger.warn(\"Device doesn't support electron density rendering\")\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  _renderVolume(volumeVisual, camera, dstBuf, tmpBuf1, tmpBuf2, tmpBuf3) {\r\n    const volumeBFMat = new VolumeMaterial.BackFacePosMaterial()\r\n    const volumeFFMat = new VolumeMaterial.FrontFacePosMaterial()\r\n    const cubeOffsetMat = new Matrix4().makeTranslation(0.5, 0.5, 0.5)\r\n    const world2colorMat = new Matrix4()\r\n    let volumeRenderingSupported\r\n    const gfx = this._gfx\r\n\r\n    if (typeof volumeRenderingSupported === 'undefined') {\r\n      volumeRenderingSupported = this._checkVolumeRenderingSupport(tmpBuf1)\r\n    }\r\n\r\n    if (!volumeRenderingSupported) {\r\n      return\r\n    }\r\n\r\n    const mesh = volumeVisual.getMesh()\r\n\r\n    mesh.rebuild(gfx.camera)\r\n\r\n    // use main camera to prepare special textures to be used by volumetric rendering\r\n    // these textures have the size of the window and are stored in offscreen buffers\r\n    gfx.renderer.setClearColor('black', 0)\r\n    gfx.renderer.setRenderTarget(tmpBuf1)\r\n    gfx.renderer.clear()\r\n    gfx.renderer.setRenderTarget(tmpBuf2)\r\n    gfx.renderer.clear()\r\n    gfx.renderer.setRenderTarget(tmpBuf3)\r\n    gfx.renderer.clear()\r\n\r\n    gfx.renderer.setRenderTarget(tmpBuf1)\r\n    // draw plane with its own material, because it differs slightly from volumeBFMat\r\n    camera.layers.set(gfxutils.LAYERS.VOLUME_BFPLANE)\r\n    gfx.renderer.render(gfx.scene, camera)\r\n\r\n    camera.layers.set(gfxutils.LAYERS.VOLUME)\r\n    gfx.scene.overrideMaterial = volumeBFMat\r\n    gfx.renderer.render(gfx.scene, camera)\r\n\r\n    gfx.renderer.setRenderTarget(tmpBuf2)\r\n    camera.layers.set(gfxutils.LAYERS.VOLUME)\r\n    gfx.scene.overrideMaterial = volumeFFMat\r\n    gfx.renderer.render(gfx.scene, camera)\r\n\r\n    gfx.scene.overrideMaterial = null\r\n    camera.layers.set(gfxutils.LAYERS.DEFAULT)\r\n\r\n    // prepare texture that contains molecule positions\r\n    world2colorMat.copy(mesh.matrixWorld).invert()\r\n    UberMaterial.prototype.uberOptions.world2colorMatrix.multiplyMatrices(\r\n      cubeOffsetMat,\r\n      world2colorMat\r\n    )\r\n    camera.layers.set(gfxutils.LAYERS.COLOR_FROM_POSITION)\r\n    gfx.renderer.setRenderTarget(tmpBuf3)\r\n    gfx.renderer.render(gfx.scene, camera)\r\n\r\n    // render volume\r\n    const vm = mesh.material\r\n    vm.uniforms._BFRight.value = tmpBuf1.texture\r\n    vm.uniforms._FFRight.value = tmpBuf2.texture\r\n    vm.uniforms._WFFRight.value = tmpBuf3.texture\r\n    camera.layers.set(gfxutils.LAYERS.VOLUME)\r\n    gfx.renderer.setRenderTarget(dstBuf)\r\n    gfx.renderer.render(gfx.scene, camera)\r\n    camera.layers.set(gfxutils.LAYERS.DEFAULT)\r\n  }\r\n\r\n  /*  Render scene with 'ZPrepass transparency Effect'\r\n   * Idea: transparent objects are rendered in two passes. The first one writes result only into depth buffer.\r\n   * The second pass reads depth buffer and writes only to color buffer. The method results in\r\n   * correct image of front part of the semi-transparent objects, but we can see only front transparent objects\r\n   * and opaque objects inside, there is no transparent objects inside.\r\n   * Notes: 1. Opaque objects should be rendered strictly before semi-transparent ones.\r\n   * 2. Realization doesn't use camera layers because scene traversing is used for material changes and\r\n   * we can use it to select needed meshes and don't complicate meshes builders with layers\r\n   */\r\n  _renderWithPrepassTransparency(camera, targetBuffer) {\r\n    const gfx = this._gfx\r\n    gfx.renderer.setRenderTarget(targetBuffer)\r\n\r\n    // opaque objects\r\n    camera.layers.set(gfxutils.LAYERS.DEFAULT)\r\n    gfx.renderer.render(gfx.scene, camera)\r\n\r\n    // transparent objects z prepass\r\n    camera.layers.set(gfxutils.LAYERS.PREPASS_TRANSPARENT)\r\n    gfx.renderer.getContext().colorMask(false, false, false, false) // don't update color buffer\r\n    gfx.renderer.render(gfx.scene, camera)\r\n    gfx.renderer.getContext().colorMask(true, true, true, true) // update color buffer\r\n\r\n    // transparent objects color pass\r\n    camera.layers.set(gfxutils.LAYERS.TRANSPARENT)\r\n    gfx.renderer.render(gfx.scene, camera)\r\n\r\n    // restore default layer\r\n    camera.layers.set(gfxutils.LAYERS.DEFAULT)\r\n  }\r\n\r\n  _performFXAA(srcBuffer, targetBuffer) {\r\n    const _fxaaMaterial = new FXAAMaterial()\r\n    if (\r\n      typeof srcBuffer === 'undefined' ||\r\n      typeof targetBuffer === 'undefined'\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const gfx = this._gfx\r\n\r\n    // clear canvas\r\n    gfx.renderer.setClearColor(\r\n      settings.now.bg.color,\r\n      Number(!settings.now.bg.transparent)\r\n    )\r\n    gfx.renderer.setRenderTarget(targetBuffer)\r\n    gfx.renderer.clear()\r\n\r\n    // do fxaa processing of offscreen buff2\r\n    _fxaaMaterial.uniforms.srcTex.value = srcBuffer.texture\r\n    _fxaaMaterial.uniforms.srcTexelSize.value.set(\r\n      1.0 / srcBuffer.width,\r\n      1.0 / srcBuffer.height\r\n    )\r\n    _fxaaMaterial.uniforms.bgColor.value.set(settings.now.bg.color)\r\n\r\n    if (_fxaaMaterial.bgTransparent !== settings.now.bg.transparent) {\r\n      _fxaaMaterial.setValues({ bgTransparent: settings.now.bg.transparent })\r\n      _fxaaMaterial.needsUpdate = true\r\n    }\r\n    gfx.renderer.renderScreenQuad(_fxaaMaterial)\r\n  }\r\n\r\n  _performAO(\r\n    srcColorBuffer,\r\n    normalBuffer,\r\n    srcDepthTexture,\r\n    targetBuffer,\r\n    tempBuffer,\r\n    tempBuffer1\r\n  ) {\r\n    const _aoMaterial = new AOMaterial()\r\n    const _horBlurMaterial = new AOHorBlurMaterial()\r\n    const _vertBlurMaterial = new AOVertBlurWithBlendMaterial()\r\n\r\n    const _scale = new Vector3()\r\n    if (\r\n      !srcColorBuffer ||\r\n      !normalBuffer ||\r\n      !srcDepthTexture ||\r\n      !targetBuffer ||\r\n      !tempBuffer ||\r\n      !tempBuffer1\r\n    ) {\r\n      return\r\n    }\r\n    const gfx = this._gfx\r\n    const tanHalfFOV = Math.tan(MathUtils.DEG2RAD * 0.5 * gfx.camera.fov)\r\n\r\n    _aoMaterial.uniforms.diffuseTexture.value = srcColorBuffer.texture\r\n    _aoMaterial.uniforms.depthTexture.value = srcDepthTexture\r\n    _aoMaterial.uniforms.normalTexture.value = normalBuffer.texture\r\n    _aoMaterial.uniforms.srcTexelSize.value.set(\r\n      1.0 / srcColorBuffer.width,\r\n      1.0 / srcColorBuffer.height\r\n    )\r\n    _aoMaterial.uniforms.camNearFar.value.set(gfx.camera.near, gfx.camera.far)\r\n    _aoMaterial.uniforms.projMatrix.value = gfx.camera.projectionMatrix\r\n    _aoMaterial.uniforms.aspectRatio.value = gfx.camera.aspect\r\n    _aoMaterial.uniforms.tanHalfFOV.value = tanHalfFOV\r\n    gfx.root.matrix.extractScale(_scale)\r\n    _aoMaterial.uniforms.kernelRadius.value =\r\n      settings.now.debug.ssaoKernelRadius * _scale.x\r\n    _aoMaterial.uniforms.depthThreshold.value = 2.0 * this._getBSphereRadius() // diameter\r\n    _aoMaterial.uniforms.factor.value = settings.now.debug.ssaoFactor\r\n    // N: should be tempBuffer1 for proper use of buffers (see buffers using outside the function)\r\n    gfx.renderer.setRenderTarget(tempBuffer1)\r\n    gfx.renderer.renderScreenQuad(_aoMaterial)\r\n\r\n    _horBlurMaterial.uniforms.aoMap.value = tempBuffer1.texture\r\n    _horBlurMaterial.uniforms.srcTexelSize.value.set(\r\n      1.0 / tempBuffer1.width,\r\n      1.0 / tempBuffer1.height\r\n    )\r\n    _horBlurMaterial.uniforms.depthTexture.value = srcDepthTexture\r\n    gfx.renderer.setRenderTarget(tempBuffer)\r\n    gfx.renderer.renderScreenQuad(_horBlurMaterial)\r\n\r\n    _vertBlurMaterial.uniforms.aoMap.value = tempBuffer.texture\r\n    _vertBlurMaterial.uniforms.diffuseTexture.value = srcColorBuffer.texture\r\n    _vertBlurMaterial.uniforms.srcTexelSize.value.set(\r\n      1.0 / tempBuffer.width,\r\n      1.0 / tempBuffer.height\r\n    )\r\n    _vertBlurMaterial.uniforms.depthTexture.value = srcDepthTexture\r\n    _vertBlurMaterial.uniforms.projMatrix.value = gfx.camera.projectionMatrix\r\n    _vertBlurMaterial.uniforms.aspectRatio.value = gfx.camera.aspect\r\n    _vertBlurMaterial.uniforms.tanHalfFOV.value = tanHalfFOV\r\n    const { fog } = gfx.scene\r\n    if (fog) {\r\n      _vertBlurMaterial.uniforms.fogNearFar.value.set(fog.near, fog.far)\r\n      _vertBlurMaterial.uniforms.fogColor.value.set(\r\n        fog.color.r,\r\n        fog.color.g,\r\n        fog.color.b,\r\n        settings.now.fogAlpha\r\n      )\r\n    }\r\n    if (\r\n      _vertBlurMaterial.useFog !== settings.now.fog ||\r\n      _vertBlurMaterial.fogTransparent !== settings.now.bg.transparent\r\n    ) {\r\n      _vertBlurMaterial.setValues({\r\n        useFog: settings.now.fog,\r\n        fogTransparent: settings.now.bg.transparent\r\n      })\r\n      _vertBlurMaterial.needsUpdate = true\r\n    }\r\n    gfx.renderer.setRenderTarget(targetBuffer)\r\n    gfx.renderer.renderScreenQuad(_vertBlurMaterial)\r\n  }\r\n\r\n  /**\r\n   * Reset the viewer, unload molecules.\r\n   * @param {boolean=} keepReps - Keep representations while resetting viewer state.\r\n   */\r\n  reset(/* keepReps */) {\r\n    if (this._picker) {\r\n      this._picker.reset()\r\n    }\r\n    this._lastPick = null\r\n\r\n    this._releaseAllVisuals()\r\n\r\n    this._setEditMode(EDIT_MODE.COMPLEX)\r\n\r\n    this._resetObjects()\r\n\r\n    if (this._gfx) {\r\n      gfxutils.clearTree(this._gfx.pivot)\r\n      this._gfx.renderer2d.reset()\r\n    }\r\n\r\n    this.setNeedRender()\r\n  }\r\n\r\n  _resetScene() {\r\n    this._objectControls.reset()\r\n    this._objectControls.allowTranslation(true)\r\n    this._objectControls.allowAltObjFreeRotation(true)\r\n    this.resetReps()\r\n    this.resetPivot()\r\n    this.rebuildAll()\r\n  }\r\n\r\n  resetView() {\r\n    // reset controls\r\n    if (this._picker) {\r\n      this._picker.reset()\r\n    }\r\n    this._setEditMode(EDIT_MODE.COMPLEX)\r\n    this._resetScene()\r\n\r\n    // reset selection\r\n    this._forEachComplexVisual((visual) => {\r\n      visual.updateSelectionMask({})\r\n      visual.rebuildSelectionGeometry()\r\n    })\r\n  }\r\n\r\n  _export(format) {\r\n    const TheExporter = head(io.exporters.find({ format }))\r\n    if (!TheExporter) {\r\n      this.logger.error('Could not find suitable exporter for this source')\r\n      return Promise.reject(\r\n        new Error('Could not find suitable exporter for this source')\r\n      )\r\n    }\r\n    this.dispatchEvent({ type: 'exporting' })\r\n\r\n    if (this._visuals[this._curVisualName] instanceof ComplexVisual) {\r\n      let dataSource = null\r\n      if (TheExporter.SourceClass === ComplexVisual) {\r\n        dataSource = this._visuals[this._curVisualName]\r\n      } else if (TheExporter.SourceClass === Complex) {\r\n        dataSource = this._visuals[this._curVisualName]._complex\r\n      }\r\n      const exporter = new TheExporter(dataSource, {\r\n        miewVersion: Miew.VERSION\r\n      })\r\n      return exporter.export().then((data) => data)\r\n    }\r\n    if (this._visuals[this._curVisualName] instanceof VolumeVisual) {\r\n      return Promise.reject(\r\n        new Error('Sorry, exporter for volume data not implemented yet')\r\n      )\r\n    }\r\n    return Promise.reject(new Error('Unexpected format of data'))\r\n  }\r\n\r\n  /**\r\n   * Load molecule asynchronously.\r\n   * @param {string|File} source - Molecule source to load (e.g. PDB ID, URL or File object).\r\n   * @param {object=} opts - Options.\r\n   * @param {string=} opts.sourceType - Data source type (e.g. 'url', 'file').\r\n   * @param {string=} opts.fileType - Data contents type (e.g. 'pdb', 'cml').\r\n   * @param {string=} opts.mdFile - .nc file path.\r\n   * @param {boolean=} opts.keepRepsInfo - prevent reset of object and reps information.\r\n   * @returns {Promise} name of the visual that was added to the viewer\r\n   */\r\n  load(source, opts) {\r\n    opts = merge({}, opts, {\r\n      context: this\r\n    })\r\n\r\n    // for a single-file scenario\r\n    if (!this.settings.now.use.multiFile) {\r\n      // abort all loaders in progress\r\n      if (this._loading.length) {\r\n        this._loading.forEach((job) => {\r\n          job.cancel()\r\n        })\r\n        this._loading.length = 0\r\n      }\r\n\r\n      // reset\r\n      if (!opts.animation) {\r\n        // FIXME: sometimes it is set AFTERWARDS!\r\n        this.reset(true)\r\n      }\r\n    }\r\n\r\n    this._interpolator.reset()\r\n\r\n    this.dispatchEvent({ type: 'loading', options: opts, source })\r\n\r\n    const job = new JobHandle()\r\n    this._loading.push(job)\r\n    job.addEventListener('notification', (e) => {\r\n      this.dispatchEvent(e.slaveEvent)\r\n    })\r\n\r\n    this._spinner.spin(this._container)\r\n\r\n    const onLoadEnd = (anything) => {\r\n      const jobIndex = this._loading.indexOf(job)\r\n      if (jobIndex !== -1) {\r\n        this._loading.splice(jobIndex, 1)\r\n      }\r\n      this._spinner.stop()\r\n      this._refreshTitle()\r\n      job.notify({ type: 'loadingDone', anything })\r\n      return anything\r\n    }\r\n\r\n    return _fetchData(source, opts, job)\r\n      .then((data) => _parseData(data, opts, job))\r\n      .then((object) => {\r\n        const name = this._onLoad(object, opts)\r\n        return onLoadEnd(name)\r\n      })\r\n      .catch((err) => {\r\n        this.logger.error('Could not load data')\r\n        this.logger.debug(err)\r\n        throw onLoadEnd(err)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Unload molecule (delete corresponding visual).\r\n   * @param {string=} name - name of the visual\r\n   */\r\n  unload(name) {\r\n    this._removeVisual(name || this.getCurrentVisual())\r\n    this.resetPivot()\r\n    if (settings.now.shadow.on) {\r\n      this._updateShadowCamera()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start new animation. Now is broken.\r\n   * @param fileData - new data to animate\r\n   * @private\r\n   * @deprecated until animation system refactoring.\r\n   */\r\n  _startAnimation(fileData) {\r\n    this._stopAnimation()\r\n    const self = this\r\n    const visual = this._getComplexVisual()\r\n    if (visual === null) {\r\n      this.logger.error('Unable to start animation - no molecule is loaded.')\r\n      return\r\n    }\r\n    try {\r\n      this._frameInfo = new FrameInfo(visual.getComplex(), fileData, {\r\n        onLoadStatusChanged() {\r\n          self.dispatchEvent({\r\n            type: 'mdPlayerStateChanged',\r\n            state: {\r\n              isPlaying: self._isAnimating,\r\n              isLoading: self._frameInfo ? self._frameInfo.isLoading : true\r\n            }\r\n          })\r\n        },\r\n        onError(message) {\r\n          self._stopAnimation()\r\n          self.logger.error(message)\r\n        }\r\n      })\r\n    } catch (e) {\r\n      this.logger.error('Animation file does not fit to current complex!')\r\n      return\r\n    }\r\n    this._continueAnimation()\r\n  }\r\n\r\n  /**\r\n   * Pause current animation. Now is broken.\r\n   * @private\r\n   * @deprecated until animation system refactoring.\r\n   */\r\n  _pauseAnimation() {\r\n    if (this._animInterval === null) {\r\n      return\r\n    }\r\n    this._isAnimating = false\r\n    clearInterval(this._animInterval)\r\n    this._animInterval = null\r\n    if (this._frameInfo) {\r\n      this.dispatchEvent({\r\n        type: 'mdPlayerStateChanged',\r\n        state: {\r\n          isPlaying: this._isAnimating,\r\n          isLoading: this._frameInfo.isLoading\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Continue current animation after pausing. Now is broken.\r\n   * @private\r\n   * @deprecated until animation system refactoring.\r\n   */\r\n  _continueAnimation() {\r\n    this._isAnimating = true\r\n    let minFrameTime = 1000 / settings.now.maxfps\r\n    minFrameTime = Number.isNaN(minFrameTime) ? 0 : minFrameTime\r\n    const self = this\r\n    const { pivot } = self._gfx\r\n    const visual = this._getComplexVisual()\r\n    if (visual) {\r\n      visual.resetSelectionMask()\r\n      visual.rebuildSelectionGeometry()\r\n      this._msgAtomInfo.style.opacity = 0.0\r\n    }\r\n    this._animInterval = setInterval(() => {\r\n      self.dispatchEvent({\r\n        type: 'mdPlayerStateChanged',\r\n        state: {\r\n          isPlaying: self._isAnimating,\r\n          isLoading: self._frameInfo.isLoading\r\n        }\r\n      })\r\n      if (self._frameInfo.frameIsReady) {\r\n        pivot.updateToFrame(self._frameInfo)\r\n        self._updateObjsToFrame(self._frameInfo)\r\n        self._refreshTitle(\r\n          ` Frame ${self._frameInfo._currFrame} of ${self._frameInfo._framesCount} time interval - ${self._frameInfo._timeStep}`\r\n        )\r\n        try {\r\n          self._frameInfo.nextFrame()\r\n        } catch (e) {\r\n          self.logger.error('Error during animation')\r\n          self._stopAnimation()\r\n          return\r\n        }\r\n        self._needRender = true\r\n      }\r\n    }, minFrameTime)\r\n  }\r\n\r\n  /**\r\n   * Stop current animation. Now is broken.\r\n   * @private\r\n   * @deprecated until animation system refactoring.\r\n   */\r\n  _stopAnimation() {\r\n    if (this._animInterval === null) {\r\n      return\r\n    }\r\n    clearInterval(this._animInterval)\r\n    this._frameInfo.disableEvents()\r\n    this._frameInfo = null\r\n    this._animInterval = null\r\n    this.dispatchEvent({\r\n      type: 'mdPlayerStateChanged',\r\n      state: null\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Invoked upon successful loading of some data source\r\n   * @param {DataSource} dataSource - Data source for visualization (molecular complex or other)\r\n   * @param {object} opts - Options.\r\n   * @private\r\n   */\r\n  _onLoad(dataSource, opts) {\r\n    const gfx = this._gfx\r\n    let visualName = null\r\n\r\n    if (opts.animation) {\r\n      this._refreshTitle()\r\n      this._startAnimation(dataSource)\r\n      return null\r\n    }\r\n    this._stopAnimation()\r\n    if (!opts || !opts.keepRepsInfo) {\r\n      this._opts.reps = null\r\n      this._opts._objects = null\r\n    }\r\n\r\n    if (dataSource.id === 'Complex') {\r\n      const complex = dataSource\r\n\r\n      // update title\r\n      if (opts.fileName) {\r\n        complex.name =\r\n          complex.name || removeExtension(opts.fileName).toUpperCase()\r\n      } else if (opts.amberFileName) {\r\n        complex.name =\r\n          complex.name || removeExtension(opts.amberFileName).toUpperCase()\r\n      } else {\r\n        complex.name = `Dynamic ${opts.fileType} molecule`\r\n      }\r\n\r\n      visualName = this._addVisual(new ComplexVisual(complex.name, complex))\r\n      this._curVisualName = visualName\r\n\r\n      const desc = this.info()\r\n      this.logger.info(\r\n        `Parsed ${opts.fileName} (${desc.atoms} atoms, ${desc.bonds} bonds, ${desc.residues} residues, ${desc.chains} chains).`\r\n      )\r\n\r\n      if (isNumber(this._opts.unit)) {\r\n        complex.setCurrentUnit(this._opts.unit)\r\n      }\r\n\r\n      if (opts.preset) {\r\n        // ...removed server access...\r\n      } else if (settings.now.autoPreset) {\r\n        switch (opts.fileType) {\r\n          case 'cml':\r\n            this.resetReps('small')\r\n            break\r\n          case 'pdb':\r\n          case 'mmtf':\r\n          case 'cif':\r\n            if (hasValidResidues(complex)) {\r\n              this.resetReps('macro')\r\n            } else {\r\n              this.resetReps('small')\r\n            }\r\n            break\r\n          default:\r\n            this.resetReps('default')\r\n            break\r\n        }\r\n      } else {\r\n        this.resetReps('default')\r\n      }\r\n    } else if (dataSource.id === 'Volume') {\r\n      this.resetEd()\r\n      visualName = this._onLoadEd(dataSource)\r\n    }\r\n\r\n    gfx.camera.updateProjectionMatrix()\r\n    this._updateFog()\r\n\r\n    // reset global transform\r\n    gfx.root.resetTransform()\r\n    this.resetPivot()\r\n\r\n    // set scale to fit everything on the screen\r\n    this._objectControls.setScale(\r\n      settings.now.radiusToFit / this._getBSphereRadius()\r\n    )\r\n\r\n    this._resetObjects()\r\n\r\n    if (settings.now.autoResolution) {\r\n      this._tweakResolution()\r\n    }\r\n\r\n    if (settings.now.shadow.on) {\r\n      this._updateShadowCamera()\r\n    }\r\n\r\n    if (this._opts.view) {\r\n      this.view(this._opts.view)\r\n      delete this._opts.view\r\n    }\r\n\r\n    this._refreshTitle()\r\n\r\n    return visualName\r\n  }\r\n\r\n  resetEd() {\r\n    if (this._edLoader) {\r\n      this._edLoader.abort()\r\n      this._edLoader = null\r\n    }\r\n\r\n    // free all resources\r\n    this._removeVisual(this._getVolumeVisual())\r\n\r\n    this._needRender = true\r\n  }\r\n\r\n  loadEd(source) {\r\n    this.resetEd()\r\n\r\n    const TheLoader = head(io.loaders.find({ source }))\r\n    if (!TheLoader) {\r\n      this.logger.error(LOADER_NOT_FOUND)\r\n      return Promise.reject(new Error(LOADER_NOT_FOUND))\r\n    }\r\n\r\n    const loader = (this._edLoader = new TheLoader(source, { binary: true }))\r\n    loader.context = this\r\n    return loader\r\n      .load()\r\n      .then((data) => {\r\n        const TheParser = head(io.parsers.find({ format: 'ccp4' }))\r\n        if (!TheParser) {\r\n          throw new Error(PARSER_NOT_FOUND)\r\n        }\r\n        const parser = new TheParser(data)\r\n        parser.context = this\r\n        return parser.parse().then((dataSource) => {\r\n          this._onLoadEd(dataSource)\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        this.logger.error('Could not load ED data')\r\n        this.logger.debug(error)\r\n      })\r\n  }\r\n\r\n  _onLoadEd(dataSource) {\r\n    dataSource.normalize()\r\n\r\n    const volumeVisual = new VolumeVisual('volume', dataSource)\r\n    volumeVisual.getMesh().layers.set(gfxutils.LAYERS.VOLUME) // volume mesh is not visible to common render\r\n    const visualName = this._addVisual(volumeVisual)\r\n\r\n    this._needRender = true\r\n    return visualName\r\n  }\r\n\r\n  _needRebuild() {\r\n    let needsRebuild = false\r\n    this._forEachComplexVisual((visual) => {\r\n      needsRebuild = needsRebuild || visual.needsRebuild()\r\n    })\r\n    return needsRebuild\r\n  }\r\n\r\n  _rebuildObjects() {\r\n    const self = this\r\n    const gfx = this._gfx\r\n    let i\r\n    let n\r\n\r\n    // remove old object geometry\r\n    const toRemove = []\r\n    for (i = 0; i < gfx.pivot.children.length; ++i) {\r\n      const child = gfx.pivot.children[i]\r\n      if (!(child instanceof Visual)) {\r\n        toRemove.push(child)\r\n      }\r\n    }\r\n    for (i = 0; i < toRemove.length; ++i) {\r\n      toRemove[i].parent.remove(toRemove[i])\r\n    }\r\n\r\n    setTimeout(() => {\r\n      const objList = self._objects\r\n      for (i = 0, n = objList.length; i < n; ++i) {\r\n        const obj = objList[i]\r\n        if (obj.needsRebuild) {\r\n          obj.build()\r\n        }\r\n        if (obj.getGeometry()) {\r\n          gfx.pivot.add(obj.getGeometry())\r\n        }\r\n      }\r\n    }, 10)\r\n  }\r\n\r\n  changeUnit(unitIdx, name) {\r\n    const visual = this._getComplexVisual(name)\r\n    if (!visual) {\r\n      throw new Error('There is no complex to change!')\r\n    }\r\n\r\n    function currentUnitInfo() {\r\n      const unit = visual ? visual.getComplex().getCurrentUnit() : 0\r\n      const type = unit > 0 ? `Bio molecule ${unit}` : 'Asymmetric unit'\r\n      return `Current unit: ${unit} (${type})`\r\n    }\r\n\r\n    if (unitIdx === undefined) {\r\n      return currentUnitInfo()\r\n    }\r\n    if (isString(unitIdx)) {\r\n      unitIdx = Math.max(parseInt(unitIdx, 10), 0)\r\n    }\r\n    if (visual.getComplex().setCurrentUnit(unitIdx)) {\r\n      this._resetScene()\r\n      this._updateInfoPanel()\r\n    }\r\n    return currentUnitInfo()\r\n  }\r\n\r\n  /**\r\n   * Start to rebuild geometry asynchronously.\r\n   */\r\n  rebuild() {\r\n    if (this._building) {\r\n      this.logger.warn('Miew.rebuild(): already building!')\r\n      return\r\n    }\r\n    this._building = true\r\n\r\n    this.dispatchEvent({ type: 'rebuilding' })\r\n\r\n    this._rebuildObjects()\r\n\r\n    this._gfx.renderer2d.reset()\r\n\r\n    const rebuildActions = []\r\n    this._forEachComplexVisual((visual) => {\r\n      if (visual.needsRebuild()) {\r\n        rebuildActions.push(\r\n          visual.rebuild().then(\r\n            () =>\r\n              new Promise((resolve) => {\r\n                visual.rebuildSelectionGeometry()\r\n                resolve()\r\n              })\r\n          )\r\n        )\r\n      }\r\n    })\r\n\r\n    // Start asynchronous rebuild\r\n    const self = this\r\n    this._spinner.spin(this._container)\r\n    Promise.all(rebuildActions).then(() => {\r\n      self._spinner.stop()\r\n\r\n      self._needRender = true\r\n\r\n      self._refreshTitle()\r\n      this.dispatchEvent({ type: 'buildingDone' })\r\n      self._building = false\r\n    })\r\n  }\r\n\r\n  /** Mark all representations for rebuilding */\r\n  rebuildAll() {\r\n    this._forEachComplexVisual((visual) => {\r\n      visual.setNeedsRebuild()\r\n    })\r\n  }\r\n\r\n  _refreshTitle(appendix) {\r\n    let title\r\n    appendix = appendix === undefined ? '' : appendix\r\n    const visual = this._getComplexVisual()\r\n    if (visual) {\r\n      title = visual.getComplex().name\r\n      const rep = visual.repGet(visual.repCurrent())\r\n      title += rep ? ` – ${rep.mode.name} Mode` : ''\r\n    } else {\r\n      title = Object.keys(this._visuals).length > 0 ? 'Unknown' : 'No Data'\r\n    }\r\n    title += appendix\r\n\r\n    this.dispatchEvent({ type: 'titleChanged', data: title })\r\n  }\r\n\r\n  setNeedRender() {\r\n    this._needRender = true\r\n  }\r\n\r\n  _extractRepresentation() {\r\n    const changed = []\r\n\r\n    this._forEachComplexVisual((visual) => {\r\n      if (visual.getSelectionCount() === 0) {\r\n        return\r\n      }\r\n\r\n      const selector = visual.buildSelectorFromMask(\r\n        1 << visual.getSelectionBit()\r\n      )\r\n      const defPreset = settings.now.presets.default\r\n      const res = visual.repAdd({\r\n        selector,\r\n        mode: defPreset[0].mode.id,\r\n        colorer: defPreset[0].colorer.id,\r\n        material: defPreset[0].material.id\r\n      })\r\n      if (!res) {\r\n        if (visual.repCount() === ComplexVisual.NUM_REPRESENTATION_BITS) {\r\n          this.logger.warn(\r\n            `Number of representations is limited to ${ComplexVisual.NUM_REPRESENTATION_BITS}`\r\n          )\r\n        }\r\n        return\r\n      }\r\n\r\n      this.dispatchEvent({\r\n        type: 'repAdded',\r\n        index: res.index,\r\n        name: visual.name\r\n      })\r\n      visual.repCurrent(res.index)\r\n\r\n      changed.push(visual.name)\r\n    })\r\n\r\n    if (changed.length > 0) {\r\n      this.logger.report(\r\n        `New representation from selection for complexes: ${changed.join(', ')}`\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Change current representation list.\r\n   * @param {array} reps - Representation list.\r\n   */\r\n  _setReps(reps) {\r\n    reps = reps || (this._opts && this._opts.reps) || []\r\n    this._forEachComplexVisual((visual) => visual.resetReps(reps))\r\n  }\r\n\r\n  /**\r\n   * Apply existing preset to current scene.\r\n   * @param preset\r\n   */\r\n  applyPreset(preset) {\r\n    const { presets } = settings.now\r\n    const presList = [\r\n      preset || settings.defaults.preset,\r\n      settings.defaults.preset,\r\n      Object.keys(presets)[0]\r\n    ]\r\n    let reps = null\r\n    for (let i = 0; !reps && i < presList.length; ++i) {\r\n      settings.set('preset', presList[i])\r\n      reps = presets[settings.now.preset]\r\n      if (!reps) {\r\n        this.logger.warn(`Unknown preset \"${settings.now.preset}\"`)\r\n      }\r\n    }\r\n    this._setReps(reps)\r\n  }\r\n\r\n  /**\r\n   * Reset current representation list to initial values.\r\n   * @param {string} [preset] - The source preset in case of uninitialized representation list.\r\n   */\r\n  resetReps(preset) {\r\n    const reps = this._opts && this._opts.reps\r\n    if (reps) {\r\n      this._setReps(reps)\r\n    } else {\r\n      this.applyPreset(preset)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get number of representations created so far.\r\n   * @returns {number} Number of reps.\r\n   */\r\n  repCount(name) {\r\n    const visual = this._getComplexVisual(name)\r\n    return visual ? visual.repCount() : 0\r\n  }\r\n\r\n  /**\r\n   * Get or set the current representation index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\r\n   * @param {string=} [name] - Complex name. Defaults to the current one.\r\n   * @returns {number} The current index.\r\n   */\r\n  repCurrent(index, name) {\r\n    const visual = this._getComplexVisual(name)\r\n    const newIdx = visual ? visual.repCurrent(index) : -1\r\n    if (index && newIdx !== index) {\r\n      this.logger.warn(\r\n        `Representation ${index} was not found. Current rep remains unchanged.`\r\n      )\r\n    }\r\n    return newIdx\r\n  }\r\n\r\n  /**\r\n   * Get or set representation by index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount}(). Defaults to the current one.\r\n   * @param {object=} rep - Optional representation description.\r\n   * @param {string=} rep.selector - Selector string.\r\n   * @param {string=} rep.mode - Mode id.\r\n   * @param {string=} rep.colorer - Colorer id.\r\n   * @param {string=} rep.material - Material id.\r\n   * @returns {?object} Representation description.\r\n   */\r\n  rep(index, rep) {\r\n    const visual = this._getComplexVisual('')\r\n    if (!visual) {\r\n      return null\r\n    }\r\n    const res = visual.rep(index, rep)\r\n    if (res.status === 'created') {\r\n      this.dispatchEvent({\r\n        type: 'repAdded',\r\n        index: res.index,\r\n        name: visual.name\r\n      })\r\n    } else if (res.status === 'changed') {\r\n      this.dispatchEvent({\r\n        type: 'repChanged',\r\n        index: res.index,\r\n        name: visual.name\r\n      })\r\n    }\r\n    return res.desc\r\n  }\r\n\r\n  /**\r\n   * Get representation (not just description) by index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount}(). Defaults to the current one.\r\n   * @returns {?object} Representation.\r\n   */\r\n  repGet(index, name) {\r\n    const visual = this._getComplexVisual(name)\r\n    return visual ? visual.repGet(index) : null\r\n  }\r\n\r\n  /**\r\n   * Add new representation.\r\n   * @param {object=} rep - Representation description.\r\n   * @returns {number} Index of the new representation.\r\n   */\r\n  repAdd(rep, name) {\r\n    const visual = this._getComplexVisual(name)\r\n    if (!visual) {\r\n      return -1\r\n    }\r\n\r\n    const res = visual.repAdd(rep)\r\n    if (res) {\r\n      this.dispatchEvent({ type: 'repAdded', index: res.index, name })\r\n      return res.index\r\n    }\r\n    return -1\r\n  }\r\n\r\n  /**\r\n   * Remove representation.\r\n   * @param {number=} index - Zero-based representation index.\r\n   */\r\n  repRemove(index, name) {\r\n    const visual = this._getComplexVisual(name)\r\n    if (!visual) {\r\n      return\r\n    }\r\n\r\n    visual.repRemove(index)\r\n    this.dispatchEvent({ type: 'repRemoved', index, name })\r\n  }\r\n\r\n  /**\r\n   * Hide representation.\r\n   * @param {number} index - Zero-based representation index.\r\n   * @param {boolean=} hide - Specify false to make rep visible, true to hide (by default).\r\n   */\r\n  repHide(index, hide, name) {\r\n    this._needRender = true\r\n    const visual = this._getComplexVisual(name)\r\n    return visual ? visual.repHide(index, hide) : null\r\n  }\r\n\r\n  _setEditMode(mode) {\r\n    this._editMode = mode\r\n\r\n    const elem = this._msgMode\r\n    if (elem) {\r\n      elem.style.opacity = mode === EDIT_MODE.COMPLEX ? 0.0 : 1.0\r\n\r\n      if (mode !== EDIT_MODE.COMPLEX) {\r\n        const t = elem.getElementsByTagName('p')[0]\r\n        t.innerHTML =\r\n          mode === EDIT_MODE.COMPONENT\r\n            ? 'COMPONENT EDIT MODE'\r\n            : 'FRAGMENT EDIT MODE'\r\n      }\r\n    }\r\n\r\n    this.dispatchEvent({\r\n      type: 'editModeChanged',\r\n      data: mode === EDIT_MODE.COMPLEX\r\n    })\r\n  }\r\n\r\n  _enterComponentEditMode() {\r\n    if (this._editMode !== EDIT_MODE.COMPLEX) {\r\n      return\r\n    }\r\n\r\n    const editors = []\r\n    this._forEachComplexVisual((visual) => {\r\n      const editor = visual.beginComponentEdit()\r\n      if (editor) {\r\n        editors.push(editor)\r\n      }\r\n    })\r\n\r\n    if (editors === []) {\r\n      return\r\n    }\r\n\r\n    this._editors = editors\r\n\r\n    this.logger.info('COMPONENT EDIT MODE -- ON')\r\n    this._setEditMode(EDIT_MODE.COMPONENT)\r\n    this._objectControls.keysTranslateObj(true)\r\n  }\r\n\r\n  _applyComponentEdit() {\r\n    if (this._editMode !== EDIT_MODE.COMPONENT) {\r\n      return\r\n    }\r\n\r\n    this._objectControls.stop()\r\n    this._objectControls.keysTranslateObj(false)\r\n\r\n    for (let i = 0; i < this._editors.length; ++i) {\r\n      this._editors[i].apply()\r\n    }\r\n    this._editors = []\r\n\r\n    this.logger.info('COMPONENT EDIT MODE -- OFF (applied)')\r\n    this._setEditMode(EDIT_MODE.COMPLEX)\r\n\r\n    this.rebuildAll()\r\n  }\r\n\r\n  _discardComponentEdit() {\r\n    if (this._editMode !== EDIT_MODE.COMPONENT) {\r\n      return\r\n    }\r\n\r\n    this._objectControls.stop()\r\n    this._objectControls.keysTranslateObj(false)\r\n\r\n    for (let i = 0; i < this._editors.length; ++i) {\r\n      this._editors[i].discard()\r\n    }\r\n    this._editors = []\r\n\r\n    this.logger.info('COMPONENT EDIT MODE -- OFF (discarded)')\r\n    this._setEditMode(EDIT_MODE.COMPLEX)\r\n\r\n    this._needRender = true\r\n    this.rebuildAll()\r\n  }\r\n\r\n  _enterFragmentEditMode() {\r\n    if (this._editMode !== EDIT_MODE.COMPLEX) {\r\n      return\r\n    }\r\n\r\n    const selectedVisuals = []\r\n    this._forEachComplexVisual((visual) => {\r\n      if (visual instanceof ComplexVisual && visual.getSelectionCount() > 0) {\r\n        selectedVisuals.push(visual)\r\n      }\r\n    })\r\n\r\n    if (selectedVisuals.length !== 1) {\r\n      // either we have no selection or\r\n      // we have selected atoms in two or more visuals -- not supported\r\n      return\r\n    }\r\n\r\n    const editor = selectedVisuals[0].beginFragmentEdit()\r\n    if (!editor) {\r\n      return\r\n    }\r\n    this._editors = [editor]\r\n\r\n    this.logger.info('FRAGMENT EDIT MODE -- ON (single bond)')\r\n    this._setEditMode(EDIT_MODE.FRAGMENT)\r\n    this._objectControls.allowTranslation(false)\r\n    this._objectControls.allowAltObjFreeRotation(editor.isFreeRotationAllowed())\r\n\r\n    this._needRender = true\r\n  }\r\n\r\n  _applyFragmentEdit() {\r\n    if (this._editMode !== EDIT_MODE.FRAGMENT) {\r\n      return\r\n    }\r\n\r\n    this._objectControls.stop()\r\n\r\n    for (let i = 0; i < this._editors.length; ++i) {\r\n      this._editors[i].apply()\r\n    }\r\n    this._editors = []\r\n\r\n    this.logger.info('FRAGMENT EDIT MODE -- OFF (applied)')\r\n    this._setEditMode(EDIT_MODE.COMPLEX)\r\n    this._objectControls.allowTranslation(true)\r\n    this._objectControls.allowAltObjFreeRotation(true)\r\n\r\n    this.rebuildAll()\r\n  }\r\n\r\n  _discardFragmentEdit() {\r\n    if (this._editMode !== EDIT_MODE.FRAGMENT) {\r\n      return\r\n    }\r\n\r\n    this._objectControls.stop()\r\n\r\n    for (let i = 0; i < this._editors.length; ++i) {\r\n      this._editors[i].discard()\r\n    }\r\n    this._editors = []\r\n\r\n    this.logger.info('FRAGMENT EDIT MODE -- OFF (discarded)')\r\n    this._setEditMode(EDIT_MODE.COMPLEX)\r\n    this._objectControls.allowTranslation(true)\r\n    this._objectControls.allowAltObjFreeRotation(true)\r\n\r\n    this._needRender = true\r\n  }\r\n\r\n  _onPick(event) {\r\n    if (!settings.now.picking) {\r\n      // picking is disabled\r\n      return\r\n    }\r\n\r\n    if (this._animInterval !== null) {\r\n      // animation playback is on\r\n      return\r\n    }\r\n\r\n    if (this._editMode === EDIT_MODE.FRAGMENT) {\r\n      // prevent picking in fragment edit mode\r\n      return\r\n    }\r\n\r\n    if (this._objectControls.isEditingAltObj()) {\r\n      // prevent picking during component rotation\r\n      return\r\n    }\r\n\r\n    // update last pick & find complex\r\n    let complex = null\r\n    if (event.obj.atom) {\r\n      complex = event.obj.atom.residue.getChain().getComplex()\r\n      this._lastPick = event.obj.atom\r\n    } else if (event.obj.residue) {\r\n      complex = event.obj.residue.getChain().getComplex()\r\n      this._lastPick = event.obj.residue\r\n    } else if (event.obj.chain) {\r\n      complex = event.obj.chain.getComplex()\r\n      this._lastPick = event.obj.chain\r\n    } else if (event.obj.molecule) {\r\n      complex = event.obj.molecule.complex\r\n      this._lastPick = event.obj.molecule\r\n    } else {\r\n      this._lastPick = null\r\n    }\r\n\r\n    function _updateSelection(visual) {\r\n      visual.updateSelectionMask(event.obj)\r\n      visual.rebuildSelectionGeometry()\r\n    }\r\n\r\n    // update visual\r\n    if (complex) {\r\n      const visual = this._getVisualForComplex(complex)\r\n      if (visual) {\r\n        _updateSelection(visual)\r\n        this._needRender = true\r\n      }\r\n    } else {\r\n      this._forEachComplexVisual(_updateSelection)\r\n      this._needRender = true\r\n    }\r\n\r\n    this._updateInfoPanel()\r\n    this.dispatchEvent(event)\r\n  }\r\n\r\n  _onKeyDown(event) {\r\n    if (!this._running || !this._hotKeysEnabled) {\r\n      return\r\n    }\r\n\r\n    switch (event.keyCode) {\r\n      case 'C'.charCodeAt(0):\r\n        if (settings.now.editing) {\r\n          this._enterComponentEditMode()\r\n        }\r\n        break\r\n      case 'F'.charCodeAt(0):\r\n        if (settings.now.editing) {\r\n          this._enterFragmentEditMode()\r\n        }\r\n        break\r\n      case 'A'.charCodeAt(0):\r\n        switch (this._editMode) {\r\n          case EDIT_MODE.COMPONENT:\r\n            this._applyComponentEdit()\r\n            break\r\n          case EDIT_MODE.FRAGMENT:\r\n            this._applyFragmentEdit()\r\n            break\r\n          default:\r\n            break\r\n        }\r\n        break\r\n      case 'D'.charCodeAt(0):\r\n        switch (this._editMode) {\r\n          case EDIT_MODE.COMPONENT:\r\n            this._discardComponentEdit()\r\n            break\r\n          case EDIT_MODE.FRAGMENT:\r\n            this._discardFragmentEdit()\r\n            break\r\n          default:\r\n            break\r\n        }\r\n        break\r\n      case 'S'.charCodeAt(0):\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        settings.set('ao', !settings.now.ao)\r\n        this._needRender = true\r\n        break\r\n      case 107:\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        this._forEachComplexVisual((visual) => {\r\n          visual.expandSelection()\r\n          visual.rebuildSelectionGeometry()\r\n        })\r\n        this._updateInfoPanel()\r\n        this._needRender = true\r\n        break\r\n      case 109:\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        this._forEachComplexVisual((visual) => {\r\n          visual.shrinkSelection()\r\n          visual.rebuildSelectionGeometry()\r\n        })\r\n        this._updateInfoPanel()\r\n        this._needRender = true\r\n        break\r\n      default:\r\n    }\r\n  }\r\n\r\n  _onKeyUp(event) {\r\n    if (!this._running || !this._hotKeysEnabled) {\r\n      return\r\n    }\r\n\r\n    if (event.keyCode === 'X'.charCodeAt(0)) {\r\n      this._extractRepresentation()\r\n    }\r\n  }\r\n\r\n  _updateInfoPanel() {\r\n    const info = this._msgAtomInfo.getElementsByTagName('p')[0]\r\n    let atom\r\n    let residue\r\n\r\n    let count = 0\r\n    this._forEachComplexVisual((visual) => {\r\n      count += visual.getSelectionCount()\r\n    })\r\n\r\n    while (info.firstChild) {\r\n      info.removeChild(info.firstChild)\r\n    }\r\n\r\n    if (count === 0) {\r\n      this._msgAtomInfo.style.opacity = 0.0\r\n      return\r\n    }\r\n\r\n    let firstLine = `${String(count)} atom${count !== 1 ? 's' : ''} selected`\r\n    if (this._lastPick !== null) {\r\n      firstLine += ', the last pick:'\r\n    }\r\n    let secondLine = ''\r\n    let aName = ''\r\n    let coordLine = ''\r\n\r\n    if (this._lastPick instanceof Atom) {\r\n      atom = this._lastPick\r\n      residue = atom.residue\r\n\r\n      aName = atom.name\r\n      const location =\r\n        atom.location !== 32 ? String.fromCharCode(atom.location) : '' // 32 is code of white-space\r\n      secondLine = `${atom.element.fullName} #${atom.serial}${location}: \\\r\n      ${residue._chain._name}.${residue._type._name}${\r\n        residue._sequence\r\n      }${residue._icode.trim()}.`\r\n      secondLine += aName\r\n\r\n      coordLine = `Coord: (${atom.position.x.toFixed(2).toString()},\\\r\n     ${atom.position.y.toFixed(2).toString()},\\\r\n     ${atom.position.z.toFixed(2).toString()})`\r\n    } else if (this._lastPick instanceof Residue) {\r\n      residue = this._lastPick\r\n\r\n      secondLine = `${residue._type._fullName}: \\\r\n      ${residue._chain._name}.${residue._type._name}${\r\n        residue._sequence\r\n      }${residue._icode.trim()}`\r\n    } else if (this._lastPick instanceof Chain) {\r\n      secondLine = `chain ${this._lastPick._name}`\r\n    } else if (this._lastPick instanceof Molecule) {\r\n      secondLine = `molecule ${this._lastPick._name}`\r\n    }\r\n\r\n    info.appendChild(document.createTextNode(firstLine))\r\n\r\n    if (secondLine !== '') {\r\n      info.appendChild(document.createElement('br'))\r\n      info.appendChild(document.createTextNode(secondLine))\r\n    }\r\n\r\n    if (coordLine !== '') {\r\n      info.appendChild(document.createElement('br'))\r\n      info.appendChild(document.createTextNode(coordLine))\r\n    }\r\n\r\n    this._msgAtomInfo.style.opacity = 1.0\r\n  }\r\n\r\n  _getAltObj() {\r\n    if (this._editors) {\r\n      let altObj = null\r\n      for (let i = 0; i < this._editors.length; ++i) {\r\n        const nextAltObj = this._editors[i].getAltObj()\r\n        if (nextAltObj.objects.length > 0) {\r\n          if (altObj) {\r\n            // we have selected atoms in two or more visuals -- not supported\r\n            altObj = null\r\n            break\r\n          }\r\n          altObj = nextAltObj\r\n        }\r\n      }\r\n      if (altObj) {\r\n        return altObj\r\n      }\r\n    }\r\n\r\n    return {\r\n      objects: [],\r\n      pivot: new Vector3(0, 0, 0)\r\n    }\r\n  }\r\n\r\n  resetPivot() {\r\n    const boundingBox = new Box3()\r\n    const center = new Vector3()\r\n    boundingBox.makeEmpty()\r\n    this._forEachVisual((visual) => {\r\n      boundingBox.union(visual.getBoundaries().boundingBox)\r\n    })\r\n\r\n    boundingBox.getCenter(center)\r\n    this._objectControls.setPivot(center.negate())\r\n    this.dispatchEvent({ type: 'transform' })\r\n  }\r\n\r\n  setPivotResidue(residue) {\r\n    const center = new Vector3()\r\n    const visual = this._getVisualForComplex(residue.getChain().getComplex())\r\n    if (!visual) {\r\n      return\r\n    }\r\n\r\n    if (residue._controlPoint) {\r\n      center.copy(residue._controlPoint)\r\n    } else {\r\n      let x = 0\r\n      let y = 0\r\n      let z = 0\r\n      const amount = residue._atoms.length\r\n      for (let i = 0; i < amount; ++i) {\r\n        const p = residue._atoms[i].position\r\n        x += p.x / amount\r\n        y += p.y / amount\r\n        z += p.z / amount\r\n      }\r\n      center.set(x, y, z)\r\n    }\r\n    center.applyMatrix4(visual.matrix).negate()\r\n    this._objectControls.setPivot(center)\r\n    this.dispatchEvent({ type: 'transform' })\r\n  }\r\n\r\n  setPivotAtom(atom) {\r\n    const center = new Vector3()\r\n    const visual = this._getVisualForComplex(\r\n      atom.residue.getChain().getComplex()\r\n    )\r\n    if (!visual) {\r\n      return\r\n    }\r\n\r\n    center.copy(atom.position)\r\n    center.applyMatrix4(visual.matrix).negate()\r\n    this._objectControls.setPivot(center)\r\n    this.dispatchEvent({ type: 'transform' })\r\n  }\r\n\r\n  getSelectionCenter(center, includesAtom, selector) {\r\n    const _centerInVisual = new Vector3(0.0, 0.0, 0.0)\r\n    center.set(0.0, 0.0, 0.0)\r\n    let count = 0\r\n\r\n    this._forEachComplexVisual((visual) => {\r\n      if (\r\n        visual.getSelectionCenter(\r\n          _centerInVisual,\r\n          includesAtom,\r\n          selector || visual.getSelectionBit()\r\n        )\r\n      ) {\r\n        center.add(_centerInVisual)\r\n        count++\r\n      }\r\n    })\r\n    if (count === 0) {\r\n      return false\r\n    }\r\n    center.divideScalar(count)\r\n    center.negate()\r\n    return true\r\n  }\r\n\r\n  setPivotSubset(selector) {\r\n    const _center = new Vector3(0.0, 0.0, 0.0)\r\n    const includesAtom = selector\r\n      ? _includesInSelector\r\n      : _includesInCurSelection\r\n\r\n    if (this.getSelectionCenter(_center, includesAtom, selector)) {\r\n      this._objectControls.setPivot(_center)\r\n      this.dispatchEvent({ type: 'transform' })\r\n    } else {\r\n      this.logger.warn('selection is empty. Center operation not performed')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Makes a screenshot.\r\n   * @param {number} [width] - Width of an image. Defaults to the canvas width.\r\n   * @param {number} [height] - Height of an image. Defaults to the width (square) or canvas height,\r\n   *        if width is omitted too.\r\n   * @returns {string} Data URL representing the image contents.\r\n   */\r\n  screenshot(width, height) {\r\n    const gfx = this._gfx\r\n    const deviceWidth = gfx.renderer.domElement.width\r\n    const deviceHeight = gfx.renderer.domElement.height\r\n\r\n    function fov2Tan(fov) {\r\n      return Math.tan(MathUtils.degToRad(0.5 * fov))\r\n    }\r\n\r\n    function tan2Fov(tan) {\r\n      return MathUtils.radToDeg(Math.atan(tan)) * 2.0\r\n    }\r\n\r\n    function getDataURL() {\r\n      let dataURL\r\n      const currBrowser = utils.getBrowser()\r\n\r\n      if (currBrowser === utils.browserType.SAFARI) {\r\n        const canvas = document.createElement('canvas')\r\n        const canvasContext = canvas.getContext('2d')\r\n\r\n        canvas.width = width === undefined ? deviceWidth : width\r\n        canvas.height = height === undefined ? deviceHeight : height\r\n\r\n        canvasContext.drawImage(\r\n          gfx.renderer.domElement,\r\n          0,\r\n          0,\r\n          canvas.width,\r\n          canvas.height\r\n        )\r\n        dataURL = canvas.toDataURL('image/png')\r\n      } else {\r\n        // Copy current canvas to screenshot\r\n        dataURL = gfx.renderer.domElement.toDataURL('image/png')\r\n      }\r\n      return dataURL\r\n    }\r\n    height = height || width\r\n\r\n    let screenshotURI\r\n    if (\r\n      (width === undefined && height === undefined) ||\r\n      (width === deviceWidth && height === deviceHeight)\r\n    ) {\r\n      // renderer.domElement.toDataURL('image/png') returns flipped image in Safari\r\n      // It hasn't been resolved yet, but getScreenshotSafari()\r\n      // fixes it using an extra canvas.\r\n      screenshotURI = getDataURL()\r\n    } else {\r\n      const originalAspect = gfx.camera.aspect\r\n      const originalFov = gfx.camera.fov\r\n      const originalTanFov2 = fov2Tan(gfx.camera.fov)\r\n\r\n      // screenshot should contain the principal area of interest (a centered square touching screen sides)\r\n      const areaOfInterestSize = Math.min(gfx.width, gfx.height)\r\n      const areaOfInterestTanFov2 =\r\n        (originalTanFov2 * areaOfInterestSize) / gfx.height\r\n\r\n      // set appropriate camera aspect & FOV\r\n      const shotAspect = width / height\r\n      gfx.renderer.setPixelRatio(1)\r\n      gfx.camera.aspect = shotAspect\r\n      gfx.camera.fov = tan2Fov(\r\n        areaOfInterestTanFov2 / Math.min(shotAspect, 1.0)\r\n      )\r\n      gfx.camera.updateProjectionMatrix()\r\n\r\n      // resize canvas to the required size of screenshot\r\n      gfx.renderer.setDrawingBufferSize(width, height, 1)\r\n\r\n      // make screenshot\r\n      this._renderFrame(settings.now.stereo)\r\n      screenshotURI = getDataURL()\r\n\r\n      // restore original camera & canvas proportions\r\n      gfx.renderer.setPixelRatio(window.devicePixelRatio)\r\n      gfx.camera.aspect = originalAspect\r\n      gfx.camera.fov = originalFov\r\n      gfx.camera.updateProjectionMatrix()\r\n      gfx.renderer.setDrawingBufferSize(\r\n        gfx.width,\r\n        gfx.height,\r\n        window.devicePixelRatio\r\n      )\r\n      this._needRender = true\r\n    }\r\n\r\n    return screenshotURI\r\n  }\r\n\r\n  /**\r\n   * Makes screenshot and initiates a download.\r\n   * @param {string} [filename] - Name of a file. Default to a 'screenshot-XXXXX.png', where XXXXX is a current\r\n   *        date/time in seconds.\r\n   * @param {number} [width] - Width of an image. Defaults to the canvas width.\r\n   * @param {number} [height] - Height of an image. Defaults to the width (square) or canvas height,\r\n   *        if width is omitted too.\r\n   */\r\n  screenshotSave(filename, width, height) {\r\n    const uri = this.screenshot(width, height)\r\n    utils.shotDownload(uri, filename)\r\n  }\r\n\r\n  save(opts) {\r\n    this._export(opts.fileType)\r\n      .then((dataString) => {\r\n        const filename = this._visuals[this._curVisualName]._complex.name\r\n        utils.download(dataString, filename, opts.fileType)\r\n        this._refreshTitle()\r\n        this.dispatchEvent({ type: 'exportingDone' })\r\n      })\r\n      .catch((error) => {\r\n        this.logger.error('Could not export data')\r\n        this.logger.debug(error)\r\n        this._refreshTitle()\r\n        this.dispatchEvent({ type: 'exportingDone', error })\r\n      })\r\n  }\r\n\r\n  _tweakResolution() {\r\n    const maxPerf = [\r\n      ['poor', 100],\r\n      ['low', 500],\r\n      ['medium', 1000],\r\n      ['high', 5000],\r\n      ['ultra', Number.MAX_VALUE]\r\n    ]\r\n\r\n    let atomCount = 0\r\n    this._forEachComplexVisual((visual) => {\r\n      atomCount += visual.getComplex().getAtomCount()\r\n    })\r\n\r\n    if (atomCount > 0) {\r\n      const performance = (this._gfxScore * 10e5) / atomCount\r\n      // set resolution based on estimated performance\r\n      for (let i = 0; i < maxPerf.length; ++i) {\r\n        if (performance < maxPerf[i][1]) {\r\n          this._autoChangeResolution(maxPerf[i][0])\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _autoChangeResolution(resolution) {\r\n    if (resolution !== settings.now.resolution) {\r\n      this.logger.report(\r\n        `Your rendering resolution was changed to \"${resolution}\" for best performance.`\r\n      )\r\n    }\r\n    settings.now.resolution = resolution\r\n  }\r\n\r\n  /**\r\n   * Save current settings to cookies.\r\n   */\r\n  saveSettings() {\r\n    this._cookies.setCookie(\r\n      this._opts.settingsCookie,\r\n      JSON.stringify(this.settings.getDiffs(true))\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Load settings from cookies.\r\n   */\r\n  restoreSettings() {\r\n    try {\r\n      const cookie = this._cookies.getCookie(this._opts.settingsCookie)\r\n      const diffs = cookie ? JSON.parse(cookie) : {}\r\n      this.settings.applyDiffs(diffs, true)\r\n    } catch (e) {\r\n      this.logger.error(`Cookies parse error: ${e.message}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset current settings to the defaults.\r\n   */\r\n  resetSettings() {\r\n    this.settings.reset()\r\n  }\r\n\r\n  /*\r\n   * DANGEROUS and TEMPORARY. The method should change or disappear in future versions.\r\n   * @param {string|object} opts - See {@link Miew} constructor.\r\n   * @see {@link Miew#set}, {@link Miew#repAdd}, {@link Miew#rep}.\r\n   */\r\n  setOptions(opts) {\r\n    if (typeof opts === 'string') {\r\n      opts = Miew.options.fromAttr(opts)\r\n    }\r\n    if (opts.reps) {\r\n      this._opts.reps = null\r\n    }\r\n    merge(this._opts, opts)\r\n    if (opts.settings) {\r\n      this.set(opts.settings)\r\n    }\r\n\r\n    this._opts._objects = opts._objects\r\n    this._resetObjects()\r\n\r\n    if (opts.load) {\r\n      this.load(opts.load, { fileType: opts.type })\r\n    }\r\n\r\n    if (opts.preset) {\r\n      settings.now.preset = opts.preset\r\n    }\r\n\r\n    if (opts.reps) {\r\n      this.resetReps(opts.preset)\r\n    }\r\n\r\n    if (this._opts.view) {\r\n      this.view(this._opts.view)\r\n      delete this._opts.view\r\n    }\r\n\r\n    const visual = this._getComplexVisual()\r\n    if (visual) {\r\n      visual.getComplex().resetCurrentUnit()\r\n      if (isNumber(opts.unit)) {\r\n        visual.getComplex().setCurrentUnit(opts.unit)\r\n      }\r\n      this.resetView()\r\n      this.rebuildAll()\r\n    }\r\n  }\r\n\r\n  info(name) {\r\n    const visual = this._getComplexVisual(name)\r\n    if (!visual) {\r\n      return {}\r\n    }\r\n    const complex = visual.getComplex()\r\n    const { metadata } = complex\r\n    return {\r\n      id: metadata.id || complex.name || 'UNKNOWN',\r\n      title: (metadata.title && metadata.title.join(' ')) || 'UNKNOWN DATA',\r\n      atoms: complex.getAtomCount(),\r\n      bonds: complex.getBondCount(),\r\n      residues: complex.getResidueCount(),\r\n      chains: complex.getChainCount()\r\n    }\r\n  }\r\n\r\n  /*\r\n   * OBJECTS SEGMENT\r\n   */\r\n\r\n  addObject(objData, bThrow) {\r\n    let Ctor = null\r\n\r\n    if (objData.type === LinesObject.prototype.type) {\r\n      Ctor = LinesObject\r\n    }\r\n\r\n    if (Ctor === null) {\r\n      throw new Error(`Unknown scene object type - ${objData.type}`)\r\n    }\r\n\r\n    try {\r\n      const newObj = new Ctor(objData.params, objData.opts)\r\n      this._addSceneObject(newObj)\r\n    } catch (error) {\r\n      if (!bThrow) {\r\n        this.logger.debug(\r\n          `Error during scene object creation: ${error.message}`\r\n        )\r\n      } else {\r\n        throw error\r\n      }\r\n    }\r\n    this._needRender = true\r\n  }\r\n\r\n  _addSceneObject(sceneObject) {\r\n    const visual = this._getComplexVisual()\r\n    if (sceneObject.build && visual) {\r\n      sceneObject.build(visual.getComplex())\r\n      this._gfx.pivot.add(sceneObject.getGeometry())\r\n    }\r\n    const objects = this._objects\r\n    objects[objects.length] = sceneObject\r\n  }\r\n\r\n  _updateObjsToFrame(frameData) {\r\n    const objs = this._objects\r\n    for (let i = 0, n = objs.length; i < n; ++i) {\r\n      if (objs[i].updateToFrame) {\r\n        objs[i].updateToFrame(frameData)\r\n      }\r\n    }\r\n  }\r\n\r\n  _resetObjects() {\r\n    const objs = this._opts._objects\r\n\r\n    this._objects = []\r\n    if (objs) {\r\n      for (let i = 0, n = objs.length; i < n; ++i) {\r\n        this.addObject(objs[i], false)\r\n      }\r\n    }\r\n  }\r\n\r\n  removeObject(index) {\r\n    const obj = this._objects[index]\r\n    if (!obj) {\r\n      throw new Error(`Scene object with index ${index} does not exist`)\r\n    }\r\n    obj.destroy()\r\n    this._objects.splice(index, 1)\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Get a string with a URL to reproduce the current scene.\r\n   *\r\n   * @param {boolean} [opts.compact=true] - set this flag to false if you want to include full\r\n   * preset information regardless of the differences with settings\r\n   * @param {boolean} [opts.settings=false] - when this flag is true, changes in settings are included\r\n   * @param {boolean} [opts.view=false] - when this flag is true, a view information is included\r\n   * @returns {string} URL\r\n   */\r\n  getURL(opts) {\r\n    return options.toURL(\r\n      this.getState(\r\n        defaults(opts, {\r\n          compact: true,\r\n          settings: false,\r\n          view: false\r\n        })\r\n      )\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Get a string with a script to reproduce the current scene.\r\n   *\r\n   * @param {boolean} [opts.compact=true] - set this flag to false if you want to include full\r\n   * preset information regardless of the differences with settings\r\n   * @param {boolean} [opts.settings=true] - when this flag is true, changes in settings are included\r\n   * @param {boolean} [opts.view=true] - when this flag is true, a view information is included\r\n   * @returns {string} script\r\n   */\r\n  getScript(opts) {\r\n    return options.toScript(\r\n      this.getState(\r\n        defaults(opts, {\r\n          compact: true,\r\n          settings: true,\r\n          view: true\r\n        })\r\n      )\r\n    )\r\n  }\r\n\r\n  /*\r\n   * Generates object that represents the current state of representations list\r\n   * @param {boolean} compareWithDefaults - when this flag is true, reps list is compared (if possible)\r\n   * to preset's defaults and only diffs are generated\r\n   */\r\n  _compareReps(complexVisual, compareWithDefaults) {\r\n    const ans = {}\r\n    let repCount = 0\r\n\r\n    if (complexVisual) {\r\n      repCount = complexVisual.repCount()\r\n    }\r\n\r\n    const currPreset = settings.defaults.presets[settings.now.preset]\r\n    let compare = compareWithDefaults\r\n    if (currPreset === undefined || currPreset.length > repCount) {\r\n      compare = false\r\n      ans.preset = 'empty'\r\n    } else if (settings.now.preset !== settings.defaults.preset) {\r\n      ans.preset = settings.now.preset\r\n    }\r\n\r\n    const repsDiff = []\r\n    let emptyReps = true\r\n    for (let i = 0, n = repCount; i < n; ++i) {\r\n      repsDiff[i] = complexVisual\r\n        .repGet(i)\r\n        .compare(compare ? currPreset[i] : null)\r\n      if (!isEmpty(repsDiff[i])) {\r\n        emptyReps = false\r\n      }\r\n    }\r\n    if (!emptyReps) {\r\n      ans.reps = repsDiff\r\n    }\r\n    return ans\r\n  }\r\n\r\n  /*\r\n   * Obtain object that represents current state of miew (might be used as options in constructor).\r\n   * @param {boolean} [opts.compact=true] - set this flag to false if you want to include full\r\n   * preset information regardless of the differences with settings\r\n   * @param {boolean} [opts.settings=false] - when this flag is true, changes in settings are included\r\n   * @param {boolean} [opts.view=false] - when this flag is true, a view information is included\r\n   * @returns {Object} State object.\r\n   */\r\n  getState(opts) {\r\n    const state = {}\r\n\r\n    opts = defaults(opts, {\r\n      compact: true,\r\n      settings: false,\r\n      view: false\r\n    })\r\n\r\n    // load\r\n    const visual = this._getComplexVisual()\r\n    if (visual !== null) {\r\n      const complex = visual.getComplex()\r\n      const { metadata } = complex\r\n      if (metadata.id) {\r\n        const format = metadata.format ? `${metadata.format}:` : ''\r\n        state.load = format + metadata.id\r\n      }\r\n      const unit = complex.getCurrentUnit()\r\n      if (unit !== 1) {\r\n        state.unit = unit\r\n      }\r\n    }\r\n\r\n    // representations\r\n    const repsInfo = this._compareReps(visual, opts.compact)\r\n    if (repsInfo.preset) {\r\n      state.preset = repsInfo.preset\r\n    }\r\n\r\n    if (repsInfo.reps) {\r\n      state.reps = repsInfo.reps\r\n    }\r\n\r\n    // objects\r\n    const objects = this._objects\r\n    const objectsState = []\r\n    for (let i = 0, n = objects.length; i < n; ++i) {\r\n      objectsState[i] = objects[i].identify()\r\n    }\r\n    if (objects.length > 0) {\r\n      state._objects = objectsState\r\n    }\r\n\r\n    // view\r\n    if (opts.view) {\r\n      state.view = this.view()\r\n    }\r\n\r\n    // settings\r\n    if (opts.settings) {\r\n      const diff = this.settings.getDiffs(false)\r\n      if (!isEmpty(diff)) {\r\n        state.settings = diff\r\n      }\r\n    }\r\n\r\n    return state\r\n  }\r\n\r\n  /**\r\n   * Get parameter value.\r\n   * @param {string} param - Parameter name or path (e.g. 'modes.BS.atom').\r\n   * @param {*=} value - Default value.\r\n   * @returns {*} Parameter value.\r\n   */\r\n  get(param, value) {\r\n    return settings.get(param, value)\r\n  }\r\n\r\n  _clipPlaneUpdateValue(radius) {\r\n    const clipPlaneValue = Math.max(\r\n      this._gfx.camera.position.z - radius * settings.now.draft.clipPlaneFactor,\r\n      settings.now.camNear\r\n    )\r\n\r\n    const opts = { clipPlaneValue }\r\n    this._forEachComplexVisual((visual) => {\r\n      visual.setUberOptions(opts)\r\n    })\r\n    for (let i = 0, n = this._objects.length; i < n; ++i) {\r\n      const obj = this._objects[i]\r\n      if (obj._line) {\r\n        obj._line.material.setUberOptions(opts)\r\n      }\r\n    }\r\n    if (this._picker !== null) {\r\n      this._picker.clipPlaneValue = clipPlaneValue\r\n    }\r\n  }\r\n\r\n  _fogFarUpdateValue() {\r\n    if (this._picker !== null) {\r\n      if (this._gfx.scene.fog) {\r\n        this._picker.fogFarValue = this._gfx.scene.fog.far\r\n      } else {\r\n        this._picker.fogFarValue = undefined\r\n      }\r\n    }\r\n  }\r\n\r\n  _updateShadowmapMeshes(process) {\r\n    this._forEachComplexVisual((visual) => {\r\n      const reprList = visual._reprList\r\n      for (let i = 0, n = reprList.length; i < n; ++i) {\r\n        const repr = reprList[i]\r\n        process(repr.geo, repr.material)\r\n      }\r\n    })\r\n  }\r\n\r\n  _updateMaterials(values, needTraverse = false, process = undefined) {\r\n    this._forEachComplexVisual((visual) =>\r\n      visual.setMaterialValues(values, needTraverse, process)\r\n    )\r\n    for (let i = 0, n = this._objects.length; i < n; ++i) {\r\n      const obj = this._objects[i]\r\n      if (obj._line) {\r\n        obj._line.material.setValues(values)\r\n        obj._line.material.needsUpdate = true\r\n      }\r\n    }\r\n  }\r\n\r\n  _fogAlphaChanged() {\r\n    this._forEachComplexVisual((visual) => {\r\n      visual.setUberOptions({\r\n        fogAlpha: settings.now.fogAlpha\r\n      })\r\n    })\r\n  }\r\n\r\n  _embedWebXR() {\r\n    // switch off\r\n    if (settings.now.stereo !== 'WEBVR') {\r\n      if (this.webVR) {\r\n        this.webVR.disable()\r\n      }\r\n      this.webVR = null\r\n      return\r\n    }\r\n    // switch on\r\n    if (!this.webVR) {\r\n      this.webVR = new WebVRPoC(() => {\r\n        this._requestAnimationFrame(() => this._onTick())\r\n        this._needRender = true\r\n        this._onResize()\r\n      })\r\n    }\r\n    this.webVR.enable(this._gfx)\r\n  }\r\n\r\n  _initOnSettingsChanged() {\r\n    const on = (props, func) => {\r\n      props = isArray(props) ? props : [props]\r\n      props.forEach((prop) => {\r\n        this.settings.addEventListener(`change:${prop}`, func)\r\n      })\r\n    }\r\n\r\n    on('modes.VD.frame', () => {\r\n      const volume = this._getVolumeVisual()\r\n      if (volume === null) return\r\n\r\n      volume.showFrame(settings.now.modes.VD.frame)\r\n      this._needRender = true\r\n    })\r\n\r\n    on('modes.VD.isoMode', () => {\r\n      const volume = this._getVolumeVisual()\r\n      if (volume === null) return\r\n\r\n      volume.getMesh().material.updateDefines()\r\n      this._needRender = true\r\n    })\r\n\r\n    on('bg.color', () => {\r\n      this._onBgColorChanged()\r\n    })\r\n\r\n    on('ao', () => {\r\n      if (settings.now.ao && !isAOSupported(this._gfx.renderer.getContext())) {\r\n        this.logger.warn('Your device or browser does not support ao')\r\n        settings.set('ao', false)\r\n      } else {\r\n        const values = { normalsToGBuffer: settings.now.ao }\r\n        this._setUberMaterialValues(values)\r\n      }\r\n    })\r\n\r\n    on('zSprites', () => {\r\n      if (\r\n        settings.now.zSprites &&\r\n        !arezSpritesSupported(this._gfx.renderer.getContext())\r\n      ) {\r\n        this.logger.warn('Your device or browser does not support zSprites')\r\n        settings.set('zSprites', false)\r\n      }\r\n      this.rebuildAll()\r\n    })\r\n\r\n    on('fogColor', () => {\r\n      this._onFogColorChanged()\r\n    })\r\n\r\n    on('fogColorEnable', () => {\r\n      this._onFogColorChanged()\r\n    })\r\n\r\n    on('bg.transparent', (evt) => {\r\n      const gfx = this._gfx\r\n      if (gfx) {\r\n        gfx.renderer.setClearColor(\r\n          settings.now.bg.color,\r\n          Number(!settings.now.bg.transparent)\r\n        )\r\n      }\r\n      // update materials\r\n      this._updateMaterials({ fogTransparent: evt.value })\r\n      this.rebuildAll()\r\n    })\r\n\r\n    on('draft.clipPlane', (evt) => {\r\n      // update materials\r\n      this._updateMaterials({ clipPlane: evt.value })\r\n      this.rebuildAll()\r\n    })\r\n\r\n    on('shadow.on', (evt) => {\r\n      // update materials\r\n      const values = {\r\n        shadowmap: evt.value,\r\n        shadowmapType: settings.now.shadow.type\r\n      }\r\n      const gfx = this._gfx\r\n      if (gfx) {\r\n        gfx.renderer.shadowMap.enabled = Boolean(values.shadowmap)\r\n      }\r\n      this._updateMaterials(values, true)\r\n      if (values.shadowmap) {\r\n        this._updateShadowCamera()\r\n        this._updateShadowmapMeshes(meshutils.createShadowmapMaterial)\r\n      } else {\r\n        this._updateShadowmapMeshes(meshutils.removeShadowmapMaterial)\r\n      }\r\n      this._needRender = true\r\n    })\r\n\r\n    on('shadow.type', (evt) => {\r\n      // update materials if shadowmap is enable\r\n      if (settings.now.shadow.on) {\r\n        this._updateMaterials({ shadowmapType: evt.value }, true)\r\n        this._needRender = true\r\n      }\r\n    })\r\n\r\n    on('shadow.radius', (evt) => {\r\n      for (let i = 0; i < this._gfx.scene.children.length; i++) {\r\n        if (this._gfx.scene.children[i].shadow !== undefined) {\r\n          const light = this._gfx.scene.children[i]\r\n          light.shadow.radius = evt.value\r\n          this._needRender = true\r\n        }\r\n      }\r\n    })\r\n\r\n    on('fps', () => {\r\n      this._fps.show(settings.now.fps)\r\n    })\r\n\r\n    on(['fog', 'fogNearFactor', 'fogFarFactor'], () => {\r\n      this._updateFog()\r\n      this._needRender = true\r\n    })\r\n\r\n    on('fogAlpha', () => {\r\n      const { fogAlpha } = settings.now\r\n      if (fogAlpha < 0 || fogAlpha > 1) {\r\n        this.logger.warn('fogAlpha must belong range [0,1]')\r\n      }\r\n      this._fogAlphaChanged()\r\n      this._needRender = true\r\n    })\r\n\r\n    on('autoResolution', (evt) => {\r\n      if (evt.value && !this._gfxScore) {\r\n        this.logger.warn(\r\n          'Benchmarks are missed, autoresolution will not work! ' +\r\n            'Autoresolution should be set during miew startup.'\r\n        )\r\n      }\r\n    })\r\n\r\n    on('stereo', () => {\r\n      this._embedWebXR(settings.now.stereo === 'WEBVR')\r\n      this._needRender = true\r\n    })\r\n\r\n    on(['transparency', 'palette'], () => {\r\n      this.rebuildAll()\r\n    })\r\n\r\n    on('resolution', () => {\r\n      // update complex visuals\r\n      this.rebuildAll()\r\n\r\n      // update volume visual\r\n      const volume = this._getVolumeVisual()\r\n      if (volume) {\r\n        volume.getMesh().material.updateDefines()\r\n        this._needRender = true\r\n      }\r\n    })\r\n\r\n    on(\r\n      [\r\n        'axes',\r\n        'fxaa',\r\n        'ao',\r\n        'outline.on',\r\n        'outline.color',\r\n        'outline.threshold',\r\n        'outline.thickness'\r\n      ],\r\n      () => {\r\n        this._needRender = true\r\n      }\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Set parameter value.\r\n   * @param {string|object} params - Parameter name or path (e.g. 'modes.BS.atom') or even settings object.\r\n   * @param {*=} value - Value.\r\n   */\r\n  set(params, value) {\r\n    settings.set(params, value)\r\n  }\r\n\r\n  /**\r\n   * Select atoms with selection string.\r\n   * @param {string} expression - string expression of selection\r\n   * @param {boolean=} append - true to append selection atoms to current selection, false to rewrite selection\r\n   */\r\n  select(expression, append) {\r\n    const visual = this._getComplexVisual()\r\n    if (!visual) {\r\n      return\r\n    }\r\n\r\n    let sel = expression\r\n    if (isString(expression)) {\r\n      sel = selectors.parse(expression).selector\r\n    }\r\n\r\n    visual.select(sel, append)\r\n    this._lastPick = null\r\n\r\n    this._updateInfoPanel()\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Get or set view info packed into string.\r\n   *\r\n   * **Note:** view is stored for *left-handed* cs, euler angles are stored in radians and *ZXY-order*,\r\n   *\r\n   * @param {string=} expression - Optional string encoded the view\r\n   */\r\n  view(expression) {\r\n    const VIEW_VERSION = '1'\r\n    const self = this\r\n    const { pivot } = this._gfx\r\n    let transform = []\r\n    const eulerOrder = 'ZXY'\r\n\r\n    function encode() {\r\n      const pos = pivot.position\r\n      const scale = self._objectControls.getScale() / settings.now.radiusToFit\r\n      const euler = new Euler()\r\n      euler.setFromQuaternion(self._objectControls.getOrientation(), eulerOrder)\r\n      transform = [pos.x, pos.y, pos.z, scale, euler.x, euler.y, euler.z]\r\n      return VIEW_VERSION + utils.arrayToBase64(transform, Float32Array)\r\n    }\r\n\r\n    function decode() {\r\n      // backwards compatible: old non-versioned view is the 0th version\r\n      if (expression.length === 40) {\r\n        expression = `0${expression}`\r\n      }\r\n\r\n      const version = expression[0]\r\n      transform = utils.arrayFromBase64(expression.substr(1), Float32Array)\r\n\r\n      // apply adapter for old versions\r\n      if (version !== VIEW_VERSION) {\r\n        if (version === '0') {\r\n          // cancel radiusToFit included in old views\r\n          transform[3] /= 8.0\r\n        } else {\r\n          // do nothing\r\n          self.logger.warn(\r\n            `Encoded view version mismatch, stored as ${version} vs ${VIEW_VERSION} expected`\r\n          )\r\n          return\r\n        }\r\n      }\r\n\r\n      const interpolator = self._interpolator\r\n      const srcView = interpolator.createView()\r\n      srcView.position.copy(pivot.position)\r\n      srcView.scale = self._objectControls.getScale()\r\n      srcView.orientation.copy(self._objectControls.getOrientation())\r\n\r\n      const dstView = interpolator.createView()\r\n      dstView.position.set(transform[0], transform[1], transform[2])\r\n\r\n      // hack to make preset views work after we moved centering offset to visual nodes\r\n      // FIXME should only store main pivot offset in preset\r\n      if (self._getComplexVisual()) {\r\n        dstView.position.sub(self._getComplexVisual().position)\r\n      }\r\n\r\n      dstView.scale = transform[3] // eslint-disable-line prefer-destructuring\r\n      dstView.orientation.setFromEuler(\r\n        new Euler(transform[4], transform[5], transform[6], eulerOrder)\r\n      )\r\n\r\n      interpolator.setup(srcView, dstView)\r\n    }\r\n\r\n    if (typeof expression === 'undefined') {\r\n      return encode()\r\n    }\r\n    decode()\r\n\r\n    return expression\r\n  }\r\n\r\n  /*\r\n   * Update current view due to viewinterpolator state\r\n   */\r\n  _updateView() {\r\n    const self = this\r\n    const { pivot } = this._gfx\r\n\r\n    const interpolator = this._interpolator\r\n    if (!interpolator.wasStarted()) {\r\n      interpolator.start()\r\n    }\r\n\r\n    if (!interpolator.isMoving()) {\r\n      return\r\n    }\r\n\r\n    const res = interpolator.getCurrentView()\r\n    if (res.success) {\r\n      const curr = res.view\r\n      pivot.position.copy(curr.position)\r\n      self._objectControls.setScale(curr.scale * settings.now.radiusToFit)\r\n      self._objectControls.setOrientation(curr.orientation)\r\n      this.dispatchEvent({ type: 'transform' })\r\n      self._needRender = true\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Translate object by vector\r\n   * @param {number} x - translation value (Ang) along model's X axis\r\n   * @param {number} y - translation value (Ang) along model's Y axis\r\n   * @param {number} z - translation value (Ang) along model's Z axis\r\n   */\r\n  translate(x, y, z) {\r\n    this._objectControls.translatePivot(x, y, z)\r\n    this.dispatchEvent({ type: 'transform' })\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Rotate object by Euler angles\r\n   * @param {number} x - rotation angle around X axis in radians\r\n   * @param {number} y - rotation angle around Y axis in radians\r\n   * @param {number} z - rotation angle around Z axis in radians\r\n   */\r\n  rotate(x, y, z) {\r\n    this._objectControls.rotate(\r\n      new Quaternion().setFromEuler(new Euler(x, y, z, 'XYZ'))\r\n    )\r\n    this.dispatchEvent({ type: 'transform' })\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Scale object by factor\r\n   * @param {number} factor - scale multiplier, should greater than zero\r\n   */\r\n  scale(factor) {\r\n    if (factor <= 0) {\r\n      throw new RangeError('Scale should be greater than zero')\r\n    }\r\n    this._objectControls.scale(factor)\r\n    this.dispatchEvent({ type: 'transform' })\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Center view on selection\r\n   * @param {empty | subset | string} selector - defines part of molecule which must be centered (\r\n   * empty - center on current selection;\r\n   * subset - center on picked atom/residue/molecule;\r\n   * string - center on atoms correspond to selection string)\r\n   */\r\n  center(selector) {\r\n    // no arguments - center on current selection;\r\n    if (selector === undefined) {\r\n      this.setPivotSubset()\r\n      this._needRender = true\r\n      return\r\n    }\r\n    // subset with atom or residue - center on picked atom/residue;\r\n    if (\r\n      selector.obj !== undefined &&\r\n      ('atom' in selector.obj || 'residue' in selector.obj)\r\n    ) {\r\n      // from event with selection\r\n      if ('atom' in selector.obj) {\r\n        this.setPivotAtom(selector.obj.atom)\r\n      } else {\r\n        this.setPivotResidue(selector.obj.residue)\r\n      }\r\n      this._needRender = true\r\n      return\r\n    }\r\n    // string - center on atoms correspond to selection string\r\n    if (selector.obj === undefined && selector !== '') {\r\n      const sel = selectors.parse(selector)\r\n      if (sel.error === undefined) {\r\n        this.setPivotSubset(sel)\r\n        this._needRender = true\r\n        return\r\n      }\r\n    }\r\n    // empty subset or incorrect/empty string - center on all molecule;\r\n    this.resetPivot()\r\n    this._needRender = true\r\n  }\r\n\r\n  /**\r\n   * Build selector that contains all atoms within given distance from group of atoms\r\n   * @param {Selector} selector - selector describing source group of atoms\r\n   * @param {number} radius - distance\r\n   * @returns {Selector} selector describing result group of atoms\r\n   */\r\n  within(selector, radius) {\r\n    const visual = this._getComplexVisual()\r\n    if (!visual) {\r\n      return selectors.None()\r\n    }\r\n\r\n    if (selector instanceof String) {\r\n      selector = selectors.parse(selector)\r\n    }\r\n\r\n    const res = visual.within(selector, radius)\r\n    if (res) {\r\n      visual.rebuildSelectionGeometry()\r\n      this._needRender = true\r\n    }\r\n    return res\r\n  }\r\n\r\n  /**\r\n   * Get atom position in 2D canvas coords\r\n   * @param {string} fullAtomName - full atom name, like A.38.CG\r\n   * @returns {Object} {x, y} or false if atom not found\r\n   */\r\n  projected(fullAtomName, complexName) {\r\n    const visual = this._getComplexVisual(complexName)\r\n    if (!visual) {\r\n      return false\r\n    }\r\n\r\n    const atom = visual.getComplex().getAtomByFullname(fullAtomName)\r\n    if (atom === null) {\r\n      return false\r\n    }\r\n\r\n    const pos = atom.position.clone()\r\n    // we consider atom position to be affected only by common complex transform\r\n    // ignoring any transformations that may add during editing\r\n    this._gfx.pivot.updateMatrixWorldRecursive()\r\n    this._gfx.camera.updateMatrixWorldRecursive()\r\n    this._gfx.pivot.localToWorld(pos)\r\n    pos.project(this._gfx.camera)\r\n\r\n    return {\r\n      x: (pos.x + 1.0) * 0.5 * this._gfx.width,\r\n      y: (1.0 - pos.y) * 0.5 * this._gfx.height\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Replace secondary structure with calculated one.\r\n   *\r\n   * DSSP algorithm implementation is used.\r\n   *\r\n   * Kabsch W, Sander C. 1983. Dictionary of protein secondary structure: pattern recognition of hydrogen-bonded and\r\n   * geometrical features. Biopolymers. 22(12):2577-2637. doi:10.1002/bip.360221211.\r\n   *\r\n   * @param {string=} complexName - complex name\r\n   */\r\n  dssp(complexName) {\r\n    const visual = this._getComplexVisual(complexName)\r\n    if (!visual) {\r\n      return\r\n    }\r\n    visual.getComplex().dssp()\r\n\r\n    // rebuild dependent representations (cartoon or ss-colored)\r\n    visual._reprList.forEach((rep) => {\r\n      if (rep.mode.id === 'CA' || rep.colorer.id === 'SS') {\r\n        rep.needsRebuild = true\r\n      }\r\n    })\r\n  }\r\n\r\n  exportCML() {\r\n    const self = this\r\n\r\n    function extractRotation(m) {\r\n      const xAxis = new Vector3()\r\n      const yAxis = new Vector3()\r\n      const zAxis = new Vector3()\r\n      m.extractBasis(xAxis, yAxis, zAxis)\r\n      xAxis.normalize()\r\n      yAxis.normalize()\r\n      zAxis.normalize()\r\n      const retMat = new Matrix4()\r\n      retMat.identity()\r\n      retMat.makeBasis(xAxis, yAxis, zAxis)\r\n      return retMat\r\n    }\r\n\r\n    function updateCMLData(complex) {\r\n      const { root } = self._gfx\r\n      const mat = extractRotation(root.matrixWorld)\r\n      const v4 = new Vector4(0, 0, 0, 0)\r\n      const vCenter = new Vector4(0, 0, 0, 0)\r\n      let xml = null\r\n      let ap = null\r\n\r\n      // update atoms in cml\r\n      complex.forEachAtom((atom) => {\r\n        if (atom.xmlNodeRef && atom.xmlNodeRef.xmlNode) {\r\n          xml = atom.xmlNodeRef.xmlNode\r\n          ap = atom.position\r\n          v4.set(ap.x, ap.y, ap.z, 1.0)\r\n          v4.applyMatrix4(mat)\r\n          xml.setAttribute('x3', v4.x.toString())\r\n          xml.setAttribute('y3', v4.y.toString())\r\n          xml.setAttribute('z3', v4.z.toString())\r\n          xml.removeAttribute('x2')\r\n          xml.removeAttribute('y2')\r\n        }\r\n      })\r\n      // update stereo groups in cml\r\n      complex.forEachSGroup((sGroup) => {\r\n        if (sGroup.xmlNodeRef && sGroup.xmlNodeRef.xmlNode) {\r\n          xml = sGroup.xmlNodeRef.xmlNode\r\n          ap = sGroup.getPosition()\r\n          v4.set(ap.x, ap.y, ap.z, 1.0)\r\n          const cp = sGroup.getCentralPoint()\r\n          if (cp === null) {\r\n            v4.applyMatrix4(mat)\r\n          } else {\r\n            vCenter.set(cp.x, cp.y, cp.z, 0.0)\r\n            v4.add(vCenter)\r\n            v4.applyMatrix4(mat) // pos in global space\r\n            vCenter.set(cp.x, cp.y, cp.z, 1.0)\r\n            vCenter.applyMatrix4(mat)\r\n            v4.sub(vCenter)\r\n          }\r\n          xml.setAttribute('x', v4.x.toString())\r\n          xml.setAttribute('y', v4.y.toString())\r\n          xml.setAttribute('z', v4.z.toString())\r\n        }\r\n      })\r\n    }\r\n\r\n    const visual = self._getComplexVisual()\r\n    const complex = visual ? visual.getComplex() : null\r\n    if (complex && complex.originalCML) {\r\n      updateCMLData(complex)\r\n\r\n      // serialize xml structure to string\r\n      const oSerializer = new XMLSerializer()\r\n      return oSerializer.serializeToString(complex.originalCML)\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Reproduce the RCSB PDB Molecule of the Month style by David S. Goodsell\r\n   *\r\n   * @see http://pdb101.rcsb.org/motm/motm-about\r\n   */\r\n  motm() {\r\n    settings.set({\r\n      fogColorEnable: true,\r\n      fogColor: 0x000000,\r\n      outline: { on: true, threshold: 0.01 },\r\n      bg: { color: 0xffffff }\r\n    })\r\n\r\n    this._forEachComplexVisual((visual) => {\r\n      const rep = []\r\n      const complex = visual.getComplex()\r\n      const palette = palettes.get(settings.now.palette)\r\n      for (let i = 0; i < complex.getChainCount(); i++) {\r\n        const curChainName = complex._chains[i]._name\r\n        const curChainColor = palette.getChainColor(curChainName)\r\n        rep[i] = {\r\n          selector: `chain ${curChainName}`,\r\n          mode: 'VW',\r\n          colorer: ['CB', { color: curChainColor, factor: 0.9 }],\r\n          material: 'FL'\r\n        }\r\n      }\r\n      visual.resetReps(rep)\r\n    })\r\n  }\r\n}\r\n\r\nassign(\r\n  Miew,\r\n  /** @lends Miew */ {\r\n    VERSION: Miew.VERSION,\r\n\r\n    registeredPlugins: [],\r\n\r\n    // export namespaces // TODO: WIP: refactoring external interface\r\n    chem,\r\n    io,\r\n    modes,\r\n    colorers,\r\n    materials,\r\n    palettes,\r\n    options,\r\n    settings,\r\n    utils,\r\n    gfx: {\r\n      Representation\r\n    }\r\n  }\r\n)\r\n",
		"/* eslint-disable */\r\n// DO NOT EDIT! Automatically generated from .jison\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar parser = (function () {\r\n  var o = function (k, v, o, l) {\r\n      for (o = o || {}, l = k.length; l--; o[k[l]] = v);\r\n      return o\r\n    },\r\n    $V0 = [1, 60],\r\n    $V1 = [1, 62],\r\n    $V2 = [1, 63],\r\n    $V3 = [1, 65],\r\n    $V4 = [1, 66],\r\n    $V5 = [1, 67],\r\n    $V6 = [1, 68],\r\n    $V7 = [1, 69],\r\n    $V8 = [1, 80],\r\n    $V9 = [1, 72],\r\n    $Va = [1, 73],\r\n    $Vb = [1, 74],\r\n    $Vc = [1, 75],\r\n    $Vd = [1, 99],\r\n    $Ve = [1, 76],\r\n    $Vf = [1, 100],\r\n    $Vg = [1, 79],\r\n    $Vh = [1, 51],\r\n    $Vi = [1, 81],\r\n    $Vj = [1, 82],\r\n    $Vk = [1, 84],\r\n    $Vl = [1, 83],\r\n    $Vm = [1, 85],\r\n    $Vn = [1, 96],\r\n    $Vo = [1, 97],\r\n    $Vp = [1, 98],\r\n    $Vq = [1, 86],\r\n    $Vr = [1, 87],\r\n    $Vs = [1, 64],\r\n    $Vt = [1, 70],\r\n    $Vu = [1, 71],\r\n    $Vv = [1, 77],\r\n    $Vw = [1, 78],\r\n    $Vx = [1, 53],\r\n    $Vy = [1, 54],\r\n    $Vz = [1, 55],\r\n    $VA = [1, 61],\r\n    $VB = [1, 88],\r\n    $VC = [1, 89],\r\n    $VD = [1, 90],\r\n    $VE = [1, 91],\r\n    $VF = [1, 92],\r\n    $VG = [1, 93],\r\n    $VH = [1, 94],\r\n    $VI = [1, 95],\r\n    $VJ = [1, 101],\r\n    $VK = [1, 102],\r\n    $VL = [1, 103],\r\n    $VM = [1, 104],\r\n    $VN = [1, 105],\r\n    $VO = [1, 56],\r\n    $VP = [1, 57],\r\n    $VQ = [1, 58],\r\n    $VR = [1, 59],\r\n    $VS = [1, 115],\r\n    $VT = [1, 111],\r\n    $VU = [1, 114],\r\n    $VV = [1, 112],\r\n    $VW = [1, 113],\r\n    $VX = [1, 118],\r\n    $VY = [1, 117],\r\n    $VZ = [1, 134],\r\n    $V_ = [1, 149],\r\n    $V$ = [1, 150],\r\n    $V01 = [1, 157],\r\n    $V11 = [\r\n      5, 6, 7, 9, 13, 14, 15, 17, 18, 19, 20, 23, 25, 26, 27, 30, 33, 34, 35,\r\n      37, 38, 41, 43, 45, 46, 49, 52, 54, 55, 56, 58, 59, 62, 64, 65, 66, 70,\r\n      72, 74, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,\r\n      96, 97, 98, 99, 101\r\n    ],\r\n    $V21 = [\r\n      5, 6, 7, 9, 13, 14, 15, 17, 18, 19, 20, 23, 25, 26, 27, 30, 33, 34, 35,\r\n      37, 38, 41, 43, 45, 46, 49, 52, 54, 55, 56, 58, 59, 62, 64, 65, 66, 70,\r\n      71, 72, 74, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94,\r\n      95, 96, 97, 98, 99, 101\r\n    ],\r\n    $V31 = [\r\n      5, 6, 7, 9, 13, 15, 17, 18, 19, 20, 23, 25, 26, 27, 30, 33, 34, 37, 38,\r\n      41, 43, 45, 46, 49, 52, 54, 55, 56, 58, 59, 62, 64, 65, 66, 70, 72, 82,\r\n      83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95\r\n    ],\r\n    $V41 = [5, 70, 72],\r\n    $V51 = [5, 74],\r\n    $V61 = [71, 101]\r\n  var parser = {\r\n    trace: function trace() {},\r\n    yy: {},\r\n    symbols_: {\r\n      error: 2,\r\n      Program: 3,\r\n      Command: 4,\r\n      EOF: 5,\r\n      RESET: 6,\r\n      BUILD: 7,\r\n      ALL: 8,\r\n      HELP: 9,\r\n      Path: 10,\r\n      MOTM: 11,\r\n      OneArgCommand: 12,\r\n      GET: 13,\r\n      STRING: 14,\r\n      SET: 15,\r\n      Value: 16,\r\n      SET_SAVE: 17,\r\n      SET_RESTORE: 18,\r\n      SET_RESET: 19,\r\n      PRESET: 20,\r\n      AddRepresentation: 21,\r\n      EditRepresentation: 22,\r\n      REMOVE: 23,\r\n      RepresentationReference: 24,\r\n      HIDE: 25,\r\n      SHOW: 26,\r\n      LIST: 27,\r\n      EXPAND_KEY: 28,\r\n      SELECTOR_KEY: 29,\r\n      SELECT: 30,\r\n      AS: 31,\r\n      WordAll: 32,\r\n      SELECTOR: 33,\r\n      WITHIN: 34,\r\n      NUMBER: 35,\r\n      OF: 36,\r\n      MATERIAL: 37,\r\n      IDENTIFIER: 38,\r\n      ModeCMD: 39,\r\n      ColorCMD: 40,\r\n      VIEW: 41,\r\n      BASE_64: 42,\r\n      UNIT: 43,\r\n      DSSP: 44,\r\n      SCALE: 45,\r\n      ROTATE: 46,\r\n      AxesList: 47,\r\n      TRANSLATE: 48,\r\n      CENTER: 49,\r\n      GetURLBranch: 50,\r\n      Screenshot: 51,\r\n      LINE: 52,\r\n      ArgList: 53,\r\n      LISTOBJ: 54,\r\n      REMOVEOBJ: 55,\r\n      URL: 56,\r\n      VIEW_KEY: 57,\r\n      SCREENSHOT: 58,\r\n      LOAD: 59,\r\n      Url: 60,\r\n      FILE_KEY: 61,\r\n      ADD: 62,\r\n      Description: 63,\r\n      REP: 64,\r\n      MODE: 65,\r\n      COLOR: 66,\r\n      Descriptor: 67,\r\n      RepresentationOwnProperty: 68,\r\n      RepresentationOwnPropertyOpts: 69,\r\n      DESC_KEY: 70,\r\n      '=': 71,\r\n      DESC_KEY_OPTS: 72,\r\n      AxesArg: 73,\r\n      DESC_KEY_AXES: 74,\r\n      Arg: 75,\r\n      PathWoDescKey: 76,\r\n      HEX: 77,\r\n      BOOL: 78,\r\n      Word: 79,\r\n      CommandSetWoDESC_KEY: 80,\r\n      DescKeys: 81,\r\n      CLEAR: 82,\r\n      FILE_LIST: 83,\r\n      FILE_REGISTER: 84,\r\n      FILE_DELETE: 85,\r\n      PRESET_ADD: 86,\r\n      PRESET_DELETE: 87,\r\n      PRESET_UPDATE: 88,\r\n      PRESET_RENAME: 89,\r\n      PRESET_OPEN: 90,\r\n      CREATE_SCENARIO: 91,\r\n      RESET_SCENARIO: 92,\r\n      DELETE_SCENARIO: 93,\r\n      ADD_SCENARIO_ITEM: 94,\r\n      LIST_SCENARIO: 95,\r\n      PDB_KEY: 96,\r\n      DELAY_KEY: 97,\r\n      PRST_KEY: 98,\r\n      DESCRIPTION_KEY: 99,\r\n      CommandSet: 100,\r\n      '.': 101,\r\n      PresetPath: 102,\r\n      '/': 103,\r\n      HexOrNumber: 104,\r\n      $accept: 0,\r\n      $end: 1\r\n    },\r\n    terminals_: {\r\n      2: 'error',\r\n      5: 'EOF',\r\n      6: 'RESET',\r\n      7: 'BUILD',\r\n      8: 'ALL',\r\n      9: 'HELP',\r\n      11: 'MOTM',\r\n      13: 'GET',\r\n      14: 'STRING',\r\n      15: 'SET',\r\n      17: 'SET_SAVE',\r\n      18: 'SET_RESTORE',\r\n      19: 'SET_RESET',\r\n      20: 'PRESET',\r\n      23: 'REMOVE',\r\n      25: 'HIDE',\r\n      26: 'SHOW',\r\n      27: 'LIST',\r\n      28: 'EXPAND_KEY',\r\n      29: 'SELECTOR_KEY',\r\n      30: 'SELECT',\r\n      31: 'AS',\r\n      33: 'SELECTOR',\r\n      34: 'WITHIN',\r\n      35: 'NUMBER',\r\n      36: 'OF',\r\n      37: 'MATERIAL',\r\n      38: 'IDENTIFIER',\r\n      41: 'VIEW',\r\n      42: 'BASE_64',\r\n      43: 'UNIT',\r\n      44: 'DSSP',\r\n      45: 'SCALE',\r\n      46: 'ROTATE',\r\n      48: 'TRANSLATE',\r\n      49: 'CENTER',\r\n      52: 'LINE',\r\n      54: 'LISTOBJ',\r\n      55: 'REMOVEOBJ',\r\n      56: 'URL',\r\n      57: 'VIEW_KEY',\r\n      58: 'SCREENSHOT',\r\n      59: 'LOAD',\r\n      61: 'FILE_KEY',\r\n      62: 'ADD',\r\n      64: 'REP',\r\n      65: 'MODE',\r\n      66: 'COLOR',\r\n      70: 'DESC_KEY',\r\n      71: '=',\r\n      72: 'DESC_KEY_OPTS',\r\n      74: 'DESC_KEY_AXES',\r\n      77: 'HEX',\r\n      78: 'BOOL',\r\n      82: 'CLEAR',\r\n      83: 'FILE_LIST',\r\n      84: 'FILE_REGISTER',\r\n      85: 'FILE_DELETE',\r\n      86: 'PRESET_ADD',\r\n      87: 'PRESET_DELETE',\r\n      88: 'PRESET_UPDATE',\r\n      89: 'PRESET_RENAME',\r\n      90: 'PRESET_OPEN',\r\n      91: 'CREATE_SCENARIO',\r\n      92: 'RESET_SCENARIO',\r\n      93: 'DELETE_SCENARIO',\r\n      94: 'ADD_SCENARIO_ITEM',\r\n      95: 'LIST_SCENARIO',\r\n      96: 'PDB_KEY',\r\n      97: 'DELAY_KEY',\r\n      98: 'PRST_KEY',\r\n      99: 'DESCRIPTION_KEY',\r\n      101: '.',\r\n      103: '/'\r\n    },\r\n    productions_: [\r\n      0,\r\n      [3, 2],\r\n      [3, 1],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 3],\r\n      [4, 3],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 4],\r\n      [4, 2],\r\n      [4, 6],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 2],\r\n      [4, 1],\r\n      [4, 1],\r\n      [4, 3],\r\n      [4, 3],\r\n      [4, 4],\r\n      [4, 4],\r\n      [4, 1],\r\n      [4, 2],\r\n      [50, 1],\r\n      [50, 2],\r\n      [50, 2],\r\n      [50, 3],\r\n      [50, 3],\r\n      [51, 1],\r\n      [51, 2],\r\n      [51, 3],\r\n      [12, 2],\r\n      [12, 2],\r\n      [12, 2],\r\n      [21, 1],\r\n      [21, 2],\r\n      [21, 2],\r\n      [21, 3],\r\n      [22, 2],\r\n      [22, 3],\r\n      [39, 2],\r\n      [39, 3],\r\n      [40, 2],\r\n      [40, 3],\r\n      [24, 1],\r\n      [24, 1],\r\n      [63, 1],\r\n      [63, 2],\r\n      [63, 3],\r\n      [63, 4],\r\n      [67, 1],\r\n      [67, 1],\r\n      [67, 2],\r\n      [68, 3],\r\n      [69, 3],\r\n      [47, 1],\r\n      [47, 2],\r\n      [73, 2],\r\n      [53, 1],\r\n      [53, 2],\r\n      [75, 3],\r\n      [16, 1],\r\n      [16, 1],\r\n      [16, 1],\r\n      [16, 1],\r\n      [16, 1],\r\n      [79, 1],\r\n      [79, 1],\r\n      [32, 1],\r\n      [32, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [80, 1],\r\n      [81, 1],\r\n      [81, 1],\r\n      [81, 1],\r\n      [81, 1],\r\n      [81, 1],\r\n      [81, 1],\r\n      [81, 1],\r\n      [100, 1],\r\n      [100, 1],\r\n      [76, 1],\r\n      [76, 3],\r\n      [76, 3],\r\n      [10, 1],\r\n      [10, 1],\r\n      [10, 3],\r\n      [10, 3],\r\n      [10, 3],\r\n      [60, 1],\r\n      [102, 1],\r\n      [102, 3],\r\n      [104, 1],\r\n      [104, 1]\r\n    ],\r\n    performAction: function anonymous(\r\n      yytext,\r\n      yyleng,\r\n      yylineno,\r\n      yy,\r\n      yystate /* action[1] */,\r\n      $$ /* vstack */,\r\n      _$ /* lstack */\r\n    ) {\r\n      /* this == yyval */\r\n\r\n      var $0 = $$.length - 1\r\n      switch (yystate) {\r\n        case 1:\r\n          return $$[$0 - 1]\r\n          break\r\n        case 3:\r\n          this.$ = yy.miew.reset(false)\r\n          yy.ClearContext()\r\n          yy.miew.resetReps('empty')\r\n          break\r\n        case 4:\r\n          this.$ = yy.miew.rebuild()\r\n          break\r\n        case 5:\r\n          this.$ = yy.miew.rebuildAll()\r\n          yy.miew.rebuild()\r\n          break\r\n        case 6:\r\n          this.$ = yy.echo(yy.utils.help().toString())\r\n          break\r\n        case 7:\r\n          this.$ = yy.echo(yy.utils.help($$[$0]).toString())\r\n          break\r\n        case 8:\r\n          this.$ = yy.miew.motm()\r\n          break\r\n        case 10:\r\n        case 11:\r\n          this.$ = yy.utils.propagateProp($$[$0])\r\n          yy.echo(yy.miew.get($$[$0]).toString())\r\n          break\r\n        case 12:\r\n        case 13:\r\n          this.$ = yy.miew.set(\r\n            $$[$0 - 1],\r\n            yy.utils.propagateProp($$[$0 - 1], $$[$0])\r\n          )\r\n          break\r\n        case 14:\r\n          this.$ = yy.miew.saveSettings()\r\n          break\r\n        case 15:\r\n          this.$ = yy.miew.restoreSettings()\r\n          break\r\n        case 16:\r\n          this.$ = yy.miew.resetSettings()\r\n          break\r\n        case 17:\r\n          this.$ = yy.miew.resetReps()\r\n          break\r\n        case 18:\r\n          this.$ = yy.miew.applyPreset($$[$0])\r\n          break\r\n        case 21:\r\n          this.$ = yy.miew.repRemove($$[$0])\r\n          yy.representations.remove($$[$0])\r\n          break\r\n        case 22:\r\n          this.$ = yy.miew.repHide($$[$0])\r\n          break\r\n        case 23:\r\n          this.$ = yy.miew.repHide($$[$0], false)\r\n          break\r\n        case 24:\r\n          this.$ = yy.echo(\r\n            yy.utils.listRep(yy.miew, yy.representations, $$[$0], '-e')\r\n          )\r\n          break\r\n        case 25:\r\n          this.$ = yy.echo(yy.utils.list(yy.miew, yy.representations))\r\n          break\r\n        case 26:\r\n          this.$ = yy.echo(yy.utils.list(yy.miew, yy.representations, $$[$0]))\r\n          break\r\n        case 27:\r\n          this.$ = yy.echo(yy.utils.listSelector(yy.miew, yy.Context))\r\n          break\r\n        case 28:\r\n          this.$ = yy.miew.select(\r\n            yy.utils.checkArg($$[$0 - 1].toLowerCase(), $$[$0], true)\r\n          )\r\n          break\r\n        case 29:\r\n          this.$ = yy.Context[$$[$0].toLowerCase()] = yy.utils.checkArg(\r\n            $$[$0 - 3].toLowerCase(),\r\n            $$[$0 - 2],\r\n            true\r\n          )\r\n          yy.miew.select(yy.Context[$$[$0].toLowerCase()])\r\n          break\r\n        case 30:\r\n          this.$ = yy.miew.rep(yy.miew.repCurrent(), {\r\n            selector: yy.utils.checkArg($$[$0 - 1].toLowerCase(), $$[$0])\r\n          })\r\n          break\r\n        case 31:\r\n          this.$ = yy.Context[$$[$0].toLowerCase()] = yy.miew.within(\r\n            yy.utils.checkArg('select', $$[$0 - 2], true),\r\n            Number($$[$0 - 4])\r\n          )\r\n          break\r\n        case 32:\r\n          this.$ = yy.miew.rep(yy.miew.repCurrent(), {\r\n            material: yy.utils.checkArg(\r\n              $$[$0 - 1].toLowerCase(),\r\n              $$[$0].toUpperCase()\r\n            )\r\n          })\r\n          break\r\n        case 35:\r\n          this.$ = yy.echo(yy.miew.view())\r\n          break\r\n        case 36:\r\n        case 37:\r\n          this.$ = yy.miew.view($$[$0])\r\n          break\r\n        case 38:\r\n          this.$ = yy.echo(yy.miew.changeUnit())\r\n          break\r\n        case 39:\r\n          this.$ = yy.echo(yy.miew.changeUnit($$[$0]))\r\n          break\r\n        case 40:\r\n          this.$ = yy.miew.dssp()\r\n          break\r\n        case 41:\r\n          this.$ = yy.miew.scale($$[$0])\r\n          break\r\n        case 42:\r\n          for (var i = 0, n = $$[$0].length; i < n; i++) {\r\n            yy.miew.rotate(\r\n              ($$[$0][i]['x'] * Math.PI) / 180.0,\r\n              ($$[$0][i]['y'] * Math.PI) / 180.0,\r\n              ($$[$0][i]['z'] * Math.PI) / 180.0\r\n            )\r\n          }\r\n          break\r\n        case 43:\r\n          for (var i = 0, n = $$[$0].length; i < n; i++) {\r\n            yy.miew.translate(\r\n              $$[$0][i]['x'] || 0,\r\n              $$[$0][i]['y'] || 0,\r\n              $$[$0][i]['z'] || 0\r\n            )\r\n          }\r\n          break\r\n        case 44:\r\n          this.$ = yy.miew.center()\r\n          break\r\n        case 45:\r\n          this.$ = yy.miew.center($$[$0])\r\n          break\r\n        case 48:\r\n        case 49:\r\n          this.$ = yy.miew.addObject(\r\n            { type: 'line', params: [$$[$0 - 1], $$[$0]] },\r\n            true\r\n          )\r\n          break\r\n        case 50:\r\n        case 51:\r\n          this.$ = yy.miew.addObject(\r\n            {\r\n              type: 'line',\r\n              params: [$$[$0 - 2], $$[$0 - 1]],\r\n              opts: $$[$0].toJSO(yy.utils, 'objects', 'line')\r\n            },\r\n            true\r\n          )\r\n          break\r\n        case 52:\r\n          this.$ = yy.echo(yy.utils.listObjs(yy.miew))\r\n          break\r\n        case 53:\r\n          this.$ = yy.miew.removeObject($$[$0])\r\n          break\r\n        case 54:\r\n          this.$ = yy.echo(yy.miew.getURL({ view: false, settings: false }))\r\n          break\r\n        case 55:\r\n          this.$ = yy.echo(yy.miew.getURL({ view: false, settings: true }))\r\n          break\r\n        case 56:\r\n          this.$ = yy.echo(yy.miew.getURL({ view: true, settings: false }))\r\n          break\r\n        case 57:\r\n        case 58:\r\n          this.$ = yy.echo(yy.miew.getURL({ view: true, settings: true }))\r\n          break\r\n        case 59:\r\n          this.$ = yy.miew.screenshotSave()\r\n          break\r\n        case 60:\r\n          this.$ = yy.miew.screenshotSave('', Number($$[$0]))\r\n          break\r\n        case 61:\r\n          this.$ = yy.miew.screenshotSave(\r\n            '',\r\n            Number($$[$0 - 1]),\r\n            Number($$[$0])\r\n          )\r\n          break\r\n        case 62:\r\n        case 63:\r\n        case 64:\r\n          this.$ = yy.utils.load(yy.miew, $$[$0])\r\n          yy.representations.clear()\r\n          break\r\n        case 65:\r\n          this.$ = yy.echo(yy.representations.add(yy.miew.repAdd()))\r\n          break\r\n        case 66:\r\n          this.$ = yy.echo(yy.representations.add($$[$0], yy.miew.repAdd()))\r\n          break\r\n        case 67:\r\n          this.$ = yy.echo(yy.representations.add(yy.miew.repAdd($$[$0])))\r\n          break\r\n        case 68:\r\n          this.$ = yy.echo(\r\n            yy.representations.add($$[$0 - 1], yy.miew.repAdd($$[$0]))\r\n          )\r\n          break\r\n        case 69:\r\n          this.$ = yy.miew.rep($$[$0])\r\n          yy.miew.repCurrent($$[$0])\r\n          break\r\n        case 70:\r\n          this.$ = yy.miew.rep($$[$0 - 1], $$[$0])\r\n          yy.miew.repCurrent($$[$0 - 1])\r\n          break\r\n        case 71:\r\n          this.$ = yy.miew.rep(yy.miew.repCurrent(), {\r\n            mode: yy.utils.checkArg(\r\n              $$[$0 - 1].toLowerCase(),\r\n              $$[$0].toUpperCase()\r\n            )\r\n          })\r\n          break\r\n        case 72:\r\n          this.$ = yy.miew.rep(yy.miew.repCurrent(), {\r\n            mode: new Array(\r\n              yy.utils.checkArg(\r\n                $$[$0 - 2].toLowerCase(),\r\n                $$[$0 - 1].toUpperCase()\r\n              ),\r\n              $$[$0].toJSO(yy.utils, $$[$0 - 2], $$[$0 - 1].toUpperCase())\r\n            )\r\n          })\r\n          break\r\n        case 73:\r\n          this.$ = yy.miew.rep(yy.miew.repCurrent(), {\r\n            colorer: yy.utils.checkArg(\r\n              $$[$0 - 1].toLowerCase(),\r\n              $$[$0].toUpperCase()\r\n            )\r\n          })\r\n          break\r\n        case 74:\r\n          this.$ = yy.miew.rep(yy.miew.repCurrent(), {\r\n            colorer: new Array(\r\n              yy.utils.checkArg(\r\n                $$[$0 - 2].toLowerCase(),\r\n                $$[$0 - 1].toUpperCase()\r\n              ),\r\n              $$[$0].toJSO(yy.utils, $$[$0 - 2], $$[$0 - 1].toUpperCase())\r\n            )\r\n          })\r\n          break\r\n        case 75:\r\n          this.$ = Number(yy.representations.get($$[$0]))\r\n          break\r\n        case 76:\r\n        case 92:\r\n          this.$ = Number($$[$0])\r\n          break\r\n        case 77:\r\n          this.$ = $$[$0]\r\n          break\r\n        case 78:\r\n          this.$ = yy.assign($$[$0 - 1], $$[$0])\r\n          break\r\n        case 79:\r\n          this.$ = yy.assign($$[$0 - 2], $$[$0 - 1], $$[$0])\r\n          break\r\n        case 80:\r\n          this.$ = yy.assign($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0])\r\n          break\r\n        case 81:\r\n        case 82:\r\n          this.$ = yy.CreateObjectPair($$[$0].key, $$[$0].val)\r\n          break\r\n        case 83:\r\n          this.$ = yy.CreateObjectPair(\r\n            $$[$0 - 1].key,\r\n            new Array(\r\n              $$[$0 - 1].val,\r\n              $$[$0].toJSO(yy.utils, $$[$0 - 1].key, $$[$0 - 1].val)\r\n            )\r\n          )\r\n          break\r\n        case 84:\r\n        case 85:\r\n          this.$ = Object.create({\r\n            key: yy.keyRemap($$[$0 - 2]),\r\n            val: yy.utils.checkArg($$[$0 - 2], $$[$0])\r\n          })\r\n          break\r\n        case 86:\r\n          this.$ = [$$[$0]]\r\n          break\r\n        case 87:\r\n          this.$ = $$[$0 - 1].concat($$[$0])\r\n          break\r\n        case 88:\r\n          this.$ = yy.CreateObjectPair($$[$0 - 1].toLowerCase(), Number($$[$0]))\r\n          break\r\n        case 89:\r\n          this.$ = new yy.ArgList($$[$0])\r\n          break\r\n        case 90:\r\n          this.$ = $$[$0 - 1].append($$[$0])\r\n          break\r\n        case 91:\r\n          this.$ = new yy.Arg($$[$0 - 2], $$[$0])\r\n          break\r\n        case 93:\r\n          this.$ = parseInt($$[$0])\r\n          break\r\n        case 94:\r\n          this.$ = JSON.parse($$[$0])\r\n          break\r\n        case 95:\r\n        case 96:\r\n          this.$ = String($$[$0])\r\n          break\r\n        case 157:\r\n        case 158:\r\n        case 161:\r\n        case 162:\r\n        case 163:\r\n          this.$ = $$[$0 - 2] + $$[$0 - 1] + $$[$0] //cause of could be color word in path;\r\n          break\r\n        case 166:\r\n          this.$ = $$[$0 - 2] = $$[$0 - 2] + $$[$0 - 1] + $$[$0]\r\n          break\r\n      }\r\n    },\r\n    table: [\r\n      {\r\n        3: 1,\r\n        4: 2,\r\n        5: [1, 3],\r\n        6: [1, 4],\r\n        7: [1, 5],\r\n        9: [1, 6],\r\n        11: [1, 7],\r\n        12: 8,\r\n        13: [1, 9],\r\n        15: [1, 10],\r\n        17: [1, 11],\r\n        18: [1, 12],\r\n        19: [1, 13],\r\n        20: [1, 14],\r\n        21: 15,\r\n        22: 16,\r\n        23: [1, 17],\r\n        25: [1, 18],\r\n        26: [1, 19],\r\n        27: [1, 20],\r\n        30: [1, 21],\r\n        33: [1, 22],\r\n        34: [1, 23],\r\n        37: [1, 24],\r\n        39: 25,\r\n        40: 26,\r\n        41: [1, 27],\r\n        43: [1, 28],\r\n        44: [1, 29],\r\n        45: [1, 30],\r\n        46: [1, 31],\r\n        48: [1, 32],\r\n        49: [1, 33],\r\n        50: 34,\r\n        51: 35,\r\n        52: [1, 36],\r\n        54: [1, 37],\r\n        55: [1, 38],\r\n        56: [1, 44],\r\n        58: [1, 45],\r\n        59: [1, 39],\r\n        62: [1, 40],\r\n        64: [1, 41],\r\n        65: [1, 42],\r\n        66: [1, 43]\r\n      },\r\n      { 1: [3] },\r\n      { 5: [1, 46] },\r\n      { 1: [2, 2] },\r\n      { 5: [2, 3] },\r\n      { 5: [2, 4], 8: [1, 47] },\r\n      {\r\n        5: [2, 6],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        10: 48,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 49,\r\n        80: 52,\r\n        81: 50,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      { 5: [2, 8] },\r\n      { 5: [2, 9] },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        10: 106,\r\n        13: $V3,\r\n        14: [1, 107],\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 49,\r\n        80: 52,\r\n        81: 50,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        10: 108,\r\n        13: $V3,\r\n        14: [1, 109],\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 49,\r\n        80: 52,\r\n        81: 50,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      { 5: [2, 14] },\r\n      { 5: [2, 15] },\r\n      { 5: [2, 16] },\r\n      { 5: [2, 17], 14: $VS, 16: 110, 35: $VT, 38: $VU, 77: $VV, 78: $VW },\r\n      { 5: [2, 19] },\r\n      { 5: [2, 20] },\r\n      { 24: 116, 35: $VX, 38: $VY },\r\n      { 24: 119, 35: $VX, 38: $VY },\r\n      { 24: 120, 35: $VX, 38: $VY },\r\n      { 5: [2, 25], 24: 121, 28: [1, 122], 29: [1, 123], 35: $VX, 38: $VY },\r\n      { 14: [1, 124] },\r\n      { 14: [1, 125] },\r\n      { 35: [1, 126] },\r\n      { 38: [1, 127] },\r\n      { 5: [2, 33] },\r\n      { 5: [2, 34] },\r\n      { 5: [2, 35], 14: [1, 128], 42: [1, 129] },\r\n      { 5: [2, 38], 35: [1, 130] },\r\n      { 5: [2, 40] },\r\n      { 35: [1, 131] },\r\n      { 47: 132, 73: 133, 74: $VZ },\r\n      { 47: 135, 73: 133, 74: $VZ },\r\n      { 5: [2, 44], 14: [1, 136] },\r\n      { 5: [2, 46] },\r\n      { 5: [2, 47] },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        10: 138,\r\n        13: $V3,\r\n        14: [1, 137],\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 49,\r\n        80: 52,\r\n        81: 50,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      { 5: [2, 52] },\r\n      { 35: [1, 139] },\r\n      { 14: [1, 143], 38: [1, 141], 60: 140, 61: [1, 142] },\r\n      {\r\n        5: [2, 65],\r\n        38: [1, 144],\r\n        63: 145,\r\n        67: 146,\r\n        68: 147,\r\n        69: 148,\r\n        70: $V_,\r\n        72: $V$\r\n      },\r\n      { 24: 151, 35: $VX, 38: $VY },\r\n      { 38: [1, 152] },\r\n      { 38: [1, 153] },\r\n      { 5: [2, 54], 29: [1, 154], 57: [1, 155] },\r\n      { 5: [2, 59], 35: [1, 156] },\r\n      { 1: [2, 1] },\r\n      { 5: [2, 5] },\r\n      { 5: [2, 7], 101: $V01 },\r\n      o($V11, [2, 159]),\r\n      o($V11, [2, 160]),\r\n      o($V21, [2, 97]),\r\n      o($V21, [2, 98]),\r\n      o($V11, [2, 147]),\r\n      o($V11, [2, 148]),\r\n      o($V11, [2, 149]),\r\n      o($V11, [2, 150]),\r\n      o($V11, [2, 151]),\r\n      o($V11, [2, 152]),\r\n      o($V11, [2, 153]),\r\n      o($V21, [2, 101]),\r\n      o($V21, [2, 102]),\r\n      o($V21, [2, 103]),\r\n      o($V21, [2, 104]),\r\n      o($V21, [2, 105]),\r\n      o($V21, [2, 106]),\r\n      o($V21, [2, 107]),\r\n      o($V21, [2, 108]),\r\n      o($V21, [2, 109]),\r\n      o($V21, [2, 110]),\r\n      o($V21, [2, 111]),\r\n      o($V21, [2, 112]),\r\n      o($V21, [2, 113]),\r\n      o($V21, [2, 114]),\r\n      o($V21, [2, 115]),\r\n      o($V21, [2, 116]),\r\n      o($V21, [2, 117]),\r\n      o($V21, [2, 118]),\r\n      o($V21, [2, 119]),\r\n      o($V21, [2, 120]),\r\n      o($V21, [2, 121]),\r\n      o($V21, [2, 122]),\r\n      o($V21, [2, 123]),\r\n      o($V21, [2, 124]),\r\n      o($V21, [2, 125]),\r\n      o($V21, [2, 126]),\r\n      o($V21, [2, 127]),\r\n      o($V21, [2, 128]),\r\n      o($V21, [2, 129]),\r\n      o($V21, [2, 130]),\r\n      o($V21, [2, 131]),\r\n      o($V21, [2, 132]),\r\n      o($V21, [2, 133]),\r\n      o($V21, [2, 134]),\r\n      o($V21, [2, 135]),\r\n      o($V21, [2, 136]),\r\n      o($V21, [2, 137]),\r\n      o($V21, [2, 138]),\r\n      o($V21, [2, 139]),\r\n      o($V21, [2, 140]),\r\n      o($V21, [2, 141]),\r\n      o($V21, [2, 142]),\r\n      o($V21, [2, 143]),\r\n      o($V21, [2, 144]),\r\n      o($V21, [2, 145]),\r\n      o($V21, [2, 146]),\r\n      { 5: [2, 10], 101: $V01 },\r\n      { 5: [2, 11] },\r\n      { 14: $VS, 16: 158, 35: $VT, 38: $VU, 77: $VV, 78: $VW, 101: $V01 },\r\n      { 14: $VS, 16: 159, 35: $VT, 38: $VU, 77: $VV, 78: $VW },\r\n      { 5: [2, 18] },\r\n      o($V31, [2, 92]),\r\n      o($V31, [2, 93]),\r\n      o($V31, [2, 94]),\r\n      o($V31, [2, 95]),\r\n      o($V31, [2, 96]),\r\n      { 5: [2, 21] },\r\n      o($V41, [2, 75]),\r\n      o($V41, [2, 76]),\r\n      { 5: [2, 22] },\r\n      { 5: [2, 23] },\r\n      { 5: [2, 24] },\r\n      { 5: [2, 26] },\r\n      { 5: [2, 27] },\r\n      { 5: [2, 28], 31: [1, 160] },\r\n      { 5: [2, 30] },\r\n      { 36: [1, 161] },\r\n      { 5: [2, 32] },\r\n      { 5: [2, 36] },\r\n      { 5: [2, 37] },\r\n      { 5: [2, 39] },\r\n      { 5: [2, 41] },\r\n      { 5: [2, 42], 73: 162, 74: $VZ },\r\n      o($V51, [2, 86]),\r\n      { 35: [1, 163] },\r\n      { 5: [2, 43], 73: 162, 74: $VZ },\r\n      { 5: [2, 45] },\r\n      { 14: [1, 164] },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        10: 165,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 49,\r\n        80: 52,\r\n        81: 50,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR,\r\n        101: $V01\r\n      },\r\n      { 5: [2, 53] },\r\n      { 5: [2, 62] },\r\n      { 5: [2, 63] },\r\n      { 5: [2, 64] },\r\n      { 5: [2, 164] },\r\n      { 5: [2, 66], 63: 166, 67: 146, 68: 147, 69: 148, 70: $V_, 72: $V$ },\r\n      { 5: [2, 67] },\r\n      { 5: [2, 77], 67: 167, 68: 147, 69: 148, 70: $V_, 72: $V$ },\r\n      o($V41, [2, 81]),\r\n      o($V41, [2, 82], {\r\n        80: 52,\r\n        53: 168,\r\n        75: 169,\r\n        76: 170,\r\n        79: 171,\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      }),\r\n      { 71: [1, 172] },\r\n      { 71: [1, 173] },\r\n      { 5: [2, 69], 63: 174, 67: 146, 68: 147, 69: 148, 70: $V_, 72: $V$ },\r\n      {\r\n        5: [2, 71],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        53: 175,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 169,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      {\r\n        5: [2, 73],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        53: 176,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 169,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      { 5: [2, 55], 57: [1, 177] },\r\n      { 5: [2, 56], 29: [1, 178] },\r\n      { 5: [2, 60], 35: [1, 179] },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        35: [1, 181],\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 180,\r\n        80: 52,\r\n        81: 182,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      { 5: [2, 12] },\r\n      { 5: [2, 13] },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        32: 183,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 184,\r\n        80: 52,\r\n        81: 185,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      { 14: [1, 186] },\r\n      o($V51, [2, 87]),\r\n      o($V51, [2, 88]),\r\n      {\r\n        5: [2, 48],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        53: 187,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 169,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      {\r\n        5: [2, 49],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        53: 188,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 169,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        101: $V01\r\n      },\r\n      { 5: [2, 68] },\r\n      { 5: [2, 78], 67: 189, 68: 147, 69: 148, 70: $V_, 72: $V$ },\r\n      o($V41, [2, 83], {\r\n        80: 52,\r\n        76: 170,\r\n        79: 171,\r\n        75: 190,\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      }),\r\n      o($V31, [2, 89]),\r\n      { 71: [1, 191], 101: [1, 192] },\r\n      o($V61, [2, 156]),\r\n      { 14: $VS, 16: 193, 35: $VT, 38: $VU, 77: $VV, 78: $VW },\r\n      { 14: $VS, 16: 194, 35: $VT, 38: $VU, 77: $VV, 78: $VW },\r\n      { 5: [2, 70] },\r\n      {\r\n        5: [2, 72],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 190,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      {\r\n        5: [2, 74],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 190,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      { 5: [2, 57] },\r\n      { 5: [2, 58] },\r\n      { 5: [2, 61] },\r\n      o($V11, [2, 161]),\r\n      o($V11, [2, 162]),\r\n      o($V11, [2, 163]),\r\n      { 5: [2, 29] },\r\n      { 5: [2, 99] },\r\n      { 5: [2, 100] },\r\n      { 31: [1, 195] },\r\n      {\r\n        5: [2, 50],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 190,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      {\r\n        5: [2, 51],\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        75: 190,\r\n        76: 170,\r\n        79: 171,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      { 5: [2, 79], 67: 196, 68: 147, 69: 148, 70: $V_, 72: $V$ },\r\n      o($V31, [2, 90]),\r\n      { 14: $VS, 16: 197, 35: $VT, 38: $VU, 77: $VV, 78: $VW },\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        35: [1, 199],\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        79: 198,\r\n        80: 52,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN\r\n      },\r\n      o($V41, [2, 84]),\r\n      o($V31, [2, 85]),\r\n      {\r\n        6: $V0,\r\n        7: $V1,\r\n        9: $V2,\r\n        13: $V3,\r\n        15: $V4,\r\n        17: $V5,\r\n        18: $V6,\r\n        19: $V7,\r\n        20: $V8,\r\n        23: $V9,\r\n        25: $Va,\r\n        26: $Vb,\r\n        27: $Vc,\r\n        30: $Vd,\r\n        32: 200,\r\n        33: $Ve,\r\n        34: $Vf,\r\n        37: $Vg,\r\n        38: $Vh,\r\n        41: $Vi,\r\n        43: $Vj,\r\n        45: $Vk,\r\n        46: $Vl,\r\n        49: $Vm,\r\n        52: $Vn,\r\n        54: $Vo,\r\n        55: $Vp,\r\n        56: $Vq,\r\n        58: $Vr,\r\n        59: $Vs,\r\n        62: $Vt,\r\n        64: $Vu,\r\n        65: $Vv,\r\n        66: $Vw,\r\n        70: $Vx,\r\n        72: $Vy,\r\n        74: $Vz,\r\n        79: 184,\r\n        80: 52,\r\n        81: 185,\r\n        82: $VA,\r\n        83: $VB,\r\n        84: $VC,\r\n        85: $VD,\r\n        86: $VE,\r\n        87: $VF,\r\n        88: $VG,\r\n        89: $VH,\r\n        90: $VI,\r\n        91: $VJ,\r\n        92: $VK,\r\n        93: $VL,\r\n        94: $VM,\r\n        95: $VN,\r\n        96: $VO,\r\n        97: $VP,\r\n        98: $VQ,\r\n        99: $VR\r\n      },\r\n      { 5: [2, 80] },\r\n      o($V31, [2, 91]),\r\n      o($V61, [2, 157]),\r\n      o($V61, [2, 158]),\r\n      { 5: [2, 31] }\r\n    ],\r\n    defaultActions: {\r\n      3: [2, 2],\r\n      4: [2, 3],\r\n      7: [2, 8],\r\n      8: [2, 9],\r\n      11: [2, 14],\r\n      12: [2, 15],\r\n      13: [2, 16],\r\n      15: [2, 19],\r\n      16: [2, 20],\r\n      25: [2, 33],\r\n      26: [2, 34],\r\n      29: [2, 40],\r\n      34: [2, 46],\r\n      35: [2, 47],\r\n      37: [2, 52],\r\n      46: [2, 1],\r\n      47: [2, 5],\r\n      107: [2, 11],\r\n      110: [2, 18],\r\n      116: [2, 21],\r\n      119: [2, 22],\r\n      120: [2, 23],\r\n      121: [2, 24],\r\n      122: [2, 26],\r\n      123: [2, 27],\r\n      125: [2, 30],\r\n      127: [2, 32],\r\n      128: [2, 36],\r\n      129: [2, 37],\r\n      130: [2, 39],\r\n      131: [2, 41],\r\n      136: [2, 45],\r\n      139: [2, 53],\r\n      140: [2, 62],\r\n      141: [2, 63],\r\n      142: [2, 64],\r\n      143: [2, 164],\r\n      145: [2, 67],\r\n      158: [2, 12],\r\n      159: [2, 13],\r\n      166: [2, 68],\r\n      174: [2, 70],\r\n      177: [2, 57],\r\n      178: [2, 58],\r\n      179: [2, 61],\r\n      183: [2, 29],\r\n      184: [2, 99],\r\n      185: [2, 100],\r\n      196: [2, 80],\r\n      200: [2, 31]\r\n    },\r\n    parseError: function parseError(str, hash) {\r\n      if (hash.recoverable) {\r\n        this.trace(str)\r\n      } else {\r\n        var error = new Error(str)\r\n        error.hash = hash\r\n        throw error\r\n      }\r\n    },\r\n    parse: function parse(input) {\r\n      var self = this,\r\n        stack = [0],\r\n        tstack = [],\r\n        vstack = [null],\r\n        lstack = [],\r\n        table = this.table,\r\n        yytext = '',\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1\r\n      var args = lstack.slice.call(arguments, 1)\r\n      var lexer = Object.create(this.lexer)\r\n      var sharedState = { yy: {} }\r\n      for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n          sharedState.yy[k] = this.yy[k]\r\n        }\r\n      }\r\n      lexer.setInput(input, sharedState.yy)\r\n      sharedState.yy.lexer = lexer\r\n      sharedState.yy.parser = this\r\n      if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {}\r\n      }\r\n      var yyloc = lexer.yylloc\r\n      lstack.push(yyloc)\r\n      var ranges = lexer.options && lexer.options.ranges\r\n      if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError\r\n      } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError\r\n      }\r\n      function popStack(n) {\r\n        stack.length = stack.length - 2 * n\r\n        vstack.length = vstack.length - n\r\n        lstack.length = lstack.length - n\r\n      }\r\n      function lex() {\r\n        var token\r\n        token = tstack.pop() || lexer.lex() || EOF\r\n        if (typeof token !== 'number') {\r\n          if (token instanceof Array) {\r\n            tstack = token\r\n            token = tstack.pop()\r\n          }\r\n          token = self.symbols_[token] || token\r\n        }\r\n        return token\r\n      }\r\n      var symbol,\r\n        preErrorSymbol,\r\n        state,\r\n        action,\r\n        a,\r\n        r,\r\n        yyval = {},\r\n        p,\r\n        len,\r\n        newState,\r\n        expected\r\n      while (true) {\r\n        state = stack[stack.length - 1]\r\n        if (this.defaultActions[state]) {\r\n          action = this.defaultActions[state]\r\n        } else {\r\n          if (symbol === null || typeof symbol == 'undefined') {\r\n            symbol = lex()\r\n          }\r\n          action = table[state] && table[state][symbol]\r\n        }\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n          var errStr = ''\r\n          expected = []\r\n          for (p in table[state]) {\r\n            if (this.terminals_[p] && p > TERROR) {\r\n              expected.push(\"'\" + this.terminals_[p] + \"'\")\r\n            }\r\n          }\r\n          if (lexer.showPosition) {\r\n            errStr =\r\n              'Parse error on line ' +\r\n              (yylineno + 1) +\r\n              ':\\n' +\r\n              lexer.showPosition() +\r\n              '\\nExpecting ' +\r\n              expected.join(', ') +\r\n              \", got '\" +\r\n              (this.terminals_[symbol] || symbol) +\r\n              \"'\"\r\n          } else {\r\n            errStr =\r\n              'Parse error on line ' +\r\n              (yylineno + 1) +\r\n              ': Unexpected ' +\r\n              (symbol == EOF\r\n                ? 'end of input'\r\n                : \"'\" + (this.terminals_[symbol] || symbol) + \"'\")\r\n          }\r\n          this.parseError(errStr, {\r\n            text: lexer.match,\r\n            token: this.terminals_[symbol] || symbol,\r\n            line: lexer.yylineno,\r\n            loc: yyloc,\r\n            expected: expected\r\n          })\r\n        }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n          throw new Error(\r\n            'Parse Error: multiple actions possible at state: ' +\r\n              state +\r\n              ', token: ' +\r\n              symbol\r\n          )\r\n        }\r\n        switch (action[0]) {\r\n          case 1:\r\n            stack.push(symbol)\r\n            vstack.push(lexer.yytext)\r\n            lstack.push(lexer.yylloc)\r\n            stack.push(action[1])\r\n            symbol = null\r\n            if (!preErrorSymbol) {\r\n              yyleng = lexer.yyleng\r\n              yytext = lexer.yytext\r\n              yylineno = lexer.yylineno\r\n              yyloc = lexer.yylloc\r\n              if (recovering > 0) {\r\n                recovering--\r\n              }\r\n            } else {\r\n              symbol = preErrorSymbol\r\n              preErrorSymbol = null\r\n            }\r\n            break\r\n          case 2:\r\n            len = this.productions_[action[1]][1]\r\n            yyval.$ = vstack[vstack.length - len]\r\n            yyval._$ = {\r\n              first_line: lstack[lstack.length - (len || 1)].first_line,\r\n              last_line: lstack[lstack.length - 1].last_line,\r\n              first_column: lstack[lstack.length - (len || 1)].first_column,\r\n              last_column: lstack[lstack.length - 1].last_column\r\n            }\r\n            if (ranges) {\r\n              yyval._$.range = [\r\n                lstack[lstack.length - (len || 1)].range[0],\r\n                lstack[lstack.length - 1].range[1]\r\n              ]\r\n            }\r\n            r = this.performAction.apply(\r\n              yyval,\r\n              [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n              ].concat(args)\r\n            )\r\n            if (typeof r !== 'undefined') {\r\n              return r\r\n            }\r\n            if (len) {\r\n              stack = stack.slice(0, -1 * len * 2)\r\n              vstack = vstack.slice(0, -1 * len)\r\n              lstack = lstack.slice(0, -1 * len)\r\n            }\r\n            stack.push(this.productions_[action[1]][0])\r\n            vstack.push(yyval.$)\r\n            lstack.push(yyval._$)\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]]\r\n            stack.push(newState)\r\n            break\r\n          case 3:\r\n            return true\r\n        }\r\n      }\r\n      return true\r\n    }\r\n  }\r\n\r\n  /* generated by jison-lex 0.3.4 */\r\n  var lexer = (function () {\r\n    var lexer = {\r\n      EOF: 1,\r\n\r\n      parseError: function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n          this.yy.parser.parseError(str, hash)\r\n        } else {\r\n          throw new Error(str)\r\n        }\r\n      },\r\n\r\n      // resets the lexer, sets new input\r\n      setInput: function (input, yy) {\r\n        this.yy = yy || this.yy || {}\r\n        this._input = input\r\n        this._more = this._backtrack = this.done = false\r\n        this.yylineno = this.yyleng = 0\r\n        this.yytext = this.matched = this.match = ''\r\n        this.conditionStack = ['INITIAL']\r\n        this.yylloc = {\r\n          first_line: 1,\r\n          first_column: 0,\r\n          last_line: 1,\r\n          last_column: 0\r\n        }\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [0, 0]\r\n        }\r\n        this.offset = 0\r\n        return this\r\n      },\r\n\r\n      // consumes and returns one char from the input\r\n      input: function () {\r\n        var ch = this._input[0]\r\n        this.yytext += ch\r\n        this.yyleng++\r\n        this.offset++\r\n        this.match += ch\r\n        this.matched += ch\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g)\r\n        if (lines) {\r\n          this.yylineno++\r\n          this.yylloc.last_line++\r\n        } else {\r\n          this.yylloc.last_column++\r\n        }\r\n        if (this.options.ranges) {\r\n          this.yylloc.range[1]++\r\n        }\r\n\r\n        this._input = this._input.slice(1)\r\n        return ch\r\n      },\r\n\r\n      // unshifts one char (or a string) into the input\r\n      unput: function (ch) {\r\n        var len = ch.length\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g)\r\n\r\n        this._input = ch + this._input\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len)\r\n        //this.yyleng -= len;\r\n        this.offset -= len\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g)\r\n        this.match = this.match.substr(0, this.match.length - 1)\r\n        this.matched = this.matched.substr(0, this.matched.length - 1)\r\n\r\n        if (lines.length - 1) {\r\n          this.yylineno -= lines.length - 1\r\n        }\r\n        var r = this.yylloc.range\r\n\r\n        this.yylloc = {\r\n          first_line: this.yylloc.first_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.first_column,\r\n          last_column: lines\r\n            ? (lines.length === oldLines.length\r\n                ? this.yylloc.first_column\r\n                : 0) +\r\n              oldLines[oldLines.length - lines.length].length -\r\n              lines[0].length\r\n            : this.yylloc.first_column - len\r\n        }\r\n\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len]\r\n        }\r\n        this.yyleng = this.yytext.length\r\n        return this\r\n      },\r\n\r\n      // When called from action, caches matched text and appends it on next action\r\n      more: function () {\r\n        this._more = true\r\n        return this\r\n      },\r\n\r\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n      reject: function () {\r\n        if (this.options.backtrack_lexer) {\r\n          this._backtrack = true\r\n        } else {\r\n          return this.parseError(\r\n            'Lexical error on line ' +\r\n              (this.yylineno + 1) +\r\n              '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' +\r\n              this.showPosition(),\r\n            {\r\n              text: '',\r\n              token: null,\r\n              line: this.yylineno\r\n            }\r\n          )\r\n        }\r\n        return this\r\n      },\r\n\r\n      // retain first n characters of the match\r\n      less: function (n) {\r\n        this.unput(this.match.slice(n))\r\n      },\r\n\r\n      // displays already matched input, i.e. for error messages\r\n      pastInput: function () {\r\n        var past = this.matched.substr(\r\n          0,\r\n          this.matched.length - this.match.length\r\n        )\r\n        return (\r\n          (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, '')\r\n        )\r\n      },\r\n\r\n      // displays upcoming input, i.e. for error messages\r\n      upcomingInput: function () {\r\n        var next = this.match\r\n        if (next.length < 20) {\r\n          next += this._input.substr(0, 20 - next.length)\r\n        }\r\n        return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(\r\n          /\\n/g,\r\n          ''\r\n        )\r\n      },\r\n\r\n      // displays the character position where the lexing error occurred, i.e. for error messages\r\n      showPosition: function () {\r\n        var pre = this.pastInput()\r\n        var c = new Array(pre.length + 1).join('-')\r\n        return pre + this.upcomingInput() + '\\n' + c + '^'\r\n      },\r\n\r\n      // test the lexed token: return FALSE when not a match, otherwise return token\r\n      test_match: function (match, indexed_rule) {\r\n        var token, lines, backup\r\n\r\n        if (this.options.backtrack_lexer) {\r\n          // save context\r\n          backup = {\r\n            yylineno: this.yylineno,\r\n            yylloc: {\r\n              first_line: this.yylloc.first_line,\r\n              last_line: this.last_line,\r\n              first_column: this.yylloc.first_column,\r\n              last_column: this.yylloc.last_column\r\n            },\r\n            yytext: this.yytext,\r\n            match: this.match,\r\n            matches: this.matches,\r\n            matched: this.matched,\r\n            yyleng: this.yyleng,\r\n            offset: this.offset,\r\n            _more: this._more,\r\n            _input: this._input,\r\n            yy: this.yy,\r\n            conditionStack: this.conditionStack.slice(0),\r\n            done: this.done\r\n          }\r\n          if (this.options.ranges) {\r\n            backup.yylloc.range = this.yylloc.range.slice(0)\r\n          }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g)\r\n        if (lines) {\r\n          this.yylineno += lines.length\r\n        }\r\n        this.yylloc = {\r\n          first_line: this.yylloc.last_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.last_column,\r\n          last_column: lines\r\n            ? lines[lines.length - 1].length -\r\n              lines[lines.length - 1].match(/\\r?\\n?/)[0].length\r\n            : this.yylloc.last_column + match[0].length\r\n        }\r\n        this.yytext += match[0]\r\n        this.match += match[0]\r\n        this.matches = match\r\n        this.yyleng = this.yytext.length\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [this.offset, (this.offset += this.yyleng)]\r\n        }\r\n        this._more = false\r\n        this._backtrack = false\r\n        this._input = this._input.slice(match[0].length)\r\n        this.matched += match[0]\r\n        token = this.performAction.call(\r\n          this,\r\n          this.yy,\r\n          this,\r\n          indexed_rule,\r\n          this.conditionStack[this.conditionStack.length - 1]\r\n        )\r\n        if (this.done && this._input) {\r\n          this.done = false\r\n        }\r\n        if (token) {\r\n          return token\r\n        } else if (this._backtrack) {\r\n          // recover context\r\n          for (var k in backup) {\r\n            this[k] = backup[k]\r\n          }\r\n          return false // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false\r\n      },\r\n\r\n      // return next match in input\r\n      next: function () {\r\n        if (this.done) {\r\n          return this.EOF\r\n        }\r\n        if (!this._input) {\r\n          this.done = true\r\n        }\r\n\r\n        var token, match, tempMatch, index\r\n        if (!this._more) {\r\n          this.yytext = ''\r\n          this.match = ''\r\n        }\r\n        var rules = this._currentRules()\r\n        for (var i = 0; i < rules.length; i++) {\r\n          tempMatch = this._input.match(this.rules[rules[i]])\r\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n            match = tempMatch\r\n            index = i\r\n            if (this.options.backtrack_lexer) {\r\n              token = this.test_match(tempMatch, rules[i])\r\n              if (token !== false) {\r\n                return token\r\n              } else if (this._backtrack) {\r\n                match = false\r\n                continue // rule action called reject() implying a rule MISmatch.\r\n              } else {\r\n                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                return false\r\n              }\r\n            } else if (!this.options.flex) {\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (match) {\r\n          token = this.test_match(match, rules[index])\r\n          if (token !== false) {\r\n            return token\r\n          }\r\n          // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n          return false\r\n        }\r\n        if (this._input === '') {\r\n          return this.EOF\r\n        } else {\r\n          return this.parseError(\r\n            'Lexical error on line ' +\r\n              (this.yylineno + 1) +\r\n              '. Unrecognized text.\\n' +\r\n              this.showPosition(),\r\n            {\r\n              text: '',\r\n              token: null,\r\n              line: this.yylineno\r\n            }\r\n          )\r\n        }\r\n      },\r\n\r\n      // return next match that has a token\r\n      lex: function lex() {\r\n        var r = this.next()\r\n        if (r) {\r\n          return r\r\n        } else {\r\n          return this.lex()\r\n        }\r\n      },\r\n\r\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n      begin: function begin(condition) {\r\n        this.conditionStack.push(condition)\r\n      },\r\n\r\n      // pop the previously active lexer condition state off the condition stack\r\n      popState: function popState() {\r\n        var n = this.conditionStack.length - 1\r\n        if (n > 0) {\r\n          return this.conditionStack.pop()\r\n        } else {\r\n          return this.conditionStack[0]\r\n        }\r\n      },\r\n\r\n      // produce the lexer rule set which is active for the currently active lexer condition state\r\n      _currentRules: function _currentRules() {\r\n        if (\r\n          this.conditionStack.length &&\r\n          this.conditionStack[this.conditionStack.length - 1]\r\n        ) {\r\n          return this.conditions[\r\n            this.conditionStack[this.conditionStack.length - 1]\r\n          ].rules\r\n        } else {\r\n          return this.conditions['INITIAL'].rules\r\n        }\r\n      },\r\n\r\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n      topState: function topState(n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0)\r\n        if (n >= 0) {\r\n          return this.conditionStack[n]\r\n        } else {\r\n          return 'INITIAL'\r\n        }\r\n      },\r\n\r\n      // alias for begin(condition)\r\n      pushState: function pushState(condition) {\r\n        this.begin(condition)\r\n      },\r\n\r\n      // return the number of states currently on the stack\r\n      stateStackSize: function stateStackSize() {\r\n        return this.conditionStack.length\r\n      },\r\n      options: { 'case-insensitive': true },\r\n      performAction: function anonymous(\r\n        yy,\r\n        yy_,\r\n        $avoiding_name_collisions,\r\n        YY_START\r\n      ) {\r\n        var YYSTATE = YY_START\r\n        switch ($avoiding_name_collisions) {\r\n          case 0 /* ignore whitespace */:\r\n            break\r\n          case 1:\r\n            return ''\r\n            break\r\n          case 2:\r\n            return ''\r\n            break\r\n          case 3:\r\n            return 42\r\n            break\r\n          case 4:\r\n            return 35\r\n            break\r\n          case 5:\r\n            return 77\r\n            break\r\n          case 6:\r\n            return 78\r\n            break\r\n          case 7:\r\n            return 78\r\n            break\r\n          case 8:\r\n            return 8\r\n            break\r\n          case 9:\r\n            return 6\r\n            break\r\n          case 10:\r\n            return 82\r\n            break\r\n          case 11:\r\n            return 7\r\n            break\r\n          case 12:\r\n            return 9\r\n            break\r\n          case 13:\r\n            return 59\r\n            break\r\n          case 14:\r\n            return 13\r\n            break\r\n          case 15:\r\n            return 15\r\n            break\r\n          case 16:\r\n            return 17\r\n            break\r\n          case 17:\r\n            return 18\r\n            break\r\n          case 18:\r\n            return 19\r\n            break\r\n          case 19:\r\n            return 20\r\n            break\r\n          case 20:\r\n            return 11\r\n            break\r\n          case 21:\r\n            return 62\r\n            break\r\n          case 22:\r\n            return 64\r\n            break\r\n          case 23:\r\n            return 23\r\n            break\r\n          case 24:\r\n            return 25\r\n            break\r\n          case 25:\r\n            return 26\r\n            break\r\n          case 26:\r\n            return 27\r\n            break\r\n          case 27:\r\n            return 30\r\n            break\r\n          case 28:\r\n            return 34\r\n            break\r\n          case 29:\r\n            return 33\r\n            break\r\n          case 30:\r\n            return 65\r\n            break\r\n          case 31:\r\n            return 66\r\n            break\r\n          case 32:\r\n            return 37\r\n            break\r\n          case 33:\r\n            return 41\r\n            break\r\n          case 34:\r\n            return 43\r\n            break\r\n          case 35:\r\n            return 52\r\n            break\r\n          case 36:\r\n            return 54\r\n            break\r\n          case 37:\r\n            return 55\r\n            break\r\n          case 38:\r\n            return 46\r\n            break\r\n          case 39:\r\n            return 48\r\n            break\r\n          case 40:\r\n            return 45\r\n            break\r\n          case 41:\r\n            return 49\r\n            break\r\n          case 42:\r\n            return 56\r\n            break\r\n          case 43:\r\n            return 58\r\n            break\r\n          case 44:\r\n            return 44\r\n            break\r\n          case 45:\r\n            return 83\r\n            break\r\n          case 46:\r\n            return 84\r\n            break\r\n          case 47:\r\n            return 85\r\n            break\r\n          case 48:\r\n            return 86\r\n            break\r\n          case 49:\r\n            return 87\r\n            break\r\n          case 50:\r\n            return 88\r\n            break\r\n          case 51:\r\n            return 89\r\n            break\r\n          case 52:\r\n            return 90\r\n            break\r\n          case 53:\r\n            return 91\r\n            break\r\n          case 54:\r\n            return 92\r\n            break\r\n          case 55:\r\n            return 93\r\n            break\r\n          case 56:\r\n            return 94\r\n            break\r\n          case 57:\r\n            return 95\r\n            break\r\n          case 58:\r\n            return 70\r\n            break\r\n          case 59:\r\n            return 70\r\n            break\r\n          case 60:\r\n            return 72\r\n            break\r\n          case 61:\r\n            return 72\r\n            break\r\n          case 62:\r\n            return 74\r\n            break\r\n          case 63:\r\n            return 74\r\n            break\r\n          case 64:\r\n            return 74\r\n            break\r\n          case 65:\r\n            return 31\r\n            break\r\n          case 66:\r\n            return 36\r\n            break\r\n          case 67:\r\n            return 96\r\n            break\r\n          case 68:\r\n            return 97\r\n            break\r\n          case 69:\r\n            return 98\r\n            break\r\n          case 70:\r\n            return 99\r\n            break\r\n          case 71:\r\n            yy_.yytext = yy.utils.unquoteString(yy_.yytext)\r\n            return 14\r\n            break\r\n          case 72:\r\n            return 38\r\n            break\r\n          case 73:\r\n            return 5\r\n            break\r\n          case 74:\r\n            return 101\r\n            break\r\n          case 75:\r\n            return 103\r\n            break\r\n          case 76:\r\n            return '\\\\'\r\n            break\r\n          case 77:\r\n            return 28\r\n            break\r\n          case 78:\r\n            return 61\r\n            break\r\n          case 79:\r\n            return 29\r\n            break\r\n          case 80:\r\n            return 57\r\n            break\r\n          case 81:\r\n            return 71\r\n            break\r\n        }\r\n      },\r\n      rules: [\r\n        /^(?:\\s+)/i,\r\n        /^(?:[#].*)/i,\r\n        /^(?:\\/\\/.*)/i,\r\n        /^(?:([_A-Z0-9\\/\\+]+==))/i,\r\n        /^(?:-?[0-9]+(\\.[0-9]+)?\\b)/i,\r\n        /^(?:0[xX][0-9A-F]+\\b)/i,\r\n        /^(?:false\\b)/i,\r\n        /^(?:true\\b)/i,\r\n        /^(?:all\\b)/i,\r\n        /^(?:reset\\b)/i,\r\n        /^(?:clear\\b)/i,\r\n        /^(?:build\\b)/i,\r\n        /^(?:help\\b)/i,\r\n        /^(?:load\\b)/i,\r\n        /^(?:get\\b)/i,\r\n        /^(?:set\\b)/i,\r\n        /^(?:set_save\\b)/i,\r\n        /^(?:set_restore\\b)/i,\r\n        /^(?:set_reset\\b)/i,\r\n        /^(?:preset\\b)/i,\r\n        /^(?:motm\\b)/i,\r\n        /^(?:add\\b)/i,\r\n        /^(?:rep\\b)/i,\r\n        /^(?:remove\\b)/i,\r\n        /^(?:hide\\b)/i,\r\n        /^(?:show\\b)/i,\r\n        /^(?:list\\b)/i,\r\n        /^(?:select\\b)/i,\r\n        /^(?:within\\b)/i,\r\n        /^(?:selector\\b)/i,\r\n        /^(?:mode\\b)/i,\r\n        /^(?:color\\b)/i,\r\n        /^(?:material\\b)/i,\r\n        /^(?:view\\b)/i,\r\n        /^(?:unit\\b)/i,\r\n        /^(?:line\\b)/i,\r\n        /^(?:listobj\\b)/i,\r\n        /^(?:removeobj\\b)/i,\r\n        /^(?:rotate\\b)/i,\r\n        /^(?:translate\\b)/i,\r\n        /^(?:scale\\b)/i,\r\n        /^(?:center\\b)/i,\r\n        /^(?:url\\b)/i,\r\n        /^(?:screenshot\\b)/i,\r\n        /^(?:dssp\\b)/i,\r\n        /^(?:file_list\\b)/i,\r\n        /^(?:file_register\\b)/i,\r\n        /^(?:file_delete\\b)/i,\r\n        /^(?:preset_add\\b)/i,\r\n        /^(?:preset_delete\\b)/i,\r\n        /^(?:preset_update\\b)/i,\r\n        /^(?:preset_rename\\b)/i,\r\n        /^(?:preset_open\\b)/i,\r\n        /^(?:create_scenario\\b)/i,\r\n        /^(?:reset_scenario\\b)/i,\r\n        /^(?:delete_scenario\\b)/i,\r\n        /^(?:add_scenario_item\\b)/i,\r\n        /^(?:list_scenario\\b)/i,\r\n        /^(?:s\\b)/i,\r\n        /^(?:mt\\b)/i,\r\n        /^(?:m\\b)/i,\r\n        /^(?:c\\b)/i,\r\n        /^(?:x\\b)/i,\r\n        /^(?:y\\b)/i,\r\n        /^(?:z\\b)/i,\r\n        /^(?:as\\b)/i,\r\n        /^(?:of\\b)/i,\r\n        /^(?:pdb\\b)/i,\r\n        /^(?:delay\\b)/i,\r\n        /^(?:prst\\b)/i,\r\n        /^(?:desc\\b)/i,\r\n        /^(?:((?:\"(?:\\\\.|[^\\\\\"])*\"|'(?:\\\\.|[^\\\\'])*')))/i,\r\n        /^(?:([_A-Z0-9]+))/i,\r\n        /^(?:$)/i,\r\n        /^(?:\\.)/i,\r\n        /^(?:\\/)/i,\r\n        /^(?:\\\\)/i,\r\n        /^(?:-e\\b)/i,\r\n        /^(?:-f\\b)/i,\r\n        /^(?:-s\\b)/i,\r\n        /^(?:-v\\b)/i,\r\n        /^(?:=)/i\r\n      ],\r\n      conditions: {\r\n        INITIAL: {\r\n          rules: [\r\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\r\n            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\r\n            36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,\r\n            53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,\r\n            70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81\r\n          ],\r\n          inclusive: true\r\n        }\r\n      }\r\n    }\r\n    return lexer\r\n  })()\r\n  parser.lexer = lexer\r\n  function Parser() {\r\n    this.yy = {}\r\n  }\r\n  Parser.prototype = parser\r\n  parser.Parser = Parser\r\n  return new Parser()\r\n})()\r\n\r\nmodule.exports = { parser: parser }\r\n",
		"import palettes from '../gfx/palettes'\r\nimport settings from '../settings'\r\n\r\nconst modeIdDesc = {\r\n  $help: [\r\n    'Rendering mode shortcut',\r\n    '    BS - balls and sticks mode',\r\n    '    LN - lines mode',\r\n    '    LC - licorice mode',\r\n    '    VW - van der waals mode',\r\n    '    TR - trace mode',\r\n    '    TU - tube mode',\r\n    '    CA - cartoon mode',\r\n    '    SA - isosurface mode',\r\n    '    QS - quick surface mode',\r\n    '    SE - solvent excluded mode',\r\n    '    TX - text mode'\r\n  ],\r\n  BS: {\r\n    $help: [\r\n      '   Balls and sticks',\r\n      '      aromrad = <number> #aromatic radius',\r\n      '      atom = <number>    #atom radius',\r\n      '      bond = <number>    #bond radius',\r\n      '      multibond = <bool> #use multibond',\r\n      '      showarom = <bool>  #show aromatic',\r\n      '      space = <number>   #space value\\n'\r\n    ]\r\n  },\r\n  CA: {\r\n    $help: [\r\n      '   Cartoon',\r\n      '      arrow = <number>   #arrow size',\r\n      '      depth = <number>   #depth of surface',\r\n      '      heightSegmentsRatio = <number>',\r\n      '      radius = <number>  #tube radius',\r\n      '      tension = <number> #',\r\n      '      width = <number>  #secondary width\\n'\r\n    ]\r\n  },\r\n  LN: {\r\n    $help: [\r\n      '   Lines',\r\n      '      atom = <number>    #atom radius',\r\n      '      chunkarom = <number>',\r\n      '      multibond = <bool> #use multibond',\r\n      '      showarom = <bool>  #show aromatic',\r\n      '      offsarom = <number>\\n'\r\n    ]\r\n  },\r\n  LC: {\r\n    $help: [\r\n      '   Licorice',\r\n      '      aromrad = <number> #aromatic radius',\r\n      '      bond = <number>    #bond radius',\r\n      '      multibond = <bool> #use multibond',\r\n      '      showarom = <bool>  #show aromatic',\r\n      '      space = <number>   #space value\\n'\r\n    ]\r\n  },\r\n  VW: {\r\n    $help: ['   Van der Waals', '      nothing\\n']\r\n  },\r\n  TR: {\r\n    $help: ['   Trace', '      radius = <number>  #tube radius\\n']\r\n  },\r\n  TU: {\r\n    $help: [\r\n      '   Tube',\r\n      '      heightSegmentsRatio = <number>',\r\n      '      radius = <number>  #tube radius',\r\n      '      tension = <number> \\n'\r\n    ]\r\n  },\r\n  SA: {\r\n    $help: ['   Surface', '      zClip = <bool> #clip z plane\\n']\r\n  },\r\n  QS: {\r\n    $help: [\r\n      '   Quick surface',\r\n      '      isoValue = <number>',\r\n      '      scale = <number>',\r\n      '      wireframe = <bool>',\r\n      '      zClip = <bool> #clip z plane\\n'\r\n    ]\r\n  },\r\n  SE: {\r\n    $help: [\r\n      '   Solvent excluded surface',\r\n      '      zClip = <bool> #clip z plane\\n'\r\n    ]\r\n  },\r\n  TX: {\r\n    $help: [\r\n      '   Text mode',\r\n      '      template = <format string> string that can include \"{{ id }}\"',\r\n      '          it will be replaced by value, id can be one of next:',\r\n      '          serial, name, type, sequence, residue, chain, hetatm, water\\n',\r\n      '      horizontalAlign = <string> {\"left\", \"right\", \"center\"}',\r\n      '      verticalAlign = <string> {\"top\", \"bottom\", \"middle\"}',\r\n      '      dx = <number> #offset along x',\r\n      '      dy = <number> #offset along y',\r\n      '      dz = <number> #offset along z',\r\n      '      fg = <string> #text color modificator',\r\n      '           could be keyword, named color or hex',\r\n      '      fg = <string> #back color modificator',\r\n      '           could be keyword, named color or hex',\r\n      '      showBg = <bool> #if set show background',\r\n      '           plate under text'\r\n    ]\r\n  }\r\n}\r\n\r\nconst colorDesc = {\r\n  $help: [\r\n    'Coloring mode shortcut',\r\n    '    EL - color by element',\r\n    '    CH - color by chain',\r\n    '    SQ - color by sequence',\r\n    '    RT - color by residue type',\r\n    '    SS - color by secondary structure',\r\n    '    UN - uniform'\r\n  ],\r\n  UN: {\r\n    $help: [\r\n      'Parameters of coloring modes customization',\r\n      '   Uniform',\r\n      '      color = <number|color> #RGB->HEX->dec\\n'\r\n    ],\r\n    color: {\r\n      $help: Object.keys(palettes.get(settings.now.palette).namedColors)\r\n        .sort()\r\n        .join('\\n')\r\n    }\r\n  }\r\n}\r\n\r\nconst materialDesc = {\r\n  $help: [\r\n    'Material shortcut',\r\n    '    DF - diffuse',\r\n    '    TR - transparent',\r\n    '    SF - soft plastic',\r\n    '    PL - glossy plastic',\r\n    '    ME - metal',\r\n    '    GL - glass'\r\n  ]\r\n}\r\n\r\nconst addRepDesc = {\r\n  $help: [\r\n    'Short (packed) representation description as a set of variables',\r\n    '    s=<EXPRESSION>',\r\n    '        selector property',\r\n    '    m=<MODE_ID>[!<PARAMETER>:<VALUE>[,...]]',\r\n    '        render mode property',\r\n    '    c=<COLORER_ID>[!<PARAMETER>:<VALUE>[,...]]',\r\n    '        color mode property',\r\n    '    mt=<MATERIAL_ID>',\r\n    '        material property'\r\n  ],\r\n  s: {\r\n    $help:\r\n      'Selection expression string as it is in menu->representations->selection'\r\n  },\r\n  m: modeIdDesc,\r\n  c: colorDesc,\r\n  mt: materialDesc\r\n}\r\n\r\nconst setGetParameterDesc = {\r\n  $help: [\r\n    'Parameters of rendering modes customization: modes',\r\n    'Parameters of colorer customization: colorers',\r\n    'Autobuild: autobuild = (<number>|<bool>)'\r\n  ],\r\n  modes: modeIdDesc,\r\n  colorers: colorDesc\r\n}\r\n\r\nconst help = {\r\n  $help: [\r\n    'help (<cmd name>| <path to property>)',\r\n    'You can get detailed information about command options',\r\n    '   using \"help cmd.opt.opt.[...]\"\\n',\r\n    '   you can use one line comments',\r\n    '   everything started from (#|//) will be skipped',\r\n    '   Example: >build //some comment\\n',\r\n    'List of available commands:'\r\n  ],\r\n  reset: {\r\n    $help: [\r\n      'Reload current object, delete all representations',\r\n      '    Nothing will work until load new object'\r\n    ]\r\n  },\r\n  load: {\r\n    $help: [\r\n      'load (<PDBID>|<URL>|-f [<*.NC FILE URL STRING>])',\r\n      '    Load new pdb object from selected source'\r\n    ],\r\n    PDBID: {\r\n      $help: 'pdb id in remote molecule database'\r\n    },\r\n    URL: {\r\n      $help: 'url to source file'\r\n    },\r\n    f: {\r\n      $help: [\r\n        'open file system dialog to fetch local file',\r\n        'optionally you can determine trajectory file',\r\n        'via URL for *.top model'\r\n      ]\r\n    }\r\n  },\r\n  clear: {\r\n    $help: 'No args. Clear terminal'\r\n  },\r\n  add: {\r\n    $help: [\r\n      'add [<REP_NAME>] [<DESCRIPTION>]',\r\n      '    Add new item to representation set with',\r\n      '    default or <DESCRIPTION> params'\r\n    ],\r\n    REP_NAME: {\r\n      $help: 'Identifier string [_,a-z,A-Z,0-9] can not start from digit'\r\n    },\r\n    DESCRIPTION: addRepDesc\r\n  },\r\n  rep: {\r\n    $help: [\r\n      'rep [<REP_NAME>|<REP_INDEX>] [<DESCRIPTION>]',\r\n      '    set current representation by name or index',\r\n      '    edit current representation by <DESCRIPTION>'\r\n    ],\r\n    REP_NAME: {\r\n      $help: [\r\n        'Identifier string [_,a-z,A-Z,0-9] can not start from digit',\r\n        'Must be declared before'\r\n      ]\r\n    },\r\n    REP_INDEX: {\r\n      $help: 'Index of available representation'\r\n    },\r\n    DESCRIPTION: addRepDesc\r\n  },\r\n  remove: {\r\n    $help: [\r\n      'remove (<REP_NAME>|<REP_INDEX>)',\r\n      'Remove representation by name or index'\r\n    ],\r\n    REP_NAME: {\r\n      $help: [\r\n        'Identifier string [_,a-z,A-Z,0-9] can not start from digit',\r\n        'Must be declared before'\r\n      ]\r\n    },\r\n    REP_INDEX: {\r\n      $help: 'Index of available representation'\r\n    }\r\n  },\r\n  selector: {\r\n    $help: [\r\n      'selector <EXPRESSION>',\r\n      '   set selector from EXPRESSION to current representation'\r\n    ],\r\n    EXPRESSION: {\r\n      $help:\r\n        'Selection expression string as it is in menu->representations->selection'\r\n    }\r\n  },\r\n  mode: {\r\n    $help: [\r\n      'mode <MODE_ID> [<PARAMETER>=<VALUE>...]',\r\n      '   set rendering mode and apply parameters to current representation'\r\n    ],\r\n    MODE_ID: modeIdDesc\r\n  },\r\n  color: {\r\n    $help: [\r\n      'color <COLORER_ID> [<PARAMETER>=<VALUE>...]',\r\n      '   set colorer and apply parameters to current representation'\r\n    ],\r\n    COLORER_ID: colorDesc\r\n  },\r\n  material: {\r\n    $help: [\r\n      'material <MATERIAL_ID>',\r\n      '   set material to current representation'\r\n    ],\r\n    MATERIAL_ID: materialDesc\r\n  },\r\n  build: {\r\n    $help: 'build help str',\r\n    add: {\r\n      $help: 'build.add',\r\n      new: {\r\n        $help: [\r\n          'add.new',\r\n          'add.new new line 1',\r\n          'add.new new line 2',\r\n          'add.new new line 3'\r\n        ]\r\n      }\r\n    },\r\n    del: {\r\n      $help: 'build.del'\r\n    }\r\n  },\r\n  list: {\r\n    $help: [\r\n      'list [-e|-s|<REP_NAME>|<REP_INDEX>]',\r\n      'Print representations if no args print list of representations',\r\n      '    -e expand list and show all representations',\r\n      '    -s show all user-registered selectors',\r\n      '    <REP_NAME>|<REP_INDEX> show only current representation'\r\n    ]\r\n  },\r\n  hide: {\r\n    $help: [\r\n      'hide (<REP_NAME>|<REP_INDEX>)',\r\n      'Hide representation referenced in args'\r\n    ]\r\n  },\r\n  show: {\r\n    $help: [\r\n      'show (<REP_NAME>|<REP_INDEX>)',\r\n      'Show representation referenced in args'\r\n    ]\r\n  },\r\n  get: {\r\n    $help: [\r\n      'get <PARAMETER>',\r\n      'Print <PARAMETER> value',\r\n      '    <PARAMETER> - path to option use get.PARAMETER to get more info'\r\n    ],\r\n    PARAMETER: setGetParameterDesc\r\n  },\r\n  set: {\r\n    $help: [\r\n      'set <PARAMETER> <VALUE>',\r\n      'Set <PARAMETER> with <VALUE>',\r\n      '    <PARAMETER> - path to option use set.PARAMETER to get more info'\r\n    ],\r\n    PARAMETER: setGetParameterDesc\r\n  },\r\n  set_save: {\r\n    $help: ['set_save', 'Save current settings to cookie']\r\n  },\r\n  set_restore: {\r\n    $help: ['set_restore', 'Load and apply settings from cookie']\r\n  },\r\n  set_reset: {\r\n    $help: ['set_reset', 'Reset current settings to the defaults']\r\n  },\r\n  preset: {\r\n    $help: [\r\n      'preset [<PRESET>]',\r\n      'Reset current representation or set preset to <PRESET>'\r\n    ],\r\n    PRESET: {\r\n      $help: ['default', 'wire', 'small', 'macro']\r\n    }\r\n  },\r\n  unit: {\r\n    $help: [\r\n      'unit [<unit_id>]',\r\n      'Change current biological structure view. Zero <unit_id> value means asymmetric unit,',\r\n      'positive values set an assembly with corresponding number.',\r\n      'Being called with no parameters command prints current unit information.'\r\n    ]\r\n  },\r\n  view: {\r\n    $help: [\r\n      'view [<ENCODED_VIEW>]',\r\n      'Get current encoded view or set if ENCODED_VIEW placed as argument'\r\n    ],\r\n    ENCODED_VIEW: {\r\n      $help: ['encoded view matrix string (binary code)']\r\n    }\r\n  },\r\n  rotate: {\r\n    $help: [\r\n      'rotate (x|y|z) [<DEGREES>] [(x|y|z) [<DEGREES>]]...',\r\n      'Rotate scene'\r\n    ]\r\n  },\r\n  scale: {\r\n    $help: ['scale <SCALE>', 'Scale scene']\r\n  },\r\n  select: {\r\n    $help: [\r\n      'select <SELECTOR_STRING> [as <SELECTOR_NAME>]',\r\n      'Select atoms using selector defined in SELECTOR_STRING',\r\n      '    and if SELECTOR_NAME is defined register it in viewer',\r\n      '    you can use it later as a complex selector'\r\n    ]\r\n  },\r\n  within: {\r\n    $help: [\r\n      'within <DISTANCE> of <SELECTOR_STRING> as <SELECTOR_NAME>',\r\n      'Build within named selector',\r\n      '    DISTANCE        <number>',\r\n      '    SELECTOR_STRING <string(selection language)>',\r\n      '    SELECTOR_NAME   <identifier>'\r\n    ]\r\n  },\r\n  url: {\r\n    $help: [\r\n      'url [-s] [-v]',\r\n      'Report URL encoded scene',\r\n      '    if -s set that include settings in the URL',\r\n      '    if -v set that include view in the URL'\r\n    ]\r\n  },\r\n  screenshot: {\r\n    $help: [\r\n      'screenshot [<WIDTH> [<HEIGHT>]]',\r\n      'Make a screenshot of the scene',\r\n      '    WIDTH  <number> in pixels',\r\n      '    HEIGHT <number> in pixels, equal to WIDTH by default'\r\n    ]\r\n  },\r\n  line: {\r\n    $help: [\r\n      'line <first_atom_path> <second_atom_path> [<PARAMETER>=<VALUE>]',\r\n      'Draw dashed line between two specified atoms'\r\n    ]\r\n  },\r\n  removeobj: {\r\n    $help: [\r\n      'removeobj <id>',\r\n      'Remove scene object by its index. Indices could be obtained by <listobj> command'\r\n    ]\r\n  },\r\n  listobj: {\r\n    $help: ['listobj', 'Display the list of all existing scene objects']\r\n  }\r\n}\r\n\r\nexport default help\r\n",
		"import { Miew } from './Miew'\r\nimport { parser as parsercli } from './utils/MiewCLIParser'\r\nimport clihelp from './utils/MiewCLIHelp'\r\nimport logger from './utils/logger'\r\nimport utils from './utils'\r\nimport { slice, sortBy, get, keys, isUndefined, set, assign } from 'lodash'\r\n\r\nconst {\r\n  chem: { selectors },\r\n  modes,\r\n  colorers,\r\n  materials,\r\n  palettes,\r\n  options,\r\n  settings\r\n} = Miew\r\n\r\nfunction None() {}\r\n\r\nconst NULL = (function () {\r\n  const obj = new None()\r\n  return function () {\r\n    return obj\r\n  }\r\n})()\r\n\r\nclass RepresentationMap {\r\n  constructor() {\r\n    this.representationMap = {}\r\n    this.representationID = {}\r\n  }\r\n\r\n  get(strId) {\r\n    return (\r\n      this.representationMap[strId] ||\r\n      this.representationID[strId] ||\r\n      '<no name>'\r\n    )\r\n  }\r\n\r\n  add(strId, index) {\r\n    if (strId === -1) {\r\n      return 'Can not create representation: there is no data'\r\n    }\r\n\r\n    if (index !== undefined) {\r\n      if (!this.representationMap.hasOwnProperty(strId)) {\r\n        this.representationMap[strId.toString()] = index\r\n        this.representationID[index] = strId.toString()\r\n      } else {\r\n        return 'This name has already existed, registered without name'\r\n      }\r\n    }\r\n    return `Representation ${strId} successfully added`\r\n  }\r\n\r\n  remove(index) {\r\n    if (index && this.representationID.hasOwnProperty(index)) {\r\n      delete this.representationMap[this.representationID[index]]\r\n      delete this.representationID[index]\r\n    }\r\n\r\n    const sortedKeys = Object.keys(this.representationID).sort()\r\n    for (const i in sortedKeys) {\r\n      if (sortedKeys.hasOwnProperty(i)) {\r\n        const id = sortedKeys[i]\r\n        if (id > index) {\r\n          this.representationID[id - 1] = this.representationID[id]\r\n          this.representationMap[this.representationID[id]] -= 1\r\n          delete this.representationID[id]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.representationMap = {}\r\n    this.representationID = {}\r\n  }\r\n}\r\n\r\nconst representationsStorage = new RepresentationMap()\r\n\r\nfunction keyRemap(key) {\r\n  const keys = {\r\n    s: 'selector',\r\n    m: 'mode',\r\n    c: 'colorer',\r\n    mt: 'material',\r\n    mode: 'modes',\r\n    color: 'colorers',\r\n    colorer: 'colorers',\r\n    select: 'selector',\r\n    material: 'materials',\r\n    selector: 'selector'\r\n  }\r\n  const ans = keys[key]\r\n  return ans === undefined ? key : ans\r\n}\r\n\r\nclass CLIUtils {\r\n  list(miew, repMap, key) {\r\n    let ret = ''\r\n    if (miew && repMap !== undefined) {\r\n      if (key === undefined || key === '-e') {\r\n        const count = miew.repCount()\r\n\r\n        for (let i = 0; i < count; i++) {\r\n          ret += this.listRep(miew, repMap, i, key)\r\n        }\r\n      }\r\n    }\r\n    return ret\r\n  }\r\n\r\n  listRep(miew, repMap, repIndex, key) {\r\n    let ret = ''\r\n    const rep = miew.repGet(repIndex)\r\n    if (!rep) {\r\n      logger.warn(`Rep ${repIndex} does not exist!`)\r\n      return ret\r\n    }\r\n    const index = repIndex\r\n    const repName = repMap.get(index)\r\n\r\n    const { mode, colorer } = rep\r\n    const selectionStr = rep.selectorString\r\n    const material = rep.materialPreset\r\n\r\n    ret += `#${index} : ${mode.name}${\r\n      repName === '<no name>' ? '' : `, ${repName}`\r\n    }\\n`\r\n\r\n    if (key !== undefined) {\r\n      ret += `    selection : \"${selectionStr}\"\\n`\r\n      ret += `    mode      : (${mode.id}), ${mode.name}\\n`\r\n      ret += `    colorer   : (${colorer.id}), ${colorer.name}\\n`\r\n      ret += `    material  : (${material.id}), ${material.name}\\n`\r\n    }\r\n\r\n    return ret\r\n  }\r\n\r\n  listSelector(miew, context) {\r\n    let ret = ''\r\n\r\n    for (const k in context) {\r\n      if (context.hasOwnProperty(k)) {\r\n        ret += `${k} : \"${context[k]}\"\\n`\r\n      }\r\n    }\r\n\r\n    return ret\r\n  }\r\n\r\n  listObjs(miew) {\r\n    const objs = miew._objects\r\n\r\n    if (!objs || !Array.isArray(objs) || objs.length === 0) {\r\n      return 'There are no objects on the scene'\r\n    }\r\n\r\n    const strList = []\r\n    for (let i = 0, n = objs.length; i < n; ++i) {\r\n      strList[i] = `${i}: ${objs[i].toString()}`\r\n    }\r\n\r\n    return strList.join('\\n')\r\n  }\r\n\r\n  joinHelpStr(helpData) {\r\n    if (helpData instanceof Array) {\r\n      return helpData.join('\\n')\r\n    }\r\n    return helpData\r\n  }\r\n\r\n  help(path) {\r\n    if (isUndefined(path)) {\r\n      return `${this.joinHelpStr(clihelp.$help)}\\n${slice(\r\n        sortBy(keys(clihelp)),\r\n        1\r\n      ).join(', ')}\\n`\r\n    }\r\n\r\n    const helpItem = get(clihelp, path)\r\n    return isUndefined(helpItem)\r\n      ? this.help()\r\n      : `${this.joinHelpStr(helpItem.$help)}\\n`\r\n  }\r\n\r\n  load(miew, arg) {\r\n    if (miew === undefined || arg === undefined || arg === '-f') {\r\n      return\r\n    }\r\n    miew.awaitWhileCMDisInProcess()\r\n    const finish = () => miew.finishAwaitingCMDInProcess()\r\n    miew.load(arg).then(finish, finish)\r\n  }\r\n\r\n  checkArg(key, arg, modificate) {\r\n    if (key !== undefined && arg !== undefined) {\r\n      if (keyRemap(key) === 'selector') {\r\n        const res = selectors.parse(arg)\r\n\r\n        if (res.error !== undefined) {\r\n          const selExc = { message: res.error }\r\n          throw selExc\r\n        }\r\n\r\n        if (modificate !== undefined && modificate) {\r\n          return res.selector\r\n        }\r\n        return arg\r\n      }\r\n\r\n      const modificators = {\r\n        colorers,\r\n        modes,\r\n        materials\r\n      }\r\n\r\n      let modificator = key\r\n      let temp\r\n      while (modificator !== temp) {\r\n        temp = modificator\r\n        modificator = keyRemap(temp)\r\n      }\r\n\r\n      if (modificators[modificator].get(arg) === undefined) {\r\n        const exc = { message: `${arg} is not existed in ${modificator}` }\r\n        throw exc\r\n      }\r\n      return arg\r\n    }\r\n    return NULL\r\n  }\r\n\r\n  propagateProp(path, arg) {\r\n    if (path !== undefined) {\r\n      let argExc = {}\r\n      const adapter = options.adapters[typeof get(settings.defaults, path)]\r\n      if (adapter === undefined) {\r\n        const pathExc = { message: `${path} is not existed` }\r\n        throw pathExc\r\n      }\r\n\r\n      if (\r\n        (path.endsWith('.color') ||\r\n          path.endsWith('.baseColor') ||\r\n          path.endsWith('.EL.carbon')) &&\r\n        typeof arg !== 'number'\r\n      ) {\r\n        arg = palettes.get(settings.now.palette).getNamedColor(arg)\r\n      }\r\n\r\n      if (path.endsWith('.fg') || path.endsWith('.bg')) {\r\n        if (typeof arg !== 'number') {\r\n          const val = palettes\r\n            .get(settings.now.palette)\r\n            .getNamedColor(arg, true)\r\n          if (val !== undefined) {\r\n            arg = `0x${val.toString(16)}`\r\n          }\r\n        } else {\r\n          arg = `0x${arg.toString(16)}`\r\n        }\r\n      }\r\n\r\n      if (path.endsWith('.template')) {\r\n        arg = arg.replace(/\\\\n/g, '\\n') // NOSONAR\r\n      }\r\n\r\n      if (\r\n        arg !== undefined &&\r\n        adapter(arg) !== arg &&\r\n        adapter(arg) !== arg > 0\r\n      ) {\r\n        argExc = {\r\n          message: `${path} must be a \"${typeof get(settings.defaults, path)}\"`\r\n        }\r\n        throw argExc\r\n      }\r\n    }\r\n    return arg\r\n  }\r\n\r\n  unquoteString(value) {\r\n    return utils.unquoteString(value)\r\n  }\r\n}\r\n// repIndexOrRepMap could be RepresentationMap or index\r\n\r\nconst utilFunctions = new CLIUtils()\r\n\r\nfunction CreateObjectPair(a, b) {\r\n  const obj = {}\r\n  obj[a] = b\r\n  return obj\r\n}\r\n\r\nfunction ArgList(arg) {\r\n  if (arg instanceof this.constructor) {\r\n    return arg\r\n  }\r\n  if (arg instanceof Array) {\r\n    this._values = arg.slice(0)\r\n  } else if (arg) {\r\n    this._values = [arg]\r\n  } else {\r\n    this._values = []\r\n  }\r\n}\r\n\r\nArgList.prototype.append = function (value) {\r\n  const values = this._values\r\n  values[values.length] = value\r\n  return this\r\n}\r\n\r\nArgList.prototype.remove = function (value) {\r\n  const values = this._values\r\n  const index = values.indexOf(value)\r\n  if (index >= 0) {\r\n    values.splice(index, 1)\r\n  }\r\n  return this\r\n}\r\n\r\nArgList.prototype.toJSO = function (cliUtils, cmd, arg) {\r\n  const res = {}\r\n\r\n  const list = this._values\r\n  for (let i = 0, n = list.length; i < n; ++i) {\r\n    set(\r\n      res,\r\n      list[i].id,\r\n      cliUtils.propagateProp(\r\n        `${keyRemap(cmd)}.${arg}.${list[i].id}`,\r\n        list[i].val\r\n      )\r\n    )\r\n  }\r\n\r\n  return res\r\n}\r\n\r\nfunction Arg(_id, _val) {\r\n  this.id = _id\r\n  this.val = _val\r\n}\r\n\r\nconst cliutils = Object.create({})\r\n\r\ncliutils.Arg = Arg\r\ncliutils.ArgList = ArgList\r\n\r\ncliutils.miew = null\r\ncliutils.echo = null\r\ncliutils.representations = representationsStorage\r\ncliutils.utils = utilFunctions\r\n\r\ncliutils.assign = assign\r\ncliutils.CreateObjectPair = CreateObjectPair\r\ncliutils.keyRemap = keyRemap\r\ncliutils.Context = selectors.Context\r\ncliutils.ClearContext = selectors.ClearContext\r\n\r\ncliutils.NULL = NULL\r\n\r\ncliutils.notimplemented = function () {\r\n  return this.NULL\r\n}\r\n\r\nMiew.prototype.script = function (script, _printCallback, _errorCallback) {\r\n  parsercli.yy.miew = this\r\n  parsercli.yy.echo = _printCallback\r\n  parsercli.yy.error = _errorCallback\r\n  if (this.cmdQueue === undefined) {\r\n    this.cmdQueue = []\r\n  }\r\n\r\n  if (this.commandInAction === undefined) {\r\n    this.commandInAction = false\r\n  }\r\n\r\n  this.cmdQueue = this.cmdQueue.concat(script.split('\\n'))\r\n}\r\n\r\nMiew.prototype.awaitWhileCMDisInProcess = function () {\r\n  this.commandInAction = true\r\n}\r\n\r\nMiew.prototype.finishAwaitingCMDInProcess = function () {\r\n  this.commandInAction = false\r\n}\r\n\r\nMiew.prototype.isScriptingCommandAvailable = function () {\r\n  return (\r\n    this.commandInAction !== undefined &&\r\n    !this.commandInAction &&\r\n    this.cmdQueue !== undefined &&\r\n    this.cmdQueue.length > 0\r\n  )\r\n}\r\n\r\nMiew.prototype.callNextCmd = function () {\r\n  if (this.isScriptingCommandAvailable()) {\r\n    const cmd = this.cmdQueue.shift()\r\n\r\n    const res = {}\r\n    res.success = false\r\n    try {\r\n      parsercli.parse(cmd)\r\n      res.success = true\r\n    } catch (e) {\r\n      res.error = e.message\r\n      parsercli.yy.error(res.error)\r\n      this.finishAwaitingCMDInProcess()\r\n    }\r\n    return res\r\n  }\r\n  return ''\r\n}\r\n\r\nparsercli.yy = cliutils\r\n// workaround for incorrect JISON parser generator for AMD module\r\nparsercli.yy.parseError = parsercli.parseError\r\n"
	],
	"names": [
		"_typeof",
		"obj",
		"Symbol",
		"iterator",
		"constructor",
		"prototype",
		"_classCallCheck",
		"instance",
		"Constructor",
		"TypeError",
		"_defineProperties",
		"target",
		"props",
		"i",
		"length",
		"descriptor",
		"enumerable",
		"configurable",
		"writable",
		"Object",
		"defineProperty",
		"key",
		"_createClass",
		"protoProps",
		"staticProps",
		"_assertThisInitialized",
		"self",
		"ReferenceError",
		"_setPrototypeOf",
		"o",
		"p",
		"setPrototypeOf",
		"__proto__",
		"_inherits",
		"subClass",
		"superClass",
		"value",
		"create",
		"_possibleConstructorReturn",
		"call",
		"assertThisInitialized",
		"_getPrototypeOf",
		"getPrototypeOf",
		"_arrayLikeToArray",
		"arr",
		"len",
		"arr2",
		"Array",
		"_unsupportedIterableToArray",
		"minLen",
		"arrayLikeToArray",
		"n",
		"toString",
		"slice",
		"name",
		"from",
		"test",
		"_slicedToArray",
		"isArray",
		"arrayWithHoles",
		"_i",
		"_s",
		"_e",
		"_arr",
		"_n",
		"_d",
		"next",
		"done",
		"push",
		"err",
		"iterableToArrayLimit",
		"unsupportedIterableToArray",
		"nonIterableRest",
		"__assign",
		"assign",
		"t",
		"s",
		"arguments",
		"hasOwnProperty",
		"apply",
		"this",
		"defaults",
		"lines",
		"width",
		"radius",
		"scale",
		"corners",
		"color",
		"fadeColor",
		"animation",
		"rotate",
		"direction",
		"speed",
		"zIndex",
		"className",
		"top",
		"left",
		"shadow",
		"position",
		"Spinner",
		"opts",
		"spin",
		"stop",
		"el",
		"document",
		"createElement",
		"setAttribute",
		"css",
		"transform",
		"insertBefore",
		"firstChild",
		"borderRadius",
		"Math",
		"round",
		"shadows",
		"boxShadow",
		"regex",
		"_a",
		"split",
		"matches",
		"match",
		"x",
		"y",
		"xUnits",
		"yUnits",
		"prefix",
		"end",
		"parseBoxShadow",
		"degrees",
		"backgroundLine",
		"height",
		"background",
		"getColor",
		"transformOrigin",
		"delay",
		"line",
		"normalizeShadow",
		"appendChild",
		"drawLines",
		"requestAnimationFrame",
		"cancelAnimationFrame",
		"animateId",
		"clearTimeout",
		"parentNode",
		"removeChild",
		"undefined",
		"prop",
		"style",
		"idx",
		"normalized",
		"shadows_1",
		"xy",
		"convertOffset",
		"join",
		"radians",
		"PI",
		"sin",
		"cos",
		"Timer",
		"startTime",
		"oldTime",
		"elapsedTime",
		"running",
		"now",
		"getElapsedTime",
		"update",
		"delta",
		"newTime",
		"window",
		"performance",
		"bind",
		"Date",
		"tag",
		"id",
		"element",
		"cssText",
		"Stats",
		"domElement",
		"_text",
		"_startTime",
		"_prevTime",
		"_deltas",
		"_index",
		"_total",
		"_count",
		"time",
		"ms",
		"fps",
		"textContent",
		"toPrecision",
		"on",
		"display",
		"_isNativeReflectConstruct",
		"Reflect",
		"construct",
		"sham",
		"Proxy",
		"Boolean",
		"valueOf",
		"e",
		"_construct",
		"Parent",
		"args",
		"Class",
		"isNativeReflectConstruct",
		"a",
		"Function",
		"_wrapNativeSuper",
		"_cache",
		"Map",
		"fn",
		"indexOf",
		"has",
		"get",
		"set",
		"Wrapper",
		"isUndefOrEqual",
		"param",
		"EventDispatcher",
		"_handlers",
		"addEventListener",
		"type",
		"callback",
		"context",
		"handlers",
		"params",
		"find",
		"par",
		"removeEventListener",
		"forEach",
		"handler",
		"ev",
		"remove",
		"values",
		"omitBy",
		"dispatchEvent",
		"event",
		"priorities",
		"debug",
		"info",
		"report",
		"warn",
		"error",
		"Logger",
		"console",
		"_priority",
		"verify",
		"number",
		"isNumber",
		"Error",
		"instantiate",
		"findKey",
		"_this",
		"level",
		"levels",
		"keys",
		"message",
		"priority",
		"_message",
		"String",
		"output",
		"log",
		"browserType",
		"DEFAULT",
		"SAFARI",
		"decodeQueryComponent",
		"text",
		"decodeURIComponent",
		"replace",
		"getUrlParameters",
		"url",
		"query",
		"location",
		"search",
		"substring",
		"result",
		"exec",
		"DebugTracer",
		"namespace",
		"enabled",
		"enable",
		"indent",
		"methods",
		"wrap",
		"method_",
		"name_",
		"spaces",
		"substr",
		"logger",
		"method",
		"OutOfMemoryError",
		"bytesToBase64",
		"buffer",
		"bytes",
		"Uint8Array",
		"binary",
		"byteLength",
		"fromCharCode",
		"btoa",
		"bytesFromBase64",
		"str",
		"atob",
		"charCodeAt",
		"isAlmostPlainObject",
		"isPlainObject",
		"proto",
		"getFileExtension",
		"fileName",
		"max",
		"lastIndexOf",
		"Infinity",
		"dataUrlToBlob",
		"parts",
		"partsCount",
		"Blob",
		"unquotedStringRE",
		"enquoteHelper",
		"encodeQueryComponent",
		"excludeExp",
		"encodeURIComponent",
		"code",
		"parseInt",
		"getUrlParametersAsDict",
		"resolveURL",
		"URL",
		"href",
		"anchor",
		"generateRegExp",
		"symbolStr",
		"symbolList",
		"listStr",
		"RegExp",
		"attrs",
		"content",
		"child",
		"createTextNode",
		"HTMLElement",
		"deriveClass",
		"cls",
		"base",
		"members",
		"statics",
		"deriveDeep",
		"needZeroOwnProperties",
		"res",
		"copy",
		"hexColor",
		"hex",
		"allocateTyped",
		"TypedArrayName",
		"size",
		"RangeError",
		"arrayFromBase64",
		"TypedArrayClass",
		"arrayToBase64",
		"array",
		"compareOptionsWithDefaults",
		"defOpts",
		"optsStr",
		"objectsDiff",
		"src",
		"dst",
		"diff",
		"forIn",
		"srcValue",
		"dstValue",
		"deepDiff",
		"isEmpty",
		"isEqual",
		"forInRecursive",
		"object",
		"iterateThrough",
		"newPref",
		"enquoteString",
		"isString",
		"unquoteString",
		"SyntaxError",
		"getBrowser",
		"navigator",
		"vendor",
		"userAgent",
		"shotOpen",
		"open",
		"write",
		"shotDownload",
		"dataUrl",
		"filename",
		"msSaveBlob",
		"link",
		"download",
		"innerHTML",
		"createObjectURL",
		"body",
		"click",
		"copySubArrays",
		"indices",
		"itemSize",
		"j",
		"shallowCloneNode",
		"node",
		"newNode",
		"cloneNode",
		"worldPos",
		"correctSelectorIdentifier",
		"splitFileName",
		"ext",
		"data",
		"blobData",
		"concatTypedArraysUnsafe",
		"first",
		"second",
		"mergeTypedArraysUnsafe",
		"reduce",
		"acc",
		"cur",
		"start",
		"count",
		"JobHandle",
		"_shouldCancel",
		"slaveEvent",
		"modes",
		"BS",
		"atom",
		"bond",
		"space",
		"multibond",
		"aromrad",
		"showarom",
		"polyComplexity",
		"poor",
		"low",
		"medium",
		"high",
		"ultra",
		"VW",
		"LN",
		"offsarom",
		"chunkarom",
		"lineWidth",
		"LC",
		"SA",
		"zClip",
		"probeRadius",
		"subset",
		"wireframe",
		"SE",
		"QS",
		"isoValue",
		"gaussLim",
		"gridSpacing",
		"CS",
		"probePositions",
		"TR",
		"TU",
		"heightSegmentsRatio",
		"tension",
		"CA",
		"depth",
		"ss",
		"helix",
		"arrow",
		"strand",
		"TX",
		"template",
		"horizontalAlign",
		"verticalAlign",
		"dx",
		"dy",
		"dz",
		"fg",
		"bg",
		"showBg",
		"VD",
		"kSigma",
		"kSigmaMed",
		"kSigmaMax",
		"frame",
		"isoMode",
		"colorers",
		"EL",
		"carbon",
		"UN",
		"CO",
		"baseColor",
		"CB",
		"factor",
		"SQ",
		"gradient",
		"TM",
		"min",
		"OC",
		"HY",
		"MO",
		"antialias",
		"camFov",
		"camNear",
		"camFar",
		"camDistance",
		"radiusToFit",
		"fogNearFactor",
		"fogFarFactor",
		"fogAlpha",
		"fogColor",
		"fogColorEnable",
		"palette",
		"resolution",
		"autoResolution",
		"autoPreset",
		"preset",
		"presets",
		"default",
		"mode",
		"colorer",
		"selector",
		"material",
		"empty",
		"wire",
		"small",
		"macro",
		"objects",
		"dashSize",
		"gapSize",
		"transparent",
		"draft",
		"clipPlane",
		"clipPlaneFactor",
		"clipPlaneSpeed",
		"plugins",
		"axes",
		"fog",
		"zSprites",
		"isoSurfaceFakeOpacity",
		"suspendRender",
		"nowater",
		"autobuild",
		"fxaa",
		"outline",
		"threshold",
		"thickness",
		"ao",
		"autoRotation",
		"maxfps",
		"fbxprec",
		"autoRotationAxisFixed",
		"zooming",
		"picking",
		"pick",
		"editing",
		"aromatic",
		"singleUnit",
		"stereo",
		"interpolateViews",
		"transparency",
		"translationSpeed",
		"example",
		"good",
		"ssaoKernelRadius",
		"ssaoFactor",
		"stereoBarrel",
		"use",
		"multiFile",
		"Settings",
		"old",
		"_changed",
		"reset",
		"utils",
		"path",
		"_notifyChange",
		"merge",
		"_notifyChanges",
		"defaultValue",
		"cloneDeep",
		"checkpoint",
		"deepValue",
		"deepPath",
		"changed",
		"filter",
		"applyDiffs",
		"diffs",
		"VERSION",
		"getDiffs",
		"versioned",
		"setPluginOpts",
		"plugin",
		"repIndex",
		"asBoolean",
		"toLowerCase",
		"adapters",
		"string",
		"Number",
		"boolean",
		"cL1ExclExpr",
		"cCommonIgnoreSymbols",
		"encodeQueryComponentL1",
		"cL2ExclExpr",
		"encodeQueryComponentL2",
		"ensureRepList",
		"reps",
		"settings",
		"ensureRepAssign",
		"rep",
		"extractArgs",
		"input",
		"defaultsDict",
		"bang",
		"inputVal",
		"sep",
		"parseParams",
		"arg",
		"pair",
		"adapter",
		"actions",
		"l",
		"load",
		"v",
		"view",
		"u",
		"unit",
		"menu",
		"options",
		"_objects",
		"newOpts",
		"newObj",
		"addObject",
		"r",
		"select",
		"m",
		"c",
		"mt",
		"materials",
		"dup",
		"ar",
		"_fromArray",
		"entries",
		"entry",
		"action",
		"_processOptsForURL",
		"_processArgsForURL",
		"_processObjForURL",
		"objOpts",
		"_processOptsForScript",
		"_processArgsForScript",
		"_processObjForScript",
		"map",
		"_processRepsForScript",
		"index",
		"repString",
		"strIdx",
		"localAdd",
		"fromURL",
		"fromAttr",
		"attr",
		"toURL",
		"stringList",
		"checkAndAdd",
		"repList",
		"addReps",
		"objList",
		"addObjects",
		"protocol",
		"host",
		"pathname",
		"toScript",
		"commandsList",
		"command",
		"saveQuotes",
		"quote",
		"trim",
		"_defineProperty",
		"Atom",
		"residue",
		"role",
		"het",
		"serial",
		"occupancy",
		"temperature",
		"charge",
		"mask",
		"hydrogenCount",
		"radicalCount",
		"valence",
		"bonds",
		"flags",
		"Flags",
		"HYDROGEN",
		"CARBON",
		"process",
		"_chain",
		"getName",
		"_sequence",
		"NONPOLARH",
		"Element",
		"fullName",
		"weight",
		"radiusBonding",
		"hValency",
		"hydrogenValency",
		"U1",
		"Lead",
		"U2",
		"Wing",
		"U18",
		"N",
		"Constants",
		"C",
		"O",
		"SG",
		"D",
		"T",
		"byAtomicNumber",
		"ByAtomicNumber",
		"byName",
		"ByName",
		"getByName",
		"cBondTypes",
		"UNKNOWN",
		"COVALENT",
		"AROMATIC",
		"getAtomPos",
		"Bond",
		"right",
		"order",
		"fixed",
		"_left",
		"_right",
		"_fixed",
		"_order",
		"_type",
		"distanceTo",
		"currAtom",
		"_forEachNeighbour",
		"l2Atom",
		"refPoint",
		"currDir",
		"posGetter",
		"rightCount",
		"leftCount",
		"tmpVec",
		"clone",
		"checkDir",
		"sub",
		"dot",
		"checkCarbon",
		"stages",
		"forEachLevelOne",
		"forEachLevelTwo",
		"stageId",
		"multiplyScalar",
		"third",
		"maxNeibs",
		"another",
		"secondPos",
		"firstV",
		"secondV",
		"crossVectors",
		"lengthSq",
		"normalize",
		"_fixDir",
		"BondType",
		"cNucleicControlNames",
		"cNucleicWing1Names",
		"cNucleicWing2Names",
		"cCylinderSource",
		"cCylinderTarget",
		"types",
		"atoms",
		"Residue",
		"chain",
		"sequence",
		"icode",
		"_component",
		"_icode",
		"_mask",
		"_atoms",
		"_secondary",
		"_firstAtom",
		"_leadAtom",
		"_wingAtom",
		"_lastAtom",
		"_controlPoint",
		"_midPoint",
		"_wingVector",
		"_cylinders",
		"_isValid",
		"_het",
		"_molecule",
		"xyz",
		"altLoc",
		"tempFactor",
		"getComplex",
		"addAtom",
		"forEachAtom",
		"names",
		"_findAtomByName",
		"_name",
		"getAtomPosition",
		"leadAtom",
		"_findFirstAtomInList",
		"wingStart",
		"wingEnd",
		"cylSource",
		"targetList",
		"getCylinderTargetList",
		"cylTarget",
		"prevLeadPos",
		"currLeadPos",
		"prevWingPos",
		"prevWing",
		"vectorA",
		"vectorB",
		"abs",
		"angleTo",
		"negate",
		"prevRes",
		"prev",
		"nextRes",
		"chainAsNucleic",
		"bFirstInChain",
		"lp",
		"Vector3",
		"z",
		"_detectLeadWing",
		"lerp",
		"calcWing",
		"asNucleic",
		"_innerFinalize",
		"anotherResidue",
		"tempCount",
		"occupCount",
		"ResidueType",
		"letterCode",
		"_fullName",
		"_addFlag",
		"flag",
		"list",
		"StandardTypes",
		"ALA",
		"ARG",
		"ASN",
		"ASP",
		"CYS",
		"GLN",
		"GLU",
		"GLY",
		"HIS",
		"ILE",
		"LEU",
		"LYS",
		"MET",
		"PHE",
		"PRO",
		"PYL",
		"SEC",
		"SER",
		"THR",
		"TRP",
		"TYR",
		"VAL",
		"A",
		"G",
		"I",
		"U",
		"DA",
		"DC",
		"DG",
		"DI",
		"DT",
		"DU",
		"WAT",
		"H2O",
		"HOH",
		"DOD",
		"UNK",
		"UNL",
		"PROTEIN",
		"BASIC",
		"ACIDIC",
		"POLAR",
		"NONPOLAR",
		"NUCLEIC",
		"PURINE",
		"PYRIMIDINE",
		"DNA",
		"RNA",
		"WATER",
		"_addParam",
		"ChainType",
		"Chain",
		"complex",
		"_complex",
		"_residues",
		"minSequence",
		"POSITIVE_INFINITY",
		"maxSequence",
		"NEGATIVE_INFINITY",
		"residues",
		"seqNum",
		"iCode",
		"_determineType",
		"curr",
		"_finalize2",
		"frameData",
		"prevData",
		"frameRes",
		"currData",
		"getResidueType",
		"addResidueType",
		"addResidue",
		"StructuralElement",
		"init",
		"term",
		"generic",
		"genericByType",
		"serialAtomMap",
		"residueHash",
		"splitUnifiedSerial",
		"chainId",
		"serialId",
		"hashCode",
		"getUnifiedSerial",
		"Type",
		"STRAND",
		"BRIDGE",
		"HELIX_310",
		"HELIX_ALPHA",
		"HELIX_PI",
		"HELIX",
		"TURN_310",
		"TURN_ALPHA",
		"TURN_PI",
		"TURN",
		"BEND",
		"COIL",
		"Generic",
		"LOOP",
		"StructuralElementType",
		"StructuralElementGeneric",
		"typeByPDBHelixClass",
		"Helix",
		"helixClass",
		"comment",
		"_superPropBase",
		"property",
		"_get",
		"receiver",
		"superPropBase",
		"desc",
		"getOwnPropertyDescriptor",
		"Strand",
		"sheet",
		"sense",
		"atomCur",
		"atomPrev",
		"as",
		"isNaN",
		"Sheet",
		"_width",
		"_strands",
		"_finalize",
		"SGroup",
		"saveNode",
		"_id",
		"_position",
		"_charge",
		"_repeat",
		"_center",
		"xmlNodeRef",
		"nLimon",
		"bLow",
		"bHight",
		"aPos",
		"addVectors",
		"parser",
		"k",
		"$V0",
		"$V1",
		"$V2",
		"$V3",
		"$V4",
		"$V5",
		"$V6",
		"$V7",
		"$V8",
		"$V9",
		"$Va",
		"$Vb",
		"$Vc",
		"$Vd",
		"trace",
		"yy",
		"symbols_",
		"Program",
		"Expression",
		"EOF",
		"Selector",
		"OR",
		"AND",
		"NOT",
		"SELECTOR",
		"NAMED_SELECTOR",
		"SELECTOR_RANGED",
		"RangeList",
		"SELECTOR_NAMED",
		"NameList",
		"Range",
		"NUMBER",
		"Name",
		"IDENTIFIER",
		"STRING",
		"$accept",
		"$end",
		"terminals_",
		"productions_",
		"performAction",
		"yytext",
		"yyleng",
		"yylineno",
		"yystate",
		"$$",
		"_$",
		"$0",
		"$",
		"keyword",
		"GetSelector",
		"append",
		"ValueList",
		"table",
		"defaultActions",
		"parseError",
		"hash",
		"recoverable",
		"parse",
		"stack",
		"tstack",
		"vstack",
		"lstack",
		"TERROR",
		"lexer",
		"sharedState",
		"setInput",
		"yylloc",
		"yyloc",
		"ranges",
		"lex",
		"token",
		"pop",
		"symbol",
		"state",
		"newState",
		"expected",
		"yyval",
		"errStr",
		"showPosition",
		"loc",
		"first_line",
		"last_line",
		"first_column",
		"last_column",
		"range",
		"concat",
		"_input",
		"_more",
		"_backtrack",
		"matched",
		"conditionStack",
		"offset",
		"ch",
		"unput",
		"oldLines",
		"more",
		"reject",
		"backtrack_lexer",
		"less",
		"pastInput",
		"past",
		"upcomingInput",
		"pre",
		"test_match",
		"indexed_rule",
		"backup",
		"tempMatch",
		"rules",
		"_currentRules",
		"flex",
		"begin",
		"condition",
		"popState",
		"conditions",
		"topState",
		"pushState",
		"stateStackSize",
		"yy_",
		"$avoiding_name_collisions",
		"YY_START",
		"INITIAL",
		"inclusive",
		"Parser",
		"SelectionParser",
		"List",
		"_values",
		"splice",
		"toJSON",
		"includes",
		"valuesArray",
		"upperOnly",
		"toUpperCase",
		"_validate",
		"ListSelector",
		"RangeListSelector",
		"ValueListSelector",
		"caseSensitive",
		"NoneSelector",
		"_atom",
		"AllSelector",
		"none",
		"PrefixOperator",
		"rhs",
		"InfixOperator",
		"lhs",
		"keywords",
		"defineSelector",
		"SelectorClass",
		"factory",
		"NULL_SELECTOR",
		"defineOperator",
		"OperatorClass",
		"byResidueTypeFlag",
		"includesAtom",
		"selectors",
		"Context",
		"ClearContext",
		"BiologicalUnit",
		"_selector",
		"_boundaries",
		"boundingBox",
		"Box3",
		"boundingSphere",
		"Sphere",
		"makeEmpty",
		"expandByPoint",
		"bbc",
		"getCenter",
		"setFromCenterAndSize",
		"radiusSquared",
		"center",
		"pos",
		"lengthSquared",
		"distanceToSquared",
		"sqrt",
		"Assembly",
		"chains",
		"matrices",
		"oldCenter",
		"oldRad",
		"applyMatrix4",
		"newRad",
		"addScalar",
		"subScalar",
		"matrix",
		"Component",
		"_residueIndices",
		"_cycles",
		"_subDivs",
		"_residueCount",
		"resIdc",
		"idIdc",
		"idCount",
		"last",
		"subDivs",
		"resCnt",
		"_bonds",
		"forEachCycle",
		"cycle",
		"forEachResidue",
		"cycles",
		"subs",
		"currRes",
		"endRes",
		"_forEachSubChain",
		"_subIdx",
		"currIdx",
		"lastSubIdx",
		"subIdx",
		"boundaries",
		"AtomPairs",
		"maxPairsEstimate",
		"numPairs",
		"numMaxPairs",
		"intBuffer",
		"Int32Array",
		"hashBuffer",
		"cHashTableSize",
		"indexA",
		"indexB",
		"ia",
		"ib",
		"codeToAdd",
		"apI",
		"_getBondingRadius",
		"v1Tmp",
		"v2Tmp",
		"cp",
		"AutoBond",
		"_maxRad",
		"bBox",
		"getDefaultBoundaries",
		"_vBoxMin",
		"_vBoxMax",
		"_pairCollection",
		"getAtoms",
		"numAtoms",
		"aInd",
		"collection",
		"numBondsForAtom",
		"bInd",
		"addPair",
		"vw",
		"getVoxelWorld",
		"rA",
		"isHydrogenA",
		"posA",
		"locationA",
		"atomA",
		"atomsNum",
		"processAtom",
		"atomB",
		"isHydrogen",
		"locationB",
		"dist2",
		"rB",
		"maxAcceptable",
		"isHet",
		"forEachAtomWithinRadius",
		"iA",
		"iB",
		"_addPair",
		"bondsA",
		"numBonds",
		"newBond",
		"addBond",
		"_buildInner",
		"_calcBoundingBox",
		"_addExistingPairs",
		"_findPairs",
		"_addPairs",
		"nAtoms",
		"maxRad",
		"destroy",
		"cAromaticType",
		"cAromaticAtoms",
		"_coDirVectors",
		"v1",
		"v2",
		"_insertAscending",
		"val",
		"_anotherAtom",
		"_markAromatic",
		"Cycle",
		"atomsList",
		"nA",
		"add",
		"nextAtom",
		"checkBond",
		"forEachBond",
		"_isAromatic",
		"_isPossibleAromatic",
		"rightIdx",
		"leftIdx",
		"_checkCycleSimple",
		"_checkCycleComplex",
		"assert",
		"AromaticLoopsMarker",
		"bondsData",
		"bondMarks",
		"_bondsData",
		"_bondMarks",
		"_resetCycles",
		"_currIdx",
		"bond1",
		"bond2",
		"arr1",
		"n1",
		"n2",
		"i1",
		"i2",
		"prevBond",
		"currRight",
		"bondsOrder",
		"currLeft",
		"currVec",
		"startAtomRef",
		"_currStart",
		"checkAromatic",
		"_checkBond",
		"_haveSameCycle",
		"theta",
		"anotherAtom",
		"anotherVec",
		"MathUtils",
		"clamp",
		"newDir",
		"cross",
		"dir",
		"newRight",
		"_tryBond",
		"checkCycle",
		"forEachComponent",
		"component",
		"_startCycle",
		"newCycle",
		"addCycle",
		"_findLoops",
		"_getSphereSliceRadiusRange",
		"zMin",
		"zMax",
		"dzMin",
		"dzMax",
		"rzMin",
		"rzMax",
		"_getCircleSliceRadiusRange",
		"yMin",
		"yMax",
		"dyMin",
		"dyMax",
		"ryMin",
		"ryMax",
		"VoxelWorld",
		"box",
		"vCellSizeHint",
		"_box",
		"getSize",
		"divide",
		"floor",
		"_last",
		"_cellSize",
		"_cellInnerR",
		"_cellOuterR",
		"numVoxels",
		"_voxels",
		"getAtomCount",
		"voxelIdx",
		"_findVoxel",
		"point",
		"zero",
		"_zero",
		"voxel",
		"_voxel",
		"xRange",
		"_xRange",
		"yRange",
		"_yRange",
		"zRange",
		"_zRange",
		"_forEachVoxelWithinRadiusSimple",
		"rRangeXY",
		"rRangeX",
		"xVal",
		"yVal",
		"zVal",
		"isInsideX",
		"isInsideY",
		"isInsideZ",
		"divideScalar",
		"clampScalar",
		"vCenter",
		"_vCenter",
		"distTouch2",
		"distInside2",
		"d2",
		"r2",
		"_forEachVoxelWithinRadius",
		"isInside",
		"_forEachAtomInVoxel",
		"dist",
		"_forEachAtomWithinDistFromGroup",
		"atomProc",
		"voxels",
		"processIfWithin",
		"Vector2",
		"MINIMAL_DISTANCE",
		"MIN_HBOND_ENERGY",
		"COUPLING_CONSTANT",
		"HBondInfo",
		"_hbonds",
		"_buildVW",
		"_build",
		"to",
		"acceptor",
		"acc0",
		"acc1",
		"energy",
		"ri",
		"getType",
		"preri",
		"rj",
		"prerj",
		"_calcHBondEnergy",
		"pairs",
		"PairCollection",
		"_residueGetCAlpha",
		"_residueGetCO",
		"h",
		"predonor",
		"donor",
		"_residueGetNH",
		"distanceHO",
		"distanceHC",
		"distanceNC",
		"distanceNO",
		"donorInfo",
		"accInfo",
		"BridgeType",
		"freeze",
		"NO_BRIDGE",
		"PARALLEL",
		"ANTI_PARALLEL",
		"HelixFlag",
		"START",
		"MIDDLE",
		"END",
		"START_AND_END",
		"StructureType",
		"SecondaryStructureMap",
		"_ss",
		"_sheet",
		"_betaPartners",
		"_bend",
		"getResidues",
		"_helixFlags",
		"_chainLengths",
		"_chains",
		"_buildBetaSheets",
		"_buildAlphaHelices",
		"inResidues",
		"chainLength",
		"inPreferPiHelices",
		"stride",
		"isBond",
		"kappa",
		"_kappa",
		"_isHelixStart",
		"isTurn",
		"p1",
		"p2",
		"p3",
		"p4",
		"v12",
		"v34",
		"prevPrev",
		"nextNext",
		"curCA",
		"ppCA",
		"nnCA",
		"ckap",
		"_cosinusAngle",
		"skap",
		"atan2",
		"bridges",
		"lenA",
		"chainA",
		"b",
		"lenB",
		"chainB",
		"_testBridge",
		"found",
		"bridge",
		"unshift",
		"chainI",
		"getChain",
		"chainJ",
		"sort",
		"ibi",
		"iei",
		"jbi",
		"jei",
		"ibj",
		"iej",
		"jbj",
		"jej",
		"_hasChainBreak",
		"ladderset",
		"Set",
		"ladder",
		"delete",
		"sheetset",
		"toMove",
		"_areBridgesLinked",
		"betai",
		"betaj",
		"parallel",
		"d",
		"f",
		"ai",
		"aj",
		"helixClassMap",
		"loopMap",
		"Complex",
		"_components",
		"_helices",
		"_sheets",
		"structures",
		"_residueTypes",
		"_sgroups",
		"_molecules",
		"_maskNeedsUpdate",
		"metadata",
		"symmetry",
		"units",
		"_currentUnit",
		"forEachChain",
		"updateToFrame",
		"resName",
		"chainName",
		"resId",
		"atomName",
		"localeCompare",
		"molecules",
		"groups",
		"components",
		"maxSerial",
		"uniSerial",
		"chainShift",
		"remnant",
		"insCode",
		"addComp",
		"comp",
		"resCount",
		"currStart",
		"isConnected",
		"setSubDivs",
		"currSubDivs",
		"enableEditing",
		"_fillCmpEdit",
		"_fillCmpNoedit",
		"getBoundaries",
		"getTransforms",
		"getSelector",
		"setCurrentUnit",
		"newUnit",
		"computeBoundaries",
		"_computeBounds",
		"_finalizeBonds",
		"forEachSGroup",
		"_rebuildSGroupOnAtomChange",
		"updateStructuresMask",
		"getBonds",
		"finalize",
		"getSequence",
		"getICode",
		"helices",
		"sheets",
		"needAutoBonding",
		"autoConnector",
		"build",
		"_fillComponents",
		"marker",
		"markCycles",
		"detectAromaticLoops",
		"detectCycles",
		"_finalizeMolecules",
		"molecule",
		"updater",
		"structure",
		"collectMask",
		"forEachMolecule",
		"setMask",
		"clearMask",
		"totalSelector",
		"reseter",
		"_atomNames",
		"dict",
		"_elements",
		"_residueNames",
		"_chainNames",
		"_altlocNames",
		"_voxelWorld",
		"addAtoms",
		"srcArray",
		"dstArray",
		"functor",
		"elem",
		"complexes",
		"atomBias",
		"bondBias",
		"residueBias",
		"chainBias",
		"componentBias",
		"bias",
		"processBond",
		"processResidue",
		"processChain",
		"processComponent",
		"doNothing",
		"rt",
		"addElement",
		"lastCode",
		"lastSheetIndex",
		"item",
		"ssMap",
		"lastHelixIndex",
		"curStructure",
		"curCode",
		"curResidue",
		"curSheetIndex",
		"loopType",
		"curSheet",
		"addStrand",
		"pow2ceil",
		"Volume",
		"dimensions",
		"vecSize",
		"volumeInfo",
		"_dimVec",
		"_volumeInfo",
		"_dimX",
		"_dimY",
		"_dimZ",
		"_rowElements",
		"_planeElements",
		"_totalElements",
		"_data",
		"getValue",
		"setValue",
		"addValue",
		"boxSize",
		"Float32Array",
		"vl",
		"getCellSize",
		"vs",
		"xSize",
		"ySize",
		"zSize",
		"volMap",
		"_voxelValue",
		"zi",
		"zm",
		"zp",
		"yi",
		"ym",
		"yp",
		"xi",
		"xm",
		"xp",
		"tilesX",
		"ceil",
		"tilesY",
		"tileRow",
		"row",
		"texture",
		"DataTexture",
		"LuminanceFormat",
		"UnsignedByteType",
		"UVMapping",
		"ClampToEdgeWrapping",
		"LinearFilter",
		"needsUpdate",
		"Molecule",
		"CSS2DObject",
		"_element",
		"transp",
		"getElement",
		"op",
		"op100",
		"opacity",
		"Object3D",
		"RCGroup",
		"raycaster",
		"intersects",
		"visible",
		"children",
		"raycast",
		"innerOnly",
		"enableSubset",
		"disableSubset",
		"totalSubset",
		"getSubset",
		"Group",
		"_worldMatrixInverse",
		"identity",
		"LAYERS",
		"VOLUME",
		"TRANSPARENT",
		"PREPASS_TRANSPARENT",
		"VOLUME_BFPLANE",
		"COLOR_FROM_POSITION",
		"SHADOWMAP",
		"SELECTION_LAYERS",
		"resetTransform",
		"quaternion",
		"updateMatrixWorldRecursive",
		"parent",
		"updateMatrixWorld",
		"addSavingWorldTransform",
		"Matrix4",
		"matrixWorld",
		"invert",
		"multiply",
		"decompose",
		"renderDummyQuad",
		"_material",
		"MeshBasicMaterial",
		"depthWrite",
		"_scene",
		"Scene",
		"_quad",
		"Mesh",
		"PlaneBufferGeometry",
		"_camera",
		"OrthographicCamera",
		"render",
		"renderScreenQuad",
		"isIdentity",
		"equals",
		"applyToPointsArray",
		"w",
		"elements",
		"persp",
		"_v",
		"ScreenQuadMaterial",
		"uniforms",
		"srcTex",
		"vertexShader",
		"vertexScreenQuadShader",
		"depthTest",
		"RawShaderMaterial",
		"clearTree",
		"traverse",
		"LineSegments",
		"Line",
		"geometry",
		"dispose",
		"removeChildren",
		"renderScreenQuadFromTex",
		"fragmentShader",
		"renderScreenQuadFromTexWithDistortion",
		"coef",
		"setMinimalFov",
		"angle",
		"aspect",
		"fov",
		"radToDeg",
		"atan",
		"tan",
		"degToRad",
		"updateHalfSized",
		"camera",
		"originalAspect",
		"originalFov",
		"updateProjectionMatrix",
		"setDistanceToFit",
		"intersectVisibleObject",
		"gfxObj",
		"fogFarPlane",
		"intersectObject",
		"nearPlane",
		"near",
		"matrixWorldInverse",
		"farPlane",
		"far",
		"extractScale",
		"te",
		"determinant",
		"copyAtList",
		"attribute",
		"indexList",
		"_oldInstancedBufferGeometryCopy",
		"InstancedBufferGeometry",
		"source",
		"instanceCount",
		"calcCylinderMatrix",
		"posBegin",
		"posEnd",
		"posCenter",
		"matScale",
		"makeScale",
		"matRotHalf",
		"makeRotationX",
		"matRotLook",
		"vUp",
		"lookAt",
		"setPosition",
		"calcChunkMatrix",
		"eye",
		"up",
		"rad",
		"groupHasGeometryToRender",
		"group",
		"hasGeoms",
		"buildDistorionMesh",
		"widthSegments",
		"heightSegements",
		"calcInverseBarrel",
		"prevR2",
		"curR2",
		"dr",
		"geo",
		"getAttribute",
		"setXY",
		"fillArray",
		"startIndex",
		"endIndex",
		"destroyObject",
		"belongToSelectLayers",
		"layers",
		"processObjRenderOrder",
		"root",
		"idMaterial",
		"renderOrder",
		"isGroup",
		"applySelectionMaterial",
		"setValues",
		"depthFunc",
		"LessEqualDepth",
		"overrideColor",
		"lights",
		"shadowmap",
		"setUberOptions",
		"fixedColor",
		"Color",
		"zOffset",
		"getMiddlePoint",
		"point1",
		"point2",
		"optionalTarget",
		"addScaledVector",
		"_defaultBoundaries",
		"Visual",
		"dataSource",
		"_dataSource",
		"gfxutils",
		"_toConsumableArray",
		"arrayWithoutHoles",
		"iter",
		"iterableToArray",
		"nonIterableSpread",
		"_ensureArray",
		"EntityList",
		"entities",
		"_list",
		"_dict",
		"_indices",
		"entity",
		"register",
		"registerInList",
		"registerInDict",
		"_this2",
		"unregisterFromList",
		"unregisterFromDict",
		"_this3",
		"makeContextDependent",
		"defineProperties",
		"CollisionSphere",
		"_radius",
		"sphere",
		"_sphere",
		"ray",
		"intersectSphere",
		"distance",
		"origin",
		"SphereCollisionGeo",
		"inters",
		"chunkIdx",
		"computeBoundingBox",
		"tmpColor",
		"InstancedSpheresGeometry",
		"spheresCount",
		"sphereComplexity",
		"useZSprites",
		"_sphGeometry",
		"SphereBufferGeometry",
		"_init",
		"itemIdx",
		"itemPos",
		"itemRad",
		"_offsets",
		"setSphere",
		"colorVal",
		"_colors",
		"g",
		"finishUpdate",
		"computeBoundingSphere",
		"chunkIndices",
		"alphaArr",
		"_alpha",
		"geom",
		"sphereGeo",
		"alpha",
		"fill",
		"InstancedBufferAttribute",
		"ChunkedObjectsGeometry",
		"chunkGeo",
		"chunksCount",
		"_chunkGeo",
		"colors",
		"chunkSize",
		"_chunkSize",
		"mesh",
		"facesPerChunk",
		"faceIndex",
		"BufferGeometry",
		"srcPos",
		"_positions",
		"srcNorm",
		"_normals",
		"srcColor",
		"dstPos",
		"dstNorm",
		"dstColor",
		"dstPtOffset",
		"ptIdxBegin",
		"ptIdxEnd",
		"subarray",
		"attributes",
		"chunkIndex",
		"chunkIndexSize",
		"pointsCount",
		"use32bitIndex",
		"indexSize",
		"Uint32Array",
		"Uint16Array",
		"posOffset",
		"setIndex",
		"BufferAttribute",
		"SimpleSpheresGeometry",
		"sphGeometry",
		"normals",
		"geoNormals",
		"normal",
		"_chunkPos",
		"_tmpPositions",
		"tmpPos",
		"geoPos",
		"centerPos",
		"tmpVector",
		"normMtx",
		"Matrix3",
		"Simple2CCylindersGeometry",
		"cylGeometry",
		"CylinderBufferGeometry",
		"_chunkNorms",
		"_tmpVector",
		"botPos",
		"topPos",
		"firstOffset",
		"secondOffset",
		"tmpArray",
		"geoNorm",
		"lerpVectors",
		"mtx1",
		"getNormalMatrix",
		"fromArray",
		"toArray",
		"applyMatrix3",
		"colorVal1",
		"colorVal2",
		"radiusTop",
		"radiusBottom",
		"radialSegments",
		"heightSegments",
		"openEnded",
		"thetaLength",
		"parameters",
		"hasTop",
		"hasBottom",
		"vertexCount",
		"facesCount",
		"heightHalf",
		"positions",
		"Uint16BufferAttribute",
		"uvs",
		"currVtxIdx",
		"currFaceIdx",
		"tanTheta",
		"v3",
		"v4",
		"setXYZ",
		"vx",
		"vy",
		"vz",
		"startTIdx",
		"lastIdx",
		"fTIdx",
		"currSrcIdx",
		"getX",
		"getY",
		"getZ",
		"nextTVtx",
		"startBIdx",
		"lastBIdx",
		"fBIdx",
		"currSrcBIdx",
		"nextBVtx",
		"invMatrix",
		"setArrayXYZ",
		"setArrayXYZW",
		"sortNumber",
		"Instanced2CCylindersGeometry",
		"_useZSprites",
		"_cylGeometry",
		"_collisionGeo",
		"me",
		"mtxOffset",
		"setItem",
		"_matVector1",
		"_matVector2",
		"_matVector3",
		"_invmatVector1",
		"_invmatVector2",
		"_invmatVector3",
		"colorIdx",
		"_color1",
		"_color2",
		"chunksIdx",
		"cylinderInfo",
		"newPar",
		"_prepareCylinderInfo",
		"cylinderIndices",
		"color1",
		"color2",
		"_assignOpacity",
		"cylinderGeo",
		"tmpPrev",
		"tmpNext",
		"tmpRes",
		"simpleNormal",
		"normalOnCut",
		"nearRingPt",
		"ExtrudedObjectsGeometry",
		"shape",
		"ringsCount",
		"ptsCount",
		"totalPts",
		"_createExtrudedChunkGeometry",
		"_ringsCount",
		"tmpShape",
		"_tmpShape",
		"hasSlope",
		"hasCut",
		"chunkStartIdx",
		"_setPoints",
		"_setSlopeNormals",
		"_setBaseNormals",
		"_addCut",
		"vtxIdx",
		"mtx",
		"nPtsInRing",
		"_countNormalsInRing",
		"isSlope",
		"shiftToExtraPt",
		"subVectors",
		"startSegmentIdx",
		"segmentsCount",
		"elemSize",
		"ThickLinesGeometry",
		"_initVertices",
		"segmentIdx",
		"pos1",
		"pos2",
		"directions",
		"_directions",
		"dirIdx",
		"startSegIdx",
		"endSegIdx",
		"startPos",
		"startDir",
		"_buffersSize",
		"indexOffset",
		"pointOffset",
		"LinesGeometry",
		"posSize",
		"getPositionSize",
		"BaseLinesGeometry",
		"CylinderCollisionGeo",
		"itemOffset",
		"ChunkedLinesGeometry",
		"enableCollision",
		"collisionGeo",
		"segCount",
		"segIdx",
		"setSegments",
		"getSubsetSegments",
		"setColors",
		"getSubsetColors",
		"TwoColorLinesGeometry",
		"segmentIndices",
		"_segCounts",
		"vectors",
		"vecCount",
		"tempPos1",
		"tempPos2",
		"CrossGeometry",
		"setSegment",
		"IsoSurfaceGeometry",
		"_opts",
		"_posRad",
		"posRad",
		"IsoSurfaceMarchCube",
		"pointsValuesLinear",
		"hasIntersection",
		"bitsInside",
		"numCellsPerSide",
		"n3",
		"striIndicesMarchCube",
		"edgeTable",
		"GridCell",
		"_arrSize",
		"cubeIndex",
		"Triangle",
		"createArray",
		"arrSize",
		"IsoSurface",
		"_numTriangles",
		"_numVertices",
		"_volumetricData",
		"_xAxis",
		"_yAxis",
		"_zAxis",
		"_xDir",
		"_yDir",
		"_zDir",
		"cellSize",
		"xAxis",
		"yAxis",
		"zAxis",
		"xDir",
		"yDir",
		"zDir",
		"tmp",
		"notZero",
		"axe",
		"EPSILON",
		"isoLevel",
		"grid",
		"ind1",
		"ind2",
		"vertex",
		"valP1",
		"isoDiffP1",
		"diffValP2P1",
		"mu",
		"triangles",
		"firstIndices",
		"_firstIndices",
		"secondIndices",
		"_secondIndices",
		"vertexList",
		"_vertexList",
		"normalList",
		"_normalList",
		"_vertexInterp",
		"triCount",
		"triTblIdx",
		"triTable",
		"_triTable",
		"step",
		"appendSimple",
		"appendVertex",
		"vol",
		"volData",
		"getData",
		"dim",
		"getDimensions",
		"stepX",
		"getStrideX",
		"stepY",
		"getStrideY",
		"stepZ",
		"getStrideZ",
		"gc",
		"gcVal",
		"gcValSize",
		"additions",
		"axis",
		"triVertex",
		"_origin",
		"posMtx",
		"grad",
		"globTriCount",
		"getDirectIdx",
		"_gradient",
		"_polygonize",
		"computeGradient",
		"_doGridPosNorms",
		"_prepareAxesAndDirs",
		"vertexMap",
		"idcCount",
		"newIndices",
		"vertices",
		"newPositions",
		"newNormals",
		"norm",
		"faceVer",
		"oldVerCount",
		"vMap",
		"newVer",
		"matchedIndex",
		"_remapIndices",
		"_remapVertices",
		"colorMap",
		"atomMap",
		"atomWeightMap",
		"visibilitySelector",
		"atomWeightData",
		"atomStrideX",
		"atomStrideY",
		"atomStrideZ",
		"numVerts",
		"xs",
		"ys",
		"zs",
		"colorData",
		"strideX",
		"strideY",
		"strideZ",
		"xInv",
		"yInv",
		"zInv",
		"atomLookup",
		"atomWeights",
		"interp",
		"idx1",
		"idx2",
		"collectWeight",
		"coefX",
		"coefY",
		"coefZ",
		"newVerCount",
		"ind",
		"mux",
		"muy",
		"muz",
		"maxWeight",
		"dominantIdx",
		"atomIdx",
		"c0",
		"c1",
		"c2",
		"c3",
		"cz0",
		"cz1",
		"numTriangles",
		"newTriCount",
		"i0",
		"VolumeSurfaceGeometry",
		"_visibilitySelector",
		"_calcSurface",
		"posRadArray",
		"itemsCount",
		"maxPosRad",
		"minPosRad",
		"tmpVal",
		"minMaxValues",
		"_findMinMax",
		"minCoordRad",
		"maxCoordRad",
		"gridPadding",
		"radScale",
		"padRad",
		"bbox",
		"surface",
		"isoSurf",
		"compute",
		"vertexFusion",
		"setColorVolTex",
		"volTexMap",
		"packedArrays",
		"_findNumVoxels",
		"_computeSurface",
		"_makeSurface",
		"chem",
		"QuickSurfGeometry",
		"_shiftByOrigin",
		"gaussdensity",
		"atomicNum",
		"invIsoValue",
		"invGridSpacing",
		"maxVoxelX",
		"maxVoxelY",
		"maxVoxelZ",
		"volTexData",
		"texStrideX",
		"scaledRad",
		"atomicNumFactor",
		"radInv",
		"radLim",
		"radLim2",
		"xMin",
		"xMax",
		"dy2dz2",
		"addr",
		"texAddr",
		"expVal",
		"density",
		"exp",
		"colInd",
		"originX",
		"originY",
		"originZ",
		"AVHash",
		"maxDistance",
		"minX",
		"minY",
		"minZ",
		"maxX",
		"maxY",
		"maxZ",
		"hashFunc",
		"minW",
		"cid",
		"iDim",
		"jDim",
		"kDim",
		"nCells",
		"jkDim",
		"preHash",
		"iIdx",
		"cellOffsets",
		"cellLengths",
		"maxCellLength",
		"subArray",
		"cellLength",
		"neighbourListLength",
		"withinRadii",
		"rExtra",
		"out",
		"outIdx",
		"nearI",
		"nearJ",
		"nearK",
		"loI",
		"loJ",
		"loK",
		"hiI",
		"hiJ",
		"hiK",
		"iOffset",
		"jOffset",
		"cellStart",
		"cellEnd",
		"dataIndex",
		"baseIndex",
		"rSum",
		"ContactSurface",
		"_indexList",
		"maxRadius",
		"scaleFactor",
		"volTex",
		"weights",
		"gridx",
		"gridy",
		"gridz",
		"sinTable",
		"cosTable",
		"neighbours",
		"ngTorus",
		"lastClip",
		"weightsMap",
		"mid",
		"fillGridDim",
		"innI",
		"initializeGrid",
		"gridSize",
		"TypeName",
		"uniformArray",
		"rExt",
		"initializeAngleTables",
		"singleAtomObscures",
		"innX",
		"innY",
		"innZ",
		"innCI",
		"ra2",
		"obscured",
		"ni",
		"projectTorus",
		"aIdx",
		"bIdx",
		"xa",
		"ya",
		"za",
		"r1",
		"innR2",
		"dmp",
		"normalToLine",
		"rInt",
		"ng",
		"cost",
		"sint",
		"px",
		"py",
		"pz",
		"iax",
		"iay",
		"iaz",
		"minx",
		"miny",
		"minz",
		"maxx",
		"maxy",
		"maxz",
		"iz",
		"iy",
		"dzy2",
		"zyOffset",
		"ix",
		"current",
		"getVolume",
		"timeEnd",
		"ax",
		"ay",
		"az",
		"ar2",
		"colIdx",
		"cr",
		"cg",
		"cb",
		"cIdx",
		"ap",
		"spx",
		"spy",
		"spz",
		"dd",
		"projectPoints",
		"innIdx",
		"projectTorii",
		"innInnI",
		"fixNegatives",
		"ContactSurfaceGeometry",
		"contactSurface",
		"IsoSurfaceAtomColored",
		"radiusAt",
		"coord",
		"colorX",
		"colorY",
		"colorZ",
		"atomType",
		"srcAtom",
		"IsosurfaceBuildNormals",
		"vBoxMin",
		"vBoxMax",
		"_numAtoms",
		"_probeRadius",
		"_atomsList",
		"_voxelList",
		"numAtomsRefs",
		"aveRad",
		"numCells",
		"_numCells",
		"_aveRad",
		"side",
		"side2",
		"side3",
		"xScale",
		"_xScale",
		"yScale",
		"_yScale",
		"zScale",
		"_zScale",
		"maxAtomsRefs",
		"xNumVoxMult",
		"yNumVoxMult",
		"zNumVoxMult",
		"diaAffect",
		"numVoxX",
		"numVoxY",
		"numVoxZ",
		"xIndMin",
		"yIndMin",
		"zIndMin",
		"xIndMax",
		"yIndMax",
		"zIndMax",
		"indVoxel",
		"indexNext",
		"_vertices",
		"xInd",
		"yInd",
		"zInd",
		"ref",
		"closest",
		"minDist2",
		"MAX_VALUE",
		"forEachRelatedAtom",
		"numVertices",
		"numCloseAtoms",
		"vNormalX",
		"vNormalY",
		"vNormalZ",
		"koef",
		"maxRadAffect",
		"maxRadAffect2",
		"expScale",
		"gatherNormals",
		"radiusColorSmoothness",
		"colorsClose",
		"weightsSum",
		"gatherColors",
		"weightNormalized",
		"IsoSurfaceGeo",
		"maxNumVertices",
		"maxNumTriangles",
		"needVertexColors",
		"_maxNumVertices",
		"_maxNumTriangles",
		"HASH_SIZE",
		"SSIsosurfaceGeometry",
		"_innerBuild",
		"geoOut",
		"getGeo",
		"_fromGeo",
		"numTri3",
		"atomsColored",
		"nm",
		"hashLines",
		"hashEntries",
		"bigNum",
		"probeRadius2",
		"atomRadiusScale",
		"radMax",
		"num",
		"numPoints",
		"vOut",
		"invNP",
		"tx",
		"ty",
		"tz",
		"sign",
		"cube",
		"indexPointValue",
		"xb",
		"yb",
		"zb",
		"v0",
		"a0",
		"voxelWorld",
		"getClosestAtom",
		"a1",
		"a2",
		"isTriangleVisible",
		"indInGeo0",
		"addVertexToGeo",
		"indInGeo1",
		"indInGeo2",
		"itr",
		"meshRes",
		"vCellStep",
		"vaEdges",
		"vCorner",
		"indCell",
		"indY",
		"indZ",
		"getCornerCoord",
		"indPointValues",
		"indValues",
		"buildEdgePoint",
		"offs",
		"numTri",
		"indTri",
		"addTriangle",
		"numIntersectedCells",
		"cubeValuesIndex",
		"indCorner",
		"letter",
		"atomT",
		"probeRad",
		"vDif",
		"fx",
		"fy",
		"fz",
		"indXMin",
		"indYMin",
		"indZMin",
		"indXMax",
		"indYMax",
		"indZMax",
		"numHashEtriesAllocated",
		"numHashEntryIndex",
		"vAdd",
		"oneHynberes",
		"hashResolution",
		"marCubeResoultion",
		"iHash",
		"hLineIndex",
		"iVertAdd",
		"getNewHashEntry",
		"entryFirst",
		"probeSphereRadius",
		"distToSphere",
		"distToBorder",
		"probeSpRad2",
		"sideInv",
		"radEst",
		"xCorner",
		"yCorner",
		"zCorner",
		"ok",
		"expandFactor",
		"meshResolution",
		"colorMode",
		"useVertexColors",
		"excludeProbe",
		"convertToAtomsColored",
		"getBoundingBox",
		"rProbeRadius",
		"calculateGridCorners",
		"numIntersectedCellsEstim",
		"getNumIntersectedCells",
		"createVertexHash",
		"probeRadForNormalsColors",
		"createVoxels",
		"buildGeoFromCorners",
		"modifyExcludedFromGeo",
		"buildNormals",
		"buildColors",
		"destroyVoxels",
		"LabelsGeometry",
		"items",
		"xTranslation",
		"yTranslation",
		"deltaPos",
		"userData",
		"translation",
		"fieldTxt",
		"spanText",
		"fontSize",
		"strings",
		"spanNodeP",
		"spanNodeText",
		"createLabel",
		"textAlign",
		"fColor",
		"bColor",
		"precision",
		"renderer",
		"capabilities",
		"getMaxPrecision",
		"_noiseData",
		"_noiseWrapS",
		"RepeatWrapping",
		"_noiseWrapT",
		"_noiseMinFilter",
		"NearestFilter",
		"_noiseMagFilter",
		"_noiseMapping",
		"noiseTexture",
		"RGBFormat",
		"noiseWidth",
		"noiseHeight",
		"_samplesKernel",
		"defaultUniforms",
		"UniformsUtils",
		"UniformsLib",
		"diffuse",
		"specular",
		"shininess",
		"zClipValue",
		"clipPlaneValue",
		"nearPlaneValue",
		"invModelViewMatrix",
		"world2colorMatrix",
		"dashedLineSize",
		"dashedLinePeriod",
		"projMatrixInv",
		"viewport",
		"samplesKernel",
		"noiseTex",
		"noiseTexelSize",
		"srcTexelSize",
		"uberOptionNames",
		"uberOptions",
		"zClipCoef",
		"noise",
		"toonShading",
		"UberMaterial",
		"instancedPos",
		"instancedMatrix",
		"attrColor",
		"attrColor2",
		"attrAlphaColor",
		"sphereSprite",
		"cylinderSprite",
		"fakeOpacity",
		"prepassTransparancy",
		"colorFromPos",
		"shadowmapType",
		"colorFromDepth",
		"orthoCam",
		"dashedLine",
		"thickLine",
		"fogTransparent",
		"normalsToGBuffer",
		"precisionString",
		"DoubleSide",
		"defines",
		"extensions",
		"inst",
		"USE_FOG",
		"INSTANCED_POS",
		"INSTANCED_MATRIX",
		"ATTR_COLOR",
		"ATTR_COLOR2",
		"ATTR_ALPHA_COLOR",
		"OVERRIDE_COLOR",
		"SPHERE_SPRITE",
		"fragDepth",
		"CYLINDER_SPRITE",
		"ZCLIP",
		"CLIP_PLANE",
		"FAKE_OPACITY",
		"USE_LIGHTS",
		"COLOR_FROM_POS",
		"SHADOWMAP_PCF_SHARP",
		"SHADOWMAP_PCF_RAND",
		"SHADOWMAP_BASIC",
		"COLOR_FROM_DEPTH",
		"ORTHOGRAPHIC_CAMERA",
		"PREPASS_TRANSP",
		"DASHED_LINE",
		"THICK_LINE",
		"FOG_TRANSPARENT",
		"drawBuffers",
		"NORMALS_TO_G_BUFFER",
		"TOON_SHADING",
		"shallow",
		"createInstance",
		"Material",
		"SuperClass",
		"NewObjectType",
		"rest",
		"onBeforeRender",
		"scene",
		"_onBeforeRender",
		"_update",
		"updateUniforms",
		"OurMesh",
		"UberObject",
		"ZSpriteMesh",
		"castShadow",
		"receiveShadow",
		"_geometry",
		"_group",
		"modelViewMatrix",
		"multiplyMatrices",
		"uniformsNeedUpdate",
		"ZClippedMesh",
		"modelView",
		"_modelView",
		"mvLength",
		"_mvLength",
		"setFromMatrixColumn",
		"localToWorld",
		"TextMesh",
		"initialized",
		"srcItem",
		"label",
		"visibility",
		"SimpleMesh",
		"_viewport",
		"ThickLineMesh",
		"projectionMatrix",
		"InstancedMesh",
		"ZClipped",
		"ZSprite",
		"Text",
		"Instanced",
		"setMatParams",
		"_createInstancedCylinders",
		"Geometry",
		"geometries",
		"meshes",
		"initMaterial",
		"_createLineSegmentsGeoTriplet",
		"renderParams",
		"thickLines",
		"_createIsoSurfaceGeoTriplet",
		"geoClass",
		"caps",
		"surfaceOpts",
		"MeshCreator",
		"_caps",
		"_settings",
		"TransformGroup",
		"geoParams",
		"transforms",
		"_geoParams",
		"mat",
		"_transforms",
		"_createMeshes",
		"_ray",
		"inverseMatrix",
		"_inverseMatrix",
		"childIntersects",
		"ciCount",
		"geos",
		"meshCnt",
		"Ray",
		"ChemGroup",
		"selection",
		"_selection",
		"_mode",
		"_colorer",
		"_chunksIdc",
		"chunks",
		"_polyComplexity",
		"_geo",
		"_makeGeoArgs",
		"_mesh",
		"chunksList",
		"_calcChunksList",
		"setOpacity",
		"_changeSubsetOpacity",
		"AtomsGroup",
		"atomsIdc",
		"AtomsSphereGroup",
		"calcAtomRadius",
		"setColor",
		"getAtomColor",
		"updateColor",
		"needsColorUpdate",
		"AtomsSurfaceGroup",
		"selectedAtoms",
		"getSurfaceOpts",
		"AtomsSASSESGroupStub",
		"getAtomText",
		"getNode",
		"getVisualName",
		"colorMappings",
		"adjust",
		"inverse",
		"propagateColor",
		"rule",
		"startsWith",
		"templateMappings",
		"hetatm",
		"water",
		"parseTemplate",
		"AtomsTextGroup",
		"getLabelOpts",
		"fgColor",
		"bgColor",
		"_slerp",
		"omega",
		"oSin",
		"AromaticGroup",
		"radOffset",
		"addChunk",
		"chunksToIdx",
		"prevVector",
		"currVector",
		"segmentsHeight",
		"_segmentsHeight",
		"leprStep",
		"currAtomIdx",
		"cCount",
		"cycAtoms",
		"chunkPoints",
		"tmpDir",
		"cycleRad",
		"prevPos",
		"currPos",
		"upDir",
		"currAngle",
		"_createShape",
		"pts",
		"AromaticTorusGroup",
		"torusRad",
		"getAromRadius",
		"radiusV",
		"calcStickRadius",
		"lookAtVector",
		"mtc",
		"points",
		"currPoint",
		"AromaticLinesGroup",
		"getAromaticOffset",
		"prevPt",
		"getAromaticArcChunks",
		"ResiduesGroup",
		"chunksIdc",
		"resIdx",
		"NucleicItemGroup",
		"stickRad",
		"getResidueColor",
		"_processItem",
		"NucleicCylindersGroup",
		"cyl1",
		"cyl2",
		"NucleicSpheresGroup",
		"exports",
		"AbstractInterpolator",
		"CubicInterpolator",
		"Enum",
		"LinearInterpolator",
		"NearestInterpolator",
		"SincFilterInterpolator",
		"Smooth",
		"clipClamp",
		"clipMirror",
		"clipPeriodic",
		"defaultConfig",
		"getColumn",
		"isValidNumber",
		"makeLanczosWindow",
		"makeScaledFunction",
		"makeSincKernel",
		"normalizeScaleTo",
		"shallowCopy",
		"sinc",
		"validateNumber",
		"validateVector",
		"__hasProp",
		"__extends",
		"ctor",
		"__super__",
		"METHOD_NEAREST",
		"METHOD_LINEAR",
		"METHOD_CUBIC",
		"METHOD_LANCZOS",
		"METHOD_SINC",
		"CLIP_CLAMP",
		"CLIP_ZERO",
		"CLIP_PERIODIC",
		"CLIP_MIRROR",
		"CUBIC_TENSION_DEFAULT",
		"CUBIC_TENSION_CATMULL_ROM",
		"cubicTension",
		"clip",
		"scaleTo",
		"sincFilterSize",
		"sincWindow",
		"period",
		"config",
		"clipHelper",
		"clipHelperClamp",
		"clipHelperZero",
		"periodic",
		"clipHelperPeriodic",
		"mirror",
		"clipHelperMirror",
		"getClippedInput",
		"interpolate",
		"_super",
		"tangentFactor",
		"getTangent",
		"t2",
		"t3",
		"kernel",
		"sum",
		"_ref",
		"_ref2",
		"_len",
		"_results",
		"baseScale",
		"scaleRange",
		"isFinite",
		"dimension",
		"invalidErr",
		"baseDomainEnd",
		"interpolator",
		"interpolatorClass",
		"interpolators",
		"properties",
		"smoothFunc",
		"lanczosFilterSize",
		"nearest",
		"linear",
		"cubic",
		"lanczos",
		"_j",
		"_len2",
		"deepValidation",
		"_k",
		"_len3",
		"domain",
		"commonjsHelpers",
		"calcMatrix",
		"_buildStructureInterpolator",
		"argTrans",
		"transformT",
		"tt",
		"newt",
		"ans",
		"_addPoints",
		"centerPoints",
		"topPoints",
		"tp",
		"_calcPoints",
		"firstIdx",
		"_prevIdx",
		"_nextIdx",
		"arrIdx",
		"_extrapolate2",
		"otherIdx",
		"prevIdx",
		"nextIdx",
		"posFrom",
		"posTo",
		"nucleic",
		"nameFrom",
		"nameTo",
		"shift",
		"wing",
		"cpPrev",
		"tpPrev",
		"cpNext",
		"tpNext",
		"_addPointsForLoneResidue",
		"CartoonHelper",
		"startIdx",
		"endIdx",
		"pointsArrays",
		"_topInterp",
		"_centerInterp",
		"_shift",
		"_valueStep",
		"_segmentsCount",
		"firstRad",
		"secondRad",
		"mtcCount",
		"outMtc",
		"currRad",
		"topInterp",
		"cenInterp",
		"currentValue",
		"mtxIdx",
		"lerpVal",
		"currTop",
		"currCenter",
		"nextCenter",
		"_loopThrough",
		"subDiv",
		"subDivI",
		"subDivN",
		"idc",
		"matrixHelper",
		"prevLast",
		"prevSecondRad",
		"getResidueRadius",
		"prepareMatrices",
		"ResiduesSubseqGroup",
		"cmpMultiplier",
		"getHeightSegmentsRatio",
		"getTension",
		"chunkIdc",
		"subdivs",
		"ResiduesTraceGroup",
		"chunk",
		"BondsGroup",
		"drawMultiple",
		"drawMultiorderBonds",
		"showAromatic",
		"showAromaticLoops",
		"bondsIdc",
		"bondsCount",
		"getBondOrder",
		"bondOrder",
		"getCylinderCount",
		"bondIdx",
		"BondsCylinderGroup",
		"normDir",
		"emptyOffset",
		"calcSpaceFraction",
		"leftPos",
		"rightPos",
		"currBondIdx",
		"atom1",
		"atom2",
		"a1Pos",
		"a2Pos",
		"calcNormalDir",
		"currStickRad",
		"STEP_SIZE",
		"BondsLinesGroup",
		"bondDir",
		"a1Hangs",
		"a2Hangs",
		"AtomsProcessor",
		"atomCount",
		"_checkAtom",
		"atomsGroup",
		"meshIdx",
		"chSubset",
		"subsetEl",
		"OrphanAtomsProcessor",
		"ResiduesProcessor",
		"ResidueGroup",
		"_checkResidue",
		"residuesGroup",
		"NucleicProcessor",
		"ResidueProcessor",
		"SubseqsProcessor",
		"getMaskedSubdivSequences",
		"jEnd",
		"BondsProcessor",
		"bondsGroup",
		"AromaticProcessor",
		"cycleIdx",
		"perCycle",
		"Atoms",
		"OrphanAtoms",
		"Residues",
		"Nucleic",
		"Subseqs",
		"Bonds",
		"Aromatic",
		"_bakeGroup",
		"triplet",
		"Processor",
		"GroupsFactory",
		"createSpheres",
		"processors",
		"createCrosses",
		"create2CCylinders",
		"create2CLines",
		"createExtrudedChains",
		"create2CClosedCylinders",
		"createChunkedLines",
		"createQuickSurface",
		"createContactSurface",
		"createSASSES",
		"createLabels",
		"Mode",
		"groupList",
		"depGroups",
		"groupCount",
		"currGroup",
		"newGroup",
		"getRenderParams",
		"LinesMode",
		"shortName",
		"LicoriceMode",
		"BallsAndSticksMode",
		"VanDerWaalsMode",
		"TraceMode",
		"TubeMode",
		"_residue",
		"TUBE_RADIUS",
		"buildGeometry",
		"CartoonMode",
		"secCache",
		"getSecondary",
		"secOpts",
		"ARROW_END",
		"startRad",
		"getResidueStartRadius",
		"endRad",
		"getResidueEndRadius",
		"_res",
		"tubeRad",
		"secHeight",
		"secData",
		"SurfaceMode",
		"surfaces",
		"surfaceNames",
		"isSurface",
		"QuickSurfaceMode",
		"useBeads",
		"getVisibilitySelector",
		"IsoSurfaceMode",
		"_excludeProbe",
		"_radScale",
		"IsoSurfaceSASMode",
		"IsoSurfaceSESMode",
		"ContactSurfaceMode",
		"TextMode",
		"adjustColor",
		"Palette",
		"asIs",
		"elementColors",
		"defaultElementColor",
		"residueColors",
		"defaultResidueColor",
		"chainColors",
		"secondaryColors",
		"defaultSecondaryColor",
		"gradientName",
		"gradients",
		"defaultNamedColor",
		"beta",
		"namedColors",
		"minRangeColor",
		"midRangeColor",
		"maxRangeColor",
		"defaultGradientColor",
		"namedColorsArray",
		"rainbow",
		"temp",
		"hot",
		"cold",
		"reds",
		"blues",
		"H",
		"F",
		"P",
		"S",
		"CL",
		"FE",
		"NI",
		"CU",
		"BR",
		"HE",
		"LI",
		"BE",
		"B",
		"NE",
		"NA",
		"MG",
		"AL",
		"SI",
		"AR",
		"K",
		"SC",
		"TI",
		"V",
		"CR",
		"MN",
		"ZN",
		"GA",
		"GE",
		"AS",
		"KR",
		"RB",
		"SR",
		"Y",
		"ZR",
		"NB",
		"TC",
		"RU",
		"RH",
		"PD",
		"AG",
		"CD",
		"IN",
		"SN",
		"SB",
		"TE",
		"XE",
		"BA",
		"LA",
		"CE",
		"PR",
		"ND",
		"PM",
		"SM",
		"EU",
		"GD",
		"TB",
		"DY",
		"HO",
		"ER",
		"YB",
		"LU",
		"HF",
		"TA",
		"W",
		"RE",
		"OS",
		"IR",
		"PT",
		"AU",
		"HG",
		"TL",
		"PB",
		"BI",
		"PO",
		"AT",
		"RN",
		"FR",
		"RA",
		"AC",
		"TH",
		"PA",
		"NP",
		"PU",
		"AM",
		"CM",
		"BK",
		"CF",
		"ES",
		"FM",
		"MD",
		"NO",
		"LR",
		"RF",
		"DB",
		"BH",
		"HS",
		"MT",
		"palettes",
		"cpkPalette",
		"jmolPalette",
		"vmdPalette",
		"Colorer",
		"ElementColorer",
		"getElementColor",
		"ResidueTypeColorer",
		"SequenceColorer",
		"getGradientColor",
		"ChainColorer",
		"getChainColor",
		"SecondaryStructureColorer",
		"getSecondaryColor",
		"secondary",
		"UniformColorer",
		"ConditionalColorer",
		"parsed",
		"_subsetCached",
		"ConformationColorer",
		"TemperatureColorer",
		"OccupancyColorer",
		"_getColorByOccupancy",
		"HydrophobicityColorer",
		"hydrophobicity",
		"MoleculeColorer",
		"getMoleculeCount",
		"CarbonColorer",
		"colorCarbon",
		"colorNotCarbon",
		"neutralColor",
		"intensity",
		"createDerivativeMesh",
		"layer",
		"newMesh",
		"traverseMeshes",
		"meshTypes",
		"func",
		"_gatherObjects",
		"matValues",
		"processTransparentMaterial",
		"prepassTranspMesh",
		"processColFromPosMaterial",
		"colFromPosMesh",
		"createShadowmapMaterial",
		"shadowmapMesh",
		"isShadowmapMesh",
		"forEachMeshInGroup",
		"processObj",
		"applyTransformsToMeshes",
		"removeShadowmapMaterial",
		"countTriangles",
		"totalCount",
		"attribs",
		"currAttr",
		"faces",
		"_countMeshTriangles",
		"Representation",
		"startMaterialValues",
		"selectorString",
		"materialPreset",
		"needsRebuild",
		"setMode",
		"markAtoms",
		"clearAtomBits",
		"selectionGeo",
		"meshutils",
		"sg",
		"matrixAutoUpdate",
		"repSettings",
		"selStr",
		"modeDiff",
		"identify",
		"colorerDiff",
		"newSelectorObject",
		"newSelector",
		"newMode",
		"newColorer",
		"newMaterial",
		"setMaterialPreset",
		"_traverseComponentGroups",
		"ComplexEditor",
		"ComplexComponentEditor",
		"complexVisual",
		"_complexVisual",
		"_inProgress",
		"_componentTransforms",
		"_bakeComponentTransform",
		"onAtomPositionChanged",
		"_resetComponentTransform",
		"finalizeEdit",
		"pivot",
		"visual",
		"getSelectedComponent",
		"reprNode",
		"getSelectionGeo",
		"selectionMask",
		"getSelectionBit",
		"bbmin",
		"bbmax",
		"updateMatrix",
		"ComplexFragmentEditor",
		"_getSelectionBorderAtoms",
		"_fragmentBoundAtoms",
		"pivotPos",
		"_fragmentGeo",
		"_fragmentSelectionGeo",
		"vg",
		"smeshes",
		"sm",
		"selectionBit",
		"makeTranslation",
		"_bakeAtomTransform",
		"boundAtoms",
		"transformDirection",
		"atomHash",
		"ComponentEditor",
		"FragmentEditor",
		"lookupAndCreate",
		"entityList",
		"specs",
		"ComplexVisual",
		"_reprList",
		"_repr",
		"_reprListChanged",
		"_selectionBit",
		"_reprUsedBits",
		"_selectionCount",
		"_selectionGeometry",
		"release",
		"_editor",
		"repCurrent",
		"repAdd",
		"status",
		"change",
		"bits",
		"NUM_REPRESENTATION_BITS",
		"newSelectionBit",
		"_getFreeReprIdx",
		"originalSelection",
		"buildSelectorFromMask",
		"def",
		"unmarkAtoms",
		"hide",
		"show",
		"markAtomsAdditionally",
		"rebuildSelectionGeometry",
		"pickedObj",
		"otherObj",
		"getMolecule",
		"resetSelectionMask",
		"tmpMask",
		"deselectionMask",
		"multiple",
		"selRule",
		"reprList",
		"Promise",
		"resolve",
		"errorOccured",
		"setTimeout",
		"hasGeometry",
		"repr",
		"buildSelectionGeometry",
		"optimizeList",
		"NaN",
		"expression",
		"all",
		"or",
		"and",
		"residx",
		"_buildSelectorFromSortedLists",
		"editor",
		"ComplexVisualEdit",
		"needTraverse",
		"forEachAtomWithinDistFromMasked",
		"countAtomsByMask",
		"volumeUniforms",
		"volumeDim",
		"tileTex",
		"tileTexSize",
		"tileStride",
		"boxAngles",
		"_isoLevel0",
		"_flipV",
		"_BFLeft",
		"_BFRight",
		"_FFLeft",
		"_FFRight",
		"_WFFLeft",
		"_WFFRight",
		"overrideUniforms",
		"defUniforms",
		"facesPosMaterialParams",
		"sideType",
		"BackFacePosMaterial",
		"backFaceParams",
		"BackSide",
		"ShaderMaterial",
		"ShaderParams",
		"FrontSide",
		"BackFacePosMaterialFarPlane",
		"matUniforms",
		"aspectRatio",
		"farZ",
		"tanHalfFOV",
		"matWorld2Volume",
		"shaderParams",
		"FrontFacePosMaterial",
		"frontFaceParams",
		"VolumeMaterial",
		"updateDefines",
		"ISO_MODE",
		"STEPS_COUNT",
		"VolumeMesh",
		"Plane",
		"cullFlag",
		"_corners",
		"edges",
		"_edges",
		"edgeIntersections",
		"_edgeIntersections",
		"constant",
		"vert",
		"cornerMark",
		"edgeMark",
		"curEdge",
		"curEdgeInter",
		"CheckX",
		"CheckY",
		"CheckZ",
		"curEdgeIdx",
		"curEdgeSource",
		"face",
		"nextVertex",
		"coplanarPoint",
		"faceIdx",
		"_collectVertices",
		"vRight",
		"vDir",
		"rightProj",
		"_sortIndices",
		"numIndices",
		"vm",
		"getTiledTextureStride",
		"buildTiledTexture",
		"getBox",
		"image",
		"getVolumeInfo",
		"volInfo",
		"obtuseAngle",
		"mean",
		"dmean",
		"dmin",
		"span",
		"dmax",
		"sd",
		"nearClipPlaneOffset",
		"_nearClipPlaneOffset",
		"_pos",
		"_norm",
		"norm4D",
		"_norm4D",
		"matrixWorldToLocal",
		"_matrixWorldToLocal",
		"_clipPlane",
		"_updateIsoLevel",
		"getWorldDirection",
		"getWorldPosition",
		"setFromNormalAndCoplanarPoint",
		"_updateVertices",
		"_updateIndices",
		"Vector4",
		"VolumeBounds",
		"bSize",
		"offsetVert",
		"_getBaseVertices",
		"flatVertices",
		"_flattenArray",
		"_lines",
		"LineBasicMaterial",
		"projTable",
		"_projectionTable",
		"proj",
		"inv",
		"currDelta",
		"XY",
		"XZ",
		"YZ",
		"VolumeFarPlane",
		"volume",
		"planeGeo",
		"_initPlaneGeo",
		"_plane",
		"frustumCulled",
		"doubleSided",
		"matWorldToVolume",
		"_renderer",
		"planeCamPos",
		"normalMatrix",
		"volumeMatrix",
		"DEG2RAD",
		"VolumeVisual",
		"setDataSource",
		"_frame",
		"getMesh",
		"showFrame",
		"_farPlane",
		"getBoundingSphere",
		"needShow",
		"LoaderList",
		"someLoaders",
		"SomeLoader",
		"canProbablyLoad",
		"Loader",
		"_source",
		"_options",
		"_abort",
		"_agent",
		"abort",
		"FileLoader",
		"_binary",
		"blob",
		"reader",
		"FileReader",
		"readAsArrayBuffer",
		"readAsText",
		"File",
		"urlStartRegexp",
		"XHRLoader",
		"request",
		"XMLHttpRequest",
		"response",
		"responseType",
		"send",
		"ImmediateLoader",
		"ParserList",
		"someParsers",
		"format",
		"formats",
		"SomeParser",
		"canProbablyParse",
		"parseSync",
		"model",
		"_parseHeader",
		"Remark290",
		"_matrix",
		"_matrixIndex",
		"stream",
		"readString",
		"matrixRow",
		"readCharCode",
		"matrixData",
		"matrixIndex",
		"parseFloat",
		"Remark350",
		"assemblies",
		"_assembly",
		"assembly",
		"addMatrix",
		"addChain",
		"PDBStream",
		"_start",
		"_nextCR",
		"_nextLF",
		"_next",
		"_end",
		"pdbStartRegexp",
		"remarkParsers",
		"PDBParser",
		"_serialAtomMap",
		"_modelId",
		"_compaundFound",
		"_biomoleculeFound",
		"_allowedChainsIDs",
		"_lastMolId",
		"_remarks",
		"_remark",
		"_compndCurrToken",
		"fileType",
		"_fixBondsArray",
		"_fixChains",
		"remark290",
		"isUndefined",
		"remark350",
		"chainDict",
		"chainObj",
		"idChainMap",
		"nj",
		"readInt",
		"readChar",
		"chainID",
		"resSeq",
		"readFloat",
		"veryLong",
		"nameToElement",
		"Role",
		"serial0",
		"serial1",
		"serial2",
		"serial3",
		"serial4",
		"tokenIdx",
		"chainStr",
		"lastChar",
		"remarkNum",
		"remark",
		"RemarkParser",
		"_parseSTRUCTURE",
		"addHelix",
		"addSheet",
		"pars",
		"adder",
		"serialNumber",
		"structureName",
		"helLength",
		"shWidth",
		"shCur",
		"shPrev",
		"startChainID",
		"endChainID",
		"startSequenceNumber",
		"iCodeStr",
		"startICode",
		"endSequenceNumber",
		"endICode",
		"cs",
		"classification",
		"date",
		"title",
		"tagParsers",
		"HEADER",
		"_parseHEADER",
		"_parseTITLE",
		"_parseATOM",
		"HETATM",
		"ENDMDL",
		"_parseENDMDL",
		"CONECT",
		"_parseCONECT",
		"COMPND",
		"_parseCOMPND",
		"REMARK",
		"_parseREMARK",
		"_parseHELIX",
		"_parseSHEET",
		"cOrderCharCodes",
		"cmlStartRegexp",
		"CMLParser",
		"_readOnlyOneMolecule",
		"atomId",
		"countBonds",
		"idxs",
		"atomRefs2",
		"moleculeArr",
		"fieldData",
		"atomRefs",
		"placement",
		"fieldName",
		"_extractSGroup",
		"_createSGroup",
		"sgroupRef",
		"atomsRef",
		"mapEntry",
		"cycleFuncInner",
		"cycleFunc",
		"x2",
		"x3",
		"y2",
		"y3",
		"z3",
		"dom",
		"childNodes",
		"parseNode",
		"xmlNode",
		"nodeName",
		"nodeValue",
		"jsonNode",
		"existing",
		"molSet",
		"atomArray",
		"_findSuitableMolecule",
		"rawData",
		"doc",
		"DOMParser",
		"parseFromString",
		"traversedData",
		"_traverseData",
		"cml",
		"retData",
		"filteredData",
		"rd",
		"ret",
		"_extractSGroups",
		"localBond",
		"bondArray",
		"_rebuidBondIndexes",
		"orderAttr",
		"tc",
		"labels",
		"_breadWidthSearch",
		"retStruct",
		"atomLabels",
		"labelsCount",
		"originalCML",
		"prepareComponentCompound",
		"compId",
		"molId",
		"molID",
		"_packLabel",
		"breadthQueue",
		"componentID",
		"labeledAtoms",
		"startID",
		"_unpackLabel",
		"eAtom",
		"mainAtom",
		"varData",
		"currentLabel",
		"reorder",
		"lLabel",
		"atomFullNameStruct",
		"elementType",
		"countRef",
		"currAtomComp",
		"strLabel",
		"JSON",
		"stringify",
		"atomSerial",
		"added",
		"mrvValence",
		"complexAtom",
		"_parseBond",
		"getSGroupCount",
		"sGrp",
		"getSGroups",
		"_selectComponents",
		"_parseSet",
		"totalAtomsParsed",
		"joinedComplex",
		"joinComplexes",
		"module",
		"setUint8",
		"setUint16",
		"setUint32",
		"setFloat64",
		"setInt8",
		"setInt16",
		"setInt32",
		"ArrayBuffer",
		"DataView",
		"byteOffset",
		"Int8Array",
		"Int16Array",
		"L",
		"setFloat32",
		"getFloat32",
		"M",
		"E",
		"getInt32",
		"q",
		"R",
		"rr",
		"bondAtomList",
		"bondOrderList",
		"xCoordList",
		"yCoordList",
		"zCoordList",
		"bFactorList",
		"atomIdList",
		"altLocList",
		"occupancyList",
		"groupIdList",
		"groupTypeList",
		"secStructList",
		"insCodeList",
		"sequenceIndexList",
		"chainIdList",
		"chainNameList",
		"getInt8",
		"getUint8",
		"getUint16",
		"getUint32",
		"getFloat64",
		"getInt16",
		"X",
		"ignoreFields",
		"nr",
		"J",
		"firstModelOnly",
		"onModel",
		"onChain",
		"onGroup",
		"onAtom",
		"onBond",
		"chainsPerModel",
		"chainCount",
		"modelIndex",
		"groupsPerChain",
		"chainIndex",
		"atomNameList",
		"groupIndex",
		"groupId",
		"groupType",
		"groupName",
		"singleLetterCode",
		"chemCompType",
		"secStruct",
		"sequenceIndex",
		"atomIndex",
		"elementList",
		"formalCharge",
		"formalChargeList",
		"xCoord",
		"yCoord",
		"zCoord",
		"bFactor",
		"atomIndex1",
		"atomIndex2",
		"Q",
		"Z",
		"_",
		"tr",
		"er",
		"ir",
		"encode",
		"decode",
		"fetch",
		"fetchReduced",
		"version",
		"fetchUrl",
		"fetchReducedUrl",
		"encodeMsgpack",
		"encodeMmtf",
		"decodeMsgpack",
		"decodeMmtf",
		"mmtfModule",
		"mmtf",
		"ArrayComparator",
		"original",
		"_original",
		"_sum",
		"candidate",
		"sorted",
		"secStructToType",
		"MMTFParser",
		"_modelData",
		"chainData",
		"groupData",
		"_updateSecStructure",
		"atomData",
		"bondData",
		"_ssType",
		"_ssStruct",
		"_ssStart",
		"struct",
		"mmtfData",
		"chainsInModel0",
		"chainIndexList",
		"description",
		"structureId",
		"releaseDate",
		"eventCallbacks",
		"modelData",
		"_onModel",
		"_onChain",
		"_onGroup",
		"_onAtom",
		"_onBond",
		"MMTF",
		"_updateMolecules",
		"named",
		"bioAssemblyList",
		"baInfo",
		"transformList",
		"chainListCheck",
		"chainNames",
		"allChains",
		"_chainsByName",
		"compare",
		"transpose",
		"primaryChainsArray",
		"primaryChainsHash",
		"primary",
		"_traverse",
		"_linkAtomsToResidues",
		"_markHeteroAtoms",
		"_findSynonymousChains",
		"_parseAssemblyInfo",
		"_joinSynonymousChains",
		"isArrayBuffer",
		"ParsingError",
		"column",
		"captureStackTrace",
		"parseLine",
		"parseColumn",
		"_isWhitespace",
		"_inlineIndexOf",
		"ch0",
		"cRequiredAtomFields",
		"cSecondaryCoding",
		"helx",
		"turn",
		"strn",
		"arrize",
		"arrayLikeObject",
		"AtomDataError",
		"_extractOperations",
		"assemblyGen",
		"opsDict",
		"groupStr",
		"gps",
		"grIdx",
		"grCount",
		"gr",
		"gp",
		"es",
		"cnt",
		"ii",
		"nn",
		"newMtx",
		"CIFParser",
		"asymDict",
		"newline",
		"block",
		"keysCount",
		"valuesCount",
		"_parseValue",
		"keyIndex",
		"readCIF",
		"_toComplex",
		"cifData",
		"complexData",
		"_extractAtoms",
		"_extractSecondary",
		"_extractAssemblies",
		"_extractMolecules",
		"_extractMetadata",
		"struct_keywords",
		"pdbx_keywords",
		"databaserev",
		"database_PDB_rev",
		"date_original",
		"pdbx_description",
		"getMolecules",
		"atom_site",
		"auth_seq_id",
		"Cartn_x",
		"Cartn_y",
		"Cartn_z",
		"label_atom_id",
		"group_PDB",
		"chainIdc",
		"auth_asym_id",
		"chainLabelIdc",
		"label_asym_id",
		"serials",
		"iCodes",
		"pdbx_PDB_ins_code",
		"resNames",
		"label_comp_id",
		"type_symbol",
		"tempFactors",
		"B_iso_or_equiv",
		"occupancies",
		"charges",
		"pdbx_formal_charge",
		"altLocs",
		"label_alt_id",
		"models",
		"pdbx_PDB_model_num",
		"label_entity_id",
		"moleculeIdx",
		"struct_conf",
		"_extractConfs",
		"struct_sheet_range",
		"_extractSheets",
		"sheetData",
		"sheet_id",
		"beg_label_seq_id",
		"end_label_seq_id",
		"beg_label_asym_id",
		"sheetNames",
		"strandNames",
		"starts",
		"beg_auth_seq_id",
		"ends",
		"end_auth_seq_id",
		"stICodes",
		"pdbx_beg_PDB_ins_code",
		"endICodes",
		"pdbx_end_PDB_ins_code",
		"getSheet",
		"findResidue",
		"helicesData",
		"conf_type_id",
		"typeId",
		"comments",
		"details",
		"lengths",
		"pdbx_PDB_helix_length",
		"helixClasses",
		"pdbx_PDB_helix_class",
		"asmGen",
		"pdbx_struct_assembly_gen",
		"asmIdx",
		"assembly_id",
		"asmOper",
		"oper_expression",
		"asmList",
		"asym_id_list",
		"operList",
		"vector",
		"ops",
		"_getOperations",
		"pdbx_struct_oper_list",
		"asm",
		"assemblyOps",
		"valueType",
		"VolumeModel",
		"_header",
		"_boxSize",
		"_boxStart",
		"extent",
		"nstart",
		"crs2xyz",
		"cellDims",
		"angles",
		"isTypedArray",
		"_buff",
		"headerFormat",
		"arrays",
		"_parseArray",
		"_parseVector",
		"_buffer",
		"header",
		"gamma",
		"z1",
		"z2",
		"_xyz2crs",
		"xaxis",
		"yaxis",
		"zaxis",
		"shiftX",
		"shiftY",
		"_setOrigins",
		"_getXYZdim",
		"_getXYZbox",
		"_toXYZData",
		"_getVolumeInfo",
		"CCP4Header",
		"ispg",
		"nsymbt",
		"lksflg",
		"customData",
		"machine",
		"nlabel",
		"Ccp4Model",
		"_typedCheck",
		"u32",
		"i32",
		"f32",
		"_fillHeader",
		"xyz2crs",
		"_getAxis",
		"_setAxisIndices",
		"_setBoxParams",
		"xyzData",
		"crsIdx",
		"CCP4Parser",
		"XYZParser",
		"_atomsInf",
		"_fileName",
		"endnAtoms",
		"endComment",
		"startAtomsInf",
		"words",
		"_parseToAtomsInf",
		"_parseAtomsInf",
		"PubChemParser",
		"jsonData",
		"PC_Compounds",
		"aids",
		"aid",
		"fromPairs",
		"zip",
		"coords",
		"conformers",
		"aids1",
		"aid1",
		"aids2",
		"aid2",
		"orders",
		"SDFStream",
		"_strings",
		"_currentStart",
		"_currentStringIndx",
		"numb",
		"curStr",
		"getNextString",
		"getCurrentString",
		"setStart",
		"probablyHaveDataToParse",
		"chargeMap",
		"orderMap",
		"typeMap",
		"sdfAndMolRegexp",
		"sdfRegExp",
		"fileFormat",
		"tagsNames",
		"tags",
		"SDFParser",
		"_format",
		"_metadata",
		"_currentMolProps",
		"_compoundIndx",
		"_assemblies",
		"_atomsParsed",
		"_atomsIndexes",
		"getStringFromStart",
		"codes",
		"trunc",
		"reverse",
		"buildChainID",
		"bondsNum",
		"bondType",
		"countsLine",
		"_parseAtoms",
		"_parseBonds",
		"_parseMOL",
		"findNextDataItem",
		"_parseDataItem",
		"_tryToUpdateMoleculeData",
		"tagsList",
		"_searchTag",
		"tagPossibleNames",
		"_tryToFind",
		"_finalizeMetadata",
		"_buildAssemblies",
		"_buildMolecules",
		"defineFormat",
		"_parseCompound",
		"findNextCompoundStart",
		"DSN6Header",
		"div",
		"DSN6Model",
		"i16",
		"byteBuffer",
		"counter",
		"zBlock",
		"yBlock",
		"xBlock",
		"inRange",
		"_pointCalculate",
		"blocks",
		"_blockCalculate",
		"_calculateInfoParams",
		"dispersion",
		"minDensity",
		"maxDensity",
		"DSN6Parser",
		"checkDataTypeOptions",
		"GROReader",
		"GROParser",
		"_time",
		"_residueNumber",
		"_residueName",
		"_atomName",
		"_atomNumber",
		"_atomPosition",
		"_atomVelocity",
		"filetype",
		"readLine",
		"getNext",
		"positionX",
		"positionY",
		"positionZ",
		"_parseTitle",
		"_parseNumberOfAtoms",
		"_parseAtom",
		"un",
		"am",
		"nc",
		"du",
		"resNumberRegex",
		"spacesRegex",
		"splitToFields",
		"MOL2Parser",
		"_currPosIdx",
		"_currStartIdx",
		"MOL2Data",
		"newPosIdx",
		"_toStringFromStart",
		"_toHeaderString",
		"_setStart",
		"_probablyHaveDataToParse",
		"parsedStr",
		"_setResidue",
		"originAtomId",
		"targetAtomId",
		"currMolecule",
		"molResidues",
		"_fixSerialAtoms",
		"_parseMolecule",
		"_toStringFromHeader",
		"_parseRawStrings",
		"_findNextCompoundStart",
		"ExporterList",
		"someExporters",
		"Exporter",
		"exportSync",
		"PDBResult",
		"_resultArray",
		"_currentStr",
		"_tag",
		"_fixedNumeration",
		"_numeration",
		"_tagStrNum",
		"writeString",
		"numeration",
		"isBoolean",
		"maxStrPos",
		"_currentStrLength",
		"newString",
		"curStrLength",
		"finish",
		"repeat",
		"cStr",
		"bondsArrays",
		"_getSubArrays",
		"subArraySize",
		"subArrays",
		"matrixIndx",
		"toFixed",
		"writeMatrix",
		"PDBExporter",
		"_tags",
		"_result",
		"_tagExtractors",
		"_extractHEADER",
		"TITLE",
		"_extractTITLE",
		"_extractATOM",
		"_extractCONECT",
		"_extractCOMPND",
		"_extractREMARK",
		"_extractHELIX",
		"SHEET",
		"_extractSHEET",
		"_stringForRemark350",
		"_stringForRemark290",
		"getResult",
		"newTag",
		"fixedBonds",
		"writeBondsArray",
		"strands",
		"startIndx",
		"_getMoleculeChains",
		"chainsString",
		"writeEntireString",
		"_Remark290",
		"_Remark350",
		"writeMatrices",
		"biomolIndx",
		"SourceClass",
		"copyFbxPoint3",
		"srcIdx",
		"dstIdx",
		"copyFbxPoint4",
		"vector4",
		"copyTransformedPoint3",
		"setSubArray",
		"copyFunctor",
		"functorOpts",
		"arridx",
		"FBXModel",
		"lastPos",
		"lastNorm",
		"lastCol",
		"vertsCount",
		"indsCount",
		"shifted",
		"setIndices",
		"currentCount",
		"getVerticesNumber",
		"setShiftedIndices",
		"setTransformedPositions",
		"setTransformedNormals",
		"FBXGeometry",
		"_info",
		"FBX1CGeometry",
		"cl",
		"FBX2CCylinder",
		"_cutRawStart",
		"_cutRawEnd",
		"_facesPerSlice",
		"addPerCylinder",
		"_extendVertices",
		"_extendIndices",
		"getGeoParams",
		"startToShift",
		"colorSize",
		"part1End",
		"part2End",
		"_setColorRange",
		"capSize",
		"cap1End",
		"cap2End",
		"FBXInfoExtractor",
		"_materials",
		"_models",
		"_extractModelsAndMaterials",
		"_flattenModels",
		"layersOfInterest",
		"Layers",
		"checkExportAbility",
		"_collectInstancedGeoInfo",
		"_collectGeoInfo",
		"faceSize",
		"overallVertsCount",
		"combined",
		"_reworkIndices",
		"verticesCount",
		"vertCount",
		"setPositions",
		"setNormals",
		"_collectMaterialInfo",
		"_addToPool",
		"instCount",
		"instMatrix",
		"objMatrix",
		"sphereColor",
		"instanceIndex",
		"_getSphereInstanceMatrix",
		"addInstance",
		"oneCCylinder",
		"splittingInfo",
		"_gatherCylindersColoringInfo",
		"twoCCylinder",
		"needToSplit",
		"additionalVertsCount",
		"colorStart",
		"colorEnd",
		"is2Colored",
		"_getCylinderInstanceMatrix",
		"materialIdx",
		"_checkExistingMaterial",
		"findIndex",
		"differs",
		"_collectSpheresInfo",
		"_collectCylindersInfo",
		"instIdx",
		"matVector1",
		"matVector2",
		"matVector3",
		"idxOffset",
		"FBXResult",
		"_writeHeader",
		"_writeDefinitions",
		"_writeObjects",
		"_writeRelations",
		"_writeConnections",
		"creator",
		"getFullYear",
		"getMonth",
		"getDate",
		"getHours",
		"getMinutes",
		"getSeconds",
		"getMilliseconds",
		"allModels",
		"_verticesIndices",
		"_normalLayer",
		"_colorLayer",
		"allMaterials",
		"_materialProperties",
		"modelsList",
		"materialList",
		"colorArray",
		"colorsStr",
		"_floatArrayToString",
		"colorIndices",
		"normalArray",
		"normalsStr",
		"vertStr",
		"FBXExporter",
		"_version",
		"miewVersion",
		"_extractor",
		"rot",
		"eyeDirection",
		"cameraUpDirection",
		"cameraSidewaysDirection",
		"moveDirection",
		"mouseDelta",
		"quat",
		"loaders",
		"parsers",
		"exporters",
		"tempColor",
		"CSS2DRenderer",
		"_height",
		"_widthHalf",
		"_heightHalf",
		"_vector",
		"_viewMatrix",
		"_projectionMatrix",
		"_domElement",
		"overflow",
		"pointerEvents",
		"myNode",
		"lerpColorAsHex",
		"setHex",
		"getHexString",
		"colorAsHex",
		"setFromMatrixPosition",
		"localOffset",
		"getMaxScaleOnAxis",
		"fogFactor",
		"smoothstep",
		"WebkitTransform",
		"MozTransform",
		"oTransform",
		"_renderObject",
		"STATE",
		"Quaternion",
		"matrix4",
		"ObjectHandler",
		"lastRotation",
		"ObjectControls",
		"objectPivot",
		"getAltObj",
		"hotkeysEnabled",
		"screen",
		"rotateFactor",
		"axisRotateFactor",
		"intertia",
		"dynamicDampingFactor",
		"intertiaThreshold",
		"_state",
		"_mousePrevPos",
		"_mouseCurPos",
		"_mainObj",
		"_altObj",
		"_affectedObj",
		"_isAltObjFreeRotationAllowed",
		"_isTranslationAllowed",
		"_isKeysTranslatingObj",
		"_pressedKeys",
		"_clock",
		"_lastUpdateTime",
		"_listeners",
		"mousedown",
		"mouseup",
		"mousemove",
		"mousewheel",
		"touchstartend",
		"touchmove",
		"getKeyBindObject",
		"keydownup",
		"handleResize",
		"resetKeys",
		"contextmenu",
		"Picker",
		"_lastMousePos",
		"_mouseTotalDist",
		"_lastClickBeginTime",
		"_lastClickPos",
		"_clickBeginTime",
		"touchstart",
		"touchend",
		"_rotate",
		"zeroPivot",
		"makeRotationFromQuaternion",
		"setObjects",
		"mousePrevPos",
		"mouseCurPos",
		"aboutAxis",
		"mouse2rotation",
		"setFromAxisAngle",
		"translate",
		"translateOnAxis",
		"timeSinceLastUpdate",
		"timeSinceMove",
		"mousePrev",
		"mouseCur",
		"setLength",
		"stopPropagation",
		"preventDefault",
		"innerWidth",
		"innerHeight",
		"getBoundingClientRect",
		"ownerDocument",
		"documentElement",
		"pageXOffset",
		"clientLeft",
		"pageYOffset",
		"clientTop",
		"enableHotkeys",
		"allowTranslation",
		"allow",
		"allowAltObjFreeRotation",
		"keysTranslateObj",
		"isEditingAltObj",
		"convertMouseToOnCircle",
		"pageX",
		"pageY",
		"screenSize",
		"convertMouseToViewport",
		"rotateByMouse",
		"aboutZAxis",
		"getOrientation",
		"setOrientation",
		"getScale",
		"setScale",
		"curTime",
		"_lastMouseMoveTime",
		"speedX",
		"speedY",
		"altObj",
		"button",
		"workWithAltObj",
		"altKey",
		"ctrlKey",
		"shiftKey",
		"translatePivotByMouse",
		"wheelDelta",
		"detail",
		"touches",
		"_touchDistanceCur",
		"_touchDistanceStart",
		"_scaleStart",
		"keyCode",
		"translatePivotInWorld",
		"setX",
		"setY",
		"setZ",
		"translatePivot",
		"setPivot",
		"newPivot",
		"picked",
		"pickObject",
		"screenPos",
		"rayCaster",
		"Raycaster",
		"unproject",
		"fogFarValue",
		"getMouseInViewport",
		"curPos",
		"_lastTouchdownPos",
		"changedTouches",
		"Axes",
		"targetCamera",
		"_target",
		"_targetCamera",
		"PerspectiveCamera",
		"_object",
		"AxesHelper",
		"_full",
		"autoClear",
		"setViewport",
		"clear",
		"secTypes",
		"cSecNames",
		"_createSecondary",
		"strArray",
		"nRes",
		"resid",
		"rIdx",
		"fromUInt20ToInt20",
		"uint20",
		"FrameInfo",
		"payload",
		"callbacks",
		"isLoading",
		"_framesRange",
		"frameIsReady",
		"_frameRequest",
		"_callbacks",
		"_framesRequestLength",
		"_downloadDataFn",
		"parseBinaryData",
		"setFrame",
		"framesStart",
		"framesEnd",
		"_framesCount",
		"onLoadStatusChanged",
		"onError",
		"_bufferRequestStart",
		"_prepareBuffer",
		"arrayBuffer",
		"dataView",
		"atomsCount",
		"framesCount",
		"_atomsCount",
		"chunkedFramesCount",
		"timeStep",
		"iName",
		"_timeStep",
		"posData",
		"coordIdx",
		"secondaryArr",
		"hiWord",
		"loWord",
		"_secondaryData",
		"_currFrame",
		"myResidues",
		"sec",
		"oldSec",
		"nSec",
		"compRes",
		"getSec",
		"frameIdx",
		"_cachedResidues",
		"_updateSecondary",
		"_parseBuffer",
		"vec",
		"_vec",
		"SceneObject",
		"LinesObj",
		"_id1",
		"_id2",
		"getAtomByFullname",
		"_atom1",
		"_getAtomFromName",
		"_atom2",
		"_line",
		"computeLineDistances",
		"_raycaster",
		"_intersects",
		"verticesNeedUpdate",
		"OutlineMaterial",
		"srcDepthTex",
		"srcTexSize",
		"DEPTH_OUTLINE",
		"FXAAMaterial",
		"bgTransparent",
		"BG_TRANSPARENT",
		"AOMaterial",
		"diffuseTexture",
		"normalTexture",
		"depthTexture",
		"camNearFar",
		"projMatrix",
		"kernelRadius",
		"depthThreshold",
		"_kernelOffsets",
		"AOHorBlurMaterial",
		"aoMap",
		"samplesOffsets",
		"AOVertBlurWithBlendMaterial",
		"fogNearFar",
		"useFog",
		"AnaglyphMaterial",
		"srcL",
		"srcR",
		"View",
		"orientation",
		"ViewInterpolator",
		"startView",
		"endView",
		"_endTime",
		"_isPaused",
		"_srcView",
		"_dstView",
		"_isMoving",
		"transTime",
		"_transitionTime",
		"wasStarted",
		"success",
		"createView",
		"slerp",
		"setup",
		"getCurrentView",
		"Cookies",
		"webVRPoC",
		"stylizeElement",
		"bottom",
		"padding",
		"border",
		"font",
		"xr",
		"isSessionSupported",
		"then",
		"supported",
		"cursor",
		"currentSession",
		"onSessionEnded",
		"onSessionStarted",
		"session",
		"_gfx",
		"setReferenceSpaceType",
		"setSession",
		"onmouseenter",
		"onmouseleave",
		"onclick",
		"requestSession",
		"optionalFeatures",
		"moveSceneBehindHeadset",
		"showEnterVR",
		"showWebXRNotFound",
		"textDecoration",
		"removeCookie",
		"cntKey",
		"_toCount",
		"cntVal",
		"_getSimpleCookie",
		"_removeSimpleCookie",
		"setCookie",
		"chunkLen",
		"lc",
		"_chunkString",
		"_setSimpleCookie",
		"getCookie",
		"cookie",
		"_getExpirationDate",
		"today",
		"setFullYear",
		"toUTCString",
		"_exists",
		"WebVRPoC",
		"onToggle",
		"_mainCamera",
		"_button",
		"_onToggle",
		"_molContainer",
		"_user",
		"_scalingPivot",
		"_controller1",
		"_controller2",
		"_pressedGripsCounter",
		"_distance",
		"startScalingByControllers",
		"stopScalingByControllers",
		"gfx",
		"createWebVRButton",
		"_mainFog",
		"_plugVRNodesIntoScene",
		"_setControllersListeners",
		"getController",
		"_createControllerMesh",
		"handleGripsDown",
		"handleGripsUp",
		"setAnimationLoop",
		"getSession",
		"_unplugVRNodesFromScene",
		"CylinderGeometry",
		"cylinder",
		"rotateX",
		"scaler",
		"container",
		"EDIT_MODE",
		"LOADER_NOT_FOUND",
		"removeExtension",
		"reportProgress",
		"percent",
		"chooseFogColor",
		"_setContainerContents",
		"arezSpritesSupported",
		"getExtension",
		"isAOSupported",
		"rePdbId",
		"rePubchem",
		"reUrlScheme",
		"_fetchData",
		"job",
		"shouldCancel",
		"notify",
		"matchesPdbId",
		"sourceType",
		"matchesPubchem",
		"compound",
		"resolveSourceShortcut",
		"TheLoader",
		"head",
		"io",
		"extractName",
		"fileExt",
		"TheParser",
		"updateBinaryMode",
		"newOptions",
		"keyCount",
		"loader",
		"lengthComputable",
		"total",
		"loaded",
		"catch",
		"_includesInCurSelection",
		"_includesInSelector",
		"Miew",
		"settingsCookie",
		"cookiePath",
		"_interpolator",
		"_container",
		"getElementById",
		"getElementsByClassName",
		"_containerRoot",
		"_running",
		"_halting",
		"_building",
		"_needRender",
		"_hotKeysEnabled",
		"_cookies",
		"restoreSettings",
		"_spinner",
		"_loading",
		"_animInterval",
		"_visuals",
		"_curVisualName",
		"_sourceWindow",
		"registeredPlugins",
		"_initOnSettingsChanged",
		"shadowMatrix",
		"OBB",
		"halfSize",
		"_bSphereForOneVisual",
		"_bBoxForOneVisual",
		"_bBox",
		"_invMatrix",
		"_points",
		"_anaglyphMat",
		"_size",
		"aberration",
		"_outlineMaterial",
		"minFilter",
		"magFilter",
		"RGBAFormat",
		"light",
		"getOBB",
		"class",
		"frag",
		"createDocumentFragment",
		"_msgMode",
		"_msgAtomInfo",
		"_showMessage",
		"_initGfx",
		"_initListeners",
		"_onKeyDown",
		"_onKeyUp",
		"_objectControls",
		"_getAltObj",
		"_updateShadowCamera",
		"_picker",
		"_onPick",
		"file",
		"keepRepsInfo",
		"cancel",
		"halt",
		"msg",
		"clientWidth",
		"clientHeight",
		"webGLOptions",
		"preserveDrawingBuffer",
		"premultipliedAlpha",
		"renderer2d",
		"WebGL1Renderer",
		"shadowMap",
		"autoUpdate",
		"PCFShadowMap",
		"getContext",
		"setPixelRatio",
		"devicePixelRatio",
		"setSize",
		"setClearColor",
		"clearColor",
		"stereoCam",
		"StereoCamera",
		"Fog",
		"selectionScene",
		"selectionRoot",
		"selectionPivot",
		"light12",
		"DirectionalLight",
		"pixelRatio",
		"getPixelRatio",
		"shadowMapSize",
		"mapSize",
		"light3",
		"AmbientLight",
		"deviceWidth",
		"deviceHeight",
		"offscreenBuf",
		"WebGLRenderTarget",
		"depthBuffer",
		"DepthTexture",
		"UnsignedShortType",
		"offscreenBuf2",
		"offscreenBuf3",
		"offscreenBuf4",
		"volBFTex",
		"volFFTex",
		"volWFFTex",
		"offscreenBuf5",
		"FloatType",
		"offscreenBuf6",
		"offscreenBuf7",
		"stereoBufL",
		"stereoBufR",
		"_showCanvas",
		"_embedWebXR",
		"stats",
		"_fps",
		"_onResize",
		"baseName",
		"random",
		"suffix",
		"_makeUniqueVisualName",
		"any",
		"_forEachComplexVisual",
		"_forEachVisual",
		"resume",
		"_requestAnimationFrame",
		"_onTick",
		"_discardComponentEdit",
		"_discardFragmentEdit",
		"pause",
		"isAnaglyph",
		"multi",
		"_onUpdate",
		"_onRender",
		"_this4",
		"union",
		"_setUberMaterialValues",
		"updateFogRange",
		"_getBSphereRadius",
		"isScriptingCommandAvailable",
		"callNextCmd",
		"_needRebuild",
		"rebuild",
		"_updateView",
		"_updateFog",
		"webVR",
		"updateMoleculeScale",
		"_clipPlaneUpdateValue",
		"_fogFarUpdateValue",
		"setRenderTarget",
		"_renderFrame",
		"focus",
		"_resizeOffscreenBuffers",
		"_renderShadowMap",
		"_renderScene",
		"setScissorTest",
		"setScissor",
		"cameraL",
		"cameraR",
		"renderBuffer",
		"textureBuffer",
		"gl",
		"tx8",
		"__webglTexture",
		"bindTexture",
		"TEXTURE_2D",
		"fb",
		"__webglFramebuffer",
		"bindFramebuffer",
		"FRAMEBUFFER",
		"framebufferTexture2D",
		"COLOR_ATTACHMENT0",
		"COLOR_ATTACHMENT1_WEBGL",
		"drawBuffersWEBGL",
		"distortion",
		"bHaveComplexes",
		"_getComplexVisual",
		"volumeVisual",
		"_getVolumeVisual",
		"ssao",
		"_enableMRT",
		"_renderWithPrepassTransparency",
		"dstBuffer",
		"srcBuffer",
		"_performAO",
		"_renderOutline",
		"_renderSelection",
		"_renderVolume",
		"_performFXAA",
		"_performDistortion",
		"targetBuffer",
		"srcDepthBuffer",
		"srcColorBuffer",
		"currentRenderTarget",
		"getRenderTarget",
		"activeCubeFace",
		"getActiveCubeFace",
		"activeMipmapLevel",
		"getActiveMipmapLevel",
		"setBlending",
		"NoBlending",
		"buffers",
		"setClear",
		"setTest",
		"updateMatrices",
		"selPivot",
		"_hasSelectionToRender",
		"renderTarget",
		"oldRT",
		"checkFramebufferStatus",
		"FRAMEBUFFER_COMPLETE",
		"dstBuf",
		"tmpBuf1",
		"tmpBuf2",
		"tmpBuf3",
		"volumeRenderingSupported",
		"volumeBFMat",
		"volumeFFMat",
		"cubeOffsetMat",
		"world2colorMat",
		"_checkVolumeRenderingSupport",
		"overrideMaterial",
		"colorMask",
		"_fxaaMaterial",
		"normalBuffer",
		"srcDepthTexture",
		"tempBuffer",
		"tempBuffer1",
		"_aoMaterial",
		"_horBlurMaterial",
		"_vertBlurMaterial",
		"_scale",
		"_lastPick",
		"_releaseAllVisuals",
		"_setEditMode",
		"_resetObjects",
		"setNeedRender",
		"resetReps",
		"resetPivot",
		"rebuildAll",
		"_resetScene",
		"updateSelectionMask",
		"TheExporter",
		"export",
		"_this5",
		"onLoadEnd",
		"anything",
		"jobIndex",
		"_refreshTitle",
		"dataSet",
		"_parseData",
		"_onLoad",
		"_removeVisual",
		"getCurrentVisual",
		"fileData",
		"_stopAnimation",
		"_frameInfo",
		"isPlaying",
		"_isAnimating",
		"_continueAnimation",
		"clearInterval",
		"minFrameTime",
		"setInterval",
		"_updateObjsToFrame",
		"nextFrame",
		"disableEvents",
		"visualName",
		"_startAnimation",
		"amberFileName",
		"_addVisual",
		"hasValidRes",
		"hasValidResidues",
		"resetEd",
		"_onLoadEd",
		"_tweakResolution",
		"_edLoader",
		"_this6",
		"toRemove",
		"getGeometry",
		"unitIdx",
		"currentUnitInfo",
		"getCurrentUnit",
		"_updateInfoPanel",
		"_rebuildObjects",
		"rebuildActions",
		"_this7",
		"setNeedsRebuild",
		"appendix",
		"repGet",
		"getSelectionCount",
		"defPreset",
		"_this8",
		"repCount",
		"presList",
		"_setReps",
		"applyPreset",
		"newIdx",
		"repRemove",
		"repHide",
		"_editMode",
		"getElementsByTagName",
		"editors",
		"beginComponentEdit",
		"_editors",
		"discard",
		"selectedVisuals",
		"beginFragmentEdit",
		"isFreeRotationAllowed",
		"_getVisualForComplex",
		"_updateSelection",
		"_enterComponentEditMode",
		"_enterFragmentEditMode",
		"_applyComponentEdit",
		"_applyFragmentEdit",
		"expandSelection",
		"shrinkSelection",
		"_extractRepresentation",
		"firstLine",
		"secondLine",
		"aName",
		"coordLine",
		"nextAltObj",
		"amount",
		"_centerInVisual",
		"getSelectionCenter",
		"screenshotURI",
		"getDataURL",
		"dataURL",
		"canvas",
		"canvasContext",
		"drawImage",
		"toDataURL",
		"areaOfInterestTanFov2",
		"shotAspect",
		"setDrawingBufferSize",
		"uri",
		"screenshot",
		"_export",
		"dataString",
		"_this9",
		"maxPerf",
		"_gfxScore",
		"_autoChangeResolution",
		"resetCurrentUnit",
		"resetView",
		"getBondCount",
		"getResidueCount",
		"getChainCount",
		"objData",
		"bThrow",
		"Ctor",
		"LinesObject",
		"_addSceneObject",
		"sceneObject",
		"objs",
		"getState",
		"compact",
		"compareWithDefaults",
		"currPreset",
		"repsDiff",
		"emptyReps",
		"repsInfo",
		"_compareReps",
		"objectsState",
		"setMaterialValues",
		"disable",
		"_this10",
		"_this11",
		"_onBgColorChanged",
		"_onFogColorChanged",
		"evt",
		"_updateMaterials",
		"_updateShadowmapMeshes",
		"_fogAlphaChanged",
		"sel",
		"euler",
		"Euler",
		"setFromQuaternion",
		"srcView",
		"dstView",
		"setFromEuler",
		"isMoving",
		"setPivotSubset",
		"setPivotAtom",
		"setPivotResidue",
		"None",
		"within",
		"fullAtomName",
		"complexName",
		"project",
		"dssp",
		"extractBasis",
		"retMat",
		"makeBasis",
		"extractRotation",
		"xml",
		"removeAttribute",
		"sGroup",
		"getPosition",
		"getCentralPoint",
		"updateCMLData",
		"XMLSerializer",
		"serializeToString",
		"curChainName",
		"curChainColor",
		"$Ve",
		"$Vf",
		"$Vg",
		"$Vh",
		"$Vi",
		"$Vj",
		"$Vk",
		"$Vl",
		"$Vm",
		"$Vn",
		"$Vo",
		"$Vp",
		"$Vq",
		"$Vr",
		"$Vs",
		"$Vt",
		"$Vu",
		"$Vv",
		"$Vw",
		"$Vx",
		"$Vy",
		"$Vz",
		"$VA",
		"$VB",
		"$VC",
		"$VD",
		"$VE",
		"$VF",
		"$VG",
		"$VH",
		"$VI",
		"$VJ",
		"$VK",
		"$VL",
		"$VM",
		"$VN",
		"$VO",
		"$VP",
		"$VQ",
		"$VR",
		"$VS",
		"$VT",
		"$VU",
		"$VV",
		"$VW",
		"$VX",
		"$VY",
		"$VZ",
		"$V_",
		"$V$",
		"$V01",
		"$V11",
		"$V21",
		"$V31",
		"$V41",
		"$V51",
		"$V61",
		"Command",
		"RESET",
		"BUILD",
		"ALL",
		"HELP",
		"Path",
		"MOTM",
		"OneArgCommand",
		"GET",
		"SET",
		"Value",
		"SET_SAVE",
		"SET_RESTORE",
		"SET_RESET",
		"PRESET",
		"AddRepresentation",
		"EditRepresentation",
		"REMOVE",
		"RepresentationReference",
		"HIDE",
		"SHOW",
		"LIST",
		"EXPAND_KEY",
		"SELECTOR_KEY",
		"SELECT",
		"WordAll",
		"WITHIN",
		"OF",
		"MATERIAL",
		"ModeCMD",
		"ColorCMD",
		"VIEW",
		"BASE_64",
		"UNIT",
		"DSSP",
		"SCALE",
		"ROTATE",
		"AxesList",
		"TRANSLATE",
		"CENTER",
		"GetURLBranch",
		"Screenshot",
		"LINE",
		"ArgList",
		"LISTOBJ",
		"REMOVEOBJ",
		"VIEW_KEY",
		"SCREENSHOT",
		"LOAD",
		"Url",
		"FILE_KEY",
		"ADD",
		"Description",
		"REP",
		"MODE",
		"COLOR",
		"Descriptor",
		"RepresentationOwnProperty",
		"RepresentationOwnPropertyOpts",
		"DESC_KEY",
		"DESC_KEY_OPTS",
		"AxesArg",
		"DESC_KEY_AXES",
		"Arg",
		"PathWoDescKey",
		"HEX",
		"BOOL",
		"Word",
		"CommandSetWoDESC_KEY",
		"DescKeys",
		"CLEAR",
		"FILE_LIST",
		"FILE_REGISTER",
		"FILE_DELETE",
		"PRESET_ADD",
		"PRESET_DELETE",
		"PRESET_UPDATE",
		"PRESET_RENAME",
		"PRESET_OPEN",
		"CREATE_SCENARIO",
		"RESET_SCENARIO",
		"DELETE_SCENARIO",
		"ADD_SCENARIO_ITEM",
		"LIST_SCENARIO",
		"PDB_KEY",
		"DELAY_KEY",
		"PRST_KEY",
		"DESCRIPTION_KEY",
		"CommandSet",
		"PresetPath",
		"HexOrNumber",
		"miew",
		"echo",
		"help",
		"motm",
		"propagateProp",
		"saveSettings",
		"resetSettings",
		"representations",
		"listRep",
		"listSelector",
		"checkArg",
		"changeUnit",
		"toJSO",
		"listObjs",
		"removeObject",
		"getURL",
		"screenshotSave",
		"CreateObjectPair",
		"keyRemap",
		"MiewCLIParser",
		"modeIdDesc",
		"$help",
		"colorDesc",
		"materialDesc",
		"addRepDesc",
		"setGetParameterDesc",
		"PDBID",
		"REP_NAME",
		"DESCRIPTION",
		"REP_INDEX",
		"EXPRESSION",
		"MODE_ID",
		"COLORER_ID",
		"MATERIAL_ID",
		"new",
		"del",
		"PARAMETER",
		"set_save",
		"set_restore",
		"set_reset",
		"ENCODED_VIEW",
		"removeobj",
		"listobj",
		"NULL",
		"RepresentationMap",
		"representationMap",
		"representationID",
		"strId",
		"sortedKeys",
		"representationsStorage",
		"CLIUtils",
		"repMap",
		"repName",
		"selectionStr",
		"strList",
		"helpData",
		"joinHelpStr",
		"clihelp",
		"sortBy",
		"helpItem",
		"awaitWhileCMDisInProcess",
		"finishAwaitingCMDInProcess",
		"modificate",
		"modificators",
		"modificator",
		"endsWith",
		"getNamedColor",
		"utilFunctions",
		"cliUtils",
		"cmd",
		"cliutils",
		"_val",
		"notimplemented",
		"script",
		"_printCallback",
		"_errorCallback",
		"parsercli",
		"cmdQueue",
		"commandInAction"
	],
	"mappings": "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,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3E,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAC3E,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzE,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAC3E,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACzE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAC5E,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC1E,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAC3E,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACzE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAC3E,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAC5E,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAC3E,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC3E,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1E,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC3E,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAC3E,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAC1E,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAC1E,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAC5E,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,IAC1E,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAC3E,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAC1E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3E,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAC3E,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAC5E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC3E,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAC5E,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAC5E,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAC3E,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1E,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1E,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAC1E,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAC3E,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAC1E,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAC1E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GACzE,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAC3E,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAC5E,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GACzE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GACxE,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAC5E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACzE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAC5E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5E,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC5E,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3E,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAC5E,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAC1E,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GACzE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,IACzE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GACzE,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC1E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAC3E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAC1E,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAC1E,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC3E,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAC5E,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAC1E,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3E,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAC3E,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3E,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC5E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5E,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC1E,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAC3E,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAC3E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EACzE,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAC3E,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAC3E,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1E,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAC1E,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAC3E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3E,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAC3E,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAC3E,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3E,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxE,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GACzE,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAC5E,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GACzE,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC1E,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAC1E,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GACzE,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAC1E,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5E,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1E,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAC3E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5E,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAC3E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3E,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAC3E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3E,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1E,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAC1E,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAC5E,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAC1E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACzE,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAC1E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC1E,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAC1E,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAC1E,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAC1E,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAC1E,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAC1E,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GACzE,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAC1E,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5E,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC1E,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5E,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzE,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GACzE,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAC1E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACzE,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAC1E,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC1E,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC5E,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC3E,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAC1E,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3E,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3E,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1E,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3E,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAC3E,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAC1E,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EACzE,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAC3E,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAC5E,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC3E,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAC3E,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1E,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GACzE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,GAC3E,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,EAC5E,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC1E,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAC3E,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAC1E,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1E,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAC5E,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAC1E,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAC5E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5E,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3E,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAC3E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAC3E,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAC3E,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAC5E,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3E,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAC3E,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAC1E,EAAG,EAAG,GAAI,GAAI,GAAI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AG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVmsI,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,KACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,KACVC,EAAM,CAAC,EAAG,KACVC,EAAM,CAAC,EAAG,KACVC,EAAM,CAAC,EAAG,KACVC,EAAM,CAAC,EAAG,KACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,EAAM,CAAC,EAAG,IACVC,GAAM,CAAC,EAAG,IACVC,GAAM,CAAC,EAAG,KACVC,GAAM,CAAC,EAAG,KACVC,GAAM,CAAC,EAAG,KACVC,GAAM,CAAC,EAAG,KACVC,GAAM,CAAC,EAAG,KACVC,GAAM,CAAC,EAA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MACA,MACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IAEN,GAAK,CAAC,EAAG,IACT,GAAK,CAAC,EAAG,IACT,GACKvvI,IACAC,IACAC,KACC,OACAC,KACA,CAAC,EAAG,QACJC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,MACA,MACA,MACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IAEN,GACKvvI,IACAC,IACAC,KACC,OACAC,KACA,CAAC,EAAG,QACJC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,MACA,MACA,MACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IAEN,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,OAASC,MAAS,OAASC,MAASC,MAASC,MAASC,IAC/D,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,IAAM,OAASC,MAASC,IACxB,IAAM,OAASD,MAASC,IACxB,IAAM,OAASD,MAASC,IACxB,GAAK,CAAC,EAAG,OAAS,OAAS,CAAC,EAAG,QAAU,CAAC,EAAG,QAAUD,MAASC,IAChE,IAAM,CAAC,EAAG,MACV,IAAM,CAAC,EAAG,MACV,IAAM,CAAC,EAAG,MACV,IAAM,CAAC,EAAG,MACV,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,OAAS,CAAC,EAAG,QAAU,CAAC,EAAG,MACpC,GAAK,CAAC,EAAG,OAAS,CAAC,EAAG,MACtB,GAAK,CAAC,EAAG,KACT,IAAM,CAAC,EAAG,MACV,IAAM,OAAS,OAASC,IACxB,IAAM,OAAS,OAASA,IACxB,GAAK,CAAC,EAAG,OAAS,CAAC,EAAG,MACtB,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GACK/vI,IACAC,IACAC,KACC,OACAC,KACA,CAAC,EAAG,QACJC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,MACA,MACA,MACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IAEN,GAAK,CAAC,EAAG,KACT,IAAM,CAAC,EAAG,MACV,IAAM,CAAC,EAAG,QAAU,CAAC,EAAG,QAAU,OAAS,CAAC,EAAG,MAC/C,GACK,CAAC,EAAG,OACH,CAAC,EAAG,QACJ,OACA,OACA,OACA,OACAS,MACAC,IAEN,IAAM,OAASJ,MAASC,IACxB,IAAM,CAAC,EAAG,MACV,IAAM,CAAC,EAAG,MACV,GAAK,CAAC,EAAG,OAAS,CAAC,EAAG,QAAU,CAAC,EAAG,MACpC,GAAK,CAAC,EAAG,OAAS,CAAC,EAAG,MACtB,GAAK,CAAC,EAAG,IACT,GAAK,CAAC,EAAG,IACT,GAAK,CAAC,EAAG,OAASI,IAClBnrK,EAAEorK,GAAM,CAAC,EAAG,MACZprK,EAAEorK,GAAM,CAAC,EAAG,MACZprK,EAAEqrK,GAAM,CAAC,EAAG,KACZrrK,EAAEqrK,GAAM,CAAC,EAAG,KACZrrK,EAAEorK,GAAM,CAAC,EAAG,MACZprK,EAAEorK,GAAM,CAAC,EAAG,MACZprK,EAAEorK,GAAM,CAAC,EAAG,MACZprK,EAAEorK,GAAM,CAAC,EAAG,MACZprK,EAAEorK,GAAM,CAAC,EAAG,MACZprK,EAAEorK,GAAM,CAAC,EAAG,MACZprK,EAAEorK,GAAM,CAAC,EAAG,MACZprK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZrrK,EAAEqrK,GAAM,CAAC,EAAG,MACZ,GAAK,CAAC,EAAG,QAAUF,IACnB,GAAK,CAAC,EAAG,KACT,IAAMV,MAAS,OAASC,MAASC,MAASC,MAASC,OAAUM,IAC7D,IAAMV,MAAS,OAASC,MAASC,MAASC,MAASC,IACnD,GAAK,CAAC,EAAG,KACT7qK,EAAEsrK,GAAM,CAAC,EAAG,KACZtrK,EAAEsrK,GAAM,CAAC,EAAG,KACZtrK,EAAEsrK,GAAM,CAAC,EAAG,KACZtrK,EAAEsrK,GAAM,CAAC,EAAG,KACZtrK,EAAEsrK,GAAM,CAAC,EAAG,KACZ,GAAK,CAAC,EAAG,KACTtrK,EAAEurK,GAAM,CAAC,EAAG,KACZvrK,EAAEurK,GAAM,CAAC,EAAG,KACZ,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,OAAS,CAAC,EAAG,MACtB,GAAK,CAAC,EAAG,KACT,IAAM,CAAC,EAAG,MACV,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,OAAS,OAASP,IAC3BhrK,EAAEwrK,GAAM,CAAC,EAAG,KACZ,IAAM,CAAC,EAAG,MACV,GAAK,CAAC,EAAG,OAAS,OAASR,IAC3B,GAAK,CAAC,EAAG,KACT,IAAM,CAAC,EAAG,MACV,GACK/vI,IACAC,IACAC,KACC,OACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,MACA,MACA,MACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,OACCW,IAEP,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,MACT,GAAK,CAAC,EAAG,OAAS,OAAS,OAAS,OAAS,OAASF,MAASC,IAC/D,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,OAAS,OAAS,OAAS,OAASD,MAASC,IACtDlrK,EAAEurK,GAAM,CAAC,EAAG,KACZvrK,EAAEurK,GAAM,CAAC,EAAG,IAAK,IACX,MACA,OACA,OACA,OACA,MACDtwI,IACAC,IACAC,KACCC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IAEN,IAAM,CAAC,EAAG,MACV,IAAM,CAAC,EAAG,MACV,GAAK,CAAC,EAAG,OAAS,OAAS,OAAS,OAAS,OAASa,MAASC,IAC/D,GACK,CAAC,EAAG,MACJjwI,IACAC,IACAC,KACCC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACA,OACA,OACA,MACAI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,GAEN,GACK,CAAC,EAAG,MACJnvI,IACAC,IACAC,KACCC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACA,OACA,OACA,MACAI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,GAEN,GAAK,CAAC,EAAG,OAAS,CAAC,EAAG,MACtB,GAAK,CAAC,EAAG,OAAS,CAAC,EAAG,MACtB,GAAK,CAAC,EAAG,OAAS,CAAC,EAAG,MACtB,GACKnvI,IACAC,IACAC,KACCC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACA,CAAC,EAAG,QACJC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACA,MACA,OACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IAEN,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GACKvvI,IACAC,IACAC,KACCC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACA,MACA,OACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IAEN,IAAM,CAAC,EAAG,MACVxqK,EAAEwrK,GAAM,CAAC,EAAG,KACZxrK,EAAEwrK,GAAM,CAAC,EAAG,KACZ,GACK,CAAC,EAAG,MACJvwI,IACAC,IACAC,KACCC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACA,OACA,OACA,MACAI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,GAEN,GACK,CAAC,EAAG,MACJnvI,IACAC,IACAC,KACCC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACA,OACA,OACA,MACAI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,MACCe,IAEP,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,OAAS,OAAS,OAAS,OAASF,MAASC,IACtDlrK,EAAEurK,GAAM,CAAC,EAAG,IAAK,IACX,MACA,OACA,OACA,MACDtwI,IACAC,IACAC,KACCC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IAENpqK,EAAEsrK,GAAM,CAAC,EAAG,KACZ,IAAM,CAAC,EAAG,SAAW,CAAC,EAAG,MACzBtrK,EAAEyrK,GAAM,CAAC,EAAG,MACZ,IAAMhB,MAAS,OAASC,MAASC,MAASC,MAASC,IACnD,IAAMJ,MAAS,OAASC,MAASC,MAASC,MAASC,IACnD,GAAK,CAAC,EAAG,KACT,GACK,CAAC,EAAG,MACJ5vI,IACAC,IACAC,KACCC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACA,OACA,OACA,MACAI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,GAEN,GACK,CAAC,EAAG,MACJnvI,IACAC,IACAC,KACCC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACA,OACA,OACA,MACAI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,GAEN,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACTpqK,EAAEorK,GAAM,CAAC,EAAG,MACZprK,EAAEorK,GAAM,CAAC,EAAG,MACZprK,EAAEorK,GAAM,CAAC,EAAG,MACZ,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,KACT,GAAK,CAAC,EAAG,MACT,IAAM,CAAC,EAAG,MACV,GACK,CAAC,EAAG,MACJnwI,IACAC,IACAC,KACCC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACA,OACA,OACA,MACAI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,GAEN,GACK,CAAC,EAAG,MACJnvI,IACAC,IACAC,KACCC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACA,OACA,OACA,MACAI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,GAEN,GAAK,CAAC,EAAG,OAAS,OAAS,OAAS,OAASa,MAASC,IACtDlrK,EAAEsrK,GAAM,CAAC,EAAG,KACZ,IAAMb,MAAS,OAASC,MAASC,MAASC,MAASC,IACnD,GACK5vI,IACAC,IACAC,KACCC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAmsI,KACAC,KACA,CAAC,EAAG,QACJC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACA,OACA,MACAI,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,GA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"
}
