export default UberMaterial;
declare class UberMaterial {
    constructor(params: any);
    fog: boolean;
    instancedPos: boolean;
    instancedMatrix: boolean;
    attrColor: boolean;
    attrColor2: boolean;
    attrAlphaColor: boolean;
    overrideColor: boolean;
    sphereSprite: boolean;
    cylinderSprite: boolean;
    zClip: boolean;
    clipPlane: boolean;
    fakeOpacity: boolean;
    prepassTransparancy: boolean;
    colorFromPos: boolean;
    shadowmap: boolean;
    shadowmapType: string;
    colorFromDepth: boolean;
    orthoCam: boolean;
    dashedLine: boolean;
    transparent: boolean;
    thickLine: boolean;
    fogTransparent: boolean;
    normalsToGBuffer: boolean;
    toonShading: boolean;
    uberOptions: {
        diffuse: any;
        specular: any;
        shininess: number;
        opacity: number;
        fixedColor: any;
        zOffset: number;
        zClipCoef: number;
        zClipValue: number;
        clipPlaneValue: number;
        world2colorMatrix: any;
        dashedLineSize: number;
        dashedLinePeriod: number;
        projMatrixInv: any;
        viewport: any;
        lineWidth: number;
        fogAlpha: number;
        samplesKernel: any[];
        noiseTex: any;
        noiseTexelSize: any;
        srcTexelSize: any;
        copy(source: any): void;
    };
    precisionString(): string;
    copy(source: any): UberMaterial;
    fragmentShader: any;
    vertexShader: any;
    uniforms: any;
    defines: any;
    extensions: any;
    createInstance(): UberMaterial;
    setValues(values: any): void;
    setUberOptions(values: any): void;
    clone(shallow: any): any;
    updateUniforms(): void;
}
