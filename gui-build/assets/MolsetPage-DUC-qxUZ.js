import{d as _,a as f,r as s,G as h,e as k,z as v,h as t,k as l,i as m,t as u,m as y,F as B,v as M}from"./index-BI4Hwmrn.js";import{u as S}from"./MolGridStore-LnNKbt6F.js";import{_ as C}from"./MolsetViewer.vue_vue_type_script_setup_true_lang-Bm5xzO_F.js";import{B as E}from"./BaseFetching-DhAaNPca.js";import"./MolViewerStore-DxkwOfuX.js";import"./BreadCrumbs-CGepgEeO.js";import"./MolViewer-JGU9clJj.js";import"./MolRender3D-DQpL7o9B.js";import"./initRDKit-WaX80hiK.js";import"./16-yYCC17EQ.js";const F=M("div",{class:"error-msg"},"Something went wrong loading this molecule set.",-1),x={key:0,class:"status-msg"},$=_({__name:"MolsetPage",props:{identifiers:{}},setup(p){const d=f(),r=S(),a=s(!1),e=s(""),n=s(null),g=p;return h(()=>{const i=d.query,c=g.identifiers.split("~");k(v.getMolset_adhoc(c,i),{onSuccess:o=>{r.setMolset(o),r.setContext(null)},onError:o=>{console.log("Error in getMolset()",o)},loading:a,loadingError:e,status:n})}),(i,c)=>a.value?(t(),l(E,{key:0})):e.value?(t(),m(B,{key:1},[F,e.value?(t(),m("div",x,u(n.value)+": "+u(e.value),1)):y("",!0)],64)):(t(),l(C,{key:2,retainCache:!0}))}});export{$ as default};
