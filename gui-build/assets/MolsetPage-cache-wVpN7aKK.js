import{d as g,a as _,r as s,G as h,e as f,z as k,h as t,k as l,i,t as m,m as v,F as y,v as B}from"./index-BI4Hwmrn.js";import{u as M}from"./MolGridStore-LnNKbt6F.js";import{_ as S}from"./MolsetViewer.vue_vue_type_script_setup_true_lang-Bm5xzO_F.js";import{B as C}from"./BaseFetching-DhAaNPca.js";import"./MolViewerStore-DxkwOfuX.js";import"./BreadCrumbs-CGepgEeO.js";import"./MolViewer-JGU9clJj.js";import"./MolRender3D-DQpL7o9B.js";import"./initRDKit-WaX80hiK.js";import"./16-yYCC17EQ.js";const E=B("div",{class:"error-msg"},"Something went wrong loading this molecule set.",-1),F={key:0,class:"status-msg"},P=g({__name:"MolsetPage-cache",props:{cacheId:{}},setup(u){const p=_(),r=M(),a=s(!1),e=s(""),n=s(null),d=u;return h(()=>{const c=p.query;f(k.getMolset(+d.cacheId,c),{onSuccess:o=>{r.setMolset(o),r.setContext(null)},onError:o=>{console.log("Error in getMolset()",o)},loading:a,loadingError:e,status:n})}),(c,o)=>a.value?(t(),l(C,{key:0})):e.value?(t(),i(y,{key:1},[E,e.value?(t(),i("div",F,m(n.value)+": "+m(e.value),1)):v("",!0)],64)):(t(),l(S,{key:2,retainCache:!0}))}});export{P as default};
